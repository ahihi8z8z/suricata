[33mcommit ba8c97bdb9671a890715f36748b0bb8646b58d87[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m)[m
Author: ahihi8z8z <manglienket2001@gmail.com>
Date:   Thu Nov 17 20:32:52 2022 -0800

    dang sua

[33mcommit a4239d433a9804f0893a1e8989211e7ee8b82fef[m[33m ([m[1;31morigin/master[m[33m, [m[1;31morigin/HEAD[m[33m)[m
Author: Jeff Lucovsky <jlucovsky@oisf.net>
Date:   Sun Oct 16 10:13:19 2022 -0400

    detect/bsize: Validate bsize values after parsing
    
    Issue: 2982
    
    This commit moves bsize validation with respect to content matches to
    the post-parse validation stage. This allows bsize to consider all
    content-related values, including those that follow the bsize keyword.

[33mcommit 9d73777a46ddbfd1782753c2d04fbc22767e6de1[m
Author: Jeff Lucovsky <jlucovsky@oisf.net>
Date:   Sun Oct 16 10:12:13 2022 -0400

    bsize/general: Remove unnecessary includes
    
    This commit removes unused/commented out #include lines.

[33mcommit 8b41754acd21892bc64a4b049ced34642caf2a99[m
Author: Jeff Lucovsky <jlucovsky@oisf.net>
Date:   Sun Oct 16 10:08:26 2022 -0400

    add to general: Typo fixup

[33mcommit 8df67011866ccc5525d5676359a342cc1eea40ae[m
Author: Jeff Lucovsky <jlucovsky@oisf.net>
Date:   Tue Aug 9 08:52:34 2022 -0400

    netmap: Fix include file issues

[33mcommit 197ad5113813157c4344671e914bd8d3af023039[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon May 18 09:30:02 2020 -0400

    doc: Update bsize documentation
    
    This commit updates the bsize documentation
    
    1. Describe what happens when "content" immediately precedes "bsize"
    2. Include the operators and
    3. Include examples using the operators.

[33mcommit ecfdc24e081bef69debcd309ae15db65f778aadb[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Jan 27 10:23:55 2022 -0500

    detect/bsize: Semantic validation of bsize values
    
    This commit adds validation of the bsize value(s) with the available
    buffer size. Signatures are flagged if the bsize and buffer size are
    incompatible.
    
    Issue: 3682

[33mcommit 25c0a6ea7c908109ba18b90ca3fcc152b9245057[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon May 18 09:33:58 2020 -0400

    tests/bsize: Test cases with preceding content
    
    This commit adds test cases that validate behavior when "content"
    immediately precedes "bsize".

[33mcommit c91b987732d5616f104e741ad9528b7da42663d2[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Jan 21 09:46:51 2022 -0500

    general: Typo fixup

[33mcommit 115297c01686d460531097e5d644536e75e4a2ea[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Jan 21 09:45:56 2022 -0500

    detect/content: Use SCCalloc instead of malloc/memset
    
    This commit replaces a SCMalloc/memset with SCCalloc

[33mcommit 7eb5fb1826233d7a25720e85baf4ab1baab52c1d[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Feb 13 10:41:09 2021 -0500

    detect/content: Consider distance in validation
    
    Ticket: 2982
    
    This commit validates that the content usage in a rule will not exceed
    the dsize value.
    
    Values of distance that cause the right edge to be exceeded are
    considered an error and the signature will be rejected.

[33mcommit 58e5033a44efcb163619dc95c67021e42a2c1e66[m
Author: Shivani Bhardwaj <shivani@oisf.net>
Date:   Mon Oct 31 18:53:06 2022 +0530

    util/base64: use padding var for calculations

[33mcommit 9dc8fffe050d5e201754789291b6b0ba1ba5dc5a[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Wed Nov 2 19:51:33 2022 +0000

    userguide: update tos keyword information
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 1d9b91a987e0e4e06499a2a74a2d576ab20341e3[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Wed Nov 2 19:41:29 2022 +0000

    userguide: update fragoffset keyword information
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 7c73144988f4c93f668619f4e519e0bed7a26e25[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Fri Oct 28 19:48:18 2022 +0000

    userguide: update fragbits information
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 4be9793e362b5f5f87c998c754c5c32359a63c9b[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Thu Oct 20 21:05:29 2022 +0000

    userguide: update geoip information
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit e8eba6e4a179587702fc671569d2bb4b36f61724[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Tue Oct 11 22:00:21 2022 +0000

    userguide: update id keyword information
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit cfd0da133ee4a343476ba65dd8dbd002ca8d59fa[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Fri Oct 7 20:44:14 2022 +0000

    userguide: update ipv6.hdr keyword information
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 150a04b59742ad6763207bcb559ab19a7b80537e[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Fri Oct 7 20:18:01 2022 +0000

    userguide: update ipv4.hdr keyword information
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 298f59c2ba6c61cc9c0e7086cf6fe4f367b6c47e[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Thu Oct 6 22:05:23 2022 +0000

    userguide: update ip_proto keyword information
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 6226492976a2c6fb96bde9a64882ad2520d1d26a[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Wed Sep 28 23:58:03 2022 +0000

    userguide: update sameip keyword information
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit f97ba443392f145a457a10c0e1a18e9238b84459[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Wed Sep 28 23:00:48 2022 +0000

    userguide: update ipopts keyword information
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 9b4e6e5802db2eab53ac6400a037276f71b05eef[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Wed Sep 21 23:22:44 2022 +0000

    userguide: update ttl keyword information
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit ce710181f608be415c65f07f5b72dc3dacdc5f56[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Thu Nov 10 13:17:49 2022 +0100

    doc: update doc for HTTP file.data to server
    
    Ticket: #4144
    
    Completes e587f6792afdb863cbe57e972bd395443f23d9d9

[33mcommit e1ee401a121029d285163006f2549add6f32b572[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Fri Nov 4 15:35:30 2022 +0100

    quic: use VecDeque
    
    Ticket: #5637

[33mcommit ca6ce935b569bafee5adf88cd77413680a269741[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Nov 9 16:44:26 2022 +0200

    security: disable setrlimit with asan
    
    Various parts of ASAN will require creation of threads. At least
    LSAN reporting and ASAN stack traces require this. Detect if we
    run with ASAN and bypass the noproc setting with a warning.
    
    Bug: #5661.

[33mcommit 41d529fb24f18e142a16abbb5707fff9e916a202[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Thu Nov 3 11:02:07 2022 +0100

    pcre: configurable paths for PCRE2 for include/lib
    
    Ticket: #5572

[33mcommit 8f0d820218585ea450fd87b86e8754f03805cb38[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Nov 1 16:48:13 2022 +0100

    ssl: add debug validation checks for recent changes
    
    Make sure the assumptions are correct.

[33mcommit 3fbcba8ab7c042fd6f802cdeae02cb0c67771c7a[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Wed Oct 5 21:21:41 2022 +0200

    tls: fix buffer overread
    
    Recently introduced by commit 4bab6e24e5e2cef29c9a5a6bee3263e4a3d47e76
    
    Ticket: #5564

[33mcommit 47060839297d3301ee80ae88518cfc0d52d331ed[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Thu Nov 3 16:13:21 2022 +0100

    detect: avoids memory leak on ja3 signature parsing
    
    If a later keyword enforces a protocol incompatible with ja3

[33mcommit c09ca7d171897a515e363465b81efdd7f80d08ed[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Thu Nov 3 13:42:57 2022 +0100

    clean: use SC_MD5_HEX_LEN instead of magic number 32

[33mcommit 7823653a3049bd6c63c5c896b7c97bfd78d0b110[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Thu Nov 3 13:27:10 2022 +0100

    clean: replace MD5_STRING_LENGTH with more used SC_MD5_HEX_LEN

[33mcommit 5a0d07b13fe62a3b31cf56d7cee1f814ec188836[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Thu Nov 3 13:26:07 2022 +0100

    clean: remove useless * sizeof(char)

[33mcommit f75d18b0772e693b7def7748385f9ffa8a9479d0[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Thu Nov 3 13:20:25 2022 +0100

    quic: ja3 code deduplication
    
    As quic transactions are unidirectional, the same function is
    used to get ja3 from client or from server.

[33mcommit 7cb40a1dfc4695ad27e187c704de29a4bb2eacef[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Fri Oct 28 21:57:11 2022 +0200

    quic: allow ja3.hash keyword
    
    Ticket: #5624

[33mcommit 286bd2a7ed7dc1bd18db40021142714ed371e5d4[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Fri Nov 4 11:13:07 2022 +0100

    rust: fix cargo clippy --all-features

[33mcommit bc287018e53a2b263789338516a9c310ecd789b3[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Fri Nov 4 09:38:51 2022 +0100

    rust: cargo clippy --all-features --fix --allow-no-vcs

[33mcommit ce66c26afc0c7043cbda48223a0bb95dc1d03cca[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Thu Nov 3 21:34:37 2022 +0100

    ci: cargo clippy run option
    
    As clippy does not recognize git which is above

[33mcommit cd4bf518f3b8d034b46a53301c8e2437dc5a842d[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Thu Nov 3 15:35:22 2022 +0100

    rust: fix warnings on rustc 1.67.0-nightly
    
    warning: for loop over an `Option`. This is more readably written
    as an `if let` statement

[33mcommit aeb0c0e71a998aceaad5140fa106e8609b1683ee[m
Author: Daniel Young <daniel.richard.young@gmail.com>
Date:   Mon May 23 15:41:48 2022 -0400

    detect/parse-port: fix whitespaces bug
    
    Updated by Victor Julien to:
    - accept but strip leading whitespaces
    - update tests
    - cleanup tests

[33mcommit ea85e2ccf2a0c790d21e748fdd74ad05d3efa947[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Wed Jul 27 09:21:51 2022 +0200

    detect/filename: fix buffer description

[33mcommit 82dba07579fcd188bc537b57c52eea4974f2d9e1[m
Author: Shivani Bhardwaj <shivani@oisf.net>
Date:   Mon Sep 26 10:14:51 2022 +0530

    src: remove unneeded header and refs

[33mcommit df45fc9e97f49398d4dd0994c436bd38254689ee[m
Author: Haleema Khan <hsadia538@gmail.com>
Date:   Sat Oct 29 03:34:05 2022 +0500

    detect-l3proto: Convert unittests to new FAIL/PASS API
    
    Ticket: #4050

[33mcommit d46ce170ba5dc58c90381a96d119c329fc5852e0[m
Author: Alice Akaki <akakialice@gmail.com>
Date:   Fri Oct 28 15:16:58 2022 -0400

    detect-icmp-seq: clean-up unittests
    
    Task: #5597

[33mcommit 4e1ff9a7ff96554e82d159243e6c1eaf68b502d1[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Sun Oct 30 13:08:06 2022 +0100

    flow: fix FlowSwapFileFlags function
    
    Ticket: #5625

[33mcommit 160c778a1f15194110589787d8c84f8535ec5902[m
Author: Haleema Khan <hsadia538@gmail.com>
Date:   Fri Oct 21 07:45:49 2022 +0500

    detect-filesize: Convert unittests to new FAIL/PASS API
    
    Ticket: 4039

[33mcommit f25d4cc54671cac29fd11cc4f03892be4f0353df[m
Author: Haleema Khan <hsadia538@gmail.com>
Date:   Mon Oct 24 02:32:56 2022 +0500

    detect-distance: Convert unittests to new FAIL/PASS API
    
    Ticket : #4020

[33mcommit a654ef50de255628c7a6b5f08521908ecedc24e2[m
Author: Juliana Fajardini <jufajardini@oisf.net>
Date:   Sun Oct 23 21:58:42 2022 -0300

    pgsql: add test for parameter status parser
    
    Since we've done some changes to how the parameters are parsed, add one
    more test case to check that.
    
    Bug #5579

[33mcommit c4fbd787707aaade099dc6d1c8524ed87dac0029[m
Author: Juliana Fajardini <jufajardini@oisf.net>
Date:   Wed Sep 7 16:41:48 2022 -0300

    pgsql: move database into opt parameters list
    
    For StartupMessages, the database parameter is optional. This moves the
    parameter into the optional_parameters list.
    
    Bug #5579

[33mcommit 84f9ea7254be3c5fc7c9d5966191c854154e03f3[m
Author: Juliana Fajardini <jufajardini@oisf.net>
Date:   Wed Sep 7 15:52:42 2022 -0300

    eve/schema: pgsql - allow flexible parameters list
    
    Pgsql's parameters - for message types like StartupMessage and
    ParameterStatus, for instance, don't have a finite, definitive set, as
    per their documentation. Our json schema was allow expecting a fixed set
    of parameters, though, resulting in SV tests failing if different, valid
    parameters appeared.
    
    Bug #5579

[33mcommit cc6889853284901566742d311142db3eef2b87fc[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Fri Aug 26 14:02:16 2022 +0200

    pgsql: support empty parameter values
    
    Bug #5579

[33mcommit 1e0190bc6b2e113617e7706294ce4a3fe177a1e5[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Fri Aug 26 14:00:40 2022 +0200

    pgsql: support out of order parameters for startup message
    
    As user can be not the first parameter
    
    Bug #5579

[33mcommit f251b6af6537abe6522bd6121560a37c81e2cbe7[m
Author: Alice Akaki <akakialice@gmail.com>
Date:   Sat Oct 22 13:07:04 2022 -0400

    detect-icmp-id: convert unittests to FAIL/PASS APIs
    
    Task: #4042

[33mcommit 1fdd56a61dc3fd4a17302021e22c9af56ae912da[m
Author: Haleema Khan <hsadia538@gmail.com>
Date:   Fri Oct 21 07:16:45 2022 +0500

    detect-itype: Convert unittests to new FAIL/PASS API
    
    Bug: #5589

[33mcommit 6a9b7cf97795d58f5e71300d2b99d397ed3df3b7[m
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Thu Oct 13 19:33:12 2022 +0000

    github-actions: bump actions/cache from 3.0.10 to 3.0.11
    
    Bumps [actions/cache](https://github.com/actions/cache) from 3.0.10 to 3.0.11.
    - [Release notes](https://github.com/actions/cache/releases)
    - [Changelog](https://github.com/actions/cache/blob/main/RELEASES.md)
    - [Commits](https://github.com/actions/cache/compare/v3.0.10...9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7)
    
    ---
    updated-dependencies:
    - dependency-name: actions/cache
      dependency-type: direct:production
      update-type: version-update:semver-patch
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

[33mcommit 6673846481067bded4fba3bb00d927aee7d542bb[m
Author: Simeon Miteff <simeon.miteff@corelight.com>
Date:   Thu Sep 29 09:38:07 2022 +1000

    profiling: Make rule_perf.log JSON output newline-delimited
    
    Adding a newline makes the output valid JSON when multiple sortings of
    the rules profile object are written to the log.

[33mcommit 5a6e68285babd78dd574f7569980b5418acdca5e[m
Author: Jeff Lucovsky <jlucovsky@oisf.net>
Date:   Sat Oct 22 12:59:22 2022 -0400

    doc/netmap: Describe Netmap IPS usage
    
    Issue: 5512
    
    This commit summarizes Netmap usage with Suricata's IPS mode.

[33mcommit 9d653512f9845805b9ca67803a298e797f610af3[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Sep 13 09:36:01 2022 -0600

    doc/userguide: update bittorrent-dht eve examples
    
    Update the bittorrent-dht examples using real log records with peers
    and nodes broken down into objects.

[33mcommit e3e7d007b204ba4f6f5a1c825cd989f4bc71ae6d[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Sep 8 12:08:26 2022 -0600

    eve/schema: bittorrent-dht updates
    
    Some values that were previously strings are now parsed down into
    objects.

[33mcommit 1f056f9974ef14ac53570803e99b4532a24614ac[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Sep 8 11:15:38 2022 -0600

    bittorrent-dht: parse and log node6 lists
    
    Node6 lists are just like node lists, but for IPv6 addresses.

[33mcommit 86d5ab8644d5a73774873a26378bdcb5e9fcb29b[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Sep 8 12:39:31 2022 -0600

    bittorrent-dht: remove tests that are no longer valid

[33mcommit 2f9eb5d1dd5fb6319eb184703890cbb013b72a65[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Sep 8 10:42:15 2022 -0600

    bittorrent-dht: fix values decoding, as a list of peers
    
    The "values" field is not a string, but instead peer information in
    compact format. Decode this properly and then properly format in the
    log.

[33mcommit 4a0859beeb73b25e0bc8eef691eec15ad738a63d[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Sep 8 10:41:10 2022 -0600

    jsonbuilder: add append_hex - add hex to array
    
    New method, append_hex to add a byte array to a JSON array in hex
    encoding.

[33mcommit 4bc9cf39863e1bcfb69eddb10fecc642847be495[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Sep 8 08:59:11 2022 -0600

    bittorrent-dht: parse token and target as byte values

[33mcommit 5a30ee77a1fa591133e85e6eb20df5e5e57648f8[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Sep 7 16:46:20 2022 -0600

    bittorrent-dht: only attempt to parse dht messages
    
    The bittorrent flow is shared with transport messages as well as dht
    messages. Only attempt to parse dht message as dht, ignore the rest.

[33mcommit 98a939121052fc9207f0c39d49a41788210df476[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Sep 7 08:51:28 2022 -0600

    bittorrent-dht: decode node data structures
    
    Instead of decoding the nodes field into a blog of bytes, decode it into
    an array of node info objects, each with a node id, IP address and port.

[33mcommit 3cb50592ed8709b876821963b8a7bf7a317d5f67[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Aug 17 17:20:00 2022 -0600

    bittorrent-dht: convert some fields to byte arrays
    
    Some fields that were previously strings are not always value UTF-8
    data, instead the protocol specification refers to them as strings of
    bytes, so in other words byte arrays.
    
    Currently fields converted are:
    - client_version
    - info_hash
    - response.id
    - request.id
    - nodes
    - token

[33mcommit 065f3ab9f1ab0798adc885f998b8b4489bc08a84[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Aug 12 10:30:00 2022 -0600

    doc: rename bittorrent-dht to bittorrent_dht in eve output

[33mcommit 0d3cfbbe3f73b0f64c7ca18ed8c0b3a502e7e75a[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Aug 12 10:27:45 2022 -0600

    bittorrent-dht/eve: log as bittorrent_dht

[33mcommit 66fc92276afde354543be8d6424e48e1568ff520[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Aug 12 10:03:58 2022 -0600

    eve-schema: add bittorrent-dht

[33mcommit 78ba17caa80ef3267b1dfb1d4b8381639fc429e8[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Aug 10 17:06:51 2022 -0600

    bittorrent-dht: register a pattern for protocol detection
    
    Removes the port based probing which takes a long time to register for
    ports 1024-65535 and instead use pattern based protocol detection.

[33mcommit 350c0723d70623d8724d8f878a80bb270fd39445[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Aug 10 11:49:06 2022 -0600

    bittorrent-dht: set parser to unidirectional
    
    This parser does not match up responses with requests so flag it as
    unidirectional.

[33mcommit 0ea9ba66d1ee0a6fdccedd6040888c09f98abd1b[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Aug 10 11:42:42 2022 -0600

    userguide/eve-log: remove mentions of requiring Rust
    
    Rust is required to build now.

[33mcommit 06eaec67acec6b7b6b518aba3adb9ba9345f4e27[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Aug 10 09:49:19 2022 -0600

    bittorrent: updates for new event handling
    
    Fixes anomaly events.

[33mcommit d166c48d28b9268c28dc18d27104d0ba189ca365[m
Author: Aaron Bungay <amb240h@gmail.com>
Date:   Fri Feb 12 01:22:11 2021 +0000

    docs: update for bittorrent-dht app-layer

[33mcommit 86037885a90a4919a7adb4593364b274e3f596f7[m
Author: Aaron Bungay <amb240h@gmail.com>
Date:   Fri Jun 5 00:17:36 2020 -0400

    bittorrent-dht: add bittorrent-dht app layer
    
    Parses and logs the bittorrent-dht protocol.
    
    Note: Includes some compilation fixups after rebase by Jason Ish.
    
    Feature: #3086

[33mcommit 27672c950c3721527b4a48a1bf5eb116ea85df60[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Oct 13 15:51:10 2022 -0600

    dnp3: fixups to work with unified json tx logger
    
    Update DNP3 to work with a single TX logger, and just register one
    logger instead of 2.
    
    This primarily creates a TX per message instead of correlating replies
    to requests, which fits the DNP3 model better, but we didn't really have
    this concept nailed down when DNP3 was written.

[33mcommit 2f9ca8bb34b2d15949bfc117e07ecbf7ab19d542[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Oct 27 13:00:25 2022 +0200

    dpdk: set new running flag at thread startup

[33mcommit 91b7b63ed2345e543a31f150b419874257216193[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Oct 27 12:17:11 2022 +0200

    threads: count thread types after all initialized
    
    To avoid double counting in case a thread took longer than
    expected to start up.

[33mcommit 6621b0ec93ab80a4fcfabeac70891fe282b569ef[m
Author: Alice Akaki <akakialice@gmail.com>
Date:   Tue Oct 25 15:41:56 2022 -0400

    detect-icmp-seq: convert unittests to FAIL/PASS APIs
    
    Task: #4043

[33mcommit 8d5c5f24a184ed412d1d78f1c0346b205f80fe6b[m
Author: Haleema Khan <hsadia538@gmail.com>
Date:   Sat Oct 15 09:17:42 2022 +0500

    dns/eve: add 'HTTPS' type logging
    
    Add a new DNS record type to represent HTTPS
    Ticket: #4751

[33mcommit b1972a5c61aa22bc0f275ede4af169c792a7df6e[m
Author: Haleema Khan <hsadia538@gmail.com>
Date:   Mon Oct 24 20:39:08 2022 +0500

    detect-itype: remove unittests
    
    Ticket: #5590

[33mcommit 4b009eb9073889f792a4e9dd4d01425681083089[m
Author: Gabriel Lima Luz <gabriel.luz.lima@hotmail.com>
Date:   Mon Oct 24 11:04:31 2022 -0300

    detect-replace: Convert unittests to FAIL/PASS API
    
    Ticket: 4054

[33mcommit a003640ecf190b02ab29f90c266d8b2a77dcbb78[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri May 13 14:52:06 2022 +0200

    security: prevents process creation
    
    with setrlimit NPROC.
    
    So that, if Suricata wants to execve or such to create a new process
    the OS will forbid it so that RCE exploits are more painful to write.
    
    Ticket: #5373

[33mcommit 2ab3646fad6c01d1a32f4225a0206f0674c23be6[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Oct 13 09:06:11 2022 -0600

    profiling: sort LoggerId's in same order as defined
    
    Sort the LoggerId's in the order they are define in suricata-common.h.

[33mcommit 99cb8c666af489870cbaf1e9d58d5bd46de4753e[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Oct 5 15:06:53 2022 -0600

    loggers: all json tx loggers can share the same loggerid
    
    This is to avoid the tx logging code that doesn't support LoggerId
    values over 31 at this time. The simplest fix for now is to just have
    all JSON (eve) loggers use the same ID.
    
    DNP3 is left as-is for now as it needs some extra support in the parser.

[33mcommit 9c2939fb33a4e66d26be996df4491b3b7ec10759[m
Author: Richard McConnell <Richard_McConnell@rapid7.com>
Date:   Tue Oct 4 17:18:05 2022 +0100

    workflow: add systemd integration and check
    
    Intergration of systemd is a feature that enables notification of
    a running service to the service manager. The workflow now ensures
    compilation with systemd and checks the binary has been built against
    libsystemd.

[33mcommit 7f4c1d5e2fc03a81cee193918b8da8ee3243f5a6[m
Author: Richard McConnell <Richard_McConnell@rapid7.com>
Date:   Tue Oct 4 17:16:40 2022 +0100

    doc/systemd: add documentation for sd_notify

[33mcommit 88b98a54df26a631aa95ea800002c751024e5230[m
Author: Richard McConnell <Richard_McConnell@rapid7.com>
Date:   Tue Oct 4 17:15:21 2022 +0100

    suricata: add sd_notify support
    
    Upon all threads reaching a running state the system generates
    a notification for systems running and configured for systemd
    
    Implements feature 5384
    (https://redmine.openinfosecfoundation.org/issues/5384)

[33mcommit 13beba141c98debc4d7e29081c91a799362f19fb[m
Author: Richard McConnell <Richard_McConnell@rapid7.com>
Date:   Tue Oct 4 17:13:01 2022 +0100

    source: add THV_RUNNING flag to notify of running state
    
    Each module (thread) updates its status to indicate running.
    Main thread awaits for all threads to be in a running state
    before continuing the initialisation process
    
    Implements feature 5384
    (https://redmine.openinfosecfoundation.org/issues/5384)

[33mcommit 9fb0137d9dabfb9c4d66d22c9aa038175d7b3e43[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Mon Aug 22 23:46:01 2022 +0200

    doc: add reference to ipaddr in IP matching

[33mcommit 94664ef56515952fd4e0f59b8697d622e11f032b[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Fri Jul 15 12:33:09 2022 +0200

    datasets: don't exit on invalid data

[33mcommit 3bd48d93366e2632b931c564713d57e939864d06[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Sun Jul 10 20:31:00 2022 +0200

    detect: doc link for ip.src and ip.dst

[33mcommit da8b16eaeb44f156bfb29c4994b00f880bf19933[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Sun Jul 10 19:05:18 2022 +0200

    doc: add ip.dst and ip.src doc

[33mcommit 3599cbf1c4fe167fe1611d457d8b0e827134bb79[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Sat Jun 4 23:00:14 2022 +0200

    doc: document new dataset types
    
    Feature: #5383

[33mcommit 7518204ad4af976acecec3353e588af797528e0e[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Tue May 31 18:53:17 2022 +0200

    datasets: introduce new IPv6 type
    
    This patch also simplifies IPv6 parsing.
    
    Feature: #5383

[33mcommit 6fe9d510cf900c74f3cd0f7ef0ead3a4c94371ad[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Tue May 31 17:43:24 2022 +0200

    detect: add ip.dst keyword as sticky buffer
    
    Feature: #5383

[33mcommit 7e516aad94bd2dec45aa9da8f295629747b56404[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Sat Jun 11 23:28:37 2022 +0200

    detect: add ip.src keyword
    
    It is a sticky buffer matching on src_ip.
    
    Feature: #5383

[33mcommit b2cdc6c899a1712fe8caf4e95ea7984b0ea00665[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Sun May 15 12:39:01 2022 +0200

    datasets: introduce ipv4 type
    
    This patch introduce the IPv4 type for dataset so Suricata commandmatch
    on a set of IPv4 addresses. This is meant to complement iprep feature
    for people that needs more flexibility such as settings the IP on
    the packet path.
    
    Feature: #5383

[33mcommit a9c05c7d96c0973684f9f0fef794c5dba9c18339[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jan 19 22:00:54 2021 +0100

    datasets: factorize serialised operations
    
    Ticket: #5184

[33mcommit a1a22cccd27cb215b60a49bd9a02cf588e35817c[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 18 23:41:55 2021 +0100

    doc: document dataset-lookup
    
    Ticket: #5184

[33mcommit 537fd76787cdc0b9c6e17b53ec8dd398ea2f9e30[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jan 26 21:29:07 2021 +0100

    suricatasc: add dataset-lookup command
    
    Ticket: #5184

[33mcommit 843dba0a28ce5b1b4286e897c0f5fcec6bd41ca0[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 18 23:39:09 2021 +0100

    datasets: add dataset-lookup command
    
    Ticket: #5184

[33mcommit 20973e9e6b2e0216e85f56a423e408845ae30b7d[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 18 22:55:31 2021 +0100

    doc: add dataset-clear command
    
    Ticket: #5184

[33mcommit b63f9e7e93b6a0c072213f0ad95651935e523e8c[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 18 22:48:47 2021 +0100

    suricatasc: add dataset-clear command
    
    Ticket: #5184

[33mcommit 2f25e48897f0e1e8177c252d022dd25a3e22853e[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 18 22:11:15 2021 +0100

    datasets: add dataset-clear command
    
    Ticket: #5184

[33mcommit c5559cb68f3bb6c2366f4dee567bbdaf39b64f11[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jan 5 22:03:52 2021 +0100

    doc: document dataset-dump command
    
    Ticket: #5184

[33mcommit a480abcdd03d8dadfd45e6d4a4eb78dae41ad08e[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Dec 29 00:43:01 2020 +0100

    datasets: add dump via unix socket
    
    This patch adds a dataset-dump command to the list of unix socket
    commands. Implementation is not optimal as we are locking the
    datasets when doing the dump. But if we consider that the current
    alternative from an implementation point of view is to stop Suricata
    then this is far better than current state.
    
    Ticket: #5184

[33mcommit 79a78611ad5c2a27c479fdbc4846a17ff048d3ee[m[33m ([m[1;33mtag: suricata-7.0.0-beta1[m[33m)[m
Author: Shivani Bhardwaj <shivani@oisf.net>
Date:   Wed Oct 26 16:39:22 2022 +0530

    release: 7.0.0-beta1; update changelog

[33mcommit 1fafb83fed2b03c9f8730f6cd191a6b4299ff489[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Oct 21 21:22:23 2022 +0200

    packet: turn tunnel lock into spinlock
    
    Lock is only held to update/check ints, so spin lock will be more
    efficient.
    
    Place the member of Packet in a new "persistent" area to make it
    clear this is not touched by the PacketReinit logic.
    
    Ticket: #5592.

[33mcommit 57e70841c499277e2fb91c3a554982f385cd00b5[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Oct 25 09:21:04 2022 +0200

    stream/tcp: remove obsolete and commented out tests

[33mcommit e72770c1b27cce4cb1c13c7c1b252d8c39897348[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Oct 25 09:18:47 2022 +0200

    decode/vxlan/tests: don't memset new packet

[33mcommit edf93ae5b6ab8e05acbaeb3d357b6f2d48a66258[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Oct 25 09:16:27 2022 +0200

    decode/mpls/tests: improve pkt handling; cleanups

[33mcommit 0f7fe2a4c30e4e700abe93013fd5ab7574610ea4[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Oct 25 09:15:46 2022 +0200

    app-layer/tests: don't memset new packet

[33mcommit 2f6c014f706f85242f7511a2c689f5594cc4439e[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Oct 25 09:07:58 2022 +0200

    doc/devguide: update packet (de)alloc in unittests

[33mcommit 6dc53447f1da6475475665d440c74300e0701d38[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Oct 25 09:05:17 2022 +0200

    decode/geneve/tests: don't memset packet
    
    Packet is already initialized.

[33mcommit b07c7ad14c438026f52fc34fe25d6a89dfb5ec2c[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sat Oct 22 14:33:05 2022 +0200

    threading: improve/add thread queues explanations

[33mcommit 951bcde0b2c87ac5588081fd68daa3c717963de6[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Oct 21 21:21:28 2022 +0200

    eve/alert: remove tunnel locking
    
    Tunnel lock is only used to sync verdict logic.

[33mcommit 0e7adc21a64cc07f463311883c77a50d4bac15e7[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Oct 21 20:54:24 2022 +0200

    decode: alloc packets using calloc

[33mcommit 68a9da52ad8b3c99958ce531ed829641558b9551[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Oct 21 20:53:17 2022 +0200

    packetpool: remove PKT_ALLOC flag
    
    Use Packet::pool instead. If Packet::pool is non-NULL the packet is
    owned by a pool. Otherwise it is allocated and should be freed after
    use.

[33mcommit 3ed7b4473edc74d3f95e0302da22f30d26c38b39[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Oct 21 12:05:06 2022 +0200

    runmodes: remove dead error check

[33mcommit 9d3c60bde361bb1e9dc2eba0e6d168b0b84d7f3f[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Oct 21 11:38:36 2022 +0200

    smtp/mime: no error logging in packet path

[33mcommit 256f0f2c5ceedc1c77b96ef5fdc2b33635817504[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Oct 21 11:38:10 2022 +0200

    defrag: no error logging in packet path

[33mcommit 8f02a3e4152b12cad753f4846c9324a2ccd09647[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Oct 24 20:20:30 2022 +0200

    applayer: make sure to use correct ipproto

[33mcommit dba7103a968a9ebd1c139cc32c9b5299a70e7527[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Oct 24 14:28:50 2022 +0200

    eve/alert: use flow proto to avoid crash on ICMP

[33mcommit 51c0714d71902c82555de18099a6d69a13566bed[m
Author: Alice Akaki <akakialice@gmail.com>
Date:   Sat Oct 22 09:30:28 2022 -0400

    detect-filemd5: convert unittests to FAIL/PASS APIs
    
    Task: #4035

[33mcommit fe31d51c3011560e9ad9eaf71d6e3faa2db16cb2[m
Author: Alice Akaki <akakialice@gmail.com>
Date:   Sat Oct 22 09:14:23 2022 -0400

    detect-filesha256: convert unittests to FAIL/PASS APIs
    
    Task: #4038

[33mcommit c3c8472d097fb20cd67046d406438c04e5ed3aac[m
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Fri Oct 21 20:00:34 2022 +0000

    github-actions: bump actions/upload-artifact from 3.1.0 to 3.1.1
    
    Bumps [actions/upload-artifact](https://github.com/actions/upload-artifact) from 3.1.0 to 3.1.1.
    - [Release notes](https://github.com/actions/upload-artifact/releases)
    - [Commits](https://github.com/actions/upload-artifact/compare/3cea5372237819ed00197afe530f5a7ea3e805c8...83fd05a356d7e2593de66fc9913b3002723633cb)
    
    ---
    updated-dependencies:
    - dependency-name: actions/upload-artifact
      dependency-type: direct:production
      update-type: version-update:semver-patch
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

[33mcommit 0b0616528fb84298df330cb79762aaa20543e120[m
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Fri Oct 21 20:00:29 2022 +0000

    github-actions: bump actions/download-artifact from 3.0.0 to 3.0.1
    
    Bumps [actions/download-artifact](https://github.com/actions/download-artifact) from 3.0.0 to 3.0.1.
    - [Release notes](https://github.com/actions/download-artifact/releases)
    - [Commits](https://github.com/actions/download-artifact/compare/fb598a63ae348fa914e94cd0ff38f362e927b741...9782bd6a9848b53b110e712e20e42d89988822b7)
    
    ---
    updated-dependencies:
    - dependency-name: actions/download-artifact
      dependency-type: direct:production
      update-type: version-update:semver-patch
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

[33mcommit ccdc992a71887b89606b141cf3767b27df16d01d[m
Author: Alice Akaki <akakialice@gmail.com>
Date:   Fri Oct 14 00:06:31 2022 -0400

    rust: fix lint warnings about mixed case hex literals
    
    Ticket: #4593

[33mcommit 4e90d17fd9c87eac848bb2bba6adce28fb79c5ec[m
Author: Gabriel Lima Luz <gabriel.luz.lima@hotmail.com>
Date:   Fri Oct 14 13:17:31 2022 -0300

    rust: fix lint warnings about if same then else
    
    Ticket: 4609

[33mcommit 9cd00424c301e89f3009207ca7f85ba94be7519c[m
Author: Kristina Jefferson <kristina.m.jefferson@gmail.com>
Date:   Thu Oct 13 14:28:15 2022 -0500

    rust: fix lint warnings about ptr_arg
    
    Ticket: #4599

[33mcommit 21bb697bc98fc5c99788e0947d55f22125decd8f[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Oct 14 11:59:20 2022 -0600

    rust: fix clippy lint for unneeded late initialization

[33mcommit 7cca238128095ea9a5312c268cba151ad67305eb[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Oct 14 11:54:07 2022 -0600

    rust: fix clippy lint for cmp_null is debug code
    
    Ticket: 5577

[33mcommit f0952aef0d883b50aba6f51149b1cea5c061c542[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Oct 14 11:42:22 2022 -0600

    rust: fix clippy lints for unneeded reference in debug code

[33mcommit 6a7439a26b7758a5b4abe82c9ce8437716941985[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Oct 14 11:38:20 2022 -0600

    rust: fix clippy lints for is_empty in debug code

[33mcommit a11f51f4d371182c73d7ea1e68bb214add4e23a9[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Oct 6 12:23:24 2022 -0600

    github-ci: running clippy with all features
    
    Without it, it own't see the usage of variables in SCDebugLog macros,
    etc.

[33mcommit 560c4ea125179946a24cd23f264dbf0ae7030668[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Oct 5 09:36:45 2022 -0600

    rust: don't allow fixed up clippy lints

[33mcommit 6db85d6f8976ccc3c9c354904049954d7d9883cf[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Oct 5 09:30:54 2022 -0600

    rust: clippy fix for bitwise or with 0

[33mcommit 04f0ee015179587f40225b29910539a600e838e0[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Oct 5 09:07:07 2022 -0600

    rust: fix clippy lints for clippy::unnecessary_cast

[33mcommit b6cc0e25b18c8ccc553857b1bc27839d52dfffac[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Oct 5 09:06:01 2022 -0600

    rust: fix clippy lints for clippy::redundant_static_lifetimes

[33mcommit 13db83274bce59a6999942d06e775e687db88ed6[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Oct 5 09:05:45 2022 -0600

    rust: fix clippy lints for clippy::redundant_pattern_matching

[33mcommit 7ba1d3e300d19f3507b477a73112ec105ebf5d08[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Oct 5 09:05:12 2022 -0600

    rust: fix clippy lints for clippy::nonminimal_bool

[33mcommit 6ba0a67143460d8f1cdce7ea53370a02d76259b4[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Oct 5 09:02:39 2022 -0600

    rust: fix clippy lints for clippy::map_flatten

[33mcommit 7ebdfa539aad9b56a605cf73cba07da35e2ed8e3[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Oct 5 09:02:21 2022 -0600

    rust: fix clippy lints for clippy::manual_find

[33mcommit 119e02cf8199210aaf4c6b1af5f46689a7ce5726[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Oct 5 09:00:21 2022 -0600

    rust: fix clippy lints for clippy::collapsible_if

[33mcommit 572505870af3463ed36d629dd48a5bdcd2e88e10[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Oct 5 09:00:04 2022 -0600

    rust: fix clippy lints for clippy::collapsible_else_if

[33mcommit 6b71d69356b9930d70e703e1777755e9ee20840f[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Oct 5 08:59:48 2022 -0600

    rust: fix clippy lints for clippy::bool_comparison

[33mcommit e373d9f5e0cb8dac3bff5df31d21698b3ea231e2[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Oct 5 08:59:31 2022 -0600

    rust: fix clippy lints for clippy::crate_in_macro_def

[33mcommit 565da0d0af7011dd31318c25b1420c10a053d3e3[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Oct 5 08:58:55 2022 -0600

    rust: fix clippy lints for clippy::redundant_field_names

[33mcommit 5f7ba03e6336f1608db97da80774473f00ed71e2[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Oct 5 08:58:38 2022 -0600

    rust: fix clippy lints for clippy::needless_bool

[33mcommit 3ec435a70397b6215e6e2af01b46c7be7bae6278[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Oct 5 08:58:03 2022 -0600

    rust: fix clippy lints for clippy::manual_range_contains

[33mcommit f342d4aacdf27737517f2467c545a3206df67858[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Oct 5 08:57:27 2022 -0600

    rust: fix clippy lints for clippy::len_zero

[33mcommit 5e5401d3e97daa5f66da95f6634ae59574cf92dc[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Oct 5 08:53:02 2022 -0600

    rust: fix clippy lints for clippy::char_lit_as_u8

[33mcommit 29a4a7fddc1b181bd4d821868ec2f8440d66b775[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Oct 5 08:52:44 2022 -0600

    rust: fix clippy lints for clippy::assign_op_pattern

[33mcommit c4034dafa19c9c63fb0f0ef1e0b65c26dec43a44[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Oct 5 08:52:14 2022 -0600

    rust: fix clippy lints for clippy::derive_partial_eq_without_eq

[33mcommit 5a10fcd2d8320c118eee84c63650c8b18bd80764[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Oct 4 09:26:37 2022 -0600

    rust: suppress large enum variant lint at location
    
    And disable the global lint.

[33mcommit 74b7522b6ac850a609e3ee9959e0f73ade12fb5d[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Oct 4 09:13:25 2022 -0600

    rust/http2: box decompressor variants
    
    These variants, in particular the Brotli one can be large at over 2500
    bytes which is allocated no matter which decompressor is being used.
    
    Gzip comes in at over 500 bytes.  Box deflate for consistency.

[33mcommit 36f8ada30597816bdee6d7dceb9bdefe851f1ae5[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Oct 4 08:29:28 2022 -0600

    rust: remove clippy lints that no longer warn

[33mcommit e8c00dd98077dea53b2c26667e8be1e1f636a9e1[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Oct 4 08:16:04 2022 -0600

    rust: sort clippy allow statements

[33mcommit 698816811406572c443ca1e95c309d292f489376[m
Author: Haleema Khan <hsadia538@gmail.com>
Date:   Wed Oct 19 04:10:02 2022 +0500

    src: Use WARN_UNUSED for ByteExtract* functions
    
    Add WARN_UNUSED macro for ByteExtract* functions
    Fix warning raised in code related to WARN_UNUSED for ByteExtract*
    
    Ticket: #3658

[33mcommit cb8c9d9617c75f51f19301f59bc6e9c97bfd5f74[m
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Wed Oct 19 19:44:18 2022 +0000

    github-actions: bump ossf/scorecard-action from 2.0.4 to 2.0.6
    
    Bumps [ossf/scorecard-action](https://github.com/ossf/scorecard-action) from 2.0.4 to 2.0.6.
    - [Release notes](https://github.com/ossf/scorecard-action/releases)
    - [Changelog](https://github.com/ossf/scorecard-action/blob/main/RELEASE.md)
    - [Commits](https://github.com/ossf/scorecard-action/compare/e363bfca00e752f91de7b7d2a77340e2e523cb18...99c53751e09b9529366343771cc321ec74e9bd3d)
    
    ---
    updated-dependencies:
    - dependency-name: ossf/scorecard-action
      dependency-type: direct:production
      update-type: version-update:semver-patch
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

[33mcommit 76024f757112ec92153c6276d70d3ac05f1ac651[m
Author: Alice Akaki <akakialice@gmail.com>
Date:   Mon Oct 17 17:44:15 2022 -0400

    detect-filename: convert unittests to FAIL/PASS APIs
    
    Task: #4036

[33mcommit 8614bff0178659bcd2c94e49d3aba50a30fe7844[m
Author: Alice Akaki <akakialice@gmail.com>
Date:   Tue Oct 18 12:11:57 2022 -0400

    detect-filemagic: convert unittests to FAIL/PASS APIs
    
    Task: #4034

[33mcommit 37cf365e19cf6288153ac467592c23d68195d28f[m
Author: Lukas Sismis <lsismis@oisf.net>
Date:   Mon Oct 17 10:01:37 2022 +0200

    docs: remove outdated constraint of negation support for ssl_state
    
    Commit 487cdda93d1836acc33323c3b57135c1844a8f41 adds negation support for the SSL state.

[33mcommit 55cf11fdc2ede6bbd89d387fa8ec9f4524c72e46[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Oct 20 07:41:09 2022 +0200

    flow/storage: use const for getter

[33mcommit 99fd69ee8caec49898a43e42926745fe87de8509[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Oct 20 07:38:37 2022 +0200

    eve: mac logging code cleanup

[33mcommit 2d79a5206bd7d86aef8c0a2dc713405b259dc7e3[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Oct 19 12:29:05 2022 +0000

    eve/drop: log direction if we have a flow

[33mcommit 90f3823cadf76378f292c03b389986e12acf1aad[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Oct 19 12:26:53 2022 +0000

    eve: log mac addresses in packet direction

[33mcommit f1068bbb08b6b3a50126cec32142d744a39ed712[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Oct 19 12:18:20 2022 +0000

    dpdk: fix timestamp issues
    
    Each thread had its own version of the `machine_start_time`, which
    lead to slight time differences. This became apparent mostly in IPS,
    where 2 threads each process a side of the flow.
    
    This patch makes the `machine_start_time` global.

[33mcommit cd2a5ec84f4523222ec8afe4f0674251d6de57cf[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Oct 18 16:18:06 2022 +0200

    packet: move action functions to packet files

[33mcommit 0977f40d1cf6d5dad75c95f31614678225a77943[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Oct 18 14:08:02 2022 +0200

    detect/tag: improve time handling on windows
    
    Bug: #5584.

[33mcommit 410acf226fd94890eb1a657f4c4dfa33015ca0d3[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sat Oct 15 16:10:22 2022 +0200

    detect: unittest guards for ut only function

[33mcommit 60285a629f7a51759e2b64e99135bff27035a1f6[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sat Oct 15 16:05:58 2022 +0200

    detect: remove unused function

[33mcommit 5d6212183b332cc170602a87d1e5873270bd2dc5[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sat Oct 15 10:48:15 2022 +0200

    eve/alert: minor cleanups

[33mcommit 34ee53e5ec1cdefe574bdfee55ef674217997ea9[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sat Oct 15 10:35:39 2022 +0200

    cocci: remove action check as we no longer use macros

[33mcommit 6c200c77934f877530f04f047561aa186904b995[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Oct 13 16:34:50 2022 +0200

    detect: issue drop to root packet in all cases
    
    Update DROP action handling in tunnel packets. DROP/REJECT action is set
    to outer (root) and inner packet.
    
    Check action flags both against outer (root) and inner packet.
    
    Remove PACKET_SET_ACTION macro. Replace with RESET for the one reset usecase.
    The reason to remove is to make the logic easier to understand.
    
    Reduce scope of RESET macros.
    
    Rename PacketTestAction to PacketCheckAction except in unittests. Keep
    PacketTestAction as a wrapper around PacketCheckAction. This makes it
    easier to trace the action handling in the real code.
    
    Fix rate_filter setting actions directly.
    
    General code cleanups.
    
    Bug: #5571.

[33mcommit 79fc8e74cb9ac05adeb663914eb978e9f4f604b8[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Oct 14 11:27:13 2022 +0200

    packetpool: debug message to assist drop checks

[33mcommit d1009e295c76e1eda1bdb07a1ccaaddf9a6d1349[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Oct 13 19:04:46 2022 +0200

    packetpool: remove debug validation check
    
    Current packet might be the root or a child. Root would have set
    drop action set, but Packet::pkt_src might be set in either.

[33mcommit fe5a8beb502cb1a905ac118da9a3a68050f31dac[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Oct 18 15:57:19 2022 +0200

    decode: minor code cleanup

[33mcommit ba3e0b3155e58420e81c8c0edb6205a57b90c0ef[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Oct 13 19:32:37 2022 +0200

    nfq: set drop reason on verdict error

[33mcommit a7333a3ea5c60cf4e67cfe7da6c9653d8da60983[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Oct 14 09:39:11 2022 +0200

    napatech: reduce size of Packet structure
    
    Put napatech packet vars in the union that is meant for this type of
    data.

[33mcommit e4b46e07636c02a6a637a8e5e8f4be12449c4885[m
Author: Juliana Fajardini <jufajardini@oisf.net>
Date:   Tue Oct 11 20:54:10 2022 -0300

    doc/acknowledgements: add a few more names
    
    Added some names of known contributors to the documentation

[33mcommit 3c25185e0b5cc363f860cbeae39dbcca1ff374ff[m
Author: Juliana Fajardini <jufajardini@oisf.net>
Date:   Tue Oct 11 20:44:52 2022 -0300

    devguide: add section about stale tickets policy
    
    Just to set the right expectations, and to have it registered for us,
    too.

[33mcommit b31a28695286a14d9ed640f816cdafc0b6d7503f[m
Author: Haleema Khan <hsadia538@gmail.com>
Date:   Thu Oct 13 07:23:30 2022 +0500

    detect-fileext: convert unittests to FAIL/PASS APIs
    
    Fixes Bug: #4033

[33mcommit 6c922e0b982b628417e13bd6d55f5f841161a199[m
Author: Haleema Khan <hsadia538@gmail.com>
Date:   Wed Oct 12 10:24:18 2022 +0500

    rust: fix lint warning for clippy::enum's name
    
    Ticket: #4597

[33mcommit 5365fdccf70b4eb26e2e0a82edb864203905c5b6[m
Author: Lukas Sismis <lsismis@oisf.net>
Date:   Wed Oct 12 14:24:07 2022 +0200

    dpdk: fix mempool cache error message

[33mcommit 2a0cb1f3daa2c58021b10ff88f2e6519a2c91d8a[m
Author: Shivani Bhardwaj <shivani@oisf.net>
Date:   Mon Oct 10 16:41:09 2022 +0530

    doc: update base64_decode notes

[33mcommit 7005443b8bbe521399a98dbafb7ea07e7db952bb[m
Author: Shivani Bhardwaj <shivani@oisf.net>
Date:   Fri Oct 7 12:01:45 2022 +0530

    base64: add and clean tests

[33mcommit dad52f133d871690b29e1415b40827cac4fa418c[m
Author: Shivani Bhardwaj <shivani@oisf.net>
Date:   Wed Oct 5 16:40:07 2022 +0530

    base64: add new mode as per RFC 4648
    
    As per RFC 4648,
    Implementations MUST reject the encoded data if it contains characters
    outside the base alphabet when interpreting base-encoded data, unless
    the specification referring to this document explicitly states
    otherwise.
    
    Add a new mode BASE64_MODE_RFC4648, and handle input strictly as per the
    specification.
    
    Bug 5223

[33mcommit e101384e7b5ca919c79f80e108c3e6a90b96960b[m
Author: Lukas Sismis <lsismis@oisf.net>
Date:   Mon Oct 10 22:00:37 2022 +0200

    transversal: remove suricata-ids.org references

[33mcommit 2158dbf3baf1e519b28569e57999a0e6d81279a4[m
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Tue Oct 4 10:20:51 2022 +0000

    github-actions: bump actions/checkout from 2 to 3.1.0
    
    Bumps [actions/checkout](https://github.com/actions/checkout) from 2 to 3.1.0.
    - [Release notes](https://github.com/actions/checkout/releases)
    - [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)
    - [Commits](https://github.com/actions/checkout/compare/v2...v3.1.0)
    
    ---
    updated-dependencies:
    - dependency-name: actions/checkout
      dependency-type: direct:production
      update-type: version-update:semver-major
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

[33mcommit 2681d21c11f29ba257a2c06dcfa38df37d8ab30c[m
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Mon Oct 3 19:42:13 2022 +0000

    github-actions: bump actions/cache from 3.0.8 to 3.0.10
    
    Bumps [actions/cache](https://github.com/actions/cache) from 3.0.8 to 3.0.10.
    - [Release notes](https://github.com/actions/cache/releases)
    - [Changelog](https://github.com/actions/cache/blob/main/RELEASES.md)
    - [Commits](https://github.com/actions/cache/compare/fd5de65bc895cf536527842281bea11763fefd77...56461b9eb0f8438fd15c7a9968e3c9ebb18ceff1)
    
    ---
    updated-dependencies:
    - dependency-name: actions/cache
      dependency-type: direct:production
      update-type: version-update:semver-patch
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

[33mcommit 05900b99cdacf370e86947a6f2287477a399d655[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Oct 3 16:30:31 2022 -0600

    github-ci: add workflow for rust clippy

[33mcommit 2a42386c288d0ec4dd8edf69ea489d748e343e16[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Oct 3 16:20:06 2022 -0600

    rust: fix clippy lint for null comparison
    
    Use .is_null() instead of checking for equality against
    std::ptr::null().

[33mcommit 45dfea24972e492f2ecdbe9c43c35627e02685e7[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Oct 3 16:17:07 2022 -0600

    rust/modbus: derive default instead of manual impl
    
    Cleans up a clippy lint for a trivial default impl that can be derived.

[33mcommit 9218da0eb82de672a4f61d6376509f32c336d973[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Oct 3 16:15:12 2022 -0600

    rust/frames: cleanup clippy lint for unsafe
    
    Where possible mark the relevant functions unsafe.  Otherwise suppress
    the warning for now as this pattern is supposed to be a safe API around
    an unsafe one. Might need some further investigation, but in general the
    "guarantee" here is provided from the C side.

[33mcommit 105d9a5f0200d37b2eed2f53acc5df0c7633e21c[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Oct 3 16:01:09 2022 -0600

    rust: fix clippy lint for unnecessary_unwrap
    
    Avoid check if not none followed by unwrap.

[33mcommit 85cfa7254bdb001cf9f26d1296c119f527362537[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Oct 3 15:44:06 2022 -0600

    rust: fix clippy lint for single_char_add_str
    
    Idiomatic cleanup and a fix automatically done by `cargo clippy --fix`.

[33mcommit f3e4bcfe230bc1378e6a67e2b64976f82c752610[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Oct 3 15:42:20 2022 -0600

    rust: fix clippy lint for bool_assert_comparison
    
    Checking for is_empty is faster than checking for equality.

[33mcommit f60e1b30f66689cd5f24fc6d1755d7cd6e893f8a[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Oct 3 15:40:46 2022 -0600

    rust: fix clippy lint for partialeq_to_none
    
    Use .is_some() and .is_none() instead of comparing against None.
    Comparing against None requires a value to impl PartialEq, is_none() and
    is_some() do not and are more idiomatic.

[33mcommit 7d623f0854d01b5c1c9f83d7d9eccede086f963c[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Oct 3 15:35:35 2022 -0600

    rust: fix clippy lint for explicit_auto_deref
    
    This adds unnecessary complexity to code.

[33mcommit c503ca62e2f8f3c30937f5b603c21b131e340996[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Oct 3 15:32:07 2022 -0600

    rust: fix clippy lint for needless_late_init

[33mcommit 94dd85baed92d4a5a0bb941f21239a3596d20a9c[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Oct 3 15:28:50 2022 -0600

    rust: fix clippy lint for borrow_deref_ref
    
    This type of borrow then reference has no effect.

[33mcommit e9597f3d0c93e225fddda839a2d8a5174d6591a4[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Oct 3 15:25:50 2022 -0600

    rust: fix clippy lint for redundant_closure
    
    Removes a closure where the function can be directly provided.

[33mcommit c5b26e2043c1f050a02e867dfe0502e2642c79b4[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Oct 3 15:09:32 2022 -0600

    rust: fix clippy ling for needless borrows
    
    Cleanup needless borrows found by clippy. This fix done automatically by
    `cargo clippy --fix`.

[33mcommit 63b3d73ccc0389a91137e4df3469f9792df55dbb[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Oct 3 15:21:35 2022 -0600

    rust: allow some more clippy lints
    
    Allow these lints for now until some more investigation can be done, as
    --fix attempts to fix these.

[33mcommit afe4bdca6f251f3c1ea6554cc8d2468b5554fabb[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Oct 4 11:21:40 2022 +0200

    rust: compile check rewording

[33mcommit 2bc5c46158c62eef5ef6bc1b60fa354065a12de0[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Oct 4 10:48:56 2022 +0200

    stream/rules: disable depth rule by default

[33mcommit aeb690317adf0a6d3110ace6f3f3d131fe91c657[m
Author: Lukas Sismis <lsismis@oisf.net>
Date:   Tue Sep 13 11:39:42 2022 +0200

    dpdk: allow specifying RSS hash function flags in the config
    
    Ticket: #5400

[33mcommit a4a69c3e713a0170ef660eb60cf7acd9505c0df7[m
Author: Lukas Sismis <lsismis@oisf.net>
Date:   Thu Sep 15 15:21:40 2022 +0200

    doc/dpdk: add IPS setup docs for DPDK mode
    
    Ticket: #5511

[33mcommit e46a0bd46a590a2cfbd1b9ddad0d152b4274790b[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Sun Oct 2 15:00:39 2022 +0200

    eve: explicit default when setting port

[33mcommit 00c419a6f865cb44923ed1d3a9bd50970c53715e[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Sun Oct 2 14:57:28 2022 +0200

    eve: micro simplification

[33mcommit 27cdfec28af72f0fdb9f5280231b3cac8dd066e6[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Sun Sep 25 19:56:47 2022 +0200

    eve/schema: update following flow changes

[33mcommit a0065f4368b0920b85fc8391ca68634a6ee80219[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Fri Apr 16 23:21:49 2021 +0200

    eve/alert: add direction field to log data way
    
    Add a key in the event to specify if the data that did
    trigger the alert are in to_client or to_server direction.

[33mcommit f1300e68c96713166f1d2855aae188ce5f276a59[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Sun Oct 2 14:42:21 2022 +0200

    eve/alert: add src and dest info to flow in alert
    
    When looking at an alert event, it was impossible to determine which
    side from src or dest IP in the alert was the client and wich side
    was the server with regards to the underlying flow. This was a problem
    when you try to known who belongs a metadata property such as a HTTP
    hostname or a TLS JA3.
    
    This patch updates the code to add src and dest IP in the flow
    subobject as well as src and dst port. This way, we can now which
    side is the client and which side is the server.
    
    The result is looking like:
    
    {
      "event_type": "alert",
      "src_ip": "22.47.184.196",
      "src_port": 81,
      "dest_ip": "192.168.1.47",
      "dest_port": 1063,
      "proto": "TCP",
      "tx_id": 0,
      "alert": {
        "signature_id": 2018959,
        "rev": 3,
      },
      "app_proto": "http",
      "flow": {
        "pkts_toserver": 22,
        "pkts_toclient": 35,
        "bytes_toserver": 1370,
        "bytes_toclient": 48852,
        "start": "2009-10-28T10:01:46.755232+0100",
        "src_ip": "192.168.1.47",
        "dest_ip": "22.47.184.196",
        "src_port": 1063,
        "dest_port": 81
      }
    }

[33mcommit bb93d67dddec6f8908c67c22deab23b111e59ab1[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Thu Mar 25 09:16:48 2021 +0100

    unix-socket: add command to get flow stats
    
    Add a command to extract the accounting data from a live
    flow using the unix socket. It takes the flow_id as param
    and return the volume of data seen on the flow as well as
    its age.

[33mcommit 19400a7d6902b2ba56b51b68473160850d40033c[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Fri Mar 26 01:00:31 2021 +0100

    flow: add function to get flow using flow_id

[33mcommit 06756314d61af5c4143e311472b9d16f3da2b7db[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Fri Mar 26 00:13:43 2021 +0100

    flow: change flow id computation method
    
    Previous method was truncating the flow hash value when building
    the flow_id. It is interesting not to loose the flow hash value
    as it can be used in other tools or to interact with a flow that
    is still active.

[33mcommit 06b6f85c1f8f154925ef4e7aa0e1acd567c1c786[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Tue Mar 23 23:45:22 2021 +0100

    json/flow: log if flow had gap in TCP

[33mcommit f9faff5c4cc03904fdfdf001af7b2701aa0deeb7[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Mon Jun 20 21:13:31 2022 +0200

    flow: add function to say if there is gap

[33mcommit e6768118dacf60fdb452695babd7a91cca66a4ab[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Tue Mar 23 23:06:41 2021 +0100

    stream: flag TCP streams with gap

[33mcommit a9519778de6c590fa733fbb4788f2599808ba902[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Sun Sep 25 11:51:32 2022 +0200

    rust/smb: avoid allocation in smb status function
    
    Avoid an allocation by returning a static string.

[33mcommit 9cb06d437644aba1733196087e7efd3e70d2afbb[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Thu Jan 13 11:41:49 2022 +0100

    detect/smb: add smb.ntlmssp_domain keyword
    
    Feature #5411.

[33mcommit 5debb86cd5ae9cdeddc147cfb119b44e68348ed2[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Thu Jan 20 21:43:19 2022 +0100

    rust/smb1: add a missing command

[33mcommit 69ef1bc194980e20f3191395e656609a91b06da6[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Thu Jan 13 11:28:54 2022 +0100

    detect/smb: add smb.ntlmssp_user keyword
    
    Feature #5411.

[33mcommit f46f895e8d47b074fcb8444d36d24e9eff958420[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Sun Dec 19 14:32:21 2021 +0100

    rust/smb: import NT status code for Microsoft doc
    
    This patch updates the NT status code definition to use the status
    definition used on Microsoft documentation website. A first python
    script is building JSON object with code definition.
    
    ```
    import json
    from bs4 import BeautifulSoup
    import requests
    
    ntstatus = requests.get('https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-erref/596a1078-e883-4972-9bbc-49e60bebca55')
    
    ntstatus_parsed = BeautifulSoup(ntstatus.text, 'html.parser')
    
    ntstatus_parsed = ntstatus_parsed.find('tbody')
    
    ntstatus_dict = {}
    
    for item in ntstatus_parsed.find_all('tr'):
        cell = item.find_all('td')
        if len(cell) == 0:
            continue
        code = cell[0].find_all('p')
        description_ps = cell[1].find_all('p')
        description_list = []
        if len(description_ps):
            for desc in description_ps:
                if not desc.string is None:
                    description_list.append(desc.string.replace('\n ', ''))
        else:
            description_list = ['Description not available']
        if not code[0].string.lower() in ntstatus_dict:
            ntstatus_dict[code[0].string.lower()] = {"text": code[1].string, "desc": ' '.join(description_list)}
    
    print(json.dumps(ntstatus_dict))
    ```
    
    The second one is generating the code that is ready to be inserted into the
    source file:
    
    ```
    import json
    
    ntstatus_file = open('ntstatus.json', 'r')
    
    ntstatus = json.loads(ntstatus_file.read())
    
    declaration_format = 'pub const SMB_NT%s:%su32 = %s;\n'
    resolution_format = '        SMB_NT%s%s=> "%s",\n'
    
    declaration = ""
    resolution = ""
    
    text_max = len(max([ntstatus[x]['text'] for x in ntstatus.keys()], key=len))
    
    for code in ntstatus.keys():
        text = ntstatus[code]['text']
        text_spaces = ' ' * (4 + text_max - len(text))
        declaration += declaration_format % (text, text_spaces, code)
        resolution += resolution_format % (text, text_spaces, text)
    
    print(declaration)
    print('\n')
    print('''
    pub fn smb_ntstatus_string(c: u32) -> String {
        match c {
    ''')
    print(resolution)
    print('''
            _ => { return (c).to_string(); },
        }.to_string()
    }
    ''')
    ```
    
    Bug #5412.

[33mcommit a6e86fef049e9c14143eed8b84bbe66e8523708c[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Sep 29 13:09:52 2022 +0200

    detect: remove unused data struct

[33mcommit 38fdfd87182ffdd9282d50b4781b53b2f4986650[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Sep 23 23:07:04 2022 +0200

    eve/schema: flow/stream updates

[33mcommit f837146321fce199f7c90e30485da9ac2fdc5080[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Sep 26 09:54:37 2022 +0200

    flow/worker: process injected flows more gradually
    
    Worker threads are responsible for final processing of timed out flows.
    These are selected by the Flow Manager and inserted into a per thread
    queue. The Flow Worker then checks this queue after each packet. Due to
    the burstiness of this process, the packet threads would sometimes process
    a lot of these flows in the context of a single packet, leading to spike
    in latency which might cause packet loss.
    
    This patch changes the behavior to only process at max 2 flows per packet.
    This way added processing cost is amortized over many packets.

[33mcommit ce1bdcb47459b509da1cacbcc7c3d70d6dce77ee[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sun Sep 25 11:40:21 2022 +0200

    flow: count max number of injected flows in workers

[33mcommit 235f369ab98923a75fc655b14d53d0def5eed971[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Sep 23 22:54:52 2022 +0200

    stream: reduce pool locking overhead
    
    Add thread local cache to avoid locking overhead for ssns and segments.
    
    A thread will return segments/ssns to a local cache first, and if that
    is full, to a return queue where the actual return to the pool returns
    a batch, to amortize locking overhead.
    
    Adds segment and session pool/cache counters to see where how effective
    the cache is.

[33mcommit 536d66e344f515b31bf92ad5f88a68367f7bb6ba[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sat Sep 24 21:08:30 2022 +0200

    stream: minor test cleanup

[33mcommit 353eb9086daad9b8e00eca8fe4cc420ab79496bd[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Sep 21 10:17:38 2022 +0200

    cocci: fix python issues

[33mcommit 839a4f5ab47350b5c3ef6aed4d9fa3f04911c0c9[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Sep 21 09:34:08 2022 +0200

    files: only call loggers is there is work to do

[33mcommit fa6d41ca6625aa62222a01b5a18a09475c6a4e50[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Sep 21 08:48:37 2022 +0200

    filestore: remove obsolete checks

[33mcommit 0b3053a37665af86281877117bf542f49302c3cd[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Sep 21 08:46:46 2022 +0200

    filestore: fix empty file not opening, but trying to close

[33mcommit 23323a961facb4975e057669e04e91283abe0774[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sat Sep 17 11:25:22 2022 +0200

    app-layer: reduce app cleanup and output-tx calls
    
    Track packets that updated the app-layer, and for those run
    the transaction housekeeping and output-tx logging loops.
    
    Do the same of end of flow packets.
    
    This skips needless iterations over the transaction stores.

[33mcommit 4bb7f827e0f9e251dbff63094a5be7f1eada92c3[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sun Sep 18 10:10:28 2022 +0200

    output/tx: minor cleanups/optimizations

[33mcommit 39cf5b151a73ea24f926946abebf253a76e09eb8[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Sep 16 11:08:21 2022 +0200

    src: includes cleanup
    
    Work towards making `suricata-common.h` only introduce system headers
    and other things that are independent of complex internal Suricata
    data structures.
    
    Update files to compile after this.
    
    Remove special DPDK handling for strlcpy and strlcat, as this caused
    many compilation failures w/o including DPDK headers for all files.
    
    Remove packet macros from decode.h and move them into their own file,
    turn them into functions and rename them to match our function naming
    policy.

[33mcommit 3e2295a96397fc54dce3caab311c46ed34e0c630[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Sep 15 20:51:54 2022 +0200

    detect: clean up detect-engine-state.h
    
    Remove prototypes that are not about purely the data structures.

[33mcommit ad0a29cabc8c61aaf92107ac8ac8427b64904adb[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Sep 15 20:07:28 2022 +0200

    detect: remove wrapper func

[33mcommit 1dd0a2fed6b4135adbaad159230a85cbd2694c40[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Sep 15 20:04:34 2022 +0200

    detect: move DetectTransaction to header its used in

[33mcommit 41265a859e63bf8c417bf7352ca579ec2e1e8528[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Sep 15 10:54:02 2022 +0200

    detect/files: optimize file.data by skipping non-file txs
    
    As well as 'file' txs not in our direction.
    
    Implement the same logic for file.name and file.magic prefilter engines.

[33mcommit db0f9ddc697eff5d6f5bc1f2f0d06f7307a62750[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Sep 14 15:38:04 2022 +0200

    files/tx: inspection, logging and loop optimizations
    
    Introduce AppLayerTxData::file_tx as direction(s) indicator for transactions.
    When set to 0, its not a file tx and it will not be considered for file
    inspection, logging and housekeeping tasks.
    
    Various tx loop optimizations in housekeeping and output.
    
    Update the "file capable" app-layers to set the fields based on their
    directional file support as well as on the traffic.

[33mcommit 32632020941f4200e5c6b5b36919568252222e78[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Sep 15 10:45:46 2022 +0200

    detect/tx: add AppLayerTxData to PrefilterTx
    
    In preparation of some file inspection optimizations, for which we need the
    tx data.
    
    Update all users.

[33mcommit 602c39ed0181c55a7ae1ccc578c96a325622048b[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Aug 23 17:51:26 2022 +0200

    files: remove unused code

[33mcommit b1c22169f8efce1baecacbbb312c6d4f37443928[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Aug 22 19:16:06 2022 +0200

    files: don't set NOSTORE in 'store all' case

[33mcommit d39a79b6f27dc4c6b5ae63637914c93e52d9a9eb[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sat Feb 5 09:31:34 2022 +0100

    smtp: remove bad tests

[33mcommit 79499e4769799e6b4426cace062471a807d64d49[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sat Feb 5 09:20:07 2022 +0100

    app-layer: move files into transactions
    
    Update APIs to store files in transactions instead of the per flow state.
    
    Goal is to avoid the overhead of matching up files and transactions in
    cases where there are many of both.
    
    Update all protocol implementations to support this.
    
    Update file logging logic to account for having files in transactions. Instead
    of it acting separately on file containers, it is now tied into the
    transaction logging.
    
    Update the filestore keyword to consider a match if filestore output not
    enabled.

[33mcommit 01e64d80dae179d445d17431a390e84098287b90[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sat Feb 5 08:53:58 2022 +0100

    app-layer: trunc parser per direction

[33mcommit ff9d1807f982bc66fde44bcfc5b88235fbd6bfc6[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Aug 19 10:49:41 2022 +0200

    app-layer: parser flags to u16

[33mcommit a1d728bb65eab0632a7bcbe9d2ef76fb3aec5501[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Aug 19 11:08:04 2022 +0200

    app-layer: specify direction in tx cleanup
    
    In preparation of per tx files storage.

[33mcommit c27df6304d6c9620962671e39ace277c78556269[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 26 14:36:32 2021 +0200

    app-layer: introduce common AppLayerStateData API
    
    Add per state structure for storing flags and other variables.

[33mcommit 96b642c32d94d71b7b458eb1fa588b5624da806b[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Jun 10 08:02:03 2022 +0200

    file: minor debug updates

[33mcommit 2218a3716e79de28faaddb37f4019832cda6bb30[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Jun 10 08:01:15 2022 +0200

    file: clean up file flags handling

[33mcommit 408b64558f3e2f4b66f9d8cbed5bde1207d2ccbe[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 10 21:06:54 2021 +0200

    files: debug log flags

[33mcommit bdbaaa3b24762dc2feb72a1eb8c1422ae4b42fc7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 10 19:55:38 2021 +0200

    lua: store id with tx ptr

[33mcommit db5cf1f8f99362c356869e121859c5e8fcef2865[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Wed Sep 21 20:26:32 2022 +0000

    userguide: Add rule file globbing option details
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 7771402a3acc5c509dd4d05c81d244d828913b14[m
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Sat Sep 24 05:47:57 2022 +0000

    github-actions: bump codecov/codecov-action from 3.1.0 to 3.1.1
    
    Bumps [codecov/codecov-action](https://github.com/codecov/codecov-action) from 3.1.0 to 3.1.1.
    - [Release notes](https://github.com/codecov/codecov-action/releases)
    - [Changelog](https://github.com/codecov/codecov-action/blob/master/CHANGELOG.md)
    - [Commits](https://github.com/codecov/codecov-action/compare/81cd2dc8148241f03f5839d295e000b8f761e378...d9f34f8cd5cb3b3eb79b3e4b5dae3a16df499a70)
    
    ---
    updated-dependencies:
    - dependency-name: codecov/codecov-action
      dependency-type: direct:production
      update-type: version-update:semver-patch
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

[33mcommit 5490fe00ab236d2324d41dd4790ffaf366b8c3e0[m
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Wed Sep 28 19:38:15 2022 +0000

    github-actions: bump ossf/scorecard-action from 2.0.3 to 2.0.4
    
    Bumps [ossf/scorecard-action](https://github.com/ossf/scorecard-action) from 2.0.3 to 2.0.4.
    - [Release notes](https://github.com/ossf/scorecard-action/releases)
    - [Changelog](https://github.com/ossf/scorecard-action/blob/main/RELEASE.md)
    - [Commits](https://github.com/ossf/scorecard-action/compare/865b4092859256271290c77adbd10a43f4779972...e363bfca00e752f91de7b7d2a77340e2e523cb18)
    
    ---
    updated-dependencies:
    - dependency-name: ossf/scorecard-action
      dependency-type: direct:production
      update-type: version-update:semver-patch
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

[33mcommit 8438ee48aad01e9204a8c07ac3a85f5719f09fc1[m
Author: Sascha Steinbiss <satta@debian.org>
Date:   Thu Sep 22 15:13:05 2022 +0200

    decode-ipv4: adjust validation to RFC
    
    RFC1108 only specifies a minimum field length of 3, not
    a fixed length of 11.

[33mcommit fb790121bb2805190c033953ffd4e9dfa09b565b[m
Author: Sascha Steinbiss <satta@debian.org>
Date:   Thu Sep 22 15:10:47 2022 +0200

    decode-ipv4: implement extended security option
    
    IP option 0x85 (extended security) is mentioned in the
    documentation for the ipopts keyword but was not implemented.

[33mcommit eb155639c6293e5fd412a8268a2c1a6ca03ebe45[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Tue Sep 27 16:01:28 2022 +0200

    ci: build with -Wimplicit-int-conversion
    
    Seems to have got lost on the way in CFLAGS

[33mcommit ae6abd8ca3eb0e3157eb8709d97c9432beb9e373[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Tue Sep 27 15:47:06 2022 +0200

    ssl: fix compiler warning
    
    implicit conversion loses integer precision: 'int' to 'uint16_t'
    because C shifts << translates automatically to signed integers

[33mcommit 879a46f085b2ccc5897d6d372d2f84a307781f27[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Aug 26 14:12:44 2022 +0200

    rust: lock to time 0.3.13 to avoid MSRV bump to 1.59
    
    Indirect dependency through x509-parser.

[33mcommit 16db04c1a7d9a6ad171c2957d7660afcf48824c5[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Wed Jan 19 15:56:50 2022 +0100

    rust: remove nom 5 dependency

[33mcommit 0acf75bff70fd136fd3c85f301c1109ce2fbf7a5[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Wed Jan 19 15:06:21 2022 +0100

    rust/applayertemplate: convert to nom7

[33mcommit 378e91584605b04f355446993907ea50afe4b680[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Wed Jan 19 15:06:05 2022 +0100

    rust/asn1: convert parsers to nom7

[33mcommit 0ba0572c4a8b1a0995384ab3dd1f3b75cdb60061[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Wed Jan 19 14:30:54 2022 +0100

    rust/x509: finish transition to nom7

[33mcommit 3ef5121ab08a4f35fdc7ba2d707eb372b807eeca[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Wed Jan 19 14:28:30 2022 +0100

    rust/telnet: convert parsers to nom7

[33mcommit d98b386f368127abe1b1661b4f97777e4c0f93ac[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Wed Jan 19 14:26:57 2022 +0100

    rust/conf: convert parser to nom7

[33mcommit db9a1e17b6fc24dc285a9c1081ef6e552c04ddee[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Wed Jan 19 14:21:46 2022 +0100

    rust/ssh: finish transition to nom7

[33mcommit b31c72c06aa52af46cfa6514bfdae65c1ee1aac7[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Wed Jan 19 14:11:26 2022 +0100

    rust/rdp: convert parsers to nom7

[33mcommit 49520b21439fb442524bf46478bf8b920736cf1c[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Wed Jan 12 10:56:20 2022 +0100

    rust/rdp: upgrade dependency on tls-parser

[33mcommit beadd090b89979b904c882e2857c24cf91aae1bb[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Tue Jan 11 15:50:55 2022 +0100

    rust: upgrade versions of BER/DER, Kerberos and SNMP parsers

[33mcommit baab1de735954728c8976c645e2575a758f78782[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Apr 11 11:22:06 2022 -0600

    rust: update x509-parser to 0.14.0
    
    Resolves RustSec issues in time and chrono:
    - https://rustsec.org/advisories/RUSTSEC-2020-0071
    - https://rustsec.org/advisories/RUSTSEC-2020-0159
    
    Ticket: #5259.
    
    Ammended by Victor Julien to bump to 0.14 instead of 0.13.

[33mcommit 3aace496492758eeac01ceccb6ed487dd2dedc2b[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Mon Nov 1 14:44:11 2021 +0100

    rust/x509: update dependency on x509-parser

[33mcommit b06c0579f568226721f38f6a964bdffdfd1791fc[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Sep 26 17:14:39 2022 +0200

    stream: fix reachable assertion
    
    Fix `Flow::thread_id` not always getting properly set up, leading to
    a reachable assertion.
    
    Bug #4582.

[33mcommit 7b0008d4f09d9cb0bdafb30dc0fdc9d8ecd183b3[m
Author: Juliana Fajardini <jufajardini@oisf.net>
Date:   Thu Sep 15 20:07:54 2022 -0300

    userguide: add section about exception policies
    
    This describes briefly what the exception policies are, what is the
    engine's behavior, what options are available and to which parts are
    they implemented.
    
    Task #5475
    Task #5515

[33mcommit 6f294f2f2d40990a6ca74ef3368c6373489eda3d[m
Author: Juliana Fajardini <jufajardini@oisf.net>
Date:   Fri Sep 2 14:27:15 2022 -0300

    userguide: minor rewording and typo fixes
    
    Some of these were recently introduced, some were highlited after the
    applayer sections got merged. Some paragraphs seem to have been changed
    due to trying to respect character limits for lines. Also includes a
    typo pointed out by one of our community members via Discord.

[33mcommit 9d9bc048869a69ce1065a22cbb28dfe4ab6d48f1[m
Author: Juliana Fajardini <jufajardini@oisf.net>
Date:   Fri Sep 16 15:12:06 2022 -0300

    stream/tcp: typo fix

[33mcommit 489af24132c9122c6301664e4125907d655d42f8[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Wed Sep 21 20:46:59 2022 +0000

    detect: update ttl debug log messages
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit ab4d0f7f4a9a30ac9675d82ba8b3373c428a3773[m
Author: Jeff Lucovsky <jlucovsky@oisf.net>
Date:   Thu Aug 25 10:44:50 2022 -0400

    detect/stream_size: Rename detect.rs to stream_size.rs
    
    This commit renames detect.rs to stream_size.rs to reflect its content.

[33mcommit 2386f2614f351f8bcabf6da38792f9cfd38f859a[m
Author: Jeff Lucovsky <jlucovsky@oisf.net>
Date:   Thu Aug 25 10:39:34 2022 -0400

    detect/iprep: Move iprep logic into a separate module

[33mcommit c957882d1c9144f08f2ce66112e8d0eedb47b3ad[m
Author: Jeff Lucovsky <jlucovsky@oisf.net>
Date:   Thu Aug 25 10:32:19 2022 -0400

    detect/uri: Move uri logic into a separate module

[33mcommit 484c34bc60e6e409467423704481d98548b6b2b0[m
Author: Jeff Lucovsky <jlucovsky@oisf.net>
Date:   Thu Aug 25 10:27:00 2022 -0400

    detect/uint: Move uint logic into a separate module
    
    This commit moves the uint logic into its own module.

[33mcommit 33c424f9ed60a93e0847c7cddac555a52fa92a6f[m
Author: Jeff Lucovsky <jlucovsky@oisf.net>
Date:   Tue Aug 2 11:12:02 2022 -0400

    doc/byte_math: Add byte_math differences with snort
    
    Issue: 5077

[33mcommit 192a31c74eb66aa3b17106ac1bcd112b13529c6e[m
Author: Jeff Lucovsky <jlucovsky@oisf.net>
Date:   Tue Aug 2 11:11:27 2022 -0400

    doc: Fixup byte* entries to display tables properly

[33mcommit 8bfe427a7452d22f8061e866c4ce69ba03d15001[m
Author: Jeff Lucovsky <jlucovsky@oisf.net>
Date:   Sun Jul 31 10:45:38 2022 -0400

    rust/detect: Create detect module for rule parsing
    
    This commit creates a module named "detect" for rule parsing logic. As
    part of this commit, detect.rs is moved from its toplevel position into
    the new module. Thus, use crate::detect::detect to refer to items within
    detect.rs (instead of create::detect).
    
    Ticket: 5077

[33mcommit ccd1063e434330d074a64f2493b5c0e966f36877[m
Author: Jeff Lucovsky <jlucovsky@oisf.net>
Date:   Wed Jun 8 08:03:44 2022 -0400

    detect/bytemath: convert parser to Rust
    
    Issue: 5077
    
    This commit
    - Converts the PCRE based parser to Rust.
    - Adds unit tests to the new Rust modules
    - Removes the PCRE parser from detect-bytemath.c
    - Adjusts the C source modules to refer to the Rust definitions
    - Includes the multiply operator (missing from the C parser)

[33mcommit c6d8daecd38d23b32c3a11ae471f0134594488b0[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Fri Sep 23 08:50:43 2022 +0200

    log: fix coverity warning
    
    CID 1515529
    
    Checks ftell return value for negative/error

[33mcommit ad6bea510822c5905b7fd8bce2e7a386ee612ff6[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Sep 22 17:24:38 2022 +0200

    github-ci/codecov: add rust coverage support
    
    Based on Rust 1.63 and LLVM 14. Update the jobs to meet those requirements.
    
    Includes the bundled libhtp coverage now, including libhtp tests.
    
    Ticket: #4278.

[33mcommit 1701a6b14c0fef6a374368a31c8a0d753b574b9c[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Sep 21 19:56:45 2022 +0200

    tls: handle incomplete header sooner
    
    Make sure to exit the parser early on incomplete header data.
    
    Additionally, make sure to not create duplicated tls frames in this
    case.
    
    Add a debug validation check for the header parser parsing too much
    data, which should never happen.

[33mcommit 9053c49178ac9746e9f36534c1ffce05dad205c8[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Sep 7 20:51:18 2022 +0200

    ssl: add debug validation check for incomplete api

[33mcommit 0ec136621d7c5e24b38e706856c461fd5a96ef2d[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Sep 7 08:38:07 2022 +0200

    debug: add bool string print helper macro

[33mcommit 69be41b241bc7fd1a5b7f3988b51f5859ab27d57[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Sep 7 08:32:05 2022 +0200

    tls: improve record checks
    
    Improve unknown record handling. Inspired by Wireshark 'unknown record'
    handling, we take a best effort approach for records with unknown content
    types in TLS versions 1.0, 1.1 and 1.2.
    
    Improve record length check and set 'invalid_record_length' event instead
    of 'invalid_tls_header'.

[33mcommit c028800ae151415ca524ede755f9b880a19771ab[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Sep 7 07:31:38 2022 +0200

    tls: improve versions extension logic
    
    Skip over unusable versions like GREASE.

[33mcommit 599791fa33cf5a3be51d7cdd857350f53bb68fc2[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Sep 6 14:03:46 2022 +0200

    tls: make version and size checks stricter
    
    This way bad records won't buffer lots of stream data.

[33mcommit 308fe31cb5e9b77924c55c81a49271c975aba2bf[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Aug 23 12:01:18 2022 +0200

    eve/schema: add tls client logging

[33mcommit c73d8120261c2470e49c25f7249c2ad8599e8fa1[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Aug 29 09:25:26 2022 +0200

    tls: store cert data in heap buffer
    
    Cert chain is a list of pointers into this buffer, so can't use a
    stream slice approach.

[33mcommit 4a283d480d2b851c24962d37ea84ae7a429596b3[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Aug 23 11:35:41 2022 +0200

    eve/tls: implement client cert logging
    
    Enable client logging in extended mode.
    
    Add "client", "client_certificate" and "client_chain", where the latter two
    depend on "client".

[33mcommit e817a8f9682da61571c55667ec19edd13dc13d87[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Aug 23 11:32:24 2022 +0200

    tls: parse client certificates
    
    Parse client cerificates and store them in the state similar to how
    this is done for server certificates.
    
    Update "progress" handling to not consider the TLS handshake complete
    if the server indicated a client cert was needed.

[33mcommit 10f5e6cb66a3fd8faa735eeddd307ef3b3f2bba4[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Aug 23 11:31:08 2022 +0200

    tls: prepare for client cert parsing

[33mcommit 6d4cc39c02156999304338aec71aefde75333567[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Aug 23 11:24:41 2022 +0200

    eve/tls: prepare for client cert logging
    
    Code cleanups that work on per direction "connp" instead of hard coding
    to the server side.

[33mcommit 14b2e04b58dbebf274290b0cbe9e40571c8941ef[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Aug 23 07:19:38 2022 +0200

    tls: make cert handling more generic
    
    In preparation for client cert handling.

[33mcommit cf4c201acbf6e9558e450a8dc76d12b48bf49b8d[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Aug 22 10:49:34 2022 +0200

    tls: avoid tls.invalid_handshake_message FP
    
    Don't set TLS_DECODER_EVENT_INVALID_HANDSHAKE_MESSAGE event on encrypted
    handshake messages.

[33mcommit e9d63f335542b45123796f42801de730a63e6432[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Aug 11 12:18:28 2022 +0200

    tls: don't set 2 events for a single exception
    
    Keep the more specific ones.

[33mcommit 214e466b29b941e8805ac1531089607f9dae06b5[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Aug 11 15:25:11 2022 +0200

    tls: remove incomplete tests
    
    These tests are incompatible with the incomplete API usage and should
    have been pcap based tests in the first place.

[33mcommit 82e03bd8fc721cf47964460f261500b10433ea14[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Aug 8 12:02:22 2022 +0200

    tls: set event if record size exceeds limit

[33mcommit e857c864ca1cb0af6a01f2b14c172bf83c78f0d3[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Aug 10 17:44:44 2022 +0200

    tls: support server hello done message

[33mcommit 4bab6e24e5e2cef29c9a5a6bee3263e4a3d47e76[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Aug 5 22:27:22 2022 +0200

    tls: support handshake fragmentation
    
    Implement TLS record defrag for handshake messages.
    
    Ticket: #5183.

[33mcommit bcaf0f6f7db83aa5941346b0eaf81fa5765e0576[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Aug 5 14:39:57 2022 +0200

    tls: remove certificate buffering code
    
    TCP Buffering is now done in the app-layer using the incomplete API, on
    the SSL/TLS record level. TLS level fragmentation will be implemented
    separately.

[33mcommit 0839317ea7ebfcd28e7cac2ef516696ba42693c9[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Aug 8 12:23:37 2022 +0200

    tls: parse handshake protocol records in single pass

[33mcommit 9f0ea5e70c3e557d25118e59aa5fc1b32aeca976[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Sep 7 07:37:46 2022 +0200

    sslv2: use version from client hello
    
    Remove streaming code that is now unused.
    
    Incomplete handling makes this record parsing work on full data.

[33mcommit c8d79fb81fef91fef27d28ad06ee4136e8e282b6[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Aug 18 10:51:35 2022 +0200

    ssl: implement 'incomplete' handling for SSLv2

[33mcommit 6076a5151127f039932cb99d771259c18762c59a[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Sep 7 09:43:19 2022 +0200

    tls: streaming mode for application records
    
    To avoid overhead of stream buffering for records we don't do
    much with anyway, pass through application records instead of
    buffering the entire record in the stream engine.

[33mcommit 129fcb5c7232fd9c8245958f7fb7d2d9ebe9d8ce[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Aug 5 12:03:37 2022 +0200

    tls: use incomplete API to get full TLS records
    
    The TLS record header is parsed in streaming mode still, but once the
    record size is known we tell the app-layer API to give us the full
    record.
    
    Ticket: #5481

[33mcommit 2d308c000d58dbf5323599fc7f1694e14f1f375b[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Sep 20 15:16:56 2022 +0200

    github-ci: disable cppclean as it is too noisy
    
    We can reenable it after the larger cleanup efforts are complete.

[33mcommit 7110ea75c40d8a4e7eb1ff0c94d828cc73f2e2f7[m
Author: Gleb Smirnoff <glebius@FreeBSD.org>
Date:   Tue Aug 30 20:12:21 2022 -0700

    ipfw: remove setting of SO_BROADCAST on the divert(4) socket
    
    My review of the FreeBSD kernel code reveals that this setting
    a) is ignored by the kernel b) is not required.  The sending
    side of divert(4) never checks so->so_options, but always gives
    IP_ALLOWBROADCAST to ip_output().

[33mcommit 30ce63c50fd106ab37f7ebb6340a8782ce300dee[m
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Mon Sep 12 19:35:52 2022 +0000

    github-actions: bump ossf/scorecard-action from 1.1.2 to 2.0.3
    
    Bumps [ossf/scorecard-action](https://github.com/ossf/scorecard-action) from 1.1.2 to 2.0.3.
    - [Release notes](https://github.com/ossf/scorecard-action/releases)
    - [Changelog](https://github.com/ossf/scorecard-action/blob/main/RELEASE.md)
    - [Commits](https://github.com/ossf/scorecard-action/compare/ce330fde6b1a5c9c75b417e7efc510b822a35564...865b4092859256271290c77adbd10a43f4779972)
    
    ---
    updated-dependencies:
    - dependency-name: ossf/scorecard-action
      dependency-type: direct:production
      update-type: version-update:semver-major
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

[33mcommit ee5573c4eee984073d3f2253e34f9ee8538ac6b2[m
Author: Andrei Shchapaniak <shchapaniak.andrei@gmail.com>
Date:   Wed Aug 31 07:23:07 2022 -0400

    dpdk/i40e: fix warning with number of queues for RSS configuration

[33mcommit 390cf9248f7ce305c08d7c3fc9a0c2286817d9be[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Fri Sep 9 12:30:34 2022 +0200

    detect: adds flow.age keyword
    
    Ticket: #5536

[33mcommit ce2775d331cecc072c99e1c0c3bced954de4900d[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu May 5 09:46:01 2022 +0200

    flow/icmpv4: fix vlan.use-for-tracking
    
    For ICMPv4 error messages the vlan ids were always considered,
    even if the 'vlan.use-for-tracking' option was disabled.
    
    Ticket: #5330

[33mcommit 148b53125bef818dde8290023eeeeca3e328493f[m
Author: Sascha Steinbiss <satta@debian.org>
Date:   Thu Sep 15 13:57:13 2022 +0000

    ebpf: update deprecated API calls
    
    This fixes build errors when libbpf 1.0 is used. It removes previously
    deprecated API functions that were still in use in Suricata's eBPF
    code.

[33mcommit af408731276d6e33621bf7d1fef2db74d3ed62db[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Fri Sep 2 09:34:27 2022 +0200

    pgsql: config limit maximum number of live transactions
    
    As is done for other protocols
    
    Ticket: #5527

[33mcommit e160917bcfb67b23535b4ce082f506a9e66b7778[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Thu Jun 16 15:14:27 2022 +0200

    mqtt: remove quadratic time complexity
    
    When having many transactions in a single parsing call...
    
    Fix has overhead of having one more field in the mqtt state.
    
    Completes commit a8079dc9787d77cf705aa47000b499a325be0716
    
    Ticket: #5399

[33mcommit 63745a78790936c80f7042b1dfcb3e869e0acaea[m
Author: Jeff Lucovsky <jeff.lucovsky@corelight.com>
Date:   Sun Sep 11 10:00:53 2022 -0400

    detect/tls: Improve tls.fingerprint rule handling
    
    Issue: 4581
    
    This commit improves the runtime performance of rules with
    tls.fingerprint by using the inspection logic from tls.cert_fingerprint.

[33mcommit 6bccd5aa30c03debc92c1e910d5f0dd1c6a9cc58[m
Author: Jeff Lucovsky <jeff.lucovsky@corelight.com>
Date:   Sun Sep 11 09:50:20 2022 -0400

    detect/uri: Remove unnecessary include
    
    This commit removes an unnecessary #include for detect-uricontent.h

[33mcommit d941703cd82483a9e1a6ab4353926d1ae1384bb2[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Jun 13 07:44:41 2022 +0200

    detect/build: minor code cleanup

[33mcommit 040404b093afbd578bc61daa5170d080579e4569[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Sep 8 16:47:21 2022 +0200

    detect/profiling: track bytes scanned by prefilter engines

[33mcommit 682e2a07fec0ee705ef67befe72c1849843f4375[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Aug 30 11:13:16 2022 +0200

    detect/tls: add tls.cert_chain_len keyword

[33mcommit 224ba8256951f39b6fdf67bd57b8df6e83c11a11[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Aug 23 11:23:21 2022 +0200

    eve/tls: warn on unsupported 'custom' options

[33mcommit dbf3d1e9771c55c5b5c485d229acf5e52a21f149[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Aug 11 10:09:18 2022 +0200

    tls: make SSLSetEvent a macro to help debugging

[33mcommit 036686e21c9521eda5a662bc3e10534f64737add[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Aug 30 12:15:31 2022 +0200

    etc/schema: clang (re)format

[33mcommit 6e1220700dccc3aea68041b8fb39428763079c61[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Sep 19 20:55:28 2022 +0200

    github-ci: bump cbindgen to 0.24.3
    
    This addresses issues around the AppLayerTxData type.

[33mcommit 0e39c92fcf8142c0329160147b3cf09c7d3bbf8e[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Sep 19 20:05:31 2022 +0200

    flow-manager: reduce locks at startup
    
    Effectively busy looping on a mutex to wait for time to be ready.

[33mcommit 19e94e93fab84c009c0aefd49809c91665a8fa33[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Sep 16 11:10:08 2022 +0200

    common: move u8_tolower to common header

[33mcommit 18e63d4ede44972de8c3750027a3882b526cb6b4[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Sep 15 17:25:49 2022 +0200

    htp: remove user setup from request line callback
    
    This used to be the first callback that was called, but its not anymore.
    
    Codecov confirmed that this is no longer used and therefore not useful.

[33mcommit faca974f3285a9e8021e70536d208ea7afcb9cca[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sat Sep 17 06:43:05 2022 +0200

    ipfw: remove unused func prototype

[33mcommit b9ad1d12606f81fccdd8ccab816221a75fac710a[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Sep 16 19:50:31 2022 +0200

    app-layer: fix compiler warning

[33mcommit e250ef6402998eac36dfb46b6d91aca0e4d184b2[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue May 24 11:32:23 2022 +0200

    debug: remove empty header

[33mcommit c3c5829f9649876d985801d122e1c2d02221468b[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue May 24 10:18:20 2022 +0200

    reputation: add ipv6 cidr test

[33mcommit e9c4b3719ead046ea99bedc6462babd0f015f11e[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue May 24 10:18:02 2022 +0200

    reputation: fix multiline test

[33mcommit a9a17c81855e219ae27f94b803a29d74b6facb37[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Thu Aug 4 22:33:52 2022 +0200

    landlock: handle filestore case
    
    If landlock ABI is inferior to 2 (before Linux 5.19) then the
    renaming of files is impossible if the protection is enabled. This
    patch disables landlock if ABI < 2 and file-store is enabled.
    
    As file store is initialized in output the call to landlock had to
    done after the output initialization.

[33mcommit 1b24f4d357fd922a5c3202fce2904da29a04ed12[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Wed Aug 3 23:36:51 2022 +0200

    doc: document landlock feature

[33mcommit 485d5a4ea46dd90e228b3e4856b95a67a51d348c[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Wed Jul 20 11:05:57 2022 +0200

    landlock: basic implementation
    
    This patch is adding support for Landlock, a Linux
    Security Module available since Linux 5.13.
    
    The concept is to prevent any file operation on directories where
    Suricata is not supposed to access.
    
    Landlock support is built by default if the header is present. The
    feature is disabled by default and need to be activated in the YAML
    to be active.
    
    Landlock documentation: https://docs.kernel.org/userspace-api/landlock.html
    
    Feature: #5479

[33mcommit fe91506320ead848a54f181cff7c2f48f399cb65[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Thu Sep 1 13:47:16 2022 +0200

    doc/http2: suricata.yaml max-streams parameter
    
    Ticket: #4949

[33mcommit bbd968c738230b4f77de3278994c4fd5aa859dcd[m
Author: Juliana Fajardini <jufajardini@oisf.net>
Date:   Tue Sep 6 16:16:45 2022 -0300

    exceptions: add reject support to exception policy
    
    This enables the usage of 'reject' as an exception policy. As for both
    IPS and IDS modes the intended result of sending a reject packet is to
    reject the related flow, this will effectively mean setting the reject
    action to the packet that triggered the exception condition, and then
    dropping the associated flow.
    
    Task #5503

[33mcommit f5bd55dac863c4c54d6a21942a7ef821f2b4fa4f[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Sep 5 19:28:27 2022 +0200

    decode/tcp: allow 4 byte TFO with 2 byte cookie

[33mcommit 5ef259722bac54cd094d637ed4f97be9a4cfdd4a[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Thu Aug 25 17:21:15 2022 +0200

    dhcp: adds renewal-time keyword
    
    Ticket: #5507

[33mcommit dc593890877acd52ef1d2922d5a508be0b689440[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Mon Aug 22 15:11:34 2022 +0200

    dhcp: fix license in detect-dhcp-leasetime.c
    
    from search and replace overkill

[33mcommit 6faf6299e0c2daac3dbe6e1f93e4e9b9624c1a3d[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Mon Aug 22 15:10:59 2022 +0200

    dhcp: adds rebinding-time keyword
    
    Ticket: #5506

[33mcommit 95f042442304ba8498c6409968f24b7b3c53ffc2[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Fri Jun 17 11:32:17 2022 +0200

    nfs4: fix write record handling
    
    Ticket: #5280

[33mcommit c23560ec415059cbcf22d1c2fd6ecb4e99c6b6ea[m
Author: Josh Soref <2119212+jsoref@users.noreply.github.com>
Date:   Tue Aug 9 08:56:49 2022 -0400

    detect: function header return value clarification
    
    Signed-off-by: Josh Soref <2119212+jsoref@users.noreply.github.com>

[33mcommit bf43011a43a6d542ab2f85aa61986340ed8254c8[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Wed Aug 24 10:24:51 2022 +0200

    dcerpc: convert transaction list to vecdeque for UDP
    
    As was done for TCP in dfe76bb90 and d745d28d4
    
    Ticket: #5518

[33mcommit 5dbbc52b066b2047c4bc30be7fd29dbb3febaf96[m
Author: Gleb Smirnoff <glebius@FreeBSD.org>
Date:   Tue Aug 30 20:15:31 2022 -0700

    ipfw: use PF_DIVERT on modern FreeBSD

[33mcommit bb2e11108b3ce5351f3abf45777c47fca37936af[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Aug 30 13:08:05 2022 +0200

    packetpool: fix uaf in debug validation check
    
    Location of the check meant access to freed packet was possible.
    
    Move check and simplify it to just look at the packet at hand.

[33mcommit b0ce55c9df285ebeddd58ff35dd3f3ef15589671[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Apr 28 11:37:36 2022 +0200

    flow: finish to remove obsolete counters
    
    As was begun in b3599507f4eb891841417575587d690ea13fe6c0
    
    Ticket: #5317

[33mcommit ef54f36e3480c8dfc5a160849e7b9d0fe1351ad6[m
Author: Juliana Fajardini <jufajardini@oisf.net>
Date:   Fri Aug 26 13:13:09 2022 -0300

    userguide: briefly introduce exception policy opts
    
    Added them in the configuration section so folks can be more aware of
    them, while a more complete documentation isn't around.
    
    Related to
    Task #5475

[33mcommit 3c74e443bdd6e666692b1c1da1d0389268b0eec7[m
Author: Juliana Fajardini <jufajardini@oisf.net>
Date:   Fri Aug 26 17:52:46 2022 -0300

    userguide: update defrag settings options
    
    We were still mentioning that there were only three options.

[33mcommit 0cc040cf6128fadedf9ad9a6a23ecccdd4856878[m
Author: Juliana Fajardini <jufajardini@oisf.net>
Date:   Fri Aug 26 17:19:33 2022 -0300

    userguide: merge sections about AppLayer Parsers
    
    We had two sections under the suricata.yaml configuration section
    describing settings for application layer parsers. This merges them into
    one and also fixes a few subsection title levels.
    
    Task #5364

[33mcommit aa5bb2c329aff59b7811b43258ffd4d95fe7364f[m
Author: Juliana Fajardini <jufajardini@oisf.net>
Date:   Wed Aug 17 11:39:33 2022 -0300

    stream: add exception policy for midstream flows
    
    This allows to set a midstream-policy that can:
    - fail closed (stream.midstream-policy=drop-flow)
    - fail open (stream.midstream-policy=pass-flow)
    - bypass stream (stream.midstream-policy=bypass)
    - do nothing (default behavior)
    
    Usage and behavior:
    
    If stream.midstream-policy is set then if Suricata identifies a midstream flow
    it will apply the corresponding action associated with the policy.
    
    No setting means Suricata will not apply such policies, either inspecting the
    flow (if stream.midstream=true) or ignoring it stream.midstream=false.
    
    Task #5468

[33mcommit 242b8f7d65498f7b7b33cf852a79206484c269b1[m
Author: Juliana Fajardini <jufajardini@oisf.net>
Date:   Mon Aug 29 20:32:31 2022 -0300

    exceptions: add callbacks for drop-flow policy
    
    Make sure that when the policy is to drop the flow, we set no inspection
    for payload and packet and disable applayer inspection as well.
    
    Task #5468

[33mcommit fc81c80c0412e11c382a122aa8fa6af441c24499[m
Author: Juliana Fajardini <jufajardini@oisf.net>
Date:   Mon Aug 22 20:05:50 2022 -0300

    suricata.yaml: add exception policy config options
    
    Related to
    Task #5468

[33mcommit 1bff888947345505c773ab07337546aa72e95d16[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sat Aug 27 07:50:45 2022 +0200

    detect: fix duplicate detect state issue
    
    For protocols with multi buffer inspection there could be multiple times
    the same sid would be queued into the candidates queue. This triggered
    a debug validation check.
    
    W/o debug validation this would lead to duplicate work and possibly multiple
    alerts where a single one would be appropriate.
    
    Bug: 5419.

[33mcommit d31beba8d4e75218994a6654af41c947cf24ae51[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Aug 26 20:45:33 2022 +0200

    detect/frames: fix too strict debug check
    
    Frame::len is -1 if it is still unknown. Handle that in the debug
    check.

[33mcommit f04b7a1827845d72b4d0c12f76eadfcc77d726cf[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Aug 16 11:35:01 2022 +0200

    stream/ids: make sure we don't slide past last_ack
    
    Bug: #5401.

[33mcommit 55b2077fcd7b31e141162eaabd2892487716bae8[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Aug 15 14:37:22 2022 +0200

    stream: minor code cleanup

[33mcommit 78045d3bbf20ab1ce7e36705e644b4720755b693[m
Author: Shivani Bhardwaj <shivani@oisf.net>
Date:   Mon Aug 8 09:51:02 2022 +0530

    tls/sni: remove unused fn declaration

[33mcommit a77977ec62d99ae9e88a1ffe1c8fa922c5de45df[m
Author: Shivani Bhardwaj <shivani@oisf.net>
Date:   Wed Jul 27 11:19:48 2022 +0530

    doc: add description for tls.random

[33mcommit 42c3f418c673c4ff4b996062138dc6ad3a255f05[m
Author: Shivani Bhardwaj <shivani@oisf.net>
Date:   Tue Jul 26 16:12:31 2022 +0530

    tls: add tls.random* keywords
    
    Add tls.random keyword that matches on the 32 bytes of the TLS
    random field for client as well as server.
    Add tls.random_time keyword that matches on the first 4 bytes of the TLS
    random field for client as well as server.
    Add tls.random_bytes keyword that matches on the last 28 bytes of the TLS
    random field for client as well as server.
    
    All these are sticky buffers.
    
    Feature 5190

[33mcommit e587f6792afdb863cbe57e972bd395443f23d9d9[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Wed Aug 24 22:22:53 2022 +0200

    detect: support file.data for HTTP1 to server
    
    That is file sent with POST or PUT
    
    Ticket: #4144

[33mcommit 50f877912861360f0461acd05acd7b7b51f9fd0f[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Aug 23 18:27:30 2022 +0200

    flow-manager: reduce burstiness in adaptive timing
    
    Previous adaptive model would have a large time range when scanning the
    hash when not so busy. In the default case it would take up to 4 minutes
    for a full hash scan. In case of sudden increase in business, where the
    hash would fill up rapidily during a few seconds, the flow manager would
    be forced to suddenly consider a much larger slice of the hash leading
    to a burst of work. This burst would increase pressure on the rest of the
    system leading to packet loss as the worker threads would be overloaded
    with flow housekeeping tasks.
    
    This patch reduces the max scan time to 10 seconds, and ramps up quickly
    to increase the slice of the hash scanned.

[33mcommit 58ef3cde7a01166a1ae56b814156e2cad02e1251[m
Author: Juliana Fajardini <jufajardini@oisf.net>
Date:   Wed Aug 24 17:36:47 2022 -0300

    exceptions: error out when invalid policy is used
    
    Before, if an invalid value was passed as exception policy, Suricata
    would log a warning and set the exception policy to "ignore". This is a
    very different result, than, say, dropping or bypassing a midstream flow.
    
    Task #5504

[33mcommit 61b73416e27a07cab50743d69c1cf5cd7f07b45d[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Thu Aug 25 17:05:41 2022 +0200

    detect: transforms check for 0-sized buffer
    
    So as to avoid undefined behavior with a 0-sized variable length
    array
    
    Ticket: #5521

[33mcommit 2cc9152fc937ca1b72438636e949c9248dd1c02b[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Tue Jun 28 15:52:04 2022 +0200

    rust/smb: log uuid of interface in dcerpc
    
    When doing a DCERPC request, we can use the context id to log the
    interface that is used. Doing that we can see in one single event
    what is the DCERPC interface and opnum that are used. This allows
    to have all the information needed to resolve the request to a
    function call.
    
    Feature #5413.

[33mcommit b6f1cf255ced1c3198e60a8ed4dec703adeab38b[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Tue Jun 28 15:50:50 2022 +0200

    rust/smb/dcerpc: parse context id
    
    As context id is used to know to which variant of the endpoint the
    request is done, it is interesting to parse it.
    
    Feature #5413.

[33mcommit d1ebf320f713af6ca102d71d9201a629334d162b[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Wed Aug 24 09:51:52 2022 +0200

    fuzz: disable enip detection based on source port
    
    So as to avoid fuzzing detecting protocol polyglots with enip

[33mcommit 617c9fb7e5f4cde2184f730b8e4e478d2c9983c8[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Thu Jun 16 10:58:42 2022 +0200

    fuzz: remove check about max transactions
    
    Suricata can indeed pipeline many HTTP1 transactions

[33mcommit b01c311c1dbadd0a176073756af75ed3672680cb[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Aug 25 12:23:21 2022 +0200

    profiling: fix implicit-int-float-conversion warnings

[33mcommit aa09d5f5562e92a60685e084f18e81c1b127c566[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Aug 25 12:39:10 2022 +0200

    packetpool: ifdef debug check

[33mcommit e7727c3744bf1ec44d8cd74df6d8dd8bbd725ab8[m
Author: Juliana Fajardini <jufajardini@oisf.net>
Date:   Tue Aug 23 10:35:18 2022 -0300

    decode: remove unused macros, replace w/ functions
    
    With the recent changes, these macros weren't being used anymore.
    
    Related to
    Bug #5458

[33mcommit d07a6c6174cadc2ea29070fc1963c74d20dc56c7[m
Author: Juliana Fajardini <jufajardini@oisf.net>
Date:   Mon Aug 8 11:12:33 2022 -0300

    stream/tcp: remove repeated header declaration
    
    StreamTcpRegisterTests was being declared twice.

[33mcommit f897761ecbc0e78d45110f35b53820d74fd2e1d3[m
Author: Juliana Fajardini <jufajardini@oisf.net>
Date:   Mon Aug 1 20:04:22 2022 -0300

    detect/alert: add unittests to check packet action
    
    Add unittests to check that packet flags are correctly updated after
    detection finds drop or reject rules that match.
    
    Related to
    Bug #5458

[33mcommit abd595d695ce477cccd80ec22ebcc156a544f65e[m
Author: Juliana Fajardini <jufajardini@oisf.net>
Date:   Mon Aug 8 11:04:59 2022 -0300

    decode: validate if dropped packet has drop reason
    
    Related to
    Bug #5458

[33mcommit 1f54e8611ab39ce3509280574d137df23c325658[m
Author: Juliana Fajardini <jufajardini@oisf.net>
Date:   Thu Jul 28 20:05:47 2022 -0300

    detect/alert: ensure reject action is applied
    
    Bug 5458 states that the reject action is no longer working. While SV
    tests that use the reject action still pass, it indeed seems that a
    regression has happened with commit aa93984, because while the
    function that applies rule actions to the flow (RuleActionToFlow) does
    check for the reject action, the newly added function PacketApply
    SignatureActions only checks for ACTION_DROP or ACTION_PASS when
    deciding to call RuleActionToFlow.
    
    Bug #5458

[33mcommit 1774ff18a6ab28233f7b31e0fb6b799d81abf34d[m
Author: Juliana Fajardini <jufajardini@oisf.net>
Date:   Thu Jul 28 12:04:45 2022 -0300

    decode: make PacketDrop use action as parameter
    
    A Packet may be dropped due to several different reasons. This change
    adds action as a parameter, so we can update the packet action when we
    drop it, instead of setting it to drop.
    
    Related to
    Bug #5458

[33mcommit 01bf0ad43db3215ed5061934ddb008370dac3c5c[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Wed Aug 24 21:15:57 2022 +0200

    luajit: fix unittests build
    
    When building with the following options:
    
     ./configure CC=clang --enable-luajit --enable-geoip --enable-unittests
    
    There is a build failure:
    
    runmode-unittests.c:234:9: error: implicit declaration of function 'LuajitSetupStatesPool' is invalid in C99 [-Werror,-Wimplicit-function-declaration]
        if (LuajitSetupStatesPool() != 0) {

[33mcommit c29942c029ba547353f86c8c43f567ce75a346f9[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Wed Aug 24 12:22:02 2022 +0000

    userguide: update dsize documentation/examples
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 7be28aebc64f9e91241009b81dc0c6f2f9902698[m
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Mon Aug 22 19:51:17 2022 +0000

    github-actions: bump actions/cache from 3.0.7 to 3.0.8
    
    Bumps [actions/cache](https://github.com/actions/cache) from 3.0.7 to 3.0.8.
    - [Release notes](https://github.com/actions/cache/releases)
    - [Changelog](https://github.com/actions/cache/blob/main/RELEASES.md)
    - [Commits](https://github.com/actions/cache/compare/a7c34adf76222e77931dedbf4a45b2e4648ced19...fd5de65bc895cf536527842281bea11763fefd77)
    
    ---
    updated-dependencies:
    - dependency-name: actions/cache
      dependency-type: direct:production
      update-type: version-update:semver-patch
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

[33mcommit 11f849c3ee7ef9c02c36a0fcf9ed26f7fc32bc70[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Apr 25 08:23:53 2022 +0200

    protocol-change: sets event in case of failure
    
    Protocol change can fail if one protocol change is already
    occuring.
    
    Ticket: #5509

[33mcommit e94920b49f43bea4220a1bdf32297ec004e58059[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Sep 2 11:40:45 2021 +0200

    smb: do not use tree id to match create request and response
    
    As an SMB2 async response does not have a tree id, even if
    the request has it.
    
    Per spec, MessageId should be enough to identifiy a message request
    and response uniquely across all messages that are sent on the same
    SMB2 Protocol transport connection.
    So, the tree id is redundant anyways.
    
    Ticket: #5508

[33mcommit 9353b07292255025069674df73b84acd88b254db[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Aug 18 15:05:46 2022 +0200

    github: update Rust versions

[33mcommit 3dea69ec8303e8bc2b90ee154423c9bd7aef85e0[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Aug 18 14:27:54 2022 +0200

    github: bump ubuntu-18.04 runners to 22.04

[33mcommit 461725a9bf0e8e6f7037d27422767bed8d98e4ef[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Mon Jul 4 14:25:33 2022 +0200

    dhcp: adds leasetime keyword
    
    As it is logged
    
    Ticket: #5435

[33mcommit f1f43cba5e16666b34467b7b373659c5aa7b210b[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Aug 9 12:21:31 2022 -0600

    app-layer: don't wrap around on port 65535
    
    A port value of 65535 caused the port value to wrap-around to 0
    resulting in an infinite loop.
    
    Fixes: 53fc70a9a73c ("protodetect: fix int warnings")

[33mcommit c8cf25a21a6255a0a0eb8d95f97eee43479654b7[m
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Thu Aug 11 19:35:50 2022 +0000

    github-actions: bump actions/cache from 3.0.6 to 3.0.7
    
    Bumps [actions/cache](https://github.com/actions/cache) from 3.0.6 to 3.0.7.
    - [Release notes](https://github.com/actions/cache/releases)
    - [Changelog](https://github.com/actions/cache/blob/main/RELEASES.md)
    - [Commits](https://github.com/actions/cache/compare/v3.0.6...a7c34adf76222e77931dedbf4a45b2e4648ced19)
    
    ---
    updated-dependencies:
    - dependency-name: actions/cache
      dependency-type: direct:production
      update-type: version-update:semver-patch
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

[33mcommit 3eb4fee040e7d3623489e92198e4f29f3bb00d3f[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Aug 17 09:37:50 2022 +0200

    rust: set MSRV to 1.58.1
    
    Ticket: #4163.

[33mcommit c81b78fd1c9a6e86d6be14b7567c5b8d8c89d6af[m
Author: Juliana Fajardini <jufajardini@oisf.net>
Date:   Mon Aug 15 15:57:58 2022 -0300

    detect/parse: test sig parsing for more actions
    
    Our unittests were only covering sig parsing for alert actions. As in
    environments without LibNet the reject action will not work, we must
    ensure that our parser properly fails in such cases, instead of silently
    accepting an unsupported action.
    
    Added tests for the reject and drop action.
    
    Task #5496

[33mcommit 2c4d6b33aec856e7836136a0f97d05de794f0ec0[m
Author: Shivani Bhardwaj <shivani@oisf.net>
Date:   Fri Aug 12 15:16:14 2022 +0530

    doc/conf: fix sphinx language setting
    
    sphinx-build 5.1.1 and above throws a warning which is treated as an
    error while building.
    
    Invalid configuration value found: 'language = None'. Update your configuration to a valid language code. Falling back to 'en' (English).

[33mcommit 9b4a133777e8d25eda0f9f44095bc4a10d8cce21[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Sun Jul 24 21:54:24 2022 +0200

    http2: remove to_vec for comparisons
    
    Ticket: #5454

[33mcommit d011b468da237c2d2e8b704dce9041ba40be5e01[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Wed Aug 3 08:29:40 2022 +0200

    http2: fix clippy warning about &Vec<u8>
    
    Using &[u8] instead in function prototype

[33mcommit 14561ffe724eea7fe28cc852b09f1727c9df66f5[m
Author: Shivani Bhardwaj <shivani@oisf.net>
Date:   Wed Jun 29 16:52:10 2022 +0530

    eve/schema: add smtp url bool fields

[33mcommit 954e3e1f3ff9da4ee3ab3108f916a1df5e5548ec[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Sat Jun 18 15:33:43 2022 +0200

    smtp/mime: fix url extraction when no config is set

[33mcommit ad6c2f1411c21d6fdcd580c30d72cc31a607e4e2[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Mon Dec 20 00:36:52 2021 +0100

    eve/email: log existing url type
    
    MIME parsing was setting flag on URL to indicate their
    estimated type. This patch attach the information to
    the email object so the user can extract interesting
    email directly:
    
    ```
      "email": {
        "status": "PARSE_DONE",
        "from": "Eric Leblond <regit@regit.org>",
        "to": [
          "eric@regit.org"
        ],
        "has_ipv6_url": false,
        "has_ipv4_url": false,
        "has_exe_url": true,
        "url": [
          "http://www.toto.com",
          "http://perdu.com.",
          "https://hacke.me/pown.exe"
        ]
      }
    ```

[33mcommit 767d2cc9ba4cf0fcf87dae8515728c6078b21cea[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Mon Dec 20 01:02:40 2021 +0100

    util/mime: add some extensions to exe list

[33mcommit 3b1b9a32fbb24819e7d23325e6e75f2936bc11d0[m
Author: Benjamin Wilkins <benjamin.wilkins@uwaterloo.ca>
Date:   Wed Nov 3 13:20:06 2021 -0400

    doc: Document SCByteVarGet lua function
    
    Add documentation for accessing results from byte_extract and byte_math
    in lua match functions
    
    Issue: 2871

[33mcommit 57ef80f5ece03a57c363a08c1ada26f83087cc84[m
Author: Benjamin Wilkins <benjamin.wilkins@uwaterloo.ca>
Date:   Tue Oct 26 15:20:41 2021 -0400

    lua: Expose byte extract to lua match scripts
    
    Allow lua match scripts to access variables defined in rule by
    byte_extract or byte_math
    
    Issue: 2871

[33mcommit 3de735ae7020da4e9ea42f12676609a9ec637d1a[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Sun Jul 24 22:18:29 2022 +0200

    ike: log ikev1 tx fields instead of state ones
    
    As state fields can grow abitrarily, and this can lead to DOS
    by quadratic complexity (CPU time and disk space)
    
    Adds a direction field to retain all the information in the
    transaction.
    
    Also checks array vendor_ids had at least one element before
    logging it.
    
    Ticket: #5455

[33mcommit d0171d7418a5e7bd1c52a08190d19a88595e9700[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Sun Jul 31 15:50:26 2022 +0200

    ike: rustfmt

[33mcommit 2b83cc799d7574db5a2220c8b8cbdf1bd474a5f7[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Aug 8 13:17:01 2022 -0600

    github-ci: add AlmaLinux 9 build

[33mcommit d9b6e1d96748b6e49d0cccd0c45cc956ba1e2d74[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Sun Aug 7 10:24:56 2022 -0600

    github-ci: test execution of suricatasc and suricata-update

[33mcommit 9a1d6af8582be4b817e9f0ffb9d5f591dfc31fb9[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue May 3 12:34:57 2022 -0600

    python: install without distutils
    
    Instead of using distutils/setuptools for installing the Python code,
    just install it into our own Python directory.
    
    Distutils is being removed from Python, and setuptools doesn't work well
    when trying to install into your own location. For our usage its just
    simpler to install with make.
    
    In addition to removing the configure check for distutils, also remove
    the check for pyyaml. This lets the user install pyyaml after Suricata
    is installed, and Suricata-Update does handle this case gracefully.
    
    Issue: #5313

[33mcommit debdff0375b73eb70344ea2db2b698518095d666[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Thu Aug 4 16:21:27 2022 +0200

    detect/tls: fix descriptions
    
    Most keywords were presented as content modifiers when they
    were in fact sticky buffers.

[33mcommit 5fbec8ca67fba4c6d8efd4c08b37b8d6d9747d23[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sat Aug 6 10:06:58 2022 +0200

    netmap: fix includes

[33mcommit 8bf45c5f7486ad5366fa2a44fa370696bcc467bb[m
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Fri Aug 5 20:05:18 2022 +0000

    github-actions: bump actions/cache from 3.0.5 to 3.0.6
    
    Bumps [actions/cache](https://github.com/actions/cache) from 3.0.5 to 3.0.6.
    - [Release notes](https://github.com/actions/cache/releases)
    - [Changelog](https://github.com/actions/cache/blob/main/RELEASES.md)
    - [Commits](https://github.com/actions/cache/compare/0865c47f36e68161719c5b124609996bb5c40129...f4278025ab0f432ce369118909e46deec636f50c)
    
    ---
    updated-dependencies:
    - dependency-name: actions/cache
      dependency-type: direct:production
      update-type: version-update:semver-patch
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

[33mcommit a5d66a7452ba7aba6f3239aab478f0c9cb695ea6[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue May 3 13:36:11 2022 -0600

    bundle.sh: comment line fixup
    
    Accept lines that start with a hash, but not immediately followed by a
    space as a comment as well.

[33mcommit 489ac003b202ad69ed69f3c0f1e9806fd3f80f19[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Jul 12 14:30:05 2022 +0200

    detect/krb: no more wrapper around DetectEngineInspectGenericList

[33mcommit 5c7b5c5fb5f3e8afe6aeafca27b7ab7f88aef232[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Jul 22 17:21:31 2022 +0200

    krb: detection for ticket encryption
    
    As is done for logging.
    
    Ticket: #5442

[33mcommit 64b2385c645400309f69b5acc12f97fe9f518b83[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Jul 22 17:20:58 2022 +0200

    krb: log for ticket encryption
    
    Also logs if the ticket encryption is weak.
    It is different from the encryption used for the rest of the
    packet, and this allows to detect kerberoasting attack.
    
    Ticket: #5442

[33mcommit 7fcc6696cb283b8ec9e3c9640726376821087883[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Jul 12 15:25:50 2022 +0200

    krb: rustfmt kerberos.rs

[33mcommit 675de334056cdd048d96bdb2dec2341dfd2d1647[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Jul 12 09:17:50 2022 +0200

    krb: bump up crate version
    
    kerberos parser crate is also used by other procotols : nfs and
    smb. These protocols use an older der_parser crate version.
    Upgrading der_parser will simplify the code further.

[33mcommit 783dff2c38821e4cc54173062a27161807df580e[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Jul 12 11:53:44 2022 +0200

    krb: rustfmt detect.rs

[33mcommit 5fec07b87d5e3e8641f76ae36d2cafd2a38384aa[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Aug 5 17:10:54 2022 +0200

    flow: minor compiler warnings
    
    flow-util.c: In function 'FlowEndCountersRegister':
    flow-util.c:294:34: warning: 'name' may be used uninitialized in this function [-Wmaybe-uninitialized]
      294 |         fec->flow_tcp_state[i] = StatsRegisterCounter(name, t);
          |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~

[33mcommit 4aa4ad3f7406acc4c69dd93f0a8193729240cfc9[m
Author: Jeff Lucovsky <jlucovsky@oisf.net>
Date:   Tue Jul 12 09:07:49 2022 -0400

    stream/rules: add example rule for reassembly depth
    
    Issue: 3512

[33mcommit e133ab029ee8fc05b64675e356e225c7fe16066e[m
Author: Jeff Lucovsky <jlucovsky@oisf.net>
Date:   Tue Jul 12 09:07:00 2022 -0400

    stream/event: Trigger stream reassembly event
    
    Issue: 3512
    
    This commit triggers the stream reassembly depth reached event.

[33mcommit 1d8cc7791d8850672afa1f5a565ba135635e3a93[m
Author: Jeff Lucovsky <jlucovsky@oisf.net>
Date:   Tue Jul 12 09:06:38 2022 -0400

    general: Typo fixup

[33mcommit 6a039ab316016d5d775e2b7e5588ec1faae08db6[m
Author: Jeff Lucovsky <jlucovsky@oisf.net>
Date:   Tue Jul 12 09:03:29 2022 -0400

    stream/event: New reassembly depth event
    
    Issue: 3512
    
    This commit adds a stream event triggered when the stream assembly depth
    is reached.

[33mcommit e1e03c25c9c4289e10bbcadd0fd86ab41a3e4003[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Wed Aug 3 10:11:55 2022 +0200

    ci: update to macos latest

[33mcommit f3d3274e926066909362efb5f7d41773bdd84d31[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Aug 2 11:34:37 2022 -0600

    github-ci: enable nfqueue on fedora 36 build

[33mcommit c862e84c01d59b71cd44b57998936c48b4d142b2[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Jun 29 11:28:25 2022 -0600

    rust/frames: cleanups
    
    - Implement the Display trait on Direction to print "toserver" or
      "toclient" which used in a format string.
    
    - Use Direction struct inside Frame instead of a u32.  Requires a helper
      method as there are two representation in C for direction, and the C
      methods for frames don't use the internal representation of the
      Direction enum (some sweeping changes could help here)

[33mcommit f92708b8cacb89171692d64b0cf6309d2f959952[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Feb 18 12:27:35 2022 -0600

    rust/frames: derive direction from StreamSlice
    
    On the Rust side, a Frame requires a StreamSlice to be created. We can
    derive the direction from the StreamSlice removing the need for callers
    to provide the direction when operating on the frame.

[33mcommit b39d7f46e7de2694f36a9e52d9315da2188b9734[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Jun 29 15:19:09 2022 -0600

    dns/tests: fix StreamSlice to satisfy debug validation

[33mcommit f3b6fd3329184ba4e4c1dd5c67f0badd2e21ce76[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Tue Aug 2 14:23:41 2022 +0200

    quic: update to nom7

[33mcommit 95125811b82155c6e184b3d4109ad0c43622a353[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Sun Jul 31 20:22:59 2022 +0200

    quic: reassemble crypto frames and parse it

[33mcommit 301ab96a71d58a45ef547ad08696dd5e390af8e6[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Fri Jul 1 11:26:17 2022 +0200

    ci: have one github workflow with MSRV

[33mcommit 896f0d91ce332bd98d6ba43001bf65de245f2c56[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Jun 8 11:23:47 2022 +0200

    quic: complete schema.json
    
    adding ja3 and extension fields

[33mcommit f242fb7f22a879db0af62a173fdf2d92ab6357a3[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Mar 16 14:45:41 2022 +0100

    quic: events and rules on them

[33mcommit b9c1d9e86b9513a050f6f307f9c83e8d23d335e0[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Mar 4 10:31:16 2022 +0100

    quic: parse gquic version Q039
    
    Ticket: #5166

[33mcommit 018fef5ef8f000778d6e3203612dbeec4d42ae9e[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Mar 25 14:53:09 2022 +0100

    quic: ja3 computation and logging and detection
    
    Logging as is done in TLS.
    
    Detection using the generic generic ja3.string keyword
    
    Ticket: #5143

[33mcommit c6cf61a39b8cb820b4a1b0b487a3b44e2c8dd2ec[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Feb 14 09:38:10 2022 +0100

    quic: complete parsing of initial for non gquic
    
    The format of initial packet for quic ietf, ie quic v1,
    is described in rfc 9000, section 17.2.2
    
    Parse more frames and logs interesting extensions from crypto frame
    
    Do not try to parse encrypted data, ie after we have seen
    a crypto frame in each direction.
    
    Use sni from crypto frame with tls for detection already implemented
    
    Ticket: #4967

[33mcommit 7044131c39299dac654f1041415afdc338a1cf6a[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Feb 14 09:06:02 2022 +0100

    quic: rustfmt

[33mcommit 0c346af4a97ea1f318dde96d860fdd93866e187c[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu May 5 14:18:15 2022 +0200

    rust: bump up digest crates
    
    so that we can use hkdf crate for quic

[33mcommit 2294e9cdbc3fce783dd560d845c0f47c62d74a67[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Feb 22 08:49:46 2022 +0100

    rdp: bump up tls-parser crate version
    
    so that we can use new functions in quic parser

[33mcommit 5f4bcfe313c879fb411ef9a6e2c4561764e45c26[m
Author: Juliana Fajardini <jufajardini@oisf.net>
Date:   Tue May 10 17:01:20 2022 -0300

    detect/engine: fix typos in assorted files

[33mcommit 58928b249d3b5b9740bc7d35cd392c265097648c[m
Author: Juliana Fajardini <jufajardini@oisf.net>
Date:   Mon May 9 11:57:31 2022 -0300

    commandline: add alert-queue expand failure option
    
    For testing purposes. Meant to simulate a reallocation failure when
    dynamically growing the alert queue in DetectEngineThreadCtx, so we can
    check that Suri's behavior doesn't break under such circumstances.
    
    Task #5319

[33mcommit ebc2714e07a0b7cf42cfb2ebd12f4a2148d327a8[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Jul 28 21:38:46 2022 +0200

    nflog: fix missing util-time include; cleanups

[33mcommit 09c012813817d68d04340900685b7332cd9c14eb[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Jul 28 21:38:24 2022 +0200

    nflog: update copyright years

[33mcommit e5665638755b950b63790aba174dfedb58f055cd[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon Jan 10 13:20:29 2022 -0500

    classification/config: Propagate validation errors
    
    Issue: #4554
    
    This commit modifies the workflow to propagate classification parsing
    errors when in test mode.
    
    When not in test mode, errors continue to be displayed but they do not
    halt Suricata execution.

[33mcommit 2621c90ea16d0d35b1fb67e52c7e31931a86165c[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Jan 27 14:09:15 2022 -0500

    classification/config: Raise error on validation errors
    
    This commit adds logic which raises an error if parse errors occur while
    loading classification.config
    
    Issue: 4554

[33mcommit 61f9f0df55a0e358d43786e51c1ac9bdfd57159c[m
Author: Jufajardini Reichow <jufajardini@oisf.net>
Date:   Wed Jul 20 13:35:07 2022 -0300

    userguide/rules/meta: minor formatting adjustments

[33mcommit 45f14bb97c8ee5eeba2313b66cf213b1f4cdf0d8[m
Author: Jufajardini Reichow <jufajardini@oisf.net>
Date:   Tue Jul 19 18:28:19 2022 -0300

    userguide/rules: explain sid uniqueness within gid
    
    While Suri will throw an error if two signatures have the same `sid`
    and no `gid`, or same `sid` and same `gid`, it will just accept same
    `sid` for different `gid`s.
    
    Related to
    
    Task #5441

[33mcommit 83a8cd80b2938bc2312668967bf58b54b8a33d05[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Jul 12 14:30:05 2022 +0200

    detect: remove wrappers around DetectEngineInspectGenericList

[33mcommit 7eaf1688b5992c1c951a9b44c3432167d3b0c35b[m
Author: Scott Jordan <scottfgjordan@gmail.com>
Date:   Fri Jul 15 10:50:21 2022 -0400

    stream: fix StreamTcpSegmentForSession missing segments
    
    Bugfix, segment traversal was being initialized at root node, but
    should have been started at the min node. Bug resulted in captures
    missing segments left of root node.

[33mcommit 87990b138c1b9fa2d045df2df7eed856b8da5b0f[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Mon Jul 18 22:39:48 2022 +0000

    doc: update priority wording userguide meta
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit a7d739a05b794a976829484766f4896f842ba5eb[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Mon Jul 18 22:30:30 2022 +0000

    doc: update to 80 char formatting userguide meta
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 9bd55ff81bfe04c436c73cc8dcad79710714a26b[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Mon Jul 18 22:20:46 2022 +0000

    doc: metadata information update userguide meta
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 563dc668376c2e4346218b849d95e04272b93ac5[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Mon Jul 18 22:11:50 2022 +0000

    doc: update priority information userguide meta
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit f73a60eb89dc910533c5e2956a5f9acb02da2782[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Mon Jul 18 22:07:54 2022 +0000

    doc: update reference section in userguide meta
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit e611ef5ccb0dc6c4d2384323b90a4857450bcf7a[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Mon Jul 18 22:00:41 2022 +0000

    doc: update userguide meta classtype information
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 39bc56ec9723cb69e406e0af5e55654ed8117398[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Mon Jul 18 21:55:33 2022 +0000

    doc: update rev and gid userguide meta wording
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit b9cb66c58f3821c460242dc1fbc55660c6b43124[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Mon Jul 18 21:12:46 2022 +0000

    doc: add clarity around userguide meta information
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 790ef9a53f2cec579f609666fb11bf45be6d2887[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Fri Jul 15 20:55:52 2022 +0000

    doc: add sid reserved range reference
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 38a179d89d907ea63ce5d004a3615454f49daf15[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Fri Jul 15 19:27:19 2022 +0000

    doc: add clarity to rule msg tips
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 299a931e4924f5e2cb6a94fe470fc98fec44166c[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Thu Jul 14 20:05:03 2022 +0000

    doc: update example rule list
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 98c29da6ecd2573b6cce716a80e8d0801596faf2[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Thu Jul 14 19:28:22 2022 +0000

    doc: add clarity to role wording
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit c0bdb6cc1033000dc260621dd28f4122eadb7fd3[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Tue Jul 12 22:05:16 2022 +0000

    doc: meta keyword doc example rule update
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit ca9e9009ba05aa7882c7e691a89f8c0f8792a4b2[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Mon Jul 25 23:22:00 2022 +0000

    doc: add bsize keyword examples
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit ad3e68f3781f62cc3f529f055881cfc1cb5a44bf[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Jul 28 11:17:04 2022 +0200

    detect/file: minor cleanups

[33mcommit af145ad125fb45d3eaec034054b08c7421e48a20[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Jul 28 11:16:37 2022 +0200

    detect/file: reduce scope of keyword data structures

[33mcommit 73eb7744d89fb39df98bad88da43ce535225df19[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Jul 28 11:12:55 2022 +0200

    detect/file: update copyright years

[33mcommit 6f8ca41eb3efef04cb4f65f4563a426a709bc06b[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Jul 28 08:20:55 2022 +0200

    detect/cip: cleanup includes

[33mcommit 11e0eb9c893654e57f32c521cf9c99e74f8d8d83[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Mon Jul 4 15:28:39 2022 +0200

    quic: do not log empty cyu array
    
    Ticket: #5167

[33mcommit 16fc78645dc75b6e43c6d8a69ba8f3a25ffa67b6[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Mon Jul 4 10:51:15 2022 +0200

    dnp3: do not log empty objects array
    
    Ticket: #5167

[33mcommit 632581ac957ec578d6cec677f2949716d762597d[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Fri Jul 1 21:28:12 2022 +0200

    ike: do not log empty notify array
    
    Ticket: #5167

[33mcommit 262a93ce1815900fde837a7cd7bfa4cd17e43d50[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Fri Jul 1 15:56:29 2022 +0200

    mqtt: do not log reason_codes if there is none
    
    Ticket: #5167

[33mcommit da0be16d360c891ffdee6b8648bb7f81e9020613[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Fri Jul 1 15:52:33 2022 +0200

    output: do not log empty arrays for sid
    
    Ticket: #5167

[33mcommit f9c9091bb50ea59e070c2785314587f23412d831[m
Author: Jufajardini Reichow <jufajardini@oisf.net>
Date:   Mon Jul 11 20:04:57 2022 -0300

    userguide: fix typo in inline mode illustration
    
    The image describing Suricata's sliding window had two of the "packets"
    with the same text. Now they actually give the sense of a sliding
    window.
    
    This was found by Zhiyuan-liao.

[33mcommit 8090cba7c41b9dcf2bfc7a666a3a31bd29b35bfe[m
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Thu Jul 14 19:33:33 2022 +0000

    github-actions: bump actions/cache from 3.0.4 to 3.0.5
    
    Bumps [actions/cache](https://github.com/actions/cache) from 3.0.4 to 3.0.5.
    - [Release notes](https://github.com/actions/cache/releases)
    - [Changelog](https://github.com/actions/cache/blob/main/RELEASES.md)
    - [Commits](https://github.com/actions/cache/compare/c3f1317a9e7b1ef106c153ac8c0f00fed3ddbc0d...0865c47f36e68161719c5b124609996bb5c40129)
    
    ---
    updated-dependencies:
    - dependency-name: actions/cache
      dependency-type: direct:production
      update-type: version-update:semver-patch
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

[33mcommit adeb1fdfc32f5ec2e98dcce01010e0304983508f[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Wed Jul 6 15:27:10 2022 +0200

    threads: cleaner code with one instruction per line
    
    As reported by Shchelk

[33mcommit 9fa0033966be34b73a86e178c9f0d95ddb795e51[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Jul 27 16:05:08 2022 +0200

    detect: reduce datatype scope for various keywords

[33mcommit ad76502df0788d8f8c30b6a5cf6a9a88816a3f62[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Jul 27 16:04:17 2022 +0200

    detect/cip: remove dead code

[33mcommit 08e349a8bb0dbd16c0cc549eccb9f16030d6eb0c[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Jul 27 14:14:36 2022 +0200

    detect: update copyright years

[33mcommit 0ec9379db91646264197ac9c1cbbec8be74e4e73[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Jul 27 08:37:20 2022 +0200

    includes: minor cleanups

[33mcommit 21f76773c718a39d5f26c9de090196813f1532f9[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Jul 27 08:10:09 2022 +0200

    profiling: minor code cleanups

[33mcommit e69e99f82096638686fbaa0f7dd513b92291f2f4[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Tue Jul 26 16:13:52 2022 +0200

    ci: checks include are necessary in github

[33mcommit 36b1344680c19117cb35489687a45bf38c5c381f[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Tue Jul 26 15:17:56 2022 +0200

    util: fix integer warnings in profiling

[33mcommit 4411ef785d923de93c34fa4346aa81ec20bd63ae[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Mon Jun 27 13:20:29 2022 +0200

    src: remove unused header files

[33mcommit 02f2602dde1893ba83eea9d212af9e1def365ef9[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Mon Jun 20 13:57:18 2022 +0200

    src: rework includes as per cppclean

[33mcommit 93c2c9743d4ebe35017317a2668c6f8a54498d34[m
Author: Jufajardini Reichow <jufajardini@oisf.net>
Date:   Mon Jul 25 20:47:23 2022 -0300

    detect/engine: init alert queue counters on reload
    
    alert_queue_overflow and alerts_suppressed were not being
    reinitialized when there was a reload of Suricata rules, leading to
    non-valid stats counters if that happened.
    
    Bug #5457

[33mcommit f8bf5817752f19565f1b7449710d1e6a2a96d00a[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Mon Jul 4 10:30:20 2022 +0200

    output: skip files logging for ICMP packets
    
    Ticket: #5408

[33mcommit 5781631f858b078ad8e5d7982074f41a08699ee2[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Fri Jul 1 13:22:38 2022 +0200

    output: use flow's proto for file loggers
    
    As there can be an ICMP packet which gets related to a TCP flow.
    
    Ticket: #5408

[33mcommit 7f9d25fa860673e4a84fc2b0ea9f8814fd63de3c[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Fri Jul 1 13:06:59 2022 +0200

    fuzz: use forced file store
    
    to find bugs such as 5408

[33mcommit a2f857ed900fcefdb775203825a262f4f1ed3343[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Apr 28 16:24:46 2022 +0200

    threshold: fix regex to accept by_both and by_rule
    
    As is done in detect-threshold.c or in DETECT_RATE_REGEX
    and is expected by switch (rule_type) which makes the same
    for THRESHOLD_TYPE_THRESHOLD and THRESHOLD_TYPE_RATE
    
    Ticket: #5327

[33mcommit 1621f5e453370fca9553c2468a8e8f9e985c1879[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Fri Jun 10 15:17:05 2022 +0200

    detect/nfs: use inclusive ranges

[33mcommit 8dbb07e4fe85a062fb146447fdd8ab870b63a59b[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Thu Jun 9 21:11:22 2022 +0200

    detect: use generic integer functions for itype
    
    Ticket: #4112

[33mcommit 2817f1a6ed2be762631617d3f4cef9b744c84472[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Thu Jun 9 21:00:34 2022 +0200

    detect: use generic integer functions for snmp.version
    
    Ticket: #4112

[33mcommit c72571ea283b6264e9e67454ea179d741bef21e3[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Thu Jun 9 20:55:58 2022 +0200

    detect: use generic integer functions for rfb.sectype
    
    Ticket: #4112

[33mcommit 6c9091c86f625f5db40b729eb4e60b29f621f005[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Thu Jun 9 20:51:59 2022 +0200

    detect: use generic integer functions for nfs.version
    
    Ticket: #4112

[33mcommit ddac6165c9ce1bbafdcf1f9f36bb3f4bdb0b9b21[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Thu Jun 9 20:43:42 2022 +0200

    detect: use generic integer functions for nfs.procedure
    
    Ticket: #4112

[33mcommit ed6955ee988db1be2eafe64983e28a097dbacf35[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Thu Jun 9 15:42:40 2022 +0200

    detect: use generic integer functions for iprep
    
    Ticket: #4112

[33mcommit bdc359bed3d5382ad3b3c41081dfccebde9babac[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Thu Jun 9 14:53:46 2022 +0200

    detect: use generic integer functions for bsize
    
    Ticket: #4112

[33mcommit cfb60d0fce0357b167e025b193d1c896a1c53519[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Thu Jun 9 11:46:38 2022 +0200

    detect: use generic integer functions for urilen
    
    Ticket: #4112

[33mcommit e87c53bb55c5adb3e8ee319a85bcf1b42143e269[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Apr 29 11:58:10 2022 +0200

    defrag: use util function for timeout
    
    To fix timestamp overflow as found by oss-fuzz
    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=44608
    
    fixu

[33mcommit d600a1603c3e7cf4ebad64e0b1c5be02e9cea33f[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Sat Jun 11 11:36:48 2022 -0400

    detect: update text for nocase used with http.host
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 34e0a384ad85333d51e06b0397e2dbc1e2fe8262[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Wed Jun 15 23:00:36 2022 +0000

    doc: update to include additional rule references
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 440570437210047bad706f22689937acfa991ae6[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Mon Jun 6 20:05:37 2022 +0000

    doc: update intro direction content
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 3eeacf8a3dacfb05fcb92bc04da85b104a59385c[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Fri Jun 3 21:51:15 2022 +0000

    doc: fixed HOME_NET/EXTERNAL example formatting
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit f2c79989036b757d8a5bc57a19e00a6c25b41424[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Fri Jun 3 19:50:55 2022 +0000

    doc: add clarity around HOME_NET/EXTERNAL_NET
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 76cca8b08ab7babc2ecfb50afc74a296ec456cda[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Fri Jun 3 19:48:00 2022 +0000

    doc: minor example rule description update
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 4f61a35fe7994359d3bf9de42ab549c1c642ed14[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Fri Jun 3 19:44:30 2022 +0000

    doc: minor wording restructure
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 845ba154a6ff869ac8a65dfd3b85142b7f8762c0[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Fri Jun 3 19:08:14 2022 +0000

    doc: add tcp-pkt/tcp-stream to intro
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 56f49bfe8e657b8fcc4d2a8f358e69190f90f8d9[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Fri Jun 3 19:01:04 2022 +0000

    doc: minor punctuation update
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit ab300ab0aedfe58440ad1ee46f19a32a9f0168d9[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Fri Jun 3 17:25:35 2022 +0000

    doc: intro example rule update to simpler example
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 2f240230f0cb0d052516272a5ad3c5d5e3f3b600[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Fri Jun 3 15:37:22 2022 +0000

    doc: minor intro wording update
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit c57052181c9e9fd9ec54f7b1ca4740f4be6cdece[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Wed Jun 29 21:30:41 2022 +0200

    snmp: rustfmt detect.rs

[33mcommit c7214be99b37455186b83ab81e9d0d27dffdf7c7[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Sat Jun 25 09:12:31 2022 +0200

    snmp: adds usm keyword
    
    as is logged
    
    Ticker: #5416

[33mcommit 4adab8f271056f88d8066a69bfb558dd0ed30bdd[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Jun 30 17:13:09 2022 +0200

    github/codeowners: update

[33mcommit 5a31b3508d6bec7df1a77e0422360c155a3de9f9[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Apr 29 13:12:56 2022 +0200

    ftp: optimized tx iterator
    
    To be more efficient with larger number of transactions.
    
    Ticket: #5314

[33mcommit 6d3140bc012b093a361506b5c4f21cc9ae8878e8[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Jun 29 11:16:43 2022 +0200

    mime: remove unused length fields

[33mcommit 816bbeb7dc3684d47d47c35a2255db0671760baa[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Jun 28 20:20:37 2022 +0200

    fuzz/mime: fix call conditions and args
    
    The SMTP parser should not supply lines w/o EOL chars to the mime
    parser unless its in the BODY parsing stage. Mimic this in the fuzz
    target by testing the state for inputs that have no EOL.
    
    Additionally, make sure the delim cnt reflects the missing EOL.

[33mcommit d81582c4a2b5b9cd6000c8637a7c6bc9b8f4dfd6[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Jun 28 15:29:25 2022 +0200

    mime: fix corner case
    
    Fix a corner case where a base64 sequence including a space was followed
    by a newline in the input data.

[33mcommit 5805ed47f51edbb2319f687cfa4fe503d6f0f0e3[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Jun 28 15:29:11 2022 +0200

    mime: add base64 related debug messages

[33mcommit 41c2c1ed5a8a1f71e4cab02bb28567da9171332d[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Jun 28 13:07:37 2022 +0200

    mime: improved empty line handling
    
    Make sure a new body is not set up on empty lines unless it is
    a body that is not encoded as base64/quoted printable.

[33mcommit 074cfb5c68e76642f35f78c10e56761eb8010f5f[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Jun 28 07:46:54 2022 +0200

    mime: fix and cleanup tests
    
    Line count check was failing after recent delim handling updates.

[33mcommit 6e2c066ce1cf722e92f08574059b6138be4f0b1e[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Jun 27 20:51:53 2022 +0200

    smtp: fix passing a wrong delim len around

[33mcommit b82b8825e79bd43901720813b672a9ff5c7bf120[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Jun 27 20:15:16 2022 +0200

    mime: properly pass full lines to non-decoded body
    
    Use actual delim count and make sure we also pass on empty lines
    (so delim(s) only).

[33mcommit 0d6ab727c55cbda04404ec44c5aa6582f3922478[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Jun 27 16:20:02 2022 +0200

    mime/base64: fix final data not getting processed
    
    If the last data of the body was not a multple of 4 and not padded
    to be a multiple of 4, it would not be processed.

[33mcommit 100d821a9fbe61709be275f77341438626a561e8[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Jun 27 11:34:14 2022 +0200

    stream: fix GAP check
    
    Gap check would consider a GAP when the current data was in fact
    exactly not a gap, but next segment(s) were already available.

[33mcommit 29ec1b1e7b0ddd93adc2d40c2439f0c904191c0a[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sun Jun 26 22:43:38 2022 +0200

    mime: minor code cleanup

[33mcommit 0871029d17d23a7875af074d76965675c31599f0[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sun Jun 26 16:25:36 2022 +0200

    mime: remove unused 'linerem' logic

[33mcommit 5953a7d2ebd20be2a9f578fae66face4e172b678[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sun Jun 26 02:29:34 2022 +0200

    smtp/mime: fix parsing edge case
    
    Correctly track "remaining" bytes after partial base64 decoding.
    
    Add comment clarifications and debug validation checks.

[33mcommit a38f2f2a52822f150fff0d5e17e9f62582d6558c[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sat Jun 25 13:01:37 2022 +0200

    smtp: skip preprocessing for mime headers
    
    Mime parser doesn't expect partial lines, which preprocessing can
    provide. Add a check to let mime headers be handled by regular line
    parsing.

[33mcommit 929faae6d4d9c829085d4f93ea73fc7c78839cc4[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Jun 17 13:23:26 2022 +0200

    eve/schema: add drop.udplen, email fields

[33mcommit 2544be4672215d8c86c68f0d03c8fd88f498f1d2[m
Author: Juliana Fajardini <jufajardini@oisf.net>
Date:   Tue Jun 28 17:06:50 2022 -0300

    source/pcap: fix infinite loop if interface goes down
    
    When in live-pcap mode, if the sniffed interface went down and up again,
    Suri would enter an infinite and keep running, while not registering new
    events. This fixes that behavior by allowing Suri to retry to open the
    pcap in case of a retry on an already activated capture
    ('PCAP_ERROR_ACTIVATED').
    
    This change is based on Zhiyuan Liao's work.
    
    Bug #3846

[33mcommit dc6fff2cca643b0f8b429fc4b2d60c8c421945be[m
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Tue Jun 28 19:39:06 2022 +0000

    github-actions: bump ossf/scorecard-action from 1.1.1 to 1.1.2
    
    Bumps [ossf/scorecard-action](https://github.com/ossf/scorecard-action) from 1.1.1 to 1.1.2.
    - [Release notes](https://github.com/ossf/scorecard-action/releases)
    - [Changelog](https://github.com/ossf/scorecard-action/blob/main/RELEASE.md)
    - [Commits](https://github.com/ossf/scorecard-action/compare/3e15ea8318eee9b333819ec77a36aca8d39df13e...ce330fde6b1a5c9c75b417e7efc510b822a35564)
    
    ---
    updated-dependencies:
    - dependency-name: ossf/scorecard-action
      dependency-type: direct:production
      update-type: version-update:semver-patch
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

[33mcommit 585e5e0d3c4e979734946bf43bcb7ebd7ab4458a[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Mon Jun 27 16:10:51 2022 +0200

    detect: impose limits on pcrexform
    
    As is done for pcre keyword
    
    Ticket: #5409

[33mcommit 45b7aad2b50578efbe6f5034b2545d4340d576b0[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Wed Dec 22 12:47:24 2021 +0000

    devguide: incorporate contribution process page
    
    That page existed only in our redmine. Updated and added a few things,
    like a paragraph about our expectations for feature contributors.
    
    Also updated links, contacts and some other processes that may have
    changed since last edition.
    
    Added some section labels in related documents, for ease of referencing.
    
    Task #4929

[33mcommit a89840929b46b765787bec3ae5cad529f558af0a[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Jun 16 17:27:35 2022 +0200

    detect: set drop reason for rule based drops
    
    Call `PacketDrop` with drop reason for drops, keep old logic
    in place for the rest.

[33mcommit ad14e71efeff0a636afef7b885dea6145637bf93[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Jun 16 17:07:49 2022 +0200

    stream: suppress exception policy debug message

[33mcommit 046287c2b5e4f34b9c8e21a0af88d58f5c19c295[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Jun 10 10:34:47 2022 +0200

    detect/filestore: clean up stream flag handling

[33mcommit 7ced8de6c4659f21bb928d70a950f32016037da2[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Jun 13 17:21:51 2022 +0200

    github/workflows: add cargo for all Ubuntu jobs

[33mcommit 3617be326c5970264cb23e62281b6b687f689f9c[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Jun 13 14:31:39 2022 +0200

    eve/schema: add pcap_filename field

[33mcommit 71ef62bfc5ee8ffe4798467935f4f9386178565e[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Jun 13 12:55:52 2022 +0200

    file: consistently track size of gaps
    
    Until now only the size of gaps counted in the regular append, not
    close and open.
    
    Bug: #5392.

[33mcommit fc566037b464055fe5792b01b8cb2b04e94233f9[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Jun 10 14:59:55 2022 +0200

    eve/schema: add new flow fields

[33mcommit 1594e41b06923a6720f21ccd6eeb4fcf1408967e[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Jun 10 16:24:15 2022 +0200

    stream: remove unused TCP_LISTEN
    
    Keep the values the same so we might be able to bring it back
    w/o issues.

[33mcommit e05b6f44e34eebd8bf9eb27f98dafeaa969ce822[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sun Nov 28 20:11:54 2021 +0100

    counter: tcp liberal counter

[33mcommit 0ebe372607c0f7c555b6699cba469d40a4c0e38f[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sun Nov 28 19:20:58 2021 +0100

    stream: after missing segments, be liberal on RST
    
    This avoids long lasting inactive flows because in the most likely
    case the RST did in fact end the connection. However Suricata may
    still consider it to be "established".

[33mcommit b0993d6fd8ffb6abafdea9324cd0166106af1851[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Nov 25 07:53:10 2021 +0100

    flow: add various flow counters
    
    Add flow.end state counters
    
    Add active TCP sessions counter
    
    Add flow.active counter
    
    Add flow.total counter
    
    Ticket: #1478.

[33mcommit aa31d2193f38248ff5fa253010571bb77e0c374c[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Nov 26 21:01:08 2021 +0100

    counters: add StatsDecr

[33mcommit 88edc8630c6dd3ff659d23cc7e21f361bec0ce72[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 11 13:30:46 2021 +0100

    flow/manager: add flow.mgr.rows_sec counter

[33mcommit f271fb457522d77a1befeb1d097c125afcbdeeb9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 11 08:34:43 2021 +0100

    flow/recycler: bring back pthread_cond_t sleep
    
    Bug #4379.

[33mcommit 633e6cf09e4eb9b7e264cbb4f787d43838ab18a5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 11 08:17:44 2021 +0100

    flow/recycler: minor code cleanups

[33mcommit 73138809e217925720d0fd46bdff9c8a4b6fd555[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 11 08:14:51 2021 +0100

    flow/manager: move counters into util func

[33mcommit 0c048d3e5c4357f037558f9ee4c38a9c91940795[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 11 07:50:26 2021 +0100

    flow/manager: minor code cleanups

[33mcommit 7f4e120a9734402e15f5394667b0b80369cbd70e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 11 07:43:02 2021 +0100

    flow/manager: remove debug and dead code

[33mcommit e6ac2e4e8a697a4c98b637a0d6c58dce8fb918aa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 9 17:53:18 2021 +0100

    flow/manager: sleep handled by pthread_cond_t again
    
    Use only in live mode to allow FM to respond quickly to time
    increases in offline mode.
    
    Bug #4379.

[33mcommit 39141a8836c99cf65e533e8c6dd312bfb579643b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 10 15:40:26 2021 +0100

    time: add timeradd implementation
    
    timeradd isn't available on MinGW.

[33mcommit e9d2417e0ff34f72f824a11f9d840adeeb534256[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 6 20:29:01 2021 +0100

    flow/manager: adaptive hash eviction timing
    
    The flow manager scans the hash table in chunks based on the flow timeout
    settings. In the default config this will lead to a full hash pass every
    240 seconds. Under pressure, this will lead to a large amount of memory
    still in use by flows waiting to be evicted, or evicted flows waiting to
    be freed.
    
    This patch implements a new adaptive logic to the timing and amount of
    work that is done by the flow manager. It takes the memcap budgets and
    calculates the proportion of the memcap budgets in use. It takes the max
    in-use percentage, and adapts the flow manager behavior based on that.
    
    The memcaps considered are:
        flow, stream, stream-reassembly and app-layer-http
    
    The percentage in use, is inversely applies to the time the flow manager
    takes for a full hash pass. In addition, it is also applied to the chunk
    size and the sleep time.
    
    Example: tcp.reassembly_memuse is at 90% of the memcap and normal flow
    hash pass is 240s. Hash pass time will be:
    
        240 * (100 - 90) / 100 = 24s
    
    Chunk size and sleep time will automatically be updated for this.
    
    Adds various counters.
    
    Bug: #4650.
    Bug: #4808.

[33mcommit f50af12068d0af529acdaa4e45f0d4acc8c372d1[m
Author: Michael Tremer <michael.tremer@ipfire.org>
Date:   Fri Mar 11 11:08:10 2022 +0000

    stream: tcp: Handle retransmitted SYN with TSval
    
    For connections that use TCP timestamps for which the first SYN packet
    does not reach the server, any replies to retransmitted SYNs will be
    tropped.
    
    This is happening in StateSynSentValidateTimestamp, where the timestamp
    value in a SYN-ACK packet must match the one from the SYN packet.
    However, since the server never received the first SYN packet, it will
    respond with an updated timestamp from any of the following SYN packets.
    
    The timestamp value inside suricata is not being updated at any time
    which should happen. This patch fixes that problem.
    
    Bug: #4376.
    
    Signed-off-by: Michael Tremer <michael.tremer@ipfire.org>

[33mcommit 8109b0017e6e76c41d2ab54129f18188888eb7f5[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Jun 10 11:05:40 2022 +0200

    detect/dcerpc: simplify keyword validation
    
    Now that the engine understands the relation between SMB and DCERPC better
    we can get rid of some of the special case handling in keywords.

[33mcommit 8d20b40cdd3c8e911b0c4b06fb4fdc999b2d5c7c[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Jun 9 22:25:44 2022 +0200

    detect/content: fix FNs due to bad depth calc
    
    When trying to propegate the depth/offset, within/distance chains
    a logic error would set too a restrictive depth on a pattern that
    followed more than one "unchained" patterns.
    
    Bug: #5162.

[33mcommit 50d02ebc055ac99db9ea565ed7bd623c357cceb0[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Jun 9 22:25:08 2022 +0200

    detect/content: simplify int bounds checking
    
    Use a macro to validate the ranges for overflows. This removes
    the clutter of all the checks and warnings, and also no longer
    puts the state machine in an undefined state when hitting such
    a condition.

[33mcommit a83f02d4cda9e98111162907b20c078c8603a085[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Jun 9 13:53:20 2022 +0200

    detect/dcerpc: apply dcerpc to smb as well
    
    So 'alert dcerpc' also matches if the DCERPC is over SMB.
    
    Explicitly refuse smb keywords for the 'dcerpc' app proto setting:
    `alert dceprc ... smb.share; ...` is rejected.
    
    Remove a now useless special case in the stateless rule processing
    matching for dcerpc/smb.
    
    Bug: #5208.

[33mcommit e6925300212277a7300f4a3aa9b5c745ee10e0df[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Jun 1 15:04:34 2022 +0200

    event: only sets APPLAYER_UNEXPECTED_PROTOCOL once
    
    If f->alproto == ALPROTO_UNKNOWN, we do not know the new protocol
    yet, so we do not set the event yet.

[33mcommit b0298dd0468f150229f9021ebe9c438bc2b7cecf[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue May 31 15:49:38 2022 +0200

    events: reset logged event
    
    Otherwise, if we log a first app_layer_event, then reset
    with AppLayerDecoderEventsResetEvents for a new packet,
    then get another event, it does not get logged
    
    Ticket: #5391

[33mcommit eb1c2a608361aafa5c160f23a2670d314ef6fbeb[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Jun 7 14:27:56 2022 +0200

    smb: use default stream-depth 0 by default
    
    As broken by commit e5c948df87
    
    Ticket: #5390

[33mcommit 2ba9da4815e2be9f45b462e84e5151c66c30008f[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Jun 9 10:21:09 2022 +0200

    eve/schema: add missing magic from files array

[33mcommit 130dffed8cc014d3d9bf1ea66505af781fc50cfd[m
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Tue Jun 7 19:41:08 2022 +0000

    github-actions: bump actions/cache from 3.0.3 to 3.0.4
    
    Bumps [actions/cache](https://github.com/actions/cache) from 3.0.3 to 3.0.4.
    - [Release notes](https://github.com/actions/cache/releases)
    - [Changelog](https://github.com/actions/cache/blob/main/RELEASES.md)
    - [Commits](https://github.com/actions/cache/compare/30f413bfed0a2bc738fdfd409e5a9e96b24545fd...c3f1317a9e7b1ef106c153ac8c0f00fed3ddbc0d)
    
    ---
    updated-dependencies:
    - dependency-name: actions/cache
      dependency-type: direct:production
      update-type: version-update:semver-patch
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

[33mcommit c585be338c0659918d32147043ec9c122b01cfbb[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Wed Jun 8 14:40:49 2022 +0200

    nfs: fix arbitrary allocation
    
    Bug introduced by https://github.com/OISF/suricata/pull/7111
    
    Nom's count begins by allocating a Vector, which leads to arbitrary
    allocation due to flavors_cnt coming from network, and not even
    being checked against i.len()
    
    Ticket: #5237

[33mcommit 7acdece7d08efb2480fbde8f6a2f7e51950d5497[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Wed Jun 8 17:07:45 2022 +0200

    util: fix integer warnings in mime decoding
    
    Ticket: #4516

[33mcommit 9d6e5558f17a9ef2ad4a9b0ce83b8784d28f4ef6[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Wed Jun 8 17:02:41 2022 +0200

    defrag: do not cast pkt len to u16
    
    as it can overflow

[33mcommit b8524e70d97f52222cba5992e2354bf783abef5d[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Jun 3 16:08:34 2022 +0200

    detect: change InspectEngineFuncPtr2 to return uint8_t

[33mcommit 49f92d0b94830a158248ca78261f573359e9a1c4[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Jan 19 22:18:57 2022 +0100

    ci: adds warning flag about integer conversions

[33mcommit c5cf2967b3bc7fc074052279fe35d29fae283f43[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Jan 18 16:11:37 2022 +0100

    detect: fix integer warnings
    
    Ticket: #4516

[33mcommit ac8fb553a1b1e1ed19f33ac29f62123be51c9713[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Jun 3 15:45:01 2022 +0200

    detect: fix integer warnings for content
    
    Ticket: #4516

[33mcommit 57fb183d32b518137eb089366a8fd80f6b5162ca[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Jun 3 15:42:27 2022 +0200

    detect: fix integer warnings for app-layer-event
    
    Ticket: #4516

[33mcommit 79d7edb3e02ab4f54d1fcd6473e4027c1f7bef75[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Jun 3 09:20:40 2022 +0200

    ftp: fix integer warning
    
    Ticket: #4516

[33mcommit 26dc70648c2b840ae7b56c88162f129c06ef03fd[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Jun 8 14:31:24 2022 +0200

    dns: remove unused events field from state
    
    found overflowing by oss-fuzz

[33mcommit df2e408d96d0e37a0599f885dc29fff4011f8899[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Jun 7 22:57:39 2022 +0200

    detect/threshold: fix offline time handling issue
    
    Due to the TIMEVAL_DIFF_SEC calculating the delta into an unsigned
    integer, it would underflow to a high positive value leading to
    and incorrect result if the packet timestamp was below the timestamp
    for the threshold entry. In normal conditions this shouldn't happen,
    but in offline mode each thread has its own concept of time which
    might differ significantly based on the pcap. In this case the
    overflow would be very common.
    
    Changing it to a signed value calculation triggered fuzz undefined
    behavior if the packet timeval was very high, so this patch takes a
    new approach where it no longer calculates a diff but sets up the
    "seconds" value we compare against as a timeval itself, and uses
    that to compare.
    
    Fixes: 9fafc1031c0c ("time: Add TIMEVAL_EARLIER and TIMEVAL_DIFF_SEC macros.")
    Fixes: 82dc61f4c3e3 ("detect/threshold: Refactor threshold calculation to handle by_rule and by_both.")
    
    Uses add `timeradd` specific version where available.
    
    Bug: #5386.

[33mcommit fea374626ac9d0dfe69df24958596867f9e42734[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Jun 8 13:11:55 2022 +0200

    stream/midstream: fix double flow reverse case
    
    In the case of midstream SYN/ACK pickup, we reverse the flow based on
    the SYN/ACK. If we then later get traffic that appears to be in the
    reverse direction based on the app-layer, we would reverse it again.
    This isn't correct. When we have the SYN/ACK we know the flow's real
    direction.

[33mcommit 2a7349406c447c1d0b46da04b3376a9d2deece02[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Jun 7 22:31:56 2022 +0200

    eve/schema: add missing capture_file field

[33mcommit 42adaf5627f09a41aefd19856ccea6d21f5d7df5[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Jun 7 21:12:46 2022 +0200

    eve/schema: add missing http fields

[33mcommit d58f9e54d04630c09b558edf8c761e5c4c3e6893[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Jun 7 21:12:33 2022 +0200

    eve/schema: add missing alert fields

[33mcommit 2abce12b5b2ae6cf3355e8ea5a48f0b2f6581d60[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Jun 7 14:19:59 2022 +0200

    eve/schema: add missing smb fields

[33mcommit b24e1f1e465a4f645d31555292ed67771d705262[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Jun 7 14:00:27 2022 +0200

    eve/schema: add missing drop fields for ipv6

[33mcommit 6ad5d6a148808a4907531e6cba4e98a69ad320ac[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Jun 7 13:55:16 2022 +0200

    eve/schema: add profiling detect fields

[33mcommit 8845c07a90ff6ad8304c25f6ccdd495623d35d53[m
Author: Lukas Sismis <lukas.sismis@gmail.com>
Date:   Sat May 21 08:30:06 2022 +0200

    bypass: af-packet: fix memory leak - reassign of EBPFBypassData
    
    AF-Packet bypass function in some situations allocates EBPF bypass data
    for an already bypassed flow and assigns it to the flow without any checks
    
    Issue: #5368

[33mcommit 05797c45bb5bb8b23a7af3dea2aa794c6f33e02d[m
Author: Lukas Sismis <lukas.sismis@gmail.com>
Date:   Fri May 20 21:33:38 2022 +0200

    bypass: fix memory leak - reassign of FlowBypassInfo
    
    In some situations bypass callback is called on already bypassed
    flow. This allocates FlowBypassInfo structure for the flow but
    does not check if the flow already has one.
    
    Issue: #5368

[33mcommit 2486d29adb0e8d5cac3b5ac904e12ed8b3fb1aae[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Jun 7 10:40:31 2022 +0200

    napatech: fix conf API call

[33mcommit 8580499deda6bae88034f1961c01179ded91246e[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Mar 14 07:20:11 2022 +0100

    exceptions: initial exception-policy implementation
    
    Adds a framework for setting exception policies. These would be called
    when the engine reaches some kind of exception condition, like hitting
    a memcap or some traffic processing error.
    
    The policy gives control over what should happen next: drop the packet,
    drop the packet and flow, bypass, etc.
    
    Implements the policy for:
    
        stream: If stream session or reassembly memcaps are hit call the
        memcap policy on the packet and flow.
    
        flow: Apply policy when memcap is reached and no flow could be
        freed up.
    
        defrag: Apply policy when no tracker could be picked up.
    
        app-layer: Apply ppolicy if a parser reaches an error state.
    
    All options default to 'ignore', which means the default behavior
    is unchanged.
    
    Adds commandline options: add simulation options for exceptions. These
    are only exposed if compiled with `--enable-debug`.
    
    Ticket: #5214.
    Ticket: #5215.
    Ticket: #5216.
    Ticket: #5218.
    Ticket: #5194.

[33mcommit 4567995678f55d1437f5abd4e0e1b796f5da575c[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon May 2 21:42:27 2022 +0200

    decode: add pass action wrapper

[33mcommit d81ad784440d21be4865be32973a76a81fc8791b[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon May 2 21:27:43 2022 +0200

    decode: turn no payload/packet inspect macros into funcs
    
    Remove unused unset macros.

[33mcommit 0035673208e7d3a1d73bd2f18e03a69e78fbc4ba[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Mar 21 21:57:04 2022 +0100

    eve/drop: log drop reason
    
    Ticket: #5202.

[33mcommit 55fb2d5d2d4feaf573bbc420ae7939e66d2e4e3e[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Mar 22 17:06:18 2022 +0100

    stream/tests: remove bad test; update failing test to new behavior

[33mcommit 2d64ec65850599e456b5916fc14bae225e7d5a06[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Jun 1 14:49:27 2022 +0200

    stream: clarify error handling comment

[33mcommit b6cf79901afbb8d4e235d3035422ccd39f3049ed[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Mar 22 17:05:50 2022 +0100

    stream/reassemble: clarify error handling

[33mcommit f34845858ccc011d4dfffcf111d1b779ba133763[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Mar 22 17:03:09 2022 +0100

    stream: remove now unused tcp.insert_list_fail counter

[33mcommit 13554f7e443abcff4f8ea82f5988fbebd933b0c2[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Mar 22 17:01:03 2022 +0100

    stream/segtree: simplify error handling
    
    Now that spurious retransmissions don't propegate into the reassembly
    code, error handling can be simplified.

[33mcommit d8edea904c051baaeb06d489aa739e7f1b3f2e3f[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Jun 1 14:57:52 2022 +0200

    stream/rules: add example rule for pkt_spurious_retransmission

[33mcommit cc4e8f09367a6152c95d66cd317531166b707a31[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Mar 22 17:00:29 2022 +0100

    stream: detect spurious retransmissions early

[33mcommit 8377b9dc7c846cf5fcd2436dac69ef507f794c4f[m
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Fri Jun 3 19:40:52 2022 +0000

    github-actions: bump github/codeql-action from 1 to 2
    
    Bumps [github/codeql-action](https://github.com/github/codeql-action) from 1 to 2.
    - [Release notes](https://github.com/github/codeql-action/releases)
    - [Changelog](https://github.com/github/codeql-action/blob/main/CHANGELOG.md)
    - [Commits](https://github.com/github/codeql-action/compare/v1...v2)
    
    ---
    updated-dependencies:
    - dependency-name: github/codeql-action
      dependency-type: direct:production
      update-type: version-update:semver-major
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

[33mcommit 05bca0b6fb61a406ac90e2a962995b49a7e6a274[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Fri Jun 3 21:53:05 2022 +0000

    config: update commented value to default status
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 84448d3bae2f7e7a23d219dc925c8bd6843367ef[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Jun 6 09:59:15 2022 +0200

    tests: remove unnecessary flow locks
    
    Added once to satisfy debug validation, but we don't mix unittests
    and debug validation anymore.
    
        sed -i -E '/.*FLOWLOCK_.*LOCK/d' *.c

[33mcommit 579547c84966fdfb99883a2e9d85c2439ceca9cc[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sun Jun 5 20:05:23 2022 +0200

    smtp: minor line loop cleanup

[33mcommit 96bb67f474242936c029e57be3d4da1365150943[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sun Jun 5 18:23:55 2022 +0200

    smtp: remove defunct check for line with single LF
    
    Don't fix it as DATA processing needs all the bytes.

[33mcommit a2924b7141160fea0554b476dd9d1123ad768991[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sun Jun 5 18:24:05 2022 +0200

    smtp: constify line arguments where possible

[33mcommit e0d5878e4929b092f169dfede4506ac231557098[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sun Jun 5 17:20:40 2022 +0200

    smtp: move current line out of state

[33mcommit 1451bd62a6be892f066e7b79332b51bdb5376763[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sun Jun 5 15:01:18 2022 +0200

    smtp: move input out of state

[33mcommit 77fae275efb54221d9cf3badd25df38eb1ea0b86[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sat Jun 4 08:49:41 2022 +0200

    smtp: turn assertions in to debug asserts

[33mcommit 3a631085bb853d6d42c5218235cd9a581a3e106c[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sat Jun 4 08:49:25 2022 +0200

    smtp: simplify preprocess loop

[33mcommit 30e47b21714b5d9039f22df7b406b201bdd15b7e[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Jun 3 17:10:59 2022 +0200

    mime/base64: decode cleanups and simplification
    
    Addresses edge case: > 4 bytes at the end of the input with 2 or more
    spaces.
    
    Changes length type for remainder processing to allow for much longer
    lines, which can happen in practice.
    
    Adds a series of debug validation checks with real error handling
    as well, to assist the fuzzer to find more edge cases.

[33mcommit 92cd95b4165eef540bc974d50f54a47a6b74503d[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sat Jun 4 07:09:27 2022 +0200

    base64: no special case for nul char
    
    Let it be handled like other invalid input.

[33mcommit 5b2761977871a94d559a9ba3b026593bb1ffd68b[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Thu Jun 2 20:50:07 2022 +0530

    base64: make decoder handle decoded data space constraints
    
    So far, it was the job of caller to send the bae64 decoder a perfect
    block of data and take care of the destination buffer (decoded data)
    size. Now, make it the decoder's job to take care of any space
    constraints that the destination buffer may have and return accordingly.
    
    Also, handle space characters in base64 encoded data as per RFC 2045.
    
    Update MIME parser accordingly to handle the base64 data.
    
    Ticket: 5315

[33mcommit cb01cc6929b6bfdf02f7b3049d7bd110a1465fa4[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Fri Jun 3 15:56:36 2022 +0530

    base64: add Base64Ecode enum

[33mcommit 9131d1d85715c817a22d2a987f4a01cf42e07757[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Thu May 12 23:30:00 2022 +0530

    base64: add Base64Mode enum

[33mcommit 1e3282f36343c59a18d8e342d5e78aa3018b8edd[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Fri Apr 29 14:21:40 2022 +0530

    smtp: treat CR as a line terminator
    
    The ideal line terminator for an SMTP line is <CRLF>. But, given that
    bare LF is still allowed by many systems despite the prohibition by
    standards, we have to consider that. In order to simplify things, we
    consider bare CR as line terminators as well while updating the
    delimiter parameter correctly if they were to be followed by a LF
    immediately or as a part of next fragment.
    
    This takes care of some edge cases that made base64 decoder error out
    because unexpected data was sent to it at times.
    
    Ticket: 5316

[33mcommit 42a661f02894d9240da3334b5dc93272ad695871[m
Author: BACK Yonah <yonah.back@telecomnancy.eu>
Date:   Mon Mar 28 19:10:48 2022 +0200

    ci: adds CodeQL workflow and LGTM support
    
    Ticket: #5307

[33mcommit 51c78680d2218bac9bed6491b5e8a39420f4d3e6[m
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Wed Jun 1 19:54:29 2022 +0000

    github-actions: bump ossf/scorecard-action from 1.1.0 to 1.1.1
    
    Bumps [ossf/scorecard-action](https://github.com/ossf/scorecard-action) from 1.1.0 to 1.1.1.
    - [Release notes](https://github.com/ossf/scorecard-action/releases)
    - [Changelog](https://github.com/ossf/scorecard-action/blob/main/RELEASE.md)
    - [Commits](https://github.com/ossf/scorecard-action/compare/5c8bc69dc88b65c66584e07611df79d3579b0377...3e15ea8318eee9b333819ec77a36aca8d39df13e)
    
    ---
    updated-dependencies:
    - dependency-name: ossf/scorecard-action
      dependency-type: direct:production
      update-type: version-update:semver-patch
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

[33mcommit 41314e0830bcecd41bf79fb6bbabb66ee939177c[m
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Wed Jun 1 19:54:26 2022 +0000

    github-actions: bump github/codeql-action from 2.1.11 to 2.1.12
    
    Bumps [github/codeql-action](https://github.com/github/codeql-action) from 2.1.11 to 2.1.12.
    - [Release notes](https://github.com/github/codeql-action/releases)
    - [Changelog](https://github.com/github/codeql-action/blob/main/CHANGELOG.md)
    - [Commits](https://github.com/github/codeql-action/compare/a3a6c128d771b6b9bdebb1c9d0583ebd2728a108...27ea8f8fe5977c00f5b37e076ab846c5bd783b96)
    
    ---
    updated-dependencies:
    - dependency-name: github/codeql-action
      dependency-type: direct:production
      update-type: version-update:semver-patch
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

[33mcommit d1a4dae36b636190235c07cdc88cd842f650de9c[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Apr 25 17:59:00 2022 +0200

    detect: use generic integer functions for streamsize
    
    By the way, adds the prefilter feature
    
    Ticket: #2697
    Ticket: #4112

[33mcommit 35b6dcec7e82fadb7077c6dc4c9382d080d9e771[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Mar 23 21:43:50 2022 +0100

    detect: use generic integer functions for filesize
    
    Ticket: #4112

[33mcommit bfdf5b195277a13c0d7d1487af0417df5b61a15d[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Mar 23 21:33:08 2022 +0100

    detect: use generic integer functions for tcp mss
    
    Ticket: #4112

[33mcommit 025b510cac8846dea05513d3371b2d80e224c51b[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Mar 23 21:16:26 2022 +0100

    detect: use generic integer functions for template2

[33mcommit 261eebba1288cde6a3c410fae80595fcfcd94fc1[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Mar 23 21:11:34 2022 +0100

    detect: use generic integer functions for ttl
    
    Ticket: #4112

[33mcommit 2b0be91f28be65286ce7f8cfda5046097a89530f[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Mar 23 20:52:42 2022 +0100

    detect: use generic integer functions for dsize
    
    Ticket: #4112

[33mcommit f29b43defd15e5f1722763a4955271450b951b55[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Mar 23 20:44:44 2022 +0100

    detect: rust generic functions for integers
    
    Move it away from http2 to generic core crate.
    And use it for DCERPC (and SMB)
    
    And remove the C version.
    Main change in API is the free function is not free itself, but
    a rust wrapper around unbox.
    
    Ticket: #4112

[33mcommit c4d9cb02ec5521bf051ebef6d0fcd986b6cc3b51[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Sat Apr 16 15:51:29 2022 +0200

    util: better hex print function
    
    Without dangerous snprintf pattern identified by CodeQL
    even if this pattern is not a problem in those precise cases,
    it may easily get copy pasted in a dangerous place, so better
    get rid of it and make CodeQL happy

[33mcommit 6058792beebfeff9cdb9b4cf1057c500bdd59407[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue May 31 13:43:56 2022 +0200

    rust: make suricata context const
    
    So that it is read only and its pointers do not get modified

[33mcommit 5a00acece2c681dd590e7a02ae8ead6cdcd1229b[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue May 31 13:24:09 2022 +0200

    ftp: remove temporary fields from state
    
    As input, input_len and direction only last for the scope of
    one call of AppLayerParserParse, it is not necessary to keep them
    in FtpState which lives longer, so we consume less memory.

[33mcommit 6224e283fab12ebe75b635f9b3085d25525a40bc[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon May 23 17:49:49 2022 +0200

    modbus: bump up rust crate version
    
    So that probing parser is more strict and does not accept unknown
    function code as valid modbus.
    
    Ticket: #5377

[33mcommit c8a52070835c16612346ef14c2633412b6344a8c[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed May 11 11:23:24 2022 -0600

    detect: introduce "like" ip-only signature type
    
    Rules that look like they should be IP-only but contain a negated rule
    address are now marked with an LIKE_IPONLY flag. This is so they are
    treated like IPONLY rules with respect to flow action, but don't
    interfere with other IPONLY processing like using the radix tree.
    
    Ticket: #5361

[33mcommit d5abaf0b385990a7bc45a3e5a035d92625409f68[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon May 2 13:30:35 2022 +0200

    decode: fix integer warning
    
    Newly introduced warning.
    Regular cast as value is checked just before.
    
    Ticket: #4516

[33mcommit 717e51b7cf060bc60e0296b13ed723ee9d85034f[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Jan 18 15:36:52 2022 +0100

    defrag: fix integer warnings
    
    Ticket: #4516

[33mcommit 2d761810db48389f9384f93e9a123952a2b18403[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Apr 29 08:55:58 2022 +0200

    rust: cbindgen first verifies existing bindings
    
    So as not to recompile every C file inclusing rust.h

[33mcommit ced96a8aadd8a9a4ce3d8d689ac53f7eedbbe8e9[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Sat Apr 16 16:51:42 2022 +0200

    detect: parsing avoiding infinite loop
    
    by comparing size_t to strlen result
    Instead of uint16_t which would loop
    
    Ticket: #5310

[33mcommit 875eb58fb05a9075b3020e69cf8940d1d2fb6ad2[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Sat Apr 16 16:46:01 2022 +0200

    file: use functions on fd to avoid toctou
    
    Ticket: #5308

[33mcommit ecb8dd4de0119288ad986f5010906da61f454216[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Sat Apr 16 16:41:46 2022 +0200

    util: check for unsigned overflow in rohash
    
    To make CodeQL happy

[33mcommit adda8801d8b2cf5461d8b233594da460dc5c3373[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon May 30 16:52:29 2022 -0600

    conf: remove ConfGetValue
    
    All uses of ConfGetValue are satisfied by ConfGet

[33mcommit 5bd19135b04832919e3776c2cfb4eec66f8ab272[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri May 20 20:24:43 2022 +0200

    util: remove malloc from streaming buffer config
    
    as it is unused

[33mcommit 0dd7c23fa01a611150df4555f50500e2247f0038[m
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Tue May 31 19:31:38 2022 +0000

    github-actions: bump actions/cache from 3.0.2 to 3.0.3
    
    Bumps [actions/cache](https://github.com/actions/cache) from 3.0.2 to 3.0.3.
    - [Release notes](https://github.com/actions/cache/releases)
    - [Changelog](https://github.com/actions/cache/blob/main/RELEASES.md)
    - [Commits](https://github.com/actions/cache/compare/48af2dc4a9e8278b89d7fa154b955c30c6aaab09...30f413bfed0a2bc738fdfd409e5a9e96b24545fd)
    
    ---
    updated-dependencies:
    - dependency-name: actions/cache
      dependency-type: direct:production
      update-type: version-update:semver-patch
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

[33mcommit db73a1254028778ea67ee17e41897226d17941ed[m
Author: Andreas Dolp <dev@andreas-dolp.de>
Date:   Tue May 31 15:58:54 2022 +0200

    doc/tls: Add documentation for TLS logging

[33mcommit f42bb45ccdc436e68c2b8bc235aac3994fc3ccb7[m
Author: Andreas Dolp <dev@andreas-dolp.de>
Date:   Tue May 31 15:28:40 2022 +0200

    doc/tls: Remove redundant example

[33mcommit e9976a0e14cd488ac0e33e9d47048e55c8e2c384[m
Author: Andreas Dolp <dev@andreas-dolp.de>
Date:   Sat Apr 2 14:33:54 2022 +0200

    suricata.yaml.in: Fix default value of prealloc-sessions

[33mcommit 324f5ec10cf5d3414c607517bb1e047f86006437[m
Author: Andreas Dolp <dev@andreas-dolp.de>
Date:   Sat Apr 2 14:02:40 2022 +0200

    doc: Add missing ")" in example

[33mcommit 32b39d054f28ec3475cc927acc75be36836c210b[m
Author: Andreas Dolp <dev@andreas-dolp.de>
Date:   Sat Apr 2 13:59:59 2022 +0200

    suricata.yaml.in: Remove duplicate "with" in comment.

[33mcommit e4163c4e025ba9316fcb6afc27e05fbe2426362c[m
Author: Andreas Dolp <dev@andreas-dolp.de>
Date:   Thu Feb 17 08:04:35 2022 +0100

    doc: Fix typos

[33mcommit 49bd6cfa5d05bde4a72a4c0a20d30f9915b8886f[m
Author: Andreas Dolp <dev@andreas-dolp.de>
Date:   Thu Feb 17 08:03:10 2022 +0100

    doc: Fix broken link

[33mcommit 284ad462fcb2e47f1518a1abc19e27ca84c6972e[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu May 12 20:31:25 2022 +0200

    output: adds schema.json
    
    Ticket: #1369

[33mcommit ebf062961597d06716361a67b03990c08ab40c0a[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon May 30 21:08:19 2022 +0200

    log-pcap: remove tunnel locks
    
    The tunnel lock mutex only "protects" the tunnel synchronization,
    not the packet data, length or datalink fields.

[33mcommit e7ab96c389cc0be4ef7874fc66972ce9d31cbc95[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon May 30 15:53:39 2022 +0200

    nflog: fix datalink compile issue

[33mcommit 43d28f251fd3c2f3fd2711de18197c491b461ee1[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Thu May 26 19:07:55 2022 -0300

    util/action: convert unittests to FAIL/PASS API
    
    Task #5371

[33mcommit 9b9b6aa2ce9d07ceb55537a10196a40655e43562[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Thu May 26 18:53:03 2022 -0300

    util/action: unittests clean-up (to sv tests)
    
    Removing all unittests that work better as suricata-verify tests.
    
    Task #5371

[33mcommit 4ed6c928aae4b52648a5a9e3df951ea66ad2409e[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed May 18 14:36:24 2022 +0200

    unittest: minor helper cleanup

[33mcommit 41b5364511776eeb39bf4ad9bf82766aff6d1629[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed May 25 15:01:15 2022 +0200

    detect/parse: cleanup test

[33mcommit a437dde73959f8e0cee7de67f34f1e9de694fa5c[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed May 18 14:46:28 2022 +0200

    detect: parsing test cleanups/improvements

[33mcommit e738b10e231116df788e7ebf15985b3a74388081[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 18 20:21:01 2019 +0100

    host-os-info: add test to show mixed ipv4/ipv6

[33mcommit f3d887310c11af731f56b9bdc42479a4d9b52d30[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed May 18 20:47:33 2022 +0200

    rule/vars: clean up tests

[33mcommit 1b65af2867ab21e8255558c849f4e6105b517eb4[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue May 24 12:55:39 2022 +0200

    detect/iponly: minor code cleanup

[33mcommit beecc1890fafb2381c42af2344d74eddd4064085[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon May 23 13:59:31 2022 +0200

    detect/iponly: include postmatch in determination

[33mcommit 4b097460c2d9032db3c26905740272301f536dc9[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue May 10 14:22:36 2022 +0200

    detect/iponly: simplify handling of 'any' parsing

[33mcommit ffef10c5d786a9c006d98515e3108f3c5f0ac99b[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue May 10 13:26:07 2022 +0200

    detect: address parsing variable rename to match code style

[33mcommit 51ef6f4e3a124816ba8cb17f63060c03120d96ae[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri May 13 10:01:51 2022 +0200

    detect/iponly: remove unused code

[33mcommit 6ccc01a79c07a5e7f8f46796f026ca50e7b7ee66[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Thu May 26 20:28:41 2022 -0300

    rust: fix doc comments that trigger rust warnings
    
    Rust generates warnings that are treated as errors for documentation
    blocks before `extern` blocks.

[33mcommit fbbf23b930c195c7463b9e37b490311fc6944f19[m
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Wed May 25 19:45:53 2022 +0000

    github-actions: bump ossf/scorecard-action from 1.0.4 to 1.1.0
    
    Bumps [ossf/scorecard-action](https://github.com/ossf/scorecard-action) from 1.0.4 to 1.1.0.
    - [Release notes](https://github.com/ossf/scorecard-action/releases)
    - [Changelog](https://github.com/ossf/scorecard-action/blob/main/RELEASE.md)
    - [Commits](https://github.com/ossf/scorecard-action/compare/c1aec4ac820532bab364f02a81873c555a0ba3a1...5c8bc69dc88b65c66584e07611df79d3579b0377)
    
    ---
    updated-dependencies:
    - dependency-name: ossf/scorecard-action
      dependency-type: direct:production
      update-type: version-update:semver-minor
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

[33mcommit f4f63ebff85da87d4611e72a61e1a761f289d738[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu May 26 13:30:56 2022 +0200

    stream: add packet header outside of lock

[33mcommit 419920288ceb6525beb7d74a6a12e91e3e6deada[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu May 26 13:29:59 2022 +0200

    log/pcap: open handles outside of lock

[33mcommit c751c45850ad932ab3638dd89eb5cd1366495c43[m
Author: Scott Jordan <scottfgjordan@gmail.com>
Date:   Thu Feb 3 15:18:11 2022 -0500

    log/pcap: add buffer timeout
    
    Set timeout for pcap log so that packets do not sit
    in buffer. Set default to one second.

[33mcommit 2bf3172dd15b5d9faabbca1b7be7fb373f0d28c1[m
Author: Scott Jordan <scottfgjordan@gmail.com>
Date:   Mon Nov 1 16:43:43 2021 -0500

    stream: memcap tracking for TcpSegment alloc

[33mcommit 47a5e6356d93a3d01199499b88289ccab1042394[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Mar 12 10:56:51 2021 +0100

    log/pcap: handle case of multiple link types

[33mcommit 2c2fc6cd91533003f20d3251bb417b5395e808c4[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Mar 11 23:58:37 2021 +0100

    flow: set datalink for pseudo packet
    
    Set pseudo packet datalink to the global one. This fixes the case
    where the pcap handle is open with information coming from a
    pseudo packet. Without this, we did end up in most cases with
    an Ethernet packet being written in a Raw pcap.

[33mcommit 1c2fba57f81493c20104935438a19c603640d6f3[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Mar 11 23:55:53 2021 +0100

    suricata: introduce global linktype
    
    As Suricata is not supporting pcap-ng we have to stick with one single
    datalink type for the capture if ever we want to do pcap logging.
    Assuming this, this patch introduces a function to set the link
    type globally. This will be used with pcap conditional logging
    to get the logging of TCP segments with the correct link type.

[33mcommit 584136ecb7ee1879984aa560b40b1a3a4ab4652e[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Mar 10 16:40:12 2021 +0100

    log/pcap: log segments for pseudo packets

[33mcommit 8f0ef48e82fa8f30fa17b0536a9c15f8cd4dddc9[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Feb 25 22:50:01 2021 +0100

    log/pcap: fix conditional pcap in tag mode
    
    We were missing the first packet when using condition pcap logging
    in tag mode as it was not tagged. As a result we were not getting
    the stream data triggering the alert in the pcap file.

[33mcommit 9f4d59b3f79a77ed2faba663e4a54191bea17199[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Feb 25 22:48:16 2021 +0100

    detect/tag: add a tag for first packet
    
    We may need to know that a packet has been tagged but is the
    first one (and thus is not tagged).

[33mcommit 6cfc3343e771efef26e97afbc7398b5062d1213b[m
Author: Scott Jordan <scottfgjordan@gmail.com>
Date:   Wed Feb 17 16:36:42 2021 -0600

    log/pcap: dump segments of both sides of tcp session.
    
    This patch updates tcp segment dumping to dump segments
    from both sides of the session in order when capturing
    alerts and tags.

[33mcommit 6f06f7c22cc85f760c5e6442695266fdbe5a372e[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Feb 14 19:14:30 2021 +0100

    doc: add info about capture_file key

[33mcommit faab853685bd841cecc5116964ab8e6ea2de26ec[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Feb 13 21:56:51 2021 +0100

    log/pcap and eve/alert: get pcap filename to support multi mode
    
    This patch adds a function to get the current pcap file name that
    will be used to current packet. This patch also  updates EVE
    alerts to add pcap output filename when pcap capture is done in
    multi or normal mode.

[33mcommit 2317fd83efdac74d9cd10c17ee7d4eb25b1269e0[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Feb 13 21:34:34 2021 +0100

    log/pcap: fix typo in error message

[33mcommit 3908166f91485b1c8b784db6fbe304c3d5b0d7a8[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Feb 8 21:46:26 2021 +0100

    stream: count realloc in memcap
    
    TCP memory cap was not taking into account the memory that can
    be used by realloc of Packet headers in TCP segments.

[33mcommit 0f14c55e52d73bfdf030caa67df95395affdb612[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Feb 7 19:31:44 2021 +0100

    log/pcap: update copyright date

[33mcommit 0c7e4c13a1a2fd2b26729e6393193efd25dbcf7d[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Feb 6 23:17:30 2021 +0100

    doc: add conditional pcap logging info

[33mcommit 58ef7bcdee7d7e718aa65849c4f09c826f8ac507[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Feb 6 21:19:04 2021 +0100

    log/pcap: introduce tag as logging condition
    
    This patch adds the tag as logging condition. If this option is
    used all tagged packets are written to the pcap.

[33mcommit 626fce0712bf952c35e1d8a17207c219888a3f02[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Feb 6 22:35:38 2021 +0100

    log/pcap: fix some indentation and white spaces

[33mcommit cc04eef007969d856c9b59eba6cbef56956e3032[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Feb 6 09:52:53 2021 +0100

    log/pcap: add support for tunnel logging
    
    In alert mode, we need to write the root packet to the pcap
    file instead of the packet that did trigger the alert.

[33mcommit e7b1c52c1ca018e9821012ebb5cf6816026456c0[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Feb 6 22:18:25 2021 +0100

    log/pcap: add existing stream logging
    
    This patch update the alert mode of pcap logging.
    
    It uses the packet header data added to the TCP segments
    to build packets corresponding to the acked data that did trigger
    the alert. It then write it to the pcap file before starting to
    dump all packet for the flow that did alert.

[33mcommit b416a4455c9b367cdd308792ea0c26e412a7f5e9[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Jan 30 21:57:32 2021 +0100

    stream: conditionally add packet header to segment
    
    This patch optionally adds packet header to the TCP segment
    and update the for each segment function by changing the
    callback.
    
    This patch is based on the work by Scott Jordan <scottfgjordan@gmail.com>

[33mcommit 435557ee7f0a0283456e049bd807dd9ab3e14b4b[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Nov 8 18:10:49 2020 +0100

    detect: add flag when packet is first with alert
    
    We add a flag to packet to be able to know if this packet was the
    first one to get alerts on the flow.

[33mcommit 412ca5d64c15d7d17c3185de8c02e34ebd3fdde6[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Nov 8 17:50:58 2020 +0100

    log/pcap: add PcapWrite function
    
    It will be used later when multiple writing operations will be
    necessary.

[33mcommit 4cab5e5262f358b530cf4478498701c0316c7ef5[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Nov 1 09:54:47 2020 +0100

    log/pcap: conditional logging
    
    Add an option to only write to pcap packets with alerts and flow
    that have alerted.

[33mcommit 0b510223379d7c852b45152ce7a87aec717778d8[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue May 24 12:17:44 2022 -0600

    github-ci: remove fedora 34 build
    
    Fedora 34 goes EOL in early June. The checks in this build are already
    covered by the 35 and 36 builds.

[33mcommit 49647ad1206cf3620b22c8d0b8819393345cebc6[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon May 23 09:26:44 2022 -0600

    github-ci: bump fedora versions
    
    35 -> 36
    34 -> 35
    33 -> 34

[33mcommit 3ea6572e22d9ffcb26d9d408a91a3c0a5291c847[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed May 4 13:18:09 2022 -0600

    rules: use primary default-rule-path if set on command line
    
    When reloading rules, respect `--set default-rule-path=...` from the
    command line if set.
    
    Previously the rule reload would always take the default-rule-path from
    the configuration file, even if overrided on the command line.
    
    Issue: #1911

[33mcommit 28ac75b50594f464949c036bbb34ceff759bdc9c[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Mon May 9 11:24:18 2022 -0300

    detect/alert: directly increment alerts.discarded
    
    In the unlikely case of AlertQueueExpand failure, we were incrementing
    the discarded alerts stats in AlertQueueAppend via the Packet member in the
    DetectEngineThreadCtx, which may not be initialized yet.
    
    Bug #5353

[33mcommit d745d28d4a400d08609985f453c675f2a1a1bcc6[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri May 13 09:43:11 2022 +0200

    dcerpc: use vecdeque tx iterator
    
    Ticket: #5321

[33mcommit 477a6f3dd2decb7c58820c8e534855227dbc26ed[m
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Tue May 17 19:43:53 2022 +0000

    github-actions: bump github/codeql-action from 2.1.9 to 2.1.11
    
    Bumps [github/codeql-action](https://github.com/github/codeql-action) from 2.1.9 to 2.1.11.
    - [Release notes](https://github.com/github/codeql-action/releases)
    - [Changelog](https://github.com/github/codeql-action/blob/main/CHANGELOG.md)
    - [Commits](https://github.com/github/codeql-action/compare/7502d6e991ca767d2db617bfd823a1ed925a0d59...a3a6c128d771b6b9bdebb1c9d0583ebd2728a108)
    
    ---
    updated-dependencies:
    - dependency-name: github/codeql-action
      dependency-type: direct:production
      update-type: version-update:semver-patch
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

[33mcommit 90573dc9d4d51cc44bbd4ff7517f839dbe982cda[m
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Fri May 20 19:32:03 2022 +0000

    github-actions: bump actions/upload-artifact from 3.0.0 to 3.1.0
    
    Bumps [actions/upload-artifact](https://github.com/actions/upload-artifact) from 3.0.0 to 3.1.0.
    - [Release notes](https://github.com/actions/upload-artifact/releases)
    - [Commits](https://github.com/actions/upload-artifact/compare/6673cd052c4cd6fcf4b4e6e60ea986c889389535...3cea5372237819ed00197afe530f5a7ea3e805c8)
    
    ---
    updated-dependencies:
    - dependency-name: actions/upload-artifact
      dependency-type: direct:production
      update-type: version-update:semver-minor
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

[33mcommit 3051f7f23f245fc2029a7c61df89bb8d12f9a2ae[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Jul 17 15:21:13 2019 +0200

    protodetect: use both directions over UDP
    
    As is already done for TCP
    
    Ticket: #2757

[33mcommit edd163252d9fb49fea7da12dea4761999e78a975[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Jul 17 15:19:30 2019 +0200

    protodetect: be more tolerant
    
    Do not mask protocols on both directions with only first packet
    
    For instance :
    When the first packet is no valid DNS but on port 53 (a junk request)
    second packet (error response from server) does not get checked for DNS
    as first packet bit masked away DNS for both directions
    
    Ticket: #2757

[33mcommit b6407c4253b2037cec7390364b4f0f69ccea6b0e[m
Author: Arne Welzel <arne.welzel@corelight.com>
Date:   Wed May 4 20:06:36 2022 +0200

    stacktrace-on-signal: Use kill(getpid(), sig_num)
    
    kill(0, ...) re-raises the signal to every processes in the process
    group which may impact unrelated processes.
    
    Concretely, in our CI pipeline, a segfaulting Suricata process killed
    the test driver.

[33mcommit b5d1a800027c25f8edcc82a9770038d3948d6293[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed May 4 15:19:48 2022 -0600

    suricata.yaml: include version that generated this file
    
    Add a line to the configuration that says which version generated the
    configuration file.  For example:
    
        # This configuration generated by:
        #     Suricata 7.0.0-dev
    
    Issue: #4784

[33mcommit 91b54f180ddb188423fef1af618b70f03d14a276[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Mar 22 16:59:17 2022 +0100

    stream/segtree: improve docs, error handling

[33mcommit 5c76f787f9c9176e27041a33927d3fda82c7409b[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Mar 22 16:55:52 2022 +0100

    streaming/buffer: add debug validation for 'impossible' condition

[33mcommit 79f0f2fde41cc5a350fe8b6c9620aaba02eac583[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue May 3 19:56:19 2022 +0200

    app-layer: make registration structure more compact

[33mcommit a57010d72dd9c1797e715327a87b2fc6a79fcbe4[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu May 5 10:41:15 2022 +0200

    htp: minor format string fixes

[33mcommit 24d231315b5b8342ce2cec203f943077659b1c1a[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Apr 28 17:50:30 2022 +0200

    datasets: constify some function args

[33mcommit 3444aec724d31a206bf4446b6c72d61ecdbaf0ce[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Apr 27 21:28:53 2022 +0200

    time: reduce scope of static string

[33mcommit 80124152c6bbbbdf7862b5ec528a9afa8f40b959[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Apr 27 21:28:25 2022 +0200

    threshold: constify detect engine arg

[33mcommit 18e4e032dbb8516e7c7d0dfa894783b2011da313[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Apr 27 21:27:50 2022 +0200

    thash: reduce scope for var; suggested by cppcheck

[33mcommit 55de18c6759c0bfd88b28a37619ecda7a148c998[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Apr 27 21:27:07 2022 +0200

    spm: constify badchars; suggested by cppcheck

[33mcommit 99f212bc8c2d6b00b3315969337d36b1e3f43193[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Apr 27 21:26:19 2022 +0200

    radix: small cppcheck suggested cleanup

[33mcommit 750fed21015beba61b7c5bd143f332042906dc09[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Apr 27 21:25:51 2022 +0200

    packetpool: minor cleanup

[33mcommit 7b592076ffb7d9534e74074cd17ae5fd319bbdd1[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Apr 27 21:21:09 2022 +0200

    stream: minor code cleanups suggested by cppcheck

[33mcommit 65f54024d3bba6d4822358de4e2112ee34e3fa17[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Apr 27 21:19:43 2022 +0200

    defrag: minor code cleanups suggested by cppcheck

[33mcommit 404face284404848930ae8b743b318a7d592cd8e[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Apr 27 21:18:57 2022 +0200

    output/flow: no double var init

[33mcommit f9a5ceb0d862e30f637c12d45330b443f7f1f27e[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Apr 27 21:18:17 2022 +0200

    smtp: minor code cleanup

[33mcommit a5df176956556c360e5f7f5516a602843a68495b[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Apr 27 21:16:05 2022 +0200

    app-layer: minor code cleanups suggested by cppcheck

[33mcommit 4403e7fe8e3ca741fe175395d8eadb841ab6475e[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Apr 27 21:15:25 2022 +0200

    app-layer/expectation: reduce scope and init vars

[33mcommit 6c3222dee6506c8e9d8a79a75b90a4827e995cd8[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Apr 27 20:19:09 2022 +0200

    ftp: code clarifications
    
    src/app-layer-ftp.c:945:49: style: Parameter 'ftp_state' can be declared with const [constParameter]
    static FTPTransaction *FTPGetOldestTx(FtpState *ftp_state, FTPTransaction *starttx)
                                                    ^

[33mcommit d484d0b45b8e045b8fee7968724fdc708340d99f[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Apr 27 17:28:14 2022 +0200

    util/byte: minor cleanup

[33mcommit 1957c46efc0814efc16ee0677994696dde08ced7[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Apr 27 17:21:25 2022 +0200

    threads: remove usused code; wrap in guards

[33mcommit e593dda3567bfd2bf80f1cbbe7c4a8ed5910540c[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Apr 27 16:52:43 2022 +0200

    threads: remove unused function

[33mcommit b55c8909c3d6aaf598d6070db9171488c8780340[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Apr 27 16:54:49 2022 +0200

    unittests: wrap unittest registration in guards

[33mcommit 905050a053e039745ae5a3cdcf8e5865820e4247[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Apr 27 16:49:24 2022 +0200

    app-layer/profiling: hide profiling code behind guards

[33mcommit 93050c26b323458e3166868ad7656f13bf80d5f1[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Apr 27 16:47:12 2022 +0200

    app-layer/events: remove unused function

[33mcommit 893ba84c0e85c6b0103815e4c7c49b1ea18e3876[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Apr 27 16:40:14 2022 +0200

    output/frames: fix eof var overwrite

[33mcommit 1282b179cc4373fa30313f4f79aa9a8a7a56726e[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Apr 27 16:37:28 2022 +0200

    stream/reassembly: reduce scope of variable

[33mcommit 3f375fd444bfa29e64f9a9830a9089c862d16161[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Apr 27 15:57:45 2022 +0200

    stream/buffer: remove redundant check

[33mcommit 002b335b4a71cc527f3229bbc47828db536aea39[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Apr 27 15:48:18 2022 +0200

    decode/checksums: constify pointer args

[33mcommit 350be6cbac5434808caf34409058f6ecc8e28f07[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Apr 27 15:35:46 2022 +0200

    detect/state: address cppcheck warnings
    
    src/detect-engine-state.c:127:91: style: Suspicious calculation. Please use parentheses to clarify the code. The code ''a&b?c:d'' should be written as either ''(a&b)?c:d'' or ''a&(b?c:d)''. [clarifyCalculation]
        DetectEngineStateDirection *dir_state = &state->dir_state[direction & STREAM_TOSERVER ? 0 : 1];
                                                                                              ^
    src/detect-engine-state.c:194:53: style: Suspicious calculation. Please use parentheses to clarify the code. The code ''a&b?c:d'' should be written as either ''(a&b)?c:d'' or ''a&(b?c:d)''. [clarifyCalculation]
        de_state->dir_state[direction & STREAM_TOSERVER ? 0 : 1].filestore_cnt += file_no_match;
                                                        ^
    src/detect-engine-state.c:201:57: style: Suspicious calculation. Please use parentheses to clarify the code. The code ''a&b?c:d'' should be written as either ''(a&b)?c:d'' or ''a&(b?c:d)''. [clarifyCalculation]
        if (de_state->dir_state[direction & STREAM_TOSERVER ? 0 : 1].filestore_cnt == sgh->filestore_cnt)
                                                            ^

[33mcommit 4feb0529a499fd1d8ec18569098da2b77ec71326[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Apr 27 15:33:20 2022 +0200

    detect/file: minor code cleanup
    
    Reduce scope where possible. Suggested by cppcheck.

[33mcommit a535cc5a2552d3c46792c5e5b4b3b3b6e74d4b41[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Apr 28 17:49:07 2022 +0200

    runmodes: fix more warnings

[33mcommit f0479987ff6f5321613395a8bf1a5eb38530b977[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri May 6 23:52:00 2022 +0200

    memcmp: no-simd no case loop can scan forward

[33mcommit 0fc7ba45aa6c494bdedd5276e7ec7e4e9012facb[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri May 6 18:20:40 2022 +0200

    memcmp: use SCMEMCMP_BYTES everywhere; general cleanups

[33mcommit 87c5d6943709de225d946f5eab8f1d24cdefa491[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri May 6 17:46:40 2022 +0200

    memcmp: work around GCC 12+ 'blend' issues
    
    Since GCC 12 the memcmp code using `_mm_blendv_epi8` failed to work.
    Inspection of the disassembled objects suggests that it simply omits
    the instruction on systems that are not AVX512 capable. On AVX512
    it does replace it with VPCMPB logic that appears to work.
    
    Luckily our use of blend is actually uncessary. A simple AND is sufficient.
    
    Bug: #5312.

[33mcommit ca97ed44361fe84cae72fad1807825f149f983eb[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu May 5 07:16:53 2022 +0200

    memcmp: remove unreachable code from memcmp simd
    
    cppcheck:
    
    src/util-memcmp.h:281:18: warning: Identical condition 'len-offset<16', second condition is always false [identicalConditionAfterEarlyExit]
            if (diff < 16) {
                     ^
    src/util-memcmp.h:280:24: note: 'diff' is assigned value 'len-offset' here.
            int diff = len - offset;
                           ^
    src/util-memcmp.h:269:33: note: If condition 'len-offset<16' is true, the function will return/exit
            if (likely(len - offset < 16)) {
                                    ^
    src/util-memcmp.h:281:18: note: Testing identical condition 'len-offset<16'
            if (diff < 16) {
                     ^
    src/util-memcmp.h:344:18: warning: Identical condition 'len-offset<16', second condition is always false [identicalConditionAfterEarlyExit]
            if (diff < 16) {
                     ^
    src/util-memcmp.h:343:24: note: 'diff' is assigned value 'len-offset' here.
            int diff = len - offset;
                           ^
    src/util-memcmp.h:318:33: note: If condition 'len-offset<16' is true, the function will return/exit
            if (likely(len - offset < 16)) {
                                    ^
    src/util-memcmp.h:344:18: note: Testing identical condition 'len-offset<16'
            if (diff < 16) {
                     ^
    src/util-memcmp.h:171:18: warning: Identical condition 'len-offset<16', second condition is always false [identicalConditionAfterEarlyExit]
            if (diff < 16) {
                     ^
    src/util-memcmp.h:170:24: note: 'diff' is assigned value 'len-offset' here.
            int diff = len - offset;
                           ^
    src/util-memcmp.h:159:33: note: If condition 'len-offset<16' is true, the function will return/exit
            if (likely(len - offset < 16)) {
                                    ^
    src/util-memcmp.h:171:18: note: Testing identical condition 'len-offset<16'
            if (diff < 16) {
                     ^
    src/util-memcmp.h:233:18: warning: Identical condition 'len-offset<16', second condition is always false [identicalConditionAfterEarlyExit]
            if (diff < 16) {
                     ^
    src/util-memcmp.h:232:24: note: 'diff' is assigned value 'len-offset' here.
            int diff = len - offset;
                           ^
    src/util-memcmp.h:208:33: note: If condition 'len-offset<16' is true, the function will return/exit
            if (likely(len - offset < 16)) {
                                    ^
    src/util-memcmp.h:233:18: note: Testing identical condition 'len-offset<16'
            if (diff < 16) {
                     ^

[33mcommit 9bdf18a3b076cb8ba68e0fa1a4528d1b92348813[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri May 6 11:13:09 2022 +0200

    detect/iponly: fix debug compiler warning

[33mcommit dfe76bb905409bf91345e972f2ab157bda51f003[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon May 2 12:19:51 2022 -0600

    dcerpc: convert transaction list to vecdeque
    
    Allows for more efficient removal from front of the list.
    
    Ticket: #5271

[33mcommit 879096828162a07405a71d2bbdfeb169e904dd59[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon May 2 12:19:29 2022 -0600

    mqtt, rdp: fix copyright dates

[33mcommit c78722a671e819261dea9ce148966718cfca7c64[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon May 2 22:50:04 2022 +0200

    rust: RustParser same fields as AppLayerParser
    
    So that there is no problem when crossing FFI

[33mcommit af745e4cc4cb666fcb9415439ae52a1cfe28beef[m
Author: Sascha Steinbiss <satta@debian.org>
Date:   Sat Apr 30 14:20:38 2022 +0200

    configure.ac: handle undefined LEVEL1_DCACHE_LINESIZE
    
    On some platforms (riscv64, s390x) this value is "undefined" as returned
    from getconf. We also need to handle this to avoid using the string
    "undefined" blindly in further #defines.

[33mcommit d7999563486c82f60a101ccb5857c70aa932522e[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Mon May 2 12:06:56 2022 +0000

    doc: add note about file.data and file_data
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 83f2056d2024b170ab39e50b4ee47051a20e7411[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Tue Apr 26 20:49:19 2022 +0000

    doc: update file_data to file.data keyword
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit cd54d0dbc882f1bdfcbc60bb48650ae95d73d783[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Tue Apr 26 20:35:52 2022 +0000

    doc: remove extra newline in order to match style
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 38bd775ca037762cd4610037480a8a42a314b325[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Tue Apr 26 20:33:07 2022 +0000

    doc: remove extraneous + characters
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 07bf9214513e54e04508c055bb8ed29aa3bce60f[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sat Apr 30 16:54:07 2022 +0200

    ftp-data: fix direction for active mode commands
    
    Set correct direction for PORT mode, where the server connects
    to the client.
    
    The direction is not also strictly enforced. No data in the wrong
    direction will be accepted to setup the file or to be added to the
    file after setup.
    
    This also fixes files getting closed twice.
    
    Adds some general cleanups.
    
    Bug: #3542.

[33mcommit 323fe1c1ac0bb93a2e46491790d48fa25c9a40b8[m
Author: Sam Muhammed <ghostinthehive.vx@gmail.com>
Date:   Sat Feb 12 19:53:00 2022 +0200

    nfs3/records: Fix typo
    
    Fix response_lookup unittest name

[33mcommit 94bcba4ea38245623c18dfceff0fd5809b747050[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Apr 14 13:54:53 2022 +0200

    template: convert GetTx to SCLogDebug
    
    as it is especially verbose for fuzzing

[33mcommit cd42c33195516e8858c112d6622862cabd0aed6b[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Apr 21 13:41:15 2022 -0600

    scripts/bundle: use git instead of tar.gz
    
    To better fit with our current CI processes, use git to clone the
    suricata-update and libhtp dependencies.  The requirements.txt file has
    been modified to take a repo URL and a `-b` command line option for tag
    or branch.
    
    For the master branch we will use the libhtp 0.5.x branch and the
    suricata-update master branch.
    
    Also allows for repo and branch names to be overrided with environment
    variables:
    - SU_REPO
    - SU_BRANCH
    - LIBHTP_REPO
    - LIBHTP_BRANCH

[33mcommit 73ed780095deff40dd625412ac706337be54dc88[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Jan 18 15:29:17 2022 +0100

    decode: fix integer warnings
    
    Ticket: 4516

[33mcommit 9645285dff9eb8313db573d8603162a708736236[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Apr 22 12:04:37 2022 -0600

    ftp: truncate first segment if over max length
    
    The first segment was not limited to the configured maximum line length
    allowing it to be up to 65k. This could result in the next input length
    being negative, which while handled properly by the code, did trigger a
    debug validation assertion.
    
    The fix is to be consistent and apply the limit to the first segment as
    well, which does ensure the input_len could never be less than 0.
    
    Ticket #5281

[33mcommit b8b6a17a5b26479c3b5e011265f64d4cfda63ff6[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Feb 8 13:42:37 2022 -0600

    dns: add pdu frame
    
    Adds a PDU frame to the DNS parser. For UDP this is the DNS payload
    portion of the DNS packet, for TCP this is the payload minus the leading
    legth field.
    
    Ticket: 4984

[33mcommit 8d1840f5950397385ac81b5f56bdd9dac35ae657[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Apr 26 14:59:18 2022 -0600

    frames(rust): don't call into C if running Rust unit tests
    
    Wrap the calls behind frames to C code if a `cfg!(not(test))` so they
    don't get compiled when running Rust unit tests.  Linkage to C functions
    is not yet available for Rust unit tests, and this will keep the check
    out of individual parsers.
    
    Ticket: 4984

[33mcommit c74ea3840d90c513224c2d8c3dc5652435dfdb55[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Feb 8 15:45:05 2022 -0600

    frames (rust): method to create StreamSlice from slice
    
    Useful in unit test for function that require a StreamSlice.

[33mcommit 6ceeb08351bfdcee8e3daae1e40be62590f15567[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Apr 27 13:13:07 2022 -0600

    doc/userguide: updates for eve dns v1 removal
    
    Ticket: #4157

[33mcommit d712a8b29d380ef52292f5c70a8644cac6a93d93[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Apr 27 12:32:18 2022 -0600

    eve/dns: remove dns v1 logging
    
    Removal of DNS v1 logging was scheduled to be removed in May 2022.
    
    Ticket: #4157

[33mcommit 83ca75fc3aad85ad67ba65aa879e7db917ab3b71[m
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Wed Apr 27 19:29:46 2022 +0000

    github-actions: bump github/codeql-action from 2.1.8 to 2.1.9
    
    Bumps [github/codeql-action](https://github.com/github/codeql-action) from 2.1.8 to 2.1.9.
    - [Release notes](https://github.com/github/codeql-action/releases)
    - [Changelog](https://github.com/github/codeql-action/blob/main/CHANGELOG.md)
    - [Commits](https://github.com/github/codeql-action/compare/1ed1437484560351c5be56cf73a48a279d116b78...7502d6e991ca767d2db617bfd823a1ed925a0d59)
    
    ---
    updated-dependencies:
    - dependency-name: github/codeql-action
      dependency-type: direct:production
      update-type: version-update:semver-patch
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

[33mcommit 192360aa052841f21d22149b049ef94691f9a1f7[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Thu Apr 21 11:51:21 2022 -0300

    detect: update copyright years

[33mcommit 29b5f68bf0770750954780982c46c6fa82eec96b[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Thu Apr 21 12:47:03 2022 -0300

    assorted: fix low hanging typos

[33mcommit 1956dc3d5da5dfdc55e0f8304e815b99bd7567e4[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Wed Apr 6 17:06:09 2022 -0300

    userguide: explain alert queue behavior and stats
    
    Added sections along packet-alert-max config section explaining
    packet alert queue overflow (when Suri reaches packet alert max), when
    alerts are discarded etc.
    
    Since from the user perspective it shouldn't matter how we process the
    alert queue, the term "replace" is used, even though there's not exactly
    a replacing action happening, with the queue bein pre-processed before
    being appended to the Packet.
    
    Also described the associated stats and added an explanation on when to
    change packet-alert-max.
    
    Task #5178

[33mcommit 877b32c1e42c6edde3fa5f6ab73293e0a4ad27c3[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Wed Apr 20 13:49:31 2022 -0300

    detect/stats: log out total of suppressed alerts
    
    Related to
    Task #4943
    Task #5179

[33mcommit 8616c90fe7573815137a1dbc7fdfeded95f2b38f[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Tue Apr 5 16:54:29 2022 -0300

    detect/stats: log out total of discarded alerts
    
    Add a counter to our stats log with the total of alerts that have been
    discarded due to packet alert queue overflow.
    
    Task #5179

[33mcommit 9b275d3878643fa27ac4f54d74ba66b51e115459[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Wed Apr 27 19:18:27 2022 -0300

    detect/alert: move apply-action-flow code to func
    
    Trying to clean PacketAlertFinalize a bit more.

[33mcommit e4e688a9b0add66aa0b97df0f7b1b9e60f68fb90[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Wed Apr 20 17:50:43 2022 -0300

    detect/alert: remove unused functions
    
    Since we now only copy the PacketAlerts to the Packet's queue after
    processing them, we no longer do packet alert appending from
    detect-engine-alert, nor do we remove PacketAlerts from the queue (if
    they're discarded by overflow or thresholding, they're not copied to the
    final alert queue).
    
    Task #4943

[33mcommit 185b43edff7f3f9db0c919663eb02ceb49787a8f[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Tue Apr 19 17:43:10 2022 -0300

    detect/alert: preprocess then append alert queue
    
    Do all alert queue processing before actually appending
    the PacketAlerts to the Packet's alert queue.
    
    Task #4943

[33mcommit a85340b1ab2aa9490a4d4d937ad0f8808b052dfe[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Tue Apr 26 11:57:49 2022 -0300

    detect/alert: use tx id in alert if frame has it
    
    Task #4943

[33mcommit aa547a8de38d7066d47d83449fba67a0a640260d[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Tue Apr 19 10:58:22 2022 -0300

    detect/engine: use alert queue from det_ctx
    
    Task #4943

[33mcommit 88805f03eec038fd67a18599d7d9f037db083941[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Mon Apr 18 18:14:52 2022 -0300

    detect/alert: add infra for new alert queue
    
    Initial work to bring part of the alert queue processing to
    DetectEngineThreadCtx.
    
    Task #4943

[33mcommit 49542d0f1bb35d889f798a50c04f4a257b816695[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Wed Apr 6 11:54:52 2022 -0300

    doc/userguide: explain packet-alert-max config
    
    Task #4207

[33mcommit 3ace577d5426e2e1afd1cdf0736151022771226c[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Wed Jan 19 18:29:39 2022 +0000

    decode: make packet_alert_max configurable
    
    The maximum of possible alerts triggered by a unique packet was
    hardcoded to 15. With usage of 'noalert' rules, that limit could be
    reached somewhat easily. Make that configurable via suricata.yaml.
    
    Conf Bug#4941
    
    Task #4207

[33mcommit e319d31c148a349e93bed2a68787684e39364d17[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Apr 27 10:16:02 2022 -0600

    template(rust): convert transaction list to vecdeque
    
    Allows for more efficient removal from front of the list.
    
    Ticket: #5298

[33mcommit 9b0b2beac1a1d5f8a5d856ea58b4f7c407339574[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Apr 27 09:47:19 2022 -0600

    pgsql: convert transaction list to vecdeque
    
    Allows for more efficient removal from front of the list.
    
    Ticket: #5297

[33mcommit 2db84726ad3445a0b55ca145489103483f61c6b0[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Apr 27 09:38:51 2022 -0600

    http2: convert transaction list to vecdeque
    
    Allows for more efficient removal from front of the list.
    
    Ticket: #5296

[33mcommit 4e0ad5e0bd4584d625ad122f0c33908abb17e7a4[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Apr 27 09:29:30 2022 -0600

    rdp: convert transaction list to vecdeque
    
    Allows for more efficient removal from front of the list.
    
    Ticket: #5295

[33mcommit 3b422e25f39f1f75fcc18e163a1149661fd2fc97[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Apr 27 09:25:13 2022 -0600

    mqtt: convert transaction list to vecdeque
    
    Allows for more efficient removal from front.
    
    Ticket: #5294

[33mcommit 31894147884af3e7151b4d653e5268a0b0477db8[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Apr 26 13:25:40 2022 -0600

    dns: convert transaction list to vecdeque
    
    Allows for more efficient removal from front of the list.
    
    Ticket: #5277

[33mcommit 7b11b4d3a1b4787992279dfa0d4583f3fb94add2[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Apr 26 13:21:40 2022 -0600

    app-layer: more generic state trait
    
    Instead of a method that is required to return a slice of transactions,
    use 2 methods, one to return the number of transactions in the
    collection, and another to get a transaction by its index in the
    collection.
    
    This allows for the transaction collection to not be a contiguous array
    and instead can be a VecDeque, or possibly another collection type that
    supports retrieval by index.
    
    Ticket #5278

[33mcommit bbd9a2ff1aafb7b453d256368405ea49b3dc4a32[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Fri Apr 29 17:21:45 2022 -0300

    pgsql: apply clippy fixes

[33mcommit 0fc9ade7a9f672560a276bb40d97cf07ee89dbac[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Fri Feb 4 10:58:27 2022 +0000

    pgsql: fix uint overflow and optimizations
    
    Fuzzers found a possible integer overflow bug when parsing response
    messages. To fix that, removed the case where we incremented the parsed
    field length and created a new message type for situations where Suri
    parsers an Unknown message. This is good because there may happen that
    an unknown message to Suri is valid, and in this case, we would still be
    able to log it.
    
    Philippe Antoine found the bug while fuzzing with rust debug assertions.
    
    Bug #5016

[33mcommit 8daa79513aedac6061601ac8ecf4a46d476a60aa[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Wed Jan 26 17:33:23 2022 +0000

    pgsql: fix clippy is_null usage warning

[33mcommit 5ec6f3ba51c449f7588afac0820ad57b1cea5de9[m
Author: Sascha Steinbiss <satta@debian.org>
Date:   Wed Apr 27 23:12:26 2022 +0200

    util: add unit tests for CIDRFromMask()

[33mcommit 394356f73c026879672843fbb20b4de68a09d0ac[m
Author: Sascha Steinbiss <satta@debian.org>
Date:   Wed Apr 27 20:09:50 2022 +0200

    detect: make int CIDRFromMask() work on big endian platforms

[33mcommit d2f00ac824068475414a6ee402c9ecf4b0de1308[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Sat Apr 2 21:41:56 2022 +0200

    dcerpc: use wrappingadd for padding parsing
    
    As we compute a modulo, we can safely wrap around even if there
    is an overflow
    
    Ticket: #5301

[33mcommit 07d0ae04d34cdf029729b474fb22598f154fcea6[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Apr 27 11:39:27 2022 +0200

    logopenfile: fix minor format string warning
    
    cppcheck:
    
    src/util-logopenfile.c:743:13: warning: %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
                snprintf(threaded_name, len, "%s.%d.%s", tname, unique_id, ext);
                ^
    src/util-logopenfile.c:752:9: warning: %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
            snprintf(threaded_name, len, "%s.%d", original_name, unique_id);
            ^
    
    Bug: #5291.

[33mcommit 1e13f7278585555623ff0be2d3a98476617b1219[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Apr 27 11:38:37 2022 +0200

    ja3: fix minor format string warning
    
    cppcheck:
    
    src/util-ja3.c:197:28: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
            (*buffer)->used += snprintf((*buffer)->data, (*buffer)->size, "%d",
                               ^
    src/util-ja3.c:201:28: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
            (*buffer)->used += snprintf((*buffer)->data + (*buffer)->used,
                               ^
    
    Bug: #5291.

[33mcommit 3dfbf0bf1124aab7c7060f46b364877ab25455ee[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Apr 27 11:36:21 2022 +0200

    log-pcap: remove redundant check
    
    Check is always true but confuses cppcheck:
    
    src/log-pcap.c:1224:32: warning: Either the condition 'filename' is redundant or there is possible null pointer dereference: filename. [nullPointerRedundantCheck]
        if ((pl->prefix = SCStrdup(filename)) == NULL) {
                                   ^
    src/log-pcap.c:1421:9: note: Assuming that condition 'filename' is not redundant
        if (filename) {
            ^
    src/log-pcap.c:1224:32: note: Null pointer dereference
        if ((pl->prefix = SCStrdup(filename)) == NULL) {
                                   ^
    
    Bug: #5291.

[33mcommit fedced209dc25443ec5eee22bfab6c99f9f652ab[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Apr 27 11:32:22 2022 +0200

    af-packet/v2: use proper type for ring
    
    cppcheck:
    
    src/source-af-packet.c:1762:19: warning: Size of pointer 'v2' used instead of size of its data. This is likely to lead to a buffer overflow. You probably intend to write 'sizeof(*v2)'. [pointerSize]
            ptv->ring.v2 = SCMalloc(ptv->req.v2.tp_frame_nr * sizeof (union thdr *));
                      ^
    src/source-af-packet.c:1767:26: warning: Size of pointer 'v2' used instead of size of its data. This is likely to lead to a buffer overflow. You probably intend to write 'sizeof(*v2)'. [pointerSize]
            memset(ptv->ring.v2, 0, ptv->req.v2.tp_frame_nr * sizeof (union thdr *));
                             ^
    
    scan-build:
    
    CC       source-af-packet.o
    source-af-packet.c:1762:24: warning: Result of 'malloc' is converted to a pointer of type 'char', which is incompatible with sizeof operand type 'union thdr *' [unix.MallocSizeof]
            ptv->ring.v2 = SCMalloc(ptv->req.v2.tp_frame_nr * sizeof (union thdr *));
                           ^~~~~~~~                           ~~~~~~~~~~~~~~~~~~~~~
    ./util-mem.h:35:18: note: expanded from macro 'SCMalloc'
                     ^~~~~~
    1 warning generated.
    
    Bug: #5291.

[33mcommit 69b8b48b9422279943c083a24e5baf64e1c4aa94[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Apr 26 21:47:37 2022 +0200

    detect/pcre: assist code analyzer around pointer logic
    
    cppcheck:
    
    src/detect-pcre.c:381:27: warning: Either the condition 'pcap' is redundant or there is overflow in pointer subtraction. [nullPointerArithmeticRedundantCheck]
                cut_capture = MIN((pcap - regexstr), (fcap - regexstr));
                              ^
    src/detect-pcre.c:378:18: note: Assuming that condition 'pcap' is not redundant
            else if (pcap && !fcap)
                     ^
    src/detect-pcre.c:381:27: note: Null pointer subtraction
                cut_capture = MIN((pcap - regexstr), (fcap - regexstr));
                              ^
    
    Bug: #5291.

[33mcommit 3bc50df9c3397b9ab06376657c5e8c3467fbc7c5[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Apr 26 21:35:29 2022 +0200

    device: avoid uninit var warning
    
    cppcheck:
    
    src/util-device.c:455:17: error: Uninitialized variables: *ndev.dev, *ndev.tenant_id_set, *ndev.id, *ndev.next, *ndev.tenant_id, *ndev.offload_orig [uninitvar]
            *ldev = *ndev;
                    ^
    src/util-device.c:618:36: note: Calling function 'LiveDeviceForEach', 2nd argument '&ndev' value is <Uninit>
        while(LiveDeviceForEach(&ldev, &ndev)) {
                                       ^
    src/util-device.c:455:17: note: Uninitialized variables: *ndev.dev, *ndev.tenant_id_set, *ndev.id, *ndev.next, *ndev.tenant_id, *ndev.offload_orig
            *ldev = *ndev;
                    ^
    
    Bug: #5291.

[33mcommit 7e2ed11a11cae89bc07e9a25425192581687993d[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Apr 26 21:33:52 2022 +0200

    detect: fix bad BUG_ON pattern
    
    cppcheck:
    
    src/detect-engine-uint.c:73:13: warning: Conversion of string literal "unknown mode" to bool always evaluates to true. [incorrectStringBooleanError]
                BUG_ON("unknown mode");
                ^
    src/detect-engine-uint.c:328:13: warning: Conversion of string literal "unknown mode" to bool always evaluates to true. [incorrectStringBooleanError]
                BUG_ON("unknown mode");
                ^
    src/detect-pcre.c:291:25: warning: Conversion of string literal "Impossible captype" to bool always evaluates to true. [incorrectStringBooleanError]
                            BUG_ON("Impossible captype");
                            ^
    
    Bug: #5291.

[33mcommit 2f48e432cd4465bbb1f42fe7778fee44a5d0aa47[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Apr 26 21:03:42 2022 +0200

    time: fix warning in timestring creation
    
    cppcheck:
    
    src/util-time.c:255:18: warning: Either the condition 'str!=NULL' is redundant or there is possible null pointer dereference: str. [nullPointerRedundantCheck]
            snprintf(str, size, "ts-error");
                     ^
    src/util-time.c:252:48: note: Assuming that condition 'str!=NULL' is not redundant
        if (likely(t != NULL && fmt != NULL && str != NULL)) {
                                                   ^
    src/util-time.c:255:18: note: Null pointer dereference
            snprintf(str, size, "ts-error");
                     ^
    
    Only `t` could possibly be NULL if `localtime_r` fails elsewhere.
    
    Bug: #5291.

[33mcommit 4fcb8740e7b98eee1b5e65bd66045c9440cef8b6[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Apr 26 20:36:36 2022 +0200

    detect/multi-tentancy: minor format string fixes
    
    cppcheck:
    
    src/detect-engine.c:3643:5: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
        snprintf(prefix, sizeof(prefix), "multi-detect.%d", tenant_id);
        ^
    src/detect-engine.c:3707:5: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
        snprintf(prefix, sizeof(prefix), "multi-detect.%d.reload.%d", tenant_id, reload_cnt);
        ^
    src/detect-engine.c:4086:17: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
                    snprintf(prefix, sizeof(prefix), "multi-detect.%d", tenant_id);
                    ^
    
    Bug: #5291.

[33mcommit 5a0bbb5289cd0fbf4ef50294127cb1018baf82a2[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Apr 26 20:18:28 2022 +0200

    reference: remove useless var reset
    
    cppcheck:
    
    src/util-reference-config.c:179:9: warning: Assignment of function parameter has no effect outside the function. Did you forget dereferencing it? [uselessAssignmentPtrArg]
            fd = NULL;
            ^
    
    Bug: #5291.

[33mcommit 2965d809a44817223d3e6bc81e55c2286da5212b[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Apr 26 20:17:27 2022 +0200

    runmodes: minor format string fixes
    
    cppcheck:
    
    src/util-runmodes.c:210:9: warning: %u in format string (no. 2) requires 'unsigned int' but the argument type is 'signed int'. [invalidPrintfArgType_uint]
            snprintf(tname, sizeof(tname), "%s#%02u", thread_name_workers, thread+1);
            ^
    src/util-runmodes.c:211:9: warning: %u in format string (no. 1) requires 'unsigned int' but the argument type is 'signed int'. [invalidPrintfArgType_uint]
            snprintf(qname, sizeof(qname), "pickup%u", thread+1);
            ^
    src/util-runmodes.c:455:9: warning: %u in format string (no. 2) requires 'unsigned int' but the argument type is 'signed int'. [invalidPrintfArgType_uint]
            snprintf(tname, sizeof(tname), "%s#%02u", thread_name_workers, thread+1);
            ^
    src/util-runmodes.c:457:9: warning: %u in format string (no. 1) requires 'unsigned int' but the argument type is 'signed int'. [invalidPrintfArgType_uint]
            snprintf(qname, sizeof(qname), "pickup%u", thread+1);
            ^
    
    src/runmode-erf-file.c:188:9: warning: %u in format string (no. 2) requires 'unsigned int' but the argument type is 'signed int'. [invalidPrintfArgType_uint]
            snprintf(tname, sizeof(tname), "%s#%02u", thread_name_workers, thread+1);
            ^
    src/runmode-erf-file.c:189:9: warning: %u in format string (no. 1) requires 'unsigned int' but the argument type is 'signed int'. [invalidPrintfArgType_uint]
            snprintf(qname, sizeof(qname), "pickup%u", thread+1);
            ^
    src/runmode-pcap-file.c:201:9: warning: %u in format string (no. 2) requires 'unsigned int' but the argument type is 'signed int'. [invalidPrintfArgType_uint]
            snprintf(tname, sizeof(tname), "%s#%02u", thread_name_workers, thread+1);
            ^
    src/runmode-pcap-file.c:202:9: warning: %u in format string (no. 1) requires 'unsigned int' but the argument type is 'signed int'. [invalidPrintfArgType_uint]
            snprintf(qname, sizeof(qname), "pickup%u", thread+1);
            ^
    
    Bug: #5291.

[33mcommit a8d3cd6eb4f181000256986ea7cf83074a0d2b59[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Apr 26 20:14:39 2022 +0200

    mpm/ac-ks: address int handling issues
    
    cppcheck:
    
    src/util-mpm-ac-ks.c:1452:5: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
        printf("Total states in the state table:    %d\n", ctx->state_count);
        ^
    src/util-mpm-ac-ks.c:606:34: error: Signed integer overflow for expression '1<<31'. [integerOverflow]
            encoded_next_state |= (1 << 31);
                                     ^
    
    Bug: #5291.

[33mcommit 9c672a805fe1fe78591ec0f06da56e23c99d0751[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Apr 26 20:12:20 2022 +0200

    classification: remove useless clear
    
    cppcheck:
    
    src/util-classification-config.c:189:9: warning: Assignment of function parameter has no effect outside the function. Did you forget dereferencing it? [uselessAssignmentPtrArg]
            fd = NULL;
            ^
    
    Bug: #5291.

[33mcommit 27e9a871d0f7feeafb8fff266b2bb4d97abd39f3[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Apr 26 20:06:43 2022 +0200

    detect/content-inspect: code cleanup
    
    Rearrange code slightly to make it more clear that `found` cannot
    be NULL further down the loop.
    
    cppcheck:
    
    src/detect-engine-content-inspection.c:316:50: warning: Either the condition 'found!=NULL' is redundant or there is overflow in pointer subtraction. [nullPointerArithmeticRedundantCheck]
                    match_offset = (uint32_t)((found - buffer) + cd->content_len);
                                                     ^
    src/detect-engine-content-inspection.c:308:30: note: Assuming that condition 'found!=NULL' is not redundant
                } else if (found != NULL && (cd->flags & DETECT_CONTENT_NEGATED)) {
                                 ^
    src/detect-engine-content-inspection.c:316:50: note: Null pointer subtraction
                    match_offset = (uint32_t)((found - buffer) + cd->content_len);
                                                     ^
    
    Bug: #5291.

[33mcommit a0847e6c697055b127343cc338029bc69bbc0791[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Apr 26 20:05:51 2022 +0200

    detect/analyzer: minor format string fixes
    
    cppcheck flagged this as:
    
    src/detect-engine-analyzer.c:1359:13: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
                fprintf(rule_engine_analysis_FD, "    Rule contains %d content options, %d http content options, %d pcre options, and %d pcre options with http modifiers.\n", rule_content, rule_content_http, rule_pcre, rule_pcre_http);
                ^
    src/detect-engine-analyzer.c:1359:13: warning: %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
                fprintf(rule_engine_analysis_FD, "    Rule contains %d content options, %d http content options, %d pcre options, and %d pcre options with http modifiers.\n", rule_content, rule_content_http, rule_pcre, rule_pcre_http);
                ^
    src/detect-engine-analyzer.c:1359:13: warning: %d in format string (no. 3) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
                fprintf(rule_engine_analysis_FD, "    Rule contains %d content options, %d http content options, %d pcre options, and %d pcre options with http modifiers.\n", rule_content, rule_content_http, rule_pcre, rule_pcre_http);
                ^
    src/detect-engine-analyzer.c:1359:13: warning: %d in format string (no. 4) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
                fprintf(rule_engine_analysis_FD, "    Rule contains %d content options, %d http content options, %d pcre options, and %d pcre options with http modifiers.\n", rule_content, rule_content_http, rule_pcre, rule_pcre_http);
                ^
    
    Bug: #5291.

[33mcommit f8a0f3d9b9f4e1aa758a493e00d38e98a552a0d6[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Apr 26 20:04:28 2022 +0200

    detect/address: remove useless checks
    
    Cppcheck flagged this:
    
    src/detect-engine-address.c:1035:48: warning: Either the condition 'ghn!=NULL' is redundant or there is possible null pointer dereference: gh. [nullPointerRedundantCheck]
        int r = DetectAddressIsCompleteIPSpaceIPv4(gh->ipv4_head);
                                                   ^
    src/detect-engine-address.c:1297:17: note: Assuming that condition 'ghn!=NULL' is not redundant
            if (ghn != NULL) {
                    ^
    src/detect-engine-address.c:1283:44: note: Calling function 'DetectAddressIsCompleteIPSpace', 1st argument 'ghn' value is 0
            if (DetectAddressIsCompleteIPSpace(ghn)) {
                                               ^
    src/detect-engine-address.c:1035:48: note: Null pointer dereference
        int r = DetectAddressIsCompleteIPSpaceIPv4(gh->ipv4_head);
                                                   ^
    
    Cleanup code could only be reached with non-NULL pointers, so simplify checks.
    
    Bug: #5291.

[33mcommit bad900516133a81afb0a6d3982fa3de5871e6ba7[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Apr 26 20:02:19 2022 +0200

    detect/ipv6: remove useless code
    
    Remove useless allocation and free.
    
    Found by cppcheck as a potential issue:
    
    src/detect-engine-address-ipv6.c:385:12: warning: Either the condition 'tmp!=NULL' is redundant or there is possible null pointer dereference: tmp. [nullPointerRedundantCheck]
        memset(tmp,0,sizeof(DetectAddress));
               ^
    src/detect-engine-address-ipv6.c:525:13: note: Assuming that condition 'tmp!=NULL' is not redundant
        if (tmp != NULL)
                ^
    src/detect-engine-address-ipv6.c:385:12: note: Null pointer dereference
        memset(tmp,0,sizeof(DetectAddress));
               ^
    
    But code turned out not to do anything, so removed.
    
    Bug: #5291.

[33mcommit ea2d0ecf08842d52f77d1a88a184a85960999e1e[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Apr 26 20:01:19 2022 +0200

    datasets: fix cppcheck warning
    
    src/datasets.c:107:17: error: Uninitialized variable: hash [uninitvar]
        memcpy(out, hash, outs);
                    ^
    src/datasets.c:93:26: note: Assuming condition is false
        for (x = 0, i = 0; i < ins; i+=2, x++) {
                             ^
    src/datasets.c:107:17: note: Uninitialized variable: hash
        memcpy(out, hash, outs);
                    ^
    
    Bug: #5291.

[33mcommit 4bb00964ac22f0f96704cf5befca76d056763142[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Apr 25 18:00:24 2022 +0200

    detect: fix rule inspection order
    
    Fix rules from the 'match' list getting added to the tx candidates list
    unsorted. In some cases this could lead to the same sid getting inspected
    twice leading to a DEBUG_VALIDATION_BUG_ON trigger.
    
    Bug: #5144.

[33mcommit c40df43609becc467e86d756098829b3174c80c7[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sat Apr 23 13:59:34 2022 +0200

    stream: improve flow end payload logging
    
    Use all available data, including un-ACK'd, when in flow timeout
    mode.
    
    Bug: #5276.

[33mcommit b50d5eb8c8c815eef60e3167dab52848ba4bd53f[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sat Apr 23 10:00:32 2022 +0200

    eve/alert: add pkt_src/pcap_cnt to tunnel
    
    Makes it easier to correlate an alert to the original packet.

[33mcommit 9336ab5dcdb6559b167240a3aafb274e19bc5c2f[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sat Apr 23 09:59:21 2022 +0200

    eve: add pkt_src
    
    This will tell the user if a record was generated based on a real packet,
    a flow timeout packet or others.

[33mcommit ddf9c9dcad48ad05a013003c6af513f3b0178518[m
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Thu Apr 21 19:38:07 2022 +0000

    github-actions: bump actions/checkout from 3.0.1 to 3.0.2
    
    Bumps [actions/checkout](https://github.com/actions/checkout) from 3.0.1 to 3.0.2.
    - [Release notes](https://github.com/actions/checkout/releases)
    - [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)
    - [Commits](https://github.com/actions/checkout/compare/dcd71f646680f2efd8db4afa5ad64fdcba30e748...2541b1294d2704b0964813337f33b291d3f8596b)
    
    ---
    updated-dependencies:
    - dependency-name: actions/checkout
      dependency-type: direct:production
      update-type: version-update:semver-patch
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

[33mcommit e65b096bf0f78e6f8f61ec90c4e0129ec93f0cdf[m
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Thu Apr 21 19:38:03 2022 +0000

    github-actions: bump codecov/codecov-action from 3.0.0 to 3.1.0
    
    Bumps [codecov/codecov-action](https://github.com/codecov/codecov-action) from 3.0.0 to 3.1.0.
    - [Release notes](https://github.com/codecov/codecov-action/releases)
    - [Changelog](https://github.com/codecov/codecov-action/blob/master/CHANGELOG.md)
    - [Commits](https://github.com/codecov/codecov-action/compare/e3c560433a6cc60aec8812599b7844a7b4fa0d71...81cd2dc8148241f03f5839d295e000b8f761e378)
    
    ---
    updated-dependencies:
    - dependency-name: codecov/codecov-action
      dependency-type: direct:production
      update-type: version-update:semver-minor
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

[33mcommit 3d6e733aa7297f64fe87cc3b59fbbd9a527513fa[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Apr 22 19:33:13 2022 +0200

    stream/unittests: fix failures after last_ack fix
    
    Work around many tests not setting up stream completely or correctly.

[33mcommit 1f43e1477f3c5781381e75f4bed918cbc6c18dfd[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Apr 22 18:27:15 2022 +0200

    stream: improve last_ack validation check
    
    If a packet after the initialization would come with ACK flag set
    but a ACK value of 0, the last_ack tracking could get confused. Fix
    this by not checking for 0 but instead checking if the ACK flag
    has been seen.
    
    Bug: #4549.

[33mcommit d56b2455bc5f430a52b993aa5a26e977ee43d967[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Apr 22 14:30:26 2022 +0200

    libhtp: require 0.5.40
    
    Ticket: #4970.

[33mcommit e9e517534bd61225b96692af3f7713cb5b04ffbc[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Apr 22 08:10:58 2022 +0200

    cbindgen: handle version to stderr change

[33mcommit 464ff80c6a8efd1212b617a80c726173573caf42[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Nov 22 11:30:08 2021 +0100

    smb: protocol detection on pattern without midstream
    
    To recognize a protocol, Suricata first looks for
    patterns, which can be confirmed by a probing parser.
    If this does not work, Suricata can try to run
    some probing parsers on some ports.
    
    This is the case for SMB.
    
    This commit makes handling the confirming and the probing
    paser differently even if they share much code.
    
    The confirmation parser knows that a pattern has been found.
    So, it must not do the midstream case of looking for this
    pattern in the whole buffer, but only check it at the beginning.
    But it must reverse direction if needed.

[33mcommit dc574604275f6fe90266bbfc5cb2430b86f9cc09[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Apr 20 21:39:01 2022 +0200

    smb: fix event types for limit exceeded rules

[33mcommit e7417a8e96fcd23fa9e3b529d7c2bbd7b3efb928[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Apr 15 15:51:10 2022 +0200

    smtp: don't pass partial boundary on to mime parser
    
    If the start of a line looks like it might be a mime boundary we
    yield to the get line logic if we don't have enough data to be
    conclusive.

[33mcommit 6e800a8548d9d2699589cac6afca3c0fa7613202[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Apr 15 15:49:09 2022 +0200

    mime: allow partial lines as input
    
    If we get a zero length delim we assume its a partial line and we
    won't append CRLF just yet.

[33mcommit cf749fd450ca41dc001c2a1c10d8d17500dcedce[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Thu Apr 14 21:29:32 2022 +0530

    smtp: pre process DATA and BDAT commands
    
    The input data received in DATA and BDAT command modes can be huge and
    could have important data, like a legit huge email. Therefore, exempt
    these from the line buffering limits which were introduced to regulate
    the size of lines that we buffer at any point in time.
    
    As a part of this patch, anything that comes under DATA or BDAT is
    processed early without buffering as and when it arrives. The ways of
    processing remain the same as before.

[33mcommit 078c251deacc78b8abb40c5ab89d19c29e31bdf8[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Mon Feb 14 16:53:52 2022 +0530

    smtp: fix indefinite buffering if no LF in line
    
    Issue
    -----
    So far, with the SMTP parser, we would buffer data up until an LF char
    was found indicating the end of one line. This would happen in case of
    fragmented data where a line might come broken into multiple chunks.
    This was problematic if there was a really long line without any LF
    character. It would mean that we'd keep buffering data up until we
    encounter one such LF char which may be many many bytes of data later.
    
    Fix
    ---
    Fix this issue by setting an upper limit of 4KB on the buffering of
    lines. If the limit is reached then we save the data into current line
    and process it as if it were a regular request/response up until 4KB
    only. Any data after 4KB is discarded up until there is a new LF char in
    the received input.
    
    Cases
    -----
    1. Fragmentation
    The limit is enforced for any cases where a line of >= 4KB comes as diff
    fragments that are each/some < 4KB.
    2. Single too long line
    The limit is also enforced for any cases where a single line exceeds the
    limit of buffer.
    
    Reported by Victor Julien.
    Ticket 5023

[33mcommit 57a7cf7a0bcc9140a326c91a21e5d21fd2236f49[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Wed Apr 20 12:55:54 2022 +0530

    smtp: add truncated line event

[33mcommit 7d6bc60abb6eefce3f0d20222b2a843de9ea5a6e[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Apr 7 15:58:58 2022 -0600

    doc/userguide: document ftp max-line-length

[33mcommit cf8ed576e09a68886760259055e309e51bf5bec3[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Apr 6 15:38:35 2022 -0600

    ftp: truncate command data that is too long
    
    FTP control commands will be buffered forever until a new line is seen,
    this can lead to memory exhaustion in Suricata.
    
    To fix, set an upper bound, 4096 bytes on the size of the command that
    is saved in the transaction. The input continues to be parsed to find
    the end of the command so the parser can continue to move onto the next
    command.
    
    The result is that the command data in the transaction is truncated,
    which also shows up in the ftp transaction logs.
    
    This value is configurable with the max-line-length field in the ftp
    app-layer.protocols section.
    
    As FTP doesn't have events at this time, add a new fields to eve-log
    that specificy if the request, or the response has been truncated.
    
    Ticket #5024

[33mcommit cedffdf14cf1fdd4d551f16c331e5b3e7f0a6927[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Apr 8 14:40:02 2022 +0200

    protocol: forbids concurrent protocol upgrades
    
    Ticket: 5243
    
    When switching from SMTP to TLS, and getting HTTP1 instead of
    expected TLS, and HTTP1 requesting upgrade to HTTP2, we do not
    overwrite the alproto_orig value so as not to have type confusion
    in AppLayerParserStateProtoCleanup

[33mcommit 0623ada24df1da99c72bb8cd4959b2cb0e64ccc2[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Feb 1 15:44:43 2022 -0600

    dns: better error handling when parsing names
    
    The DNS name parser will error out with an error even if the
    error is incomplete. Instead of manually generating errors,
    use '?' to let the nom error ripple up the error handling chain.
    
    The reason this wasn't done in the first place is this code
    predates the ? operator, or we were not aware of it at the time.
    
    This prevents the case where probing fails when there is enough data to
    parse the header, but not enough to complete name parser. In such a case
    a parse error is returned (instead of incomplete) resulting in the
    payload not being detected as DNS.
    
    Ticket #5034

[33mcommit 27679a12aa4e03e960112f387640419d29780e5a[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Feb 28 16:48:34 2022 -0600

    dns: don't parse a full request during probe if not enough data
    
    If there is more data than a header, but not enough for a complete DNS
    message, the hostname parser could return an error causing the probe to
    fail on valid DNS messages.
    
    So only parse the complete message if we have enough input data. This is
    reliable for TCP as DNS messages are prefixed, but for UDP its just
    going to be the size of the input buffer presented to the parser, so
    incomplete could still happen.
    
    Ticket #5034

[33mcommit 2a89185f0400a4642c7d96f066cf208a5bf6fd47[m
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Tue Apr 19 19:37:14 2022 +0000

    github-actions: bump actions/upload-artifact from 1 to 3
    
    Bumps [actions/upload-artifact](https://github.com/actions/upload-artifact) from 1 to 3.
    - [Release notes](https://github.com/actions/upload-artifact/releases)
    - [Commits](https://github.com/actions/upload-artifact/compare/v1...6673cd052c4cd6fcf4b4e6e60ea986c889389535)
    
    ---
    updated-dependencies:
    - dependency-name: actions/upload-artifact
      dependency-type: direct:production
      update-type: version-update:semver-major
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

[33mcommit f5408ec2d7f74a6c9792e8d86c14a5d609861a4a[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Apr 19 18:54:08 2022 +0200

    detect/frame: fix frame detect registration
    
    Rewrite keyword parser.
    
    Duplicate short names could lead to buffer confusion and memory leaks.
    
    Bug: #5238.

[33mcommit b0354437d5064e6843ab05b881929859b0009435[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Apr 19 12:35:52 2022 +0200

    smb/rules: add rules for new events

[33mcommit 976748b777fbbbba41491401c73c83e05e0a7c8a[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Apr 19 12:17:31 2022 +0200

    doc/smb: add resource limits section

[33mcommit fc9b65d8d3188c57016635aef8d7cdfe4552324e[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Apr 19 08:13:48 2022 +0200

    smb2: validate negotiate read/write max sizes
    
    Raise event if they exceed the configured limit.

[33mcommit 4be8334c9e95cc520c9c6a63a98d6b160915d07f[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sat Apr 16 06:58:20 2022 +0200

    smb2: allow limiting in-flight data size/cnt
    
    Allow limiting in-flight out or order data chunks per size or count.
    
    Implemented for read and writes separately:
    
    app-layer.protocols.smb.max-write-queue-size
    app-layer.protocols.smb.max-write-queue-cnt
    app-layer.protocols.smb.max-read-queue-size
    app-layer.protocols.smb.max-read-queue-cnt

[33mcommit 2c5ad8858e38fce20155044a06969693fe472d4c[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sat Apr 16 06:57:56 2022 +0200

    filetracker: track total queued data (in_flight)
    
    As well as expose number of chunks.

[33mcommit 90d4b8e43804d4a03190ad06b6863c808c8b4acd[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Apr 18 22:14:36 2022 +0200

    smb: log max read/write sizes

[33mcommit 5bcc4162f7051194d228ba6c58a665d71c0c047c[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Apr 18 21:47:39 2022 +0200

    smb2: add options for max read/write size
    
    Add options for the max read/write size accepted by the parser.

[33mcommit f28888513ac3be18715f522db253c5753adb94ed[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Apr 18 17:49:58 2022 +0200

    smb2: track max read/write size and enforce its values

[33mcommit 594acec5dc88540dddc18b3ee0ad89af0948ee33[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Apr 15 20:52:48 2022 +0200

    smb: minor function cleanup
    
    Remove used argument from `filetracker_newchunk()`. We're not
    using fill_bytes with smb.

[33mcommit c7a474c7253233ce1117ae4af5a5c1fcc4b4e7f4[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Apr 15 20:00:55 2022 +0200

    filetracker: make FileChunk private

[33mcommit 276cae5d73861690f2ee0b48f2f3b6f2a1473a5a[m
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Tue Apr 19 06:14:45 2022 +0000

    github-actions: bump codecov/codecov-action from 2.1.0 to 3
    
    Bumps [codecov/codecov-action](https://github.com/codecov/codecov-action) from 2.1.0 to 3.
    - [Release notes](https://github.com/codecov/codecov-action/releases)
    - [Changelog](https://github.com/codecov/codecov-action/blob/master/CHANGELOG.md)
    - [Commits](https://github.com/codecov/codecov-action/compare/f32b3a3741e1053eb607407145bc9619351dc93b...e3c560433a6cc60aec8812599b7844a7b4fa0d71)
    
    ---
    updated-dependencies:
    - dependency-name: codecov/codecov-action
      dependency-type: direct:production
      update-type: version-update:semver-major
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

[33mcommit 725e1b6e4cfd9de6bc1249e111c951f9b3ccfa56[m
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Tue Apr 19 06:14:42 2022 +0000

    github-actions: bump github/codeql-action from 1.0.26 to 2.1.8
    
    Bumps [github/codeql-action](https://github.com/github/codeql-action) from 1.0.26 to 2.1.8.
    - [Release notes](https://github.com/github/codeql-action/releases)
    - [Changelog](https://github.com/github/codeql-action/blob/main/CHANGELOG.md)
    - [Commits](https://github.com/github/codeql-action/compare/5f532563584d71fdef14ee64d17bafb34f751ce5...1ed1437484560351c5be56cf73a48a279d116b78)
    
    ---
    updated-dependencies:
    - dependency-name: github/codeql-action
      dependency-type: direct:production
      update-type: version-update:semver-major
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

[33mcommit fe444011bcd90b3456f4c54674f3b16d035384f5[m
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Tue Apr 19 06:14:37 2022 +0000

    github-actions: bump actions/cache from 2.1.7 to 3.0.2
    
    Bumps [actions/cache](https://github.com/actions/cache) from 2.1.7 to 3.0.2.
    - [Release notes](https://github.com/actions/cache/releases)
    - [Changelog](https://github.com/actions/cache/blob/main/RELEASES.md)
    - [Commits](https://github.com/actions/cache/compare/937d24475381cd9c75ae6db12cb4e79714b926ed...48af2dc4a9e8278b89d7fa154b955c30c6aaab09)
    
    ---
    updated-dependencies:
    - dependency-name: actions/cache
      dependency-type: direct:production
      update-type: version-update:semver-major
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

[33mcommit 14125d73613c78a0939c684bb4e9a64176ec3a6b[m
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Tue Apr 19 06:14:33 2022 +0000

    github-actions: bump actions/download-artifact from 2 to 3
    
    Bumps [actions/download-artifact](https://github.com/actions/download-artifact) from 2 to 3.
    - [Release notes](https://github.com/actions/download-artifact/releases)
    - [Commits](https://github.com/actions/download-artifact/compare/v2...fb598a63ae348fa914e94cd0ff38f362e927b741)
    
    ---
    updated-dependencies:
    - dependency-name: actions/download-artifact
      dependency-type: direct:production
      update-type: version-update:semver-major
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

[33mcommit ebcf6b6acf5d924c81264b74743a9af136d42aed[m
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Tue Apr 19 06:14:30 2022 +0000

    github-actions: bump ossf/scorecard-action from 1.0.1 to 1.0.4
    
    Bumps [ossf/scorecard-action](https://github.com/ossf/scorecard-action) from 1.0.1 to 1.0.4.
    - [Release notes](https://github.com/ossf/scorecard-action/releases)
    - [Commits](https://github.com/ossf/scorecard-action/compare/e3e75cf2ffbf9364bbff86cdbdf52b23176fe492...c1aec4ac820532bab364f02a81873c555a0ba3a1)
    
    ---
    updated-dependencies:
    - dependency-name: ossf/scorecard-action
      dependency-type: direct:production
      update-type: version-update:semver-patch
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

[33mcommit af90478167e22e7a170589cac2b5eab8c048d41c[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Apr 19 07:33:39 2022 +0200

    detect/frames: reduce severity of validation check

[33mcommit 28898dbfb8c50666a0eba17f007f11aa043d16f4[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Apr 14 12:35:57 2022 -0600

    dependabot: monitor github actions

[33mcommit ad9c8fab256dd21979d95bc1dfcd0d33e6ce6cc3[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Apr 14 13:16:55 2022 -0600

    github-ci: set safe directory before reset
    
    While the latest checkout action does set the "safe.directory"
    parameter, it doesn't appear to stick for the following "git fetch", so
    call this command again.

[33mcommit 57a6f30431b7422049200e7ca1010dc49e4b2dc0[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Apr 14 12:34:47 2022 -0600

    github-ci: pin checkout action to latest release

[33mcommit 3b13008c1b6b994df0ae3f702c24780fd253ec32[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Apr 11 21:29:33 2022 +0200

    mqtt: fix consumed bytes computation for truncated msg
    
    Ticket: 5268

[33mcommit 3a7d09edfc6f9fb6ed2e90427a0d216542561acc[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Apr 13 07:47:42 2022 +0200

    detect/frame: get data using stream callback
    
    Inspect only data that has already been consumed by the
    app-layer parser. This allows for simpler progress tracking.

[33mcommit ffe036e881918f85e45027314f24138b316642b2[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Apr 13 07:42:56 2022 +0200

    frame: introduce entry for getting stream data for frame

[33mcommit 96bc11d0d0f908bc526fa12ec975e32d05e915dd[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Apr 13 07:42:09 2022 +0200

    stream: make raw data handling more generally usable
    
    Move raw detection logic out of main StreamReassembleRawDo() so that
    it can be reused for other parts of the engine.
    
    The caller now has to specify a right edge of the data.

[33mcommit afb97d1dee271b95e51a5a9985165346ca36d4ed[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Apr 12 15:22:23 2022 +0200

    stream: add offset to raw stream callback
    
    This gives the called function to understand where it is in the
    stream.

[33mcommit 205bc1e2884b28dc9b016f116f5c54e0d569eb5d[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Apr 13 14:00:37 2022 +0200

    app-layer: disable stream app tracking on no parser
    
    If protocol has no parser enabled or implemented, disable the app
    progress tracking in the stream engine to reduce the workload in
    the stream engine.

[33mcommit 8ecf7e403ec493118afaa0543166e0c11d907417[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Apr 1 17:55:33 2022 +0200

    source: pcap timestamp microsecond consistency
    
    That is it should be less than 1 000 000.
    Have the same for fuzz targets where the bug came from.
    
    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=44177

[33mcommit 704bc878ea3f2fcb911d38b6a21aa5a7ee4d2a79[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Sat Apr 2 21:16:53 2022 +0200

    dcerpc: store consumed_bytes as i32
    
    As it can grow bigger than u16

[33mcommit dfd17e9acc0b6b20de14f9d96c6c181224af42e3[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Apr 8 08:49:18 2022 +0200

    ike: fix integer underflow in parse_proposal
    
    By not restricting a usize to i16

[33mcommit dccf2e4c30b968477d9cc7e7a86b64b97893831c[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Apr 8 15:15:23 2022 +0200

    detect: config checks alstate before getting tx
    
    Ticket: 4972
    
    As is done in detect-lua-extensions.
    We can have a flow with alproto unknown, no state, and therefore
    cannot run AppLayerParserGetTx which could try to run a NULL
    function

[33mcommit 45d1a9ae772acdf1291c0880217beb16d3bc60c7[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Jul 5 17:05:10 2021 +0200

    detect: faster linked list copy
    
    In DetectAppLayerInspectEngineCopyListToDetectCtx
    Avoid quadratic complexity by remembering last element
    of the linked list we are inserting into

[33mcommit 2a22b4ca1f7f3254d28c555a80dbcfc76da5da85[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Apr 14 14:44:20 2022 +0200

    flow: fix integer warnings
    
    Ticket: 4516

[33mcommit 1cc9762b6aede538b8fa4eb110878c9344bfa272[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Apr 14 14:41:45 2022 +0200

    host/ippair: fix integer warnings
    
    Ticket: 4516

[33mcommit b1eaa1e8cd9b21eca2f0f80b1f02cc0d2cdff566[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Apr 14 14:36:57 2022 +0200

    util: using size_t len for byte utils
    
    Ticket: 4516
    
    Like ByteExtractStringUint64, because most of their inputs come
    from strlen which returns a size_t

[33mcommit f30975fb1604c21a4a2fbb2beace91d71ea26dd9[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Jan 18 11:19:21 2022 +0100

    app-layer: fix integer warnings
    
    Ticket: 4516

[33mcommit 1c8559b3ab2b90a8b90ef95fd942369574eb2af5[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Feb 25 15:40:41 2022 +0100

    debug: support %m output format again
    
    Use thread local storage to avoid the previous dead lock issues.

[33mcommit ce4e5437198c59e13b7020e063702d79b3c4c721[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Mar 4 14:31:24 2022 +0100

    threading: simplify thread name logic

[33mcommit 93d5bce0aafa4b9335daea2bb5b0533407db544a[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Apr 11 17:25:47 2022 +0200

    rust: update regex & memchr dependencies
    
    Bug: #5260.

[33mcommit 053a9d2e685abe7639e23b1c7fad5ae7d68630e3[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Apr 11 12:33:43 2022 +0200

    smb/ntlmssp: add stricter len/offset validation

[33mcommit 3e48881b78f77179d75dfe0301bdd5664cd2e039[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Apr 8 11:23:09 2022 +0200

    smb: prevents integer underflow
    
    Ticket: 5246
    
    If msg_id is 0, we cannot find the previous request

[33mcommit e72036f12f577fb37b985147c2c847d147e49db2[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Apr 4 22:51:01 2022 +0200

    smb: ntlmssp domain_blob_offset underflow check
    
    Ticket: 5246

[33mcommit 817a5001a50a90800547e66fef067c0443eb9f72[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Apr 4 22:45:56 2022 +0200

    smb: check on param parsing
    
    Ticket: 5246
    
    so as not to overflow u16

[33mcommit 013fb2dde39cbca7ed63f1a1b2fb69922f30e99b[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sun Apr 10 20:22:00 2022 +0200

    frames: remove dead condition in eof check

[33mcommit 86e8611f5edd461bc13aa5665a40f9d241c4f23d[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sun Apr 10 20:21:18 2022 +0200

    app-layer: don't switch dir if proto already known

[33mcommit 7b55f8b2e31a51eacbee8156f323ab4e4bd759f8[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sun Apr 10 15:46:38 2022 +0200

    fuzz/sigpcap_aware: set pkt_src to wire
    
    Avoids an assert if DEBUG is compiled in:
    
    fuzz_sigpcap_aware: source-pcap-file.c:420: TmEcode DecodePcapFile(ThreadVars *, Packet *, void *): Assertion `!(p->pkt_src != PKT_SRC_WIRE && p->pkt_src != PKT_SRC_FFR)' failed.

[33mcommit 61df4120da9a1ce1696d8d5408101c05aa33e3e0[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sun Apr 10 15:45:36 2022 +0200

    detect/frame: improve assert accuracy
    
    Handle frames of unknown size correctly.
    
    Bug: #5226.

[33mcommit c824804e2b7d2e434646cd93a838e31b4e02f147[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sat Apr 9 17:24:33 2022 +0200

    eve: allow /dev/null in threaded mode
    
    Avoids creation of actual files called /dev/null.N which take
    up space in /dev/ which lives in memory.

[33mcommit 5deb479f4cb39046f6dea828772e9bad851c21d1[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sat Apr 9 10:56:04 2022 +0200

    flow: cleanup locking debug leftovers

[33mcommit 57533d3e47315e6b96c941fe5fd64149cbeb8b1a[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Apr 8 22:06:09 2022 +0200

    flow: fix and simplify locking
    
    Since:
    
    9551cd053579 ("threading: don't pass locked flow between threads")
    
    `MoveToWorkQueue()` unconditionally unlocks the flow. This allows simpler
    locking handling, including of tcp reuse flows.
    
    The simpler logic also fixes a scenario where TCP reuse flows got "unlocked"
    twice, once in `FlowGetFlowFromHash()` and once in `MoveToWorkQueue()`.
    
    Bug: #5248.
    Coverity: 1494354.

[33mcommit 7eb279ac535c91b7d0af733aa1b57b2e6a4b66df[m
Author: Sascha Steinbiss <satta@debian.org>
Date:   Fri Mar 11 19:05:03 2022 +0100

    mqtt: remove redundant "where" keyword

[33mcommit d63e5b8c51d1ebd836611ec04730405f4805b146[m
Author: Sascha Steinbiss <satta@debian.org>
Date:   Tue Mar 8 23:23:47 2022 +0100

    mqtt: make some functions non-public

[33mcommit 2a3ed9a6aeee398df3c936f356a865ddb0a9c5ae[m
Author: Sascha Steinbiss <satta@debian.org>
Date:   Tue Mar 8 23:19:22 2022 +0100

    mqtt: rustfmt

[33mcommit 1ba62993d5fc6ac6fa880bdad835a83e12d6fa49[m
Author: Sascha Steinbiss <satta@debian.org>
Date:   Tue Mar 8 23:18:36 2022 +0100

    mqtt: raise event on parse error

[33mcommit 5618273ef4babc2fe8ff6a40848cd92dc4dfcdcf[m
Author: Sascha Steinbiss <satta@debian.org>
Date:   Tue Mar 8 23:15:05 2022 +0100

    mqtt: ensure we do not request extra data after buffering
    
    This addresses Redmine bug #5018 by ensuring that the parser
    never requests additional data via the Incomplete error, but to
    raise an actual parse error, since it is supposed to have all
    the data as specified by the message length in the header already.

[33mcommit e3180e3248e38311ad56a080233ad1a8d31a623b[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Jan 18 10:56:48 2022 +0100

    output: fix integer warnings
    
    Ticket: 4516

[33mcommit acbe6a33a21ee0b1d8712a3a3db86a653ecdb242[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Mar 25 15:03:12 2022 +0100

    ssh: install app-layer events rules

[33mcommit 0cba561fecffe93596d38691561d4316c3b8efb2[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Mar 30 15:24:32 2022 +0200

    detect: not an iponly signature if it needs app-layer
    
    Ticket: 4972
    
    This may happen with `config` keyword which is postmatch,
    but may require a transaction

[33mcommit f0528afc2d8a64be81220612a15f7a13297d6969[m
Author: William Harding <57780704+wrharding@users.noreply.github.com>
Date:   Tue Mar 29 14:53:46 2022 -0400

    doc/userguide: sphinx syntax correction

[33mcommit a6bda3596bdd1a0ac04afe5553609c6f7cba0023[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Fri Jan 28 21:20:31 2022 +0000

    unittests: alloc Packet with PacketGetFromAlloc
    
    Some unittests used SCMalloc for allocating new Packet the unittests.
    While this is valid, it leads to segmentation faults when we move to
    dynamic allocation of the maximum alerts allowed to be triggered by a
    single packet.
    
    This massive patch uses PacketGetFromAlloc, which initializes a Packet
    in such a way that any dynamic allocated structures within will also be
    initialized.
    
    Related to
    Task #4207

[33mcommit 6d2a2a073120906304f70c0e120565eae96e36b8[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Sat Jan 29 01:47:17 2022 +0530

    detect/dataset: fix space condition in rule lang
    
    If there is a space following a keyword that does not expect a value,
    the rule fails to load due to improper value evaluation.
    e.g. Space after "set" command
    alert http any any -> any any (http.user_agent; dataset:set  ,ua-seen,type string,save datasets.csv; sid:1;)
    
    gives error
    [ERRCODE: SC_ERR_UNKNOWN_VALUE(129)] - dataset action "" is not supported.
    
    Fix this by handling values correctly for such cases.

[33mcommit 7366396011227b5e51ca810d86ebf7d310e98f34[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Fri Jan 28 19:13:04 2022 +0530

    detect/dataset: cleanup dead code

[33mcommit 2b5eeab7d4d5d43651811cd91e436b3cc303f74a[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Apr 5 13:50:30 2022 +0200

    detect/urilen: don't pass null pointer to pcre2 free
    
    Bug #5228.

[33mcommit 087151ddc316fe8e6b05dc90e3ee1712102e6d17[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Apr 4 13:30:19 2022 +0200

    detect/mpm: initialization micro optimization

[33mcommit 54a6dd09ddedb81ea5c8d3d534ef017d5709038a[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sat Apr 2 22:25:17 2022 +0200

    detect: pattern id assignment through hash table
    
    Only consider active part of the pattern for mpm (so consider chop).
    
    Move data structure to hash list table over the custom array logic.

[33mcommit a14854bce9b14e5ad3c5827fa692663802461745[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Apr 1 15:00:05 2022 +0200

    detect: keyword list to hash to improve perf
    
    Since the switch to pcre2 this was much more heavily used, which
    would lead to measurable time spent in list handling.

[33mcommit 9e6370ae2eb77ee5e43a2b152adfca0484431bd4[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Apr 1 12:22:51 2022 +0200

    detect: optimize mpm-engine setup
    
    Instead of a loop over the rules in a group *per engine* do a single
    loop in which all the engines are prepared in parallel.

[33mcommit 3352c0bee419818f138be5837729f63a9b31bb03[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Mar 31 18:00:57 2022 +0200

    detect: initialization optimization
    
    A lot of time was spent in `SigMatchListSMBelongsTo` for the `mpm_sm`.
    
    Optimize this by keeping the value at hand during Signature parsing and
    detection engine setup.

[33mcommit b804a84c939db8d31d8eedca481c2c74943db4f2[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sat Apr 2 10:51:42 2022 +0200

    hash: constify data input

[33mcommit 4b0e3d79bb9f02ce3f8b5f5777d5833b6ef601db[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sat Apr 2 22:02:41 2022 +0200

    detect/analyzer: support frames in pattern dump

[33mcommit 47629b7aebc8cd0bdbc5f38d098777293a43ff34[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sat Apr 2 15:37:16 2022 +0200

    detect/filemagic: don't pass unused pointer

[33mcommit 8ef066318d7c4dd9b6686dbebd621c790828c384[m
Author: Arne Welzel <arne.welzel@corelight.com>
Date:   Sat Feb 12 17:49:07 2022 +0100

    flow-manager: fix off-by-one in flow_hash row allocation
    
    The current code doesn't cover all rows when more than one flow manager is
    used. It leaves a single row between ftd->max and ftd->min of the next
    manager orphaned. As an example:
    
        hash_size=1000
        flowmgr_number=3
        range=333
    
        instance  ftd->min  ftd->max
        0         0         333
        1         334       666
        2         667       1000
    
        Rows not covered: 333, 666

[33mcommit 9537d119b94ae9e09de1389880806f9935c16639[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Mar 24 16:44:10 2022 +0100

    http: fix reassembled range file accounting

[33mcommit 6d30f4442c400e7b27726267b94b7bf5404881c4[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Mar 25 14:38:40 2022 +0100

    http2: fix file accounting for ranged files
    
    Increment files_opened for tx that 'gets' reassembled ranged file

[33mcommit b336882008d3640973fa71be6f36f3de33d3cd25[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Mar 25 11:17:23 2022 +0100

    smb1: apply close to direction
    
    Instead of closing files in both direction when receiving a close request,
    close only toserver files for the request and close toclient on receiving
    a response.

[33mcommit b9cd502249c5c8ee8f6de33b36afef9daef3512a[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Mar 25 10:36:03 2022 +0100

    smb: convert 'close' parser to function

[33mcommit 54d34c96f5119116a5db734f7657e7b0e13ac9fe[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Mar 24 16:53:31 2022 +0100

    files: open/log debug validation bugon
    
    Meant to find more cases where there is a mismatch.

[33mcommit 55843aee8e372a2ff1aad70e782bdb91e66195a4[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Tue Feb 15 13:06:50 2022 +0000

    devguide: update readme
    
    Use it to explain how to go about the sequence diagram images
    (generation, updating, what is mscgen etc).
    
    Also remove portion that referred to Sphinx builds, as these don't make
    sense now.

[33mcommit e0c8dba7ac6eaa757daf80245688f9f2b2496eff[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Wed Feb 9 19:46:24 2022 +0000

    userguide: dynamically determine copyright date
    
    This uses the date of doc generation to determine the copyright date
    for the trailing date. Based on Jeff Lucovsky solution.

[33mcommit 67af1504b36064f4380933c489dc62d552348e43[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Mon Feb 14 18:29:00 2022 +0000

    devguide: drop use of mscgen script in builds/make
    
    Currently, it seems easier to upload the diagram images to git than to
    try to make the image generation script work with out of the tree builds
    and other corner cases.
    
    This means, however, that one must activelly remember to update msc
    diagram files, run the script and re-add new png files, if those ever
    need to be updated. To raise awareness to that, a watermark was added
    to the diagram images.
    
    Also removed configuration steps that added mscgen as dependency
    (locally and for workflow builds and readthedocs).

[33mcommit 5d63613c4b73722464b00e4282243005723375b8[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Fri Feb 18 16:28:27 2022 +0000

    devguide: add watermark to sequence diagrams
    
    Make it more evident that the sequence diagrams in the transactions
    page are generated with Mscgen

[33mcommit 6f77c722a28a18db717e265e19ffba431efad97e[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Thu Dec 16 18:40:41 2021 +0000

    devguide: move into userguide as last chapter
    
    Moved devguide dir into userguide dir.
    Since the devguide is now incorporated as the last chapter of the
    userguide, removed build and configuration files from the devguide
    dir, as these are no longer needed.
    
    Task #4909

[33mcommit 69c6657127546cf1b8a02751ae328421c8f366f8[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Wed Dec 22 17:57:25 2021 +0000

    devguide: clarify cargo test usage for modules
    
    The documentation was showing an invalid path for running single tests.

[33mcommit cfcade58ad65b18ddc10f1e7cc29b2efe2a8618c[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Nov 30 15:06:38 2021 +0100

    http: move xff logging to alert object
    
    Ticket: 4860
    
    instead of root field

[33mcommit 862e84877ff262cd4b8c4b191a8710f94f63fcf7[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Mar 10 15:09:57 2022 +0100

    ssl: first pass limit when allocating buffer for certificates
    
    With this check, on the first packet of a certificate presenting
    a length of 16Mbytes, we only allocate up to 65Kb
    
    When we get to the point where need more than 65Kb, we realloc
    to the true size.
    
    With this check, it makes it more expensive for an attacket to use
    this allocation as a way to trigger ressource exhaustion...

[33mcommit 99b3443369703ba69d962019edeca8f1c7c7896e[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Feb 22 13:10:59 2022 +0100

    smtp: check if there is a transaction to close
    
    Ticket: 4948
    
    When parsing the response for starttls

[33mcommit 68fa0800692a224cafd2ecd72f79b24ef820c2f5[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Mar 15 20:59:28 2022 +0100

    tmqh: fix possible null dereference
    
    Coverity ID: 1502953
    
    As we check just on the next line my_pool against NULL, we should
    not dereference it, even for debug validation

[33mcommit 568ab841d87b9e8bd6b3102cb68478366e403a50[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Mar 15 20:55:09 2022 +0100

    detect: remove dead code about xbits keyword

[33mcommit 4640b15d8cc57487d61bb922049aa60f4137e904[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Mar 10 15:26:48 2022 +0100

    log: prevents use of uninitialized variable
    
    Even if the code seems unreachable for now

[33mcommit 8d1e4a1d0b481b289bcbae619693c4c442e937e1[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Mar 22 09:46:45 2022 -0600

    detect-content: error on single char hex pairs
    
    Fix parsing of content like "|aa b cc|" which was parsed as "|aa bc|"
    without error or warning. This will now fail out, requiring all hex
    values to be 2 chars.
    
    Ticket #5201

[33mcommit 6e90bf47397f0847518c3cc0921320f7684b289d[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sun Mar 20 16:14:10 2022 +0100

    streaming: remove unused 'auto slide' support
    
    Add debug validation checks for "impossible" conditions.

[33mcommit 00da0d3420fd6ebbdbe7990b26eebf7650856eca[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Mar 8 12:50:16 2022 +0100

    detect: makes config keyword really require a flow
    
    Ticket: 4972
    
    Completes commit c3a220647
    
    DETECT_CONFIG is added as DETECT_SM_LIST_POSTMATCH and not
    as DETECT_SM_LIST_MATCH as other keywords handled in SignatureCreateMask

[33mcommit 54bc43d3edd130bf08fd052670fd826a86f2bcdb[m
Author: Modupe Falodun <falodunmodupeola@gmail.com>
Date:   Fri Mar 4 14:10:54 2022 +0100

    detect-pcre: remove unittests
    
    These tests are reimplemented in Suricata-Verify
    
    Task: 4911

[33mcommit 3a490fb16c939a2c23c5625d6757850391844433[m
Author: Sam Muhammed <ghostinthehive.vx@gmail.com>
Date:   Wed Feb 23 14:15:00 2022 +0200

    nfs: Implement frames
    
    Feature #4872
    
    Frames:
      - RPC Frames: Generic over TCP/UDP
         - rpc.pdu
         - rpc.hdr
         - rpc.data
         - rpc.creds -- for rpc calls
    
      - NFSv2, NFSv3
         - nfs.pdu
         - nfs.status -- for nfs responses
    
      - NFSv4 Only Frames
         - nfs4.pdu
         - nfs4.hdr
         - nfs4.ops -- for compound request/response operations
         - nfs4.status -- for nfs4 responses
    
    RPC tcp/udp frames created with separate registeration functions e.g:
    add_rpc_tcp_tc_frames()
    add_rpc_udp_tc_frames()

[33mcommit d090dcbce925bae00ea87646baa7c77cffffcf12[m
Author: Sam Muhammed <ghostinthehive.vx@gmail.com>
Date:   Mon Feb 28 13:44:45 2022 +0200

    rpc: Improve rpc_record struct
    
    Add creds_len field to rpc_record
    needed for rpc.creds frame length calculation

[33mcommit 8064a5348d38c8b86c85ed7f6b3d338dc9535d51[m
Author: Sam Muhammed <ghostinthehive.vx@gmail.com>
Date:   Sun Feb 20 19:46:03 2022 +0200

    rust/nfs4: Add NFSPROC4_DESTROY_CLIENTID op parsers

[33mcommit 9d1fad28a72ef7da096bc947d232a92e1087f952[m
Author: Sam Muhammed <ghostinthehive.vx@gmail.com>
Date:   Sun Feb 20 19:25:02 2022 +0200

    rust/nfs4: Add NFSPROC4_DESTROY_SESSION op parsers
    
    Also add respective request unittest
    test_nfs4_request_destroy_session()

[33mcommit ff81cad4f1547d1a69292649c25e84aaef87c857[m
Author: Sam Muhammed <ghostinthehive.vx@gmail.com>
Date:   Sun Feb 20 19:10:41 2022 +0200

    rust/nfs4: Add NFSPROC4_LAYOUTRETURN op parsers
    
    Also add respective request unittest
    test_nfs4_request_layoutreturn()

[33mcommit 073244a0b8b634c0b69e233e97d82de9b8a91808[m
Author: Sam Muhammed <ghostinthehive.vx@gmail.com>
Date:   Sun Feb 20 18:40:11 2022 +0200

    rust/nfs4: Add NFSPROC4_GETDEVINFO op parsers
    
    Also add respective response/request unittests
    test_nfs4_response_getdevinfo()
    test_nfs4_request_getdevinfo()

[33mcommit ff54a6d9d5795f7a249eb77ca32c5b3b7afc163e[m
Author: Sam Muhammed <ghostinthehive.vx@gmail.com>
Date:   Sun Feb 20 17:45:14 2022 +0200

    rust/nfs4: Add NFSPROC4_LAYOUTGET op parsers
    
    Also add respective response/request unittests
    test_nfs4_response_layoutget()
    test_nfs4_request_layoutget()

[33mcommit 3d542fcc677f031996151c286b5dad82b43ab264[m
Author: Sam Muhammed <ghostinthehive.vx@gmail.com>
Date:   Sun Feb 20 14:47:08 2022 +0200

    rust/nfs4: Add NFSPROC4_SECINFO_NO_NAME op parsers

[33mcommit b35d635ac723108f1611e0e63a8b17d40cd6fbf6[m
Author: Sam Muhammed <ghostinthehive.vx@gmail.com>
Date:   Sun Feb 20 14:27:17 2022 +0200

    rust/nfs4: Add NFSPROC4_RECLAIM_COMPLETE op parsers

[33mcommit 2a41b46ecac13ab2d5bf78b699748adecd0fdf57[m
Author: Sam Muhammed <ghostinthehive.vx@gmail.com>
Date:   Sun Feb 20 14:15:29 2022 +0200

    rust/nfs4: Add NFSPROC4_CREATE_SESSION op parsers
    
    Also add respective response/request unittests
    test_nfs4_request_create_session()
    test_nfs4_response_create_session()

[33mcommit 0a69c661532b376ef424053856b194447471fdb5[m
Author: Sam Muhammed <ghostinthehive.vx@gmail.com>
Date:   Sun Feb 20 13:28:12 2022 +0200

    rust/nfs4: Add NFSPROC4_EXCHANGEID response parser
    
    Also add test_nfs4_response_exchangeid() unittest

[33mcommit fe7a49b7378618721bf27c616d0cb9bd1fcf386b[m
Author: Sam Muhammed <ghostinthehive.vx@gmail.com>
Date:   Sun Feb 20 12:33:44 2022 +0200

    rust/nfs4: improve NFSPROC4_OPEN op parser
    
    Improve nfs4_res_open() parser to reflect other file-delegation types
    Reflect the changes on test_nfs4_response_open() unittest

[33mcommit df83f7899d7459c9e2c97e8d7860896e9861a123[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Jan 18 10:50:46 2022 +0100

    fuzz: fix integer warnings
    
    Ticket: 4516

[33mcommit 5790280c9535dd9aee450389f73d101be0973ab0[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Jan 18 10:43:56 2022 +0100

    utils: fix integer warnings in r files
    
    Ticket: 4516

[33mcommit dca76a45a8a9d163f8473ec6193c0e64c5d4b9b2[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Jan 17 22:37:21 2022 +0100

    stream-tcp: fix integer warnings
    
    Ticket: 4516

[33mcommit 068fb700dfacc2fae39b1ca0f58feb00a84dabcc[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Jan 17 22:22:49 2022 +0100

    util: fix int warnings in tm threads
    
    Ticket: 4516

[33mcommit 1bb51d114c1f252cfb275f214407232d4c6e49f8[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Jan 14 13:15:57 2022 +0100

    util: fix int warnings in unit tests
    
    Ticket: 4516

[33mcommit b3ab126394f4f74778fc20a1335ed2a22a486723[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Jan 14 10:05:54 2022 +0100

    util: fix int warnings
    
    Ticket: 4516

[33mcommit 1e653249400ec6217af6d3f153f774ec133d5357[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Feb 28 15:12:37 2022 -0600

    smb: rules for messages in the wrong direction

[33mcommit 2341f47755c616f9ee3249cd28372eab45889e0d[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Feb 17 22:57:30 2022 -0600

    smb: handle records in the wrong direction
    
    If an SMB record is seen in the wrong direction, set an event on the PDU
    frame and don't process the record in the state.
    
    No error is returned, so the next record will be processed.

[33mcommit 09e2d3b216218eaed471b3ddb496873223744cf8[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Feb 18 11:43:17 2022 -0600

    smb: expose smb1 request/reply flags with a method
    
    Adds `.is_request()` and `.is_reply()` to check if a SMB record flags
    say the message is a request or a reply.

[33mcommit 7b659489c85eaed4921ed9c4b97ecf827560376e[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Feb 17 16:52:44 2022 -0600

    smb: fix smb2 header flag parsing
    
    The bits were being parsed in the order they're displayed in Wireshark,
    rather than the order they were being seen on the wire, resulting in
    direction and async being 0 more often than they should be.
    
    Instead of bits, take the 4 bytes as an le_u32 and just use bit masks to
    extract what we need into a struct, I think its easier to reason about
    this way when comparing to the Microsoft documentation.

[33mcommit c3a220647b31b453b0fc14ecfb028defad2778dc[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Jan 17 14:47:48 2022 +0100

    detect: only apply ConfigApplyTx with app-layers
    
    Ticket: 4972
    
    Otherwise, it makes no sense to look for a tx...

[33mcommit e5838b8193c722b85e30edd108df7643b8abdd07[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Thu Feb 24 16:04:36 2022 +0000

    applayer/frame: remove output from GetFrame funcs
    
    As these functions can be probed, having output there results in
    misleading output.

[33mcommit 44208010dbb56a20ebca05dd68e997f5da22430e[m
Author: Modupe Falodun <falodunmodupeola@gmail.com>
Date:   Mon Feb 21 16:43:04 2022 +0100

    detect-dce-iface: remove unittests
    
    These tests are reimplemented in Suricata Verify
    
    Task: 4911

[33mcommit 935ea745f5e38b49713ae77d86b57ce7260917a4[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Mar 1 12:44:01 2022 +0100

    detect/iponly: add tests for 5168

[33mcommit 053b2b3b5b1197064bba5d59d4731c5789ff7239[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Mar 1 12:43:25 2022 +0100

    detect/address: minor unittest cleanup

[33mcommit 79b7b7a0ddfdcd7664ca328a41d24fbca75e3e54[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Mar 1 12:42:49 2022 +0100

    detect/iponly: validate netmask
    
    Only accept netmask in dotted quad notation if they can be turned
    into a CIDR.
    
    According to rfc 4632, CIDR (compat) netmasks are all that should be
    used.
    
    Bug: #5168.

[33mcommit 259bd8aa92c7bc8ca8c74b3f429f321935493828[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Mar 1 12:41:04 2022 +0100

    detect/address: validate netmasks
    
    Only accept netmask in dotted quad notation if they can be turned
    into a CIDR.
    
    According to rfc 4632, CIDR (compat) netmasks are all that should be
    used.
    
    Bug: #5168.

[33mcommit 4020e2faa7ee93dfed663b4b0795644572ddfd79[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Feb 28 22:31:58 2022 +0100

    detect/iponly: break out range insert code
    
    So we can reuse it.

[33mcommit a67b97e14c08f46f50c1acd989f0dc049a8e4cba[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Mar 1 12:41:49 2022 +0100

    util/cidr: add util to convert netmask to cidr

[33mcommit eb189e805ad38ed600f280f13bcd5963ac7cf88d[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Feb 28 08:32:42 2022 +0100

    src: use u8_tolower everywhere
    
    Ticket: 4516
    
    Instead of basic to_lower to get the cast to avoid warning
    about integer
    
    Sames goes for u8_toupper

[33mcommit 3fd8e908f83602ce4c025f9f14536b90bd91f599[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Feb 28 11:21:28 2022 +0100

    range: better closing for out of order ranges
    
    Ticket: 5132
    
    In case of a duplicate range, we can return early, because
    there is no new data to process.
    
    More importantly, this commit adds a check about wether the file
    got closed meanwhile, so that this just completed out of order
    range, even if it brings new data, is now irrelevant.
    This can happen for instance if there was a gap...

[33mcommit bfcd6cb46a2163f00479620a3dc3ec48f9de4fa0[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Feb 28 11:19:49 2022 +0100

    range: validity check when end is bigger than size
    
    Ticket: 5132
    
    Down the line, HttpRangeOpenFileAux assumes the range has a
    valid value when doing buflen = end - start + 1;

[33mcommit 14b21de306a29399f1adbbfb01053f0ac70f4cc5[m
Author: Modupe Falodun <falodunmodupeola@gmail.com>
Date:   Mon Feb 28 09:55:42 2022 +0100

    detect-dnp3: remove dnp3_data unittests
    
    These tests are reimplemented in Suricata-Verify
    
    Task: 4911

[33mcommit ae6c416972cad64c6a5e3bb5058633bc55e0640b[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Feb 28 08:56:07 2022 +0100

    util/mime: fix integer warnings
    
    Ticket: 4516

[33mcommit ec01a94a5f253d7bcc65ef22e34b8f7f8f73d160[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Feb 24 22:01:32 2022 +0100

    detect: minor debug fixup

[33mcommit b7526bf4e62ff82a17d0449c103608b2d6d47d25[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Feb 23 20:58:57 2022 +0100

    decode/vntag: don't leak memory in tests

[33mcommit 0437ca61ff81e3597a00e1e11311f4e9dc7182a5[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Feb 23 13:41:42 2022 +0100

    unittests: clean up packet clear logic

[33mcommit f07d5b2d89ed27d075e9f9328fd678d6ea701889[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Feb 23 13:40:59 2022 +0100

    decode: release refs from PacketFree
    
    Mostly helps unittests.

[33mcommit 49a36bb323d44a3ef453f284c35780523c9d3bd7[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Feb 23 11:08:45 2022 +0100

    detect/iprep: fix host locking issues
    
    Separate the code paths between reusing a Packet stored host reference
    and fetching a new reference from the host hash.
    
    This addresses the issue where in some conditions use_cnt could get
    desync'd.
    
    Bug: #2802.

[33mcommit 172d2b28a58d923ddbc5644dd3bfb52e353b8a55[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Feb 23 11:05:40 2022 +0100

    iprep: unify free handling
    
    Introduce a new util function to free a Hosts iprep code. It also
    handles the Host use_cnt decrement.
    
    This change makes sure we also decrement the use_cnt when cleaning
    up when shutting down the host table.
    
    Move the BUG_ON check for use_cnt into the HostClearMemory() func
    to check it in more cases.

[33mcommit a6a6f6d538c72cc5866fae6ea301b54cbc969a62[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Oct 7 16:39:42 2021 +0200

    bytejump: fix ubsan warning
    
    Instead of checking the offset, we checked the pointer after
    adding the offset ot it...

[33mcommit 4f2f745bed4858c6441b1b936f66453e87b715bb[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Feb 12 09:46:29 2022 -0500

    detect/ipproto: Use builtin protocol table
    
    Issue 5072
    
    This commit causes the built-in protocol table to be used for protocol
    name and number validation.

[33mcommit 3bd1d258a98c7e6f6fa45feb111f3297f1a527e7[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Feb 17 11:06:16 2022 -0500

    detect/tests: Register protoname tests
    
    Issue: 5072
    
    This commit registers the proto-name unit tests.

[33mcommit b52496725771c0a4bc98e1fe5c246bca77e8da03[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Feb 17 11:05:22 2022 -0500

    detect/ipproto: Add init/release functions
    
    Issue: 5072
    
    This commit insures that the protocol name hashtables are initialized
    and released.

[33mcommit ff0cf89738d7b947a3d7d8d0c6c5dc7adb95e6af[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Feb 12 09:44:13 2022 -0500

    util/proto: Protocol-name functions
    
    Issue: 5072
    
    This commit adds utility functions handling protocol names.

[33mcommit 1e2883602b8d95d96fa9c31e5ebbcb68ceeaa14a[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Feb 18 07:41:13 2022 -0500

    error/hash: Add error code for hash add failures
    
    Issue: 5072

[33mcommit d4144c04cdcadaf5829709784fb16dd1d872327f[m
Author: Andreas Dolp <dev@andreas-dolp.de>
Date:   Fri Feb 4 19:49:23 2022 +0100

    Doc: Fix typo in documentation of suricata.yaml.

[33mcommit d38e294a434a43fd6757dc974ee29c5eecc450e0[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Fri Feb 18 14:24:25 2022 +0000

    build-info: add info about fuzztargets
    
    We were missing that information from the Development information

[33mcommit 015c9fe1e3aebd2a2f01b91d4e5f81d977bbdd9d[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Sat Feb 19 12:03:10 2022 +0530

    doc: add usage of flowbits OR op
    
    Ticket 5130

[33mcommit 6c616d84b18dbc518c4107f0fe6c7386a3d4e5f2[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Fri Feb 18 19:21:23 2022 +0000

    devguide: clarify style guide for getframe funcs
    
    As the GetFrameIdByName can be probed, we must warn developers not to
    leave any output in them, or misleading messages could be printed.
    
    Task #5129

[33mcommit 6232c94235a60f2f89d444dfd5a9e20efc0a5a60[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Feb 11 09:02:39 2022 -0500

    threads: Honor per-thread stack size setting
    
    Issue: 4550
    
    This commit adjusts the per-thread stack size if a size has been
    configured. If the setting has not been configured, the default
    per-thread stack size provided by the runtime mechanisms are used.

[33mcommit e4d60f451b8a226e32a3df8e232efe437b11e2e3[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Feb 11 08:36:28 2022 -0500

    config/thread: Use config'd per-thread stack size
    
    Issue: 4550
    
    This commit checks if there's a config setting for threading.stack-size
    and assigns the value to a global variable for use during thread
    creation.

[33mcommit d79a317cea900e60166068c4d6703caab7218509[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Feb 11 08:35:36 2022 -0500

    suricata.yaml: Add per-thread stack size setting
    
    Issue: 4550

[33mcommit deb49862cd6734ccb15c1cc91e430c8ee01292aa[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Feb 15 10:50:33 2022 -0500

    config/debug: Debug probe for getattr_np
    
    This commit adds a probe for a non-portable function to be used in
    diagnostic debug display of a thread's stack size.

[33mcommit 117e11b0ae0c64d8c8b61d3d343957be3b9eb128[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Feb 11 08:34:12 2022 -0500

    doc: Describe per-thread stack size config setting
    
    Issue: 4550
    
    This commit documents the new per-thread stack-size setting. Some
    systems have a small default value that is not suitable for Suricata's
    multi-threaded architecture and adjustment may be required.

[33mcommit 07b110071331f5023a70710a90f50b9a500a518b[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Feb 21 18:10:44 2022 +0100

    nfs: clean up partial record handling
    
    There should be no remaining data after parsing the partial
    RPC record, so don't handle it but instead add a debug validation
    bug on.
    
    Successful processing for NFSv3 read/write records returns
    AppLayerResult::ok() directly as all data is consumed.

[33mcommit d85b77cad064bd88c921b2f3d520fe526ad8ff82[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Feb 21 20:30:45 2022 +0100

    nfs3: improve read validation; fix partial handling

[33mcommit 4418fc1b02f47533439fe00789d9c850a24271b2[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Feb 21 20:30:35 2022 +0100

    nfs3: fix partial write record handling

[33mcommit 5baf94e40ddeb3deab97a897b9da2e93ece4c654[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sun Feb 20 23:02:13 2022 +0100

    nfs3: enforce more values
    
    Enforce values of a number of u32's that are used as bools or for
    really low values.

[33mcommit 1c57e3c18d746743bc2cbcaba35f78b5f9b15675[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Feb 21 10:08:41 2022 +0100

    rpc: enforce various field values
    
    Minimal frag_len. Correct msgtype and others.

[33mcommit 64d8a1e16e07148a8b5839452be3f7481e4e3623[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sun Feb 20 10:00:48 2022 +0100

    nfs/rpc: update full record parsers to be more exact
    
    Instead of 'take'ing all data for the RPC prog_data and then
    letting the higher level parsers figure out which part to use
    take the exact amount.

[33mcommit bfb5ae867e083f4146b2455309387f77fac5623c[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sun Feb 20 08:59:05 2022 +0100

    nfs: break out partial record handling

[33mcommit fe76ab1803bea02f47f691b5944ba319a3bc0300[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sat Feb 19 08:42:35 2022 +0100

    nfs/rpc: enforce length field limits
    
    Limits based on the Linux kernel limits. Then multiplied a few times
    to allow for other implementations to have higher limits.

[33mcommit 5ecb626e50048cfa43ad67cdd80307377e90926c[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Feb 21 12:20:13 2022 +0100

    nfs4: verify bool fields

[33mcommit a0c0471f1f51af0171ed5df1e2de0b900651bc19[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Feb 18 10:19:04 2022 +0100

    output: fix timestamp missing usecs
    
    On ARM 32bit with Musl `tv_usecs` is defined as `int64_t` which lead to
    CreateIsoTimeString() printing all zeros on the usecs. Work around this
    by first assigning to a `int64_t` and then updating the expected format
    string to accept `int64_t`.
    
    Bug: #5094.

[33mcommit b1c09369af40bb2b65825d25094d37b3515da1bb[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Feb 17 07:23:38 2022 -0600

    rust/derive: pin proc-macro-crate to v1.1.0.
    
    The just released proc-macro-crate v1.1.2 requires at least Rust 1.53.
    Pin to the previous release for now.

[33mcommit b8f767d84c2fee4a12a124ba0cf0cdc2addcdb1c[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Wed Jan 19 11:58:49 2022 +0100

    rust/mime: convert parser to nom7

[33mcommit 8a73b242e389a5dbc223de83e2e7542bc46903d8[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Feb 17 16:53:43 2022 +0100

    detect/address: use common cidr code

[33mcommit 38aec1439c7fffc49144ae5ccb38da2d462c85d9[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Feb 17 13:35:45 2022 +0100

    radix: fix unittests after stict checks

[33mcommit 7fd6fe732b360d4f1de4483b539af2eda813b966[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Feb 17 13:32:17 2022 +0100

    radix: improve address range handling
    
    Handle non-exact address ranges from string. This can come directly
    from user input, so here it is accepted but the address is converted
    to the address range start. A warning will be issued.
    
    Debug validation checks are added to catch this.
    
    This issue could lead to bad input from iprep (with cidr), defrag config
    and htp server personalities to produce a bad radix tree.
    
    Bug: #5084.
    Bug: #5085.
    Bug: #5086.

[33mcommit 51d4e0dced9cac7463ee924b00bc8666c68b20c3[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Feb 15 20:43:27 2022 +0100

    detect/iponly: fix netmask handling
    
    If the ipaddress was not the address range start, it was not masked to turn
    it into that. So 1.2.3.4/24 was not stored as address 1.2.3.0 with netmask 24,
    but as 1.2.3.4 with netmask 24. This was then propagated into the radix tree,
    where it was used as an exact key in exact lookups, giving unexpected results.
    
    This patch implements the netmask handling for IPv4 and IPv6, and adds a set
    of tests for it.
    
    Bug: #5081.
    Bug: #5066.

[33mcommit 311085dd34c445b8d9195c8517475b764a61eb3b[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Feb 15 14:44:08 2022 +0100

    radix: fix unittest not cleaning up

[33mcommit 860daceb04301850bc059e73c7344cb843248bf9[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sat Feb 12 08:23:03 2022 +0100

    detect/iponly: update SigNumArray comment

[33mcommit d04dface20657e781f683c30f159afcefa5ac1ea[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Feb 11 15:53:41 2022 +0100

    radix: cleanup test

[33mcommit 89b7ac0a60bf83c69bbd9f4f45be128524ff3999[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Feb 11 15:52:51 2022 +0100

    radix: add tests for Bug #5066
    
    Bug: #5066.

[33mcommit 6aa6e3f95372e256006b78e921391d88c1010f15[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Feb 11 15:50:01 2022 +0100

    radix: fix FP/FN issue in IP-only
    
    A bug was reported about the IP-only rules not correctly matching. This was
    traced to the rules in question not getting recorded into the IP-only radix
    tree correctly.
    
    Sequence:
    
    - 100.117.241.0/25 inserted into the tree
    
    - 100.117.241.0/26 inserted into the tree
    
    Both are part of the same radix node, but recorded by their different netmasks
    in the user data portion.
    
    Then faulty insert happens:
    
    - 100.117.241.64/26
    
    For reference, these net blocks compute to:
    
    - 100.117.241.0/25:  100.117.241.0  - 100.117.241.127
    - 100.117.241.0/26:  100.117.241.0  - 100.117.241.63
    - 100.117.241.64/26: 100.117.241.64 - 100.117.241.127
    
    The IP-only engine first does a search to get to the user data it may need to
    include. It does so for with `SCRadixFindKeyIPV4ExactMatch` for single IPs, or
    using `SCRadixFindKeyIPV4Netblock` in case of a netblock. Any "match" from
    either of these is considered an "exact match" by the IP-only setup code.
    
    This exact match expectation turned out to be wrong and
    `SCRadixFindKeyIPV4Netblock` behaved more like "best match" instead, which is
    a non-exact match, but its the next best match if no exact match is found.
    
    The way the look up for 100.117.241.64/26 went wrong, is that it returned
    the user data for 100.117.241.0/26. This happens as follows:
    
    - first it would do an exact find, which didn't give a result
    
    - then it removed bits from the keystream until it found a matching node
      and explore if any of the netmasks it contained matched. Here the first
      step of the bug started:
    
      it considered the netmask (with user data) a match that matched the
      number of bits of the matching key, but not of the actual range netmask cidr
      value.
    
      So in this case the number of shared bits between `100.117.241.0/25` and
      `100.117.241.64/26` was 25, so it assumed that the user data for the
      netmask 25 was the match.
    
      To summarize this step, there are 2 problems with this:
      1. it returns a match on something that isn't an exact match
      2. it considered the wrong netmask value
    
    - the radix code then took the returned node, and did the netmask check
      again. This time it did use its own netmask value, so this time
      it did find the netmask 26 (+ user data). However because of the node that
      was returned, this netmask (+user data) belongs to `100.117.241.0`, not to
      `100.117.241.64`.
    
    - the IP-only detection code was satisfied with what it assumed to be
      "exact match" and just updated the user data to include the user data that
      should have been associated with `100.117.241.64/26` to `100.117.241.0/26`.
    
    This patch addresses the issue as follows:
    
    It makes `SCRadixFindKeyIPV4Netblock` also return an exact match by propagating
    the netmask in the search and in the evaluation of the stored netmasks.
    
    It does away with the secondary netmask (+user data) evaluation.
    `SCRadixFindKeyIPV4Netblock` is expected to handle this correctly.
    
    The IP-only engine will fall back to the "not found" path, which does an explicit
    "best match" lookup and then insert a new entry into the radix tree based on
    the user data of the "best match".
    
    Issue was present for IPv6 as well.
    
    Bug: #5066.

[33mcommit 6381b1a643bb9cc4ea8860def42b633a70c35e3e[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Feb 10 09:04:23 2022 +0100

    detect/iponly: cleanups

[33mcommit de4354abcbbce376bc3047311561d0fbf16e4569[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Feb 10 08:50:07 2022 +0100

    detect/iponly: minor debug 'Print' improvements

[33mcommit 3ca3c9dfbee112cc061ee0f3f7bbd5bde92a849d[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Feb 10 08:49:17 2022 +0100

    radix: minor debug 'Print' improvements

[33mcommit e04d378e587d99fa40e1b237c0ef4db5cfde1902[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Feb 17 10:56:53 2022 +0100

    util/cidr: simplify IPv4 CIDR handling; add IPv6
    
    Instead of building a table at init just calculate it on demand.
    
    Callsites are all during init, so its not performance critical.
    
    Add similar function for IPv6.

[33mcommit e04fcfcf2f737736468cfa829061eb88991376ef[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Feb 16 07:47:41 2022 +0100

    doc/userguide: minor rewording and reformatting for runmodes

[33mcommit 28b5f4a55557eb30fa71a908dec1bd8a0e5633fa[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Tue Sep 21 22:26:26 2021 +0100

    devguide: add page about app-layer frame support
    
    This explains the frame support from the perspective of a developer,
    with introductory explanation on how to add frame support to an
    applayer proto.
    
    Doc #4697

[33mcommit e0b9f0e175137fc7b943dbb5afcc7233d83658c8[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Wed Feb 9 18:12:11 2022 +0000

    http: add comment tags to support documentation
    
    With these, the portion of code within the tags should be included
    in the related code-snippets (for frame support documentation) w/o
    errors, even if the code within changes. The tags can also work as
    a reminder that the existing code is being shown elsewhere, so folks
    know documentation might need updates, in case of major changes.

[33mcommit 5a7645fac1fd3d6fee8c81bfac5434c4f6b2694e[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Wed Feb 9 17:26:25 2022 +0000

    rust: add comment tags to support documentation
    
    With these, the portion of code within the tags should be included
    in the related code-snippets (for frame support documentation) w/o
    errors, even if the code within changes. The tags can also work as
    a reminder that the existing code is being shown elsewhere, so folks
    know documentation might need updates, in case of major changes.

[33mcommit e0dd1820c2b547669fbd37b40344a205c7da5e05[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Tue Feb 15 16:14:50 2022 +0000

    sip: apply rustfmt to a few functions
    
    Our current rust code isn't always documentation friendly when it
    comes to using code snippets. Used rustfmt to apply rust default
    formatting on functions that we wanted to show in our documentation
    for Frame support

[33mcommit 71cbd2bf0ed99e629caf69103af14311b89b0f63[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Wed Feb 9 13:29:45 2022 +0000

    telnet: apply rustfmt to parse_request
    
    When we want to share our code in our documentation pages, the current
    rust formatting isn't so nice to read. Formatted just the portion of
    the code that will be shown, for now.

[33mcommit 8adf172ab896f54ddb97ef7faac444f9db7ea2ae[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Feb 3 21:55:09 2022 +0100

    nfs: limits the number of active transactions per flow
    
    Ticket: 4530

[33mcommit 0e85dea3ffb6ce6cfeca95dde3fd25a5cb8d67e7[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Feb 15 18:00:01 2022 +0100

    nfs: remove unused events variable

[33mcommit e4f2f8f78dbe49fbd6c89706868c294b9a7b51d7[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Feb 3 21:58:51 2022 +0100

    nfs: derive AppLayerEvent for NFSEvent

[33mcommit 5fe9188a95b67caf71c299d6204bb2de6b06a790[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Jan 6 15:51:00 2022 +0100

    fuzz: test for too many open txs in a flow
    
    so as to avoid performance problems coming from this.

[33mcommit e1f7c63fa8ed9ee787f89776162ca221573ef227[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Feb 15 07:56:57 2022 +0100

    swf: fix coverity warnings
    
    *** CID 1499365:    (UNINIT)
    /src/util-file-swf-decompression.c: 98 in FileSwfZlibDecompression()
    92         infstream.avail_in = (uInt)compressed_data_len;
    93         infstream.next_in = (Bytef *)compressed_data;
    94         infstream.avail_out = (uInt)decompressed_data_len;
    95         infstream.next_out = (Bytef *)decompressed_data;
    96
    97         inflateInit(&infstream);
    
    >>>     CID 1499365:    (UNINIT)
    >>>     Using uninitialized value "infstream.total_out" when calling "inflate".
    98         int result = inflate(&infstream, Z_NO_FLUSH);
    99         switch(result) {
    100             case Z_STREAM_END:
    101                 break;
    102             case Z_OK:
    103                 break;
    
    /src/util-file-swf-decompression.c: 98 in FileSwfZlibDecompression()
    92         infstream.avail_in = (uInt)compressed_data_len;
    93         infstream.next_in = (Bytef *)compressed_data;
    94         infstream.avail_out = (uInt)decompressed_data_len;
    95         infstream.next_out = (Bytef *)decompressed_data;
    96
    97         inflateInit(&infstream);
    
    >>>     CID 1499365:    (UNINIT)
    >>>     Using uninitialized value "infstream.total_out" when calling "inflate".
    98         int result = inflate(&infstream, Z_NO_FLUSH);
    99         switch(result) {
    100             case Z_STREAM_END:
    101                 break;
    102             case Z_OK:
    103                 break;
    
    *** CID 1499363:  Error handling issues  (CHECKED_RETURN)
    /src/util-file-swf-decompression.c: 97 in FileSwfZlibDecompression()
    91
    92         infstream.avail_in = (uInt)compressed_data_len;
    93         infstream.next_in = (Bytef *)compressed_data;
    94         infstream.avail_out = (uInt)decompressed_data_len;
    95         infstream.next_out = (Bytef *)decompressed_data;
    96
    >>>     CID 1499363:  Error handling issues  (CHECKED_RETURN)
    >>>     Calling "inflateInit_(&infstream, "1.2.11", 112)" without checking return value. This library function may fail and return an error code.
    97         inflateInit(&infstream);
    98         int result = inflate(&infstream, Z_NO_FLUSH);
    99         switch(result) {
    100             case Z_STREAM_END:
    101                 break;
    102             case Z_OK:
    
    Bug: #5079.

[33mcommit 4312676aed92b4f22abea16ecd13da9f49d79107[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Feb 15 07:42:08 2022 +0100

    dnp3/eve: regenerate object logging code
    
    To propagate jb_set_string_from_bytes() generator update.
    
    Bug: #5080.

[33mcommit 08346cb239c7932209940b0d1f281f79b9008f19[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Feb 15 07:37:02 2022 +0100

    dnp3: update gen script to use jb_set_string_from_bytes
    
    Bug: #5080.

[33mcommit 2ebb525f7e3290549c77c9b131db4e7400cd3c39[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Feb 11 09:26:06 2022 -0600

    build: remove configure check for cargo vendor
    
    cargo vendor has been part of the core cargo command since Rust 1.37,
    and are minimum Rust version is not 1.41, so remove the check. Its
    always available now.

[33mcommit 62cc813f881c9b889298d02749b5665be7cfff1f[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Feb 11 09:13:31 2022 -0600

    rust/make: fix maintainer-clean-local target
    
    Was using the wrong name, so vendored Rust crates were not being
    cleaned up on make maintainer-clean.

[33mcommit 8dc3431d86ff098621873b46edd2125dd76e328b[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Wed Jan 19 11:41:52 2022 +0100

    rust/dcerpc: convert parser to nom7 functions

[33mcommit a3443845fbaf5c01bb8758817490bc93b5c039a5[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Feb 11 10:38:45 2022 -0500

    log/stack: Propagate original signal
    
    Issue: 4550
    
    This commit modifies the "stack trace on signal" to propagate the
    original signal received instead of always raising SIGABRT.

[33mcommit b5166bdb9396a7e7b878fea9bd62a11080aafa58[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Wed Jan 12 10:50:42 2022 +0100

    rust/ntp: upgrade dependency on ntp-parser

[33mcommit 251b52ab07800207ab2882040754dc878eefd433[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Feb 10 12:46:31 2022 +0100

    github: bump MSRV and minimum known version

[33mcommit c1be27cb4548dd920ce386f53b427d6a1d976b03[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Feb 10 12:41:55 2022 +0100

    github: remove xenial build

[33mcommit fa63945bdcc2bb0876d3f0e825ed8c9930eb830e[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Wed Jan 12 14:12:26 2022 +0100

    rust/ike: convert parser to nom7 functions and upgrade dependency

[33mcommit 3493537ec3db0a2cae5aeeab7fffd0552ffce231[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Wed Jan 19 11:16:40 2022 +0100

    rust/rfb: convert parser to nom7 functions

[33mcommit 377ce6b679171b3bfaac100899ae9192ff573300[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Feb 9 15:33:48 2022 +0100

    codecov: fix informational; disable github annotations

[33mcommit 84d91e2e0d6f46448e441707fdee0d473380aee2[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Feb 9 08:31:01 2022 +0100

    app-layer: fix counter setup logic
    
    Completes 0ccf5b914766335425d262de7f69b959c527329c

[33mcommit 27cd54dc0d04bdbe5a4c626f4b977011bee9ce01[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Wed Feb 9 08:23:19 2022 +0100

    frames: address coverity issue
    
    Minor cleanups to assist coverity.
    
    Bug: #5065.

[33mcommit 786cf41599fba8fb8aad91eabd95bebd8d2b02bc[m
Author: Modupe Falodun <falodunmodupeola@gmail.com>
Date:   Mon Feb 7 22:50:37 2022 +0100

    detect-bytetest: remove unittests
    
    These tests are reimplemented as Suricata-Verify
    
    Task: 4911

[33mcommit da7eff61ccbc2110fd41fcaf99f0d715a7764568[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Feb 7 20:10:31 2022 +0100

    codecov: set to informational

[33mcommit d1071c151c28565f8c4e6482af5da820f74bee96[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Feb 1 17:19:38 2022 +0100

    ci: formatting errors are now fatal

[33mcommit 474e0e364471fed2b6765b2c105f143e8b1864ea[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sun Jan 23 08:07:24 2022 +0100

    sip: enable for 5061/udp

[33mcommit 12037503883a3f19f0c4f85832e2b664692bb43e[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Feb 8 09:52:35 2022 +0100

    sip: add frames support
    
    Frames:
    - sip.pdu
    - sip.request_line
    - sip.response_line
    - sip.request_headers
    - sip.response_headers
    - sip.request_body
    - sip.response_body
    
    The `sip.pdu` frame is always created, the rest only if the record
    parser succeeded.
    
    Ticket: #5036.

[33mcommit c96d22e8a10c9e0b392f75768ea1efd6d24298ad[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Jan 21 15:20:51 2022 +0100

    frames: support UDP frames
    
    UDP frames point to the UDP packet payloads.
    
    The frames are removed after each packet.
    
    Ticket: #4983.

[33mcommit 97ef60cd9ba956260fefaf08cfe6ad4e6b14747a[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sat Feb 5 17:32:15 2022 +0100

    output/file: remove 'waldo' code
    
    It was no longer used after "file-store v1" was removed.

[33mcommit f9c04992c3e4fbac67fd51b72cb22464692c7b12[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sat Feb 5 17:24:21 2022 +0100

    file/store: warning grammer fixup

[33mcommit b06bd1a1feab10453f4427e8e8eed7b5d2bd5f41[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 30 16:08:36 2021 +0200

    htp: rearrange tx user data for more efficiency

[33mcommit 39b1f1aca60c876c30e9941a608f2735e0dbcb0f[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sun Feb 6 13:56:35 2022 +0100

    output/lua: minor cleanups

[33mcommit e5fd0d4f76f27a73680199946876ddfd78151217[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sun Feb 6 13:54:09 2022 +0100

    output/streaming: use unique thread data name

[33mcommit b36683e04f175144ef580d270e3cbc4d62a1e0e8[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sun Feb 6 13:53:05 2022 +0100

    output/stats: use unique thread data name

[33mcommit 008f4aee69977fc3361db0c8df44a772ef2752fb[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sun Feb 6 13:51:57 2022 +0100

    output/packet: use unique thread data name

[33mcommit dd1dc88c652f98f1c092b068ece6b62f3d8572b5[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sun Feb 6 13:50:07 2022 +0100

    output/filedata: use unique thread data name

[33mcommit c7db9aa50d8a1c123e8a6825718b84b3a782e3c7[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sun Feb 6 13:45:58 2022 +0100

    output/file: use unique thread data name

[33mcommit 45f13b3d01e2fc4a586dc96ad973a4b438b7c44a[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sun Feb 6 13:42:36 2022 +0100

    output/tx: use unique thread data name

[33mcommit 0be99f3e3540133a7da750899778cd39fb057be4[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sun Feb 6 13:32:25 2022 +0100

    output: minor header cleanups

[33mcommit 645a04c233346fc4c5446cff661d3faa73b232b2[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sun Feb 6 08:06:39 2022 +0100

    output: declare OutputLoggerThreadStore once

[33mcommit 0ccf5b914766335425d262de7f69b959c527329c[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Feb 4 10:29:03 2022 +0100

    app-layer: fix error counter logic

[33mcommit b0cad24705621c167dcab2d12e96891b121c7e1e[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Feb 3 23:02:38 2022 +0100

    github: enable dependabot for Rust/cargo

[33mcommit cf5c58c075649aad72c98347c0fe62adebbdb432[m
Author: Modupe Falodun <falodunmodupeola@gmail.com>
Date:   Wed Feb 2 20:21:24 2022 +0100

    detect-uricontent: convert unittests to FAIL/PASS APIs

[33mcommit dc8908b2820112c157d87ae99aaf27a09ead3e8e[m
Author: Modupe Falodun <falodunmodupeola@gmail.com>
Date:   Wed Feb 2 19:52:49 2022 +0100

    detect-uricontent: remove unittests
    
    These tests are reimplemented as Suricata-verify
    
    Task: 4911

[33mcommit 26c9e6658630a34bfc701665010b9add072afc26[m
Author: Modupe Falodun <falodunmodupeola@gmail.com>
Date:   Tue Feb 1 23:24:05 2022 +0100

    detect-engine-enip: remove unittests
    
    These test is reimplemented in Suricata-Verify
    
    Task: 4911

[33mcommit 609a7eaab286e9287efb09d2dee5945e05701faf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 9 13:45:54 2021 +0100

    app-layer: error counters
    
    Per app-layer error counters for:
    gap, parser, internal (AppLayerResult issues), alloc

[33mcommit ae0b8d92da8b22fa0581c6a81373c9e0d71f7e08[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 11 13:28:44 2021 +0100

    flow/manager: remove dead code

[33mcommit 5618886aa966537c9583b996b42b21e7712c55fe[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Nov 25 08:23:24 2021 +0100

    stream: remove unused defines

[33mcommit 811b2cd3345f71d9f9466b365c7a484911e40082[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Feb 1 07:44:24 2022 +0100

    doc: refresh main README; more accurate CI description

[33mcommit d2dad66a2b0f26a8ccc25d137343c0e0c1ca3bfc[m
Author: Modupe Falodun <falodunmodupeola@gmail.com>
Date:   Mon Jan 31 22:53:27 2022 +0100

    detect-dce-opnum: remove unittests
    
    These tests are reimplemented in Suricata-Verify
    
    Task: 4911

[33mcommit b9a429e6ce11b6e140ce567d6eaeb5132524744f[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Jan 31 12:06:55 2022 -0600

    devguide: move image generation into sphinx setup
    
    While ReadTheDocs can't execute arbitrary scripts, we can install
    mscgen in the container that builds the docs (see .readthedocs.yaml).
    
    Then instead of calling generate-images.sh from the Makefile, move this
    into the setup function defined on conf.yaml, which will generate the
    scripts as part of a normal Sphinx workflow.
    
    This should give us an image generation solution that works on
    ReadTheDocs, and locally within anyones build system provided they have
    mscgen installed.

[33mcommit 4247605d874113ef13003816007e0575219d065e[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Jan 25 21:10:37 2022 +0100

    smtp: check if we have a current transaction
    
    Ticket: 4948
    
    This is not the perfect solution, but it prevents to trigger
    the assert, and keep the assert.
    A better solution would need to create transaction from
    the reponse parsing, in case a later command was buffered and
    not answered. But this would not be enough as NoNewTx prevents
    the creation of a new transaction for RSET...

[33mcommit 11d3af551bf64c0a85d2c69e2416a7712d5b3cbb[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Jan 13 16:05:46 2022 +0100

    doc: suricata.yaml fields about maximum transactions
    
    For HTTP2, MQTT and FTP.

[33mcommit 2ef41724377ed8c3f8da6ca7b217b98072834cd1[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Jan 13 15:51:04 2022 +0100

    ftp: limits the number of active transactions per flow
    
    Ticket: 4530
    
    As for HTTP2 and MQTT.
    In FTP case, transactions are pipelined, not identified by an id.
    So, there are less chances of DOS by quadratic complexity.

[33mcommit e42094f238aa388d05970993fd0de8194471fa60[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Jan 12 21:58:47 2022 +0100

    mqtt: make max transactions configurable
    
    Allows users to find balance between completeness of decoding
    and increases resource consumption, which can DOS suricata.

[33mcommit 4f90d4254e5a897ddbf4fb8c3c1fabefe20b977e[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Jan 6 16:04:17 2022 +0100

    http2: makes some settings configurable
    
    max-streams and max-table-size
    
    Allows users to find balance between completeness of decoding
    and increases resource consumption, which can DOS suricata.

[33mcommit a8079dc9787d77cf705aa47000b499a325be0716[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Dec 2 10:03:05 2021 +0100

    mqtt: limits the number of active transactions per flow
    
    Ticket: 4530
    
    So, that we do not get DOS by quadratic complexity, while
    looking for a new pkt_id over the ever growing list
    of active transactions

[33mcommit 5475212f21e13a93ae0b954fbaed906778c3dcda[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Dec 2 09:54:05 2021 +0100

    http2: limits the number of active transactions per flow
    
    Ticket: 4530
    
    So, that we do not get DOS by quadratic complexity, while
    looking for a new stream id over the ever growing list
    of active streams

[33mcommit b39554b11fe1b6f3d880c3d548287934880a3c2c[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Jun 17 15:02:30 2021 +0200

    fuzz: target for applayer cleans transactions
    
    Ticket: 4530
    
    Otherwise, we timeout because we kept too many of them
    as Suricata would not

[33mcommit a5d3a1f92caf1b8fe5db3614ecc898c0e48d34be[m
Author: Aaron Bungay <amb240h@gmail.com>
Date:   Mon Mar 1 02:41:13 2021 +0000

    src: use bool instead of int

[33mcommit 272786908cf130b7d84324af141dbad6b7695a58[m
Author: Aaron Bungay <amb240h@gmail.com>
Date:   Sun Apr 19 18:22:18 2020 -0400

    smtp/mime: configurable url scheme extraction
    
    Parse extract-url-schemes from the mime config.
    e.g. 'extract-urls-schemes: [http, https, ftp, mailto]'
    Update MimeDecConfig struct to new url extraction fields.
    Change app-layer-smtp.c & util-decode-mime.c to initialize new struct
    fields for MimeDecConfig.
    Sets the default value for extract-url-schemes if not found in the
    config to 'extract-urls-schemes: [http]' for backwards compatibility.
    
    Uses the schemes defined in the mime config value for
    extract-urls-schemes to search for URLS starting with those scheme
    names followed by "://".
    Logs the URLS with the scheme + '://' at the start if the
    log-url-scheme is set in the mime config, otherwise the old behaviour
    is reverted to and the urls are logged with the schemes stripped.
    
    Removed unused constant URL_STR now that URLS are being searched for
    using extract-urls-schemes mime config values instead of just URL's
    starting with 'http://'.
    
    Added commented out new options for extract-urls-schemes and
    log-url-scheme to suricata.yaml.in.
    
    Update FindUrlStrings comments.
    Remove old outdated comments/commented code from FindUrlStrings.
    Update test case for mime which now needs schemes list to be set.
    Add Test Cases for FindUrlStrings() method.
    
    Feature: #2054

[33mcommit 6c240938b51daadb6c869d2339c2e7cc29ebde68[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Jan 31 11:42:10 2022 +0100

    github-ci: replace failing CentOS 8 by AlmaLinux 8.4

[33mcommit b77d1d7d2ec3b6735eba772c2596ae2a5a3b0552[m
Author: Modupe Falodun <falodunmodupeola@gmail.com>
Date:   Sun Jan 30 15:06:09 2022 +0100

    detect-flowbits: remove unittests
    
    These tests are reimplemented in Suricata-Verify
    
    Task: 4911

[33mcommit f0e869b26b6e913714db03b85039a0af38094419[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Sun Jan 23 21:30:22 2022 +0100

    mqtt: parse properties with the right buffer's length

[33mcommit df2cbd6517dc751715213a4839581fb98c77af0d[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Jan 25 09:01:54 2022 +0100

    http2: event for variable-length integer overflow
    
    http2_parse_var_uint can overflow the variable-length
    integer it is decoding. In this case, it now returns an error
    of kind LengthValue.
    
    The new function http2_parse_headers_blocks, which factorizes
    the code loop for headers, push promise, and continuation, will
    check for this specific error, and instead of erroring itself,
    will return the list of so far parsed headers, plus another one
    with HTTP2HeaderDecodeStatus::HTTP2HeaderDecodeIntegerOverflow
    
    This status is then checked by process_headers to create an
    app-layer event.

[33mcommit b86beb9b68807e371f7af1ad6a1f789fdd5f7209[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Sun Jan 23 21:22:32 2022 +0100

    http2: check overflow before it happens
    
    instead of checking afterwards if value got smaller

[33mcommit f8e143030ca5e924dd64e77d88d8f93116c29539[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Jan 27 11:20:31 2022 -0600

    github-ci: update commit and formatting containers
    
    Update the Ubuntu containers for the commit and formatting checks to
    Ubuntu 20.04.
    
    The latest version of the checkout action requires git v2.18 in order to
    checkout the code as a git repo, which is required for these workflows.
    
    With older versions of git the action will download the code as a
    tarball and lack the .git directory.

[33mcommit 234a44bf852dd2e98c8a53e3fb9381199c3d8842[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Jan 21 15:29:48 2022 -0600

    github-ci: pin actions to specific versions
    
    Resolve the GitHub scanning pinned-dependencies for most of our GitHub
    actions.  The oss-fuzz actions have not been updated.

[33mcommit 1e1a4ab1c40b53dca6d24b848bf8abc69f282622[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Dec 9 15:40:09 2021 +0100

    detect: logs an error if a protocol is disabled
    
    So that the user knows that the rule cannot match

[33mcommit bf30eb344a851889d468f5caba75ad538e99143c[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Jan 28 14:02:32 2022 +0100

    detect: checking validity of rules with http protocol
    
    We want to check that a rule beginning with alert http
    can be valid, that is if either HTTP1 or HTTP2 is enabled.
    So, AppLayerProtoDetectGetProtoName will do a more complex
    check for this ALPROTO_HTTP (any).

[33mcommit b53fced45254ca267e75ea7e8c60afab82ea1e08[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Jan 27 12:30:14 2022 -0500

    general: Fix typo

[33mcommit be2155b4edb712913166cb5e8c10b36fb4362f2a[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Jan 26 16:35:12 2022 -0500

    config/ref: Raise errors for ref.config parsing
    
    This commit raises an error in configuration test mode if there was an
    error parsing reference.config.
    
    Issue: 4659

[33mcommit 8d615842f9c00ae6ed1cc8b01257b7e344445dc1[m
Author: Modupe Falodun <falodunmodupeola@gmail.com>
Date:   Thu Jan 27 15:32:30 2022 +0100

    detect/bypass: remove unittest
    
    This test is reimplemented in Suricata-Verify
    
    Task: 4911

[33mcommit 7b152d00211c7e8bc666a5a08228ae88a63c307c[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Jan 28 10:37:08 2022 +0100

    github-ci: update codecov
    
    Update to v2 API.
    Pin the version as suggested by Scorecard.
    No longer fail on error. This was not found to be very actionable.

[33mcommit ee933794aa2a13e5341b40b683a0b053e0d058d6[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Jan 21 15:45:59 2022 -0600

    github-ci: set workflow permissions to read-all

[33mcommit 738e756eaf0d84db417adb1d2f8fca8557593bf7[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Jan 27 16:48:05 2022 +0100

    eve/pgsql: log txs in flow direction

[33mcommit 41a139b590a059171d0517a455c562486e1a21c2[m
Author: Angelo Mirabella <amirabella@lastline.com>
Date:   Thu Jan 20 14:52:33 2022 +0000

    stream-tcp-reassemble: fix reassembly direction for FIN packets
    
    Suricata invokes the stream reassembly logic only for the current packet
    direction if the packet contains a FIN flag. However, this does not
    handle the case in which the packet ACKs data from the opposing direction.
    This patch forces the invocation of the stream reassembly logic
    on both direction when Suricata sees a FIN packet.

[33mcommit 9e096dda4e0c7d1ebcb3607daea1181c29bc0137[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Jan 26 16:38:22 2022 -0600

    windows: exit early if live capture requested without npcap

[33mcommit 5037c86b49707f39f95e4b5b0994cc45de02cf9a[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Jan 21 11:55:54 2022 -0600

    github-ci: add windows build for libpcap

[33mcommit 31ba4fd1522dd0d7f933767b9205c67a4e726fe5[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Jan 25 14:53:24 2022 -0600

    configure: fallback to libpcap on Windows
    
    If npcap/wpcap is not found on Windows, try libpcap. This allows
    Suricata to build without NPCap on Windows, however live capture won't
    be available.

[33mcommit 154e4eb39580eb5df127c0142c164f89dff60e57[m
Author: Modupe Falodun <falodunmodupeola@gmail.com>
Date:   Wed Jan 26 22:52:14 2022 +0100

    http-response-line: remove unittest
    
    This test is reimplemented in Suricata-Verify
    
    Task: 4911

[33mcommit 926c02a1410e62586972ef7233be802b928d2be9[m
Author: Modupe Falodun <falodunmodupeola@gmail.com>
Date:   Wed Jan 26 10:11:11 2022 +0100

    detect/modbus: remove unittests
    
    These tests are reimplemented in Suricata-Verify
    
    Task: 4911

[33mcommit 0984528ddbe7417230d3558d0330f81cb6326629[m
Author: Modupe Falodun <falodunmodupeola@gmail.com>
Date:   Tue Jan 25 22:56:26 2022 +0100

    detect-http-request-line: remove unittests
    
    These tests are reimplemented as Suricata-Verify
    
    Task: 4911

[33mcommit dff7e7d34e179fc3973bde22fcca6852ada98d24[m
Author: Modupe Falodun <falodunmodupeola@gmail.com>
Date:   Mon Jan 24 23:38:56 2022 +0100

    detect/hostbits: remove unittests
    
    These tests are reimplemented as Suricata-Verify tests
    
    Task: 4911

[33mcommit 47f70bf1f4cb20cb91a87c18ecbbb016ef505be5[m
Author: Modupe Falodun <falodunmodupeola@gmail.com>
Date:   Mon Jan 24 23:11:56 2022 +0100

    detect/proto: remove unittests
    
    This test is reimplemented in Suricata-Verify
    
    Task: 4911

[33mcommit 749b9c7635ab77ea47c625f23494c679020b6e9d[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Jan 21 13:40:08 2022 +0100

    fuzz: cleans all flow after one run
    
    Completes commit e2370d6861990e9aba7b551e51cfa04d945f4510
    for all the fuzz targets processing pcaps
    using a generic function.
    
    FlowShutdown is not used because it uses the loop to destroy
    mutexes, which we want to reuse for fuzzing

[33mcommit 40c315aa35d277653dd6bb46cdaab6af71499df2[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Jan 25 08:07:33 2022 +0100

    detect/frames: fix coverity warning
    
    Harmless warning, but it was correct in that the code made no sense:
    1497420 Dereference before null check

[33mcommit e902aaf838acb552350078070092a2c61b918b19[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Jan 24 23:30:51 2022 +0100

    detect/frames: fix crash when parsing bad rule
    
    Indexing of Signature::init_data::smlists would fail for a rule that
    used a frame w/o content, as the array would only be expanded when
    adding a content. Adding a check to see if there list id is in bounds
    is an implicit check for the "no content" case.
    
    Bug #5011.

[33mcommit c6be6d2c6fa89e3a0a9326b001972e8e1e9155ab[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sun Jan 23 20:32:16 2022 +0100

    detect/frames: fix error messages

[33mcommit bff0774767757b0ccab8165e293024fa39d0a952[m
Author: Eloy Pérez González <zer1t0ps@protonmail.com>
Date:   Fri Oct 22 13:53:39 2021 +0200

    smb/dce_iface: avoid deleting current ifaces from state
    
    The smb dce_iface keyword must match for all those dcerpc requests
    and responses sent in the context of the given interface. They are
    not matching as the current bind interfaces are deleted by any
    non bind message.
    
    Ticket: 4767

[33mcommit 1ae22fd5de3155c356c1191759cb7c066498a93e[m
Author: Eloy Pérez González <zer1t0ps@protonmail.com>
Date:   Fri Oct 22 13:52:14 2021 +0200

    smb/dce_iface: use DCERPC_TYPE_REQUEST
    
    The smb dce_iface keyword must match for all those dcerpc requests and
    responses sent in the context of the given interface. They are not
    matching because in rs_smb_tx_get_dce_iface, x.req_cmd is erroneously
    compared with 1. Fix this by comparing with DCERPC_TYPE_REQUEST instead.
    
    Ticket: 4767

[33mcommit 333db3b3852899885f1c2a251b4643b124e3cb18[m
Author: Eloy Pérez González <zer1t0ps@protonmail.com>
Date:   Fri Oct 22 15:01:39 2021 +0200

    smb/dce_opnum: move range if to outer context
    
    The smb dce_opnum matches all the opnums that are higher that the
    indicated opnum. This is due the range comparison if was put in the
    exact comparison context, and in case the opnum doesn't match exactly,
    then the range comparison is triggered (the upper limit is always true).
    
    Move the erroneus if to the outer context, as else option of the block
    checks if comparison should be exact or range.
    
    Ticket: 4767

[33mcommit 8dca3d0416f539f5086f72f69d71cfc418355a2f[m
Author: Eloy Pérez González <zer1t0ps@protonmail.com>
Date:   Fri Oct 22 15:00:11 2021 +0200

    smb/dce_opnum: use DCERPC_TYPE_REQUEST
    
    The smb dce_opnum keyword doesn't match the dcerpc requests/responses.
    This occurs because in the rs_smb_tx_match_dce_opnum function, the
    x.req_cmd is matched against the erroneous code 1. Fix this by using
    DCERPC_TYPE_REQUEST for the comparison instead.
    
    Ticket: 4767

[33mcommit 15f493f516a452ca810f77595fb57f8e2e96d6e3[m
Author: Eloy Pérez González <zer1t0ps@protonmail.com>
Date:   Thu Nov 4 15:20:14 2021 +0100

    dcerpc: remove prev_tx_call_id and clear_bind_cache from DCERPCState
    
    remove those fields since are not used because of the removal of
    handle_bind_cache.

[33mcommit 1aca2676a6965056582c3da85e4bb2058aca43b0[m
Author: Eloy Pérez González <zer1t0ps@protonmail.com>
Date:   Fri Oct 22 15:32:41 2021 +0200

    dcerpc: avoid delete the rpc state interface context
    
    The bug:
    The dcerpc dce_iface keyword just match the packet following the bind. Only the
    next request after the rpc is sent will match. However the expected behaviour it
    that all the rpc requests/responses sent under the context of the given
    interface would match.
    
    In the Open Group c706 the following is indicated:
    
    In 2.2.1 Binding-related Operations, indicates that one category of binding
    operations are those that "operations that establish internal call routing
    information for the server." (The other are to establish the protocol which is
    not relevant here). And the following statement can be found:
    
    Operations in the second category establish a set of mappings that the server
    can use to route calls internally to the appropriate manager routine. This
    routing is based on the interface and version, operation and any object
    requested by the call.
    
    It indicates that server routes (to call methods) are based on the operation,
    interface and object.
    
    - Operation: To indicate the method to call, and operation number is
                 specified as indicated in the second step of 2.3.3.2 (Client
                 Binding Steps).
    - Interface: An interface is a set of remotely callable operations offered by a
                 server and invokable by clients. (2.1.1.1)
    - Object: Is the manager that implements the interface, as stated in section
              Interface and Manager Selection of 2.3.3.3. It is not mandatory, can
              be nil.
    
    To call a method, a client must send a request message as defined in 2.6.4.9,
    that contains these identifiers:
    
    - opnum: The opnum field identifies the operation being invoked within the
             interface.
    - p_cont_id (Context ID in Wireshark): The p_cont_id field holds a presentation
                                           context identifier that identifies the
                                           data representation and interface, as
                                           defined in 12.6.3.4 (Context Identifiers).
    - object: The object field is contained if the PFC_OBJECT_UUID is set. (Could be
              interesting to create a keyword dce_object for matching this UUID)
    
    Therefore, to get the correct method to invoke, the server must map the context
    to the correct interface. This is negotiated by the bind request
    
    Interfaces are first negotiated using the bind message (12.6.4.3), contained in
    the p_context_elem array. Then they are accepted or rejected using the bind_ack
    message (12.6.4.4).
    
    Once these contexts are established, both client and server can use the context
    id, which is the index of the p_context_elem array, to refer the interface they
    are using.
    
    Moreover, in the middle of the connection, the context can be changed with the
    alter_context message.
    
    This is way suricata shouldn't delete the bindack attribute, that contains
    the contexts, used by match_backuuid. This is the only way to know the interface
    a request message is referring to.
    
    ticket: 4769
    https://redmine.openinfosecfoundation.org/issues/4769

[33mcommit 0bf1227f0f061930cfdb751db5f055f20fb819a7[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Fri Jan 21 11:47:15 2022 +0000

    pgsql: fix defect found by coverity
    
    Pgsql was using bitwise operations to assign password output config to
    its context flags, but mixing that with logic negation of the default
    value, resulting in the expressions having a constant value as result.
    
    Bug: #5007

[33mcommit 59ac1fe277b0dc2fc2b6c1739c10eb58a0d48cba[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Jan 20 12:08:33 2022 -0600

    logging: change ownership of application log if needed
    
    When running with privilege dropping, the application log file
    is opened before privileges are dropped resulting in Suricata
    failing to re-open the file for file rotation.
    
    If needed, chown the application to the run-as user/group after
    opening.
    
    Ticker #4523

[33mcommit 08518df373625eed25d03108bd24b9e389295c81[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Jan 20 11:40:24 2022 -0600

    startup: initialize run as user info sooner
    
    Initialize the run-as user info after loading the config, but
    before setting up logging (previously it was done while initializing
    signal handlers). This will allow the log file to be given the
    correct permissions if Suricata is configured to run as a non-root
    user.

[33mcommit f668524731945792f431c0d2e42df623d0b4eea3[m
Author: Lukas Sismis <lukas.sismis@gmail.com>
Date:   Sun Jan 23 13:41:19 2022 +0100

    dpdk: adjust setting of MTU to the new DPDK API (21.11)

[33mcommit 7b44485b3b9bc41b76226c495e8787ccc51e4470[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Jan 20 23:21:08 2022 -0600

    github-ci: use curl -L for npcap: follow redirects

[33mcommit ce9efc34c7958c96b580228e8ae48baf1137266f[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Fri Jan 21 13:37:54 2022 +0100

    rust/pgsql: convert parsers to nom7 functions

[33mcommit e8060990d17960dd97b6c81c813a6204d4d2bd46[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Jan 21 16:31:54 2022 +0100

    detect: fix possible leak found by coverity
    
    Conditions to create the leak are likely not reachable,
    but this is still a bad pattern.

[33mcommit cc746b4594584d29b1d81157e9b588026f00cda3[m
Author: Catena cyber <35799796+catenacyber@users.noreply.github.com>
Date:   Fri Jan 21 15:21:46 2022 +0100

    ci: adds scorecard analysis GitHub workflow

[33mcommit 579d7dcc01ac0fa0d8e760765794d88b3a6ad283[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Wed Mar 31 14:29:34 2021 +0100

    pgsql: add initial support
    
    - add nom parsers for decoding most messages from StartupPhase and
    SimpleQuery subprotocols
    - add unittests
    - tests/fuzz: add pgsql to confyaml
    
    Feature: #4241

[33mcommit 4c743b809c2143868c629389d060b0dd6157d1bf[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Tue Sep 14 20:05:26 2021 +0100

    rust/applayer: add function for upgrading to TLS

[33mcommit 8918f53f6bc9b9a858f44964c74ec2dcaa4312fa[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Mon Jan 3 19:44:53 2022 +0530

    smtp: use AppLayerResult instead of buffering
    
    Also, remove tests that check for the removed buffers and any middle
    states while parsing and buffering.
    
    Ticket 4907

[33mcommit e02b52c89513101a79e347c4163edf0428957720[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sun Jan 16 17:41:31 2022 +0100

    quic: add quic.ua for matching user agent

[33mcommit 4c13b73c4d7c566c4a438dc1f759132a6d97a175[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sun Jan 16 14:07:21 2022 +0100

    quic: log user agent when available

[33mcommit da8b024b993ed00dc80c4fe3080c0b8157d4d508[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sat Jan 15 19:24:46 2022 +0100

    detect/quic: add quic.sni sticky buffer

[33mcommit 7b836af1b2d4c47759529e8b5a57ea30322b84c9[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sat Jan 15 14:19:06 2022 +0100

    quic: log sni; reduce number of transactions
    
    Only create transactions for long headers.
    
    Store SNI in tx, log it.

[33mcommit cf4ddab6f449ea40f0ec3d9603491b55ce562654[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Jan 14 21:12:48 2022 +0100

    doc/quic: update for new quic.version logic

[33mcommit ccab28aad3cc6ca15c887af3345191f823efcc57[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Jan 14 16:31:34 2022 +0100

    quic: log version as string
    
    Log as Q043, Q044, Q045, Q046. If the version is not supported/recognized,
    log the 4 bytes as hex.
    
    Only log for txs based on long headers.

[33mcommit 24a21af4ab9e4bb7ebf37a42577294733dca64d8[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Jan 14 20:34:04 2022 +0100

    quic: redo quic.version; parser cleanups
    
    Reimplement quic.version as sticky buffer.
    
    Removed unused parts of the parser.
    
    Set unidirectional tx flag to fix double matching.

[33mcommit 6641efb74f7a3a227b7b56a1253d0f0693097848[m
Author: Emmanuel Thompson <eet6646@gmail.com>
Date:   Thu Sep 23 16:54:58 2021 -0400

    doc/quic: Add documentation for QUIC keywords

[33mcommit 9ad60e76618da183918d1b9b52baf1dfc82d3ed3[m
Author: Emmanuel Thompson <eet6646@gmail.com>
Date:   Mon Aug 23 18:58:55 2021 -0400

    doc/quic: Add quic to eve json format

[33mcommit 7e51987263342c78b8ee92006a16c508d7631f4b[m
Author: Emmanuel Thompson <eet6646@gmail.com>
Date:   Thu Jul 16 11:04:52 2020 -0400

    quic: Add QUIC App Layer
    
    Parses quic and logs a CYU hash for gquic frames

[33mcommit f714484591a1c8ac5a94857b0df61c5d0c447f2e[m
Author: Andreas Dolp <dev@andreas-dolp.de>
Date:   Tue Jan 18 19:27:40 2022 +0100

    Doc: Fix typos in documentation of suricata.yaml.

[33mcommit c4bd3cd70e3b0a2718eb404a214748780cfc4db4[m
Author: Sam Muhammed <ghostinthehive.vx@gmail.com>
Date:   Fri Jan 14 02:25:12 2022 +0200

    nfs4_records: add unittests
    
    Add unittests for setclientid, readdir records
    Task #4866

[33mcommit c61cbd9b359d0315352c9b801078537e0998d7a4[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Tue Jan 18 22:38:19 2022 +0100

    rust: simplify bits parser annotations

[33mcommit 1b25bcbb133b03e72c0f6c46a7094551311a96e7[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Tue Jan 18 22:21:07 2022 +0100

    rust/smb: simplify bits parser annotations

[33mcommit 4d6aa6d53297ef21901a6ba62387b5e15f148852[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Tue Jan 18 21:56:37 2022 +0100

    rust: add 'bits' combinator to simplify nom bits parsers
    
    Add a specialized version of the 'bits' nom combinator so adding
    bits-level parsers does not require type annotations.

[33mcommit 23fb139e009c532bed404146e0dde5a0f9a6f1f9[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Dec 9 20:43:56 2021 +0100

    detect: do not upgrade base64 decode when fuzzing
    
    As fuzzing will put a very big value, and then
    ThreadCtxDoInit will try to allocate it,
    ending in out of memory

[33mcommit ca29d33c695e10f5de76ba5d6597d2ca146354ac[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Jan 18 15:17:12 2022 +0100

    proto-detect: set flags in packet direction for UDP

[33mcommit 449cc82943f434f43987203db9448e431f9efd09[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Jan 18 14:52:13 2022 +0100

    proto-detect: fix UDP not setting alproto_ts/tc
    
    This would lead to the `app-layer-protocol` keyword not matching correctly.

[33mcommit 0cfdec1266d76842286ca06cf0d390ca971b0c48[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Oct 22 19:47:49 2021 +0200

    detect: xor transform
    
    Ticket: 3285
    
    The xor transform applies xor decoding to a buffer, with a key
    specified as an option in hexadecimal. Arbitrary key sizes are
    accepted.

[33mcommit 1d4fe38ccbd1c1536d2949c628795b8864ee2a00[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Feb 18 15:43:16 2021 +0100

    detect: adds test with invalid uint mode <<

[33mcommit 2012b14470dcf90b975442a808212b55caf4437d[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Feb 17 17:28:51 2021 +0100

    detect: use generic functions for icode parsing

[33mcommit e2370d6861990e9aba7b551e51cfa04d945f4510[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Dec 16 10:23:40 2021 +0100

    fuzz: cleans all flow after one run
    
    Makes the fuzz target more stateless
    
    And manages to find bugs on the FlowFree path

[33mcommit add1a0f561f648493ccca33cceb4dd32140d01ff[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Dec 9 15:06:24 2021 +0100

    fuzz: use parsed rules in sigpcap target
    
    Ticket: 4125
    
    As commit d21a252238fd766d3c2ec4c2d165d429dad0d85a
    But for sigpcap target as well

[33mcommit 529678d5011c9d9ffa31a31fec476b8f4bcc0f3d[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Dec 9 10:24:50 2021 +0100

    dns: wrap with HAVE_LUA
    
    This is just code style, to minimize the compiled code.

[33mcommit 6885b668832d884ebbbedfb036b260259dfe5e74[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Dec 9 09:57:05 2021 +0100

    fuzz: enable template protocols
    
    Ticket: 4125

[33mcommit ed11e32076cc72fee15ea8975de29b82c333cd1c[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Dec 15 21:11:05 2021 +0100

    enip: fix too restrictive check in probing parser
    
    As is shown later in the code, enip_len can be
    ENIP_LEN_REGISTER_SESSION which is 4, which is
    smaller than sizeof(ENIPEncapHdr) which is 24

[33mcommit 09c84d0c26d58e4750ef2114699c9324b561bf4e[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Dec 15 20:48:47 2021 +0100

    fuzz: use fuzzing confyaml for protodetect target
    
    As is done for other targets,
    so that all app-layer protocols are enabled,
    even the ones disabled by default such as enip
    
    And resets protocol detection every time we try
    so that probing_parser_toserver_alproto_masks are fresh.

[33mcommit cda11b8d978b37562dcedb8b23c00194b415c67b[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Dec 16 16:27:42 2021 -0600

    doc/update: mention change of default rule path

[33mcommit 8071d8239e6ba4683f068d6055a5ee8989e178a5[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Dec 16 16:26:47 2021 -0600

    doc: update rule section to current default
    
    Update the rule section to better describe whats seen in a default
    install of Suricata including a link to the rule management section.

[33mcommit 9d7a497cc168cf3917c1fd7b68daf0fb27e22722[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Dec 16 16:24:38 2021 -0600

    rule-path: always use $localstatedir/lib/suricata/rules
    
    Always use the same path for default-rule-path whether or not
    Suricata-Update will be installed as part of the Suricata install or
    not.
    
    This provides consistency, and maps better to our recommendation that
    Suricata-Update be used to manage rules.
    
    Probably should have been done as part of
    55852d0de3151517b6cb22c736cb2de8a893cb11.
    
    Ticket #4912.

[33mcommit 44c9241b6a9be35f28657d03a61ba881d2b44898[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Jan 4 16:43:24 2022 +0100

    telnet: initial support with frames
    
    Bootstrapped using setup script. Basic option parsing for purpose
    of tagging frames.

[33mcommit fc4279de85725521c2906813d59d96bad860d4ca[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sun Dec 12 08:11:46 2021 +0100

    htp: improve request/response size accuracy

[33mcommit 52ad906d315e921dd25d9326ecfc237e5d0db76f[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Dec 10 18:19:06 2021 +0100

    htp: implement basic request/response frames

[33mcommit af797b5926abbf1583189f75201563f99c72990e[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Dec 3 08:17:37 2021 +0100

    ssl: implement frames for SSLv3 and TLS

[33mcommit 3cdefd5f8b464f7fdae215a6f165b7f2f618ff23[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Dec 8 17:08:07 2021 -0600

    smb: use derive AppLayerFrameType

[33mcommit 0c9fdf8f4fe9c4d86468a75313b95abf2fe89436[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Dec 6 11:35:23 2021 +0100

    smb: implement frames
    
    SMB1 record parsing code simplification.
    
    Frames:
    
        nbss.pdu
        nbss.hdr
        nbss.data
    
        smb1.pdu
        smb1.hdr
        smb1.data
    
        smb2.pdu
        smb2.hdr
        smb2.data
    
        smb3.pdu
        smb3.hdr
        smb3.data
    
    The smb* frames are created for valid SMB records.

[33mcommit a492d94826f4078d1b9299cea4f21ba3d87e3f1f[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Dec 3 08:14:34 2021 +0100

    detect/frames: implement 'frame' keyword
    
    Implement a special sticky buffer to select frames for inspection.
    
    This keyword takes an argument to specify the per protocol frame type:
    
        alert <app proto name> ... frame:<specific frame name>
    
    Or it can specify both in the keyword:
    
        alert tcp ... frame:<app proto name>.<specific frame name>
    
    The latter is useful in some cases like http, where "http" applies to
    both HTTP and HTTP/2.
    
        alert http ... frame:http1.request;
        alert http1 ... frame:request;
    
    Examples:
    
        tls.pdu
        smb.smb2.hdr
        smb.smb3.data
    
    Consider a rule like:
    
        alert tcp ... flow:to_server; content:"|ff|SMB"; content:"some smb 1 issue";
    
    this will scan all toserver TCP traffic, where it will only be limited by a port,
    depending on how rules are grouped.
    
    With this work we'll be able to do:
    
        alert smb ... flow:to_server; frame:smb1.data; content:"some smb 1 issue";
    
    This rule will only inspect the data portion of SMB1 frames. It will not affect
    any other protocol, and it won't need special patterns to "search" for the
    SMB1 frame in the raw stream.

[33mcommit 02f98796a76cc7750ca9c30829cc26b90ac256b2[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Dec 3 08:15:15 2021 +0100

    detect/frames: limit mixing frames and other detection
    
    Don't allow mixing of payload/stream/tx and frame keywords. Initial
    support is only for 'pure' frame inspection.

[33mcommit 3cbe33de574e1c80692443c454ced2f517081e7d[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Dec 3 08:18:40 2021 +0100

    detect/analyzer: add frame support

[33mcommit f6f124f2837022c4a0258a9d07f1d618dca93a02[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Dec 3 07:53:32 2021 +0100

    detect/engine: support frames
    
    Implement the low level detect engine support for inspecting frames,
    including MPM, transforms and inspect API's.

[33mcommit c0ec3984fae42421b4c4a09e7d938ec0e73500e6[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Dec 3 07:47:29 2021 +0100

    eve/alert: add support for logging frame
    
    If detection was done in a frame, the frame will be added to the
    eve.alert output.

[33mcommit 60bfade351d4cd71b2c0456a75bd5997dbf8b7ab[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Dec 3 07:45:28 2021 +0100

    eve: implement frame logging
    
    This is mostly to assist development and QA. It produces too much data
    for practical use.

[33mcommit 8a40b7b42e6fb80d51e2344ff828715ae4322269[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Dec 7 15:42:23 2021 -0600

    cbindgen: ignore frames module

[33mcommit de870e2fbf5d68b0e30944b189850f19df0efb16[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Dec 8 17:06:04 2021 -0600

    rust: derive macro for app-layer frame type

[33mcommit 0ece2080743bf0b1f2535bbd86727c678526d462[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Dec 8 17:06:37 2021 -0600

    rust/applayer: create trait for app-layer frame types

[33mcommit cb7f7a7e08156fcf0c2cd579450b88f9cd16419f[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Dec 13 20:12:13 2021 +0100

    app/frames: implement rust API

[33mcommit a27ee49c73a23a8477270207faa7b2861f7f3207[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Dec 21 09:59:15 2021 +0100

    app-layer: move app_progress forward on errors as well
    
    In case of APP_LAYER_ERROR still move the app_progress forward.
    This helps validation of frame offsets and should be harmless
    otherwise.

[33mcommit 1556e86c7db139057e8ad0a964dc77d010b8134b[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Dec 3 07:40:56 2021 +0100

    app/frames: initial support
    
    The idea of stream frames is that the applayer parsers can tag PDUs and
    other arbitrary frames in the stream while parsing. These frames can then
    be inspected from the rule language. This will allow rules that are more
    precise and less costly.
    
    The frames are stored per direction in the `AppLayerParserState` and will only
    be initialized when actual frames are in use. The per direction storage has a
    fixed size static portion and dynamic support for a larger number. This is done
    for effeciency.
    
    When the Stream Buffer slides, frames are updated as they use offsets relative
    to the stream. A negative offset is used for frames that started before the
    current window.
    
    Frames have events to inspect/log parser errors that don't fit the TX model.
    
    Frame id starts at 1. So implementations can keep track of frame ids where 0
    is not set.
    
    Frames affect TCP window sliding. The frames keep a "left edge" which
    signifies how much data to keep for frames that are still in progress.

[33mcommit e6f49e5a051d7d1b6e699b4bf6905a017461211d[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Dec 3 07:42:22 2021 +0100

    app/frames: implement name to id API for frames

[33mcommit eeee740e84f61d074d37d1ca071190f455d23cbc[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sat Dec 18 19:11:40 2021 +0100

    stream: add util function to get 'usable' data

[33mcommit a6cb53905466ec50a9bd26e1b389a9fb940c1f7b[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Jan 17 15:14:54 2022 +0100

    ci: do not use ppa for cocci
    
    As this version segfaults

[33mcommit 3e19ccdc0c144453fd7cde8fabad8368eb7dbe86[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Wed Jan 12 16:41:15 2022 +0100

    rust/http2: convert parser to nom7 functions (HTTP2 ranges)

[33mcommit f8647b0ffb72f6c77b00a8becb4e2abcef835d86[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Wed Jan 12 16:17:40 2022 +0100

    rust/http2: convert parser to nom7 functions (HTTP2 core functions)

[33mcommit 52d8d35453ca703ed034c3b7e0d46a3370966feb[m
Author: Lukas Sismis <lukas.sismis@gmail.com>
Date:   Wed Dec 15 14:24:55 2021 +0100

    dpdk: fix received/error counters

[33mcommit 3cbbe66ea23c127081400b2f24d7239a9485ae21[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Jan 17 13:02:51 2022 +0100

    tests/pppoe: clean up more tests to use PASS/FAIL macros

[33mcommit 6bf2117056e8c2e9448a02d2198384935b1d5b70[m
Author: Steven Ottenhoff <steven@mmox.nl>
Date:   Thu Jan 13 13:05:58 2022 +0000

    pppoe: fix protocol field length variation
    
    Detect when protocol field is not a 16 bit field.
    Added tests to prove logic
    
    Ticket: 4810

[33mcommit 260bc03603808b848891e9cfe1737d8468a16232[m
Author: Steven Ottenhoff <steven@mmox.nl>
Date:   Thu Jan 13 12:38:01 2022 +0000

    test/pppoe: refactor to use FAIL/PASS macros

[33mcommit 3dbf74ff1025b843eb09b0e4d5e2c90614d7cc9e[m
Author: Modupe Falodun <falodunmodupeola@gmail.com>
Date:   Fri Jan 14 16:53:28 2022 +0100

    detect-file-data: remove SMTP unittests
    
    These tests are reimplemented as Suricata-verify tests
    
    Task: 4938

[33mcommit 264eddb81f952c23b5dffc3d31eef87dceb8158f[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Mon Jan 17 09:31:06 2022 +0100

    output/alert: don't call basic logging twice
    
    Issue: 4106

[33mcommit a7e77dd22dc6e15d452544116f81ec87b1634f32[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Jan 14 11:48:16 2022 +0100

    stream: suppress noisy debug message

[33mcommit 78f5e082f5188204606ab9ceb5044447e49aaca2[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Jan 13 12:13:43 2022 +0100

    stream: fix stream pruning being too aggressive
    
    Pruning of StreamBufferBlocks could remove blocks that fell entirely
    after the target offset due to a logic error. This could lead to data
    being evicted that was still meant to be processed in theapp-layer
    parsers.
    
    Bug: #4953.

[33mcommit 544ff0fb52cad0ee35dfd968bd775703737c4ef6[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Thu Jan 13 12:12:56 2022 +0100

    stream: debug code for showing segment list state

[33mcommit f30d8ece80cbd6414dfbb7ef1bc8effa26996a44[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun Dec 26 10:22:34 2021 -0500

    detect: Avoid recomputing ntohl() in addr match
    
    This commit makes a small optimization when comparing IPv4 and IPv6
    addresses by making the host order value invariant and calculating the
    value once, before entering the loop.

[33mcommit 86ea7f24742228de26f9b4bd16ce29264cc93070[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Dec 8 21:14:54 2021 +0100

    file: define own variable instead of PATH_MAX
    
    to be used for maximum size of file names,
    and not depend on the OS

[33mcommit c56b1c99d54ef7ea2d1ec4cf4775d04c73e83437[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Dec 6 09:44:12 2021 +0100

    ssl: fix int warnings
    
    especially increasing padding_len size

[33mcommit 078e1cdacc3b10878450742df08a8379489d8a71[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Dec 6 09:36:14 2021 +0100

    smtp: fix int warnings
    
    and explicitly truncating filename's length

[33mcommit 23f242dfc28b04e8a394dc3a5fdb38830363730f[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Dec 6 09:26:54 2021 +0100

    app: fix int warnings in generic app files

[33mcommit 334b1382e0c647dfad71e9320350e87dbba90e1f[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Dec 6 09:22:52 2021 +0100

    http: : fix int warnings
    
    Explicitly truncate file names to UINT16_MAX
    
    Before, they got implicitly truncated, meaning a UINT16_MAX + 1
    file name, went to 0 file name (because of modulo 65536)

[33mcommit defce022b42736efb3680c58d3a6bb16cdc128ad[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Dec 6 09:11:09 2021 +0100

    ftp: fix int warnings
    
    Explicitly truncate a file name if it is longer
    than UINT16_MAX

[33mcommit 22e89ec4a3554a66ecf8c38e5b6fcfc95d4107e9[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Sep 21 09:52:11 2021 -0400

    log: Coverity REVERSE_INULL warnings
    
    This commit addresses Coverity reported "REVERSE_INULL" warnings.
    
    Issue: 4699

[33mcommit e1c0725e052376406dc1bddbead4b2df1443e185[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Jan 6 14:07:21 2022 +0100

    doc: fix typo lenght/length

[33mcommit 9bea850d53b3336de3868ce43e3416c53afe772c[m
Author: Sam Muhammed <ghostinthehive.vx@gmail.com>
Date:   Fri Jan 7 19:27:06 2022 +0200

    nfs4_records: add unittests for nom7 parsers
    
    Task #4866

[33mcommit 463fbdc36dbc29438b0b5174e0e6bbef93f95198[m
Author: Sam Muhammed <ghostinthehive.vx@gmail.com>
Date:   Tue Jan 11 01:52:34 2022 +0200

    nfs4_records: add missing field to res_sequence_ok()
    
    Missing _seqid in sequence op struct left a trailing four zeros
    that are parsed by nfs4_res_compound_command() as a cmd
    causing a Switch Error Code

[33mcommit 4e2edd44aa08f08286001701ec0860c6638625d5[m
Author: Sam Muhammed <ghostinthehive.vx@gmail.com>
Date:   Sun Jan 2 07:31:34 2022 +0200

    nfs3-records: add unittests to nom7 parsers
    
    Task #4866

[33mcommit 03906010a21bebfee029af82da9c215073902b9b[m
Author: Sam Muhammed <ghostinthehive.vx@gmail.com>
Date:   Sun Jan 2 06:57:39 2022 +0200

    nfs3-records: add missing fields and update parsers
    
    Add missing fields to some record structures and
    update their respective parsers

[33mcommit 86c273dadc973326f20782195e4d63de272f1f91[m
Author: Sam Muhammed <ghostinthehive.vx@gmail.com>
Date:   Mon Dec 27 14:19:27 2021 +0200

    nfs2-records: add unittests for nom7 parsers
    
    Task #4866

[33mcommit fc6fdef07006e5382839ef88873e90754b30e6e0[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Jan 11 14:16:24 2022 -0500

    suricatasc: Handle incomplete/empty recv values
    
    Issue: 4947
    
    Improve handling of values returned by recv. Sometimes, recv returns an
    empty string if suricata terminates asynchronously.

[33mcommit ddf14e51dcf5dabdb4bc07414a118530e2a1b819[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Jan 11 08:09:56 2022 +0100

    nfs2: improve READ parsing
    
    Take fill_bytes into account.

[33mcommit 2011a5579c0a53d1f6d8e540944af6ca721d645d[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Dec 17 16:33:48 2021 -0600

    rust/app-layer: expose AppLayerEvent derive macro
    
    Export the AppLayerEvent derive macro so plugin (or library code) can
    use it as expected, for example:
    
    use suricata::applayer::AppLayerEvent;
    
    enum MyEvent {
        EventOne,
        EventTwo,
    }

[33mcommit ba310440a6675e7c942c2d575ea181afc597ff72[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Dec 17 16:32:05 2021 -0600

    rust/derive: make usable from a plugin or lib user
    
    The macro was generating code that references names use the "crate"
    prefix which will fail if the macro is used by a library user or plugin.
    Dynamically check where we are running an use the correct import paths
    as needed.

[33mcommit bbd5e6402bfadb9f0013b4de8daf98529780a248[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Dec 17 16:28:56 2021 -0600

    rust: rename to suricata (from suricata_rust)
    
    Rename the Rust lib to simply "suricata" instead of "suricata_rust".
    This allows Rust plugin/library code to use it under the name "suricata"
    which is what should be expected.
    
    The name was only "suricata_rust" to prevent on-disk conflict with the C
    code, so just rename the file on disk, which doesn't affect how the code
    is interacted with from an API layer.

[33mcommit 2ffe88c1f076977253409d5732617aec02ece016[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Dec 17 16:25:47 2021 -0600

    rust: remove feature function-macro
    
    The function macro existed so it would only be enabled on Rust
    versions that supported.  Now that our MSRV is 1.41, which is
    greater than 1.38 we can assume we always have support for
    this macro.

[33mcommit 613b12b0e789bc2a6628cff331597be8ddd7dfa0[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Tue Dec 14 21:14:30 2021 +0530

    rust: bump MSRV to 1.41.1
    
    Ticket: #4902.
    (cherry picked from commit 87f04475aaa75ee205b1b699e59fb2b5ba7ed59f)

[33mcommit 50fdcd098c9148819e9634f781e17f04e62b69b7[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Jan 6 11:28:40 2022 -0600

    rust/http2: use base64 crate for base64 decode

[33mcommit 6392216f6bc717801d7f92d7d083b94ac9769f54[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Sep 3 15:04:58 2021 -0600

    base64: use the Rust base64 encode implementation
    
    Replace our internal base64 implementation with a ffi wrapper
    around the Rust implementation provided by an external crate.

[33mcommit 6d3dcf27a62e8e88fc04fe470105fd338a45610c[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Jun 24 10:21:52 2021 -0600

    eve: use JsonBuilder for encoding base64
    
    Replaces all usages of Base64Encode just before writing to a
    JsonBuilder with jb_set_base64 and jb_append_base64.

[33mcommit 8181030f72b4143af7db802aae9d5e646f63849c[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Jun 24 10:20:09 2021 -0600

    jsonbuilder: add methods to encode values as base64
    
    Add new methods to set a value as a base64 encoded string of
    a byte array. This uses the Rust base64 crate and encodes
    directly into the JsonBuilder buffer with no intermediate
    buffer required.
    
    jb_set_base64: set a field on an object
    jb_append_base64: append a value to an array

[33mcommit c073d5cfbfdc2eac920fcb5d84d5abfb775ad4d0[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Mon Dec 6 08:31:25 2021 +0100

    app-layer: use StreamSlice as input to parsers
    
    Remove input, input_len and flags in favor of stream slice.

[33mcommit 6466296b32d07f44e83da282b82a888ab0520734[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sun Dec 5 11:16:06 2021 +0100

    app-layer: add StreamSlice to pass data to parsers
    
    Since object to contain relevant pointer, length, offset, flags to make
    it easy to pass these to the parsers.

[33mcommit 93842aa14a67ed1e7acfc6bbdacbffef8bd6bae0[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Jun 17 09:24:46 2021 -0400

    doc/yaml: Signal-termination option description

[33mcommit 7f0f463b6475bbf69b24664485fc5b3b3bd8004b[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Jun 17 09:07:29 2021 -0400

    logging/diag: Enable stacktrace diagnostic if config'd
    
    This commit adds a signal handler for SIGSEGV when configured. The
    signal handler emits a one line stack trace using SCLogError. The intent
    is to provide diagnostic information in deployments where core files are
    not possible.
    
    The diagnostic message is from the offending thread and includes the
    stack trace; each frame includes the symbol + offset.

[33mcommit 163f70be9d87960fb260eb5c03383799f78b46b5[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Jun 17 09:04:56 2021 -0400

    logging: Stacktrace on signal term setting
    
    This commit adds a configuration setting to enable a stack trace message
    if Suricata receives a signal that terminates execution, such as
    SIGSEGV, SIGABRT.

[33mcommit 501c870a2c176a053f090f7f2535dd989153db4c[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Jun 17 08:54:30 2021 -0400

    error: Add error code for sig-related diagnostics
    
    This commit adds an error code for the diagnostic code used for
    diagnostic messages following unexpected termination due to signals..

[33mcommit 303dd29b501d9f27b60d1b400986f04b99df2453[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Jun 17 08:52:17 2021 -0400

    configure.ac: Support libunwind configuration
    
    This commit adds support for enabling libunwind -- a library that can be
    used to display stack information.
    
    Libunwind is enabled and used by Suricata if present during
    configuration.  A diagnostic message is displayed if libunwind
    cannot be found.

[33mcommit 6ae80b2819a9f72a923d3903851ecbd2edafcbaa[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Wed Dec 29 17:24:16 2021 +0000

    doc: replace ohloh with openhub link

[33mcommit de0ce26e3ff9df86d038cdb0f5922bb50b5bdb7d[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Thu Dec 16 12:07:44 2021 +0000

    userguide: update references to Suricata website
    
    Many places were still referencing the old Suricata page.
    Used git grep with replace to update them. Checked that new links work.
    Left old references when they were only documentation examples (for
    output or unittests).
    
    Task#4915

[33mcommit 7b20488d4e104d7c3693b25810c77e7756050424[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Thu Dec 16 12:07:16 2021 +0000

    userguide: fix low-hanging typos Config page

[33mcommit bf9bbdd6128568d74d88c4f4eb08be910488f6e0[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Dec 22 22:44:54 2021 +0100

    detect: fix app-layer-protocol keyword for HTTP
    
    Ticket: 4920
    
    Completes commit c8dbe24fb6202550bbca1fab452ddbe864b2c9e2
    which introduced AppProtoEquals to have a generic
    check for http in signature can mean http1 or http2 in
    traffic.
    
    This commit missed this case, as I only looked for
    git grep "alproto ==" and here we deal with
    alproto_tc and alproto_ts, but not alproto by itself.

[33mcommit 2a5d79e42609bd5ae0d0456cd5c458e20670160e[m
Author: Odin Jenseg <odin@mnemonic.no>
Date:   Tue Jun 8 21:56:41 2021 +0200

    doc/eve-json-format/dns: Describing Z-bit

[33mcommit 0861b66e152c6d2a0517a4a043ef56bdb1be4d76[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Dec 21 16:49:21 2021 -0600

    dns: add dns flag to dns request logging
    
    Ticket #4515

[33mcommit dfb6f105e8b104bf27cce24b650d047d0925c145[m
Author: Odin Jenseg <odin@mnemonic.no>
Date:   Tue Jun 8 21:55:36 2021 +0200

    dns: Logging of Z-bit
    
    [Edit by Jason Ish: fix flag bit value]
    
    Ticket #4515

[33mcommit fcbdc304265aaba724b245a5c3f02e00c8059a1a[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Dec 21 16:34:05 2021 -0600

    dns: create transaction even if z-bit was set
    
    It appears that DNS servers will still process a DNS request even if the
    z-bit is set, our parser will fail the transaction. So create the
    transaction, but still set the event.
    
    Ticket #4924

[33mcommit 4972021cd4c362c6f02fce6c34377013a463eab0[m
Author: Lukas Sismis <lukas.sismis@gmail.com>
Date:   Fri Aug 20 21:27:51 2021 +0200

    dpdk: add DPDK test support in Github CI
    
    Add DPDK dependency to the build process in distributions with
    a native support of DPDK in their default package managers.

[33mcommit dab3274263865f7f2592d204141346911996d41b[m
Author: Lukas Sismis <lukas.sismis@gmail.com>
Date:   Mon May 24 20:11:24 2021 +0200

    dpdk: add documentation for the DPDK runmode
    
    Briefly present the DPDK runmode through configuration file.

[33mcommit de53e0755947e4c1a2da0a2f2612bb58a922fcdc[m
Author: Lukas Sismis <lukas.sismis@gmail.com>
Date:   Mon Nov 29 22:17:58 2021 +0100

    dpdk/ice: setup RSS for Intel ICE PMD
    
    Set RSS hash function according to Intel ICE PMD available hash functions
    
    Set hash functions according to the support by the ICE PMD, so that no warning
    regarding RSS setting is issued.

[33mcommit 3f7a50eeb721bcc2a9f14b4d62925d46e5f202c6[m
Author: Lukas Sismis <lukas.sismis@gmail.com>
Date:   Mon Nov 22 16:43:29 2021 +0100

    dpdk/ixgbe: setup RSS for Intel IXGBE PMD
    
    Set RSS hash function according to Intel IXGBE PMD available hash functions.
    
    During configuration, a warning appeared stating that RSS hash function
    has been changed from one value to the other. This has meant that
    the supported hash functions did not cover all required hash functions
    by the configuration. This commit solves the warning.

[33mcommit 639aa04c5fa19b52bccc23a8597156a523f9dac5[m
Author: Lukas Sismis <lukas.sismis@gmail.com>
Date:   Sun Nov 21 23:22:24 2021 +0100

    dpdk/i40e: support RSS on Intel i40e PMD driver
    
    Due to peculiar behavior of i40e PMD driver, the RSS is required to be set
    via rte_flow rules or a hash filter as compared to other NICs where RSS is
    configured through port configuration structure.
    RTE_FLOW rules are created on 5-tuples (as opposed to 3-tuple configured
    on the other NICs). Fragmented traffic have been tested with this setup
    and it has been proven that fragmented packets of the same flow are
    received on the same queue. At the same time, setting 3-tuple on rte_flow
    rules have not yield in the expected results.
    
    Notes from the experiments:
    
    - Configuration of 5-tuple (as is in the commit):
        fragmented and nonfragmented packets are received by the same workers
        even when I applied seed to alter them via tcpreplay-edit (option --seed)
    
    - Setting only ETH_RSS_FRAG_IPV4 and ETH_RSS_IPV4 (i.e. setting 3-tuple):
        when setting ETH_RSS_IPV4, the PMD driver says that pctype is not
        supported (generally this means that the "type" of traffic is not
        a valid configuration for the i40e)
    
    - Setting only ETH_RSS_FRAG_IPV4 and ETH_RSS_NONFRAG_IPV4_OTHER:
        this doesn't work well, packets of the same flow are received on
        the different workers (my explanation is that the fragmented packets are
        matched with ETH_RSS_FRAG_IPV4 but the other UDP packets are not matched
        with ETH_RSS_NONFRAG_IPV4_OTHER rte_flow rule (they would be matched with
        ETH_RSS_NONFRAG_IPV4_UDP).

[33mcommit f98df5c3fd3e6c83366d25901f261ac9c8634254[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sun Nov 14 19:47:24 2021 +0100

    dpdk: add RSS flags that are set in the NIC

[33mcommit 56dfec48b94321e916ab742ced4007178b386508[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sun Nov 14 15:49:43 2021 +0100

    dpdk: add specific error counters

[33mcommit a7faed12450b85e9108868861723741fc93716fa[m
Author: Lukas Sismis <lukas.sismis@gmail.com>
Date:   Sun Nov 21 23:18:36 2021 +0100

    dpdk: initial support with workers runmode
    
    Register a new runmode - DPDK. This enables a new flag on Suricata start
    (--dpdk).
    
    With the flag given, DPDK runmode is enabled.
    
    Runmode loads the configuration and then initializes EAL.
    
    If successful, it configures the physical NICs according to the configuration
    file. After that, worker threads are initialized and then are in continuous
    receive loop.

[33mcommit fcfee6994e211b29de7bbc6e461f5548afb85ef4[m
Author: Lukas Sismis <lukas.sismis@gmail.com>
Date:   Sun Aug 29 23:43:14 2021 +0200

    dpdk: edit configure.ac to include DPDK compilation option
    
    Add a build flag --enable-dpdk to support DPDK parts in the source code.

[33mcommit 142a57997199a8d7cd90085dd1c2c09a949aa948[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Dec 11 08:45:57 2021 -0500

    netmap: allow specifying a library directory
    
    Ticket: #4482

[33mcommit 92eb14c5adc985433dd44bdcac18fa6e67440043[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Dec 9 16:59:04 2021 -0600

    datasets: initialize after dropping privileges
    
    Move initialization of datasets to a point after privileges
    have been dropped.
    
    Ticket 4239

[33mcommit d67f8f91961317640bf5a850f28b821203e8e367[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Sun Nov 14 18:24:00 2021 +0100

    rust/smb: convert parser to nom7 functions (SMB1)

[33mcommit 895a54cea4b6a6679af33fe5556d6a4d3568abf7[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Sun Nov 14 17:18:14 2021 +0100

    rust/smb: convert parser to nom7 functions (DCERPC records)

[33mcommit 8d77ce1ffc10c6003ee9281d1c5137deac3fc29f[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Fri Nov 12 18:20:51 2021 +0100

    rust/smb: convert parser to nom7 functions (SMB2)

[33mcommit 5cadb878ffb0f8a8277de2a3a23510d4cb5dd537[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Fri Nov 12 17:38:14 2021 +0100

    rust/smb: convert parser to nom7 functions (SMB3)

[33mcommit 4c97dfa851719e8352e7fe5b3b8c5cc17260ee7a[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Fri Nov 12 17:28:45 2021 +0100

    rust/smb: convert parser to nom7 functions (NTLM/SSP records)

[33mcommit 3da816eb23001343703b3ea8606f634286ca8242[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Fri Nov 12 14:32:09 2021 +0100

    rust/smb: convert parser to nom7 functions (NBSS records)

[33mcommit 90f9450971596c043c6834f11838c502a4fa42ea[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Fri Nov 12 13:45:40 2021 +0100

    rust: add nom7 combinator take_until_and_consume

[33mcommit e4b523920277f1252025ea85163221fe8a7e1a75[m
Author: Lukas Sismis <lukas.sismis@gmail.com>
Date:   Wed Dec 8 19:26:07 2021 +0100

    doc: fix typo in "Stream engine" documentation

[33mcommit dd32238667f08c7211ae4fa27cfe43af7cffd52d[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Nov 29 10:59:10 2021 +0100

    ftp: do not set alproto if one was already found
    
    Ticket: 4857
    
    If a pattern such as GET is seen ine the beginning of the
    file transferred over ftp-data, this flow will get recognized
    as HTTP, and a HTTP state will be created during parsing.
    
    Thus, we cannot override directly alproto's values
    
    This solves the segfault, but not the logical bug that the flow
    should be classified as FTP-DATA instead of HTTP

[33mcommit a02f263e5640432e50376866de824810f13d8b4b[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Dec 10 08:00:23 2021 +0100

    app-layer/htp: cleanup test

[33mcommit 0a1c3267e6b3279eba9e642acf0c737afa81381d[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Dec 10 14:05:35 2021 +0100

    htp: rename callbacks to make purpose clearer

[33mcommit 258415b23f455e3aaee6d97a0e485e5690959011[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Sat Dec 11 08:12:31 2021 +0100

    stream: unify ack'd right edge handling
    
    Use util function in all code needing the ack'd data.

[33mcommit ac11502629c2066e1358e48b6a2ccab930050410[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Dec 3 07:57:52 2021 +0100

    detect/engine: store buffer name in local array
    
    Instead of storing a name and description as a pointer in DetectBufferType
    store them in fixed size arrays. This is in preparation of runtime registration
    of buffer types, where a constant name/desc is not available.

[33mcommit e93dc24383443398d6a2e888931d7000b392c09a[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Dec 7 09:56:51 2021 +0100

    mingw: add bcrypt to LDADD for rust compilation

[33mcommit 6ee818cb3e41e54cae56535fda0fc19befbc71a1[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Nov 26 13:06:00 2021 +0100

    stream/reassembly: ignore min_inspect_depth on TCP state CLOSED

[33mcommit 55202f826ade7f57bafb9292144f1092512a9f7b[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Nov 26 11:05:46 2021 +0100

    detect/http: don't set min-inspect-depth higher than setting

[33mcommit 27dd0c6b3def8149168eda8ae93aeee082645ff1[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Nov 30 14:21:48 2021 +0100

    eve/ftp-data: log alert metadata in ftp-data object
    
    Ticket: 4860
    
    instead of directly in root

[33mcommit 87d9c44ec504f459578fdb551b16a1015b8239c7[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Nov 30 09:19:20 2021 +0100

    rust: export constants via cbindgen
    
    so that constants are not defined twice in Rust anc C
    So that we are sure they have the same value

[33mcommit 784558df2e27455e0baf79d92253d21887ba3f49[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Jun 4 15:06:10 2021 +0200

    mime: handles multiple sections for a parameter
    
    Ticket: 4386
    
    as per RFC2231.
    For instance filename can be split between filename*0,
    filename*1, etc...

[33mcommit 8feb9c35ae24045d80cc4499923d66da589d35cb[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Jun 4 15:05:14 2021 +0200

    mime: move FindMimeHeaderTokenRestrict to rust
    
    Also fixes the case where the token name is present
    in a value

[33mcommit 76131c8cff1c5b895b49f2fecdf37764551cc7bb[m
Author: Modupe Falodun <falodunmodupeola@gmail.com>
Date:   Mon Dec 6 09:28:42 2021 +0100

    detect-ipopts: convert unittests to FAIL/PASS APIs
    
    Bug: 4047

[33mcommit 1b10848d84f6417a4030e5814db246b369b77593[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Dec 2 10:29:40 2021 +0100

    mqtt: fix transaction completion
    
    Ticket: 4862
    
    A transaction to client is always considered
    complete in the direction to server and vice versa.
    Otherwise, transactions are never complete for
    AppLayerParserTransactionsCleanup

[33mcommit ecce116117cf3ea2d74c3916602dee40ee1c64fd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 24 07:45:39 2021 +0200

    detect/fast_pattern: allow for rule time registration
    
    In preparation of more dynamic logic in rule loading also doing
    some registration, allow for buffers to be registered as fast_patterns
    during rule parsing.
    
    Leaves the register time registrations mostly as-is, but copies the
    resulting list into the DetectEngineCtx and works with that onwards.
    This list can then be extended.

[33mcommit db272443791896a2e29f9bf267e132f05d5f5ea1[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Dec 3 09:45:56 2021 +0100

    detect: add buffer helper functions

[33mcommit 707b75ccda27a12e670a2e25642e1afb692e5784[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 22 21:07:17 2021 +0200

    detect: split register time and detect load time buffer funcs

[33mcommit 5bcaae0a018ad3062f1023968b6340819166a039[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 22 19:26:02 2021 +0200

    detect: use hashes for all buffer to id
    
    Instead of a map that is constantly realloc'd, use 2 hash tables for
    DetectBufferType entries: one by name (+transforms), the other by
    id. Use these everywhere.

[33mcommit 51dcf3d76a80e442809481fb77fa3c566fa65c0a[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Dec 3 08:01:51 2021 +0100

    detect: increase SigMatch type from u8 to u16

[33mcommit bb3d49d5bf6376756e124a79b4f25799d934617c[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Tue Nov 30 13:35:48 2021 +0100

    detect: use bool for uint16_t used as bool

[33mcommit 6d7c1519edf2ddd251ea5ec429bdade242527331[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Dec 3 16:26:32 2021 +0100

    common: fix missing ; in header

[33mcommit c9d222a4832fb6a7c4eceede35c4da7d7be90bfd[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Feb 18 15:43:03 2021 +0100

    detect: allows <> syntax for uint ranges

[33mcommit 5af4ef45323552a9f958bf5d8fc412431e326605[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Feb 17 17:26:38 2021 +0100

    detect: use prefilter values for modes

[33mcommit 3f15b2492cc4341256b010524ef2626814a7cb3a[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Feb 17 17:14:21 2021 +0100

    detect: errors for rule with impossible conditions
    
    Such as >255 for an uint8 field

[33mcommit 7c636d25c7309f7f96d35b18900ec36ad6f6e0d0[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Fri Oct 15 16:36:24 2021 +0100

    userguide: (nit) fix typo in lua-output page

[33mcommit 4256c1ccd5d95c1889a6e28cb1b9124568ccac67[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Thu Oct 14 23:06:01 2021 +0100

    userguide: rename pg Lua Scripting->Lua Detection
    
    Since we can have scripts for output _or_ detection, it seems more
    clear to rename this page to add more meaning

[33mcommit 59e5a21fcac8f70cd523835467959e1b2be63ca7[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Thu Oct 14 22:48:47 2021 +0100

    userguide: update buffers list for lua-scripting

[33mcommit e7f1736f3ab512d9d63e92152a984bf64c27039b[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Thu Oct 14 22:42:11 2021 +0100

    userguide/lua: add explanation about `need` diffs
    
    The differences on how the `need` key works, depending on script
    usage (output or detection) confuses users, sometimes (cf doc#4725).
    While we don't fix that, just explain this behavior.

[33mcommit f4449d3fb3d4ccf83d7065a5f4bb017c1079460e[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Nov 23 22:13:56 2021 +0100

    fuzz: restrict flags passed to AppLayerProtoDetectGetProto
    
    Completes commit 05f9b3ffc687d1afcfc5984ac9f0ce1888d06bf5

[33mcommit 7732efbec2a35db5c9a9b73f8c373d99813f3a14[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Nov 16 16:43:57 2021 -0600

    app-layer: include decoder events in app-layer tx data
    
    As most parsers use an events structure we can include it in the
    tx_data structure to reduce some boilerplate/housekeeping code
    in app-layer parsers.

[33mcommit 0caaf6bd23afac5fbf370aeb3d3310f38e938087[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Nov 23 13:59:47 2021 +0100

    range: prevents memory leak of file from HTTP2
    
    Ticket: 4811
    Completes commit c023116857426137eb0c7240b80e99a8940f3c5b
    
    state.free should also close files with ranges
    as state.free_tx did already
    
    And file_range field should be reset so that there is no
    use after free.

[33mcommit 86f5d33f75da4087a76e1df7789f2695bbbc1001[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Nov 22 09:42:40 2021 +0100

    enip: fix int warnings
    
    There seems to fix a real bug when an ENIP connection
    has more than 65k transactions

[33mcommit 86b5c81ea2606de66bf08b00fdfb8ec0735e7df4[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Nov 22 09:13:54 2021 +0100

    dnp3: fix int warnings
    
    There is a hack to know the type of an integer
    and do an explicit cast in the python script
    generating the C file
    
    Also extends some bounds check against negative values

[33mcommit 53fc70a9a73cd157ed8235f6a73a8752f8f1396a[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Sat Oct 23 13:04:48 2021 +0200

    protodetect: fix int warnings
    
    There is actually a real evasion with AppLayerProtoDetectPMGetProto
    using u16 instead of u32 for buflen

[33mcommit 743fb12aa8271c46bce3ec35c3a61834088c7522[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Sat Oct 23 12:25:39 2021 +0200

    ci: adds default warning flag about float conversions

[33mcommit 46981ccd98962119960b1f40e5d413bdb61c8517[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Sat Oct 23 12:23:14 2021 +0200

    warning: explicit casts to double

[33mcommit b88f015bfbdb3bc311122c538a1fe35efe9e608e[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Sat Oct 23 12:22:54 2021 +0200

    source/pcap: remove unused code

[33mcommit 05f9b3ffc687d1afcfc5984ac9f0ce1888d06bf5[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Nov 22 15:08:52 2021 +0100

    fuzz: restrict flags passed to AppLayerProtoDetectGetProto
    
    So that rust does not panic with an unhandled value

[33mcommit 39bf623fdd4606316b3021560c27a0c5eca90e2d[m
Author: Victor Julien <vjulien@oisf.net>
Date:   Fri Nov 19 07:03:10 2021 +0100

    af-packet: add send error counter

[33mcommit 373278438d425983e743c997c102639832e11681[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 5 20:09:17 2021 +0100

    packetpool: ReleasePacket callback check on getter
    
    Any packet coming from the pool should have `PacketPoolReturnPacket`
    as its callback. Check that this is the case.

[33mcommit 8a5b945c7be94c48532826b8d6ae6bfe799c067b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 5 13:50:18 2021 +0100

    af-packet: only ref mpeer if needed in tpacket v2
    
    We only use it in autofp mode, for reference counting purposes.
    
    Removes 2 atomic operations per packet in the more common workers
    runmode.

[33mcommit d272075da0072611bed08922c3f03f7acffbce99[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 5 12:23:48 2021 +0100

    af-packet: minor output updates

[33mcommit e9c6ad19b33310ed239227247a8b6a0baf995e3e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 5 11:21:02 2021 +0100

    af-packet: optimize packet setup
    
    Don't set fields we don't use in V3.

[33mcommit cad0ff9ebb30b1c88b0d3cf7ef7511bdf15b4fd0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 4 13:25:03 2021 +0100

    af-packet: add counters on how poll() works
    
    Use `capture.afpacket.*` counter name space.

[33mcommit c7ad3f8d309014077ea1c0b16d59338a9a889f09[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 4 17:38:58 2021 +0100

    af-packet: don't check ifstate per send call in IPS
    
    Instead just accept that the socket state leads to `sendto` errors.
    So print at most one error per socket.

[33mcommit dab036727f6faffd286b9361881367256b05ec9b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 4 10:39:36 2021 +0100

    af-packet: simplify AFPWritePacket
    
    Since return code was ignored by all callers, we can just turn it into a
    void function and slightly simplify the logic.

[33mcommit 3f79f452ad6762f8cc15291362c681be2da153d8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 4 10:05:54 2021 +0100

    af-packet: use BUG_ON for 'impossible' condition

[33mcommit 2fab3ff0e851da759fd1d7214f8f89eea9054e18[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 4 10:00:17 2021 +0100

    af-packet: refactor VLAN hdr handling
    
    Update the packet payload after decode, instead of during IPS send.
    
    This means the updates happen in the capture thread, and the VLAN header
    is available to logging as well.
    
    Ticket: #4805.

[33mcommit b9189946f9f36b13c51e1c3ed2f43e79c5933a54[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 31 21:27:49 2021 +0100

    af-packet: remove tpacket-v1 support
    
    Ticket: #4796.
    
    V2 (for IDS and IPS) and V3 (for IDS) are widely supported. V2 was introduced
    in 2008, so we can safely assume that all systems can run V2+.

[33mcommit 1f6a15cdf3a65d9d911b734dc6a8142dec3b2a7c[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Nov 12 10:53:52 2021 -0600

    app-layer/template: don't always enable if unittests built
    
    314ec77f88325a4e8989e898991b9af493cad3dc had the unintended side affect
    of enabling the template parser and detection buffer if unittests were
    enabled.
    
    Fix this by using the new `Default` method for registering parsers.
    However, the buffer still needs an explicit configuration check.
    
    Also convert Notice debug messages to Debug to reduce output when in
    unittest mode.  If we feel stronly this should still be Notice in the
    template, that is a conversion we can make in the generation script when
    generating a new parser.

[33mcommit 6a470a84e799bbb9d86d7bf03a064a4b64a8ff2e[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Nov 10 09:43:56 2021 -0500

    tftp: Change references to echo
    
    This commit changes the references to the "echo" protocol to tftp. The
    references to echo are part of the template parser code.

[33mcommit 23faeaea5cd525a0e47a6ecb07bdf2a51929d0f9[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Nov 10 09:20:30 2021 -0500

    ftp: Remove diagnostic print
    
    This commit removes a diagnostic message displayed during extraction of
    the EPSV port.

[33mcommit ca7d097225c2eeb21df28dd17658d74af4999e95[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Aug 20 09:10:26 2021 -0400

    netmap: V14 API changes
    
    This commit modifies the Netmap packet handling to use API version 14.
    
    @bmeeks8 contributed many changes instrumental to this effort.

[33mcommit 3496e543af98dac2a673974a569d685ee321031a[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon Aug 23 08:46:10 2021 -0400

    util: Add sys/ioctl.h to common include
    
    This commit adds another system include file based on autoconf to the
    common Suricata include file for convenience.

[33mcommit 84ee01dbe92645e908540871357c7185f767c519[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Sep 11 09:03:33 2021 -0400

    util/log: Include device name with thread count

[33mcommit 1c1c21be9ea88aeca15306dafaf7b8343d2cd46e[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Aug 21 08:57:18 2021 -0400

    config/netmap: Check for latest API version
    
    This commit checks for the latest Netmap API version.

[33mcommit c023116857426137eb0c7240b80e99a8940f3c5b[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Nov 8 13:33:27 2021 +0100

    range: prevents memory leak of file from HTTP2
    
    If a HTTP2 transaction gets freed before the end of the range
    request, we need to have the files container which is in
    the state, to transfer owernship of this file to the files
    container.
    
    Ticket: 4811

[33mcommit 15649424a76d01eb332d85620ffc4956d4f3d9be[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Nov 8 14:18:30 2021 +0100

    conf: avoid quadratic complexity
    
    Ticket: 4812
    
    When adding many sequence nodes

[33mcommit acb3ec6db159e85b957775ad6cdc284626a7dc9f[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Tue Nov 9 20:17:27 2021 +0100

    rust/nfs: convert parser to nom7 functions (NFS v2 records)

[33mcommit ea1d03f8e38aca376adcb80b1851b97a0816a5e9[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Mon Nov 8 23:11:24 2021 +0100

    rust/nfs: add a maximum number of operations per compound
    
    The `count` combinator preallocates a number of bytes. Since the value
    is untrusted, this can result in an Out Of Memory allocation.
    Use a maximum value, large enough to cover all current implementations.

[33mcommit 0ffe12333028894b6999a7e65b565a2782e90b53[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Mon Nov 8 16:38:17 2021 +0100

    rust/nfs: convert parser to nom7 functions (NFS v3 and v4 records)

[33mcommit c33cfed7042b6b30871c88864896b7d9c8ac7fd6[m
Author: Modupe Falodun <falodunmodupeola@gmail.com>
Date:   Wed Nov 10 02:05:05 2021 +0100

    detect-fragoffset: convert unittests to FAIL/PASS APIs
    
    Bug: #4040

[33mcommit 7be793f7b479d66977ff68ea1ca3c832c744b3d2[m
Author: Corey Thomas <cthomas@oisf.net>
Date:   Wed Nov 10 08:21:38 2021 -0500

    ci: add fedora 35 to builds

[33mcommit 52b9c12f41d890cda340fe3b1c7e7e3e9d673d73[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Nov 10 16:38:35 2021 -0600

    smtp: log transaction even if no email present
    
    The SMTP transaction logger was not writing the log if the email
    portion of the logger failed, such as in the case of STARTTLS
    where this is no email decoded.
    
    Ticket #4817

[33mcommit fcf399b02c0c3261331f2676d62bdb3d8f05b266[m
Author: Sam Muhammed <ghostinthehive.vx@gmail.com>
Date:   Fri Nov 12 14:17:50 2021 +0200

    detect/proto: convert unittests to FAIL/PASS APIs
    
    Task #4027

[33mcommit 2a800d572c35858cc21af1148b281412a42835dd[m
Author: Modupe Falodun <falodunmodupeola@gmail.com>
Date:   Sun Nov 21 03:34:41 2021 +0100

    detect-icode: convert unittests to FAIL/PASS APIs
    
    Bug: #4045

[33mcommit 97801c795ba58a9d1d3cb34441eff3b806d9ad3e[m
Author: Modupe Falodun <falodunmodupeola@gmail.com>
Date:   Sun Nov 21 02:25:15 2021 +0100

    detect-id: convert unittests to FAIL/PASS APIs
    
    Bug: #4046

[33mcommit 4076c8b762ee074fc50e4cce12c8e26fffb73665[m
Author: Sam Muhammed <ghostinthehive.vx@gmail.com>
Date:   Sat Nov 13 19:35:43 2021 +0200

    detect/siggroup: convert unittests to FAIL/PASS APIs
    
    Task #4028

[33mcommit e21a50fee605561e0034adb6e7644ed96a1a4c7a[m
Author: Benjamin Wilkins <benjamin.wilkins@uwaterloo.ca>
Date:   Wed Oct 20 16:21:08 2021 -0400

    lua: Fix SCRule functions for match scripts
    
    Save Signature structure to lua register so SCRule functions can work
    in match scripts, where no PacketAlert is present
    
    Resolves Feature #2450

[33mcommit 9b71f567287b38501e52c4094e3d555cbec1b891[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Nov 16 23:15:13 2021 -0600

    modbus: free eve thread context on deinit
    
    Was triggering ASAN leak detection.

[33mcommit eb6cc6293717e10f881edd6713fb8dc6ef78d3b7[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Nov 16 19:34:11 2021 -0600

    dhcp: fix url in comment
    
    rustdoc was complaining about the format of the URL in a comment
    while trying to generate documentation. Convert the comment to a
    non-rustdoc comment for now to satisfy rustdoc.

[33mcommit 55ff912ee7fe81ee221dc62e0b91e28af5a45edf[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Nov 16 16:35:29 2021 -0600

    app-layer: remove IsTxEventAware: never used
    
    The function AppLayerParserProtocolIsTxEventAware is not used so
    remove.

[33mcommit b57280ff4894d31f9f0d3324bb7a64424daea3a5[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Nov 16 17:52:58 2021 -0600

    rdp: fix transaction id
    
    By our convention the transaction ID is incremented then applied
    to the new transaction. And the generic transaction iterator
    requires this behaviour.

[33mcommit 1ad71b96daa2b2655691cfce2a15ccd754d9b290[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Nov 10 09:51:15 2021 -0600

    app-layer: remove tx detect state setter and getter
    
    Instead access detect state through AppLayerParserGetTxData.

[33mcommit 9c67c634c1a490471741fe77857a142a46ce7611[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Nov 9 17:14:20 2021 -0600

    app-layer: include DetectEngineState in AppLayerTxData
    
    Every transaction has an existing mandatory field, tx_data. As
    DetectEngineState is also mandatory, include it in tx_data.
    
    This allows us to remove the boilerplate every app-layer has
    for managing detect engine state.

[33mcommit f4b4d531b052f5499c121cf21a2b2ec2aa9fe818[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Nov 10 13:34:10 2021 -0600

    rdp: add tx iterator

[33mcommit 238ec953b7ea5092f79e9383efcc893352190895[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Nov 10 13:38:22 2021 -0600

    krb5: use tx iterator

[33mcommit ef0c35195308384b9f2bbf8a78fb69167f76f889[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Nov 10 13:31:54 2021 -0600

    ntp: add tx iterator

[33mcommit 871fb035b445d823d2c14dd1a7e4d67170d29444[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Nov 10 13:30:04 2021 -0600

    sip: add tx iterator

[33mcommit d6b2d7e16ab08be8e98df212e0e1b730f86c503a[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Nov 10 13:25:23 2021 -0600

    ike: add tx iterator
    
    For IKE the manual iterator functions were there, but never
    registered. So this commit does add a tx iterator to ike.

[33mcommit 3f2d2bc12b62e71b4e2582aeb0b365df565f3f65[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Nov 10 13:22:15 2021 -0600

    snmp: use generic tx iterator

[33mcommit ac4c5ada2f0765d7b29aba7dad071db2d7ff2dc6[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Nov 10 12:03:53 2021 -0600

    dhcp: use generic tx iterator

[33mcommit 54e62ddf7109c354acdb7f63d454612c09aad0bf[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Nov 10 12:00:50 2021 -0600

    http2: use generic tx iterator

[33mcommit 6cffecfe3e6811df72bdba6d2f82f2fd41f6f8fc[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Nov 10 11:58:19 2021 -0600

    template: use generic tx iterator

[33mcommit a93675573190db060571103a1e3ef9ce5152ab48[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Nov 10 11:54:23 2021 -0600

    nfs: use generic tx iterator

[33mcommit 0188a01dafce1fa4b35da67762f0ee96ded77777[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Nov 10 11:24:14 2021 -0600

    rfb: use generic tx iterator

[33mcommit b3354096904f4d46d6d95654759b23d30e88bfcb[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Nov 10 11:20:13 2021 -0600

    mqtt: use generic tx iterator

[33mcommit d71bcd82d92fb67577e2aed38cb6b3b367c0c433[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Oct 25 17:18:59 2021 -0600

    modbus: use generic tx iterator

[33mcommit fcfc9876ceb46a1a69a8c4c955cd65bb03eea668[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Oct 25 17:01:20 2021 -0600

    smb: use generic tx iterator

[33mcommit 049d43212ee7954dea43c5b71d8d2f184189aea5[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Oct 14 12:37:03 2021 -0600

    rust/app-layer: provide generic implementation of iterator
    
    Create traits for app-layer State and Transaction that allow
    a generic implementation of a transaction iterator that parser
    can use when the follow the common pattern for iterating
    transactions.
    
    Also convert DNS to use the generic for testing purposes.

[33mcommit 6d5f59696dda77e1e7b2c45f51413b76690da4e9[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Wed Nov 17 16:43:23 2021 +0100

    profiling: fix profiling with sample rate
    
    Rules profiling was returning invalid results when used with sample
    rate. The problem was that the sample condition was run twice in the
    packet flow. As a result, the second pass was not initializing the
    variable storing the initial CPU ticks and the resulting performance
    counters were reporting invalid values.
    
    Bug: #4836.

[33mcommit 16f4e5f31c954b50d878e4579a5feeebc04444dd[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Nov 19 12:33:06 2021 +0100

    detect: file_data keyword works on nfs protocol
    
    Ticket: #4839

[33mcommit 26c7d3cc35712f219d683e569f9f38b2e5246688[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Wed Sep 8 07:14:25 2021 +0530

    http2: remove needless borrows

[33mcommit f3a1e3b92e1946f2bd98d60e8d195af4c4414f94[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Thu Aug 12 22:13:31 2021 +0530

    core: Remove unneeded consts

[33mcommit b5a123adb18d6fb7433c3b818dbcd4d4990c795c[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Thu Aug 12 22:11:38 2021 +0530

    ssh: use Direction enum

[33mcommit baf30cfc05f1f5d0669cc9551454d11ac2933d58[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Thu Aug 12 22:06:09 2021 +0530

    snmp: use Direction enum

[33mcommit 89cb337930ceea9cb61ac2f4d64f68b2e2817509[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Thu Aug 12 21:59:53 2021 +0530

    smb: use Direction enum

[33mcommit 8f9f78c2d0865fde1d82d257cd34220d3be5d972[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Thu Aug 12 18:52:13 2021 +0530

    sip: use Direction enum

[33mcommit 11c438a07d94bef3ce97f2911b4adffe106399e2[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Thu Aug 12 18:41:12 2021 +0530

    nfs: use Direction enum

[33mcommit a7ac79bed7afc43c8de4ad1023769f39b79847ba[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Thu Aug 12 18:11:42 2021 +0530

    mqtt: use Direction enum

[33mcommit 209e2f17fa7fa8dd51495e1035a74ec68c529138[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Thu Aug 12 18:09:15 2021 +0530

    krb: use Direction enum

[33mcommit 243960a5117693af66e3617ebc75e51027545bc7[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Thu Aug 12 18:00:53 2021 +0530

    ike: use Direction enum

[33mcommit ee5b300ccf975ace601f6f2c77863a9952bc7d95[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Thu Aug 12 17:27:53 2021 +0530

    http2: use Direction enum

[33mcommit 0c6e9ac93196f03021bda8252ba50e11ca028f1b[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Thu Aug 12 17:51:07 2021 +0530

    files: use Direction enum

[33mcommit a19d2b4e1ed7e20b401df3bd2fcd16d34780cbde[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Thu Aug 12 15:24:51 2021 +0530

    dns: use Direction enum

[33mcommit a866499bcaa676768f99a2bd36f5193fd4a4e07e[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Wed Aug 11 16:59:48 2021 +0530

    dcerpc: use Direction enum

[33mcommit 9512bfd729863fb6db0991c03932d1b8471cf289[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Sat Sep 12 00:18:21 2020 +0530

    core: add Direction enum
    
    Ticket: 3832

[33mcommit b25350ee13dc61c6affb18861489fbee2941ad08[m
Author: Andreas Dolp <dev@andreas-dolp.de>
Date:   Thu Oct 28 06:56:27 2021 +0200

    doc: Fix typo in documentation of rule keyword flow

[33mcommit 6cb6225b28c5d8e616a420b7d05b129ba2845dc0[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Sep 16 16:54:37 2021 +0200

    tcp: rejects FIN+SYN packets as invalid
    
    Ticket: #4569
    
    If a FIN+SYN packet is sent, the destination may keep the
    connection alive instead of starting to close it.
    In this case, a later SYN packet will be ignored by the
    destination.
    
    Previously, Suricata considered this a session reuse, and thus
    used the sequence number of the last SYN packet, instead of
    using the one of the live connection, leading to evasion.
    
    This commit errors on FIN+SYN so that they do not get
    processed as regular FIN packets.

[33mcommit 50e2b973eeec7172991bf8f544ab06fb782b97df[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 5 14:48:27 2021 +0200

    stream/tcp: handle RST with MD5 or AO header
    
    Special handling for RST packets if they have an TCP MD5 or AO header option.
    The options hash can't be validated. The end host might be able to validate
    it, as it can have a key/password that was communicated out of band.
    
    The sender could use this to move the TCP state to 'CLOSED', leading to
    a desync of the TCP session.
    
    This patch builds on top of
    843d0b7a10bb ("stream: support RST getting lost/ignored")
    
    It flags the receiver as having received an RST and moves the TCP state
    into the CLOSED state. It then reverts this if the sender continues to
    send traffic. In this case it sets the following event:
    
        stream-event:suspected_rst_inject;
    
    Bug: #4710.

[33mcommit 3212fa7d2bc514f4e759dbb9e0002203c814a9b5[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Oct 12 13:29:39 2021 +0200

    ntp: fixes leak of de_state
    
    Bug: #4752.

[33mcommit 28a3181a2de0101b0796058eeffac0180eef35d6[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Oct 12 13:29:25 2021 +0200

    snmp: fixes leak of de_state
    
    Bug: #4752.

[33mcommit f37240a3e2758756f345a237b6d348ab38fb758b[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Aug 23 17:31:51 2021 +0200

    smb: midstream probing checks for netbios message type
    
    If it is available
    
    Bug: #4620.

[33mcommit be617a3c1b25a7a4b1acdc7b65d3733d4f48a1f9[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Jul 16 14:22:28 2021 +0200

    protodetect: opposing side cannot change protocol
    
    Ticket: #4562
    
    As the data which triggered the opposing side
    was the same protocol and not another one,
    that means the protocol change failed.
    
    Prevents a memory leak in later call of AppLayerParserParse
    which would allocate a new state and leak the old one

[33mcommit f44bbbb9ada39893279965a98831620074205871[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Jul 14 19:40:42 2021 +0200

    smtp: completes RSET transaction on last multiline
    
    Bug: #4561.

[33mcommit f211a330ddfbac8a6d0b85ea5f2ee0fcc1ccad3d[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Jul 1 15:04:58 2021 +0200

    swf: right input length for decompression
    
    Also when compress_depth reaches buffer_len
    
    Bug: #4536.

[33mcommit 8f8823b6f2b0a26b551397b8b574104bfd37e9f5[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Sep 13 11:22:36 2021 +0200

    rust: right condition for both uint to be zero
    
    Theay can overflow leading to their addition to be zero
    
    If a NFS read reply indicates a count of 0xFFFFFFFF
    
    Bug: #4680.

[33mcommit 689ac97d7225fd43b64c103034b1fdf63fa4d324[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Sep 13 12:27:51 2021 +0200

    inspect: debug validation to ensure correct argument

[33mcommit c3339c853e3b35d896db68644ee7557fb725da18[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Sep 13 12:18:34 2021 +0200

    detect: fixes InspectionBuffer id with transforms
    
    When InspectionBufferGet gets called with base_id
    Later InspectionBufferSetup must also be called with base_id
    
    In case there were transforms, we had base_id != list_id
    
    Not calling InspectionBufferSetup with the right id
    resulted in leaving a dangling pointer,
    because it was not added to det_ctx->inspect.to_clear_queue
    
    Bug: #4681.

[33mcommit 244dd11c34152fbdb01636da8a9fa4a9fa0de050[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 7 06:25:31 2021 +0100

    flow/manager: fix flows not evicted & freed in time
    
    Flows have been shown to linger for a long time w/o giving up their
    resources. This would lead to higher memory use and memcaps getting
    reached.
    
    Three main causes have been identified:
    
    Slow passes hash passes. By default the flow manager will scan the
    flow hash slowly. It is based on the flow timeout settings, and with
    the default config it will take 4 minutes for a full scan to be
    complete. This leaves a window for flows that are timed out to linger
    for minutes longer than expected.
    
    Flow Manager yields under pressure. The per row TryLock causes work
    to be delayed more. The Flow manager will use trylock on a hash row
    and will yield immediately if the row is busy. This means that it will
    take a full pass before the row is revisited again. If the row holds
    busy flows, this could happen many times in a row.
    
    Flow Manager favors evicted flows over active flows. The Flow Manager
    will only process the evicted flows if they are present. These flows
    have been evicted by workers. The active flows on that hash row will
    have to wait until the next hash pass. Of course by then there could
    be more evicted flows.
    
    Combined these factors could lead to flows not being considered for
    freeing and logging for a very long time, potentially even indefinitly.
    
    The patch addresses the latter two flow manager issues by no longer
    using TryLock. It will now simply wait for the lock to be released and
    then do its work on it. Additionally for each row both the evicted list
    and the active flow list will be processed.
    
    Bug: #4650.

[33mcommit ace349d4d9208e18836c4312b220a93b1e3b154c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 5 11:31:58 2021 +0100

    af-packet: simplify tpacket-v2 setup code
    
    Setup can no longer fail, so make the function void and remove dead
    error checking code.

[33mcommit 2cbfcce0ac01a786f5ae4c2935eeb4970e773889[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 4 07:52:59 2021 +0100

    af-packet: PacketSetData can't fail; remove check
    
    PacketSetData() can't fail unless the input pointer is NULL, which is
    impossible from the af-packet paths calling it. Remove error check to
    avoid possible branching.

[33mcommit 12252ba751053ca93e5ff511a1d01aa6233f7f46[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 3 21:32:46 2021 +0100

    af-packet: fix if/down issues with tpacket-v2/autofp
    
    The AFPSwitchState function would close the socket and free the
    other resources when the interface went down _and_ the ref cnt was
    0. However in autofp mode it was common to get to this point while
    packets were still processed in the autofp worker threads, meaning
    the ref cnt would not be 0. On the interface coming back up the
    initialization code would overwrite the socket and rings, leading
    to resource leaks.
    
    Socket ref cnt is decremented from the v2 release callback. If the
    callback would get to ref cnt 0, the packet would not be released
    in the kernel, but it would (possibly) close the socket if the
    iface was down, but not free other resources.
    
    This patch changes the logic to first release the packet to the
    kernel and then decrement the ref cnt and it makes the main receive
    loop the only one responsible for opening and closing sockets. Wait
    with closing the socket and rings until the ref count is 0, which can
    happen after AFPSwitchState is called due to packets still being
    processed by autofp worker threads.
    
    Bug: #4803.

[33mcommit 3f8e15f70cdb5f81909ebf43504f98e184a8e848[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 3 15:02:12 2021 +0100

    af-packet: packet checks into debug validate check

[33mcommit 5e05fedc90d8547f193e9ac2b45b8ccb227078b1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 31 21:47:21 2021 +0100

    af-packet: hide all ebpf/bypass logic behind guards
    
    Leave no runtime checks for bypass/ebpf/xdp if not compiled in.

[33mcommit e63db9d1d242d607ad27e0b6e0aad72baf34b42f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 31 21:34:31 2021 +0100

    af-packet: minor code cleanups

[33mcommit e3d20acb98141fc8d109302158e898ed388f1b5a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 3 21:09:46 2021 +0100

    af-packet: simplify socket handling in tpacket v3
    
    Tpacket v3 only supports workers mode, which means the packet that would
    reference a socket won't leave the thread. Therefore keeping a ref count
    on the socket is not needed.
    
    This patch removes the per packet reference count increment. The decrement
    was missing, so this fixes the ref cnt handling so that after a iface up/
    down capture can recover.
    
    It should also lead to a minor performance increase as we avoid a round
    of atomic operations per packet.
    
    Bug: #4804.
    Bug: #4801.

[33mcommit 6eaaafc360b5a974a6fb7302e57f5c23fc567ad3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 5 15:39:17 2021 +0100

    af-packet: minor config parsing cleanup

[33mcommit be122ceb8f2a76abc4841cdec1d831b15a401f5b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 31 21:17:41 2021 +0100

    af-packet: remove obsolete define

[33mcommit 558930a192ec8732a3ea3167cc87f38eef6f6ad7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 31 22:36:29 2021 +0100

    af-packet: remove zero copy flag
    
    Flag was always set for tpacket v2 and v3, which meant the check
    for it in the packet setup paths were useless.

[33mcommit ad862fff371cddd19329d9ac0ddb106e1ad6b1b3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 31 10:28:18 2021 +0100

    af-packet: avoid flag colision with kernel
    
    Avoid colision of TP_STATUS_USER_BUSY with TP_STATUS_TS_RAW_HARDWARE,
    both were using bit 31.
    
    Bug: #4800.

[33mcommit a022648b9e6910ca05a0564c2ead9344a4c34312[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 31 22:13:19 2021 +0100

    af-packet: fix soft lockup issues
    
    The Suricata AF_PACKET code opens a socket per thread, then after some minor
    setup enters a loop where the socket is poll()'d with a timeout. When the
    poll() call returns a non zero positive value, the AF_PACKET ring will be
    processed.
    
    The ringbuffer processing logic has a pointer into the ring where we last
    checked the ring. From this position we will inspect each frame until we
    find a frame with tp_status == TP_STATUS_KERNEL (so essentially 0). This
    means the frame is currently owned by the kernel.
    
    There is a special case handling for starting the ring processing but
    finding a TP_STATUS_KERNEL immediately. This logic then skip to the next
    frame, rerun the check, etc until it either finds an initialized frame or
    the last frame of the ringbuffer.
    
    The problem was, however, that the initial uninitialized frame was possibly
    (likely?) still being initialized by the kernel. A data race between the
    notification through the socket (the poll()) and the updating of the
    `tp_status` field in the frame could lead to a valid frame getting skipped.
    
    Of note is that for example libpcap does not do frame scanning. Instead it
    simply exits it ring processing loop. Also interesting is that libpcap uses
    atomic loads and stores on the tp_status field.
    
    This skipping of frames had 2 bad side effects:
    
    1. in most cases, the buffer would be full enough that the frame would
       be processed in the next pass of the ring, but now the frame would
       out of order. This might have lead to packets belong to the same
       flow getting processed in the wrong order.
    
    2. more severe is the soft lockup case. The skipped frame sits at ring
       buffer index 0. The rest of the ring has been cleared, after the
       initial frame was skipped. As our pass of the ring stops at the end
       of the ring (ptv->frame_offset + 1 == ptv->req.v2.tp_frame_nr) the code
       exits the ring processing loop at goes back to poll(). However, poll()
       will not indicate that there is more data, as the stale frame in the
       ring blocks the kernel from populating more frames beyond it. This
       is now a dead lock, as the kernel waits for Suricata and Suricata
       never touches the ring until it hears from the kernel.
    
       The scan logic will scan the whole ring at most once, so it won't
       reconsider the stale frame either.
    
    This patch addresses the issues in several ways:
    
    1. the startup "discard" logic was fixed to not skip over kernel
       frames. Doing so would get us in a bad state at start up.
    
    2. Instead of scanning the ring, we now enter a busy wait loop
       when encountering a kernel frame where we didn't expect one. This
       means that if we got a > 0 poll() result, we'll busy wait until
       we get at least one frame.
    
    3. Error handling is unified and cleaned up. Any frame error now
       returns the frame to the kernel and progresses the frame pointer.
    
    4. If we find a frame that is owned by us (TP_STATUS_USER_BUSY) we
       yield to poll() immediately, as the next expected status of that
       frame is TP_STATUS_KERNEL.
    
    5. the ring is no longer processed until the "end" of the ring (so
       highest index), but instead we process at most one full ring size
       per run.
    
    6. Work with a copy of `tp_status` instead of accessing original touched
       also by the kernel.
    
    Bug: #4785.

[33mcommit 8b08b0343d8a5a6b3d7d2ccb22fa4c4707400932[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 2 17:16:31 2021 +0100

    af-packet: define all current TP_STATUS_* flags

[33mcommit fac33118ccfbdb700ea64e752778276fb23ee0a1[m
Author: Modupe Falodun <falodunmodupeola@gmail.com>
Date:   Tue Nov 2 22:18:51 2021 +0100

    detect-rfb-secresult: convert unittest to FAIL/PASS APIs
    
    Bug: #4055

[33mcommit e9779b0fa0b63322e36bd139f61a3c9daf191b16[m
Author: Modupe Falodun <falodunmodupeola@gmail.com>
Date:   Mon Nov 1 21:19:47 2021 +0100

    detect-sameip: convert unittests to FAIL/PASS APIs
    
    Bug: #4057

[33mcommit 025fd385cd1a219745bd8bb186df0768c9dd7405[m
Author: Sam Muhammed <ghostinthehive.vx@gmail.com>
Date:   Mon Nov 1 14:18:55 2021 +0200

    detect/event: convert unittests to FAIL/PASS APIs
    
    Task #4025

[33mcommit 07ce871da4b385f6f1d86310f5dcdf00e6c79692[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 5 20:05:43 2021 +0100

    packetpool: reset PacketRelease on return to pool
    
    Reset PacketRelease callback to make sure its not set to a capture
    specific callback.
    
    As an example:
    
      0x000055e00af09d35 in AFPReleaseDataFromRing (p=0x7f1d884cb830) at source-af-packet.c:653
      0x000055e00af09dd0 in AFPReleasePacket (p=0x7f1d884cb830) at source-af-packet.c:678
      0x000055e00ab53d7e in TmqhOutputPacketpool (t=0x55e00fb79250, p=0x7f1d884cb830) at tmqh-packetpool.c:465
      0x000055e00af08dec in TmThreadsSlotProcessPkt (tv=0x55e00fb79250, s=0x55e012134790, p=0x7f1d884cb830) at tm-threads.h:201
      0x000055e00af08e70 in TmThreadsCaptureInjectPacket (tv=0x55e00fb79250, p=0x7f1d884cb830) at tm-threads.h:221
      0x000055e00af08f2e in TmThreadsCaptureHandleTimeout (tv=0x55e00fb79250, p=0x0) at tm-threads.h:245
      0x000055e00af0ba76 in ReceiveAFPLoop (tv=0x55e00fb79250, data=0x7f1d884ccb60, slot=0x55e01198e4b0) at source-af-packet.c:1321
      0x000055e00ab55257 in TmThreadsSlotPktAcqLoop (td=0x55e00fb79250) at tm-threads.c:312
      0x00007f1dca9d5609 in start_thread (arg=<optimized out>) at pthread_create.c:477
      0x00007f1dca7c6293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95
    
    Here the packet was a pseudo packet to handle a timeout condition. But
    the ReleasePacket callback was still set to AFPReleasePacket from a
    previous use of the Packet.
    
    Bug: #4807.

[33mcommit 214ea9bea5dd235aa265a6c439390677aa49200a[m
Author: Sam Muhammed <ghostinthehive.vx@gmail.com>
Date:   Wed Nov 3 15:10:52 2021 +0200

    detect/payload: convert unittests to FAIL/PASS APIs
    
    Task #4026

[33mcommit a59299d128747c7cee0fcc25d1095cd948be4e66[m
Author: Modupe Falodun <falodunmodupeola@gmail.com>
Date:   Thu Nov 4 21:35:06 2021 +0100

    detect-gid: convert unittests to FAIL/PASS APIs
    
    Bug: #4041

[33mcommit d581fc82b18219d9c5bef8f0e0c0c42545c7b054[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Tue Nov 2 18:22:51 2021 +0000

    util/unittests: delete PASS_IF macro
    
    The logic flow we want to achieve with unittests, where first we have
    all FAIL statements and then just one PASS statement could become more
    convoluted with the existence of the PASS_IF macro. Besides, what could
    be written as a FAIL_IF might in some cases be written in not so clear
    ways with the PASS_IF option available.
    
    Also: fix inverted check values in documentation, update copyright year
    
    Optimization: #4795

[33mcommit f328ba527a0c0e5d437c62752b68b99d33b6ca8e[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Tue Nov 2 18:27:42 2021 +0000

    detect/dsize: convert unittests to FAIL/PASS API
    
    Also: change them to comply with the deletion of PASS_IF macro &
    condense checks for invalid dsizes in one test, have all checks on same
    valid dsize happen in a single test.
    
    Task: #4021

[33mcommit b3743cf5c043b1412ac4dda565238d3f749d0223[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Thu Oct 28 20:39:45 2021 +0100

    unittests (assorted): remove PASS_IF macro
    
    Also small documentation clean up and test adjusments where that
    was needed.
    
    affected: counters, decode-vntag, detect-mark
    
    Related to #4795

[33mcommit c6e97222b7ea672c10774cef31aac7cf750af405[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Wed Nov 3 11:20:36 2021 +0000

    devguide: add page about rust unittests
    
    Part of the task to offer better guidance on how and when to write
    unit tests or suricata-verify tests
    Also updated linking and index files, as well as testing page to refer
    to the unit tests pages
    
    Doc: #4590

[33mcommit 747d225c84e3f1bd807b165e0cea05a6dadb9a9f[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Wed Nov 3 10:59:20 2021 +0000

    devguide: repurpose unittests page to unittests-c
    
    Part of ongoing task to add more guidance on how to create unittests
    and suricata-verify tests for suri. There will also be a unittests-rust
    page.
    
    Doc: #4590

[33mcommit 5b4c575f3b04addf184e9c81735ba6b15adafce3[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Wed Sep 29 14:40:14 2021 +0100

    devguide: add page about testing
    
    This page offers guidance about when to use unittests or s-v tests,
    and how to create input for those. Also lists other common ways to test
    Suri, such as fuzzing and the CI checks.
    
    Doc: #4590

[33mcommit ce652511bd9343457956ccf3347690fbdd4a9e28[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Mon Nov 1 14:34:34 2021 +0100

    rust/tftp: convert parser to nom7 functions

[33mcommit c525a1337c03e87045395c039ebe8b3c6b475c98[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Sat Oct 30 16:38:51 2021 +0200

    rust/dns: convert parser to nom7 functions

[33mcommit 74be8b94eceefcb21937ce53f18e2192538f04aa[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Sat Oct 30 16:32:38 2021 +0200

    rust/ssh: convert parser to nom7 functions

[33mcommit 8a584c211ea10fe6721b26d3a39364764f39101e[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Sat Oct 30 16:30:04 2021 +0200

    rust/mqtt: convert parser to nom7 functions

[33mcommit d27125d77ac2f2c9177fe76907ec8b5e0e5d7da8[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Thu Sep 2 10:00:09 2021 +0200

    rust/sip: convert parser to nom7 functions

[33mcommit 1046a7d1a3e333b989a7a79fdfbd5a616329d72a[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Wed Sep 1 17:49:27 2021 +0200

    rust/ftp: convert parser to nom7 functions

[33mcommit ebd5883da8131a50df859e94c169888a11b8935f[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Wed Sep 1 17:09:42 2021 +0200

    rust/dhcp: convert parser to nom7 functions

[33mcommit 17170c41aabbb187503470ca03b35d55e888de50[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Wed Sep 1 16:38:51 2021 +0200

    rust: add nom7 dependency

[33mcommit a87c7e5c08b027d104bfa00c6f7858398c2d63a6[m
Author: Modupe Falodun <falodunmodupeola@gmail.com>
Date:   Sun Oct 31 17:59:53 2021 +0100

    rust: remove unnecessary nested match
    
    Bug: #4605

[33mcommit 74c39500c36136697b156eeb3238e647a151e374[m
Author: Modupe Falodun <falodunmodupeola@gmail.com>
Date:   Sun Oct 31 17:31:52 2021 +0100

    rust: fix inherent to string
    
    Bug: OISF#4618

[33mcommit 922a453da5bdcbe6f50d967d60dbbb470774e65d[m
Author: Sam Muhammed <ghostinthehive.vx@gmail.com>
Date:   Tue Oct 19 04:02:42 2021 +0200

    rust(lint): use is_null() instead of ptr::null_mut()
    
    Bug: #4594

[33mcommit 23768c71814aa267672de772d43394727b3428a4[m
Author: Sam Muhammed <ghostinthehive.vx@gmail.com>
Date:   Mon Oct 18 01:26:41 2021 +0200

    rust(lint): use is_null() instead of ptr::null()
    
    Bug: #4594

[33mcommit da0a976e23385b5a575daa285627ee0521736405[m
Author: Sam Muhammed <ghostinthehive.vx@gmail.com>
Date:   Sun Oct 24 05:36:11 2021 +0200

    rust(lint): use let for binding single value
    
    `match` is better used with binding to multiple variables,
    for binding to a single value, `let` statement is recommended.
    
    Bug: #4616

[33mcommit 42d4eb6943727f7b4480a45e651acbf258aa87cf[m
Author: Sam Muhammed <ghostinthehive.vx@gmail.com>
Date:   Thu Oct 28 04:42:38 2021 +0200

    detect-engine: convert unittests to FAIL/PASS APIs

[33mcommit 286c510ece27c8fd408434c1786df26aba0c5581[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 26 11:09:51 2021 +0200

    flow: immediately evict tcp reused flows
    
    Since we already know we're going to no longer use it, might as well
    evict it right away.

[33mcommit 536291054c9694070beac1d19b41bf8a1f9c1d4e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 25 19:15:23 2021 +0200

    flow/bypass: clear memory on bypass
    
    Previously the flow would hold on to the app-layer and segment data
    until the end of the flow, even though it would never be accessed again.
    
    This patch clears app-layer and stream data, but not stream ssn as its
    used in flow logging.
    
    Bug: #4778.

[33mcommit b19d1df69f47b4b85337f1695bc770f4b0703bac[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 25 20:25:39 2021 +0200

    flow/bypass: add util func to check if flow is bypassed
    
    To hide the ifdefs for capture offload.

[33mcommit ab8f289bb652a2aa83bdd476708a5f297cbec83c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 25 19:14:49 2021 +0200

    flow/worker: run housekeeping for bypassed packets
    
    Run flow eviction and flow inject queues for bypassed packets as well,
    to avoid a scenario where these won't get run at all if too much of the
    traffic is bypassed.
    
    Bug: #4779.

[33mcommit 41fee417229feed7636f95acb3c3d7309b9d3122[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 25 22:12:01 2021 +0200

    flow/manager: remove obsolete code

[33mcommit ec7e0561e8356371c7ec1c2b285f267424558f81[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 20 13:20:32 2021 +0200

    flow/bypass: use_cnt desync'd on bypassed flows
    
    Locally bypassed flows had unsafe updates to `Flow::use_cnt` leading to a race
    issue. For a packet it would do the flow lookup, attach the flow to the packet,
    increment the `use_cnt`. Then it would detect that the flow is in the bypass
    state, and unlock it while holding a reference (so alos not decrementing the
    `use_cnt`). When the packet was then returned to the packet pool, the flow would
    be disconnected from the packet, which would decrement `use_cnt` without holding
    the flow lock.
    
    This patch addresses this issue by disconnecting the flow from the packet
    immediately when the bypassed state is detected. This moves the `use_cnt`
    decrement to within the lock.
    
    Bug: #4766.

[33mcommit 416575ea026cdf099ff556b41cc1037783e838b3[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Oct 21 15:28:17 2021 +0200

    pcrexform: use substring and not whole match

[33mcommit c9d664b0a0d8e000aa3846e63b2f93b19302161b[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Oct 20 10:56:44 2021 +0200

    tftp: StringToAppProto case
    
    So, fuzz_applayerparserparse_tftp will fuzz tftp

[33mcommit 5bd065cb3c4daea720608db55b19e7f06f71c284[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Oct 19 12:38:49 2021 +0200

    range: checks that end is after start for HTTP2
    
    As was done only for HTTP1 in previous commit
    
    The verification part stays separated from the parsing part,
    as we want to keep on logging invalid ranges values.

[33mcommit 07370ed5c072da2006929bb6fa8c7ebb69b3f2b6[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Oct 12 08:41:42 2021 -0600

    queue.h: suppress scan-build warnings
    
    If running under scan-build, use our own implementations of all
    the macros which include some code to satisfy scan-build
    warnings.

[33mcommit 77604d86d6dea20e392098a874b7450c9659c0fb[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Oct 14 21:31:13 2021 +0200

    range: move back files ownership in one case
    
    In the case, we receive a range request with expected
    overlap then new bytes, but the response does not get to the
    new bytes, we are still skipping, but the HttpRangeContainerBlock
    had the ownership of the files, and need to give it back

[33mcommit bba70607e81b8a74436348470aa1abd4e7f8a2da[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Oct 13 21:07:27 2021 +0200

    range: checks that end is after start
    
    Otherwise, we end up allocating too much memory

[33mcommit 27b4f165b17499cc765ccb770f1cf994992e10f6[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Oct 12 09:04:59 2021 +0200

    loopback: decodes IPv6 from all OSes
    
    As does wireshark

[33mcommit accdad7881e43a1d2895c22ad0e85fddbd37a429[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Jun 21 10:50:12 2021 +0200

    ike: do not keep server transforms in state
    
    Fixes #4534
    
    Now, only the tx with the transforms will match
    with ike.chosen_sa_attribute

[33mcommit 83887510a8994e0b5dfb3e4522507a3462fad58b[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Oct 7 14:31:29 2021 +0200

    modbus: tx iterator
    
    When there are a lot of open transactions, as is possible with
    modbus, the default tx_iterator will loop for the whole
    transacations vector to find each transaction, that means
    quadratic complexity.
    
    Reusing the tx_iterator from the template, and keeping as a state
    the last index where to start looking avoids this quadratic
    complexity.

[33mcommit b34c025b5280cd9e708f1a2a3ee9e06fd90ada39[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Oct 7 14:30:56 2021 +0200

    util: avoid calling snprintf in PrintStringsToBuffer
    
    As we print only one character

[33mcommit 53ef65d390839c76b20adf7d22ec5516c38abe83[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Sun Oct 10 22:17:48 2021 +0200

    http2: enable by default, even if not in config

[33mcommit 424dcda2c000f4578d85f51293492a0fc7e03815[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Sep 30 15:32:42 2021 +0200

    http2: enable by default

[33mcommit fa4c7626bde98f20700172984f7bd07c285406ba[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Aug 23 15:03:51 2021 +0200

    http2: null check during upgrade

[33mcommit ea4a509a54e8292a41a496fc9d2b97096de91f77[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Oct 6 20:57:09 2021 +0200

    app-layer: disable by default if not in configuration
    
    DNP3, ENIP, HTTP2 and Modbus are supposed to be disabled
    by default. That means the default configuration does it,
    but that also means that, if they are not in suricata.yaml,
    the protocol should stay disabled.

[33mcommit 75bc9d9dd8b4154a665892c7f3396df95d36c16b[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Oct 6 10:53:46 2021 -0600

    queue.h: wrap the system sys/queue.h
    
    Instead of using local implementations for the queue.h macro,
    wrap the system provided queue.h and then adding missing
    features as needed.
    
    The idea is that Suricata when integrated with another library
    that includes sys/queue.h can look at the same source of truth
    for these macros.
    
    But not all operating systems include a queue.h with the same
    features, and some don't include it at all, like Windows. So
    on Windows this will be a full implementation of all the queue.h
    features Suricata needs.

[33mcommit 6fadb97d5ded5805745bca02bfb962de975ec122[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Oct 5 21:14:18 2021 +0200

    alert: fixes leak in ThresholdHandlePacketRule
    
    ThresholdHandlePacketRule may take ownership of an allocated
    DetectThresholdEntry, and places it in a position of the
    array th_entry. But it never got released

[33mcommit d21a252238fd766d3c2ec4c2d165d429dad0d85a[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Oct 5 20:47:30 2021 +0200

    fuzz: target must use the rules it parsed
    
    DetectEngineReloadThreads does not work for the fuzz targets
    as there is no_of_detect_tvs = 0 as we did not register
    real threads and slots.
    
    So, we force the flow worker module to use the newly detect engine
    conetxt with all it needs

[33mcommit 8b9721b2652790354e619c77622cf84c766915a3[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Oct 5 10:44:03 2021 -0600

    github-ci: pin macos build to 10.15
    
    There is currently a build failure with macos-latest (recently updated)
    to 11 in the libhtp test suite code. Not sure if there are other
    build issues in libhtp or Suricata at this time.

[33mcommit d18fc4f3f0f7f67b1d67fde4fcae15b454e34200[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Oct 5 09:47:11 2021 -0600

    github-ci: use sccache for gcc in commits workflow
    
    Previously was only used for Rust.

[33mcommit fa72a5add8d9ebdcc4da5e05a8cd4259ede572d7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 4 16:01:47 2021 +0200

    flow: free spare pool more aggressively
    
    The flows exceeding the spare pools config setting would be freed
    per at max 100 flows a second. After a high speed test this would
    lead to excessive memory use for a long time.
    
    This patch updates the logic to free 10% of the excess flows per
    run, freeing multiple blocks of flows as needed.
    
    Bug: #4731.

[33mcommit ff97d7c15da0a8a7b8ea1a0d461f4f56ca2052d6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 4 09:24:51 2021 +0200

    threading: force break loop on flow inject
    
    Track availability of break loop callback to avoid overhead.

[33mcommit b788d3345cd4e4c467672bb6bfb90d2b8620e068[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 1 13:20:02 2021 +0200

    flow: process evicted flows on low/no traffic
    
    In a scenario where there was suddenly no more traffic flowing, flows
    in a threads `flow_queue` would not be processed. The easiest way to
    see this would be in a traffic replay scenario. After the replay is done
    no more packets come in and these evicted flows got stuck.
    
    In workers mode, the capture part handles timeout this was updated to
    take the `ThreadVars::flow_queue` into account.
    
    The autofp mode the logic that puts a flow into a threads `flow_queue`
    would already wake a thread up, but the `flow_queue` was then ignored.
    This has been updated to take the `flow_queue` into account.
    
    In both cases a "capture timeout" packet is pushed through the pipeline
    to "flush" the queues.
    
    Bug: #4722.

[33mcommit 31977170a8a44290fd8f501ef1018b7696644040[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 3 14:54:17 2021 +0200

    threading: minor cleanups

[33mcommit 314ec77f88325a4e8989e898991b9af493cad3dc[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Apr 29 08:55:45 2021 -0400

    unittests/template: Register template unittests

[33mcommit 6e149cdec3aa287c9117feaac6a3d0407ba95853[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Apr 29 08:49:50 2021 -0400

    unittests/enip: Register ENIP unittests

[33mcommit 8a50edbd101bbdbde92b89eef8d7fb1cf6c359c3[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Oct 1 15:55:19 2021 +0200

    pcre: fixes a memory leak on alloc error

[33mcommit 8536048443a30907ec4c96958374d782d7e656c6[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Sep 15 16:22:00 2021 +0200

    http2: do not try to upgrade if http2 is disabled in config

[33mcommit 42ba421ca975920bd753cbbf44a5bf9d118d4a3b[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Sep 15 16:20:56 2021 +0200

    http2: flatten code style

[33mcommit 527415dba08f6f2af7fb93fdef19e3029cef88bd[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Aug 23 16:31:42 2021 +0200

    protodetect: handle all gaps, even when depth is reached

[33mcommit 6e3e8530a16c607fe2eb13656af29d7d3d83ed90[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Sep 30 08:02:03 2021 -0600

    readthedocs: add configuration file

[33mcommit 586522e1e99198826d81ec33381b6333371dfa80[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Sep 30 15:23:15 2021 +0200

    pcre: local match data for pcrexform

[33mcommit c64a1f6a092a0b8f862375519a53ec979653e832[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Sep 30 15:13:13 2021 +0200

    pcre: use thread-storage for matches

[33mcommit 3b690e53c88fb4859ac14c9ca5dee314e938de19[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Sep 30 16:25:45 2021 +0200

    pcre: using de_ctx in unit tests for free function

[33mcommit a049a6c29cda6903bdb9f23618631df2cae97c10[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Sep 30 09:23:46 2021 +0200

    pcre: creates a match structure per match run
    
    So that DetectPcrePayloadMatch is thread safe
    and does not rewrite a shared parse_regex.match structure

[33mcommit 78cf9cfc5f882c7f7348e501c3ece03f0699b343[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Sep 29 17:22:57 2021 +0200

    http: range: remove assert that can happen

[33mcommit 8e8899c90cdf608f543bdbc6504251a51a222d9c[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Sep 29 17:06:55 2021 +0200

    http2: range: check return value when opening
    
    HttpRangeContainerOpenFile can return NULL
    so, http2_range_open can set file_range to NULL
    And we should check this before calling http2_range_close

[33mcommit 65a6f61004890c41202c66a55bcb89ed45760df1[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Sep 29 16:33:32 2021 +0200

    http: delete obsolete range log
    
    Commit d776d72711800168cda5d62a7cc4669abda379be
    has been transfering ownership of file container
    
    So, we cannot log it

[33mcommit 9b3c355c2021c5081d1d416e79cb88c9be7afa39[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Sep 29 15:44:52 2021 +0200

    fuzz: adds one target with predefined rules

[33mcommit c06c4a663eea31878828e4407e3ec68dae6bc606[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Jun 4 10:21:40 2021 +0200

    lgtm: adds build instructions to get lgtm to work
    
    LGTM is a statis analysis tool

[33mcommit df0ed6fda47fc80a397710316ae78cc3967e29bb[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Oct 16 09:43:29 2020 -0600

    af-packet: use configured cluster-id when checking for fanout
    
    When testing for fanout support a cluster-id of 1 was always being
    used instead of the configured cluster-id. This limited fanout
    support to only one Suricata instance.
    
    Instead of hardcoding an ID of 1, use the configured cluster-id.
    
    Also make cluster_id a uint16_t instead of an int in AFPThreadVars.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/3419

[33mcommit 3a230c2208046d001b386979663a6c565691794b[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Sep 10 14:16:57 2021 +0200

    ipv6: simpler generic overlap condition
    
    This also changes the behavior, as the condition is checked in
    every case cf ipv6-malformed-fragments-8

[33mcommit fc958e9e897cea4199f763577fe26e981f8cdcd0[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Thu Sep 23 15:33:36 2021 +0100

    userguide: update wiresharkwiki in public datasets

[33mcommit dbeb8bfa1fb627a79f59399ecf2af3298e2a41ab[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Thu Sep 23 12:55:48 2021 +0100

    doc/devguide: add few more explanations & details

[33mcommit 2cd25e8105f195c763eddd930bc6523e6f1f67e2[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Tue Aug 31 15:37:09 2021 +0100

    devguide/app-layer: rename /img dir to /diagrams
    
    Semantically speaking it makes more sense, because it stores `msc`
    files for dynamic image generation.
    Updated files that refered to `img` accordingly, too.

[33mcommit f65b3908ed8a46bcaa19b717177d8592b1049ad2[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Tue Aug 31 15:22:22 2021 +0100

    devguide/transactions: add TSL_STATE enum snippet

[33mcommit d6c5dfacc7496d685afe3a441de79b2e9f92350f[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Tue Aug 31 11:04:53 2021 +0100

    devguide/transactions: update & refine diagrams
    
    - DNS sequence diagram was incorrect (transactions should be
    unidirectional). After changing it, it made sense to rename the file.
    Adjusted spacing, too. Updated transactions.rst accordingly.
    - TLS sequence diagram was refined to illustrate how Suricata actually
    implements the protocol.

[33mcommit 84311ab151d6540d77d6f07bd900e160303f6271[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Thu Aug 26 13:30:18 2021 +0100

    devguide/transactions: fix wordings

[33mcommit 2f3cee24292b9a84bf20f2cca971acc8753d4514[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Thu Aug 26 12:37:33 2021 +0100

    devguide/code-style: fix typo in banned functions

[33mcommit 6c7f06b0010a237f067cb5909c4902085b7ac6a7[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Fri Jun 25 15:09:09 2021 +0100

    workflows: add mscgen to Ubuntu 18.04 Cocci builds

[33mcommit a5b344e0156044fa4d752ec46465008fb0349185[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Wed Mar 10 11:14:32 2021 +0000

    doc/devguide: add Transactions documentation page
    
    A guide on what is a transaction for Suricata engine, focusing on
    developers.
    - What's the purpose of a transaction;
    - transaction states and API callbacks;
    - Examples and sequence diagrams.
    - doc/devguide: add transactions.rst
    - doc/devguide/extending/app-layer/index.rst: add transactions.rst

[33mcommit 066a3d619ed9dee954a01a6dee71090dc81e3fed[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Sep 24 08:22:09 2021 +0200

    fuzz: updates README
    
    Uses main oss-fuzz repository
    
    More complete flags proposition for direct compilation

[33mcommit cb30772372234b88787676eff865e43ce6793cad[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Sep 24 15:42:50 2021 +0200

    style: remove latest warnings
    
    about unused variables

[33mcommit f6ba3699bb8a790956b645e3c47cc159811ab677[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Sep 24 15:42:41 2021 +0200

    flowint: same analysis warnings as flowbits

[33mcommit 1dc98cad27733171de0aa74b87a57a6ad5b968f8[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Sep 28 12:09:41 2021 +0200

    pcre2: remove PCRE1 from CI

[33mcommit bce3c46874cfad9228d2f32b01c9aa5b9091fee6[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Sep 28 12:10:10 2021 +0200

    pcre2: remove PCRE1 as dependency

[33mcommit 56f664af6b39f3172e12c89b556869f7acda5ea5[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Sep 20 22:02:50 2021 +0200

    pcre2: follow code naming style

[33mcommit e10d9306608e6cacce5298d9708d4a98dd1dda1b[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Sep 20 22:00:00 2021 +0200

    pcre2: only one DetectParseRegex structure

[33mcommit 2a1690e1106eb624d9a75c23893976d5d5d21a84[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Sep 20 21:07:40 2021 +0200

    pcre2: move header include to suricata-common only

[33mcommit fae7389ae2a3471535babaac0a4aebd3aafc38c2[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue May 25 13:41:02 2021 +0200

    pcre2: document the behavioral changes

[33mcommit 48dd0cf8045594f08e8a2c15cd4978d856c15a84[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Apr 12 15:41:27 2021 +0200

    pcre2: check for PCRE2_ERROR_UNSET
    
    Needs maybe to be generalized

[33mcommit 3de99a214c19b8c35ec68c0602b3a7151480800e[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Sun Apr 11 10:37:00 2021 +0200

    pcre2: migrate keywords parsing

[33mcommit 2dea9a1e3758d458c801db4ccaf1f9069adc7625[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Apr 7 10:58:17 2021 +0200

    pcre: use pcre2 to parse detect pcre itself

[33mcommit f0f3295ba051598980fc095248fb9783a78dfb33[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Apr 5 17:41:12 2021 +0200

    pcre: migrate detect-pcre to pcre2
    
    pcre2 substrings need special free...

[33mcommit 3633c48e6e2d738a1f9521d1855aeab33b85151c[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Apr 13 14:08:09 2021 +0200

    pcre2: migrate utility uses of pcre

[33mcommit 95a07c8957de72e4a95ebe0c479b148632c61ea7[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Apr 13 14:02:28 2021 +0200

    pcre2: migrate transform pcrexform

[33mcommit acb1ab08a2b401c4bbea0f235064bfb53d8a3e84[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Apr 13 14:01:49 2021 +0200

    pcre2: introduce as a new depdendency

[33mcommit 98f84d5a9b960b6d5e641f230d84331bb009a240[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Sep 7 14:54:57 2021 +0200

    http2: follow range requests
    
    Move the content-range parsing code to rust

[33mcommit bded2ec92e13699ca4a101bbbe315334ab97751f[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Sep 7 14:52:36 2021 +0200

    range: post process out of order blocks
    
    A block is determined out of order on opening.
    But on closing, the gap before it may have been filled.
    So, we must post-process it, ie iterate over the red and black
    tree so see what blocks we can get.

[33mcommit 3b9a4f9f19fac269646d3b0368fbeb4e5cb02dd5[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Sep 7 14:50:27 2021 +0200

    range: no final zero in key
    
    for future compatibility with rust

[33mcommit 56fae072b225d1c175116efe117c264afbdbf4a3[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Sep 7 14:44:25 2021 +0200

    http2: better rust lifetimes
    
    so that borrow check gets happy

[33mcommit a1f9e0c97a442b5fa0d2de9aa160010e91555cb0[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Sep 7 14:43:16 2021 +0200

    rust: rename to StreamingBufferConfig as in C

[33mcommit 7819f3262ffed54a7633914eac5d44fcccf546ea[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Sep 2 21:27:14 2021 +0200

    http: more consistent return values for HTPFileOpenWithRange

[33mcommit bb7cc6f5e3231bbaf32e424b3940ebc786367cbe[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Sep 2 21:15:02 2021 +0200

    http: increase tracked files for ranges as well

[33mcommit d776d72711800168cda5d62a7cc4669abda379be[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Sep 2 17:14:50 2021 +0200

    http: range transfering ownership of file container
    
    To make concurrency reasoning clearer

[33mcommit 3ed38d2d5d360301ca7350d018e5d4d2d54a86a2[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Aug 27 17:11:23 2021 +0200

    http: avoid one lock for range append data
    
    Better structure design to ensure that one flow maximum
    is owning and appending into the file, adding fileOwning field.
    
    Adds also a gap field in a range buffer, so that we can
    feed the gap on closing, when we are protected from concurrency
    by a lock, (lock which got removed in the append path)
    
    Fixes memcap when encountering a duplicate while inserting
    in red and black tree
    
    Adds many comments

[33mcommit 2ef857e533869dd4ab1de978c8a57a025f371411[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 17 14:07:17 2021 +0200

    thash: add debug validation check for use_cnt

[33mcommit 7a797631e03cb62e0c7c0db229f9974abb808247[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 3 11:51:26 2021 +0200

    http/range: cleanup and simplification
    
    Simplify locking by using the THashData lock instead of a separate
    range lock.
    
    Avoid size_t in function arguments.
    
    Clean up file handling functions.
    
    Implement handling of alloc errors.
    
    Rename yaml entry to byterange
    
    Unify public api naming

[33mcommit 5ffc9622b35f321ac270957df36919cd79f066c5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 3 12:21:31 2021 +0200

    http/range: optimize struct layout

[33mcommit fc5632664c4016d0602c630df34d71efa0b942d1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 2 12:39:21 2021 +0200

    http/range: fix memory leak on out of order ranges

[33mcommit e82416a415407a45d2a9c31f9a8eaf4bcdbb3e31[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Feb 18 15:03:36 2021 +0100

    http/range: reassemble files from different flows with range
    
    adds a container, ie a thread safe hash table whose
    key is the filename
    
    keep a tree of unordered ranges, up to a memcap limit
    
    adds HTPFileOpenWithRange to handle like HTPFileOpen
    if there is a range : open 2 files, one for the whole reassembled,
    and one only for the current range

[33mcommit 5cb996efcf2248a6a04abfe2bde1dc5115bdfac2[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Feb 18 11:44:24 2021 +0100

    util: export Djb2 hash string function

[33mcommit f0012f97b272a0f76fa092a96740ffa3bd444a60[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Feb 18 15:01:03 2020 +0100

    util: adds util function SCBufferCmp
    
    Compares two buffers with their two sizes

[33mcommit 13a6eb3522b11d6ccbf4bea8598ba55325b70711[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 12 16:23:11 2021 +0200

    detect: suppress scan-build warning

[33mcommit a480ec2ba1acb4a0b87b6da4aa123c01189136d3[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Sep 22 10:48:52 2021 -0600

    github-ci: remove fedora 32 builds (eol)
    
    Promote Fedora versions used in builds to 33 or 34.

[33mcommit 102f0c74ff0770d1418622d81745d7402b78c3a6[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Sep 21 19:54:03 2021 -0600

    lua: move lua includes to util-lua.h
    
    Moves Lua includes to util-lua.h instead of suricata-common
    so plugins (or library users) don't need to be aware of the
    Lua that Suricata was built with. Instead only source files
    that need to be Lua aware can include util-lua.h.

[33mcommit 42da0fb5c5c35b723e601d3636582155a9a5028a[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Tue Sep 7 17:31:04 2021 +0530

    smb: fix broken stream depth setting
    
    The stream depth setting was broken since it was moved to Rust because
    of a missing parser for memory values in configuration.
    Use get_memval fn from conf.rs to calculate and fetch the correct
    values.

[33mcommit 0cfe512ef01038e9a088b1cafa17d57bd4331e75[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Thu Sep 9 08:06:51 2021 +0530

    rust/conf: add getter for memval
    
    Add a parser for memory values like 50kb, 20mb, etc on the Rust side.

[33mcommit ae4e3e95d5890b650b9c388b807195adb2f130e7[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Mar 18 16:07:55 2021 +0100

    transform: use generic Free function
    
    to free subelements in the context structure

[33mcommit ca054f726464fcc55242b7c851d75557c96b3d83[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Sep 20 20:45:10 2021 +0200

    fuzz: fixes a leak in applayerparse target
    
    If a protocol change was requested, the target did not handle
    it as Suricata, as the target is meant to handle only one
    app-layer protocol.

[33mcommit 72369fd8cecb611ee786940a7e5e3ad7dd4b35ec[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon May 31 16:55:31 2021 -0600

    plugins: check if eve file type is registered
    
    Instead of the 2 registration functions, just use one with
    a utility method to check for conflicts against built-in
    types.

[33mcommit a8b603e509ad836e53626621d9a7aec62cfb0ff2[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu May 27 11:46:19 2021 -0600

    plugins: remove internal fields
    
    The internal flag is not really used. This also reverts the behaviour of
    the plugin refactor of passing a ConfNode based on the plugin name
    instead of the eve ConfNode.

[33mcommit 4ab1950760f508227335b761e554ad7675fef3e0[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed May 26 15:25:22 2021 -0600

    eve/syslog: remove "plugin" naming

[33mcommit 4cd99fc266824a38d577ec445f022776cbf93241[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed May 26 12:46:54 2021 -0600

    eve: register internal output file types
    
    Register known eve output file types during eve registration. This
    removes the function to load internal plugins as they are not really
    plugins and moves the registration of them into their respective
    subsystem.

[33mcommit 784a080201844f88c48893b74ac622e08e5b1cb3[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed May 26 12:26:38 2021 -0600

    plugins: rename SCPLuginFileType to SCEveFileType
    
    With internal code using the plugin API to register an Eve
    filetype, the name plugin no longer makes sense. This is
    part of my idea that internal plugins aren't plugins at all,
    and the plugin interface should be an abstraction over
    internal APIs.
    
    Along that idea, this is the start of a refactor of the plugin
    file types to be internal, where the plugin API is just an external
    interface to that internal API.

[33mcommit f221c344edaa81d58fac9a569704e32e6e0048dd[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat May 15 13:40:32 2021 -0400

    output/syslog: Register syslog plugin
    
    This commit completes the syslog conversion to an internal output plugin
    with registration to make it available as an output file type.

[33mcommit b4da070c59febbc2243947941118eed14cb55e0b[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat May 15 10:38:40 2021 -0400

    output/plugin: Refactor eve registration function

[33mcommit 98d4f9eaa4fb2368a91d61544ff2aea3130a913c[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat May 15 10:13:59 2021 -0400

    output/syslog: Refactor syslog definitions

[33mcommit be9fbe3230a298c014ae2e619e5a1116b7f7e0fb[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat May 15 10:08:33 2021 -0400

    output/syslog: Convert syslog eve output to plugin
    
    This commit converts the "built-in" syslog eve output handler into an
    internal plugin.

[33mcommit 0e3773ddef2e43fc169fa988c271dcdd44e0d909[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat May 15 10:02:14 2021 -0400

    output/json: Refactor internal routines

[33mcommit 5ba08dfef5404dd68f91a1acdd9dd97301791f99[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat May 15 09:49:23 2021 -0400

    plugin: Refactor and create registration function
    
    This commit refactors the plugin registration code and creates an API
    for plugin registration

[33mcommit 18cc0fefabc58520436be7c18b787ee15731c2a9[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat May 15 09:23:54 2021 -0400

    output/plugin: Load internal plugins
    
    This commit adds an interface for loading plugins that are internal to
    Suricata. These are always loaded and are in a modified format from
    external pliguns.

[33mcommit 0ee5532036ca9d55ded17e26defa32a67f9d98fb[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Mar 18 09:27:48 2021 -0400

    plugin: Add "not set" plugin value type
    
    This value is used as a sentinel to determine if the configured
    eve.json filetype was located.
    
    First, the built-in and internal output plugins are checked. If the
    sentinel value remains set, the external plugins are searched for the
    filetype.

[33mcommit b3f447a0df0d389184febc06dc7445ddcae940e2[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Thu Sep 16 14:48:09 2021 +0100

    util/lua-common: use lua_pushnumber for SCFileInfo

[33mcommit 751906b71d95380e64779f569b08195d6f388a2e[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Tue Sep 14 10:04:38 2021 +0100

    doc/lua-functions: add sha items to SCFileInfo doc

[33mcommit 1315cb793b884140b51e9934ebbdc7493be22db5[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Tue Sep 14 09:49:07 2021 +0100

    util/lua-common: fix SCFileInfo bug & doc comment
    
    The callback for FileInfo was returning the wrong value, resulting
    in loss of some tuple values for one calling SCFileInfo in a script.
    
    The documentation comment wasn't mentioning the sha items that are
    pushed.

[33mcommit 8b53468d32e5b14817a41c6b0656cd3569a87749[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Tue Sep 7 10:37:19 2021 +0100

    util/lua-common: use pushinteger w/ byte & pkt cnt
    
    LuaCallbackStatsPushToStackFromFlow tuple is composed of integer values
    not all of them had been converted to lua_pushinteger yet.

[33mcommit 82cd125c62ac349c529582455eae19455fe2d50f[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Mon Jul 26 15:35:40 2021 +0100

    util/lua-common: update copyright year

[33mcommit 9b6ce274877ca825dbcbda0a7e540660004b5390[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Mon Jul 26 13:24:02 2021 +0100

    util-lua-common: use lua_pushinteger w/ int values
    
    replace lua_pushnumber with lua_pushinteger for SCFlowStats and
    SCRuleIds.

[33mcommit 00d7a152eb730158be4840d224430bd0331e8ec6[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Thu Jul 22 20:58:01 2021 +0100

    lua/output: fix typo

[33mcommit 7592a9be433b9decba1c40928e6840d0a5071ace[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Mon Jul 5 12:18:41 2021 +0100

    lua: use pushinteger for int in flow/packet tuples

[33mcommit f3fcc3973849b64722ea1213d2b0c5c4b27ea686[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Tue Sep 7 05:59:04 2021 +0530

    ssh: remove futile default port setting

[33mcommit 1f48714e7502bb41591ad6ed4e53bf1c0c2d20dd[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Tue Sep 7 05:58:44 2021 +0530

    smb: remove futile default port setting

[33mcommit 13741540ce034f542692296db5d6d9426d5e6ad2[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Tue Sep 7 05:58:13 2021 +0530

    rfb: remove futile default port setting

[33mcommit 7c9d5738006751e5fb2e3a64f21d14675cbe78fc[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Tue Sep 7 05:57:55 2021 +0530

    nfs: remove futile default port setting

[33mcommit d166acbdabd4c3ad4be655040ea64c2e257c6717[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Tue Sep 7 05:50:11 2021 +0530

    applayer: error if probes are null but port is not
    
    If the default port is set via the Rust registration table but the probe
    fns to server and to client are set to None, the port is never used.
    Setting port in such a case is useless so error out.

[33mcommit f4f6387a0033d486a9bd7941b33b82ec4fc4cb13[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Fri Jun 25 23:26:44 2021 +0530

    dcerpc: use null for default ports

[33mcommit 2cff811609cdf2044afbb85cba155ad8020504ae[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Sep 7 14:40:36 2021 -0600

    doc: remove prelude and document as removed

[33mcommit 54be743c48d0a9f64be75bd3de15384024e7fa0e[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Sep 7 14:37:46 2021 -0600

    prelude: remove the prelude output
    
    It was broken in 6 and that didn't cause much issue. Just remove
    it for 7.

[33mcommit 3e9d1e813a0ecc5e2b2e3ebae4b6561a886c7c24[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Sep 13 14:28:49 2021 -0600

    doc/upgrade: move ike logging changes to 7.0 changes
    
    Was mistakenly put in 6.0 changes.

[33mcommit f56634ac466708cf82ea25770a490d2c0397cae4[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Sep 13 14:27:45 2021 -0600

    doc/upgrade: mention that nss is no longer required

[33mcommit bfac4ff4d2b749b91ea58195d4423d5782e729a5[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Fri Sep 17 12:24:13 2021 +0530

    ci: use quiet option w suricata-verify

[33mcommit e1035fd3aed7e546f3ef18fceba8ae7f1441cd24[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 15 19:49:32 2021 +0200

    detect/prefilter: bail early if possible

[33mcommit 88bb23b7cf97d82b326e93942ab0a9149688d598[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 15 16:58:17 2021 +0200

    detect/prefilter: update tx_min_progress to uint8_t
    
    Now that our make progress value is 47, we don't need an int.

[33mcommit ed877849073e863b8d68b9d3e2cb229b5bf7c0c6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 15 16:54:43 2021 +0200

    detect: enforce max app-layer progress
    
    Allow progress values in the range 0-47 so we have 48 bits to track
    prefilter engines.
    
    Mark bits 48-62 as reserved explicitly.
    
    Add debug validation checks to make sure the reserved space isn't used.

[33mcommit 932cf0b6a6ad1d34fffe8dd92c14b5bc32c9f6fe[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 14 10:35:18 2021 +0200

    detect: track prefilter by progress, not engine
    
    Fix FNs in case of too many prefilter engines. A transaction was tracking
    which engines have run using a u64 bit array. The engines 'local_id' was
    used to set and check this bit. However the bit checking code didn't
    handle int types correctly, leading to an incorrect left shift result of
    a u32 to a u64 bit value.
    
    This commit addresses that by fixing the int handling, but also by
    changing how the engines are tracked.
    
    To avoid wasting prefilter engine tracking bit space, track what
    ran by the progress they are registered at, instead of the individual
    engine id's. While we can have many engines, the protocols use far
    fewer unique progress values. So instead of tracking for dozens of
    prefilter id's, we track for the handful of progress values.
    
    To allow for this the engine array is sorted by tx_min_progress, then
    app_proto and finally local_id. A new field is added to "know" when
    the last relevant engine for a progress value is reached, so that we
    can set the prefilter bit then.
    
    A consquence is that the progress values have a ceiling now that
    needs to fit in a 64 bit bitarray. The values used by parsers currently
    does not exceed 5, so that seems to be ok.
    
    Bug: #4685.

[33mcommit 9a09fe454b846dd2cd42adaa4b569314ad083bdb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 10 14:07:49 2021 +0200

    flow: log action applied to all packets
    
    Log if action applied to whole flow is drop or pass.

[33mcommit 3874d08015f36b79b32e25dbecc4b245d314f269[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 10 13:43:26 2021 +0200

    tests: fix drop test; cleanup
    
    SigTestDropFlow04 was incorrectly expecting an alert in the packet
    following a "drop" packet. The first drop is applied to the flow, so
    it should lead to the 2nd packet being dropped before inspection is
    run.
    
    Clean up the test as well.

[33mcommit e36b9b89a1be5b45b6e071248a17208b617b0c71[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 10 13:42:15 2021 +0200

    detect/tests: improve detection entry
    
    Lots of tests still use SigMatchSignatures as their main detection
    entry function, which bypassed some logic. Make it match main logic
    more closely.

[33mcommit 3f4110af3243d09dcaeb4088406cd3514a890442[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 10 13:03:26 2021 +0200

    tests: clean up drop test

[33mcommit 802c1ffee35250d1ac753aec1343e481b83d854f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 10 12:35:13 2021 +0200

    detect: enforce flow drops earlier
    
    Enforcing flow drops is now done earlier in the detection engine and
    moved out of the IP-only engine where it didn't belong.

[33mcommit aa93984b7e58d3d8c1323f86bdaff937f8b8bd1e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 3 17:04:02 2021 +0200

    detect: unify alert handling; fix bugs
    
    Unify handling of signature matches between various rule types and
    between noalert and regular rules.
    
    "noalert" sigs are added to the alert queue initially, but removed
    from it after handling their actions. This way all actions are applied
    from a single place.
    
    Make sure flow drop and pass are mutually exclusive.
    
    The above addresses issue with pass and drops not getting applied
    correctly in various cases.
    
    Bug: #4663
    Bug: #4670

[33mcommit ae89874b066c91675b809e8cf992d780331efb1c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 10 10:19:50 2021 +0200

    detect: remove dead code

[33mcommit 33c8fda7959127a0ac122039b37520cd89c912be[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 14 11:46:58 2021 +0200

    detect/lua: use BIT_U32 for flags

[33mcommit dc6755bf8ed64682c8adfc9e9374029109061f30[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 14 11:46:28 2021 +0200

    detect/lua: minor cleanup

[33mcommit 093ed6f9bc3b7365f3f598ad57851407feb541ec[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 14 11:39:26 2021 +0200

    output/tx: check flags using BIT_U32

[33mcommit 29d5eb969e8856c7fb50442b2a5dd9a7a371cfd8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 14 11:25:58 2021 +0200

    packet: use BIT_U32 for flags

[33mcommit ce18f4b8e2aead61fa42a0e8beef71c00f7730e3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 14 10:20:58 2021 +0200

    detect/mpm: micro optimization for initialization
    
    Do less expensive check first.

[33mcommit dfe71bb7737b872a8e80cdd7f190f28ff8cea8a9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 11 09:50:36 2021 +0200

    detect: remove ticker
    
    Last consumer of it has been converted.

[33mcommit 9a5c666b2659cba6eef20c6721d572f5c7991a43[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 11 09:47:31 2021 +0200

    detect/http: clean up header buffer logic
    
    Simplify and clean up header buffer management. The code was designed
    to track buffers for several transactions in parallel, from when the
    detection engine wasn't aware of transactions.
    
    For http.start and http.header_names use generic mpm and inspect
    functions.

[33mcommit ca760e305cd74933b685b1bd5be795b24a7d94a7[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Jul 19 17:31:32 2021 +0200

    ipv6: decoder event on invalid length
    
    From RFC 2460, section 4.5,
    each fragment, except the last one, must have a length
    which is a multiple of 8

[33mcommit 596a4a9d6edf43c73de85356b2e0cec3cb91e471[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Jun 4 15:18:32 2021 +0200

    http2: better rust style

[33mcommit 48ed874ddad4bbe7321191712263086f4567a5ab[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon May 31 16:17:22 2021 +0200

    http2: concatenate one headers multiple values
    
    For detection, as is done with HTTP1

[33mcommit e3ff0e7731e8d652ee7f22945311674e65455a74[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon May 31 11:40:42 2021 +0200

    http2: generic http2_header_blocks
    
    so as not to forget continuation and push promise
    when iterating over headers

[33mcommit 0b0649d98e07eb7dc8da60100c80fbcfe6cdd9e8[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon May 31 10:50:38 2021 +0200

    http2: http.header keyword now works for HTTP2
    
    As well as http.header.raw

[33mcommit 9b9f909d7db9ba4485bf50577868fa7072998487[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon May 31 10:11:27 2021 +0200

    http2: http.header_names keyword now works for HTTP2

[33mcommit 547e9f4ab42fb4a67dc67f85fa58e0c9a7e4c634[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed May 26 21:45:30 2021 +0200

    http2: http.host normalized keyword now works for HTTP2

[33mcommit 75f75e1eb09c208a42e58b2babbc55027cd79e28[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed May 26 20:54:01 2021 +0200

    http2: turn Host header into authority during upgrade
    
    HTTP1 uses Host, but HTTP2 uses rather :authority cf HPACK

[33mcommit bb98a18b3d6d104d11a105aea3886d3daa5956cf[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Sep 2 16:31:20 2021 +0200

    http2: better file tracking
    
    If an HTTP2 file was within only ont DATA frame, the filetracker
    would open it and close it in the same call, preventing the
    firther call to incr_files_opened
    
    Also includes rustfmt again for all HTTP2 files

[33mcommit 1378b2f45144676d98f3430728dcca3e09540921[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Jul 5 11:18:26 2021 +0200

    http2: support deflate decompression
    
    cf #4556

[33mcommit 04ba6dc1384410517a8450a47221e72d22fbc801[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 18 13:47:26 2021 +0100

    ftp: support per-tx file accounting

[33mcommit 0867b0dbcdd9a6973d505714928ea7323a4f5384[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 18 08:38:03 2021 +0100

    smtp: support per-tx file accounting

[33mcommit c9cee7af4985d569b34dc080be615b19eb5180a9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 18 13:06:22 2021 +0100

    smb: add debug validation on file counts

[33mcommit 114d3ba7307db7ab449bffae2c2dcb48e6b8f08d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 18 08:37:08 2021 +0100

    smb: count files in tx

[33mcommit c1dfb619c4313f66322f89969e54c4ea01bbb9dc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 18 08:36:22 2021 +0100

    http2: support per-tx file accounting

[33mcommit 1b3c3225cdc9d834d3a96aa239fb76b228859492[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 18 13:06:34 2021 +0100

    nfs: add debug validation on file counts

[33mcommit 1d48601c258e944c1c3f9510b2707a6a2415a671[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 18 11:09:01 2021 +0100

    nfs: support per-tx file accounting

[33mcommit 67759795c6405e449a80b282d290f84dc0fcd778[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 18 11:05:35 2021 +0100

    nfs: don't reuse file transactions
    
    After a file has been closed (CLOSE, COMMIT command or EOF/SYNC part of
    READ/WRITE data block) mark it as such so that new file commands on that
    file do not reuse the transaction.
    
    When a file transfer is completed it will be flagged as such and not be
    found anymore by the NFSState::get_file_tx_by_handle() method. This forces
    a new transaction to be created.

[33mcommit d74c18ee28fbda3a5b6d2ddb157cae90b70da0bf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 18 10:57:48 2021 +0100

    http: support per-tx file accounting

[33mcommit 56d3e28a3a122178270e81b73783e0f126486232[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 23 11:08:33 2021 +0100

    filestore: track files getting stored per tx
    
    Avoid evicting a tx before the filedata logger has decided it is
    done.

[33mcommit ca124b033ef408501897e0517eaf79d2196c68d9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 18 14:38:33 2021 +0100

    filestore: store chunks in packet direction
    
    Storing too early can lead to files being considered TRUNCATED if the
    TCP state is not yet CLOSED when logging is triggered. This has been
    observed with FTP-DATA and might also be an issue with simple HTTP.

[33mcommit c78f5ac3169e8b4539c49fde9d9aa8fa8465f40e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 18 10:55:50 2021 +0100

    app-layer/transactions: track files opens and logs
    
    To make sure a transaction is not evicted before all file logging is complete.

[33mcommit 45dc4cdeece538c6f383b6658deca7dc1e825181[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 18 10:52:44 2021 +0100

    eve/files: log in packet direction only
    
    Bug: #3703.
    
    Don't log files too soon.

[33mcommit e89e563eb4ccc47d14422c76bad62397572f2370[m
Author: Vladimir Ivchenko <v.ivchenko@ideco.ru>
Date:   Thu Dec 10 20:05:15 2020 +0500

    GRE: Handling pptp without payload
    
    If one of the ppp peers sends a packet with an acknowledge flag,
    the ppp payload will be empty and DecodePPP will return TM_ECODE_FAILED.
    To handle this case, the packet_length field in the GRE extended header (https://tools.ietf.org/html/rfc2637#section-4.1) is used.
    DecodeGRE no longer tries to parse PPP payload if packet_length is zero.

[33mcommit 16a21d78397ea13a5ca1b4c22f839ab6626a7580[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Oct 29 17:05:01 2020 -0600

    scripts: bundle script for requirements
    
    Add a bundle.sh script to bundle the requirements of libhtp
    and suricata-update. This uses a Python like requirements.txt
    file to specify the URL to download for libhtp and suricata-update.

[33mcommit 71196098a10b540531e4d010d3a6333c3c5958c6[m
Author: Lukas Sismis <lukas.sismis@gmail.com>
Date:   Tue Oct 27 11:21:06 2020 +0100

    doc: Update public-data-sets.rst
    
    Replace dead link
    
    Dataset on ll.mit.edu returns 404. Link updated with a search result of more datasets.

[33mcommit cf9b2b5fd1ea85290848630a4b1856fdb01d3de2[m
Author: Joshua Lumb <joshua.lumb@gmail.com>
Date:   Tue Jun 9 12:12:26 2020 -0400

    detect-dsize: Add ! operator for dsize matching

[33mcommit 9b8be5a650a2d191ee515d6fcd123662301a2013[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Jul 13 13:30:00 2021 +0200

    smb: get file name in case of chained commands

[33mcommit 3e5f59e2cbe6305f315f83fcd1c73e31a19c0f5c[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Jul 13 10:00:48 2021 +0200

    smb: fix parsing of file deletion over SMB1

[33mcommit fde753d9d2d8ee150675da9c35071236d8ba1639[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Jul 13 08:40:42 2021 +0200

    smb: recognizes file deletion over SMB2
    
    using set_info_level == SMB2_FILE_DISPOSITION_INFO

[33mcommit 71679c6ad0624808729415745a87c15f8254483a[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Aug 30 15:49:58 2021 -0600

    ike: use derive macro from app-layer events

[33mcommit eb55297876b489246215152f3d84b9781905078f[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Aug 30 15:45:15 2021 -0600

    modbus: use derive macro from app-layer events

[33mcommit d3bd008e331072171de2f6a1fe44f3180d051f46[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Nov 18 16:26:18 2020 -0600

    app-layer template: use derived app-layer event

[33mcommit cef2832dcf67fa2e8d626c528cd4038fa34d263b[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Nov 18 16:23:49 2020 -0600

    http2: use derived app-layer event

[33mcommit e92cb36bb8a09f8ae31920f4b932cdc41f2bb85d[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Nov 18 16:17:31 2020 -0600

    krb5: use derived app-layer event

[33mcommit 92561837f8804bd632e2cd43181632f96275b4ab[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Nov 18 16:14:14 2020 -0600

    ntp: use derived app-layer event

[33mcommit 1f71fb2cde80426d6ddd8dcf8a8cb82fe3b9d835[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Nov 18 16:11:48 2020 -0600

    rfb: register None for get_event_info/get_event_info_by_id
    
    Implementations are not required if they're just going to return
    -1. We allow None to be registered for that.

[33mcommit 4fd6aa866f3e32a39ba38da16d24fe45cd015c38[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Nov 18 16:07:52 2020 -0600

    sip: use derived app-layer event

[33mcommit 18448f6ed6c7dd299f35ac4bfa16bc2f93551e6f[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Nov 18 16:03:50 2020 -0600

    snmp: use derived app-layer event

[33mcommit bb094b17dbec2a22070f6ed0994b23934ca50852[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Nov 18 16:01:04 2020 -0600

    ssh: use derived app-layer event

[33mcommit 9c3f06d9b5b294e8f354a6bef4f857ff01a02c5f[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Nov 18 15:57:53 2020 -0600

    dhcp: use derived app-layer event

[33mcommit b9f10ba22f2ee9419e0d3266b3336c8c14777cd3[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Oct 19 12:28:15 2020 -0600

    smb: use derived get_event_info/get_event_info_by_id

[33mcommit 8eac5fc221841be07fd59999e84d5088aa5077f7[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Oct 16 15:45:37 2020 -0600

    mqtt: derive AppLayerEvent for MQTTEvent

[33mcommit 6ed827a4ef0dfb9706dfd2b41309318107b891a4[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Sun Jan 12 23:13:54 2020 -0600

    dns: use derive macro for DNSEvent

[33mcommit 9221f1d9d53b4bb58991b389d8a38bc0301e385e[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Oct 19 11:17:48 2020 -0600

    applayerevent: derive get_event_info and get_event_info_by_id
    
    Add generation of wrapper functions for get_event_info
    and get_event_info_by_id to the derive macro. Eliminates
    the need for the wrapper method to be created by the parser
    author.

[33mcommit 0fa7b5c2a2204c6d8ee29489c7b08ff7f1fe68f5[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Nov 18 11:57:22 2020 -0600

    rust/applayer: provide generic event info functions
    
    Provide generic functions for get_event_info and
    get_event_info_by_id. These functions can be used by any app-layer
    event enum that implements AppLayerEvent.
    
    Unfortunately the parser registration cannot use these functions
    directly as generic functions cannot be #[no_mangle]. So they
    do need small extern "C" wrappers around them.

[33mcommit 27d1ee98ce2c47e747e18242f2b057812f90fd26[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Sun Jan 12 22:56:47 2020 -0600

    rust: derive crate: for custom derives
    
    Currently has one derive, AppLayerEvent to be used like:
    
      #[derive(AppLayerEvent)]
      pub enum DNSEvent {
          MalformedData,
          NotRequest,
          NotResponse,
          ZFlagSet,
      }
    
    Code will be generated to:
    - Convert enum to a c type string
    - Convert string to enum variant
    - Convert id to enum variant

[33mcommit dbea7d636f5f9d85856c024b7462fbe3d4229d72[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Oct 19 10:30:29 2020 -0600

    rust/applayer: define AppLayerEvent trait
    
    The derive macro will implement this trait for app-layer
    event enums.

[33mcommit cd40fcdea710349bb998fbc4323c94394bf69c98[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 30 21:56:24 2021 +0200

    macset: adjust test to pass after fix

[33mcommit 7fa3e8df615215a1628fc1e37f4913d93ced3a92[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Aug 27 17:36:50 2021 +0200

    ci: dummy git configuration for rebase

[33mcommit 328bdf2c61a2b04ce1b3cde3063a07f170134717[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Fri Aug 20 14:41:20 2021 +0200

    macset: fix memory size check

[33mcommit d7468c55ca4a8375ca6ca12396a4c61af6465041[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Fri Aug 20 10:42:13 2021 +0200

    flow: be sure to check hash till the end

[33mcommit e531530a67789f895360200fa9d5874d3dcd7511[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Thu Aug 19 16:30:50 2021 +0200

    flow: add comment on flow handling

[33mcommit c1bffa9545b8aa9d0fc64ac6511edd34919135d7[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Thu Aug 19 11:22:06 2021 +0200

    stream: increase memcap on memory errors

[33mcommit 0e70958e67398f599b77ba991dc631e025cae5f4[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Thu Aug 19 11:21:21 2021 +0200

    util/streaming: improve error handling
    
    It differentiates memory error than regular ones.

[33mcommit cce7e4f4cb28485f2e43630b4baf7a77449af707[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Sun Aug 15 12:17:23 2021 +0200

    flow: fix a debug assert
    
    As the FlowBypassedTimeout function is interacting with the capture
    method it is possible that the return changes between the call that
    did trigger the timeout and the actual state (ie if packets arrive
    in between the two calls). So we should not use the call to
    FlowBypassedTimeout in the assert.

[33mcommit 9c89bc80d07cd5dbc5fddf30222a0bd5076eb093[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Sat Aug 14 23:08:01 2021 +0200

    flow: document FlowBypassedTimeout
    
    Main point is to document it is interacting with the capture
    layer.

[33mcommit 9a4ef6b8fc290a83ad0d17c036d8a93b5c02689c[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Sat Aug 14 23:05:03 2021 +0200

    flow: more accurate flow counters
    
    Don't increment the flow timeout counter for flows that are not
    really timeout (as use_cnt is non zero). And also don't take into
    account bypassed flows in the counter for flow timeout in use.

[33mcommit c51042e0934fd328010d41d9405fd643855aba89[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 30 10:53:49 2021 +0200

    flow/worker: handle timeout edge case
    
    In the flow worker timeout path it is assumed that we can hand off
    flows to the recycler after processing, implying that `Flow::use_cnt` is 0.
    However, there was a case where this assumption was incorrect.
    
    When during flow timeout handling the last processed data would trigger a
    protocol upgrade, two additional pseudo packets would be created that were
    then pushed all the way through the engine packet paths. This would mean
    they both took a flow reference and would hold that until after the flow
    was handed off to the recycler. Thread safety implementation would make
    sure this didn't lead to crashes.
    
    This patch handles this case returning these packets to the pool from
    the timeout handling.

[33mcommit c5556b5dd9b9430bddd7a79917db6bc14642b090[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 30 21:15:28 2021 +0200

    flow/worker: set proper end flag

[33mcommit 61f6fe037df2b1cabd1a763f099ca62714c6c3da[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 30 20:12:05 2021 +0200

    flow/manager: set proper end flag

[33mcommit bbbb816ed686e12ab716c344fb7e29af0463cf16[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Aug 30 22:01:18 2021 +0200

    detect: debug validation for list ids overflows

[33mcommit 86681c9d7c063cf28a73009d4839e55e69f05969[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 19 11:57:57 2021 +0100

    detect: move init only array to init data

[33mcommit 22dfcc928c88e56c17610d8a13a7ea868230719f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 18 15:03:47 2021 +0100

    detect/analyzer: use rule style pretty print for patterns

[33mcommit 5703aec44e3e0506ab77a76082e8a4731d230b78[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 18 14:22:41 2021 +0100

    detect/content: generalize pattern pretty printing

[33mcommit e7a74348d78b0abfcfd9095c76920a63c06a4a83[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 18 10:03:53 2021 +0100

    detect/profile: add support for tx inspection
    
    Add 'inspect_type' "packet" and "tx" for the two record types. Add more metadata
    when available.

[33mcommit a2e37522bb616a64b024d2981a43a89d83fe87c6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 16 17:43:08 2021 +0100

    detect/analyze: dump patterns facility
    
    Dump all patterns to `patterns.json`, with the pattern, a total count (`cnt`),
    count of how many times this pattern is the mpm (`mpm`) and some of the flags.
    
    Patterns are listed per buffer. So payload, http_uri, etc.

[33mcommit 84872ecc54f40f90a803eb514c8d62f563f75c31[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 15 09:50:03 2021 +0100

    detect/content: add some more dsize tests

[33mcommit af104dd2233294df12953d25b4f3999025bb3fd2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 5 22:01:55 2021 +0100

    detect/dsize: set depth flag when applying dsize as depth

[33mcommit 36d3c3cb8ecb347f3d065892dd12604e0047cd28[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 6 10:35:14 2021 +0100

    detect/analyzer: count mpm with depth, endswith

[33mcommit de4addbc48f76ee606130720cf3027878d5e0698[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 8 22:06:41 2021 +0100

    detect/analyzer: show payload separately in group dumping

[33mcommit ef896431076ce6130ff57257a83a79ea3e42bf59[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 8 09:41:22 2021 +0100

    detect/analyzer: add icmp to rule group output

[33mcommit f49c181cebc46a1279f2e79719ff04544df9021f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 8 08:28:37 2021 +0100

    detect/analyzer: display per rule prefilter details

[33mcommit 16ea200846605c50cc4f034cd287b3018eb269ad[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 8 08:28:09 2021 +0100

    detect/analyzer: count prefilter per rule group

[33mcommit 1c5842df128e195ba015bb4c42056e952b2891bf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 6 21:38:31 2021 +0100

    detect/analyzer: add per rule mpm block to rules.json

[33mcommit 3660b8f8292c1e4b2ccc6284ead0ef96bae561ff[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 6 08:47:58 2021 +0100

    detect/analyzer: support buffer names in sgh dump

[33mcommit 0ee7159d1d1a1953ec6a802a8d7b3b68ff343292[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 26 10:43:58 2019 +0100

    flow: determine packet direction once per packet

[33mcommit 4c7eb64411c9b7141a4d8e339982d657eb028bfc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 16 19:20:31 2019 +0100

    decode: convert 'action' macros to inline funcs
    
    Make sure most common branch is handled first to assist branch
    prediction.
    
    Macros still play a small role to please our 'action' cocci check.

[33mcommit 2d1580233ec2833fa79db1d312a52763cae8a6a3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 8 22:08:49 2021 +0100

    detect/mpm: turn factory array into list

[33mcommit b48ccb8d1f8923ecd9795852de124ec1e7337090[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 9 20:22:54 2021 +0100

    detect/stream: don't run mpm on packet if stream is available

[33mcommit 755124763daade6cf9418aa0dd4d7002b9c84444[m
Author: myr463 <louis.jacotot+github@protonmail.ch>
Date:   Wed Dec 9 17:48:34 2020 +0100

    doc: escape dot in pcre

[33mcommit a64783b3e2f7f1a58050ca5f8d7f85c2a16a9c0a[m
Author: Michael Smith <msmith@mindbridge.ai>
Date:   Mon Jun 21 22:33:47 2021 -0400

    unix-socket: Avoid spurious logs on close
    
    Avoid spurious logs when suricatasc closes connection.
    
    Use SCLogDebug for control connection EOF, and SCLogError for an error.
    
    As Chandan Chowdhury described in redmine 3685. This makes the logging
    consistent with the older `if (client->version <= UNIX_PROTO_V1)` block
    about 20 lines above, and avoids polluting the logs with
    `Unix socket: lost connection with client`.

[33mcommit 3e81d20a71deb2a061d3f86430b88b8bdd4b7d6d[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Jul 5 16:37:03 2021 +0200

    ci: rebase specified s-v pr
    
    So that CI does not fail, if suricata PR got upgraded in a new
    version, but S-V PR did not get upgraded, and S-V changed
    in master

[33mcommit 44bd3169eb1ab0501d909fe261b3dafde6375400[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Jul 8 15:02:50 2021 +0200

    dnp3: regenerate object decoding code
    
    Ticket: #4558
    So as to avoid intra-structure overflow

[33mcommit 126a7dcb4f1818a806c882c54da864992bb304d5[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Jul 8 15:01:15 2021 +0200

    dnp3: adds bounds check for prefix chararray
    
    Ticket: #4558
    Avoids intra structure overflow

[33mcommit 5ec9688f03eb611b8ec3108a4f20db2baf87b225[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Jul 8 14:57:56 2021 +0200

    dnp3: use base64 macro in gen script
    
    As is done already in C
    cf commit ea0936199d142fc52ec69baf7984cbdd92dd4705

[33mcommit 9551cd05357925e8bec8e0030d5f98fd07f17839[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 18 20:14:48 2021 +0200

    threading: don't pass locked flow between threads
    
    Previously the flow manager would share evicted flows with the workers
    while keeping the flows mutex locked. This reduced the number of unlock/
    lock cycles while there was guaranteed to be no contention.
    
    This turns out to be undefined behavior. A lock is supposed to be locked
    and unlocked from the same thread. It appears that FreeBSD is stricter on
    this than Linux.
    
    This patch addresses the issue by unlocking before handing a flow off
    to another thread, and locking again from the new thread.
    
    Issue was reported and largely analyzed by Bill Meeks.
    
    Bug: #4478

[33mcommit cf21694ba6d535d435cfcaefcbb88517bcd4eac4[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Aug 20 11:44:17 2021 -0600

    rust(lint): suppress clippy lints that we should fix
    
    Suppress all remaining clippy lints that we trip. This can be
    fixed on a per-lint basis.

[33mcommit 91402f9fbae8b199298a761353eec2389d8f4953[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Aug 20 11:41:40 2021 -0600

    rust(lint): remove manual implement of map method
    
    Using `if let` expressions in these cases is better expressed
    by the map method, and considered idiomatic Rust for this usage.

[33mcommit b021726a0d3c5b6c3c2726ef61359dca35c37fdf[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Aug 20 11:38:31 2021 -0600

    rust(lint): map the error instead of using or_else
    
    This is the preffered style and easier to understand the meaning
    of the code.

[33mcommit dcf57ecd961e143299a60b23d150992b49d93539[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Aug 20 11:31:48 2021 -0600

    rust(lint): replace push_str of single char to push(<char>)

[33mcommit d5c0962299e6a2765dd217ccc23a076fb37be9e4[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Aug 20 11:31:03 2021 -0600

    rust(lint): fix some usages of references
    
    - ref is discouraged for top level variables
    - the other borrow is not required

[33mcommit d0772e04b1483c342b3f639ef11309f342f8145b[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Aug 20 11:29:37 2021 -0600

    rust(lint): replace checked_mul with saturating_mul
    
    When defaulting checked_mul to u64::max, Rust has a method
    that does the same thing called saturating_mul.

[33mcommit d0be7541e9b8671dae34898912eab34873460980[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Aug 20 11:20:49 2021 -0600

    rust(lint): removed unused unit () return
    
    This is code that is not needed and is a bit confusing to see.

[33mcommit 4abbfd0d9718eb55cea92ebada620cad7ff8e5a5[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Aug 20 11:17:59 2021 -0600

    rust(lint): remove extra parens around bitwise or
    
    This is a readability fix, as on first look they almost look
    like a Rust tuple.

[33mcommit ac3a20b6e06bf02a850be40385d6d624bcec439d[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Aug 20 11:11:23 2021 -0600

    rust(lint): remove useless conversions and clones
    
    These add complexity and may not be optimized out by the compiler.

[33mcommit 8bb6dab69d73e8befdaa9606b7b6b31e0f187abb[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Aug 20 11:03:45 2021 -0600

    rust(lint): remove useless format calls
    
    In these simple cases to_string() is recommended and likely
    performs better as the formatter is not called.

[33mcommit 5bf5de335065ffd45507f08312cdb69ab190d004[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Aug 20 10:59:41 2021 -0600

    rust(lint): don't use unwrap_or for function calls
    
    Calling a function in unwrap_or causes that function to always
    be called even when not needed. Instead use unwrap_or_else with
    a closure which will only be called when needed.

[33mcommit 602bb05e75382933359b052e60195a54c1f450a4[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Aug 20 10:51:46 2021 -0600

    rust(lint): fix redundant closures
    
    This lint checks for a closure where a function can be directly
    supplied.  Runtime performance is unchanged, but this makes
    less work for the compiler.

[33mcommit 69cf5c9eea83a2c0f0412fc02034a4b21ee70da4[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Aug 20 10:22:30 2021 -0600

    rust(lint): remove needless borrows
    
    These are needless borrows (references) as the item is already
    a reference.

[33mcommit 363b5f99c36fda06f185e446ca28dff6da81fbcc[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Jul 26 15:53:44 2021 -0600

    rust: functions that reference raw pointers are unsafe
    
    Based on the Rust clippy lint that recommends that any public
    function that dereferences a raw pointer, mark all FFI functions
    that reference raw pointers with build_slice and cast_pointer
    as unsafe.
    
    This commits starts by removing the unsafe wrapper inside
    the build_slice and cast_pointer macros then marks all
    functions that use these macros as unsafe.
    
    Then fix all not_unsafe_ptr_arg_deref warnings from clippy.
    
    Fixes clippy lint:
    https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

[33mcommit 53413f2d7af513f631fcae316a5ea2142d94e977[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Jul 26 13:25:17 2021 -0600

    rust: remove all usage of transmute
    
    All cases of our transmute can be replaced with more idiomatic
    solutions and do no require the power of transmute.
    
    When returning an object to C for life-time management, use
    Box::into_raw to convert the boxed object to pointer and use
    Box::from_raw to convert back.
    
    For cases where we're just returning a pointer to Rust managed
    data, use a cast.

[33mcommit cbd03c7ea4c5a74d724b10bf65dbbc2082e061d6[m
Author: KevinWang <wanglong.kevin@gmail.com>
Date:   Fri Aug 6 19:39:04 2021 +0800

    output/redis: Fix possible segv

[33mcommit 7ca4b135681db9f0e6477cc083bce6d8b50edbe4[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Jul 22 18:54:16 2021 +0200

    qa: use time on fuzz targets being run on corpus

[33mcommit ff976df70414d7d16ec5cb60cd3d08fa82c9c258[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Tue Aug 10 17:28:55 2021 +0100

    stream-tcp-reassemble: fix typo, updt copyright yr

[33mcommit 613f9b2f5ae45409553b9010e9ea5a85d48c2974[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Tue Aug 10 17:27:32 2021 +0100

    stream-tcp-reassemble: fix ConfGetBool unc'kd call

[33mcommit 2e0d76e6e7ee9067a177447c4d160c4b6ea941dd[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Tue Aug 10 17:17:19 2021 +0100

    stream-tcp: fix typos, update copyright year

[33mcommit 4839088359da0fa2b6c865bdeb1df095cb07e3c9[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Tue Aug 10 16:31:17 2021 +0100

    stream-tcp: fix ConfGetBool unchecked call

[33mcommit 7198355324fa199d10f299f05aa90bf113a667f5[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Tue Aug 10 16:29:31 2021 +0100

    util-napatech: fix typos, update copyright year

[33mcommit fbade2584896e1512c63c9bae6cc170e0d83f170[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Tue Aug 10 16:03:50 2021 +0100

    util-napatech: fix ConfGetBool unchecked call

[33mcommit 09ea4126140982c51a52362083eece8d5ad08f57[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Tue Aug 10 15:57:48 2021 +0100

    util-debug: fix unchecked ConfGetBool call

[33mcommit 9d24a53c533a229c33bf4eebeb3adc794eb194a5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 6 13:16:13 2021 +0200

    nfs: minor code cleanup

[33mcommit aa9d8658efdfadda08e8401153a5e2a018409bb2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 6 13:15:58 2021 +0200

    smb: minor formatting fixup

[33mcommit 094208823bf38962fac084b07146a6d41464e031[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 6 13:15:43 2021 +0200

    smb: minor code cleanup

[33mcommit 8fd47cb84ca02f63e4ac45f22d28b19151adbb91[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Thu Jul 8 17:42:07 2021 +0530

    smtp: fix clang fmt

[33mcommit 0a1747c1ba28110dfad512be573022e9e9460f6f[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Fri Jun 25 17:12:22 2021 +0530

    nfs: fix comment

[33mcommit 58ac9b0f38bc94d235a78a61dc581604261578cd[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Thu Jun 24 16:12:55 2021 +0530

    nfs: Add rust registration function
    
    Get rid of the C glue code and move registration completely to Rust.

[33mcommit 61fca4e9db337a0bb5fef91388e2e0fc57b48fa5[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Sat Jun 26 16:43:35 2021 +0530

    nfs: add missing code from rust impl of fns

[33mcommit de50ac631e161bbeac8ce4a66a3edf08834778e3[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Fri May 21 15:31:16 2021 +0530

    nfs: Change fn sign as per rust registration requirement
    
    Registering parsers in Rust requires signatures to be a certain way and
    compatible with C. Change signatures of all the functions.
    Probe fn has also been changed to return AppProto as required by the new
    fn signature.

[33mcommit e5c948df87541509e34445d80c5ef0242da3326f[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Sat Jun 19 13:23:14 2021 +0530

    smb: Add rust registration function
    
    Get rid of the C glue code and move registration completely to Rust.

[33mcommit 27af4bb0024bc2d1689ed7ed5708967e69174e66[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Tue Jun 29 15:00:07 2021 +0530

    smb: add missing code from rust impl of fns

[33mcommit 6420df84b7d2ef60b031db86e8ee00aa316495ae[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Fri Jun 18 17:10:37 2021 +0530

    smb: Change fn sign as per rust registration requirement
    
    Registering parsers in Rust requires signatures to be a certain way and
    compatible with C. Change signatures of all the functions.

[33mcommit 4d6b6b5dfe5aa728138fbaa5cfd01f995e5f36fc[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Mon Jun 28 17:25:55 2021 +0530

    smb: add constants

[33mcommit d1ea00521b02a3bd123a145827c9804817357f3d[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Mon Jun 21 16:36:42 2021 +0530

    rust/core: Add flow flags

[33mcommit 222e55847caa4bbe65faa6ae4b025f3982fda615[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri May 14 09:29:54 2021 -0600

    flow: provide flags accessor function
    
    Add an accessor function for flow flags. To be used by Rust where
    the flow struct is an opaque data type.

[33mcommit cb8bd8c6690348b3bd92e0ec0f2a76fd9acc495a[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Thu May 6 17:31:04 2021 +0530

    rust/applayer: add more externs

[33mcommit 843c4b20da3e1389d2b1be942b536c0c3c77a954[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 4 22:10:08 2021 +0100

    stream: check if ACK packet is outdated
    
    Outdated packets are ACK packets w/o data that have an ACK value
    lower than our last_ack and also don't have an SACK records that
    are new.
    
    This can happen when some packets come in later than others (possibly
    due to different paths taken).

[33mcommit b7a79978ac7976c72afd3c96083da8acc11dbfb7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 8 08:59:29 2021 +0100

    stream/sack: clean up includes

[33mcommit 8eccd02c94a477d6207d9e1d6569549a42b70604[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 4 22:10:58 2021 +0100

    stream/sack: minor debug improvements

[33mcommit 35c2a02eb8489c9a0a35a0e8f22c4fe0ec970880[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 31 10:53:08 2020 +0100

    stream: minor debug additions

[33mcommit 51be8f0238d30e91beeaee582cafd82ea77bb10c[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Wed Feb 24 13:35:37 2021 +0530

    doc/dcerpc: add proto keywords

[33mcommit 9aedc7fd1a3e8e8039e01fdc5a2d84400e7e8dae[m
Author: Sascha Steinbiss <satta@debian.org>
Date:   Sat Jun 26 13:40:09 2021 +0200

    mqtt: enable in config and remove misleading comment

[33mcommit b08a7b9a66d04f21241e8d1b75e0c6ff9ae69d8c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 1 16:31:35 2021 +0200

    stream: update memcaps in code to match config

[33mcommit f77b027ada0436855109f422bfa4d491dba846c7[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Jun 9 12:09:23 2021 +0200

    app-layer/pd: review bailout conditions
    
    To take TCP window into account
    And to actually bail out if we received too much data
    where the limit is configured by stream.reassembly.depth

[33mcommit 7a114e506a27fcb2a3b5ed28b1c10fe100cf78c6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 21 15:20:49 2021 +0200

    app-layer/pd: only consider actual available data
    
    For size limit checks consider only available data at the stream start
    and before any GAPS.
    
    The old check would consider too much data if there were temporary gaps,
    like when a data packet was in-window but (far) ahead of the expected
    segment.

[33mcommit be1baa8cab1bc51228d2d882b15880a36c377be4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 4 15:31:33 2021 +0200

    streaming/buffer: account sbb data size
    
    When tracking data track the size of the blocks so that in case
    of gaps we can still know how much data we hold.

[33mcommit b8499de498f0e31bb31097ac8b959e3877573de0[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Tue Jun 29 22:05:21 2021 +0100

    detect/iprep: convert to FAIL/PASS API

[33mcommit 31dccd117199316ff6e2c66487eff1dbe64de6e7[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Jun 21 09:57:09 2021 +0200

    modbus: do not claim to handle gaps

[33mcommit a39025bf244bad8f642dc5a33b704627fa0bb9f2[m
Author: showipintbri <40892800+showipintbri@users.noreply.github.com>
Date:   Thu Jun 10 17:32:34 2021 -0400

    doc: Grammar Correction

[33mcommit a17da8374a905ad31a4fa66f85ee1cc73b857389[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Tue Jun 22 00:05:06 2021 +0530

    counters: only print alerts if stats are enabled

[33mcommit b24fb5781bd85c32fbfea1f3ea8e44da142dc55f[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Mon Jun 21 10:50:04 2021 +0100

    detect: fix typos and update copyright year

[33mcommit a15fada7271d125ed3b4d9f29d72ff10ff652ff5[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Thu Jun 17 17:18:09 2021 +0100

    detect: fix bug where rule without sid is accepted
    
    Before, if Suricata parsed a rule without a 'sid' option, instead of
    failing that rule, the rule was parsed and attributed a sid 0.
    Changes to:
    detect-parse:
    - add logic to filter out rules without sid;
    - change unittest which didn't have a sid, but used to pass.
    detect-sid: add unittest for rules without sid or with sid: 0

[33mcommit 0eefd90a9369f1ab6a86472d9be64693386b95b7[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Jun 21 10:04:10 2021 +0200

    fuzz: only build fuzz_sigpcap_aware if asked
    
    With the other fuzz targets, and do not build it if fuzzpcap
    is available but we did not want to build the fuzz targets

[33mcommit d541b3d4a8de5fab7333290487ae33f4167058dc[m
Author: Sascha Steinbiss <satta@debian.org>
Date:   Tue Jun 22 09:33:24 2021 +0200

    rust: fix warnings with nightly

[33mcommit 2c8c043185a4700b042d2154f5076f1c82e5394b[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Fri May 28 12:19:45 2021 +0200

    stream/tcp: limit ACK validation
    
    Only limit ACK value validation for packet where the ACK bit is
    set.

[33mcommit 556570f7dd7f21f11cffda5ebcb72738a29cbb90[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Fri May 28 12:19:38 2021 +0200

    stream/tcp: don't reject on bad ack
    
    Not using a packet for the streaming analysis when a non zero
    ACK value and ACK bit was unset was leading to evasion as it was
    possible to start a session with a SYN packet with a non zero ACK
    value to see the full TCP stream to escape all stream and application
    layer detection.
    
    This addresses CVE-2021-35063.
    
    Fixes: fa692df37 ("stream: reject broken ACK packets")
    
    Ticket: #4504.

[33mcommit 0d81173d6e912f4be9e3e8f7593d779d8ffed52f[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Fri May 28 12:19:19 2021 +0200

    stream/tcp: update ack handling logic
    
    Only update the ack value of a session for regular packets when
    the ACK bit is set.

[33mcommit 9e7ea631b2a067609c500539cd3a7a139f39c3e4[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Mar 9 21:00:36 2021 +0100

    dns: improve probing parser
    
    Checks opcode is valid
    Checks additional_rr do not exceed message length
    Better logic for incomplete cases

[33mcommit d8d1fbe443fec45bfbf135bea2405fd3858da370[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 15 15:14:55 2021 +0200

    detect/files: fix buffer tracking with multiple files

[33mcommit 3c1cc1e345bc9f78988411efa8461351d24efe98[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 21 21:10:55 2021 +0200

    mqtt: move sub/unsub limits into app-layer config

[33mcommit 4c0ef73bf21f5b07c5c34fd2dc5f6d9c166bc6da[m
Author: Sascha Steinbiss <satta@debian.org>
Date:   Mon May 10 14:54:47 2021 +0200

    detect/mqtt: add topic inspection limit
    
    We add a new 'mqtt.(un)subscribe-topic-match-limit' option
    to allow a user to specify the maximum number of topics in
    a MQTT SUBSCRIBE or UNSUBSCRIBE message to be evaluated
    in detection.

[33mcommit 33fa7ab5969d3fc5ca088c003bd4dbfe76d77b6b[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Apr 22 10:28:15 2021 +0200

    smtp: null terminate before calling strtoul
    
    by copying in a temporary buffer
    as is done in ByteExtractString

[33mcommit 4d2f9cc8a0409bb03f5d285bb83d64afec08ba2a[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Apr 29 11:57:15 2021 +0200

    swf: right input length for decompression

[33mcommit 6f03ee2e47d331aa29524d81777c970415b817f1[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Apr 12 16:56:33 2021 +0200

    dcerpc: handles bigger inputs than 2^16
    
    By comparing integers with the largest size

[33mcommit 7d0a39412bb451443a4e19e6571ab86a0583214c[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu May 6 09:25:49 2021 +0200

    detect: use u32 for InspectionBufferMultipleForList
    
    So that we do not have an endless loop casting index to
    u16 and having more than 65536 buffers in one transaction
    
    Changes for all protocols, even ones where it is impossible
    to have such a pattern, so as to avoid bad pattern copy/paste
    in the future

[33mcommit e611adf3dc5b531a9d0ef9b861b4dbe0e150eae6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 13 08:06:11 2021 +0200

    detect: set event if max inspect buffers exceeded
    
    If a parser exceeds 1024 buffers we stop processing them and
    set a detect event instead. This is to avoid parser bugs as well as
    crafted bad traffic leading to resources starvation due to excessive
    loops.

[33mcommit 3dc50322db0efb92683b9578c7dccd1fae4b5cb2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 13 07:50:12 2021 +0200

    detect: fix multi inspect buffer issue; clean up
    
    Fix multi inspect buffer API causing cleanup logic in the single
    inspect buffer paths. This could lead to a buffer overrun in the
    "to clear" logic.
    
    Multi buffers now use InspectionBufferSetupMulti instead of
    InspectionBuffer. This is enforced by a check in debug validation.
    
    Simplify the multi inspect buffer setup code and update the callers.

[33mcommit 23d7beb458bfcdddfd49545d551a7914e6a020d4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 14 07:53:55 2021 +0200

    detect: reformat events table

[33mcommit b3c1f2ab489c22494900476426fd5cad9ba08cd1[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Mar 16 13:07:16 2021 +0100

    nfs: improve probing parser
    
    Checks credentials flavor is known

[33mcommit 0c948142b93a2de0ede0a65e6ddb650f2a2239bc[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Mar 9 15:54:16 2021 +0100

    enip: improve probing parser
    
    Strict length for register sessions
    NOP command must have options=0

[33mcommit 8bf653054025e6297f05ec211a0baa44cf795704[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Jun 11 14:13:44 2021 +0200

    config: fix null dereference in MacSetRegisterFlowStorage
    
    Crash happens with
    --set outputs.eve-json.types.files.force-magic=yes

[33mcommit 39575e2cc9a15a98075d4c7a50c57fa6110fb367[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon May 31 09:32:33 2021 +0200

    modbus: use ascii character classes while parsin rule
    
    As the rust regex crate is unicode aware, which was
    not the case of the C version

[33mcommit ef5755338fa6404b60e7f90bfbaca039b2bfda1e[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu May 6 13:30:49 2021 +0200

    rust: SCLogDebug is real nop when built as release
    
    Before, even if there were no outputs, all the arguments
    were evaluated, which could turn expensive
    
    All variables which are used only in certain build configurations
    are now prefixed by underscore to avoid warnings

[33mcommit 20e8f90981a1a0dca448b00c897c1c583513c25f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 10 21:03:31 2021 +0200

    http2: set Debug on structs

[33mcommit 86e600dab8dd3e3787bab247f2884c839079743a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 9 09:23:07 2021 +0200

    unittests: optimize RunmodeIsUnittests()

[33mcommit 4ecde6efb0a6eb3cb157d973221d41885ed77a08[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 11 09:52:11 2021 +0200

    stream: packet to stream flags macro

[33mcommit beb6b1e0d1ad1b0dcf7a4c524792d9d08d311f09[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 11 10:52:25 2021 +0200

    packets: more detailed entry debug for detect/stream

[33mcommit 3587033d9eb633dd1599c7f9e0223e10e074efb3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 7 13:29:11 2021 +0200

    files: construct with default, free on drop
    
    Update protocols.

[33mcommit d757545f03dd0410d9964caa027854861aa05532[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 7 11:34:31 2021 +0200

    files: implement default support

[33mcommit fdab22d924702168e3b7d07d061009ebdcfa9aa9[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Jun 4 10:28:10 2021 +0200

    rust: fix app-layer parser flags
    
    This especially allows for SSH bypass to work

[33mcommit 61fa748e9d7c3092d3dda96db6da2f70f2db6b20[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon May 24 08:03:02 2021 -0400

    decode/vxlan: Delay var init until needed
    
    This commit modifies the var initialization slightly until after
    integrity checks have been performed.

[33mcommit 415db83d2d0381dba8b3c132fcde539b3f9a3852[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon May 24 08:02:45 2021 -0400

    general/typo: Correct typo

[33mcommit 83067e5a5588f46ed614f2626f7353e84a15634d[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon May 24 08:01:58 2021 -0400

    decode: Eliminate NULL pkt checks
    
    This commit removes the NULL pkt check that each decoder performs as
    this is a "can't happen" case.

[33mcommit 2a326421aa29154ebfaada3888974a634feb5f56[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu May 27 12:02:55 2021 +0200

    thresholds: Fix buffer overflow in threshold context
    
    th_entry is resized using ThresholdHashRealloc() every time a rule with
    a threshold using by_rule tracking is added. The problem is that this is
    done before the rules are reordered, so occasionally a rule with by_rule
    tracking gets a higher signature number (after reordering) than the
    number of th_entries allocated, causing Suricata to crash.
    
    This commit fixes this by allocating th_entries after all the rules are
    loaded and reordered.
    
    Backtrace from core dump:
    
      Program terminated with signal SIGSEGV, Segmentation fault.
    
      #0  0x000000000051b381 in ThresholdHandlePacket (p=p@entry=0x7fb0080f3960, lookup_tsh=0x51, new_tsh=new_tsh@entry=0x7fb016c316e0, td=td@entry=0x14adedf0, sid=9800979, gid=1, pa=0x7fb0080f3b18)
          at detect-engine-threshold.c:415
      415>----                if (TIMEVAL_DIFF_SEC(p->ts, lookup_tsh->tv1) < td->seconds) {
    
    Bug #4503.

[33mcommit f47e4375b3310554c13561efb2f382f04bd24340[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu May 27 11:04:15 2021 +0200

    thresholds: syntax fixes
    
    Fix syntax of if statement in SigGetThresholdTypeIter()

[33mcommit b0b4fab7949dddeaf4c1b844c403dcc2c2470595[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu May 27 10:59:36 2021 +0200

    thresholds: remove unneeded function argument
    
    Remove packet pointer from SigGetThresholdTypeIter() as it is
    unused.

[33mcommit 6b8b58f98a098e4f0c63dbe8f79040c94f862d01[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Wed Jun 2 13:29:09 2021 +0100

    doc/eve: common fields and alert updates
    
    - update examples for both
    - change app_proto from alert field to common field, as
      per JsonBuilder's changes.

[33mcommit eacf933edfcec9cd352c26348e4256e9d3a012ab[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Wed Jun 2 13:16:46 2021 +0100

    doc/eve: fix typos

[33mcommit 02fe0260462c708a31f4bb955f4ffe0b0dadd692[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Jun 2 07:31:20 2021 -0400

    output: Fix possible null deref
    
    This commit corrects an issue uncovered by Coverity. See the redmine
    issue for details: https://redmine.openinfosecfoundation.org/issues/4495

[33mcommit d00b755b647a69eb4d4a10adb57be45fd4d14c7d[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Apr 22 09:41:30 2021 +0200

    http2: only mimic http1 request if there is one
    
    That may not be the case in midstream/async configurations

[33mcommit 70b21df75633253ac8318f229de2f521c14a6630[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri May 21 11:06:47 2021 -0600

    makefile: don't include the whole test/ directory
    
    Including the whole directory results in .deps files ending up
    in the distribution archive which shouldn't be there. Instead
    we have to list all the test sources individually.

[33mcommit aa8871a5bed5c7d2977f82a392e25e6fced98e8f[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat May 22 09:41:14 2021 -0400

    rust/default: Enable Default usage

[33mcommit 6028ca782722d2544260c6a3027092c2e42197b8[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat May 22 09:40:34 2021 -0400

    nfs: Rework constructs to use Self/Default

[33mcommit aafb0a60b77315c44d04a11c5bf3b109b20d6fbb[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat May 22 09:12:43 2021 -0400

    dhcp: Rework constructs to use Self/Default

[33mcommit 1ef0bd580bf9182199e756d6a27eb0709b4fd39f[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat May 22 09:03:58 2021 -0400

    dcerpc: Rework constructs to use Self/Default

[33mcommit 00167121dcaf8b5a57fecc5b3e24540942c38cc7[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat May 22 08:33:44 2021 -0400

    dns: Rework constructs to use Self/Default

[33mcommit 02dccb15294f5ed76189f323a9e6a23674a4dd4f[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri May 21 16:30:53 2021 -0400

    smb: Rework constructs to use Self/Default
    
    This commit modifies the constructors to use Self and/or
    Default::default() when feasible

[33mcommit f502f21f9e0ac37a81a60747cf56fe8108f9b304[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri May 21 16:31:04 2021 -0400

    rust/default: Enable Default usage in SMB

[33mcommit 95f225e8fbd5d352a8ca86cd317f908034966ed4[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon May 17 16:27:49 2021 +0200

    doc: update sphinx api to use add_css_file
    
    instead of deprecated add_stylesheet

[33mcommit 581cb6223d315a0b2d66d44462e048e6cf7825f0[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Wed May 19 11:29:04 2021 +0530

    dcerpc/udp: Add rust registration function
    
    Get rid of the C glue code and move registration completely to Rust.

[33mcommit d7007424bdc2cf99b5641085159bede06802c4e4[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Wed May 19 11:16:03 2021 +0530

    dcerpc/udp: Change fn sign as per rust registration requirement
    
    Registering parsers in Rust requires signatures to be a certain way and
    compatible with C. Change signatures of all the functions.

[33mcommit bac69af7e4082d4829cd9aad5bdfd0b0d35070b9[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Tue May 18 17:18:00 2021 +0530

    dcerpc: Add rust registration function
    
    Get rid of the C glue code and move registration completely to Rust.

[33mcommit a0a09a102b4d87a13c4327e1cbba86f0049708df[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Tue May 18 17:21:44 2021 +0530

    dcerpc: Change fn sign as per rust registration requirement
    
    Registering parsers in Rust requires signatures to be a certain way and
    compatible with C. Change signatures of all the functions.

[33mcommit dee972b863dadb73011c57eb87ab892859647c03[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Mon May 17 16:19:41 2021 +0530

    rust/core: Make AppProto type u16

[33mcommit d66ad96f0d4d5e512cf941e4b9e7651011a74d54[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Wed May 5 15:57:51 2021 +0530

    applayer/rust: add extern AppLayerProtoDetectPMRegisterPatternCSwPP

[33mcommit 533c6ff274dcf69c356ff41608faaecc535c735c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 20 15:14:13 2021 +0200

    github: work around rustc mingw issue
    
    https://github.com/msys2/MINGW-packages/issues/8732#issuecomment-845079799

[33mcommit 65809be8ec238bb0ac85bc07a759e6e1aef1c5bc[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed May 19 09:44:52 2021 -0600

    suricata-plugin.h: don't include autoconf.h
    
    It is not required here and just creates double inclusion in some
    scenarios.

[33mcommit d7c3ecb6f9faa7b878f67031a16dc5b487437671[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 18 15:07:02 2021 +0200

    http2: remove dead code

[33mcommit b3c502d572693368aba277d28aefc9c9cfe685af[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue May 18 09:52:53 2021 +0200

    http2: remove assertion which can be wrong
    
    Brotli decoder stops consuming input it it reaches the
    end of its input

[33mcommit c2720fc2fba6f5f8ac65188e795385fb6c6cd267[m
Author: Simon Dugas <simon.dugas@cyber.gc.ca>
Date:   Tue May 11 10:41:32 2021 -0400

    modbus: fix quantity and count calculation
    
    The [Modbus Spec S6.11](https://modbus.org/docs/Modbus_Application_Protocol_V1_1b.pdf)
    clearly states that the `count = quantity / 8` and not the other way
    around. This is fixed in sawp-0.5.0.

[33mcommit 999327ba1f02904f219c4ffe6ff1d952facddc92[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Apr 26 15:50:44 2021 +0200

    http2: http.cookie keyword now works for HTTP2

[33mcommit df039555bce1ca52f93a34cd1dc8f8ef43e6d05d[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Apr 26 15:37:57 2021 +0200

    http2: http.host.raw keyword now works for HTTP2

[33mcommit 1e82d0b3c88309461252680fe87bd4bdeaf2b26b[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Apr 26 15:17:09 2021 +0200

    http2: http.method keyword now works for HTTP2

[33mcommit 017e39d8fd59028d07efa281c8fb9250b33a056f[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Apr 26 15:01:53 2021 +0200

    http2: makes all HTTP1 header keywords work

[33mcommit 2cadddda89dd14ed6f5328da3b75753bd8827b6b[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Apr 26 14:40:33 2021 +0200

    http2: there is no status msg in HTTP2
    
    so we revert its detection, mistaken with the status code

[33mcommit 1e96272576cc6cd734f973e16594dbc1a1e383f6[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Apr 26 14:39:24 2021 +0200

    http2: http.stat_code keyword now works for HTTP2

[33mcommit fcd1ae3bf112a0040bda07d2a66b6dd1d8102110[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun May 9 09:21:31 2021 -0400

    doc: Protocol name/case change for upgrade doc
    
    This commit adds a one-liner to the upgrade document for 7.0 stating
    that protocol names/values are now builtin to Suricata and that names
    and their casing may change.

[33mcommit e77e8dbe18bdb70e42713abe4e90ec724adab5ca[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu May 6 09:49:55 2021 -0400

    proto: Remove dependency on /etc/protocols
    
    This commit eliminates the dependency on /etc/protocols and equivalent
    on other platforms by using a static table of IANA assigned protocol
    values (names, description).

[33mcommit def636383ec2f917e3bdb20ee6619de226afca52[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue May 4 15:47:53 2021 -0600

    github-ci: enable hiredis on fedora 33 build

[33mcommit 587c326d736851ea169d500b2989c94fc6a64521[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon May 3 12:17:45 2021 -0600

    yaml: treat some unquoted values as null (per spec)
    
    Per the YAML spec, the following values when present unquoted
    should be equivalent to null:
    - ~
    - NULL
    - Null
    - null

[33mcommit 7fa98cde4d139ee5dea93caa040b588aea8b1023[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Mar 26 10:06:44 2021 -0400

    output/redis: Redis threaded output changes

[33mcommit 8867dcf403bff8a9a063c62310862da5caafab99[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Mar 26 09:00:39 2021 -0400

    config/plugin: Add template for plugins

[33mcommit 1defca3c34f58b1bc220cebffcb2238d303cd9d2[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Mar 26 08:43:11 2021 -0400

    output/plugin: Support threaded output plugins

[33mcommit 05836a445297308f0d2f59f67c43829791985ba0[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Mar 26 08:16:57 2021 -0400

    output/plugin: API changes for threaded support
    
    This commit extends the interface to better support file output plugins.

[33mcommit 0ed62e93ec98dcbc8c9222c2c2429a5547301d2e[m
Author: Simon Dugas <simon.dugas@cyber.gc.ca>
Date:   Thu Jan 28 21:19:18 2021 +0000

    doc/modbus: add eve logging documentation

[33mcommit a8a51dc00432cec6d8c0586b9115b7a08378a6e9[m
Author: Simon Dugas <simon.dugas@cyber.gc.ca>
Date:   Fri Feb 19 16:43:55 2021 -0500

    modbus: add eve logging

[33mcommit 8342641477466e11727e31bb1efcd28bd2c55da7[m
Author: Simon Dugas <simon.dugas@cyber.gc.ca>
Date:   Fri Feb 19 16:31:33 2021 -0500

    modbus: move tests from c to rust
    
    Move tests in a seperate commit so that we can use the previous one for
    regression testing. This also gets rid of the temporary glue that made
    the C tests work with the rust implementation.

[33mcommit a458a94dca27e33dd9b4a629ef0a39b6ea41fb39[m
Author: Simon Dugas <simon.dugas@cyber.gc.ca>
Date:   Thu Feb 11 15:58:43 2021 -0500

    modbus: move from C to rust
    
    Adds a new rust modbus app layer parser and detection module.
    
    Moves the C module to rust but leaves the test cases in place to
    regression test the new rust module.

[33mcommit 7c99fe3689d43858cd18524e1161f59cc306b803[m
Author: Simon Dugas <simon.dugas@cyber.gc.ca>
Date:   Thu Feb 11 15:49:06 2021 -0500

    modbus: fix app-layer test cases
    
    invalidFunctionCode: make protocol id valid since we are only testing
    the function code here.
    
    readCoilsErrorRsp: changed to different invalid response code.
    
    ModbusParserTest10: wrong length was passed to AppLayerParserParse.
    
    ModbusParserTest11: allocate the entire buffer.

[33mcommit f629321de06043214e69a56d8259a1e781535293[m
Author: Simon Dugas <simon.dugas@cyber.gc.ca>
Date:   Sun Jan 31 20:58:26 2021 -0500

    ci: update known rust version
    
    Update RUST_VERSION_KNOWN to the latest stable known to succeed. Also
    updates the documentation to avoid confusion around the use of this
    variable.

[33mcommit 28548b072b8ebd3e40ec8e0c6b96ebb794522a96[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 4 10:40:09 2021 +0200

    travis: remove ci file as we switched to github-ci

[33mcommit f83d51d0cb6f28853de25959a956ca1f69672b34[m
Author: frank honza <frank.honza@dcso.de>
Date:   Fri Apr 16 10:21:22 2021 +0200

    ike: set event for multiple server proposals

[33mcommit 488d5fb34284f7e5be760edeca7607209cfa4b5e[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Feb 25 11:16:28 2021 -0600

    unix-socket: reset to ready state on startup
    
    As part of commit ea15282f47c6ff781533e3a063f9c903dd6f1afb,
    some initialization was moved to happen even in unix socket mode,
    however, this initialization does setup some loggers that can only have
    one instance enabled (anomaly, drop, file-store).
    
    This will cause these loggers to error out on the first pcap, but work
    on subsequent runs of the pcap as some deinitialization is done after
    each pcap.
    
    This fix just runs the post pcap-file deinitialization routine to
    reset some of the initialization done on startup, like is done after
    running each pcap in unix socket mode.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/4225
    
    Additionally this prevents alerts from being logged two times
    on the first run of a pcap through the unix socket:
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/4434

[33mcommit 0f0cb5169f378614c753328e2d0396f5b9211a38[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun Apr 25 09:20:54 2021 -0400

    decode/vntag: Add VNTag decoder logic

[33mcommit 596d7608333290d22ea6cee26a79eb4f9ca8605d[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Apr 24 15:44:17 2021 -0400

    tests/vntag: VNTAG decoder unittests

[33mcommit 713bace44f05c4b900c35ad2da537ef5e0ad18ec[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Apr 24 15:43:50 2021 -0400

    decode/vntag: VNTAG 802.1Qbh decoder

[33mcommit b944e636a8dfa34971d0375baa1cb3fa764bb2e0[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Apr 24 15:42:48 2021 -0400

    decode/stats: VNTAG stats

[33mcommit 1ddad0a0d610265baea902387eb40d7012c8c841[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Apr 24 15:38:16 2021 -0400

    decode/events: VNTAG decoder events

[33mcommit 049afde3a275ab748f4ef1f4777b9cfd5dd400ce[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Apr 24 15:36:57 2021 -0400

    decode: Add ethertype for VNTAG

[33mcommit 0c5a8fb35d3f60b3828c5e7b91f4bb9e6c37990c[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Fri Apr 30 12:25:58 2021 +0530

    github: Update codeowner handle

[33mcommit ca6e434e0b84dc8478763dc0a8716c5e3686a99a[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Apr 27 09:03:45 2021 +0200

    ftp: completely parses pasv and epsv responses

[33mcommit 7fb56a9075a97cd9781d08efd0f949b0bfca2719[m
Author: Luke Coughlan <lcoughlan5@gmail.com>
Date:   Mon Apr 26 13:05:15 2021 +0100

    flow/bypass: Properly set the ICMP emergency-bypassed value
    
    Currently the ICMP emergency-bypassed value defined in suricata.conf is
    overwriting the UDP value rather than correctly setting it for ICMP.
    This commit corrects this bug so that the ICMP value can be set as
    expected.

[33mcommit 1eeb96696b30bc1ccfb38091555d534172cd6a02[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Apr 23 10:08:07 2021 -0400

    general: Cleanup bool usage

[33mcommit 6fe8bce3b0c653df8e72bdb81bc235672386b8b1[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Apr 23 21:55:20 2021 +0200

    http2: have filecontainer for both directions

[33mcommit d4554ec6bb6e4e52fb2e36cf0412c981a4d1d2e9[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Apr 22 08:52:08 2021 -0600

    misc: include queue.h before other headers
    
    At least on FreeBSD, some other include is including "sys/queue.h"
    which results in FreeBSDs /usr/include/sys/queue.h being picked
    up and setting __SYS_QUEUE_H__ so our queue.h is not picked up.
    
    But the FreeBSD queue.h does not have the CIRCLEQ definitions. To
    fix just include our queue.h first, which also sets __SYS_QUEUE_H__
    preventing the system one from being picked up.

[33mcommit c7f44447c9dda294755348770956148a36633f0c[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Apr 22 09:41:48 2021 -0600

    dns: remove flood protection purging
    
    It doesn't look like flood protection is required with the
    stateless parser anymore. It actually can get in the way of TCP
    DNS when a large number of requests end-up in the same segment
    where a TX can get purged before it has a chance to go through
    the normal TX life-cycle.

[33mcommit afaa18c5ad183d068795cf15d21d3642814ceb23[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Apr 22 09:38:24 2021 -0600

    tx: fix unidir tx cleanup
    
    A unidirection protocol parser should only have its transactions
    marked as "skipped" if it is skipped in both the TS and TC
    directions, otherwise unidir transactions are always considered
    skipped and the cleanup will never updates its minimum id.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/4437

[33mcommit fc7a443c3f68e21162126e9b46d2ad5508511b2a[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Oct 17 10:56:23 2020 -0400

    general: Typo cleanup

[33mcommit 2c0485ae152f2236f398066b14d34334c776afde[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Oct 17 10:54:51 2020 -0400

    detect/address: Improve support for large addrs
    
    This commit improves support for large address variables. Without this
    commit, address size was fixed at 8196 or less. This commit permits
    larger sized address variables.

[33mcommit 089972fd314f881c947ba562c273a82652bfcdf0[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Sat Mar 13 16:41:48 2021 +0530

    applayer: fix test data for a valid DCERPC pkt

[33mcommit c663ac6ddd02579eec4816fb11b86c4f87e89c80[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Fri Mar 12 11:03:34 2021 +0530

    dcerpc/tcp: improve detection
    
    Lately, some of the TLS data was misdetected as DCERPC/TCP because of
    the pattern |05 00|. Add more checks in DCERPC probe function to ensure
    that it is in fact DCERPC/TCP.

[33mcommit a5f36eccf1fcbcd08edec6576f5f6746cba95c7e[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Thu Oct 22 22:41:17 2020 +0200

    doc: add documentation for rawbytes keyword

[33mcommit d62616f80545c3bad845487973ef053dd8f886a1[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Thu Oct 22 22:40:10 2020 +0200

    detect-rawbytes: add rawbytes doc help output

[33mcommit 37789d91894de4d2cde7a3b3360a13761e483e44[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Thu Oct 22 22:38:42 2020 +0200

    detect-rawbytes: update to new clang format

[33mcommit 06f58650d6d363bcba5a7a42a6f771877b5ef42f[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Apr 15 14:59:28 2021 -0600

    eve: refactor OutputJsonBuilderBuffer to take context
    
    All callers of OutputJsonBuilderBuffer are now calling it
    using fields from an OutputJsonThreadCtx, so just pass
    a pointer to the thread context now.

[33mcommit 08eee26d276d27891b1b4d57391e70572675de13[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Apr 15 01:36:25 2021 -0600

    eve: convert many loggers to use generate thread context
    
    - mqtt
    - dnp3
    - smtp
    - ike
    - dns
    - alert
    - tls
    - anomaly
    - drop
    - file
    - http
    - http2
    - templates
    - dhcp
    
    The idea is to factor out the commom code for setting
    up the output file objects, which is repetitive, and
    often done wrong when it comes to threading.

[33mcommit 013becf569fbb6d386b14aac7f360dc30cce6e65[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Apr 15 01:35:45 2021 -0600

    eve: reset buffer in OutputJsonBuilderBuffer
    
    Reset the buffer here so each caller doesn't need to do it.

[33mcommit c890f9db634de66201bbd83dfc7914d3487a0a5b[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Apr 15 01:33:43 2021 -0600

    eve: factor thread context creation/free for reuse

[33mcommit 702f3b3c73d2aec4bcf3c84f82b986be7b1ec206[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Apr 14 19:46:20 2021 -0600

    eve: remove duplicate call to LogFileEnsureExists
    
    Remove duplicate call to LogFileEnsureExists in the generic
    eve thread init function.

[33mcommit 23b1607d69df581d37bb2faf9be661db51eff296[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Sun Apr 11 21:27:15 2021 +0200

    github-ci: add ebpf build
    
    Use Debian 10 to build eBPF.

[33mcommit d477d3a8789d55828861c515e609d024e95a0dc8[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Feb 11 23:32:38 2021 +0100

    util/ebpf: fix deprecation warning
    
    The function bpf_program__title has been deprecated in favor of
    bpf_program__section_name.

[33mcommit b9351339a23cb75235e575c3921af1606d0c5276[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Apr 9 17:03:44 2021 +0200

    ebpf: fix gre encapsulation in xdp_lb
    
    The xdp_lb was not handling correctly the GRE load balancing
    and it was not supporting the GRE + ERSPAN that is used by
    some aggregator devices.

[33mcommit eb4c71fdd6d3eedba19d4503925910a6939b8e1a[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Wed Apr 14 23:22:54 2021 +0100

    ippair/bit: fix formatting

[33mcommit e7c1c3c374be0e569e1d644c05e73d29ee9177f4[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Wed Apr 14 14:15:59 2021 +0100

    ebpf/util: change flow storage to new 'id' type

[33mcommit 3b1a653467e09a51711c7b48c7666be3d7884855[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Wed Apr 14 23:16:07 2021 +0100

    device/storage: use dedicated 'id' type
    
    - Wrap the id in a new LiveDevStorageId struct, to avoid id
     confusion with other storage API calls.
    - Formatting fixes by clang.

[33mcommit 68b8b3d63e7f71e074d9ed72bfdf289f3c523428[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Wed Apr 14 23:14:41 2021 +0100

    detect/engine-tag: fix typo

[33mcommit b807059c34e56c852be83c324cc1e79109a9f6d0[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Wed Apr 14 23:12:28 2021 +0100

    host/storage: use dedicated 'id' type
    
    - Wrap the id in a HostStorageId struct to avoid id confusion
    with other storage API calls.
    - Fix formatting with clang script.

[33mcommit cf516de587d27300cb5af42ae548f54351f7de5d[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Wed Apr 14 23:09:02 2021 +0100

    ippair/storage: use dedicated 'id' type
    
    - Wrap the id in a new IPPairStorageId struct, to avoid id
    confusion with other storage API calls.
    - Formatting fixes by clang.

[33mcommit aa9ad56a5b0faeb9528558f6197ff967c6714e94[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon Apr 12 09:12:23 2021 -0400

    output/log: Removed pcie (Tilera) log vestiges
    
    This commit removes the last remnants of the Tilera log output mechanism
    (unsupported since 5.0.x).

[33mcommit 38ae21a19691466b078a6201494df893bc91308c[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun Apr 11 12:20:15 2021 -0400

    output/log: Ensure files closed in threaded mode
    
    This commit ensures that file objects are closed in threaded mode.

[33mcommit bc667a4a939c887bc298bbb865eda4338f8cea2f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 9 12:56:01 2021 +0200

    flow/storage: use dedicated 'id' type
    
    Wrap the id in a new FlowStorageId struct to avoid id confusion with other
    storage API calls.

[33mcommit d2d0e0adc93029feed63232d7eb55b451044cd5a[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Feb 5 15:17:41 2021 +0100

    rust: remove exported unused functions

[33mcommit 4b3be245065062a3970c6aafa70d25bde969873e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 9 10:15:39 2021 +0200

    app-layer/expectation: clean up storage id logic

[33mcommit 68d6922e3cc47c2608e1ac3614c6bd3a48185a12[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Apr 8 17:44:01 2021 +0200

    ftp: fixes leak with duplicate expectation

[33mcommit cd8c2ef994e7043ce5b61a8229c9f413e99e87c9[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Apr 7 09:17:44 2021 +0200

    fuzz: use stream.midstream=true

[33mcommit e9b76a0e663ce5c2f8900f90a4f4fd7ed3436335[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Mar 29 20:27:34 2021 +0200

    fuzz: specify protocol with fuzz target name
    
    cf https://redmine.openinfosecfoundation.org/issues/4125
    
    This allows fuzz_applayerparser_parse to fuzz one specific
    app-layer protocol based on the binary name, as is done
    with the environment variable FUZZ_APPLAYER
    That is if we rename/copy to fuzz_applayerparser_parse_smb,
    it will fuzz only SMB protocol
    This way, we can easily produce different fuzz targets for
    each protocol in oss-fuzz

[33mcommit 6da9a37285a50b513077e5c88094f8112740ffcb[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Mar 11 22:17:13 2021 +0100

    rdp: correctly returns incomplete in parse_tc
    
    Adding the already consumed bytes
    In case an incomplete tls handshake is handled with/after
    a refular rdp t123_tpkt

[33mcommit 3de0123ffbf355e3d3de318080f18bd639ec9beb[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Mar 16 13:07:30 2021 +0100

    http2: adds check about dynamic headers table size

[33mcommit c93073c246cfabb091270dba8eb55b0c6e17d67a[m
Author: Andreas Herz <andreas.herz@dcso.de>
Date:   Tue Apr 6 17:29:03 2021 +0200

    rules: add newer rule files to makefile for release tarball

[33mcommit 2893b04ab014c4dcc0bfc4c6f9dbf83fd44717a1[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon Mar 29 08:33:02 2021 -0400

    general: Typo cleanup

[33mcommit 02ceac8b8d4473de5f373a4785a1c143778b06e1[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon Mar 29 08:30:59 2021 -0400

    detect/threshold: Improve threshold.config perf
    
    This commit improves performance when parsing threshold.config by
    removing a loop-invariant to create a one-time object with the parsed
    address(es).
    
    Then, as needed, copies of this object are made as the suppression
    rule(s) are processed.

[33mcommit e873632a2811be4cd370336d43fcc5619bcd28e2[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon Mar 29 08:28:50 2021 -0400

    detect/threshold: Function to deep-copy thresh obj
    
    This commit adds a function to make a deep copy of a DetectThresholdData
    object.
    
    The function is used when parsing threshold.config items to make a
    one-time object and then add copies as needed.

[33mcommit 11f9cc6524958d11b6d9ab1f0785bfe16237096f[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon Mar 29 08:26:40 2021 -0400

    detect/address: Expose DetectAddressCopy function

[33mcommit 1ca4f041bb452742f326985479fca9a02473649f[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Apr 5 15:53:09 2021 +0200

    http2: pass data through when decompression fails
    
    as is done for HTTP1

[33mcommit ef62761e8c64d1644f2628ca7fc99e815bd96b88[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Dec 5 09:28:38 2020 -0500

    threshold-config: Improve support for big IP lists

[33mcommit c6a35d09b7e31db0acc81eccf3eec3b21e464462[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Tue Mar 23 17:59:58 2021 +0000

    templates: fix typos
    
    - *template*files[ch][rs]: fix typos
    - scripts/setup-app-layer: fix typos

[33mcommit 4748826dc77d4b39fed6c27d419cb2f90392124f[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Thu Mar 18 18:23:23 2021 +0000

    scripts/setup-app-layer: fix Makefile.am patch
    
    adjust lines for patching /src/Makefile.am, as current generated
    Makefile wasn't building Suricata.
    Add suggestion to run "./configure" before running "make".
    Add --logger and --parser options to examples.

[33mcommit 877e5214b856820bf24971b79e0883aa28639b13[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Mar 16 15:35:46 2021 -0600

    logging: removed unused logger IDs
    
    - pre-json dns logger
    - unified2
    - pre-json drop logger

[33mcommit 6853bf98fb7f79d197abd95b84a0f596e6f38494[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Mar 16 15:28:01 2021 -0600

    dns: only register a single logger
    
    DNS no longer requires a logger to be registered for to-client and
    to-server directions. This has not been required with the stateless
    design of the Rust DNS parser.

[33mcommit b1fee90392b315f95aa83d12f31ad344aa5bdd5d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 1 14:27:30 2021 +0200

    output/tx: add warning to avoid future bugs

[33mcommit 3cc3df21727f23a889389178aebc52bdd9e72b6a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 1 14:10:24 2021 +0200

    output/tx: move eof checks out of logging loop

[33mcommit b05bd058e9b661f69772ecead27e2cd8f409efe8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 30 20:34:53 2021 +0200

    app-layer: minor code cleanups

[33mcommit 1098e3b7c65f7ecab2d269016f7ad322fc0899f5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 30 17:17:10 2021 +0200

    app-layer: remove conditional logic around API calls
    
    Remove logic that suggested some API calls could be conditional,
    even though Suricata wouldn't even start up if they weren't
    registered.

[33mcommit 4d5d7b4bd362e080024ad66ba27a0e2155397762[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Mar 26 16:22:34 2021 -0600

    eve/netflow: use generic json context

[33mcommit a68d50608bf5d522e34ae75a58b1a10300fdea98[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Mar 26 16:14:00 2021 -0600

    eve/flow: use generic json context

[33mcommit 67c4621bdb70853ae9f0912803ea8c1adee8e300[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Mar 26 15:55:10 2021 -0600

    eve/ftp: use generic json context
    
    The FTP logger contained no extra data in its context so the
    generic json context can be used.

[33mcommit 2d78afe4b02cc9edf110b23a45a63ec85b04c54b[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Mar 26 15:51:21 2021 -0600

    eve: refactor CreateEveHeaderWithTx to include common options

[33mcommit 06ba61166725092c3f71e561347cc7729262bb1a[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Mar 24 17:01:18 2021 -0600

    eve cleanup: remove duplicate/redundant code
    
    The first change was to have CreateEveHeader add the common options
    as this was left out in a few loggers. While update all the loggers
    that use CreateEveHeader, remove redundant code, in particular
    from loggers that don't need to use their own context but
    can use the generic one.

[33mcommit 64330498f842386cc1f1cdec0409959b5565496f[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Mar 25 12:11:01 2021 -0600

    eve/mqtt: fix mqtt logging with threaded eve
    
    Mqtt was not setting up a per-thread file context for logging
    in threaded mode, leading a crash when used in threaded mode.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/4404

[33mcommit dd8eeb6353a1358f5c91f3c44d2220c2b2c8c6e8[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun Feb 28 14:38:26 2021 -0500

    general: Correct typos

[33mcommit 11ec61d0b481c3d5c83fc6f397acaf1b2b37ff70[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun Feb 28 14:33:58 2021 -0500

    thresholds: Improve validation of threshold.config
    
    This commit improves the handling of threshold.config. When used with
    "-T", a non-zero return code occurs when the file cannot be validated.
    
    To maintain legacy behavior, when "-T" is not used and threshold.config
    contains one or more invalid lines, Suricata continues execution.

[33mcommit cb03455c0412d6af4c8804337c2f7fb145cd93a9[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun Feb 28 14:32:15 2021 -0500

    error: Add code for threshold config validation
    
    This commit adds a new warning code for threshold config file validation
    failures.

[33mcommit a73b5f0ea500a5b92827a577fbbf13489a54b592[m
Author: Eric Leblond <el@stamus-networks.com>
Date:   Mon Mar 22 22:42:10 2021 +0100

    eve/ike: restore common option logging

[33mcommit 2997be6707de84843d0f4743cce4d285bdc945d6[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Mar 11 16:41:11 2021 +0100

    sslv2: precise detection pattern with probing parser

[33mcommit e8415f249b12a25c3698148956de52484e2995dc[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Feb 3 14:26:24 2021 +0100

    fuzz: adds structure aware target
    
    so as not to fuzz libpcap
    and generate structure aware signatures

[33mcommit 0105d4f017127f9696646e7d0176caec47a7c169[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Sun Mar 28 17:53:50 2021 +0200

    rust: bump bitflags dependency version
    
    So that lexical-core, needed by nom, and using bitflags
    is used with version 0.7.5 instead of version 0.7.0
    which fixed the fact that BITS is now a reserved keyword
    in nightly version

[33mcommit cb150e97d09baea09a738388426eafad3cccff2a[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Mar 11 16:12:36 2021 +0100

    kerberos: fix probing parser tag condition
    
    according to the comment

[33mcommit abb3cc85d5e54fbc14e4c2783ddbc619b1e29443[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Mar 9 22:54:43 2021 -0600

    install: better warning on install-full and don't fail
    
    If suricata-update is not available on "make install-full", don't
    exit 1, instead give the reason why its not installed, but still
    succeed the install.

[33mcommit ae29804a2815c44c00d3f5c7f39b9e9f366388c2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 12 13:31:08 2021 +0100

    github-ci: add libnet to ubuntu-20-04-cov-sv builder

[33mcommit 398ebf934509a8d27a1c8b858eae061b89d5c44a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 12 10:22:01 2021 +0100

    eve/drop: use highest priority drop
    
    When adding the alert to a drop record make sure the add the highest
    priority.
    
    It would until now add all drops from high to low prio, effectively
    overwriting the record each time.
    
    Ticket #4397

[33mcommit 6cf44fc839e8f1da820095928b5b25e7fc0a8521[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 10 13:25:55 2021 +0100

    detect/alert: apply pd only actions to flow
    
    Ticket #4394

[33mcommit 6c594d29db55bb0d6f28f0a5fa758c3e00a86ca1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 9 20:56:14 2021 +0100

    detect/alert: minor code refactor
    
    Use a simpler reject check and move logic into util func.

[33mcommit fbcdd2ec267d49040ca178f8562767d8fb00aa73[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 9 16:25:14 2021 +0100

    detect/iponly: don't check & set flow flags twice
    
    Per flow IP-only flags are checked and set by IP-only engine, so
    no need to set/check them per alert.

[33mcommit 55a0e29c8eaf286477fe3b4da75df4dec8d0ea4e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 5 10:55:45 2021 +0100

    eve/ike: gracefully handle renamed output config

[33mcommit ab59ef0d79ece2b441782a3be8e647a54c894dee[m
Author: frank honza <frank.honza@dcso.de>
Date:   Mon Oct 26 13:18:06 2020 +0100

    ikev1: add documentation for ikev1

[33mcommit 37940180a85698b83f8c664c45107716fc348ab3[m
Author: Sascha Steinbiss <satta@debian.org>
Date:   Sun Jan 3 23:44:23 2021 +0100

    ikev1: add metadata to alerts

[33mcommit e2dbdd7fd5077e7e50862096fb5889a9cafa49a5[m
Author: Sascha Steinbiss <satta@debian.org>
Date:   Sun Jan 3 23:42:24 2021 +0100

    ikev1: add ikev1 parser

[33mcommit ecdf9f6b0ba497704d22b585469a5b18e653b256[m
Author: frank honza <frank.honza@dcso.de>
Date:   Sun Oct 18 21:38:06 2020 +0200

    ikev1: rename ikev2 to common ike
    
    Renaming was done with shell commands, git mv for moving the files and content like
    find -iname '*.c' | xargs sed -i 's/ikev1/ike/g' respecting the different mixes of upper/lower case.

[33mcommit ab6171c42992b8a103eda71067f4e68b8aaa43e9[m
Author: frank honza <frank.honza@dcso.de>
Date:   Sun Oct 18 22:00:48 2020 +0200

    detect: added support for protocol-aliases

[33mcommit e9494ddd8ffa8c14e82fdaed673b49ddbf82368c[m
Author: frank honza <frank.honza@dcso.de>
Date:   Sun Oct 18 21:50:29 2020 +0200

    util: add function converting u8-array into a hex-String

[33mcommit b80cdae1df6b696700ddd91be5a082a8b33bdb75[m
Author: frank honza <frank.honza@dcso.de>
Date:   Sun Oct 18 21:46:04 2020 +0200

    detect: add comparison-mode LTE/GTE for Detect(U32/u8)Data

[33mcommit c3075cba4257885c89dbb9b5664b8ead61c33421[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 4 13:40:15 2021 +0100

    detect/analyzer: fix mpm display on payload only rules

[33mcommit 9dd1444f4431731bf4917488e0abec0d9a46fdcc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 19 11:45:00 2021 +0100

    detect: suppress error message for pcre only rules

[33mcommit b55b327db1590ae7e8ccb1a9ada9ddaa29a900bb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 5 22:01:26 2021 +0100

    detect/analyzer: suggest modern keywords

[33mcommit 57f7612ffd6de650943607f2fb168015e45a39e1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 5 21:33:35 2021 +0100

    detect/analyzer: fix json output for warnings/notes

[33mcommit 018b9a0a8cf236ac8566d198797378776c313a8f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 6 08:10:29 2021 +0100

    detect/asn1: minor cleanups

[33mcommit 8b8cc697d5deda3c11e26fc2d367f7168c61db84[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 5 08:42:37 2021 +0100

    detect/http-server-body: clean up test

[33mcommit 68f8b2f40f24a8656b09b3a9b1245ab3cf62a11d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 3 14:01:55 2021 +0100

    detect/icmp: reject invalid rules for icode/itype

[33mcommit 7d6835958bbb6ddf2931c9e20f409eadfc8ca068[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 3 13:41:26 2021 +0100

    detect/prefilter: fix null ptr deref on invalid rule
    
    A bad rule 'icode:<0; prefilter;' would trigger a null ptr deref
    in ApplyToU8Hash.
    
    Bug #4375.

[33mcommit e96464308819afb44d3b95d97f10ab84b6e0e979[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Feb 28 09:39:16 2021 +0100

    detect/state: fix reset bug
    
    Fix issue where after a reset the now empty list elements are not
    reused and the values may not be valid for the current detect
    engine anymore.
    
    Introduce a 'current' (cur) pointer that points to the store element
    currently being filled. This way existing stores will be reused.
    
    If 'cur' is NULL and 'head' is not NULL it means we need to use
    'tail' to append a new store.

[33mcommit f766139159ad8c530a87047224644757074cf145[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Feb 28 09:24:35 2021 +0100

    detect/state: test to show reset bug

[33mcommit a808474d38afa7555dcc10690d2a184ada6d7990[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Feb 28 09:21:36 2021 +0100

    detect/state: minor code cleanup

[33mcommit 0aed5e188b214d56107e66ea8e38dfb7d5a13758[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Dec 18 11:34:30 2020 -0600

    filestore: fix global counter init in unix socket mode
    
    Move initialization of filestore global counter to PreRunInit,
    so they get registered during program initialization, or as
    required in unix-socket mode, initialized for each file run.
    
    Fixes Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/4216

[33mcommit 83070102557d2755b9ffc67bb14b9b4d48b039e9[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Feb 17 15:36:12 2021 +0100

    smb: relax probing parser to handle first NBSS message
    
    cf dcerpc-udp S-V test :
    First message is Message Type: Session request (0x81)
    Second message is SMB

[33mcommit 660e9e489b7d898509946d8a66f15c6107fd5a4e[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Feb 17 14:54:46 2021 +0100

    protodetect: only run ProbingParserTc if STREAM_TOCLIENT

[33mcommit 52ea3fc7ac0269c3b0970a2b9ddbd83062652fe2[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Feb 2 14:44:43 2021 +0100

    fuzz: more precise assertion for protocol detection
    
    Only in the cases of stream start is the assertion valable.
    Otherwise, it can only be best effort.

[33mcommit 1b6e81cd7284355cb4315606cac30325e144d25a[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Feb 2 13:31:08 2021 +0100

    smb: probing parser for start and midstream
    
    The probing parser is more strict at the start of the stream

[33mcommit 9dc5258a21cecdabca26aaac108e83d85147d30b[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Feb 2 13:29:14 2021 +0100

    smb: split probing function for code style
    
    Introduces rs_smb_probe_tcp_midstream

[33mcommit 2d765d6c686449e78e29759b07c4852ebab3c46e[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Feb 17 17:02:35 2021 +0100

    detect: fix overflows in SetupU8Hash
    
    For instance ">255" resulted in overflow

[33mcommit eb460cf78dadc874633a57571245acf2911a6b6e[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Dec 18 22:12:23 2020 +0100

    ssl: reset state when breaking out of SSLV3_HANDSHAKE_PROTOCOL
    
    So that we cannot resumt it with corrupted values

[33mcommit 89030d3e59e23d4850ac9a7db5763c3d4d4fd537[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Dec 17 21:48:54 2020 +0100

    modbus: stop allocating transactions when flooded
    
    cf #4224

[33mcommit ddb4d289ae00908d8f25fdd3afbcd5a1da2111a6[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Dec 18 14:21:16 2020 +0100

    icmpv6: bail out for icmpv6.hdr keyword if not ICMPv6

[33mcommit 538fc58b37cb6633824fc2e167068b11d09a013a[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Dec 8 08:38:18 2020 -0500

    output/http2: Multi-threaded EVE logging support
    
    This commit adds multi-threaded EVE logging support to the HTTP/2
    logging path.

[33mcommit 35f6c80bbf4eef7ec311ed78dd29819cc471905e[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Dec 7 12:16:31 2020 +0100

    eve: fix memory leak in metadata
    
    Fixes #4205

[33mcommit d708744f2b55e2b0261276f56db61d59765e5b33[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Thu Feb 25 11:14:24 2021 +0530

    doc: fix ubuntu pkg name for tcmalloc

[33mcommit 7500c29300dcef8716d87461842e7d7c3e5101ac[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Jan 28 17:48:48 2021 +0100

    decode: limits the number of decoded layers
    
    so as to avoid overrecursion leading to stack exhaustion

[33mcommit af13d4de180515f92813befc9bca06b66f7233bb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 25 22:38:34 2021 +0100

    detect: set HTTP SWF decompress limits

[33mcommit 4a1482a1cfab7bbf95be81dff9b9db3708f6626a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 25 22:00:17 2021 +0100

    detect/http.request_body: fix tracking with xforms
    
    Fix handling of file progress tracking for regular http.request_body
    along with transform combinations.
    
    This is done by implementing the 'base id' logic.
    
    Related tickets: #4361 #4199 #3616

[33mcommit ea3fb4a465e0ecd3f08c2828aa08804335c77a46[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 25 21:36:27 2021 +0100

    detect/file.data: fix mixing transforms (http)
    
    Fix handling of file progress tracking for regular file.data along
    with transform combinations for the part of the implementation that
    uses the HTTP inspection logic.
    
    This is done by implementing the 'base id' logic.
    
    Related tickets: #4361 #4199 #3616

[33mcommit 54ad7de9cea22b9a3c3e7cc64145155126f4dada[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 25 20:07:41 2021 +0100

    detect/file.data: fix mixing transforms (file api)
    
    Fix handling of file progress tracking for regular file.data along
    with transform combinations for the part of the implementation that
    uses the File API.
    
    This is done by implementing the 'base id' logic.
    
    Related tickets: #4361 #4199 #3616

[33mcommit 975062cf401f79c00abf728d923c65aabd143af2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 25 20:06:40 2021 +0100

    detect: track base id for xform buffers
    
    Buffers with transforms are based on the non-transformed "base"
    buffer, with a new ID assigned and the transform callbacks added.
    
    This patch stores the id of the original buffer in the new buffer
    inspect and prefilter structures. This way the buffers with and
    without transforms can share some of the logic are progression
    of file and body inspection trackers.
    
    Related tickets: #4361 #4199 #3616

[33mcommit 52692da7cf9f66a979bac24f38efd5ce2767d066[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Feb 7 09:00:49 2021 +0100

    detect/analyzer: fix pkt engine display

[33mcommit f037f6f4ff08ed0442b3bbc1623dfb7ecb23c716[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 24 16:30:13 2021 +0100

    classification: sync and update
    
    Sync to latest ET open and introduce inappropriate as a classification
    to replace something some find inappropriate.

[33mcommit 0ac5c5376a2a6e32ac0c12ff8bc483abf04c9cb8[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Tue Feb 23 15:25:52 2021 +0530

    dcerpc: trigger raw assembly on record completion

[33mcommit c77c8e70050b865401b3cfd3d5396bec90ac2498[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Tue Feb 23 13:53:06 2021 +0530

    rust/context: add AppLayerParserTriggerRawStreamReassembly

[33mcommit 2d1460622411552c00c5ff59f4b4d8633920e7ec[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Dec 4 14:46:39 2020 +0100

    smb: andx support
    
    Add AndX support for SMB1. Finishes #3475.
    
    [Updated by Victor Julien to split functions]

[33mcommit 1ecea0f44c0050feb57c6b26a5a94c8ad8f1b85d[m
Author: Ilya Bakhtin <ilya.bakhtin@gmail.com>
Date:   Tue Jul 28 16:33:23 2020 +0200

    stream/tcp: fix stream side after direction change

[33mcommit 560974b2dbd402928e5fa8004ab810919cd86f04[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Feb 22 15:23:52 2021 -0600

    doc/quickstart: use new test url that works
    
    Replace http://testmyids.org with http://testmynids.org/uid/index.html,
    as testmyids.org now always redirects to https.

[33mcommit 7ece0ac31f9a3af13aebf928a1c63c672532dcec[m
Author: Josh Stroschein <josh@m9development.com>
Date:   Fri Dec 18 12:09:48 2020 -0600

    doc: update installation documentation for CentOS and Fedora

[33mcommit a04b5566a62d9d6967587f83dfaca89b5c33eb66[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Feb 17 09:37:57 2021 +0100

    http: makes decompression time limit configurable

[33mcommit 6ef28d0a7097fdeb5b64275a8ca37657008d0d72[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Feb 11 11:01:18 2021 +0100

    util/thash: fix memcap consolidate function
    
    The function THashConsolidateMemcap is used to allow to load a
    dataset even when the memcap is not set. But the implementation
    was in fact resetting the memcap value to the max of memory
    usaga after loading and default memcap. As a result, the
    function was resetting memcap to the default memcap even if
    a huge memcap was set in the dataset definition. In the case
    of dataset where we add to the set it was leading to memcap
    limit hitting despite the settings of memcap by the user.
    
    This patch udpates the code to set the final memcap value to
    the max of memory usage after loading and set memcap.

[33mcommit b3b64803e5e0fbd7700b9ca3b0a39be0d91a3130[m
Author: Ilya Bakhtin <ilya.bakhtin@gmail.com>
Date:   Thu Feb 18 21:25:58 2021 +0100

    stream: TcpStreamCnf.midstream type changed to bool

[33mcommit 5285163d8f31dc89a4ab96b0842099f9792e29be[m
Author: Ilya Bakhtin <ilya.bakhtin@gmail.com>
Date:   Mon Feb 15 18:36:46 2021 +0100

    protodetect: improve midstream handling
    
    Set "done flag" only if parsers for both directions are not found in a
    case of midstream parsers from other direction are tried if nothing is found
    for the initial one. "done flag" must be set if nothing is found in both
    directions. Otherwise processing of incomplete data is terminated at the very
    first try.

[33mcommit f967a491047a6d8eaa232944c690dadfb0cc3c86[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Sat Feb 13 17:57:42 2021 +0530

    dcerpc/udp: improve detection
    
    Lately, Wireguard proto starting w pattern |04 00| is misdetected as
    DCERPC/UDP which also starts with the same pattern, add more checks
    to make sure that it is the best guess for packet to be dcerpc/udp.

[33mcommit 3641f1b52256b7eb289048d6b83e660fe4907aaf[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Sat Feb 20 12:02:28 2021 +0530

    dcerpc: add probe function

[33mcommit d7a3523b12d0280f6fd8cdadc14118d1ede31fd5[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Sat Feb 20 12:01:20 2021 +0530

    rust/applayer: split EOF flag per direction

[33mcommit 0ca8591994abfe92bbef20ea6ab1856b11e3efde[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Sat Feb 20 12:00:17 2021 +0530

    dcerpc/udp: remove transmute
    
    The book defines transmute as "This is really, truly, the most horribly unsafe
    thing you can do in Rust. The guardrails here are dental floss."
    Transmute can result into mind boggling undefined behaviors. Get rid of
    it wherever possible.

[33mcommit c6aadf0dfa0d438e3a4a46db2de893b62e76d7ce[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Feb 2 11:12:12 2021 +0100

    protodetect: rename direction to flags
    
    And use whole flags in AppLayerProtoDetectPPGetProto

[33mcommit 7264f58f2cbf266ba44efd32c5031b692b57967d[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Feb 17 15:43:17 2021 +0100

    tcp: remove debug asserts about large windows
    
    Completes 00d7c9034be7470177c01e8805831c258b016d0e

[33mcommit 0dd5921bc9791ac733c8d264212d69e661309df1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 20 15:53:51 2021 +0100

    detect/prefilter: fix handling of prefilter as fast_pattern alias

[33mcommit b7fd01c86e0d0f3c341031d62ec89e305859aa0b[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Sun Feb 7 21:34:12 2021 +0100

    detect: forbids unsupported prefilters

[33mcommit e374d5ac15382685e53bf2398788251924fa4333[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 20 15:51:50 2021 +0100

    detect/fast_pattern: add prefilter test

[33mcommit 18fcbb20e2917cd8726e8e84726054d1f4ec187d[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Feb 2 11:07:13 2021 +0100

    fuzz: fix typo in comment

[33mcommit 5465e0b154ff7ede3e9c423781cf75156d1d1d70[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Dec 17 15:57:00 2020 +0100

    http2: http.stat_msg keyword now works for HTTP2

[33mcommit 5d676c5998aeb33c529e8ee8efcaa2fdf10324ef[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Dec 17 14:19:25 2020 +0100

    http2: http.uri.raw keyword now works for HTTP2

[33mcommit 47928babfc4adcd897aaa8c485f031683caf8f78[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Dec 17 13:26:35 2020 +0100

    http2: http.user_agent keyword now works for HTTP2

[33mcommit a98d0fe6edcd6bd5af460c067caca3021f543587[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Dec 8 12:46:24 2020 +0100

    http2: http.uri keyword now works for HTTP2
    
    cf #4067

[33mcommit 707f027231f11a93fbf7fbd111005afb6b22d443[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Dec 17 12:03:08 2020 +0100

    protos: renaming ALPROTO_HTTP* constants
    
    Having now ALPROTO_HTTP1, ALPROTO_HTTP2 and ALPROTO_HTTP
    
    Run with 3 sed commands
    git grep ALPROTO_HTTP | cut -d: -f1 | uniq |
     xargs sed -i -e 's/ALPROTO_HTTP/ALPROTO_HTTP1/g'
    git grep ALPROTO_HTTP12 | cut -d: -f1 | uniq |
     xargs sed -i -e 's/ALPROTO_HTTP12/ALPROTO_HTTP2/g'
    git grep ALPROTO_HTTP1_ANY | cut -d: -f1 | uniq |
     xargs sed -i -e 's/ALPROTO_HTTP1_ANY/ALPROTO_HTTP/g'
    
    and then running clang-format

[33mcommit 93e6401ce05789f77533667d37eab28a62616a3c[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Dec 17 11:52:42 2020 +0100

    http: introduces ALPROTO_HTTP_ANY
    
    For any versions of HTTP, both ALPROTO_HTTP and ALPROTO_HTTP2

[33mcommit c8dbe24fb6202550bbca1fab452ddbe864b2c9e2[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Dec 7 14:41:00 2020 +0100

    proto: introduce signature protocol, as extension to flow protocol
    
    AppProtoEquals function allows to check if a flow protocol
    matches a signature protocol

[33mcommit 93ce39d4505a996b2cd979b582c70fae485d0969[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Feb 11 16:34:34 2021 -0600

    github-ci: test install of library
    
    Add library install test to Fedora 33 build. In this case the
    shared library is disable so the test makes sure it is not
    installed.
    
    Also make sure the library and headers are not installed until
    explicitly installed.
    
    Add similar to test to an Ubuntu 24.04 build without disable-shared
    and check that the shared library is installed.

[33mcommit 02218a8a42b684eeaabe1ce97325ffdc6eeb208b[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Feb 5 09:40:09 2021 -0600

    Makefile: break headers and source into 2 vars
    
    Split the headers and source into 2 variables. Headers are
    marked noinst so they don't get automatically installed on
    "make install". Instead they will be installed by a custom
    Makefile target, "make install-headers".

[33mcommit dfd930a13e0061970ee72f951158cd2c4b0f7f32[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Feb 8 16:59:20 2021 -0600

    libsuricata-config: program to print build flags
    
    Following the pattern of many other libraries, provide a -config
    program to output cflags and libs to properly link an application
    against the library.
    
    usage: libsuricata-config [--cflags] [--libs] [--static]
    
    --cflags and --libs can be used infividually or together.
    
    --static will link against the static libraries instead of the
    shared library. Note that if the shared library is not available,
    the static libraries will be provided even without this option.

[33mcommit 2c5e1d6a6d4f89a4a8251faf30ea8c1337452912[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Feb 10 14:30:38 2021 -0600

    rust: separate the rust lib from RUST_LDADD
    
    Fix another issue with library ordering when breaking apart
    LDFLAGS from LIBS for outputting usable command lines for
    users of a Suricata library.
    
    RUST_LDADD should just contain the extra libs required by
    Rust, not the actual Suricata Rust library.

[33mcommit d648446c32246c409623340948d83bfa90cc9fef[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Feb 10 14:29:23 2021 -0600

    configure: put lua libs in LIBS not LDFLAGS
    
    This is required to separate LIBS from LDFLAGS when outputting
    a usable LIBS configuration line for users of the shared library.

[33mcommit dbae17dbc04f87f8463b02e11d1361fb6b1d84dc[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Feb 11 16:10:02 2021 -0600

    install: makefile target to install libraries
    
    As we don't install the libraries by default, provide a make target,
    "install-library" to install the libsuricata library files.
    
    If shared library support exists, both the static and shared
    libraries will be installed, otherwise only the static libraries
    will be installed.

[33mcommit e227d97e5edd846d0ed794e6d68373ab9def4d0b[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Feb 11 16:07:30 2021 -0600

    lib: build shared library on Linux
    
    Building the shared library on Linux is not something by default.
    Instead a user must opt-in to building by running the
    "make libsuricata.so" target in the src/ directory.
    
    Currently shared library support is only available on Linux. More
    OSs will be supported as we can test them.

[33mcommit a178ec6bef992a941cbf77109c7fbb786cf5487f[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Feb 4 15:41:00 2021 -0600

    rust: rename lib to libsuricata_rust
    
    Previously it was libsuricata.a, but eventually we want to get
    to a place where libsuricata.a is a combination of the Rust
    and C code.

[33mcommit 325096a07f4c6cb04b459ba9359c3ba0b40941aa[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Feb 4 15:47:05 2021 -0600

    github-ci: add -fsanitize=address to LDFLAGS for asan builds
    
    With fPIC, -fsanitize-address also needs to be added to LDFLAGS
    to build with ASAN support.
    
    Also fix what looks to be a copy and paste typo.

[33mcommit 9f20297cb3c151cfacd92e0777bc374fa0c507fa[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Dec 10 15:25:31 2020 -0600

    rust/Makefile: add Cargo.toml as make dependency
    
    This will force Cargo.toml to be recreated if Cargo.toml.in
    is modified.

[33mcommit e99dde0078d6fe15da0e1c7e66c982507e5fa804[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Nov 26 16:27:36 2020 -0600

    build: use a static convenience library for C code
    
    With the circular reference gone, we can now make use
    of a convenience library for the Suricata program
    as well as any other programs that depend on the same
    source such as the fuzzer.
    
    While its not a libtool convenience library, it serves
    the same purpose and is a common idiom in Make and CMake
    projects whereas the COMMON_SOURCES approach was more
    of a hack we had to resort to until the circular
    reference was resolved.

[33mcommit 6bfc5afa2301cc416e2fced23ec1accdfdea0daf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 13 17:10:15 2021 +0100

    host: improve compare logic
    
    The old compare macro would compare all bytes of an address, even
    when for IPv4 addresses the additional bytes were not in use. This
    made the logic vulnerable to mistakes like in issue #4280.

[33mcommit 7b03e6837e5a7366f546e7a2b681d2921ded1ab1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 13 16:54:56 2021 +0100

    detect/iprep: fix loading of mixed ipv4/ipv6 lists
    
    Improper reuse of the address data structure between loading
    different lines in the iprep file would lead to the host using
    a malformed address.

[33mcommit 82ecf64fe6a58422fd90134062ba273736386f92[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Feb 10 09:01:49 2021 -0600

    github-ci: run suricata-verify on centos-7 build

[33mcommit 3ada5e148006450053bab24325973b4bdc074f8b[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Nov 26 16:21:46 2020 -0600

    rust/ffi: provide AppLayerRegisterParser in context
    
    AppLayerRegisterParser was creating a link error when attempting
    to use a convenience library for the Suricata C code, then linking
    the library of C code with the library of Rust code into a final
    Suricata executable, or use with fuzz targets.
    
    By moving AppLayerRegisterParser to the context structure and
    calling it like a callback the circular reference is removed
    allowing the convenience libraries to work again.
    
    This is also a stepping block to proving a Suricata library
    as a single .a or .so file.

[33mcommit 1c771e15ef579fdbd1596ea3a4ab398d3f8e22d6[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Nov 26 16:20:36 2020 -0600

    .gitignore: ignore .a files
    
    Ignore .a library files as we now have one created in src/
    as part of adding a Suricata library.

[33mcommit 3ce05a35839eaf7dc8eb46833c7afd85356c5ff8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 21 13:28:04 2021 +0100

    fuzz: run OSS-Fuzz corpus and track coverage

[33mcommit 2b043150ed11b7def7047fb4170c27e95b00099f[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Jan 28 17:02:19 2021 +0100

    detect: initializes memory in bytemath parsing

[33mcommit b5d24a9a571c29118f3b36876ade93ce9bbe7124[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Nov 16 10:14:46 2020 +0100

    fuzz: driver running directories as well as single files

[33mcommit 0dba1b09dece46c3c71f28d0460e44bae179850e[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Feb 10 17:45:16 2021 +0100

    suricata: improve list keywords
    
    Exit with error if a keyword is not supported or not existing
    and display a message.

[33mcommit 2e4af5a0913af70996dab30224461a4843cc99e1[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Feb 10 17:28:18 2021 +0100

    suricata: return error value of custom run modes

[33mcommit 44460f1945f47b95d4a3063f032890fc65120d44[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Feb 10 17:26:47 2021 +0100

    util/running-modes: don't exit in running mode

[33mcommit 921d44b262f30555ea747653b050dfde4188c042[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Feb 10 16:23:25 2021 +0100

    log/pcap: exit on invalid filename
    
    If the filename has to % sign and if pcap logging is using multi
    mode, then the pcap capture will fail. So let's exit if ever this
    is the case.

[33mcommit 6a45064d4cc66e82b35edc99469dbc68ad146c25[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jan 29 23:59:11 2021 +0100

    suricata: unix-socket mode and -l are compatible
    
    Commit 93642a0d1dd29c96e98824935ef963f6b1ef40eb did prevent to
    specify the logging directory on command line and use the unix
    socket.
    
    It looks like the implementation has evolved and the arbitrary
    limitation can be removed allowing a user to start unix socket
    without editing the configuration file.

[33mcommit 730438943856e957032a38c11ca762bef73da1ef[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jan 27 11:38:34 2021 +0100

    eve: only output ja3 and ja3s if present
    
    This will prevent JSON entries like the following that occur
    with the dedault configuration (ja3 deactivated and extended
    tls ouput activated):
    
      "tls": {
        "subject": "C=GB, ST=London, L=London, O=Global Security, OU=IT Department, CN=example.com",
        "issuerdn": "C=GB, ST=London, L=London, O=Global Security, OU=IT Department, CN=example.com",
        "serial": "00:9C:FC:DA:1D:A4:70:87:5D",
        "fingerprint": "b8:18:2d:cb:c9:f8:1a:66:75:13:18:31:24:e0:92:35:42:ab:96:89",
        "version": "TLSv1",
        "notbefore": "2020-05-03T11:07:28",
        "notafter": "2021-05-03T11:07:28",
        "ja3": {},
        "ja3s": {}
      }

[33mcommit cbb03dbb39d76cf1a2770ef35ba07aac5c3657b5[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon Feb 8 08:06:53 2021 -0500

    detect/pcre: Test capture group/var mismatch

[33mcommit 469d5bb214195d8939be467c66ef1e6d25ad3e1f[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon Feb 8 08:05:41 2021 -0500

    detct/pcre: Correct capture group count check
    
    This commit corrects the validation check between the number of
    variables used and the number of specified capture groups.

[33mcommit 32b604e8c720fc30398e7bf255fc75cfe22825dd[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Feb 5 15:15:27 2021 +0100

    template: use response_gap in rust parser

[33mcommit ed05c51d9943771b985bc90f2a319f1688de7483[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 5 08:41:22 2021 +0100

    detect/state: optimize state keeping

[33mcommit 13cebb1857c3637f55a566ed694e7ed7f0ee0d87[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 4 14:48:11 2021 +0100

    detect: fix heap overflow issue with buffer setup
    
    In some cases, the InspectionBufferGet function would be followed by
    a failure to set the buffer up, for example due to a HTTP body limit
    not yet being reached. Yet each call to InspectionBufferGet would lead
    to the matching list_id to be added to the
    DetectEngineThreadCtx::inspect.to_clear_queue. This array is sized to
    add each list only once, but in this case the same id could be added
    multiple times, potentially overflowing the array.

[33mcommit 17a38f1823adeb9eb059f666686e35509f3a13d2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 3 12:00:51 2021 +0100

    flow/manager: (u)sleep slightly longer
    
    Sleep 250 microseconds instead of 100 as running in KVM cause the
    old value to use 100% CPU for these threads.
    
    Perf testing suggests no measurable impact for the non-KVM case.
    
    Ticket: #4096

[33mcommit 8baef60d600c5254662633d8275f321a6dafb82c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 1 22:23:47 2021 +0100

    app-layer: fix transaction cleanup
    
    Fix a 'skipped' transaction early in the list leading to all further
    transactions getting skipped, even if they were fully processed and
    ready to be cleaned up.

[33mcommit 62e665c8482c90b30f6edfa7b0f0eabf8a4fcc79[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Jan 27 21:21:44 2021 +0100

    fuzz: rightly uses PacketFreeOrRelease in target
    
    instead of PacketFree because packets
    may belong to the pool

[33mcommit e586d8526b3aea6562f7e04d3cde88bded9bd420[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Jan 26 20:34:14 2021 +0100

    fuzz: use some value for max_pending_packets
    
    so as not to timeout waiting forever for the condition
    in PacketPoolWait

[33mcommit a6bbb608f79efb80de9d4ffbb84727a23227285b[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Jan 25 21:33:24 2021 +0100

    fuzz: makes target sigpcap more reproducible
    
    By removing the temporary rules file if it existed
    before the first run

[33mcommit f2e95174346adc5f42959d8bd15c7b0e470f7278[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 26 21:22:26 2021 +0100

    github: run codecov verify test w/o optimizations

[33mcommit 3f807f3bf61461c27a8750dbfefb352ef12a4e0d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 26 14:28:11 2021 +0100

    rust: update dependencies

[33mcommit ebde15f0e281222336e9a652e0f4c94e482ddce1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jan 16 10:14:10 2021 +0100

    rust: lock all major crate versions
    
    To avoid surprises with dependencies bumping MSRV.

[33mcommit 4b5af3606124e8c2b895a6b2f23402a9decace67[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jan 16 10:08:11 2021 +0100

    rust: relax nom version to any >=5.1.1

[33mcommit b869ac01eef6d488b91dcc653c911c3af4966d75[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Jan 21 12:27:31 2021 +0100

    http: enables request decompression

[33mcommit 85327890f5bb3b9521a2dfb8268ace6645d02f72[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Jan 24 22:40:02 2021 +0100

    suricata: avoid at exit crash in nfq mode
    
    When Suricata was build with ebpf support and when it was started
    in NFQ mode, it was crashing at exit because it was trying to free
    the device extension.
    
    This patch fixes the issue by only trigger the eBPF related code
    when Suricata is running in AFP_PACKET mode.

[33mcommit e6cfcb704c32c1356caaa9176536557459793ff3[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Jan 24 22:11:38 2021 +0100

    storage: fix a variable name

[33mcommit 628458e7d3d7a64a12ac60241f7ff1d296e04cdb[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Jan 23 20:57:02 2021 +0100

    detect: fix link to documentation

[33mcommit 43f25f127f069292e5e92377b82d40df2c3cb2d4[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Jan 21 14:44:33 2021 +0100

    ftp: ftp-data recognized by StringToAppProto

[33mcommit d8612282149df27be47f7aaba906ea08dcc3952e[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Nov 12 09:24:36 2020 +0100

    http2: decompression for files
    
    gzip and brotli decompression for files

[33mcommit 2e46b5d1001d61da2131c42554eff10b7400ad81[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Dec 8 14:53:01 2020 +0100

    rust: BIT_U16 macro utility

[33mcommit aee8e601491c60aac9ee158918a4110df87bcc1e[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Sun Dec 6 20:36:45 2020 +0100

    rust: better panic message for missing file config

[33mcommit 8ac363c34dc41e681e0efc6a741febc86855ceb4[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Jan 22 15:31:59 2021 +0100

    rust: fix warning about unused values in smb tests

[33mcommit 76db6e34a1e54346fb6881c50abb1fc45f8d7103[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Jan 22 15:55:31 2021 +0100

    protocol detection: fix failure case
    
    as reached by CIFuzz even if unreachable from Suricata

[33mcommit f5d8e953a876bdbdd882fdf0260fc23023361180[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Sep 2 16:27:46 2019 +0200

    protodetect: debug validation when multiple patterns match

[33mcommit 00d7c9034be7470177c01e8805831c258b016d0e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 21 16:44:39 2021 +0100

    stream: remove debug assert
    
    In cases of large windows in the past the check would tigger.

[33mcommit b66d013294e258a05f9f0c8506e059ba7415f5fd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 20 22:34:01 2021 +0100

    detect/http_client_body: minor test cleanups

[33mcommit 64f994f753b9109c8f788e3a6dbe4c72f6e69d94[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jan 20 21:17:04 2021 +0100

    dataset: fix dataset string lookup
    
    The data was unlocked but the use_cnt was not decreased resulting
    in the data entry not being removable.

[33mcommit 191461a02861593f7476958c9fc14d912c1d4465[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 20 13:40:15 2021 +0100

    detect/file_data: cleanup tests

[33mcommit 116c089de0bd73ab8e3c65c597e02477aa43a5ab[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 20 08:40:04 2021 +0100

    stream/tests: minor cleanups

[33mcommit 80a3bbef3d77503e77efe801a453eb2dab54b20a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 20 07:15:10 2021 +0100

    qa/cocci: support FAIL macros in malloc check

[33mcommit 711cfe56575acdc012f58c6a52172560f005710f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 19 20:25:19 2021 +0100

    github: codecov fix path handling

[33mcommit ee6d792b02ee09bfb436a2e7bd3a1f87e4aebf9c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 19 19:40:32 2021 +0100

    stream: move tests into tests/

[33mcommit 226a82bade5d12eaf0784f5399b35bcd8e50750c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 19 14:23:05 2021 +0100

    detect/fast_pattern: redo unittests

[33mcommit 66d7f5941a3f01471291b8e38bb52899f33a6fa0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 19 14:22:50 2021 +0100

    detect/fast_pattern: remove dead code

[33mcommit bc9e7743f38b0e5e35429f846f5ab02cbbf9a48f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 19 07:50:28 2021 +0100

    detect/http-ua: cleanup tests

[33mcommit f12daa710f30e45ced2fc5bd975cbf779c96183f[m
Author: Emmanuel Thompson <eet6646@gmail.com>
Date:   Mon May 4 11:38:16 2020 -0400

    decode/flow/esp: Add ESP decoder & flow
    
    - Adds an ESP (Encapsulating Security Payload) header decoder
    - Tracks ESP flows via the SPI field

[33mcommit 9adeae07b15717382e2fa874740eb66d71416bbe[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 18 20:58:26 2021 +0100

    decode: reformat REINIT macro

[33mcommit 3f4398cc90f3b8d57b9426fe823b332e5163d799[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 18 15:50:57 2021 +0100

    decode: minor unittest cleanups

[33mcommit bf00285d0acf87c794f6569eb51d1f7d1247a0da[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 18 13:56:32 2021 +0100

    proto/names: add SCTP if not defined in system
    
    If SCTP is missing from /etc/protocols, add it manually.

[33mcommit 530390179095c8c2e885e5eacc449c78982246d9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 18 09:41:01 2021 +0100

    github: add codecov.yml
    
    Don't report until both cov runs are available to avoid partial
    reporting in pull request comments.

[33mcommit c25afbccc12d6dc096fb350b85a19f2f24523f9b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 18 07:57:39 2021 +0100

    json: remove unused jansson wrappers

[33mcommit b6b317cae6da48b3708dab76e02aac1362f519d3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jan 17 23:34:07 2021 +0100

    http: enable and fix content range tests

[33mcommit a7cd765f2057cec1c57127b935d3c9839e5ae01d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jan 17 23:22:09 2021 +0100

    app-layer/nfs: dead code removal

[33mcommit 97350d9a2c0507ce2f5e17a92d193a8e783c4a5e[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Sat Nov 21 22:42:57 2020 +0000

    detect/rpc: clean up unittests
    
    - detect-rpc: convert unit tests to new FAIL/PASS API.
    - detect-rpc: replace SigInit with DetectEngineAppendSig for more
      concise code.

[33mcommit 1e9934cf218f7a0b30d426957038593eaa2144b5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jan 17 17:15:01 2021 +0100

    github: add codecov badge

[33mcommit f0f578444e38f11cb4ec7d37ed200cbeef480d51[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jan 17 07:40:53 2021 +0100

    ci: initial codecov integration

[33mcommit 37b1595c20959353ec438860dc5a49bcae227aa8[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jan 5 21:40:33 2021 +0100

    configure: fix llc detection on recent Debian
    
    Where clang --version was returning:
    
    clang version 9.0.1-15+b1
    Target: x86_64-pc-linux-gnu
    Thread model: posix
    InstalledDir: /usr/bin
    
    Newer version like clang-10 on Debian are returning:
    
    Debian clang version 10.0.1-8+b1
    Target: x86_64-pc-linux-gnu
    Thread model: posix
    InstalledDir: /usr/bin
    
    As a result the parsing was failing to determine which llc was
    available on the system.

[33mcommit 512b0350a0bbdd54b63d017295bf9d332bed6a9f[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Jan 13 09:40:06 2021 -0600

    lua: fix coverity issue with out of scope variable
    
    Fix usage of out-of-scope variables. Introduced with the hashing
    and adding the guard of g_disable_hashing.
    
    To fix, just remove the guard so all variables are in scope. Hashes
    are not initialized here so there is no need for the guard.

[33mcommit 1c68f4aed66dceed79ce04d0f9cd14ca2fe72589[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Jan 13 13:43:52 2021 -0500

    lua/test: Test cases using SC prefix
    
    This commit adds paired test cases to ensure that the SC variant of the
    entry points are tested.

[33mcommit 25e94831682c6eb641b416afef83d78de6f95729[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Jan 13 13:39:21 2021 -0500

    doc/lua: Lua API name consistency
    
    This commit updates the documentation of the SCFlow* function names
    available to Lua scripts.
    
    Formerly, they used the prefix "Sc"; now they use "SC".

[33mcommit c8459746396d142a9aec53e44a252c4bf4773716[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Jan 12 10:16:43 2021 -0500

    general: Correct typo

[33mcommit 431018d6f7d81ec603d29ba990ef22e51d797139[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Jan 12 10:14:54 2021 -0500

    lua: Use SC prefix for Lua functions
    
    This commit adds additional Lua API interfaces to bring consistency to
    functions such that the `SC` prefix is available consistently across
    flow int and flow var functions.

[33mcommit 3a8ba663a99d0be7973689492ce3f80beb97731f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 12 22:22:27 2021 +0100

    email/md5: optimize md5 handling

[33mcommit 547afcb983a1f6c6bd40004f26e81916efb91e9e[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Jan 4 11:03:31 2021 -0600

    doc/userguide/transforms: remove not about libnss being required

[33mcommit 41591af48bed7d83a6144a0581fe593b6c6a430c[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Jan 4 11:02:50 2021 -0600

    doc/userguide/install: remove libnss

[33mcommit 4695e8e595229990005c8d369df60a7bc502d350[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Jan 4 10:59:50 2021 -0600

    travis-ci: don't install libnss

[33mcommit 6299222c4ef8b7c2dcb81b2ce0866f7af858663f[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Jan 4 10:48:20 2021 -0600

    email/eve: use Rust function to hash buffer to hex
    
    Use SCMd5HashBufferToHex to hash the subject to a hex string.
    Removes snprintf loop.

[33mcommit 0a3b9e0220bd7f766c127cf65ffc3cb1de8ab2fb[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Dec 30 16:37:28 2020 -0600

    rust/hashing: add function to finalize md5 to hex string
    
    New function, SCMd5FinalizeToHex to finalize an md5 hash
    to a hex string.

[33mcommit 3a8215386656a274cc2e89181034375b71e49dde[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Dec 30 16:18:39 2020 -0600

    ja3: use SCMd5HashBufferToHex to print hash as hex
    
    Replace snprintf loop with new function that hashes a single
    buffer to an MD5 hex string.

[33mcommit 26c132166853e507da32fb6cde1224137b2b98b1[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Dec 30 16:17:52 2020 -0600

    rust/hashing: function to md5 hash buffer to hex
    
    Add function SCMd5HashBufferToHex to hash a single buffer to an
    md5 hex string.

[33mcommit e00d21a5cb0191b561a81b667486888bd2b3c6c8[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Dec 28 16:08:30 2020 -0600

    filestore: respect g_disable_hashing
    
    If g_disable_hashing is set, behave like libnss wasn't compiled
    in.

[33mcommit 4e57b5e665a8ba3b193bdf726fd5d13f45257619[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Dec 23 16:55:11 2020 -0600

    github-ci: don't install libnss/libnspr packages

[33mcommit 6dfc888966d43e8b09279c0e451c56c56c658d7a[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Dec 23 16:54:57 2020 -0600

    configure.ac: remove tests for libnspr and libnss

[33mcommit 7525295e6334361f48a104918ab2a9d78bce18e1[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Dec 23 16:50:07 2020 -0600

    hashing: remove remaining HAVE_NSS guards
    
    For features, we pretend to HAVE_NSS so scripts, external tests
    continue to work.

[33mcommit 9b314bebe030d2ed80fac52bae00a8b67dc3b83f[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Dec 23 16:40:27 2020 -0600

    output-json-email: use Rust md5 bindings instead of libnss

[33mcommit 815396263bdebce961b31c3d473fb0751e59711a[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Dec 23 16:35:07 2020 -0600

    util/mime: use Rust md5 bindings instead of libnss
    
    As the new Md5 hashing consumes its context on finalize, an bool
    has_md5 flag has been added to let the logger know there is an
    md5 hash available.

[33mcommit 9e14c00298ba69e4266ce2c67f99ddff3acc4cb8[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Dec 23 16:25:02 2020 -0600

    transform-sha256: use Rust sha256 bindings
    
    Use new Rust sha256 bindings insead of libnss.

[33mcommit 0f714be9f3997282eb0084a5ef70ab983d036fd8[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Dec 23 16:24:23 2020 -0600

    rust/hashing: method to SHA256 and finalize in one call
    
    Add SCSha256HashBuffer to hash a single buffer returning the
    result.

[33mcommit d98e34045bac5acb4082332f565c5dc17bf7a519[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Dec 23 16:13:55 2020 -0600

    transform-sha1: use Rust sha1 bindings
    
    Removes dependence on NSS.

[33mcommit 3d1a294bc76fb32fd97f23f290fc4192518e7780[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Dec 23 09:53:50 2020 -0600

    util-crypt: remove ComputeSHA1
    
    There is now a Rust replacement for ComputeSHA1 that is exposed
    to C as SCSha1HashBuffer.

[33mcommit 90dcaff41dc7063071f222cb3e5b6d229a13d049[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Dec 23 09:50:48 2020 -0600

    ssl: replace ComputeSHA1 with Rust SCSha1HashBuffer
    
    Removes the final use of internal ComputeSHA1 function.

[33mcommit e0a2d10e7e73d4a50346662c3dbcb49a5b22bcf9[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Jan 11 11:28:41 2021 -0600

    transform/md5: use Rust md5 bindings

[33mcommit c2dd2c25b64a97b96d52e15a20c2c5ed84b64064[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Jan 11 11:27:43 2021 -0600

    error: new disabled hashing error code
    
    Add new error code to be used when something fails due to hashing being
    disabled.

[33mcommit 4b9af8d2cebef97a4c7c4df5c886b572cada7df7[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Jan 6 12:47:13 2021 -0600

    doc/userguide: document --disable-hashing

[33mcommit f723dc1309a793f6fbcf81d6507fe946b4caa04a[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Jan 11 11:26:21 2021 -0600

    suricata: add --disable-hashing option
    
    The idea with a flag to disable hashing is to provide a way to
    get the effect of building Suricata without libnss, which is
    sometimes done for performance reasons.

[33mcommit 245a1bd4ce233733493e58f930089303d9be3c76[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Jan 8 09:06:48 2021 -0600

    suricata.c: clang-format required after new option added

[33mcommit 7bb917b835287bbcabe069267d9743993a55ff2a[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Jan 8 09:05:32 2021 -0600

    suricata.c: disable clang-format on long_opts init
    
    clang-format will reformat this to have multiple options on a
    single line which is hard to read and I don't see a specific
    clang-format option to format this better. So for now,
    disable clang-format on this section of code.

[33mcommit 0321f60ebf6d4a3bbe586e7109986b54749af8f4[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Dec 23 09:48:14 2020 -0600

    community-id: use Rust SHA1 to compute hash
    
    Removes use of our internal ComputeSHA1 for calculating the
    community ID.

[33mcommit eb5cfd9b822c39d2555dbfe539c9d609617dee5e[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Dec 23 09:47:32 2020 -0600

    rust/hashing: new function to SHA1 hash a single buffer
    
    SCSha1HashBuffer will has a single buffer and compute the digest
    in one call.

[33mcommit ff37526c6bca9bb9e92ad7f35c8cee9505beae7a[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Dec 22 22:31:09 2020 -0600

    rust: remove md5 crate, unalias md-5
    
    Remove the md5 crate as a dependency as it is no longer removed.
    We now use md-5 from RustCrypto.

[33mcommit 0a2d8509c966bb9504487b8a81926e02bcf949b8[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Dec 22 22:27:26 2020 -0600

    rust/ssh: use md-5 crate instead of md5
    
    The "md-5" crate is part of the RustCrypto project that also
    uses the sha1 and sha256 crates we are using. These all implement
    the Digest trait for a common API.

[33mcommit c0ddad8e7ef1927e4f22854206a5d7ac1ff2e14d[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Dec 22 16:44:29 2020 -0600

    doc/ja3: libnss support no longer required

[33mcommit d5bf748c9049068cd7e8ba83776f61b934f47389[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Dec 22 16:44:42 2020 -0600

    ja3: remove requirement on NSS

[33mcommit 1022b217ed0f3fae9096d91399ec3beed6253f0a[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Dec 22 16:43:13 2020 -0600

    rust/hashing: a method to md5 hash a single buffer
    
    Add SCMd5HashBuffer as a replacement for NSS HASH_HashBuf as
    used in ja3 to hash a single buffer.

[33mcommit e50ee7eb6251ab82097e19a84fdfeba6e7f0c1a3[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Dec 22 16:18:01 2020 -0600

    filestore: remove requirement of nss for filestore
    
    Required including NSS header in places that depended on
    util-file.h including it.
    
    All filestore suricata-verify tests now pass without libnss.
    
    Also enabled detect-file{md5,sha1,sha256} without NSS support.

[33mcommit e4acbcbb5e0d214902c7bf0de7e17592c309c2ed[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Dec 22 12:38:24 2020 -0600

    filestore: use Rust bindings for sha256/sha1/md5

[33mcommit 46ceb13c08f8ff731ba15b53a47b3bad77c1defd[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Dec 22 12:35:45 2020 -0600

    rust: add ffi module for sha256, sha1 and md5
    
    Add a Rust module that exposes Rust implementations of
    sha256, sha1 and md5 from the RustCrypto project.
    
    This is an experiment in replacing the libnss hash functions with
    pure Rust versions that will allow us to remove nss as a compile
    time option.
    
    Initial tests are good, even with a 10% or so performance
    improvement when being called from C.
    
    Also trying a module naming scheme where modules under the ffi
    modules are purely for exports to C, as it doesn't make any
    sense to use this new hashing module directly from Rust.

[33mcommit 5499a6f7cd2265072945dbb3b5a61e2a5e1f7ad1[m
Author: Kirby Kuehl <kkuehl@gmail.com>
Date:   Tue Jan 5 08:55:22 2021 -0800

    doc: fix URL for unix-socket python example

[33mcommit 8ce2078a38a7e08ddd9afd47f2cb9858fbb8eb0b[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Jan 8 08:00:35 2021 -0500

    tftp: Add test cases
    
    This commit adds test cases for the TFTP parser.

[33mcommit e900b6d26552cfed46d7e6c5d9b99fc63319323f[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Jan 8 07:56:19 2021 -0500

    tftp: Improve parser
    
    This commit improves TFTP parsing by ensuring the mode and opcode are
    valid.

[33mcommit 18a1fd22c2dfd0613b190a656574077c1230e309[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Jan 8 10:32:47 2021 -0600

    github-ci: use python3 in debian builds

[33mcommit 7904ef82d0b2478694025ca0d9043f2ae98be73a[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Jan 8 09:39:19 2021 -0600

    github-ci/macos: use brew to install Python 3
    
    The default Python on MacOS is Python 2. Suricata-Verify now
    depends on Python 3, so install it with Brew.

[33mcommit 37eff69a37c506cf044195340fccb15dff395729[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Dec 30 11:24:17 2020 -0600

    github-ci: update min Rust version from 1.34.2 to 1.41.1

[33mcommit f77fd0c0cb5e8c86d8351b10432ffa0f185b22e6[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Dec 22 10:40:18 2020 -0600

    rust: include file cleanup
    
    The cbindgen generated header should not include rust.h as
    rust.h already includes the generated binding.
    
    Fixup C source code that only pulled the generated include, it
    should instead pull in "rust.h" which includes the generated
    binding plus other misc. stuff.

[33mcommit 47dd9a5ebc26dac25b63b5ca37062e7a63cd5335[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Jan 7 09:46:02 2021 +0100

    signature: Fix leak in urilen parsing
    
    cf #4254

[33mcommit 423a5e2f6c1a593b6746c7ff18d1d80687dc7aef[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 11 15:28:30 2021 +0100

    detect/file.data: support ftp and ftp-data

[33mcommit 45eddde573ab2e807a5fa44170d544288a60ea12[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 11 15:17:02 2021 +0100

    detect/file.name: register inspect engine for ftp-data

[33mcommit f8fef0dd05e87c3bf25e4e5c0bcf136e94c98393[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Jan 5 09:31:11 2021 -0500

    decode/tcp: Improved handling of TFO options
    
    This commit improves handling of TCP fast open options
    - Option length must be in [6, 18]
    - Option length must be an even value

[33mcommit 10ea60a237cf41ddd10f7a887e2824b4b8e1c419[m
Author: Gianni Tedesco <gianni@scaramanga.co.uk>
Date:   Sun Dec 13 23:54:13 2020 +0900

    detect: Validate that NOOPT options don't have optvals
    
    Without this, a simple typo between : and ; is able to hide actual bugs
    in rules.
    
    I discovered 2 bugs in ET open ruleset this way.

[33mcommit cebe15c23b48e92df5181b3f0b0e6ac7195d717b[m
Author: Gianni Tedesco <gianni@scaramanga.co.uk>
Date:   Sun Dec 13 23:50:23 2020 +0900

    detect-fast-pattern: Mark as OPTIONAL_OPT, instead of NOOPT
    
    Also update the erroneous comment about it.

[33mcommit f78f444a5e7a5ad536b7204ee79b14334282379a[m
Author: Sascha Steinbiss <satta@debian.org>
Date:   Wed Dec 9 18:34:49 2020 +0100

    doc: build all manpages

[33mcommit dfe5785bfa630905ae52267baeae5453231f9b2d[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Dec 28 09:41:09 2020 +0100

    ebpf: avoid need of 32 bit header
    
    Compilation of xdp_lb.c was failing in some case with the following
    error:
    
    /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found
    
    This patch add some define to be able to skip recursive inclusion of
    header files leading to the problem.

[33mcommit e33bbee9b74f2fdc070e989f4c9d9b6e27483f8d[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Mon Dec 28 17:37:33 2020 +0000

    nbss: add parser tests
    
    Add tests to parse_nbss_record and parse_nbss_record_partial

[33mcommit 8d034b4163df9b5233f03d8b1dd88e42268c5d07[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Aug 2 18:38:58 2020 +0200

    eve/dhcp: avoid to call common logging twice

[33mcommit 9d432bbab339aa60dfd2eab2b49d760435f6697e[m
Author: Joshua Lumb <joshua.lumb@gmail.com>
Date:   Mon Jul 27 11:36:52 2020 -0400

    threads: More descriptive startup output

[33mcommit 9b840104bd5846b817b824836b34a4f5dc442be6[m
Author: Carl Smith <carl.smith@alliedtelesis.co.nz>
Date:   Thu Nov 17 16:36:10 2016 +1300

    lua: Make the rule action available to output scripts
    
    Useful for those that want to do custom logging from lua

[33mcommit 320de5f43d6b3be88ce69afe57c3d1b0b12c4337[m
Author: Justin Ossevoort <justin.ossevoort@tesorion.nl>
Date:   Fri May 8 15:33:36 2020 +0200

    eve: Log tenant_id for all eve-json messages

[33mcommit 660b68a08331e9eb711eb4ace74c7a3c9493f298[m
Author: Carl Smith <carl.smith@alliedtelesis.co.nz>
Date:   Mon Aug 17 17:29:05 2020 +1200

    nsh: Parsing of Network Services Header and payload
    
    Support for EtherType 0x894F and basic header

[33mcommit db2dbaaf40a911200849b235d8408788fa379276[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 29 20:36:26 2020 +0100

    stream/midstream: handle packet loss after SYN/ACK

[33mcommit 895938080f52db464faf8d971fd5b06bc139ad0a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 28 19:18:08 2020 +0100

    stream/tcp: fix invalid ack events in timewait state

[33mcommit 49bd1f85b99e8bd473ae28c6eb93510b2b3c7668[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 23 15:55:19 2020 +0100

    flow/timeout: fix TCP seq/ack for reversed flows
    
    When a flow is swapped it also swaps the stream trackers, so it does
    not make sense to reverse them during pseudo packet creation.

[33mcommit 3c7c361b603653a4c0bb30a4261babc45988d163[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 17 21:04:13 2020 +0100

    detect/stream: fix async stream inspection
    
    Move raw progress forward only if detect uses stream data, indicated
    by the PKT_DETECT_HAS_STREAMDATA flag.

[33mcommit 8aa02c6d15f013f9ce934e440ee073701d3ea502[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 17 10:54:05 2020 +0100

    stream/tcp: fix async mode ACK validation

[33mcommit 8d659c6500b79b881e16133cbb5719426ceacec7[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Dec 18 21:56:24 2020 +0100

    fuzz: improves sigpcap target with PacketPoolInit

[33mcommit 372fc26739b414684ad0a7e25f444ceceb379173[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 11 10:19:41 2020 +0100

    ci: buildbot is decommissioned, so remove prscript refs

[33mcommit 49ca070446cdca49afc42d71aaedaa9a1b458897[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Dec 10 09:48:06 2020 -0600

    github-ci: use a unique id for the commit check cargo cache
    
    All builds have been using the same cache id for ~/.cargo which
    could lead us to conflict situations which is what I think we are
    seeing with the commit-check job.

[33mcommit 6c19e7d0d4b4c1f56445cd9aca44556de819891c[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Fri Sep 11 20:42:22 2020 +0530

    counters: convert to FAIL/PASS API

[33mcommit 7eef4e83e524da70a12b932ee6dbd6552856aa23[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Fri Sep 11 20:32:11 2020 +0530

    confyaml: convert to FAIL/PASS API

[33mcommit fb311e3d9dd6fc3dbece035e3baf08cf6c15835b[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Fri Sep 11 18:13:51 2020 +0530

    applayer: convert to FAIL/PASS API

[33mcommit bfd956ce6764c36687239cee3915fa0412c13a34[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Fri Sep 11 17:59:08 2020 +0530

    applayer/htp/xff: convert to FAIL/PASS API

[33mcommit b195ffbe1838a7301df4a5aecdaff7268832427c[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Fri Sep 11 17:45:46 2020 +0530

    applayer/ftp: convert to FAIL/PASS API

[33mcommit 2e3d408e6ff9a23466eba4ad7d47ce632b973813[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Fri Sep 11 17:45:22 2020 +0530

    fastlog: convert to FAIL/PASS API

[33mcommit 2d3cf1190682871ba4e668bd336531666e493bba[m
Author: Janani Ramjee <janani6472@gmail.com>
Date:   Mon Oct 12 14:59:05 2020 +0530

    detect/mark: convert unittests to use PASS/FAIL API

[33mcommit 2765bff0c5fd0ff1b42a0d166943bf68ccb78869[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Tue Oct 20 17:48:20 2020 +0100

    detect/msg: convert to FAIL/PASS API
    
    Issue 4053. Adjust code formatting style (wrap long lines).
    Replace SigInit with DetectEngineAppendSig.

[33mcommit d4264748d8fe09d20db1762f664a05a4e1b5bf7e[m
Author: Sumera Priyadarsini <sylphrenadin@gmail.com>
Date:   Wed Oct 21 14:45:26 2020 +0530

    detect: filesha1: convert unittests to use PASS/FAIL API
    
    Currently, unit tests use integer values 1 and 0 to denote pass
    and fail status of tests respectively. Modify the unit test
    detect-filesha1 to use the PASS/FAIL API instead.

[33mcommit 5226ba1c15be5535f2b550bc9de19b9a0c13f3cc[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Wed Nov 4 18:07:16 2020 +0000

    Rust: generic files definition
    
    Issue: Optimization 3825
    - filecontainer: add Files structure, to replace/unify SMBFiles,
    NFSFiles and HTTP2Files
    - smb/files: delete SMBFiles implementation
    - smb/smb: replace SMBFiles with Files
    - nfs/nfs: delete NFSFiles implementation, replace its former
     declarations with Files' ones
    - http2/http2: replace HTTP2Files with Files
    - http2/mod: Delete reference to file files.rs
    - http2/files: Delete

[33mcommit d2144c0dfb91662e8e5b1ea79deccc7b1364887b[m
Author: Juliana Fajardini <jufajardini@gmail.com>
Date:   Mon Nov 16 19:49:56 2020 +0000

    detect-sid: fail/pass api
    
    - convert unittests to new FAIL/PASS API.

[33mcommit f09536a936e18cf008ea6457220f6d5600602e7a[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Dec 8 09:34:52 2020 -0600

    github-ci: fix centos 8 build
    
    The "PowerTools" repo that we need to enable has been renamed
    to "powertools".

[33mcommit f2ab5803fbd88ae613429a382f28e81841832d0d[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Dec 7 15:31:34 2020 -0600

    dns: initialize log flags as an unsigned long long
    
    On 64 bit all 64 bits were being initialized, but on 32 bit
    only 32 bits were as it was being initialized as a long.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/4206

[33mcommit a4556c94271a107e4a4e7b62e109b021bb67f6e8[m
Author: Sascha Steinbiss <satta@debian.org>
Date:   Tue Nov 3 19:52:10 2020 +0100

    dns: use rest() for NULL parsing

[33mcommit 81b206a5f4502904244fc4856f6e382efd12d381[m
Author: Sascha Steinbiss <satta@debian.org>
Date:   Fri Oct 30 11:16:53 2020 +0100

    dns: add test for SRV

[33mcommit 15c42e0d83d8c61b0019ac501309df001e1a10f9[m
Author: Sascha Steinbiss <satta@debian.org>
Date:   Tue Nov 3 19:29:15 2020 +0100

    doc: add documentation for SRV DNS JSON structure

[33mcommit 08a6f1441a657a4424d00011e9bba96d5952042b[m
Author: Sascha Steinbiss <satta@debian.org>
Date:   Tue Nov 3 19:29:00 2020 +0100

    dns: parse SRV records

[33mcommit f3ad7f14fabe722d9d5c707323504ac20535962c[m
Author: Antti Tönkyrä <daedalus@pingtimeout.net>
Date:   Thu Oct 8 12:33:33 2020 +0300

    dns: add rdata logging for NS rrtype

[33mcommit 4336a0e7394a31a3eaddb15cfe543c27955fa96c[m
Author: Simon Dugas <simdugas@gmail.com>
Date:   Wed Apr 22 17:29:32 2020 +0000

    dns: log rdata for NULL record type
    
    Logs the rdata for a NULL record type as a printable string.

[33mcommit 858ab077752478ec0df2e6312353f36860a47c52[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Dec 7 11:54:52 2020 -0600

    github-ci: add sccache to per-commit check
    
    Also use the pre-build cbindgen binary.
    Hopefully speeds up the build process.

[33mcommit efc9a7a3989df42f09f9018b9aa01044b1a05441[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 30 13:40:17 2020 +0100

    app-layer: remove callback for completion status
    
    Since the completion status was a constant for all parsers, remove the
    callback logic and instead register the values themselves. This should
    avoid a lot of unnecessary callback calls.
    
    Update all parsers to take advantage of this.

[33mcommit 84385549fe99ada08310459c236484ec316eb8a5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 19 15:33:36 2020 +0200

    detect: remove unused arg from generic list inspect

[33mcommit d694dac5a8c1fdf4541d26be25cfed1fd53eb594[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 19 15:33:00 2020 +0200

    detect: remove inspect v1 API

[33mcommit 92a8d8b4f4cd7e1f4776bb0f9acb32bcda1471b9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 20 11:07:03 2020 +0200

    detect/template: convert to v2 inspect API

[33mcommit 494f8f270016a8eb62ff3680a3566a19d134a460[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 20 11:06:44 2020 +0200

    detect/tls: convert to v2 inspect API

[33mcommit 71a508000b307233f01a51e03834e12a43b5660e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 20 11:05:40 2020 +0200

    detect/ssh: convert to v2 inspect API

[33mcommit 86686eff178fceed465e7be957ff7990cc95bbad[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 20 11:05:13 2020 +0200

    detect/snmp: convert to v2 inspect API

[33mcommit 962230040aa0038598b0d939ea81a055cd62300b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 20 11:04:46 2020 +0200

    detect/rfb: convert to v2 inspect API

[33mcommit b11cc0fbcd654af53dd66c3e280e6d3c4d7b7f23[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 20 11:04:17 2020 +0200

    detect/nfs: convert to v2 inspect API

[33mcommit 15c84bf3c62b0a96778b061d995adc712a32fac8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 20 11:03:56 2020 +0200

    detect/lua: convert to v2 inspect API

[33mcommit 5062023ffead9b7d6e6c20c150b6a49f2276703e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 20 11:03:27 2020 +0200

    detect/ftp: convert to v2 inspect API

[33mcommit 2320d62872d81a6ab423b8adc92d2a9a35243b61[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 20 10:42:59 2020 +0200

    detect/mqtt: convert to v2 inspect API

[33mcommit 5611f9ddbdb1680815c55d33dcd7e3aec12312f5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 20 10:41:48 2020 +0200

    detect/modbus: convert to v2 inspect API

[33mcommit ce6f8605eadfb9f3c76b30975c330c3b15dff9f8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 20 10:40:54 2020 +0200

    detect/enip/cip: convert to v2 inspect API

[33mcommit 35310313def79f5e3344dfc2cf2e2a5ddb92c397[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 12 14:19:15 2020 +0200

    detect/http2: inspect API v2

[33mcommit 67d45f7e3c918abb7868abb4953b621506c8ebdc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Apr 5 20:00:25 2020 +0200

    detect/krb5: use inspect api v2

[33mcommit 197f99a1345cca3baf2a3bac8325463ae97d124a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Apr 5 18:14:39 2020 +0200

    detect/ftpbounce: switch to inspect api v2

[33mcommit 0f2c94ffea2b0341ecf7163a588b8d53139e0f5d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Apr 5 17:52:47 2020 +0200

    detect/files: remove unused prototypes

[33mcommit e0e4454db71719cfdff75278e626899b701eba1e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Apr 5 17:51:52 2020 +0200

    detect/files: inspect api v2

[33mcommit 48094b05c8bfaacf5982b2f0624a881982b2eb19[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Apr 5 17:47:45 2020 +0200

    detect/file: minor cleanup

[33mcommit cd146adef0af3b3d4aeb556bb15c49f61fd01e03[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 19 14:12:42 2020 +0200

    detect/dnp3: convert to v2 inspect API

[33mcommit 9f8a8f368a71d33269f28e620bbd54c7ddc6a7fb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 19 14:12:21 2020 +0200

    detect/dcerpc: convert to v2 inspect API

[33mcommit db0665bccc7a8f725164c078c7e805ae0686af84[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 19 14:11:26 2020 +0200

    detect/dns: convert to v2 inspect API

[33mcommit 8c7423fcb87d6d74858b3a54ff3b2573fc39c996[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 19 14:10:16 2020 +0200

    detect/app-layer-event: convert to v2 inspect API

[33mcommit c6c93d1d1231052d7e9c981a5c718602aef94d94[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 19 15:49:13 2020 +0200

    detect/stream: convert to inspect API v2

[33mcommit 51f38f6453870a5ac0b541dc12134df65a8d790e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 19 15:49:02 2020 +0200

    detect/payload: minor formatting fixup

[33mcommit 1f1a7651325934a2a96a238ab29d1aba6a086763[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Dec 1 12:55:36 2020 -0600

    github-ci: build cbindgen during prep
    
    Instead of building cbindgen in every build, build it once
    during prep as a static musl binary to avoid library issues.

[33mcommit f945acf733d15129c7533c8678b8b9570cbebff6[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Dec 1 15:46:46 2020 -0600

    github-ci: remove prep directories before upload
    
    Removing the libhtp, suricata-update and suricata-verify directories
    before uploading the artifact reduces the upload time from minutes
    to seconds.

[33mcommit 42196e932e1601a527396378b2ac63a606b1be9b[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Dec 1 12:40:14 2020 -0600

    github-ci: fedora 33 test build (based on fedora 32)

[33mcommit ea36c01a8f712ac6032c5477ed0856f289aeb9db[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Dec 4 15:16:36 2020 -0600

    github-ci: remove fedora 31 (eol)

[33mcommit 3fdfec860fdd30b56cb6d37a4752fa794870d385[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Dec 6 20:16:43 2020 +0100

    version: start 7.0.0 development

[33mcommit e860b9eee96cb112a45151237d4b23fd0a9efb22[m[33m ([m[1;33mtag: suricata-6.0.1[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 4 07:54:18 2020 +0100

    version: set to 6.0.1

[33mcommit 1d84f72a6534f4b3beea952d6ff8584a2e206c84[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 4 07:53:48 2020 +0100

    changelog: update for 6.0.1

[33mcommit 8c4e53e80322d17cdf49e90df4a868d3b8427759[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Nov 19 14:30:56 2020 +0100

    dnp3: regenerates C code with script

[33mcommit 15980af7de4043bf32136e7af1e98c9470f8557f[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Nov 19 14:30:27 2020 +0100

    dnp3: avoids DOS by too long loop over null-sized objects

[33mcommit 5749024e3f21d503e074b59208e0753629552d1c[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Nov 19 14:29:48 2020 +0100

    dnp3: fix memory leak with object containing bytearrays

[33mcommit 001350547af4b8f2a3747eab19fbbe0b33f06d37[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Nov 19 14:28:43 2020 +0100

    dnp3: fix signed integer overflow
    
    By using unsigned integers everywhere

[33mcommit ea0936199d142fc52ec69baf7984cbdd92dd4705[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Thu Dec 3 17:00:17 2020 +0530

    output: use BASE64_BUFFER_SIZE macro
    
    Base64Encode function requires the maximum length of the output string
    as its last parameter. Use the macro BASE64_BUFFER_SIZE to calculate it
    correctly.

[33mcommit b0a6ed1e2a2a96419a6c8c80b1bd4067d518c5a0[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Thu Dec 3 16:43:17 2020 +0530

    datasets/string: fix buffer overflow
    
    The size of encoded_data array and the maximum output length parameter
    to Base64Encode function were incorrect leading to buffer overflow for
    certain cases. The algorithm requires at least 5 bytes of space to even
    convert a string of length 1.
    
    Use BASE64_BUFFER_SIZE macro to correctly calculate this output length.
    Set size of encoded_data array to the calculated output length.

[33mcommit 02942a123a525bb1ed97bba9242f1e08d54f0fb8[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Thu Dec 3 16:55:39 2020 +0530

    util/crypt: Add macro for max base64encode len
    
    Maximum length of a base64 encoded string can be 33% over the actual
    length of the input string. The formula to best cover all the edge cases
    is mathematically
    (4 * (input_length + 2) / 3) + 1
    
    Add a macro to calculate this for a given input length.

[33mcommit 057c4b34c8b1e64b850784f124e826180f3d9341[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Nov 3 11:55:52 2020 +0100

    ftp: optimize FTPGetOldestTx by starting from last handled tx
    
    Avoids DOS by quadratic complexity algorithm.
    Attack is
    1 stack many requests/transactions (like cwd commands on a line)
    2 get many answers

[33mcommit f5746633527e06eee2527ba582e0e74beb931682[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Nov 10 16:10:07 2020 +0100

    http2: files inspection API fixes
    
    uses right transaction id for file tracker
    uses FILE_USE_DETECT for good matches with keyword startswith

[33mcommit a63ee5adbdbbd37387eda522f810ff6ebd5676ca[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Nov 10 10:21:32 2020 +0100

    http2: allow multiple size updates in one headers batch
    
    cf RFC 7541 section 4.2

[33mcommit a8fc481cd3f2e006350c8bbac1a96ffd7bfe5f9a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 7 15:34:35 2020 +0100

    http2: avoid null pointer deref in alert output
    
    Bug #4120.

[33mcommit 096dce4bbac343bef7cbfec7d4ce5da548c248c8[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Oct 16 12:51:31 2020 +0200

    http2: allow filestore to work with HTTP2

[33mcommit d5ac77ee8b2008e3e401fff6cbe28ced3bdf69ba[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Nov 19 14:10:58 2020 +0100

    packet: set length of 0 for too big copy

[33mcommit 6d2247391ef11005e1fe19f933d685d3d12e2806[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Sat Oct 31 17:12:19 2020 +0100

    ssl: improves keyword ssl_version parsing
    
    Removes the use of PCRE for performance
    Forbids empty negations after a valid pattern
    Forbids mixing negative and positive forms as it is irrelevant
    Forbids useless repetition of a version

[33mcommit 6181459086a67a9592b814879c07225a3ac94ed2[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Oct 15 22:51:52 2020 +0200

    smb: do not rely on one valid NBSS byte for probing
    
    Need to have the SMB header so as to validate

[33mcommit 48f0c612e39c66400fd2e1991899e0a025f6dede[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Oct 15 21:32:27 2020 +0200

    ssl: upgarde to uint32 for bytes_processed
    
    as it can overflow, and is compared with uint32 such as
    message_length and message_start and

[33mcommit 445e03d75278eb40c9114eea29e07e5b83e40e4e[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Oct 14 21:25:40 2020 +0200

    detect: null sanity checks for pkthdr
    
    Even when the rules are only applied on traffic with the protocol
    the structure for the protocol header can be set to NULL if there
    was an error parsing the header

[33mcommit f5af8864f7d2e1521a33f1e48e804404a87e8f0e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 3 12:10:22 2020 +0100

    configure: require libhtp 0.5.36

[33mcommit 4e242645be40e52ed781943e2948f7a56ec51141[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Jul 13 11:06:58 2020 +0200

    doc: explicit header normalization further
    
    And their concatenation as described in RFC 2616

[33mcommit 3ea33f5e4756c9bdb5b9f0535b1acf46e392202b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 2 13:31:52 2020 +0100

    github-ci: CentOS 6 is EOL

[33mcommit 6b30890de97f1c58ecda2c60e308e8d167a36bcc[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Nov 25 15:20:02 2020 +0100

    doc: http.uri.raw has no spaces
    
    as they are in the protocol
    
    cf bug #2881

[33mcommit f3c59ef8a64f576c8784ab99a125b270f7b9c680[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Nov 30 15:11:57 2020 -0600

    rust: handle windows naming change from .lib to .a
    
    Prior to Rust 1.44, Cargo would name static libs with the .lib
    extension. 1.44 changes this extension to .a when running under
    a GNU environment on Windows like msys to make it more similar
    to other unix environments.
    
    Now assume static library name to be the same on Windows and
    unix, but rename the .lib if found to still support older
    versions of Rust on Windows.

[33mcommit 10f639e9d1edae14d87feb66059723d87b3efdb8[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Nov 30 15:37:02 2020 -0600

    configure/mingw: move libs in LDFLAGS to LDADD
    
    Moving the libs specified in LDFLAGS to LDADD put them into the
    correct placement on in the link command.

[33mcommit 466466883b5124d3c2e105bdf826d02b136bd249[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Nov 16 10:12:55 2020 +0100

    rust: do not rebuild stdlib when coverage is enabled
    
    Because both seem incompatible for now

[33mcommit 33905b0910e93eeaceeacd21ee1671694a79cd74[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Nov 19 14:10:08 2020 +0100

    fuzz: check PacketCopyData return value before processing packet

[33mcommit 18d8164a27848338f63155dd1a3f43f036d1c634[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Nov 3 11:21:06 2020 +0100

    fuzz: limit memcap for datasets when fuzzing

[33mcommit 65e232669cb20c4b06692cf8935a69d4d0c2a240[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Sat Oct 31 16:51:09 2020 +0100

    dnp3: better limit for tests when fuzzing

[33mcommit 80dc6c6f1eac90e876575f6351839016e6c89dfb[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Oct 15 22:50:42 2020 +0200

    fuzz: improves detect proto target
    
    By mimicking assert message so as to clusterfuzz differentiates
    between failures

[33mcommit 46644440671c3bfeb9c1423aa1684191ff6db961[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 30 07:44:54 2020 +0100

    detect: fix inspection order with stateful rules
    
    When stateful detection rules, for which detection has already started
    for a previous packet, are added to the candidates array, the array
    is sorted to mantain the correct inspection order. However, due to a
    trivial error in the sort helper the array was sorted in descending
    instead of ascending order.

[33mcommit ba781265a4d5c05bd5cde397dd4c1891994125aa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 26 11:03:21 2020 +0100

    dcerpc/udp: fix transaction handling and logging
    
    Implement missing transaction handling.
    
    Fix logging wrongly casting 'state' to DCERPCState instead of
    DCERPCUDPState leading to crashes and malformed output.
    
    Remove unused fields from DCERPCUDPState.

[33mcommit e7b52010168a5b26a0d18500edd731f234b17646[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 25 09:49:54 2020 +0100

    detect/mpm: remove usused cleanup function

[33mcommit e799357d9fbadb295468466907ab1972564b9a8c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 25 09:22:44 2020 +0100

    detect: optimize prefilter result handling

[33mcommit ffb0945b4cc707bc8459e64771af677c2a673841[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 25 09:22:21 2020 +0100

    detect/prefilter: small cleanup

[33mcommit bb7f80ef6cffd9efedafe763557e40089700ab3e[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Nov 20 09:15:37 2020 -0600

    github-ci: check for duplicate SIDs in rules/

[33mcommit 8bd68478a456a6a787ca2be8bfbf2990db32118a[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Nov 18 16:44:38 2020 -0600

    rules/mqtt: renumber mqtt events to avoid conflict with ssh
    
    Both SSH and MQTT events were in the 2228000 range. As SSH was
    added first, renumber MQTT events into the 2229000 range which is
    free.

[33mcommit 8db78208f94db524c98af3f84caf6a8951e0d884[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Nov 19 15:50:54 2020 +0100

    rust: fix warnings found by nightly compiler
    
    warning: getting the inner pointer of a temporary `CString`
    this `CString` is deallocated at the end of the statement,
    bind it to a variable to extend its lifetime

[33mcommit 14aacbd067c483c72578a86c78d16253b7dc3e93[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 23 21:59:18 2020 +0100

    decode/null: fix type parsing

[33mcommit 8d0b0e8739c3796c05e58fd09a62cb03efdde5b7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 23 21:57:36 2020 +0100

    atomics: fix compilation on ppc64

[33mcommit 76e011a5ba9ef50b53692bbfeaf25ad28bc96389[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Nov 23 12:11:42 2020 -0600

    dnp3: set byte order when logging dnp3 src and dst
    
    DNP3 uses little endian on the wire, for the most part this
    is handled as the messages are deserialize. However, the link
    header is a cast over raw data, so swap these bytes as they
    are being logged.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/4173

[33mcommit 75c0f9bd0a793edd5ef7309384c0fc259e9c42f2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 19 22:01:40 2020 +0100

    github-ci: windows in builds

[33mcommit 7b4ac8dbab980eaadccde36a81836ad7ba8a69e6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 5 15:31:58 2020 +0100

    doc/userguide: update http keywords

[33mcommit ca47d75c8057af70e13ab0e0f2f3e5dace933b02[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 4 21:00:41 2020 +0100

    doc/userguide: explain --strict-rule-keywords

[33mcommit 65711f6bc225b9eed66e7c0dfdf06da312387188[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Nov 17 10:16:42 2020 +0100

    app-layer: do not try to parse gaps during protocol change
    
    As this will leak the flow alstate because AppLayerParserParse
    relies on FlowChangeProto to know if it should allocate a new
    alstate

[33mcommit 89ae1a00362ec4707377b063c16caaeaf5f1cac5[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Nov 12 21:57:28 2019 +0100

    detect: apply transforms to http body

[33mcommit dfadd03b6fb2413209971e6f3c01fbf337d4bda3[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Nov 17 09:48:29 2020 +0100

    ci: updates github ci add-path mechanism

[33mcommit ac37fd5e29f953b37e1c66e27ef375489a1cc683[m
Author: Danny Browning <dbrowning@dragos.com>
Date:   Tue Oct 27 09:47:21 2020 -0600

    tools: bash from env
    
    Use of hardcoded bash prevents users from using an upgraded bash which may
    live in a different location. This behavior is often seen on OSX systems.
    
    Utilize env to find the preferred bash to call for scripts.

[33mcommit 2f81f3fbe90ae164a39e4d2e737584957030d1b8[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Nov 16 11:43:17 2020 -0600

    rust/log: clarify comment in non-debug mode SCLogDebug

[33mcommit a453d28bc6563d287f3c0c46ddf7854adaf185c0[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Nov 16 11:40:05 2020 -0600

    rust/log: order log macros in descending order
    
    Readability cleanup.
    - error, notice, ... debug

[33mcommit 411a5d41c1e108fa183175a5869e3d1451f862cf[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Nov 16 11:36:39 2020 -0600

    rust/log: expand macros after checking log level
    
    Expand macros in the do_log macro after checking the log level
    instead of each log macro (ie: SCLogDebug) expanding the macros
    then passing off to do_log to have the log level check.
    
    Will eliminate any expense of expanding macros if this log level
    does not permit the given message to be logged.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/4114

[33mcommit 269324e84d79c4860533967e7fe226e3a9106613[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Thu Nov 12 16:36:39 2020 +0530

    dcerpc/log: Log fields particular to an RPC version
    
    Log fields that only are meant to be in a PDU for a particular RPC
    version. Since DCERPC/UDP works on RPC version 4 and DCERPC/TCP works on
    RPC version 5, there are certain fields that are particular to each
    version.
    Remove call_id from the logger for UDP.
    Add activityuuid and seqnum fields to the logger for UDP.
    call_id and (activityuuid + seqnum) fields are used to uniquely pair a
    request with response for RPC versions 5 and 4 respectively.

[33mcommit 2033f386f95c709ae072260346af0258ead55ce2[m
Author: Ilya Bakhtin <ilya.bakhtin@gmail.com>
Date:   Tue Nov 10 15:57:43 2020 +0530

    rust/dcerpc: Remove redundant fields

[33mcommit 2840a2e0642806d2f07a85dcf0da88bc68912f31[m
Author: Ilya Bakhtin <ilya.bakhtin@gmail.com>
Date:   Tue Nov 10 15:50:21 2020 +0530

    rust/dcerpc: Make tx_id u64

[33mcommit 6916b63f09e335baec3dd05d1def4c439a13a7b4[m
Author: Ilya Bakhtin <ilya.bakhtin@gmail.com>
Date:   Tue Nov 10 15:35:18 2020 +0530

    dcerpc/udp: Fix pairing of request response
    
    So far, request and response were paired with serial number fields in
    the header. This is incorrect. According to
    https://pubs.opengroup.org/onlinepubs/9629399/chap12.htm,
    "Together, the activity UUID and the sequence number uniquely identify
    a remote procedure call."
    
    Hence, add activity uuid and sequence number to the transaction and pair
    the request accordingly. Remove incorrect handling of this and fix
    tests.

[33mcommit e9b21553cc8535562447a69d108616f4a04b0112[m
Author: Ilya Bakhtin <ilya.bakhtin@gmail.com>
Date:   Tue Nov 10 13:41:29 2020 +0530

    rust/dcerpc: Add UDP flag definitions

[33mcommit 6b50a71d1a118aff4fc1d745d931dfce0bc3162c[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Oct 6 15:22:59 2020 +0200

    app-layer: lower limit for protocol detection on protocol change
    
    So that protocol detection does not run for too long because
    TCPProtoDetectCheckBailConditions somehow relies on its TCP stream
    to start from zero, which is not the case on protocol change
    
    Adds also debug validation checks, such as
    both sides are known on protocol change
    
    And only sets once alproto_orig

[33mcommit a18a9d3046260f520e7659e183fe02839285b773[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Nov 4 08:44:39 2020 -0500

    doc: New sticky buffer icmpv4.hdr

[33mcommit dabd50eeee7b73e7bb68ee9835506181ae413891[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Nov 5 08:11:17 2020 -0500

    detect: Register icmpv4 header

[33mcommit ac8532966bd3fa590b3e2a78f6affd226a072296[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Nov 4 08:31:00 2020 -0500

    detect: Add icmpv4.hdr sticky buffer
    
    This commit adds a new sticky buffer to access the ICMPv4 header.

[33mcommit 7cbe7c6463c7bb6e2d21ef82450cc65df3278b6c[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Nov 5 08:10:41 2020 -0500

    detect: New enum for icmpv4 header keyword

[33mcommit 988bb26828fc4f18a42b9eb44bf513a1eacf1066[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Nov 4 08:34:51 2020 -0500

    decode: Improved handling of ICMPv4 messages
    
    This commit improves handling of ICMPv4 messages, especially those with
    variable sized headers.
    
    This commit also adds a header length variable for use by the new
    sticky buffer for the header.

[33mcommit a9249cb2f63f56bd727b1a23dc71b0ed640073bb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 15 08:06:17 2020 +0100

    github-ci: fix debian 10 test using rustup

[33mcommit 828bf6d1d6151ab040729bf1125d220f8e337bfe[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Nov 7 09:53:20 2020 -0500

    detect: Treat offset as a signed value
    
    This commit updates the detector to treat 'offset' as a signed value to
    be compatible with Snort.

[33mcommit 76de9815744976891844c8305f6aa96f12f3ae1f[m
Author: Phil Young <py@napatech.com>
Date:   Fri Nov 13 11:38:36 2020 -0500

    napatech: Added comment indicating that hba will be deprecated
    
    HBA will be deprecated in Suricata 7

[33mcommit dc5349a30cbd97938e21936b9ae0fda19470bea3[m
Author: Phil Young <py@napatech.com>
Date:   Fri Nov 13 11:32:32 2020 -0500

    napatech: Add Deprecation Warning Message for HBA
    
    Added a message that HBA will be deprecated in the future and removed
    hba from default conf file.

[33mcommit 3030a3da18a4e32b2b0af170018d533dc2e2bb4c[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Nov 13 13:15:40 2020 -0600

    doc: provide eve 1 deprecation date

[33mcommit 8dbc774dfa3dade9cc950d31594e4cf23bdb5945[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Nov 13 13:15:14 2020 -0600

    dns: eve 1 deprecation warning
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/4137

[33mcommit d8242c5d07bda49eeac539c99eb3267190bb8e1e[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Nov 13 13:05:48 2020 -0600

    dns: fix leak in dns v1 logging
    
    Intermediate JsonBuilder object was not being freed.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/4086

[33mcommit fa77e02cf1a39423966f87828858603aa045f482[m
Author: Phil Young <py@napatech.com>
Date:   Thu Nov 12 13:19:12 2020 -0500

    napatech: Removed restriction on use of inline mode
    
    Removed the unnecessary restriction on the use of inline mode only when
    bypass is enabled.  Now, Inline can be used independent of bypass
    functionality.

[33mcommit 789dcbd49d077b54726fb09738fb0f42112d00d0[m
Author: Phil Young <py@napatech.com>
Date:   Wed Nov 11 14:21:39 2020 -0500

    napatech: Fix potential double release of packet
    
    This addresses readmine issue #4018.  There was the potential for a packet
    buffer to be released twice in response to an error condition.  This
    addresses this by only calling NT_NetRxRelease() when the p->ReleasePacket
    is called.

[33mcommit 7d594d8710b68f692f730c324e8bf6b6d9312f09[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Nov 6 15:56:24 2020 +0100

    fuzz: better packet recycling in sigpcap target
    
    need especially to set datalink for every packet

[33mcommit c93cbe66c28638bf875e14f3def4d063a16f656c[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Nov 5 15:46:54 2020 +0100

    fuzz: applayer target uses yaml config
    
    so that every app-layer protocol is enabled

[33mcommit f29982c03c38c6570e282dc75db05aaf2c191d8f[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Nov 5 14:50:13 2020 +0100

    ci: adds cifuzz workflow

[33mcommit 9cf1d29005438b87f0e09d7e6371e9a0463c9b38[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Nov 5 11:05:13 2020 +0100

    fuzz: adds fuzzing status badge in README

[33mcommit ea2bc4c962842de8cc2b557b77d15692084200d7[m
Author: Sascha Steinbiss <satta@debian.org>
Date:   Sun Nov 8 13:08:28 2020 +0100

    eve: do not access flow storage in packet context
    
    We must make sure not to access the flow storage (e.g. keeping a
    MacSet) before making sure we have a flow to begin with, We can,
    for example, run into an alert without a flow with `ip` rules,
    in which case the flow might be NULL. See Redmine issue #4109.

[33mcommit d2c8c9f58e6608521afaf4484292d607e435f8c4[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Nov 7 07:55:19 2020 -0500

    github-ci: Improve body parsing
    
    This commit improves handling of the PR body parsing to eliminate
    unneeded characters.

[33mcommit 68418a26dbb7fe02f4506c349220f99a05dfe596[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun Nov 8 10:06:19 2020 -0500

    detect/file-data: Improved support for share bufs
    
    This commit improves support for shared buffer usage, i.e., when
    multiple rules share the file data (http) buffer and apply different
    combinations of transforms and fast_patterns (or none).

[33mcommit 2ede7361167e9b7ced30b61c1ccaefceb0f43fc0[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Oct 13 15:42:05 2020 -0600

    github-ci: remove deprecated set-env and add-path
    
    Use the new methods for setting an environment variable and
    updating the PATH.

[33mcommit 0eb692e500cf265674a6fdefd9c4e345780111f0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 31 20:57:38 2020 +0100

    mingw: fix format string warnings

[33mcommit 606750f2a0fc341d2ff68c5f874b27735753ddc9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 29 08:02:50 2020 +0100

    github-ci: add windows build with suricata-verify
    
    Initial attempt with a few hacks:
    - npcap dlls are extracted from the installer and placed in cwd
    - cbindgen is installed system wide desipte a preinstalled copy
    
    This does not yet hook into the "prep" build from build.yaml or
    support using custom support PRs/branches (SV, SU).

[33mcommit 4e1f151fc31aa6bf8ffff548b5ea1c6d39d3b675[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 28 18:00:37 2020 +0100

    appveyor: remove in favor of github-ci

[33mcommit ba2a9be11a029f8ab2e8213ab0e730b788ba2aea[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 27 08:16:25 2020 +0100

    detect/mpm: fix id confusion in mpm_ctx sharing
    
    Mixing of dynamic id's and hardcoded config values could possibly
    lead to the settings not getting applied properly.

[33mcommit 82d7f6463053e2180883decaef9987b6caea277d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 26 21:14:43 2020 +0100

    detect/mpm: improve transforms handling
    
    Make sure keywords with transforms get their own mpm ctx, instead of
    sharing it with the 'pure' version of the keyword.

[33mcommit ee15bd80760f9d8298cdc676c3f9f0b80cd5ca46[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 26 14:27:13 2020 +0100

    detect/mpm: rename variable to ease code review

[33mcommit 51f4e4d0b73c2966ca731e8635d93e305f3f8594[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 23 11:11:03 2020 +0200

    dcerpc/udp: add missing tx free logic

[33mcommit 9f9c29a14a91f86c1bda92285e876e026dc9e3a4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 23 10:26:42 2020 +0200

    dcerpc: fix stream flag handling
    
    Only hardcoded direction flags were passed to the parser, not the
    full range.
    
    Handle receiving an EOF flag w/o data.
    
    Bug: #3856

[33mcommit f31372ad1d2bd1fd8602c133ec686c5d1e91ff3a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 23 07:45:50 2020 +0200

    dcerpc/tcp: fix compile warning
    
    warning: variable does not need to be mutable
        --> src/dcerpc/dcerpc.rs:1036:42
         |
    1036 |                     let tx = if let Some(mut tx) = self.get_tx_by_call_id(current_call_id, core::STREAM_TOCLIENT) {
         |                                          ----^^
         |                                          |
         |                                          help: remove this `mut`
         |
         = note: `#[warn(unused_mut)]` on by default
    
    warning: variable does not need to be mutable
        --> src/dcerpc/dcerpc.rs:1061:30
         |
    1061 |                         Some(mut tx) => {
         |                              ----^^
         |                              |
         |                              help: remove this `mut`

[33mcommit 67b5295bbc54abf16609fff355cf289c431ab1be[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 23 07:44:28 2020 +0200

    dcerpc/tcp: add missing detect state cleanup

[33mcommit c72069c3b2c276a3b6cef627f1d8983d2df25bbe[m
Author: Angelo Mirabella <amirabella@lastline.com>
Date:   Tue May 26 18:00:06 2020 +0100

    detect/magic: fix crash on rule reloading
    
    This changseset fixes a bug causing a segmentation fault.
    When rules are reloaded and a rule using libmagic matches, suricata
    crashes due to an improper reinitialization of the thread contexts.
    
    Bug: #3726

[33mcommit ea15282f47c6ff781533e3a063f9c903dd6f1afb[m
Author: Angelo Mirabella <amirabella@lastline.com>
Date:   Wed Mar 11 15:11:19 2020 +0000

    unix-socket: fix alert metadata logging
    
    This changeset fixes a bug that was preventing suricata to dump
    alert metadata info when running in unix-socket mode.
    When running in unix-socket mode, suricata was skipping the
    initialization of the output modules and, as a consequence,
    the metadata output module was never invoked.

[33mcommit 62cc0c7acf2270d63e0e164d9e39f47b811e1fb3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 22 16:10:14 2020 +0200

    alert/syslog: fix minor compile warning

[33mcommit 4e925ca2600ad2c28e4799b47aafb9787ddde35f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 21 20:22:50 2020 +0200

    stream: harden data size handling
    
    Handle edge cases around ACKs and last_ack getting below
    'app_progress', which can happen during shutdown of a flow
    with multiple GAPs.

[33mcommit 53917465180fb08f955337320d39b88758378948[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 21 20:27:18 2020 +0200

    stream: bail early if no data after a gap

[33mcommit 27c9280735c28a380e5b9c0b30e841fabb934e02[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 21 20:22:50 2020 +0200

    stream: harden data size handling

[33mcommit 8a08fe82d48dbfddd8bfedb40a1eeae5679cfb53[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 21 19:58:23 2020 +0200

    stream: don't send STREAM_START multiple times

[33mcommit 479078d377cad201fb65a10a1555b0199a126426[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 21 15:46:58 2020 +0200

    detect/content: add more negation tests

[33mcommit c41e64d637fc0ce7a95e68c2de08f4d4ea24f49f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 20 11:58:14 2020 +0200

    dnp3: reword warning message

[33mcommit 36a93380a5e6eaed37789fe3291e43fb7020c90c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 20 11:57:56 2020 +0200

    defrag: fix pthread warning on OpenBSD

[33mcommit 95729e923f39b5adda31e4843a1b6ee06edbb0c8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 9 14:48:40 2020 +0200

    configure: remove left over reference to unified2

[33mcommit c95850c6ce334af9174ef6efeeb19347e2804b1b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 24 11:33:07 2020 +0200

    doc/rules: document config rule option

[33mcommit 8fdee4f685e94cfb4a2ab2460e43af0135e4ad4c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 9 13:30:15 2020 +0200

    version: start development towards 6.0.1

[33mcommit 5219691f45ab6c6fb3c3970550dd670c73dbcfa6[m[33m ([m[1;33mtag: suricata-6.0.0[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 7 13:30:16 2020 +0200

    version: update to 6.0.0, require libhtp 0.5.35

[33mcommit df5f96c5f05b76d6e16e8febed18a0b171ba38de[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 7 13:29:37 2020 +0200

    changelog: update for 6.0.0 final

[33mcommit 400b26ad68316d8fb392dfd6f3e2b2ebae44e37f[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Sep 23 10:51:58 2020 -0600

    logrotate: reindent to 4 spaces
    
    4 spaces seems to be the norm on Linux, so reindent from a mix
    of 8 spaces and tabs to 4 spaces.

[33mcommit 61d0cd139972bd7767c7a0013b756fb7e0e2219c[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Sep 17 15:22:49 2020 +0200

    signature: checks protocol for file.name keyword
    
    By setting the flags as for the filename keyword (not sticky version)

[33mcommit bde0c88984f09804e153d95647c5892eadb9f656[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Sep 30 22:04:32 2020 +0200

    dnp3: more precise probing for banners

[33mcommit 12dfc33e05d042447027fa446fd07babd8086081[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Oct 6 13:46:47 2020 +0200

    dnp3: fix probing test not using final null in string

[33mcommit 1fd6f5bc61830eb3f3e305490be799aaf7beb4e8[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Oct 6 09:46:14 2020 +0200

    http2: asymetric sizes for headers tables
    
    The headers table from client to server
    and the one from server to client
    may have different maximum sizes
    (even if both endpoints have to keep both tables)

[33mcommit 4706b38866c07b0e39c12d22a8f2c322924d2807[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Jul 31 13:33:01 2020 +0200

    ssl: do not reuse struct session_id_length
    
    As it can be confused between SSLv2 and TLSv13
    In SSLv2, this variable is not used after the function scope, so
    we can use a temporary variable.

[33mcommit aaa69fe3c5366996348f2ad97d030b11b46889f2[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Apr 14 14:24:22 2020 +0200

    smb: resistance against padding evasions
    
    Scenario is use of dummy padding in write AndX request
    or other similar commands using a data offset.
    
    Parsing skips now these dummy bytes, and generates one event

[33mcommit caa7946888c509ca7e46a26fdbe30aaaa5382fc4[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Apr 14 10:30:33 2020 +0200

    smb: adds file overlap event against evasions
    
    Evasion scenario is
    - a first dummy write of one byte at offset 0 is done
    - the second full write of EICAR at offset 0 is then done
    and does not trigger detection
    
    The last write had the final value, and as we cannot "cancel"
    the previous write, we set an event which is then transformed into
    an app-layer decoder alert

[33mcommit 3e96f96153a0305c62f847c10b8fdc3036c7d24d[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Oct 1 09:54:13 2020 +0200

    rdp: fix incomplete result
    
    Aggregating the consumed bytes

[33mcommit f9c6b60edc5f084ffe548cdd599a4a7a7d4bb656[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Oct 1 15:21:47 2020 +0200

    detect: fix use of uninit memory in DetectDatarepParse
    
    By initializing to empty string

[33mcommit 6b735a2e57b02d408069d7ac50e8b9278728f01e[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Sep 24 15:28:58 2020 +0200

    util: fix warning about format string for integer

[33mcommit dc7a9d2b461eb20a2620ac134374bc696a9fe01c[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Sep 17 10:51:29 2020 +0200

    util: THashInitConfig limits hash size when fuzzing

[33mcommit dcd5e4dec9a980402060e49458616ae5690cb635[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Sep 17 10:18:39 2020 +0200

    util: THashInitConfig does not exit but return error

[33mcommit 2b215a45e04ff21ce8aa8fb421b4b053ef63b6c2[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Oct 5 15:05:41 2020 -0600

    enip: set unidirection transaction flag

[33mcommit 0529a00ffdd05e9613c160008e16252851d86b0a[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Sep 14 13:47:17 2020 -0600

    dhcp: set unidirection transaction flag

[33mcommit 3036ec4db0f80baa42ebde7b81de77352603089a[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Sep 14 13:47:10 2020 -0600

    ikev2: set unidirection transaction flag

[33mcommit ff674d0cd0a6ecded42d02890dec35682b237aac[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Sep 14 13:43:53 2020 -0600

    mqtt: set unidirection transaction flag

[33mcommit 54d5f336d4f26074e642d2155c056f17a9563435[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Sep 14 13:32:13 2020 -0600

    sip: set unidirection transaction flag

[33mcommit 1d40d0c5f93f7233834eb1eeae569b7f794a8a6b[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Sep 14 13:31:56 2020 -0600

    rdp: set unidirection transaction flag

[33mcommit f7dee602e9490c0d98729d1d8d11a06c67ebb0ab[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Sep 14 13:30:46 2020 -0600

    krb5: set unidirection transaction flag

[33mcommit 984d3c7f20560dae0adeae7fa09ba740f65d0868[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Sep 14 13:05:09 2020 -0600

    ntp: set unidirection transaction flag

[33mcommit fc7d59d92fb52a2ced979e0ff92a95bce390edfb[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Aug 18 10:40:00 2020 -0600

    snmp: set unidirectional transaction flag

[33mcommit 60ebc27c4eb755800e6d3f4ec1a5d55a5230a214[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Aug 18 10:39:42 2020 -0600

    app-layer: handle unidirectional transactions

[33mcommit 2eacc6a9a84640877abe852cfb3f65fee6161b29[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Jun 16 13:54:46 2020 +0200

    ssl: adds safety checks
    
    Ensure the client version is valid by checking hello flags
    
    Ensure no integer underflow occurs in SSLv3ParseHandshakeType

[33mcommit 4624e66cdd2742cdd41e32f0e9921583a25e47d9[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Sep 8 09:38:13 2020 -0400

    detect/transform: Validator for compress-ws
    
    This commit adds a buffer validator for compress whitespace. Buffers
    containing two or more consecutive whitespace characters are invalid
    with this transform.

[33mcommit 30b1d7a9c13dda776fb7d65c461f1d47ba1e7e61[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu May 7 09:18:02 2020 -0400

    detect: Correct typo

[33mcommit 7ab986250a320ee8cf59e8ea3348495dae88b8a1[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu May 7 09:17:05 2020 -0400

    detect/file-data: Apply transforms on file_data
    
    This commit cause transforms to be applied on the sticky buffer.

[33mcommit e07a4393a9dc07d199a04540d0b54119ee95a2a5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 5 08:17:19 2020 +0200

    http: error check htp_list_size
    
    This avoids a potential casting to uint64_t of -1, leading to a very
    high upper bound of the tx loop.

[33mcommit 6f9b7e052affa61f85ba7fc42c72f6f0ad5383cc[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon Sep 28 08:24:17 2020 -0400

    doc/eve: Update threaded filename examples

[33mcommit 8f009cf9b575f21153a9b6b8c6ecff3d6401afa1[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Sep 26 08:29:43 2020 -0400

    output/json: Update threaded filename example

[33mcommit a75e9667ce3d92a031d2b0e981ea189cc0e39643[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Sep 25 07:47:53 2020 -0400

    log/eve: Threaded filename change: eve.N.json
    
    This commit changes the name of the file used with threaded eve logging
    to better support log rotation
    
    Instead of using "eve.json.N" and creating potential issues with log
    rotation (which also uses a ".N" suffix), the eve logs will be named
    "eve.N.json" when threaded.

[33mcommit 73567272cd036fa733b3437fa9d455761578492d[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Sep 30 07:30:34 2020 -0400

    path: SCBasename - function to return basename
    
    This commit returns the basename of a file, if it exists
    in the same way that `basename(1)` works.

[33mcommit db9776af64dfd0872cb4374b01e9871dea2a03b5[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Sep 23 08:15:41 2020 -0400

    detect/rules: Fix copy/paste error
    
    This commit corrects a copy/paste error handling the `include-mpm-stats`
    configuration setting.

[33mcommit 41967a53ec85e17371792d6f4f1166e925ca1c7d[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Sep 19 10:06:59 2020 -0400

    detect: Apply clang-format updates

[33mcommit d911fb87b8c9bb496adebed03a7113ec0b6526d8[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Sep 19 08:47:56 2020 -0400

    detect/rules: Increase array size to remove SEGV
    
    This commit changes the size of reporting variables to be dynamic based
    on the buffer ids in use instead of a fixed value to address a SEGV when
    the fixed value was less than the max buffer/type id in use.

[33mcommit 13049ae09d4c792248977d0daf449a97e8643a4c[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Sep 30 11:18:46 2020 -0600

    scripts/setup-app-layer: fix rust generation
    
    Fix Rust app-layer generation. Main parser file was being named
    gopher.rs instead of the name of the protocol.

[33mcommit 64fcba228bca7f417d4e79f31b226b16dc9272dc[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Oct 1 15:10:27 2020 +0200

    http2: complete parsing of priority frames

[33mcommit c300a859a038fb3e336fd60f7c2e06649cd55149[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Sep 30 23:29:36 2020 +0200

    http2: keep track of dynamic headers table size
    
    And evict entries accordingly to maximum size

[33mcommit 1a21eea0e90ca2ae6bd758cdc6d3c0aa91bd20e5[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Sep 30 21:41:24 2020 +0200

    http2: variable size integers decoded everywhere

[33mcommit b21acfbf21243ba1636f5edd6b5fb719405a4541[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Sep 30 14:23:11 2020 +0200

    http2: StreamIdReuse frame types exceptions
    
    Also handles better the state so as not to revert from
    HTTP2StateHalfClosedClient to HTTP2StateDataServer and not
    go to final HTTP2StateClosed

[33mcommit 89573060d9e553419435a5828a93fa273a9327a9[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Sep 17 22:48:52 2020 +0200

    http2: use variable integer for headers lengths

[33mcommit d57275fa6495dee491ce86a55fb4df97eb8bd59b[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Sep 18 14:44:40 2020 +0200

    protodetect: rerun probing parser if pattern matched
    
    If a pattern matches in the other direction, after
    probing parser finished without finding a protocol,
    we will rerun the probing parser, which will include
    the newly protocol found by its pattern

[33mcommit 5f348e99078297bbfd50eb51c260bae7aa06da8e[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Sep 17 16:52:13 2020 +0200

    protodetect: runs probing parser on protocol found
    
    It a protocol is found in a first direction, we should run the
    probing parser, even if it is not in the known ports.
    
    That can happen for HTTP2, where client magic is detected,
    then server probe can be run

[33mcommit 518e0e66cba5693e333e4dc3de6098d8eca6a57f[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Sep 28 10:27:20 2020 +0200

    applayer: fix a leak in protocol change
    
    TCPProtoDetect can either set f->alproto, change f->alstate
    and return error.
    
    When the original alstate gets freed, we shall set the pointer
    to NULL, as it can get reused.

[33mcommit 97c67cd5ce6d4016f72b3d1f19cadfb410c28b1d[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Wed Sep 23 10:20:56 2020 +0530

    dcerpc: fix gap handling
    
    This patch addresses issues discovered by redmine ticket 3896. With the
    approach of finding latest record, there was a chance that no record was
    found at all and consumed + needed became input length.
    
    e.g.
    input_len = 1000
    input = 01 05 00 02 00 03 a5 56 00 00 .....
    
    There exists no |05 00| identifier in the rest of the record. After
    having parsed |05 00|, there was a search for another record with the
    leftover data. Current data length at this point would be 997. Since the
    identifier was not found in the data, we calculate the consumed bytes at
    this point i.e. consumed = current_data.len() - 1 which would be 996.
    Needed bytes still stay at a constant of 2. So, consumed + needed = 996
    + 2 = 998 which is lesser than initial input length of 1000 and hence
    the assertion fails.
    
    There could be two fixes to this problem.
    1. Finding the latest record but making use of the last found record in
       case no new record was found.
    2. Always use the earliest record.
    
    This patch takes the approach (2). It also makes sure that the gap and
    current direction are the same.

[33mcommit 4f963717f8dc0a9806480ff76615ab14e023431f[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Sep 17 12:07:29 2020 +0200

    fuzz: better configure checks for MSAN building
    
    More compatible check for rust nightly
    Checks for CARGO_BUILD_TARGET
    Builds release or debug mode independently

[33mcommit bb71eac9f91a52c3c6c32906497402de9c991a68[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Sep 18 07:53:10 2020 -0400

    log/anomaly: Move metadata out of anomaly section
    
    This commit moves the metadata from the anomaly object where it was
    incorrectly located.

[33mcommit f70e1f571e62141b17b9b876a8aebc4c22f5348f[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Sep 16 10:50:05 2020 -0600

    doc/userguide: add info about --set and lists

[33mcommit daffcc6e53f7e50ff9cd7b4dbff58e2d4be98ebd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 21 21:44:36 2020 +0200

    app-layer: improve depth handling
    
    Consider txs inspected and done for a direction after depth is reached for
    that direction.

[33mcommit a5a46795bd66e30cbd8e93a4cbf96514a6b9e702[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 21 09:12:55 2020 +0200

    stream: make sure to call app-layer in case of depth reached

[33mcommit 5d985c4271184fd74e56b17bb65e2b2d7142c3bc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 19 20:57:35 2020 +0200

    dcerpc: implement tx free function

[33mcommit 8b2886635f2d69e302499971a1a0fde8b2099a50[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 19 20:44:40 2020 +0200

    dcerpc/tcp: implement trunc logic
    
    When one side of the connection reaches the STREAM_DEPTH condition the
    parser should be aware of this. Otherwise transactions will forever be
    waiting for data in that direction.

[33mcommit 4da0d9bdea50f75f302e16038ad9a31ed79ad008[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 19 20:25:05 2020 +0200

    applayer/rust: expose truncate callback

[33mcommit 2cfa35ccc9b191488d666beab74e2e39a4e0c42c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 19 15:50:47 2020 +0200

    app-layer: don't check tx detect flags if detect is disabled

[33mcommit 34e83b8acf335598a2b08867588155caeab0289f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 23 13:52:29 2020 +0200

    stream: remove GAP flag from stream
    
    This flag was checked in many places, but never set expect in 2 unittests.

[33mcommit c5ace81a273a96c06aefd6c215ec3d49be965959[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Sep 16 08:11:10 2020 -0400

    log/eve: Rename fileinfo alert object to files
    
    This commit changes the name of the "fileinfo" array in the alert object
    to "files" to better support legacy use of "fileinfo" in reporting and
    elsewhere.
    
    The "fileinfo" event type is not an array while the alert "fileinfo"
    member was.

[33mcommit 69fffb2dc4b8e9dfecf866dd27f488a4ad1de9ff[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Sep 15 09:27:36 2020 -0600

    doc/userguide: include man page even when not including pdf
    
    Fix a mistake in Makefile.am where the man page was only being
    added to the distribution if the PDF was also created. It should
    be included even if the PDF cannot be included.

[33mcommit 301454e9e4118de8029750931ea690adeb25c20a[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Thu Sep 24 10:52:01 2020 +0530

    dcerpc: fix datatypes while handling stub data

[33mcommit 3fd9a3d420af7fa7e8eb75182af8eb3bcf5dc3e3[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Thu Sep 24 20:12:09 2020 +0530

    dcerpc: fix datatype for stub data len

[33mcommit 222b3861024fbe1d40e3c97cfa65b5ce3243ba3d[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Sep 9 16:05:56 2020 +0200

    rust: rebuilds std when building fuzzers
    
    so as to have MSAN working

[33mcommit 2bef41a6309e70fa649380d3361ade72f803d8b1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 7 16:42:22 2020 +0200

    version: continue 6 development

[33mcommit 914391697a3fb2b84cd4aec6190327aa4fe5ea48[m[33m ([m[1;33mtag: suricata-6.0.0-rc1[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 10 21:42:35 2020 +0200

    version: update to 6.0.0-rc1

[33mcommit 990dfdac6b17cf1d401e17dc6f8cd79be862380b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 10 21:42:00 2020 +0200

    changelog: update for 6.0.0-rc1

[33mcommit 15447cc672db53aa4e39de6a403396a3b6ed9e22[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Sep 11 09:44:25 2020 +0200

    dceprc: signature rust check with is_char_boundary
    
    before calling split_at which would panic

[33mcommit 98285177ba878af3c0ccdb0d2cfcdc9f4aa1bedd[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Fri Sep 11 11:58:28 2020 +0530

    datasets: use default memcap

[33mcommit 872de829ea02491c458f1e9a0bd5aafda2e723bc[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Sep 9 15:54:36 2020 +0200

    detect: initialize pointer before calling pcre_study
    
    So as not to check an uninitialized value
    Found by MSAN

[33mcommit f21a4bc40eee0be6fb8cce6985b13970e6e6894f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 10 21:52:44 2020 +0200

    datasets: remove experimental warning

[33mcommit 87617b200c592dfdb5e256e27ac13a8769555f16[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Thu Sep 10 17:52:18 2020 +0530

    doc/datasets: add info about memcap and hashsize

[33mcommit 1286b0a8f1ed2e024e8f171ee1cf702c55351588[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Thu Sep 10 14:04:16 2020 +0530

    datasets: parse defaults section from yaml
    
    Datasets can now have a global defaults setting in suricata.yaml. In
    case the settings for memcap and hashsize are not find in the yaml or
    rule, this shall be the fallback.
    
    Example:
    
    datasets:
      defaults:
        memcap: 100mb
        hashsize: 2048
      ua-seen:
        type: string
        load: datasets.csv

[33mcommit 5ac94fc4076676d77bbc8b31c5515db7b3545401[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Thu Sep 10 17:15:00 2020 +0530

    datasets: allow memcap, hashsize be set via yaml or rule
    
    It is now possible to set the memcap and hashsize via suricata.yaml and
    rules.
    
    Rule example:
    
    alert http any any -> any any (http.user_agent; dataset:isset,ua-seen,type string,load datasets.csv,memcap 100mb,hashsize 2048; sid:1;)
    
    suricata.yaml example:
    
    datasets:
      ua-seen:
        type: string
        load: datasets.csv
        memcap: 20mb
        hashsize: 2048

[33mcommit b2482d6c609e279b2ccb689e57603196952df759[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Thu Sep 10 17:04:21 2020 +0530

    datasets: allow max possible memcap while loading
    
    While using the "load" option of datasets, it should be possible to load
    any file from the disk, so set the limit to highest possible.

[33mcommit 2b1bbd08a3d04feac17b68131399d8c1c85b8fdf[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Sep 3 13:29:57 2020 -0600

    rules/tls: sync with changes to the TLS events
    
    Sync rules with event changes in commit
    01aef49cbd32fb2437d1615a2111111e5f3ee862.

[33mcommit ce603d662f1db0edd09b39cbf5192b7119404da9[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Sep 9 08:59:32 2020 -0400

    log/eve: Ensure eve logs have sequential suffixes
    
    This commit ensures that the eve logs have sequential suffixes without
    gaps.

[33mcommit ad2e18be3ea149cde6ed9f58bb22a02f29a5fe5d[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Sep 10 07:47:46 2020 -0400

    atomics: Add "decl and init with value" function
    
    This commit adds an interface to declare and initialize an atomic with a
    specific value. This can help with situations where there's no defined
    initialization path to set things up.

[33mcommit 8395a9201e3963789d47b90b70c09f6cb20b464a[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Sep 8 08:26:36 2020 -0400

    log: Ensure threaded eve honors SIGHUP
    
    This commit ensures that all logging contexts register for the file
    rotation mechanism (SIGHUP and configured).

[33mcommit 7d44e80a503a9baf3efaa7edde39d655ddeccce1[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Sep 8 14:01:02 2020 -0600

    doc: document removal of unified2
    
    And suggest an alternate tool, Meer if compatibility with
    Barnyard2 style databases is required.
    
    Redmine ticket:
    https://redmine.openinfosecfoundation.org/issues/3497

[33mcommit e71f2b22faccc7cc7eda948b721f63cac8b34eb2[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Sep 8 13:29:11 2020 -0600

    doc: add removal of individual json loggers
    
    Add link to multiple eve instances as a replacement for this
    feature.

[33mcommit 9b5c9233277bfc463459aa1a0878100c3e32e60e[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Sep 4 09:39:44 2020 +0200

    http: disables lzma by default for HTTP

[33mcommit 6694737fcf85f5c8c8205eb83471390a2e6838eb[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Sep 3 14:22:29 2020 +0200

    http2: settings from http1 upgrade

[33mcommit 7011bddf846b1f64a8495573e7e25b51efb23c2e[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Sep 4 16:06:16 2020 +0200

    http2: mimic HTTP1 request from upgrade

[33mcommit 9d1b030ff0459e471823ba21a3ee92353274b94c[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Sep 3 14:19:28 2020 +0200

    http2: first connection upgrade from http1

[33mcommit 9185a90fc98c4caf39e3d2550925e0d3299b3023[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Sat Sep 5 11:43:53 2020 +0200

    dnp3: fix unit tests when fuzzing

[33mcommit 82f1758573b1d46124c24e633333b79cf1045c33[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Sep 8 09:23:24 2020 +0200

    applayer: keep running detection on protocol change
    
    ie do not stop on first try if we do not have enough data

[33mcommit 21e741795d03054d8a593b7deec7700c342992f7[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Sep 9 10:09:33 2020 +0200

    applayer: on protocol change, use previous state

[33mcommit 828ff2dc3c92066a894167a37665c6a07400458b[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Sep 9 10:08:50 2020 +0200

    http: removal of connect unit tests
    
    moved to suricata-verify

[33mcommit 547d6c2d78877329544045d3f4fa003ca8281122[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Sep 4 15:29:41 2020 +0200

    applayer: pass parameter to StateAlloc
    
    This parameter is NULL or the pointer to the previous state
    for the previous protocol in the case of a protocol change,
    for instance from HTTP1 to HTTP2
    
    This way, the new protocol can use the old protocol context.
    For instance, HTTP2 mimicks the HTTP1 request, to have a HTTP2
    transaction with both request and response

[33mcommit ed9fed4958a168a23bb3dfa0ce54f233771db96b[m
Author: Sascha Steinbiss <satta@debian.org>
Date:   Wed Sep 9 09:51:56 2020 +0200

    mqtt: add some extra tests for varint parsing

[33mcommit 1a88df7e88d456f2535a5da3a347aa382d714c63[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Sep 9 09:27:00 2020 +0200

    http2: handles incomplete frames after banner
    
    To signal incomplete data, we must return the number of
    consumed bytes. When we get a banner and some records, we have
    to take into account the number of bytes already consumed by
    the banner parsing before reaching an incomplete record.

[33mcommit 7ab9a01db20cc6bdf7b6850b08767fcab47ccd3f[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Sep 8 21:13:07 2020 +0200

    mqtt: limit size of variable integer

[33mcommit c4d0a61eca10d3b6f08ea028c3388d01dc47298f[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Sep 8 10:54:20 2020 -0600

    datasets: fix dataset load path construction
    
    Test the full path instead of just the filename provided in the
    rule to see if it exists.
    
    Fixes the case where a rule file is loaded from a directory
    other than the default-rule-directory.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/3916

[33mcommit e3b28bcf2a93529b58ad3d6c056daab6e8eed7a9[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Sep 8 16:23:29 2020 +0200

    http2: returns error in case of index 0
    
    As is documented in RFC 7541, section 6.1
    The index value of 0 is not used.  It MUST be treated as a decoding
    error if found in an indexed header field representation.

[33mcommit 9788b2ec8d487942f6d4b4054e44645f4c7f9263[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Sep 8 13:33:34 2020 +0200

    signature: frees transform options in SigMatchPrepare

[33mcommit 16742394424e8c9654708fbc93b990b9ddc70dff[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Aug 27 17:11:10 2020 +0200

    detect: checks for overflow when comparing signatures priorities

[33mcommit abca45190141cb03e4e3794ea42d5ba397f5afde[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 8 10:41:29 2020 +0200

    flow: suppress Coverity FP

[33mcommit 204302cbacb9a4f6447af2d36ea2a37c815ea2f9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 8 10:40:06 2020 +0200

    flow: minor code cleanup

[33mcommit 42ce297e0ea0922b7ad7db017daafd4dd0f1dae3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 8 10:29:23 2020 +0200

    flow: turn BUG_ON into debug check

[33mcommit 6494abc6b16239bbdf3b81f1ecf0204a16392ecb[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Sep 5 22:57:23 2020 +0200

    ebpf: fix invalid description in doc string

[33mcommit e1ecb7dc417d093dc817df1ada15c79e572ebb7b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 7 20:04:02 2020 +0200

    doc/datasets: explain reloads, general improvements

[33mcommit 6492fe0841166dec88b49e279c99762690e448e7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 7 16:46:39 2020 +0200

    detect/app-layer-events: improve warnings/errors
    
    Improve handling of outdated events that are no longer supported by the engine.

[33mcommit 48c30efd34226de1eaf02704c0023669a42da7dd[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Sep 6 20:27:04 2020 +0200

    prscript: port to python 3

[33mcommit 8cd82486e299cefa2ca153e505d9ff4c6fcde92a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 7 12:57:59 2020 +0200

    flow/bypass: don't bypass on flow timeout pseudo packets

[33mcommit cc2c7b731a93c5f6480a98a0739c4298c5627512[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Sep 4 10:45:52 2020 -0600

    rule parsing: valid that input rule string is UTF8
    
    Before parsing a rule string, validate that it is UTF-8 first.
    
    Related Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/3850

[33mcommit e9fec043b51374ee3927e2111d1ac5f5b59d79ca[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Sep 4 10:44:27 2020 -0600

    rust/util: expose function to test strings for valid UTF-8
    
    rs_check_utf8 will check that the provided string is valid
    UTF-8 by converting it to a Rust string and returning true
    or false.

[33mcommit 583593aa1b8dafdbbe177a4b74cdcd325bcf5002[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Sep 4 09:04:34 2020 -0600

    http/eve: use set_string_from_bytes where appropriate
    
    The JsonBuilder set_string_from_bytes will escape unprintable
    characters in the output stream. Using BytesToStringBuffer
    can generate invalid UTF-8 which prevents the conversion from
    a C string to a Rust string.

[33mcommit d6cf4b33353131f2705f3e0e3cb4091bf4613a31[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 7 11:38:11 2020 +0200

    detect/dataset: error if set couldn't be fully loaded

[33mcommit 017c038bcba9ebe279e470cc48e1f440dfa0ef7d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 7 10:25:37 2020 +0200

    datasets: free old data when reusing a hash container

[33mcommit 00f77f9643789fda6e4fa581fb43b02f4e90f093[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Aug 11 08:17:12 2020 -0400

    log: Log errors while writing log info
    
    This commit adds logic to log errors during output. Errors are logged
    once and the number of errors is maintained.

[33mcommit b9458adf8a3a415f357c11e27c8eeb6051282302[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Aug 11 08:16:52 2020 -0400

    log: Add log output error code

[33mcommit 6cdd87f5ad7fc2e99dbbf1b2c2dc9c58723c0c1b[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Aug 7 08:34:20 2020 -0400

    log: Use unlocked variants of stdio functions
    
    This commit uses the unlocked variants of additional stdio functions

[33mcommit 3c91e143525a915bfc1a2698df45b9ed1b6d60bb[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Aug 11 08:15:52 2020 -0400

    log: Add more stdio_unlocked macros
    
    This commit adds additional macros for interfaces in stdio_unlocked
    according to their local availability.

[33mcommit fa0b91b18f4f828b1ec54fe97d5a352e461d5af4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 7 07:09:05 2020 +0200

    error: reformat enum

[33mcommit fbdc7765254983360cf2a988e78754c68e52994c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 4 15:38:58 2020 +0200

    app-layer: handle parser return code issues more gracefully

[33mcommit 5155982ba597105d7b5fb14f4894064500601c1f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 4 10:52:04 2020 +0200

    pcap: fix minor scan-build warnings

[33mcommit aac2b9dbb93798c74c828281e3dd7ffd769b5b08[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 4 10:46:59 2020 +0200

    commandline: add static analyzer hint for -r parsing

[33mcommit 71297f575f038100c885413ed3eead31a9e13d68[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 4 10:44:54 2020 +0200

    commandline: minor formatting fixes

[33mcommit 9efb93669711ffdf141b960420c943c796d78650[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Aug 6 08:34:45 2020 -0400

    general: Improve grammar in error messages
    
    This commit corrects a minor grammar issue in address/port error
    messages.

[33mcommit 57a611b429d5108c5793e9b6b55f85d29d3f0758[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 4 10:11:40 2020 +0200

    decode/geneve: add config to yaml

[33mcommit 8b38db4a50235377d067cfc10816dbfa3bd2a205[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Sep 2 11:53:20 2020 -0600

    github-ci: apply default CFLAGS to all builds

[33mcommit 280ab657055e4c46b2969cce5940f1237959776d[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Sep 1 15:37:54 2020 -0600

    github-ci: add test build without jansson
    
    This is to cover a test from Travis CI where we make sure
    that ./configure fails if libjansson is not available.

[33mcommit cb963f8682eb059aa2c6f21a6d01864e92fd64cb[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Sep 1 15:32:38 2020 -0600

    github-ci: update debian 9 test to use known Rust version
    
    Choose Rust 1.39.0 as a known version of Rust that we build against
    to see in CI if we build with this version, but fail with latest.
    
    This is to cover a similar test from Travis CI.

[33mcommit b698f66c2701c19903cdac6ac5a5c370b33a8817[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Sep 1 15:23:03 2020 -0600

    github-ci: enable debug on Fedora 32 build

[33mcommit 146a1ee1d768b54c626fd33f58be53032d325e63[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Aug 19 12:17:00 2020 -0600

    github-ci: check that configure fails if rust to old
    
    Migration of similar test from Travis-CI.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/3869

[33mcommit 975b58c05022092e1cfca8da25d125621b10c2ea[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Aug 19 09:28:07 2020 -0600

    github-ci: Ubuntu 20.4 build with -NDEBUG
    
    To cover Travis-CI test that builds with -NDEBUG.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/3869

[33mcommit dfbd38e809147662145933a9632393172c547e78[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Aug 17 16:51:38 2020 -0600

    github-ci: ubuntu 20.04 build without nss/nspr
    
    Adds a test that builds and tests Suricata without nss/nspr
    to replace the similar test on Travis-CI.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/3869

[33mcommit 1ec6307d9d2da72a41ff1e0d20c0bb0fa413aa3e[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Aug 12 09:06:23 2020 -0600

    github-ci: Fedora 32 builder with asan enabled
    
    Also enables -Wshadow and rust-strict to cover those cases
    from Travis.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/3868

[33mcommit 6be08637c349aac338f8afd67cfefcfe41b48486[m
Author: Ali Jad Khalil <jadkhal@amazon.com>
Date:   Sat May 2 21:04:07 2020 +0000

    decode/teredo: Modified/refactored Teredo logic
    
    This is just a slight refactor to make analagous decoding/encapsulation
    schemes - Geneve, Teredo, and VXLAN - be implemented as similarly as
    possible.

[33mcommit 66452dd38a7ca8a84b0dccf921b43dc966a86185[m
Author: Ali Jad Khalil <jadkhal@amazon.com>
Date:   Sat May 2 21:01:58 2020 +0000

    decode/vxlan: Modified/refactored VXLAN logic
    
    This is just a slight refactor to make analagous decoding/encapsulation
    schemes - Geneve, Teredo, and VXLAN - be implemented as similarly as
    possible.

[33mcommit 5d955c1836745cb359fb041b3b58c5ec9983255b[m
Author: Ali Jad Khalil <jadkhal@amazon.com>
Date:   Wed Apr 29 07:36:18 2020 +0000

    decode/geneve: Add Geneve decoding functionality
    
    These changes are in response to feature request 3063. Geneve is
    very similar to VXLAN, but uses a slightly different encapsulation
    scheme.

[33mcommit 48da18b081bd71f8e1ca56d84137e45f920ff1b1[m
Author: Simon Dugas <simdugas@gmail.com>
Date:   Thu Apr 23 18:29:23 2020 +0000

    doc: dns - document additional fields in eve event
    
    Documentation of additional fields for soa and sshfp. Also some minor
    doc fixes and updates.

[33mcommit 7f26246ce1064682bb1f1428135e9789c602dc3b[m
Author: Simon Dugas <simdugas@gmail.com>
Date:   Fri Apr 24 17:57:20 2020 +0000

    dns: parse and log fields for SOA record type
    
    Added `dns_parse_rdata_soa` to parse SOA fields into an `DNSRDataSOA`
    struct.
    
    Added logging for answer and authority SOA records in both version
    1 & 2, as well as grouped formats.

[33mcommit af498fd8404dab2e88f8aeb2c4748db7f445aba5[m
Author: Simon Dugas <simdugas@gmail.com>
Date:   Fri Apr 24 18:03:23 2020 +0000

    dns: use nom's rest to take all remaining rdata
    
    Using nom's `rest` combinator eliminates the need to call the do_parse
    macro for parsing a single element.

[33mcommit 8005f50647d5c2256aca7c9e5e4af40f1ab061f3[m
Author: Simon Dugas <simdugas@gmail.com>
Date:   Wed Apr 15 15:20:22 2020 +0000

    dns: refactor to handle more rdata formats
    
    Represent rdata as `DNSRData` enum variants instead of `Vec<u8>`.
    This will allow parsing/logging of more complex formats like SOA.

[33mcommit 77bafe13a3400e932df4631728bdc91cc0eafebb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 4 12:57:54 2020 +0200

    decode: reformat event table

[33mcommit 06f41f608c16344f83fe183636f1ef23d2979cb1[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun Aug 23 19:42:21 2020 -0400

    doc: Improve grammar, spelling and clarifications
    
    This commit improves the overall documentation's grammar, spelling, and
    adds clarifications  where needed.

[33mcommit 665328b29ef87468433bc215c2ae0d8768a98a41[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Aug 25 13:52:00 2020 -0600

    plugins: require registration function SCPluginRegister
    
    Instead of looking for a symbol, "PluginSpec" look for a function
    named SCPluginRegister that returns a SCPlugin.
    
    This makes it much easier to create Rust plugins without having
    to deal with dlopen constructors and such, which is rather
    straight forward in C, but a bit of advanced boilerplate in Rust
    that can be eliminated by simply calling a registration function.

[33mcommit 647e304f4bc4ecd10f605b80d708f4ec1ae9aef7[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Aug 25 13:17:55 2020 -0600

    rust/log: minor cleanup
    
    Group functions for setting and getting the log level
    together.

[33mcommit ea1338b4647b825e3ffb48fcfeba4a890c3e7830[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Aug 25 13:15:21 2020 -0600

    rust: function macro now returns the function name
    
    Borrow a macro from https://github.com/popzxc/stdext-rs that
    will give us the Rust function name in SCLog messages in Rust.
    
    As this trick only works on Rust 1.38 and newer, keep the old
    macro around and set a feature based on a Rust version test
    done during ./configure.

[33mcommit bac8016d1779eabe3d56077f597e7318b71b911c[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Aug 25 12:51:26 2020 -0600

    rust: plugin bootstrap function
    
    Functions written in Rust will need to suricata::plugin::init()
    to bootstrap themselves. This bootstrap process sets the log level
    within the Rust address space, and hooks up function pointers
    that are expected to be set during normal runs of Suricata.

[33mcommit 3de98b35952c4623f1ff6e098deed2cc7abbbb93[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Aug 25 12:50:31 2020 -0600

    rust/log: set the log level with a pure Rust function
    
    Make sure the log level is setup with a pure Rust function, so
    when it is set, its set within the address space of the caller.
    
    This is important for Rust plugins where the Rust modules are not
    in the address space of the Suricata main process.

[33mcommit 335e4e728f3ec3ebd1fc7b6e10b1b9e9ca885d78[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Aug 25 10:12:04 2020 -0600

    suricata: expose the SuricataContext with a function
    
    Expose the "SuricataContext" required by Rust as a function. During
    normal startup we register this context with the Rust code, but
    plugins written in Rust will need to get the same registration
    done, but to do this in a plugin, the plugin code must
    call and set the context within its address space.

[33mcommit 87a91e6aa87c8b4d740fbd74fc57ebd88e586ff2[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Aug 25 12:47:10 2020 -0600

    logging: expose the log level with a function
    
    The log level needs to exposed so Rust plugins can bootstrap
    themselves with the correct login to SCLogNotice!(), etc work
    as expected.

[33mcommit ac93ab281d38d0b28c81349a971dce57782cefa1[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Aug 17 10:36:19 2020 -0600

    rust/logging: allow log macros to be used by plugins
    
    Fix plugin macros so they can be used by external Rust crates
    such as plugins.

[33mcommit 3672cea8767cd2de37a2e68984a391339c4c1872[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Aug 17 10:32:05 2020 -0600

    rust/Cargo: build as rlib for plugin linkage
    
    Build Rust code as an rlib, in addition to a staticlib so plugins
    can link with the Rust code.

[33mcommit 17776e098ee3287404964a3d9fe8359cc2d62e36[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Aug 25 10:10:03 2020 -0600

    rust-context: remove unused opaque type Store

[33mcommit 6dbc6d66692c64a2dfbc4524f7fe91a9dbd31495[m
Author: Joshua Lumb <joshua.lumb@gmail.com>
Date:   Thu Aug 13 09:43:05 2020 -0400

    runmodes: memory leak on runmode single

[33mcommit da3930e4882e5f3d50c5583bff2d097af4607db8[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Sep 1 09:49:46 2020 -0600

    configure: fix test for rust headers for cross compile
    
    Use "if test ..." instead of AC_CHECK_FILES which does not work
    when cross compiling.

[33mcommit 5c725d50502b2a7a747fc04938937b8c6b733aac[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Aug 29 10:59:49 2020 -0400

    config/lua: Cross-compiling support
    
    This commit guards the run-time check for a Lua integer so that it no
    longer attempts execution in a cross-compilation environment.

[33mcommit 3e8db21ef3e6920ef502b0ad1c4ac5f822088dff[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Aug 29 10:58:54 2020 -0400

    config/pcre: Improved support for cross-compiling
    
    This commit changes the logic used to determine if pcre_jit_exec is
    available from a run-time to a compile-time check.

[33mcommit ff293455277a478b37386ee38d1869d0b2b9d368[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Aug 12 09:51:00 2020 -0400

    output: Remove unused output functions
    
    This commit removes registration, initialization, and de-initialization
    functions no longer needed

[33mcommit 15caf3eea5e62131930af443025b37a6b246416c[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Aug 12 09:50:09 2020 -0400

    log: Remove standalone output registration
    
    Remove standalone output logger registration since eve is
    multi-instance.

[33mcommit b21160a6e3bd9cb8f6ecad5082dd6cd85928dcee[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Wed Aug 26 13:25:23 2020 -0400

    doc: http.host keyword note for matching on port
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 703de670863c33e63357ac04934c02648eaea086[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 3 12:34:37 2020 +0200

    flow: fix multi-manager hash range calculation

[33mcommit 3a3a9e135a88c283c3578dcb218c78cee7fcd40a[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Sep 1 10:55:57 2020 -0600

    github-ci: fix building against request libhtp/sv PR
    
    The variable name was wrong, causing the libhtp-pr and sv-pr
    parameters in the commit message to not be applied.

[33mcommit 260a20bf9113da79636b1f26c71dd9d0c97c4a85[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 31 15:00:28 2020 +0200

    flow: suppress noisy messages

[33mcommit b20a8de646da09956240236248be840f36b1448f[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Aug 26 10:52:54 2020 +0200

    dns: simply skips zero-sized dns requests/responses

[33mcommit c06d8f246303d767d2b5e8c504f58de401e64c0a[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Aug 27 17:32:41 2020 +0200

    dcerpc: validate signature with dcerpc keywords
    
    so that they do not use another protocol's keywords

[33mcommit d509a7807430c29cf57905239586920aeaa85c5c[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue May 19 13:57:45 2020 +0200

    http: handles gaps
    
    ie data=NULL and len>0 from libhtp callbacks

[33mcommit 23c0efa2ec77e35e8b64451fa3d104ec055d168e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 28 17:26:47 2020 +0200

    flowbits: convert flowbits dumping to json builder

[33mcommit 7facf5785f8e4f71e4fd8fcb7998919e70ba44b3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 28 23:26:01 2020 +0200

    detect/analyzer: convert to jsonbuilder

[33mcommit 9f1e49e8630dfe20975fbd027fdb9aa61afa3f3c[m
Author: Roland Fischer <roli@gugus.ca>
Date:   Tue Jul 14 23:43:58 2020 -0400

    ci: Run formatting check on pull request

[33mcommit 69ed6f253f793bf3a483fa717e289b5084b77665[m
Author: Roland Fischer <roli@gugus.ca>
Date:   Fri Jul 3 00:22:35 2020 -0400

    util: Add clang-format helper script

[33mcommit de7c7eeff0da3fae3d16137298367e420be98661[m
Author: Roland Fischer <roli@gugus.ca>
Date:   Fri Jul 3 00:22:03 2020 -0400

    doc: Add dev code-style

[33mcommit ce7440e296958080416ea3282f6994e07b0b34dd[m
Author: Roland Fischer <roli@gugus.ca>
Date:   Tue Jul 7 17:54:36 2020 -0400

    common: Add clang-format file
    
    clang-format allows to auto-format C code. The settings here are set
    up to follow the code style, see
    https://redmine.openinfosecfoundation.org/projects/suricata/wiki/Coding_Style.

[33mcommit d3cf2c21df625cfe9d3dcd605f110e3fb76e5601[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 25 16:06:34 2020 +0200

    threshold: fix potential memory leak

[33mcommit 6444f738afbf5f35305c47ccc34cd2d32037a1ab[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 25 15:58:52 2020 +0200

    reject: minor code cleanup
    
    Use enum for direction to assist compiler.

[33mcommit b6fed6d431bb09b573555b2560eb805a59cd91ec[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 25 14:08:37 2020 +0200

    stream: fix GAP size
    
    Fix GAPs sizes sometimes exceeding the ACK'd data size.

[33mcommit 6978d8dac6fbf4c8e09d411850a2e9aa016da635[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 25 12:36:08 2020 +0200

    stream: fix deinit after incomplete init

[33mcommit a015a31073bc5c424edf08aefc45f541e8eca5ba[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 25 12:35:51 2020 +0200

    output/flow: fix deinit after incomplete init

[33mcommit c39101bbec60c6155a7239c22647e862f5766274[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 25 11:47:38 2020 +0200

    nfq: suppress debug message using info level

[33mcommit 797a1282566b62c2a3fa9c2bb5443adc316ee594[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 25 11:46:47 2020 +0200

    plugins: suppress coverity toctou warning

[33mcommit bd68bd50371ca68ebd473f98c10e2407e0e185d4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 25 11:44:13 2020 +0200

    flow: work around harmless coverity warnings

[33mcommit 29148fb563d4b7dc3e348b83cc1e1a49646f1423[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 25 11:40:50 2020 +0200

    flow: fix spare sync incomplete counter

[33mcommit 50c7b0d1c3f990861f828253aea8a70de0197151[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 25 11:39:00 2020 +0200

    reject: work around coverity warning

[33mcommit 65455208a52a2f7210774f366fa6800c4e379e70[m
Author: Vadym Malakhatko <v.malakhatko@sirinsoftware.com>
Date:   Mon Aug 17 15:29:52 2020 +0300

    plugin: fix typo in long_opts struct

[33mcommit c903441fe797ef1c67db36900db4b7c599c20925[m
Author: Ilya Bakhtin <ilya.bakhtin@gmail.com>
Date:   Tue Aug 18 19:26:36 2020 +0200

    mqtt: fixed wrong slice access
    
    Slice access esults in rust panic when mqtt ping is processed

[33mcommit cc93638d337a4856c9dd85b7f5dbb8484bb836e8[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Aug 20 11:29:10 2020 -0400

    napatech: Style -- remove extra space

[33mcommit 67529bd25a4381e03f9d31541a4a20376a31258d[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Aug 20 11:28:28 2020 -0400

    napatech: Use proper parser for type
    
    This commit uses the proper parser call for the value being parsed.

[33mcommit 45b055aca5102e93dda0afb7451cef2cc7a12cb2[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Aug 20 11:27:47 2020 -0400

    napatech: Improve configuration range handling
    
    This commit corrects issues parsing ranges from the Napatech section of
    the configuration file.

[33mcommit c408b15c516250905b25838c97f8d0d83d9cbe13[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Aug 20 11:26:33 2020 -0400

    napatech: Fix compiler issues w/out bypass
    
    This commit fixes compiler errors when Napatech bypass is not configured

[33mcommit 81d7a7aa826f96deceddcae83bcdae0c925b3dab[m
Author: Carl Smith <carl.smith@alliedtelesis.co.nz>
Date:   Mon Aug 17 08:41:35 2020 +1200

    threshold: Change rule parsing to use pcre_copy_substring
    
    Fixes memory leak when parsing threshold rules.
    All parsed strings are less than 16 characters except
    for the IP address which could be up to 48 characters.
    Remove redefinition of MAX_SUBSTRINGS

[33mcommit fbc9da450d917ec140e3616ad0d9363cb58ffa22[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Aug 7 08:57:04 2020 -0600

    configure: fix detection of netfilter_queue with older headers
    
    Define _GNU_SOURCE and include sys/types.h so older
    netfilter_queue headers can be detected properly, as they are
    using u_int_xx style integers.

[33mcommit 454950541851e388c14c9c7564fc5a238e47dc57[m
Author: Odin Jenseg <odin@mnemonic.no>
Date:   Wed Aug 5 14:09:08 2020 +0200

    doc/userguide: fix outdated xdp info

[33mcommit b8994cdaca119360ff8f18cc2432460d10142c5d[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Aug 11 10:26:43 2020 -0600

    plugins: track all loaded plugins in a list
    
    Track the pointer returned from dlopen in a list to prevent a
    resource leak by the pointer going out of scope.
    
    Found by Coverity, CID 1465661.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/3864

[33mcommit dbb5dcb1dd7869def9b419a1dbb00530d8d8db2c[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Aug 11 09:31:09 2020 -0600

    plugins: use closedir to close open directory (not free)
    
    Found by Coverity, CID 1465665: ALLOC_FREE_MISMATCH.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/3864

[33mcommit f2a1626b513d9ecae0290298c2a0956505c25ddd[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Aug 11 09:30:01 2020 -0600

    output-json: fix Coverity USE_AFTER_FREE
    
    Return error if plugin open fails. Fixes Coverity CID 1465664
    USE_AFTER_FREE error.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/3864

[33mcommit 507ed593cb4241c3e2a01107bb1b271f09c11d66[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Aug 10 11:20:52 2020 -0600

    automake: add acsite.m4 to EXTRA_DIST
    
    This file is required to successfully re-run autoreconf, which
    many packaging tools will do even on a prepared distribution
    archive.

[33mcommit 0de0c60c88f5f6b6e5fa163b4734ce58fbb94ae3[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Aug 10 11:15:45 2020 -0600

    github-ci: add autoreconf to centos-7 build
    
    The prepared distribution packages are failing autoreconf
    due to a missing acsite.m4. Add autoreconf to the centos-7
    build which uses the prepared package to test for this
    issue.

[33mcommit ac491c6e8daf9a982e4ff6de743de916646a4b16[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 7 16:50:56 2020 +0200

    fuzz/pcap: add missing flow queue

[33mcommit 107ad95c415f0dcf52bfe941e26fb243288ba1c0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 7 16:43:24 2020 +0200

    fuzz/pcap: enable http2

[33mcommit 22c70f7d66dbfecb0f51422d48fb24675a569f51[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 7 16:42:22 2020 +0200

    version: continue 6 development

[33mcommit bb01d8ca3175bffc5d56cdbf7ecaa3eb38467e2c[m[33m ([m[1;33mtag: suricata-6.0.0-beta1[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 7 10:17:12 2020 +0200

    version: update to 6.0.0-beta1

[33mcommit 264d4d29e10ccbe6e081fdadd4118830740ec5f5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 7 10:15:56 2020 +0200

    changelog: update for 6.0.0-beta1

[33mcommit 928d4820f9e9ac26405dd3e4d2b6dfa56ec3255a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 6 23:06:31 2020 +0200

    plugins: remove unused func, suppressing compile warning

[33mcommit 9902413745a8799b3f071c760d3fbc9412656536[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 6 21:04:03 2020 +0200

    plugins: add missing guards

[33mcommit 4aa80ac7f684bcc7fc357499bc4af7bfe1b38c71[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 6 20:49:56 2020 +0200

    detect/http2: fix header inspection
    
    Header inspection was overwriting data that was still being
    referenced by the detect engine, leading to ASAN issues.

[33mcommit abc8bd11b95568fccebd6dda0f4b8ac81d617d87[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Aug 6 10:28:55 2020 -0400

    output/ssh: Use correct file context
    
    This commit corrects an issue with the SSH output module that resulted
    in a SEGV when SSH output is logged.

[33mcommit e10d107415b0da4cdcb02aeba6e19906a9decc47[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Sat Jul 4 00:33:08 2020 -0600

    plugins: support for capture plugins
    
    Allow a plugin to register itself as a capture source. This isn't that
    much different than how current sources register, it just happens
    a little later on during startup.
    
    One "slot" is reserved for capture plugins, but multiple plugins
    implementing a capture can be loaded.  The --capture-plugin command
    line option must be used to tell Suricata which plugin
    to use.
    
    This is still very much a work in progress, but can load
    PF_RING as a capture plugin.

[33mcommit 8fb35236e69a8caf3f7a288fcf40a0a46fddba46[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Jul 3 16:33:12 2020 -0600

    plugins: initial support for a filetype plugin
    
    A filetype plugin is a plugin that implements an eve filetype. Most
    of the current filetypes could likely be implemented as such a plugin.
    Such a plugin must implement Open, Close and Write, where Write
    is provided the formatted JSON to be logged.
    
    This commit also includes the plumbing for plugin loading. Example
    plugin to come.
    
    Plugins are loaded by the "plugin" section in the configuration
    file:
    
      plugins:
        - /path/to/directory/plugins
        - /path/to/plugin_file.so
    
    This can also be done on the command line with:
    
      --set plugins.0=/path/plugin_file.so

[33mcommit f35c25cef289b426d4fa1715d4ff826580eb2fd9[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Jul 3 16:25:55 2020 -0600

    util-error: define generic plugin error code

[33mcommit ff81212d8b47fb298caa3acb785118cc745c9e8f[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Apr 23 16:48:23 2020 -0600

    configure: check for plugin support
    
    Currently plugin support requires the dlfcn.h header
    file and compiler support for -rdynamic.

[33mcommit 900f1522b444e8391250683d48855ceb3d23f225[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Apr 23 16:46:05 2020 -0600

    plugins: config.h: move into src and rename to autoconf.h
    
    While fixing files that include config.h, just remove the
    include if possible.

[33mcommit f26d6eaf989368f4b5c1884a491df08a112899f6[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Aug 3 16:21:52 2020 -0600

    http2: log as http to abstract http and http2 a little
    
    This commit logs http2 as an http event. The idea is to somewhat
    normalize http/http2 so common info can be version agnostic.
    
    This puts the http2 specific fields in an "http2" object inside
    the "http" object.
    
    HTTP2 headers/values that are in common with HTTP1 are logged
    under the "http" object to be compatible with HTTP1 logging.

[33mcommit 6a55606adb0537f1e13dae89db4067d0a6962f98[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Aug 3 14:41:39 2020 -0600

    http2: log headers in the same format as http (1)
    
    Log the headers in request_headers, and response_headers like
    http1 to remain compatible.

[33mcommit 5d5eef624b651788b8d98db34dfc4c7b0669ca68[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Aug 3 09:24:36 2020 -0600

    suricata.yaml: mark http2 as experimental
    
    Make it clear that HTTP2 is experimental and disabled by default.

[33mcommit 1422b18a996e76aa67c08cf2c67b0b9b84d9c1b7[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Jul 13 17:07:20 2020 +0200

    http2: initial support

[33mcommit 999af4f62a234d78f682c2b842f434410a61f56f[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Jul 13 17:45:00 2020 +0200

    http2: adds documentation

[33mcommit 0507d1e8f8bc36e3966ed563725c5efc8f4cc019[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Sat May 16 14:00:06 2020 +0200

    detect: generic structures for mpm with lists

[33mcommit ee41c0e293cf8e84e836bb4ed906fe2e5668ff88[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 6 14:38:36 2020 +0200

    flow/spare: implement pool shrinking
    
    Remove at most one block per run, so it shrinks slowly.

[33mcommit b3599507f4eb891841417575587d690ea13fe6c0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 19 17:26:45 2019 +0100

    flow: redesign of flow timeout handling
    
    Goals:
    - reduce locking
    - take advantage of 'hot' caches
    - better locality
    
    Locking reduction
    
    New flow spare pool. The global pool is implmented as a list of blocks,
    where each block has a 100 spare flows. Worker threads fetch a block at
    a time, storing the block in the local thread storage.
    
    Flow Recycler now returns flows to the pool is blocks as well.
    
    Flow Recycler fetches all flows to be processed in one step instead of
    one at a time.
    
    Cache 'hot'ness
    
    Worker threads now check the timeout of flows they evaluate during lookup.
    The worker will have to read the flow into cache anyway, so the added
    overhead of checking the timeout value is minimal. When a flow is considered
    timed out, one of 2 things happens:
    
    - if the flow is 'owned' by the thread it is handled locally. Handling means
      checking if the flow needs 'timeout' work.
    
    - otherwise, the flow is added to a special 'evicted' list in the flow
      bucket where it will be picked up by the flow manager.
    
    Flow Manager timing
    
    By default the flow manager now tries to do passes of the flow hash in
    smaller steps, where the goal is to do full pass in 8 x the lowest timeout
    value it has to enforce. So if the lowest timeout value is 30s, a full pass
    will take 4 minutes. The goal here is to reduce locking overhead and not
    get in the way of the workers.
    
    In emergency mode each pass is full, and lower timeouts are used.
    
    Timing of the flow manager is also no longer relying on pthread condition
    variables, as these generally cause waking up much quicker than the desired
    timout. Instead a simple (u)sleep loop is used.
    
    Both changes reduce the number of hash passes a lot.
    
    Emergency behavior
    
    In emergency mode there a number of changes to the workers. In this scenario
    the flow memcap is fully used up and it is unavoidable that some flows won't
    be tracked.
    
    1. flow spare pool fetches are reduced to once a second. This avoids locking
       overhead, while the chance of success was very low.
    
    2. getting an active flow directly from the hash skips flows that had very
       recent activity to avoid the scenario where all flows get only into the
       NEW state before getting reused. Rather allow some to have a chance of
       completing.
    
    3. TCP packets that are not SYN packets will not get a used flow, unless
       stream.midstream is enabled. The goal here is again to avoid evicting
       active flows unnecessarily.
    
    Better Localily
    
    Flow Manager injects flows into the worker threads now, instead of one or
    two packets. Advantage of this is that the worker threads can get packets
    from their local packet pools, avoiding constant overhead of packets returning
    to 'foreign' pools.
    
    Counters
    
    A lot of flow counters have been added and some have been renamed.
    
    Overall the worker threads increment 'flow.wrk.*' counters, while the flow
    manager increments 'flow.mgr.*'.
    
    Additionally, none of the counters are snapshots anymore, they all increment
    over time. The flow.memuse and flow.spare counters are exceptions.
    
    Misc
    
    FlowQueue has been split into a FlowQueuePrivate (unlocked) and FlowQueue.
    Flow no longer has 'prev' pointers and used a unified 'next' pointer for
    both hash and queue use.

[33mcommit e0aa7c1dbcc589702dccefbc3788a589418a99da[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 3 15:49:05 2020 +0200

    unittests: check for flow memuse

[33mcommit f50c7b6d119168ae6168c011dff81080cad6442c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 24 16:12:51 2019 +0100

    flow-manager: call other timeouts max once a second
    
    Call Defrag and others only once per second. Flow Manager may wake
    up (much) more often when flow engine is under resource pressure.
    As this does not affect Defrag and others, it only unnecessarily
    adds load.

[33mcommit 6814f08e937e846cd25430d7fa500f62fb1c3d67[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 23 20:22:37 2019 +0100

    flow-manager: only update FlowBucket::next_ts if it changed

[33mcommit 1d6d7f0858461cbf88675c7f894cacacf4e80434[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 29 07:55:12 2020 +0100

    flow: unref flow at end of flow worker

[33mcommit 2fd7c87f2271b14ba8c1ed4246c04fbe0457b1cf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 13 20:06:00 2020 +0100

    flow: do timeout checks before tuple compare

[33mcommit 48605f48674b1478a7dfcb03d67fa2d92eff4f51[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 13 15:39:20 2020 +0100

    flow: don't reorder list on lookup
    
    Reduces cache misses.

[33mcommit 2a872ccb8615b55266d051a5b653954117476df7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 23 14:23:05 2019 +0100

    flow: timeout check on flow lookup

[33mcommit 7583a6c37c10a76bc11b1eb94720d69793297b37[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 23 13:53:48 2019 +0100

    flow: simplify hash lookup logic
    
    Remove double compare paths in favor of a single unified path.

[33mcommit 8b016cff4b09873a3dc57e7b8613f973cd7a2f3a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 23 16:09:51 2019 +0100

    flow: only move lastts forward
    
    Pcaps with timestamps jumping around could confuse flow timeout
    handling otherwise.

[33mcommit afd4a8012ec9d5a4e5b038a3d3689156076410a7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat May 2 20:17:04 2020 +0200

    flow/worker: check pkt src using DEBUG_VALIDATE_BUG_ON

[33mcommit be57f6d3cc74f3bb1315439218c24a928cae7c48[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Aug 5 09:56:58 2020 -0400

    rust/rdp: Fix use of incorrect buffer
    
    This commit updates the connection confirmation parsing function to use
    the correct buffer when determining the packet type.

[33mcommit 2529eb35e18464cf88f2a03474969d67a559e585[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Wed Aug 5 17:24:09 2020 +0530

    smb: use uuid crate

[33mcommit e6668560e0740888b6d8a4128f092a455918ce7f[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Jun 17 16:44:28 2020 -0600

    rust: only run cbindgen if needed
    
    Only run cbindgen when necessary. This is a bit tricky. When
    building a dist we want to unconditionally build the headers.
    
    When going through a "make; sudo make install" type process,
    cbindgen should not be run as the headers already exist, are
    valid, and the environment under sudo is more often than
    not suitable to pick up the Rust toolchains when installed
    with rustup.
    
    For the normal "make" case we have the gen/rust-bindings.h file
    depend on library file, this will cause it to only be rebuilt
    if the code was modified.
    
    For "make dist" we unconditionally create "dist/rust-bindings.h".
    This means the generated file could be in 2 locations, so update
    configure.ac, and the library search find to find it.
    
    The "gen/rust-bindings.h" should be picked up first if it exists,
    for those who develop from a dist archive where "dist/rust-bindings.h"
    also exists.
    
    Not completely happy having the same file in 2 locations, but not
    sure how else to get the dependency tracking correct.

[33mcommit fd5d8b78d02a9584cbea10ce4b102856611e6f63[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Aug 4 16:27:30 2020 -0600

    alert/eve: add snmp metadata for rdp alerts
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/3441

[33mcommit ef0ebc955030139a97399a77311950836434b951[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Aug 4 15:35:07 2020 -0600

    alert/eve: add snmp metadata for snmp alerts
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/3441

[33mcommit 4c7f55e636e2c08f8d96c5e02b1a1f5c4045fd8f[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Fri Jun 26 01:32:59 2020 +0530

    dcerpc: handle gap for TCP streams

[33mcommit 6cff558663f1d9c85ecd9cd15f0a8742856afa83[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Aug 4 13:50:26 2020 -0600

    dns: add tailing data to split tcp unit test
    
    Add trailing data to the complete payload to test the case
    where data is consumed, but still incomplete.

[33mcommit cc154ce152750aed796df63925c403b1abe8755c[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Aug 4 13:47:19 2020 -0600

    dns: fix subtraction overflow in debug message
    
    The math for the return value wasn't updated in the debug log
    to match the logic and could lead to a subtraction overflow

[33mcommit 80ccbff28acf4cdc0fab8bcc50f4cd15cc9d2895[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Jul 30 17:23:48 2020 +0200

    dns: return status from parsing tcp request

[33mcommit 1296740471b96235f289104190d0bc4b746ad5fb[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Jul 30 16:32:40 2020 +0200

    dns: fix incomplete results
    
    and messages parsing whose length is >= 32768

[33mcommit 8d5e54c046b1bf78146bcc36ed06b6fbf6a42197[m
Author: James Dutrisac <jamesdutrisac@users.noreply.github.com>
Date:   Tue Jul 28 13:10:42 2020 -0400

    pcap: recusively reading pcaps / documentation
    
    Changes to doc/userguide/partials/options.rst for feature 2363
       (reading pcaps recursively)

[33mcommit db5b73d9d6ababe66c4a437c4fadc37aadb575fa[m
Author: James Dutrisac <jamesdutrisac@users.noreply.github.com>
Date:   Tue Jul 28 13:09:48 2020 -0400

    pcap: read directories recursively
    
    Describe Changes
    - Added ability to recursively read pcap directories
    - src/suricata.c: addition of new command line parameter
        --pcap-file-recursive
    - src/source-pcap-file.c: parsing of the command line argument
    - src/source-pcap-file-directory-helper.h: two thread vars tracking
        directory depth and should recurse
    - src/util-error.c / src/util-error.h:
       Added new warning code "SC_WARN_PATH_READ_ERROR"
    - Redmine ticket: https://redmine.openinfosecfoundation.org/issues/2363
    
    Ticket: #2363

[33mcommit 5a92d0a7041533d50581ba1f7780fdb534826e98[m
Author: James Dutrisac <jamesdutrisac@users.noreply.github.com>
Date:   Tue Jul 28 13:08:29 2020 -0400

    path: introduce path handling util funcs
    
    This commit provides changes to util-path.c and util-path.h
    to support the recursive reading of directories. It adds
    4 functions.
    - SCIsRegularFile to provide OS independent file info.
    - SCIsRegularDirectory to provide OS independent directory info.
    - SCRealPath is an OS independent wrapper for realpath.
    - PathJoin to manage path resolution logic.

[33mcommit 3cfc1fcb07551511cb89ab029bcc260ee9db75a6[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Jul 31 08:56:37 2020 +0200

    stream/app-layer: break loop on proto change

[33mcommit c9a637d8541cd91373dcc042c93933f0686b5499[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Mon Aug 3 22:13:59 2020 +0530

    datasets: fix null pointer deref

[33mcommit a8f147d17a54b3199020f51cd2b811d91488393d[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Mon Aug 3 22:11:40 2020 +0530

    datasets: Init even in socket mode
    
    Closes redmine ticket 3476.

[33mcommit 93eef1da842f90270f0a7e00df107b4dbb087230[m
Author: Sascha Steinbiss <satta@debian.org>
Date:   Mon Aug 3 10:27:26 2020 +0200

    detect-mqtt: unify error handling in rule parsing
    
    This is meant to provide a single path to the error case.
    This might help make things more clear for static
    checkers.

[33mcommit 5dc21b0e0905dfcd1d221f45e38c585875f1f21a[m
Author: Sascha Steinbiss <satta@debian.org>
Date:   Mon Aug 3 10:26:04 2020 +0200

    detect-engine: initialize struct fields

[33mcommit 9a954e944d56dff1c04e7b7ccaf0b88245c5b5a0[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue May 19 14:01:25 2020 +0200

    http: merge duplicated code
    
    HtpRequestBodyHandlePUT and HtpRequestBodyHandlePOST

[33mcommit fe6950de0871e2445ace11e3d1d6b14939667349[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue May 19 13:59:56 2020 +0200

    http: use more precise parameter in HtpRequestBodySetupMultipart
    
    So that we can see that it does not have to handle gaps

[33mcommit e13b319beb7003151ad206b6e86ed8ada6895a6c[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue May 19 13:58:38 2020 +0200

    http: remove unused code
    
    HtpRequestBodySetupPUT function
    So that we can see that we do not use data=NULL in there

[33mcommit 28050c967f9d08a1b1998e2256f7042b650b073c[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue May 19 13:55:41 2020 +0200

    file: handles gaps natively
    
    ie data=NULL and len>0 parameters

[33mcommit f0159b2fd289e5ee10f40184d92f25ae16a79f91[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue May 19 13:50:24 2020 +0200

    util: PrintRawDataFp handles null
    
    for gaps which are data=NULL and len>0

[33mcommit 83567e8732669d6cd2b8f5a265abeeb2b4bda3e4[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Jul 1 20:14:27 2020 +0200

    files: rust closes files even on 0 length chunk

[33mcommit 6343920dfcefb29b14fa9bfb9e3da4878040f3cd[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Mar 13 09:37:56 2020 +0100

    applayer: allow rust parsers to have only one probe

[33mcommit 4e1a41a17d644f7e74d914302f3228d12aa76fbf[m
Author: Sascha Steinbiss <satta@debian.org>
Date:   Mon Mar 2 19:10:30 2020 +0100

    output-json: add MAC address output
    
    This commit adds MAC address output to the EVE-JSON format. We follow the
    remarks made in Redmine ticket #962: for packets, log MAC src/dst as a
    scalar field in EVE; for flows, log MAC src/dst as lists in EVE. Field names
    are different between flow and packet context to avoid type confusion
    (src_mac vs. src_macs). Configuration approach and JSON representation is
    taken from previous GitHub PR #2700.

[33mcommit c42574169e0b3e4bca396493b21f0208ee1bc759[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Aug 1 09:45:04 2020 -0400

    output/anomaly: Restrict anomaly logger count
    
    This commit restricts the anomaly logger count. The restriction is
    necessary due to state maintenance in the logger that doesn't scale
    beyond a single logger.
    
    Until that issue's solved, when multiple anomaly loggers are configured,
    an error message will be emitted to highlight the restriction.

[33mcommit 61c327dd80f02484481cbea6d48168063ae90a69[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Jul 23 11:26:16 2020 +0200

    signature: checks for integer overflow in limits propagation

[33mcommit 5db1d9b841dd540ea8145540524b1f70cd693580[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Aug 2 20:23:29 2020 +0200

    eve/yaml: move mqtt down

[33mcommit 1c748f394b24d8a941b56d444d7088b0b8d4c979[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Aug 2 20:23:08 2020 +0200

    fuzz/pcap: enable MQTT parser

[33mcommit e9fe5ada7f1e16d3532ef30b884a20c76d7d518f[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Mon Jul 27 19:17:10 2020 +0530

    datasets: reload static sets

[33mcommit c31360070b12203cb4e6dfe08dff90b6752237bd[m
Author: Sascha Steinbiss <satta@debian.org>
Date:   Mon May 4 15:29:23 2020 +0200

    rust/mqtt: add MQTT parser

[33mcommit a5572890a9be85cf790687d53826e878e1d64245[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Apr 3 09:16:24 2020 +0200

    detect: adds engine for u8 keywords

[33mcommit a5d30a32201693aca74eae80b40424e58bd6d6f8[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Jul 30 07:08:12 2020 -0400

    doc/output: Document multithreaded eve option

[33mcommit 30ae98f658a19c4e74f161f2e77922277517cb0a[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Jul 28 09:09:27 2020 -0400

    output/json: Multi-threaded EVE logging support
    
    This commit modifies the JSON loggers with changes necessary to support
    multi-threaded EVE output.
    
    Each "thread-init" function sets up the per-thread log file context for
    subsequent calls to the JSON output to buffer function.

[33mcommit aa20770277da4044ccdfa1ca4019c4d4c6dc78a7[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Jul 28 09:03:05 2020 -0400

    log: Support multi-threaded eve output.

[33mcommit 15b4554ab3d673342ea348035ff8cf7297fbf8f6[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Jul 29 09:56:55 2020 -0400

    output: Check for fwrite_unlocked
    
    This commit creates a macro for fwrite_unlocked which is probed during
    configuration time.

[33mcommit 3d0f353ee5b99dedac4fb5a58a0e0da250ed35a3[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Jul 28 08:39:39 2020 -0400

    output: Correct typos

[33mcommit 1b791f34a5861b56a08877d0e9a6cf07924f9c1f[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Jul 28 09:34:59 2020 -0400

    output: Remove unused variables/define

[33mcommit 92e2e2ec8d8ca6db44326a2c5d8e5fd54553bf9b[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Jul 28 08:16:12 2020 -0400

    log: remove unused include files

[33mcommit 60658cbe0161b4e448a336e21e6f28828887f2b1[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun Jul 26 14:21:18 2020 -0400

    output/flow: Eliminate unnecessary parameter
    
    This commit removes a parameter to an internal-only function call.
    Removing the parameter allows an JSON builder optimization to be used.

[33mcommit 4aa7c988e8458e8c8ecd2c9b74bce1d077bf2f8e[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun Jul 26 14:19:53 2020 -0400

    output/netflow: Eliminate unneeded parameter
    
    This commit changes an internal-only function to remove a parameter
    that's invariant in all use cases. This allows an JSON builder
    optimization to be used.

[33mcommit 1569f3e3493f9c7952da9d84907ba2e84916d104[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Nov 6 11:23:35 2019 +0100

    transform: adds url_decode keyword
    
    Fixes https://redmine.openinfosecfoundation.org/issues/2689
    
    Adds a new source file to handle this keyword.
    And modifies documentation, Makefile, and registration accordingly.
    
    url_decode decodes url-encoded data, ie replacing '+' with space
    and '%HH' with its value.

[33mcommit 4c8af9cb96e45fb2933f9082c416ba5e4397a209[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 30 14:43:03 2020 +0200

    stream: fix endless loop in traffic with gaps

[33mcommit 9b13c1b804f6411753e4b86b05226fc82d44691a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 30 13:22:15 2020 +0200

    flow: avoid double state update on reuse
    
    Avoids an unnecessary atomic operation.

[33mcommit fd2dff8542cac0973eb41d545d2877c8494373ec[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 30 13:21:29 2020 +0200

    flow: minor cleanups

[33mcommit 7bf000731cc6bc6f120f9bbb6baebb98aed73642[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 10 10:42:32 2020 +0200

    flow: validate emergency timeout settings
    
    Make sure they are below the regular values.

[33mcommit 611c991f27598b8498d34fb18262de2f280a841a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 22 13:50:14 2020 +0200

    flow: improve performance in emergency mode
    
    When the flow engine enters emergency mode, 3 things happen:
    
    1. a different set of (lower) timeout values are applied
    2. the flow manager runs more often
    3. worker threads go get a flow directly from the hash table
    
    Testing showed that performance went down significantly due to concurrency
    issues:
    
    1. worker threads would fight each other over the hash access
    2. flow manager would get in the way of workers
    
    This patch changes the behavior in 2 ways:
    
    1. it makes the flow manager slightly less aggressive. It will still
       try to run ~3 times per second, but no longer 10 times.
    
       This should be reducing the contention. At the same time flows
       won't time out faster if they are checked many times per second.
    
    2. The 'get a used flow' logic optimizes the use of atomics by only
       doing an atomic operation once, and while doing so reserving
       a slice of the hash per worker.
    
       The worker will also give up much quicker, to avoid the overhead
       of hash walking and taking and releasing locks.
    
    These combined changes show much better 'under stress' behavior, esp
    on multi-NUMA systems.

[33mcommit 0da4dc0deab8ae40f2f4476f68faa62a692a0350[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Sat May 2 20:17:35 2020 +0200

    enip: use status for probing parser

[33mcommit a99ad4c1e4251c8a4a667d613ccb1fb334a9b268[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Jul 23 11:26:16 2020 +0200

    signature: checks for integer overflow in limits propagation

[33mcommit 5c31383d1c9ecbd93f0eae4ef02ae17ff98bcbed[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Jul 23 13:28:57 2020 +0200

    detect: fix read overflow in DetectGetLastSMByListId

[33mcommit b99ffd9ece693e1a13e99eb7e7be2186e00ff3a1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 28 17:25:13 2020 +0200

    eve: remove unused jansson code

[33mcommit a8e2399ea9aea93166fb9d5280dda47882b291ef[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 28 17:23:50 2020 +0200

    eve/metadata: create preformatted json string at start up
    
    Avoid runtime overhead of assembling metadata json string by
    pre-creating it at rule parsing time.

[33mcommit 1a18081a59a97fa1dacd1eda2083ef651b3bfd9a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 28 15:14:22 2020 +0200

    detect/profile: convert match dumps to jsonbuilder
    
    Remove unused code and do minor misc cleanups as well.

[33mcommit 1639dfa36e363097583a6e766bb90a15d42a0555[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 27 10:16:29 2020 +0200

    pfring: fix compile warning

[33mcommit 38fe11f3b2181420adccda4f6d2f5a0c444c9762[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 27 19:48:08 2020 +0200

    eve: remove unused json_t common functions
    
    These are no longer used as all callers have switched to
    the JsonBuilder equivalents.

[33mcommit 7ccfa177de38c54dee2bcf07d92e79f927dfcb8b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 27 19:28:22 2020 +0200

    eve/tls: minor cleanups

[33mcommit 04dad483c164486a1020de4adf7eb6698d9a7936[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 27 19:22:52 2020 +0200

    eve/metadata: convert to jsonbuilder

[33mcommit 556bee2adce4022edcf8a7818e26c9ebacb34f3f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 6 12:05:08 2020 +0200

    stream: call parser with 0 data on EOF
    
    This way both sides can call the EOF logic.

[33mcommit 616d7f256b3673f008bf2edcb3e673459fa7f1d3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 6 12:05:01 2020 +0200

    app-layer/tcp: don't use un-ACK'd data
    
    Still use un-ACK'd data in unclean shutdown. This means any state
    before TCP_CLOSED, or TCP_CLOSED that was caused by a RST.

[33mcommit 42205006d1035c85aea43b5a76e2bb0ad0fc08dd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 3 14:42:48 2020 +0200

    flow/timeout: flag last pseudo packet
    
    Flag the last flow timeout pseudo packet so that we can force
    TX logging w/o setting both app-layer flags.
    
    Case this fixes:
    
    1. flow times out when only TS TCP data received, but non of it is ACK'd.
       So there is no app-layer proto yet, or app state or Flow::alparser. So
       EOF flags can't be set.
    
    2. Flow timeout sees no reason to create pseudo packet in TC direction.
    
    3. TS pseudo packet finds HTTP, creates HTTP state, flag EOF TS.
    
    4. TX logging skips HTTP logging because:
       - TC progress not reached
       - EOF TC flag not set.
    
    The solution has been to flag the very last packet for the flow as such
    and use it has a master-EOF flag.

[33mcommit c825f836338889d7e2afde6485f3111c020b1483[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 3 16:38:56 2020 +0200

    stream/tcp: track if ssn has been closed with RST

[33mcommit 1b3582325b68f647417b610046d4ad0c5ec2b733[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 2 22:31:02 2020 +0200

    app-layer: set EOFs on app-layer disable

[33mcommit 1cbbc826478dd4d0cc8c87c40e59067707d9a6bb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 2 21:59:50 2020 +0200

    flow/worker: set EOF flags on change proto

[33mcommit a9f25402031e8864c9a07dd69d6b96a7281928dd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 2 21:58:48 2020 +0200

    flow-timeout: set app-layer EOF flag

[33mcommit ecd7862c36e5a9988fec4d97e61800cc9ed0bfe5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 2 21:57:04 2020 +0200

    app-layer: add debug

[33mcommit d8d59ac9b5369142f66d6d646c26984fd7f93435[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 2 21:53:37 2020 +0200

    stream: minor debug fixup

[33mcommit 5fd93866657afb53a493584cc2a9ad4f9146a333[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 2 21:25:46 2020 +0200

    app-layer/pd: improve size check in bail conditions

[33mcommit 4f73943df915832b8aadad853b2c593f7100aa4d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 16 10:23:49 2020 +0200

    app-layer: split EOF flag per direction

[33mcommit 57b75f89da8dbe8526434bfaf0cb883e3b107bbf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 4 21:12:15 2020 +0200

    stream: app update from loop
    
    When the stream engine has data ready for the app-layer it will call
    this API from a loop instead of just once. The loop is to ensure that
    if we have a very lossy stream where between 'app_progress' and
    'last_ack' there are multiple chunks of data and multiple gaps we
    process all the chunks.

[33mcommit e822b30cc2cd7b8ebaa1aac47148c06da8718ff3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun May 17 14:22:59 2020 +0200

    stream: improve gap handling with 'incomplete'
    
    Make sure stream requiring more data because of 'incomplete' records
    properly move ahead if there is a GAP in the window of required data.

[33mcommit c7d59a61eab713fe9ba3652b3e61d12741a66882[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 8 15:24:00 2020 +0200

    stream: fix IDS mode using un-ACK'd data

[33mcommit 49eba6ac23b7293275167a52b30d44d47ab39986[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 4 20:29:53 2020 +0200

    stream: code cleanup

[33mcommit f65bf4c7eac75992151b0983ec9a36c7512cb96d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 25 15:07:39 2020 +0100

    flow/tcp: consider pkts established based on 3whs

[33mcommit 7309c97eda633f89ea5b9f30bbe598d7abd925dd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 25 14:16:36 2020 +0100

    detect/flow: test cleanup

[33mcommit 52cb1b816776f48a653c6645e33e3ca116320fde[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon May 25 11:03:23 2020 -0400

    detect/dns-query: Splice UT to rust

[33mcommit 961b314b868c4211a4d6b9f20c4ec3dba0b99384[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon May 11 08:12:51 2020 -0400

    dns: Remove parser buffering code

[33mcommit 0025467f9090f5ae6c9779a25dee0e0c9172db60[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 24 13:03:58 2020 +0200

    sources: hide RegisterTests behind ifdef UNITTESTS
    
    Update callers.

[33mcommit 00cc3c7374feaf735a45fd5ecffa30bb59517544[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 24 10:49:20 2020 +0200

    eve/ssh: change hassh logging format
    
    Elastic search didn't accept the 'hassh' and 'hassh.string'. It would
    see the first 'hassh' as a string and split the second key into a
    object 'hassh' with a string member 'string'. So two different types
    for 'hassh', so it rejected it.
    
    This patch mimics the ja3(s) logging by creating a 'hassh' object
    with 2 members: 'hash', which holds the md5 representation, and
    'string' which holds the string representation.

[33mcommit 085eb9fc8e27fc81344092f041a21146b5c63ddf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 24 10:36:55 2020 +0200

    eve/ssh: minor cleanup

[33mcommit 0c92b8f7e47e6b19ba0ab4a93c2dc08e1e8fc5d8[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Jul 22 21:51:40 2020 +0200

    dcerpc: adds invalid signature unit test

[33mcommit b8069365f5de43b8972d5e388b98fe704034a8b2[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Jul 13 16:42:56 2020 +0200

    dcerpc: check app proto for signature keywords

[33mcommit 6ab323d32359e1305e585bd301522a663a3fa74b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 21 16:04:58 2020 +0200

    detect: hide RegisterTests behind ifdef UNITTESTS
    
    Update all callers to more aggressively use UNITTESTS guards as well.

[33mcommit 071f55dcd7892924d193cc1e747bcfa01498202a[m
Author: Xiaofan Wang <paradoxes@163.com>
Date:   Thu Mar 19 23:50:48 2020 +0800

    ftp: fix direction of expectation for STOR command
    
    Fix direction in active mode.

[33mcommit 0d240668764890cf629d4225421a4f64c6158b0f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 21 12:58:44 2020 +0200

    sip: minor cleanup

[33mcommit db3b637ada0045bbe7e2fecc144a4b56c6eefc6e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 21 11:45:45 2020 +0200

    htp: minor UNITTESTS guarding cleanup

[33mcommit 7c364017dac12dc767eacefeb8fb32c2f59feca6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 20 20:22:41 2019 +0200

    ftp: small code cleanup

[33mcommit 0c06d08d940d3270b70cd55269b7bbe63c45baf2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 24 09:54:26 2020 +0200

    gitignore: add .vscode and various other files

[33mcommit 72e2f36f9bc63452de3f408c44db194f5c09bd4a[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon Feb 3 09:44:08 2020 -0500

    ftp: Restrict file name lengths
    
    Restrict file name lengths to PATH_MAX - 1 to avoid over subscribing
    memory to FTP file name tracking.

[33mcommit c169cfe0a38044631bb10b725c4d0165ebd3e604[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Tue Jul 21 13:46:18 2020 +0530

    bytetest: use ByteExtractString instead of StringParse

[33mcommit 6f84515dd92502577f884dca3c4417c931ae4a16[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Tue Jul 21 13:28:06 2020 +0530

    util: fix trailing char check with ByteExtractString

[33mcommit eb5b9277873ef6a171567c370a80609d60024252[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Jul 13 14:29:27 2020 +0200

    ssh: fixing incomplete kex parsing
    
    We use the record length from the ssh record header,
    and not the size of the parsed data, as is done in other places.

[33mcommit bcd416e6baf8475fc4a41830c16488a4225b8eba[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 20 14:49:59 2020 +0200

    nfs: fix 'dangling' files in lossy sessions
    
    In case of lossy connections the NFS state would properly clean up
    transactions, including file transactions. However for files the
    state was never set to 'truncated', leading to files to stay 'active'.
    
    This would lead these files staying in the NFS's state. In long running
    sessions with lots of files this would lead to performance and memory
    use issues.
    
    This patch cleans truncates the file that was being transmitted when
    a file transaction is being closed.
    
    Based on 65e9a7c31cc68bdb1fb3e1412b0a56260265c608

[33mcommit fc7cecb4ae820c098322bb1098cd20902fd84604[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 20 14:30:39 2020 +0200

    nfs: check post-gap timeouts once a second at most
    
    Based on 25f2efe97749611760e6e26d388b420091423732

[33mcommit 5d65e5a7481628d533dd7d8fdedd675b46867d80[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 20 14:18:52 2020 +0200

    nfs: update ts only if it changed
    
    Based on 8aa380600da15b95e74a6649e6003a1c484c4ce0

[33mcommit b25de4d99a1ad05ebfa51d49b6104f8c7659aad1[m
Author: Zach Kelly <zach.kelly@lmco.com>
Date:   Fri Jul 17 21:00:54 2020 -0400

    rdp: remove parser buffering code

[33mcommit 22a2bee6149ee6896594b330bad28fc27fe1b0af[m
Author: Zach Kelly <zach.kelly@lmco.com>
Date:   Fri Jul 17 20:58:48 2020 -0400

    rdp/eve: convert to jsonbuilder

[33mcommit ef397daba35a816c7e171cdd2284aa231979f3e8[m
Author: Zach Kelly <zach.kelly@lmco.com>
Date:   Fri Jul 17 20:57:08 2020 -0400

    rdp: rustfmt (update)

[33mcommit f7c4600482322dc62304f3d98228da135f89954d[m
Author: Joshua Lumb <joshua.lumb@gmail.com>
Date:   Fri Jul 17 09:29:20 2020 -0400

    threads/runmode: Changes to thread config behaviour

[33mcommit 0ae63e85ed8bfdad4bbd4997cbaa2c3fdd117411[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Thu May 21 01:27:46 2020 +0530

    gh-checks: Add enable-debug-validation to test

[33mcommit 68bf7d998aab9c9d66e8585a3a8191e8ece73ca5[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Tue May 19 23:37:36 2020 +0530

    travis: add test for enable-debug-validation

[33mcommit 35362b7bfa08c83d15e6e6e5cb1f39f712ad5511[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Wed Jul 15 17:28:14 2020 +0530

    jsonbuilder: run test if not debug-validate

[33mcommit 333a785efd3e3a8635f22ce24fff5cbecb37532a[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Wed Jul 15 22:37:58 2020 +0530

    sip: remove extra jsonbuilder close

[33mcommit 2ce7d98af136ca5cfe62888eba585bd131a8fe01[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Fri Jun 5 20:05:21 2020 +0530

    dcerpc: fix tests to have a valid header

[33mcommit 9f9670ebdc5ea15ccc35274dd48ca00165dcbe51[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Tue Apr 21 14:38:09 2020 +0530

    logging: Add DCERPC logger

[33mcommit bab497ab2cfd7ad90f4876840fbfa3bb21426626[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Fri Jun 5 19:18:05 2020 +0530

    dcerpc: Add multi transaction support
    
    DCERPC parser so far provided support for single transactions only.
    Extend that to support multiple transactions.
    
    In order for multiple transactions to work, there is always a
    transaction identifier for any protocol in its header that lets a
    response match the request. In DCERPC, for TCP, that param is call_id in
    the header which is a 32 bit field. For UDP, however since it uses
    different version of RPC (4.x), this is defined by serial number field
    defined in the header. This field however is not contiguous and needs to
    be assembled by the provided serial_low and serial_hi fields.

[33mcommit 98318393888909293edcfc22f0158de4350182f7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 15 09:22:12 2020 +0200

    detect/mpm: fix hs check

[33mcommit 6cbb4d490947cb3fdf327f2cb0f0eed68b94f976[m
Author: Tristan Fletcher <tristanfletcher52@gmail.com>
Date:   Tue Apr 14 15:57:13 2020 -0500

    doc: fix spelling in flowbits image

[33mcommit 9f1efa3c10291acf5fead882d7ca0568c3d66019[m
Author: Roland Fischer <roli@gugus.ca>
Date:   Thu May 28 01:58:00 2020 -0400

    pcap: 32bit counters can wrap-around
    
    Fixes issue 2845.
    
    pcap_stats is based on 32bit counters and given a big enough throughput
    will overflow them. This was reported by people using Myricom cards which
    should only be a happenstance. The problem exists for all pcap-based
    interfaces.
    
    Let's use internal 64bit counters that drag along the pcap_stats and
    handle pcap_stats wrap-around as we update the 64bit stats "often enough"
    before the pcap_stats can wrap around twice.

[33mcommit 67e7be633c68ae8a1d85a9197f23ddb6e2124bf6[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Sat Jul 11 01:02:10 2020 +0530

    krb: convert to jsonbuilder
    
    Closes redmine ticket 3754.

[33mcommit 72dab0a8b75fabef3a1edeb59644231c26232c62[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Sat Jul 11 00:25:10 2020 +0530

    snmp: convert to jsonbuilder
    
    Closes redmine ticket 3756.

[33mcommit 5d0d630237097b6bfcfff46a12e681ee2d3ca967[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Jul 6 13:21:20 2020 -0600

    github-ci: build rust doc on stable and 1.34.2
    
    Nothing is done with the rustdoc, its just build to make
    sure it builds with our supported versions of Rust

[33mcommit 7ca24041b666bc9c9190a3c78d03d66b6ebebac6[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Jul 6 13:17:26 2020 -0600

    rust: add doc target to build rust docs
    
    Uses "cargo doc --no-deps" to build the documentation just for
    our Suricata package. Without --no-deps, documentation will be
    build for all our dependencies as well.
    
    The generated documentation will end up in target/doc as HTML.

[33mcommit abc71dc4a5744313f4c404215ccb480377adf70d[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Jul 14 00:02:59 2020 -0600

    applayer template (rust): better gap handling example
    
    In the request parser, show checking if a gap was received
    and what one example of trying to continue might look like.

[33mcommit b91bb92b7db6f8ac106fdcbd764c517ecbb5959f[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Jul 13 12:29:01 2020 -0600

    applayer template (rust): incomplete support
    
    Show how to use the incomplete AppLayerResult type within the
    limits of what the template protocol parser can provide.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/3541

[33mcommit 3f615f751b3d9ebc62c055ef31e8f508d04bf883[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Jul 13 10:53:24 2020 -0600

    rust app-layer template: add stubs for gap handling

[33mcommit d60671d85523ade3d9d0b6910c78045f50b81bdf[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Jul 13 10:32:51 2020 -0600

    rust/dns: use new flags field to set parser option flags

[33mcommit 53aa967e0b89417f2714fcbcbb6463be6ce8282e[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Jul 13 10:24:24 2020 -0600

    applayer: add flags to parser registration struct
    
    This will allow Rust parsers to register for gap handing from
    Rust (some Rust parsers do handle gaps, but they set the flag
    from C).

[33mcommit 7476399f432810e6aa1b71d453bc977f2bca2596[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Aug 30 22:59:56 2018 -0600

    template: add gap handling

[33mcommit e04d48c8c805c44c899af52d8e73752f94565e58[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 14 12:05:21 2020 +0200

    doc/userguide: fix outdated mpm info

[33mcommit 4726d7027c9355bcd5b0f115f2bc3c5347284a07[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 14 11:42:55 2020 +0200

    detect/mpm: 'mpm-algo' parsing cleanups

[33mcommit f2a3d6d8343abace41629459806d2a5aa0a1e069[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 14 10:48:57 2020 +0200

    flow: fix unlikely issue with int handling
    
    Thanks for reporting this magenbluten PR 4575.

[33mcommit 04d88e7012896ffcb16f0129b4ff46060fe66e9f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 14 10:42:43 2020 +0200

    doc/suricata-update: fix typo and do minor cleanups
    
    Thanks to showipintbri PR 4465.

[33mcommit 6887a2ab353288feaea21b90065508b8b22441fa[m
Author: Zackeus Bengtsson <zackeusb@stud.ntnu.no>
Date:   Thu Mar 5 17:06:42 2020 +0100

    buildbot-pcaps: remove redundant sudo

[33mcommit 89839e3c27a5dcc80afecd2fb37bf5bd0107f0bc[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Mon Feb 24 08:15:53 2020 -0500

    suricatasc: updates copyright date and FSF address
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 7be7f06ac6fa34502d47f1d4aee3287bfe8b84f4[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Mon Feb 24 08:14:47 2020 -0500

    suricatasc: update copyright date and FSF address
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 143f08fa7a93545930c178f8361c743de25ee894[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Mon Feb 24 08:14:01 2020 -0500

    prscript: update copyright dates and FSF address
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit fa2b46cdc3f539a31e917c3b63ede70309bcc0b0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jul 11 16:28:17 2020 +0200

    detect/stream_size: minor code cleanups

[33mcommit 9d9a901b68d3bc5b2996c0e78400283087cb686d[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Sun Jun 7 14:07:26 2020 +0200

    dns: conditional logging
    
    Apply config to newly created response TX.

[33mcommit ac3cf6ff75a3e5be39867bba1830076ac43e9f50[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jun 6 19:02:28 2020 +0200

    detect/config: set config for special cases
    
    Allow app-layer to declare the txs are uni-directional and special
    care is needed for applying config.

[33mcommit 2145cf99a36fb4d5819d9b25f00c7db65c29bd7f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 6 12:34:34 2020 +0100

    detect/config: initial version

[33mcommit a2f249cc86d70533a3c8fecb9c7967d2edfacdb0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 7 22:41:11 2020 +0200

    app-layer: handle AppLayerTxData being NULL
    
    Http parser can have 'NULL' user data in case of memcap limit getting
    reached.

[33mcommit 5dd4d948d98387de95c1fef14169d96493b2fce9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 7 21:29:43 2020 +0200

    app-layer: remove unused detect flags API

[33mcommit c94a5e6392bed4e3bc85e150b566fedf7145a939[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 7 21:21:05 2020 +0200

    app-layer/rust: don't use option for GetTxDataFn anymore

[33mcommit f88657206c23b2a6d474c37f87c1dfecf9ed33aa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 7 21:13:32 2020 +0200

    app-layer: GetTxData callback is mandatory

[33mcommit 8fe9faecb2a1584ef6e706d5ee4ee914e4fe8ef0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 7 16:45:40 2020 +0200

    app-layer: remove DetectFlags API. Replaced by AppLayerTxData

[33mcommit 88dd0abb385499bd7dfc399943ca4538eea0df49[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 7 21:13:02 2020 +0200

    rdp: support AppLayerTxData

[33mcommit 9664f73f75a072c0ef7b4417f17c287ec1d11281[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 7 20:57:19 2020 +0200

    app-layer: remove logged API calls

[33mcommit 455eab370e8ea031e297b3c0f899e85920560724[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 7 20:56:16 2020 +0200

    template: support AppLayerTxData

[33mcommit e0debed0b4ef2f199870b2e29700ac4e4d34613c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 7 20:38:44 2020 +0200

    tftp: support AppLayerTxData

[33mcommit 4ff51a0e07cc84e64cb9b88b58fe600ab459cabc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 7 20:19:59 2020 +0200

    sip: support AppLayerTxData

[33mcommit cc1210c9564861e9b109f53921cd50ac97fac116[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 7 20:12:46 2020 +0200

    ntp: support AppLayerTxData

[33mcommit e0f75157a01e8091275ce7776f9e25ac5b51407e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 7 20:04:49 2020 +0200

    ikev2: support AppLayerTxData

[33mcommit 64e2a2751239ea410e287cf9d965179e2d56b7f9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 7 19:55:35 2020 +0200

    applayer/template: support AppLayerTxData

[33mcommit a484bbbe1b1e31b44b419d498e07344e8cd4b31f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 7 19:48:47 2020 +0200

    dhcp: support AppLayerTxData

[33mcommit 11e243452692d22858e6127c0168d4388ffbdc10[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 7 17:28:58 2020 +0200

    snmp: support AppLayerTxData

[33mcommit 5afe4835adf5cabebf2fa56fcb29a83a5ccf303b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 7 17:24:21 2020 +0200

    rfb: support AppLayerTxData

[33mcommit 9f29366c7c6096df32e5452e0cc205c83c7105e3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 7 17:16:38 2020 +0200

    krb5: support AppLayerTxData

[33mcommit 2aab1938d786709e5081acb689e549249467d99d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 7 17:06:46 2020 +0200

    ssh: support AppLayerTxData

[33mcommit a1e06247a65b6fb6791e92527078fc92cd66844f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 7 16:36:58 2020 +0200

    dcerpc/udp: support AppLayerTxData

[33mcommit 3202d293252dd51eff9f718f2c54d6001ccadfbe[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 7 16:30:58 2020 +0200

    dcerpc: support AppLayerTxData

[33mcommit 8cd55124a3bd450bdee77573d4b3cfb8a9df9b66[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 7 16:23:43 2020 +0200

    modbus: support AppLayerTxData

[33mcommit 7d663ed5cf11cbb2a278afdcc0f29811a23d9ed8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 7 16:20:35 2020 +0200

    enip: support AppLayerTxData

[33mcommit fb780c7d922f32985d734d8280b74beefd52b957[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 7 16:16:57 2020 +0200

    ssl/tls: support AppLayerTxData

[33mcommit bc11a1c23e02a534a02784d62fb86d6ba598043d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 7 16:13:46 2020 +0200

    smtp: support AppLayerTxData

[33mcommit c98f597831bc957350387ec2425bb720bb77ca98[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 7 16:06:01 2020 +0200

    ftp: support AppLayerTxData

[33mcommit 302cf49486c0a972d9d8807f31bf51d8f1330125[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 7 15:49:04 2020 +0200

    dnp3: support AppLayerTxData

[33mcommit 77a95eddd93943efd4eafd161111ad15323b6b6c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 7 15:42:18 2020 +0200

    smb: support AppLayerTxData

[33mcommit 7a7805cde6d4fc9fe49a8a097a7a0cc397eb54dd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 7 14:26:56 2020 +0200

    nfs: support AppLayerTxData

[33mcommit fb3bdd8cf34e49913cba62f6e9dc9eca142a89f6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 26 15:12:15 2020 +0200

    dns: remove detect_flags and logged now that we use AppLayerTxData

[33mcommit 910922cdc4d39d20f929e5c37e9599d1f32a0fd4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 18 18:06:17 2020 +0100

    htp: support AppLayerTxData

[33mcommit 5665fc830132a0359e01919dc054dbdcd85decdb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 7 13:42:09 2020 +0200

    app-layer: add ApplyTxConfig API
    
    Optional callback a parser can register for applying configuration
    to the 'transaction'. Most parsers have a bidirectional tx. For those
    parsers that have different types of transaction handling, this new
    callback can be used to properly apply the config.

[33mcommit df272054512207d2033aaf03ce7b702528d8ceb3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 18 15:27:34 2020 +0100

    output/tx: implement filtering

[33mcommit e15995e2d2fafd041c65cc9477cf682a7d12444b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 26 14:34:57 2020 +0200

    detect: store detect flags in AppLayerTxData

[33mcommit c797c9f09cacfd4f3c6d72132ca10b847891a0b2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 26 12:39:44 2020 +0200

    app-layer: add logger flags to AppLayerTxData

[33mcommit 411f428a388a96dc043ca583705b6c01e54721c7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 18 14:08:37 2020 +0100

    app-layer: define AppLayerTxData and AppLayerTxConfig
    
    AppLayerTxData is a structure each tx should include that will contain
    the common fields the engine needs for tracking logging, detection and
    possibly other things.
    
    AppLayerTxConfig will be used by the detection engine to configure
    the transaction.

[33mcommit 274a033d656a5abd8ed0df021a96a2f618b90e64[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 7 22:22:05 2020 +0200

    htp: alloc user data at tx start
    
    This way the AppLayerTxData is set up from the start. Any type of
    processing (logging, detection) will lead to setting up the user
    data later on anyway.
    
    Remove other places where it was added.

[33mcommit f7ff7dbaeddb4c86334968c667ea6b1a8cb4583c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 18 20:50:47 2020 +0100

    config: common definitions

[33mcommit 6dcdf394d741d4ace2ecb9ed954959c9587cc87a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 18 21:01:54 2020 +0100

    rules: add config action

[33mcommit 8c98fa452f31a50d6f46da0bbc538615af81e9d2[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Jul 10 15:43:33 2020 -0600

    dnp3/eve: update for regenerated dnp3 object logging code
    
    Migration from Jansson to JsonBuilder.

[33mcommit bf8d8c573a566f168e586895ab0847fb41ba7df9[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Jul 10 15:43:19 2020 -0600

    dnp3/eve: regenerator object logging code

[33mcommit 85eaa2276cc106447f6713d657505695072c1619[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Jul 10 15:42:41 2020 -0600

    scripts/dnp3-gen: update to generate JsonBuilder code

[33mcommit 03efbccfe6ec40efa9870775dc6c2644a0c19f67[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Jul 10 13:46:41 2020 -0600

    jsonbuilder: set_float, append_float methods
    
    New methods for setting and appending float values.

[33mcommit ccc057fdc93c8ba3d32113a3f7ec58d62937e04d[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Jul 10 13:22:09 2020 -0600

    dnp3/eve: convert to jsonbuilder (non generated code)
    
    First step of converting DNP3 to JsonBuilder by first converting
    the non-generated code.

[33mcommit 4976afd96abf7b8dd49b444ee81df8091668f75e[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Jul 10 13:19:35 2020 -0600

    script/dnp3-gen: update generator to reflect in tree changes
    
    Some changes were made to the generated files instead of the
    generator script. Update the script to generate what is
    in the current state of the in-tree generated files.

[33mcommit 6f7d8e50c8000fd4334649a47310367a704e1157[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Thu Jul 9 14:31:01 2020 +0530

    src: use FatalError whenever possible
    
    Replaces all patterns of SCLogError() followed by exit() with
    FatalError(). Cocci script to do this:
    
    @@
    constant C;
    constant char[] msg;
    @@
    
    - SCLogError(C,
    + FatalError(SC_ERR_FATAL,
      msg);
    - exit(EXIT_FAILURE);
    
    Closes redmine ticket 3188.

[33mcommit 901fbae7b9e7334218e9dc40d3437a1d7e4be212[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun May 3 10:36:17 2020 -0400

    doc: Add byte_math documentation

[33mcommit f6a399f154d4444850acc297ac83742a7e53c426[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun Jan 26 19:39:15 2020 -0500

    general: Correct typos

[33mcommit fb409664d20707dd866d436758136d6d94150f5e[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun May 3 09:00:04 2020 -0400

    detect: byte_math support

[33mcommit 1a726731e419425d87f7035d9c06687d625f9126[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun May 3 08:55:37 2020 -0400

    detect: Use byte-math to byte var handling func

[33mcommit 0e4ba7b13e4e23b32a294fa8cb8080929f61e522[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun Jan 26 19:27:22 2020 -0500

    detect: Add byte_math detector

[33mcommit ac01adc2607f4404afe6a7ced63630c16ff303e3[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun May 3 08:55:04 2020 -0400

    detect: Add utility module for byte var handling

[33mcommit c1673908ac47449294fce3e028b3f8261f4e40f0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 10 15:31:24 2020 +0200

    eve/alert: minor cleanups

[33mcommit d2c48d4faff47fdec44d3b2ec0f3a507b4aadc0c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 10 15:26:53 2020 +0200

    eve/alert: move files logging into util func

[33mcommit 3dacbcddef7cab638e144fae9f10853ffd649c4b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 10 15:21:59 2020 +0200

    eve/alert: move app-layer logic into a util func

[33mcommit 537fb7a1c60469f1fddf7bfdd90369213e8a2910[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Wed Jul 1 17:29:01 2020 +0530

    hyperscan: better error message if not compiled

[33mcommit ece29c4210312b20ea9543488ec3826d8d4bccf0[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Jul 10 09:40:49 2020 +0200

    ssh: fix incomplete return for ssh kex
    
    In the case where we already parsed some records

[33mcommit ca6d0722970b8d8a15b4c82df0c3e5b4edccac83[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Jul 10 10:50:36 2020 +0200

    dcerpc: detect right parsing of empty op version

[33mcommit abe3f6e6ef13fef4f8b1cadeeea2274b32f33642[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Jul 10 10:38:14 2020 +0200

    rfb: set app proto for signature keyword rfb.secresult

[33mcommit a58fdcd41d174765008129424da9443be5bf5f94[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Sep 25 16:49:48 2019 -0400

    suricata.yaml.in: update stream-depth description

[33mcommit 496306e6a9a9dbd40a9f66a0546b379e7aed9204[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Sep 25 16:47:49 2019 -0400

    doc: update stream-depth description

[33mcommit ec07f587055291d60adbfe6fd7c7a41ea8490d00[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Sep 25 16:44:33 2019 -0400

    doc: update file-store stream depth description

[33mcommit 2f32d7f831f2bdc2477af5ffdfb1b8c1a114cfc6[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon Sep 23 19:44:00 2019 -0400

    filestore: Use proper string in error case
    
    When make-open-files has an invalid value, the incorrect value was being
    displayed improperly

[33mcommit 823f6b35d05b7ecc0218d2de788ba8970096891c[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon Sep 23 19:43:14 2019 -0400

    filestore: Validate stream-depth when non-zero
    
    Make sure that configured non-zero values for stream-depth are
    greater than stream_config.depth

[33mcommit 6bb89c37f17458d1310f9d8ebb9ff05ba6123102[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Jul 10 08:42:37 2020 -0400

    output/json: Correct clang warning
    
    This commit corrects the warning for mismatched type.

[33mcommit b2c1dab2da66ef44de120c9d9e5cce3e241ec422[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Jul 10 08:23:56 2020 -0400

    output/alert: Correct FORWARD_NULL Coverity issue.
    
    This commit corrects the FORWARD_NULL issue in AlertJson by
    null-checking p->flow

[33mcommit bd22e0d7a40c8d29fd74d48f82811bf5a854a8c4[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Jul 10 08:22:43 2020 -0400

    output/ftp: Correct Coverity DEADCODE issue
    
    This commit corrects the deadcode (CID 1465224) issue in
    EveFTPLogCommand.

[33mcommit ac70d925f540800fdf03b07ca7114174f1fceebf[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Jul 10 08:19:51 2020 -0400

    filestore: Correct Coverity RESOURCE_LEAK issue
    
    This commit corrects the RESOURCE_LEAK issue (CID 1465222) of the `FILE`
    pointer.

[33mcommit 2d055ed1f7084a9f10a7122f5d485c51f9db81bc[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Jul 10 08:16:06 2020 -0400

    detect: Correct Coverity REVERSE_INULL issue
    
    This commit corrects the "Null pointer dereferences" issue (CID
    1465221).

[33mcommit db75675f45e9926f6bd3aea720f0d37ae7fc595c[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Thu Jul 9 01:01:49 2020 +0530

    qa: add atoi to list of banned functions

[33mcommit d27b407bc3805776c285308cb305233e092fb741[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Wed Jul 1 23:44:50 2020 +0530

    pfring: fix StringParse* warnings
    
    Closes redmine ticket 3808.

[33mcommit 7cbb8c44c5433d2ee3f16fc8c4cc8c4e8eece53d[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Sun Dec 22 11:34:43 2019 +0530

    ttl: Make IPV4 TTL uint_8t

[33mcommit 4ed72addf381a3c205811967a9cf17df056d9289[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Sun Dec 22 11:21:17 2019 +0530

    src: remove multiple uses of atoi
    
    atoi() and related functions lack a mechanism for reporting errors for
    invalid values. Replace them with calls to the appropriate
    ByteExtractString* functions.
    
    Partially closes redmine ticket 3053.

[33mcommit 6e5d64f102df6da49df95920299ae7e9be57161a[m
Author: Emmanuel Thompson <eet6646@gmail.com>
Date:   Wed Jun 3 14:37:30 2020 -0400

    detect/asn1: Simplify errors and checks

[33mcommit 4fc45b5c60f168cb2ef46b6938e0211a574beb28[m
Author: Emmanuel Thompson <eet6646@gmail.com>
Date:   Thu Apr 30 09:53:10 2020 -0400

    detect/asn1: Update ASN1 struct lifetime
    
    - 'static is only realistic when allocating and leaking it over the
    FFI boundary

[33mcommit 627e90a4bd15358bce69ec109bdb0a07f098a425[m
Author: Emmanuel Thompson <eet6646@gmail.com>
Date:   Wed Apr 29 13:10:06 2020 -0400

    detect/asn1: Log out errors
    
    - Failure to parse asn1-max-frames
    - Failure on asn1 detection checks

[33mcommit 88601b19932c27e81d9a7d2ca445059bb879d69c[m
Author: Emmanuel Thompson <eet6646@gmail.com>
Date:   Wed May 20 10:58:34 2020 -0400

    detect/asn1: Update relative_offset keyword
    
    - To be consistent with recent C version changes
    - Add checks for over/underflows

[33mcommit 275f6ae96f47860e870fddd90c5e787e1b600868[m
Author: Emmanuel Thompson <eet6646@gmail.com>
Date:   Mon Apr 27 13:18:37 2020 -0400

    detect/asn1: Remove asn1 C parser
    
    - In favor of rust parser

[33mcommit 7af6cdb7ec09fa492f1673e4c4b033d13265b519[m
Author: Emmanuel Thompson <eet6646@gmail.com>
Date:   Tue Apr 28 11:12:04 2020 -0400

    detect/asn1: Update asn1 C files to use rust code
    
    Mark rust extern "C" functions as pub in asn1 module to expose via cbindgen
    Update detect-asn1.c/h to use rust functions

[33mcommit 63704fdf13a8e6f94a06c6bba0ef8ff7e4d05540[m
Author: Emmanuel Thompson <eet6646@gmail.com>
Date:   Mon Apr 27 16:27:22 2020 -0400

    rust/asn1: Introduce ASN1 rust module
    
    This module uses the `der-parser` crate to parse ASN1 objects in order to replace src/util-decode-asn1.c
    It also handles the parsing of the asn1 keyword rules and detection checks performed in src/detect-asn1.c

[33mcommit 6b8517dc1206e9d889e60e3f6b77aaa72d9f454f[m
Author: Emmanuel Thompson <eet6646@gmail.com>
Date:   Mon Apr 27 13:09:20 2020 -0400

    rust: Update der, kerberos and snmp parser dependencies
    
    - The update to der-parser allows us to use the latest API changes

[33mcommit dfcc8a88f6f8a539b6b1226f58c2f9922fe329a3[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun May 31 08:20:28 2020 -0400

    util/proto: Convert validation routine to bool
    
    This commit changes the signature of the protocol validation code to
    bool and simplifies the validation steps.

[33mcommit 1e8d4af29afa1dd8e1765f19ab1ceca0d897f031[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun May 31 08:19:31 2020 -0400

    output/json: Improve protocol output handling
    
    Improve protocol label handling by eliminating an unneeded copy.
    
    Additionally, unknown protocol values are no longer zero-padded.

[33mcommit a06a706078cd80f16f51b46c80017e6b2e93e9f3[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun May 31 08:18:02 2020 -0400

    output/flow: Improve protocol output handling
    
    This commit improves handling of the protocol label by removing an
    unnecessary copy.
    
    Additionally, unknown protocol values are no longer zero-padded.

[33mcommit 5776a98f672803c0e46d5cce9871f06b3b818714[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon Jun 1 10:23:12 2020 -0400

    log/syslog: Improve protocol output handling
    
    Move protocol handling outside of the packet alert loop.

[33mcommit 0a1c36759a2704313cf6b67879c5fd4edab30860[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon Jun 1 10:00:04 2020 -0400

    log: Use updated SCProtoNameValid signature

[33mcommit a843b36c97818ce0ecb5f00bf09bdeca4bd14272[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun May 31 08:07:33 2020 -0400

    output/lua: Remove unused proto code
    
    This commit removes unused protocol string handling logic.

[33mcommit 43b9bfaed408c7b9036c53bd2b24b4c21f7501d3[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Jul 7 00:04:13 2020 -0600

    applayer template (rust): convert to JsonBuilder

[33mcommit d71fc50212b026b1f0a368f082d96c46155c5fbe[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Jul 7 00:03:55 2020 -0600

    applayer template (C): convert to JsonBuilder

[33mcommit 0ebeaf4fe457dbfd013930bdf33c3d02c3433073[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Wed Jul 8 12:41:43 2020 +0530

    modbus: align comments properly

[33mcommit d5a672fbcf0f0e214949e6fef09bf5bc350bfdb0[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Wed Jul 8 12:40:46 2020 +0530

    modbus: make subfunction uint16_t

[33mcommit dfd872c1a79171d4b5257920ba2f06b327a8d8aa[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Fri Jun 26 12:21:09 2020 +0530

    enip: remove unnecessarry definition

[33mcommit 0dac69919725930e3c9ab7695d7a64b138c5422a[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Tue Jun 23 13:24:24 2020 +0530

    src: remove multiple uses of atoi
    
    atoi() and related functions lack a mechanism for reporting errors for
    invalid values. Replace them with calls to the appropriate
    ByteExtractString* functions.
    
    Closes redmine ticket 3053.

[33mcommit a98a20973230bb662ddf204fb4be7b7fb657024c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 7 21:27:08 2020 +0200

    fuzz/sigpcap: make sure hassh is enabled

[33mcommit a80f705d4bdb3a25ff209af0223e959f07d8a0fb[m
Author: Vadym Malakhatko <v.malakhatko@sirinsoftware.com>
Date:   Tue Jun 30 14:42:26 2020 +0300

    userguide: add documentation for Hassh usage
    
    1. Rules keywords
    2. Json keywords
    3. Usage in lua
    4. Enabling in configuration file

[33mcommit 8a8212d0f663ad990e94f8b502ce94cb27ac6343[m
Author: Vadym Malakhatko <v.malakhatko@sirinsoftware.com>
Date:   Tue Jun 30 14:14:52 2020 +0300

    lua: add functions to get hassh parameters

[33mcommit 126597144c33d3fd1c1355798887db825eae9273[m
Author: Vadym Malakhatko <v.malakhatko@sirinsoftware.com>
Date:   Tue Jul 7 17:05:36 2020 +0300

    eve: add Hassh fields to SSH JSON logger and add ssh log condition

[33mcommit 216a75c52233432b97b9dc424cbf62c98a335e87[m
Author: Vadym Malakhatko <v.malakhatko@sirinsoftware.com>
Date:   Tue Jun 30 13:20:52 2020 +0300

    detect: add (mpm) hassh keywords
    
    Match on Hassh using ssh.hassh, ssh.hassh.server, ssh.hassh.string, ssh.hassh.server.string keywords, e.g:
    
    alert ssh any any -> any any (msg:"match SSH hash"; ssh.hassh; content:"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"; sid:1000010;)
    alert ssh any any -> any any (msg:"match SSH hash-server"; ssh.hassh.server; content:"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"; sid:1000020;)
    alert ssh any any -> any any (msg:"match SSH hash-string"; ssh.hassh.string; content:"none,zlib@openssh.com,zlib"; sid:1000030;)
    alert ssh any any -> any any (msg:"match SSH hash-server-string"; ssh.hassh.server.string; content:"umac-64-etm@openssh.com,umac-128-etm@openssh.com,"; sid:1000040;)

[33mcommit 536cee3ba98aa71d9e4a5ee4c56c960c7e71df49[m
Author: Vadym Malakhatko <v.malakhatko@sirinsoftware.com>
Date:   Tue Jun 30 12:59:34 2020 +0300

    rust/ssh: add hassh generation
    
    Add generation of hassh fingerprints based on fields in the kexinit record

[33mcommit f7a47a44779561c53d1fbfb4f4ab018b798f7a19[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon May 18 10:04:55 2020 -0400

    detect/bsize: Use U16 bit macros
    
    This commit changes the flag bit values to be expressed using the
    BIT_U16 macro instead with hex values.

[33mcommit 39105917cef76167e37fa90e8624733b847b4133[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon May 18 09:59:40 2020 -0400

    detect/bsize: Use SCLogDebug instead of printf
    
    This commit updates debug "printf" message to use SCLogDebug

[33mcommit 620659b5f33671cafe4bac3250e1e9b818ec9dc8[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun May 17 09:51:40 2020 -0400

    detect: Increase flag size for byte_jump

[33mcommit 23a65b5824db103fd5ae198e0a582ca17fbcc4eb[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat May 16 14:53:01 2020 -0400

    general: Fix typo in detect-bytejump.c

[33mcommit 0701d828900ff6dfd9fcf81cc0082502e15c1617[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat May 16 14:52:25 2020 -0400

    detect/bytejump: Add "from_end" support
    
    This commit adds support for the byte jump "from_end" keyword and
    unittests.

[33mcommit d5bb41011c0afd0219f9e450e982e49bdd670ee8[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Jul 3 12:32:57 2020 -0400

    output/ikev2: Convert to JsonBuilder
    
    Convert the IKEV2 Json logging to use JsonBuilder.

[33mcommit 1e8ac7dadbc798d4dda75eaebabfc1b4df71e2f4[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Jun 23 09:08:22 2020 +0200

    dnp3: adds unit test against previous bug

[33mcommit d465bb86863acd4c0cd534f0748c5a2ef1283241[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Sun Jun 21 22:22:47 2020 +0200

    dnp3: fix buffer over read in responses parsing

[33mcommit 629a16e3733dd577822d0c82d2e81cbeb3b9a4d2[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Jun 19 11:53:16 2020 +0200

    dnp3: probing parser fixes direction based on dnp3 header

[33mcommit a90b1c1bcb14ec390886ef47eab8714e34c71c15[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Jun 19 11:43:04 2020 +0200

    fuzz: disable DNP3 checksums while fuzzing

[33mcommit 00509da286fa4b91b96408b27ff22afc15a4777a[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Jun 19 11:34:44 2020 +0200

    fuzz: improves fuzz target applayerparserparse
    
    Does not proceed final chunk if we got an error previously
    Flips the direction for last chunk as usual

[33mcommit b440d0b13e446e326fe2f94153f46ca451edcfa6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jul 4 14:52:39 2020 +0200

    flow: use stream state to string util func

[33mcommit 1b0319ea98a04cf43de0fb08f2f9097d1ed2d594[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 3 14:35:07 2020 +0200

    stream: add state to string funcs

[33mcommit 6608b9a5f3cce9fb9bfbdc2d71c87058c91c2698[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 2 21:18:11 2020 +0200

    app-layer: set EOF flag in case of unsupported GAP
    
    If GAP is not supported set EOF flags in the parser.

[33mcommit 54d2f2c300178056f6ae427edaee21b53624c88e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 27 10:34:00 2020 +0100

    flow: improve 'under stress' behavior
    
    When under stress, the packet threads ultimately fall back
    to walking the hash table until they find a flow they can
    safely evict and reuse. This could lead to all threads
    fighting over the FlowBucket locks.
    
    Fix by adding a limit to the number of hash rows that are
    checked for a new flow. If the limit is reached, simply fail
    to get a flow.

[33mcommit c50ef8cc2114ab8d3dc5010ef2eaf127be1dca5d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 28 10:33:23 2020 +0100

    flow: fix TCP closed default initialization
    
    TCP closed state was initialized to 0 by default.
    
    Clean up 'closed' value setting for other protocols and the common
    default.

[33mcommit 3bba671273dfadb82e8497c219ebdb8b4ed55adb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 23 19:20:55 2020 +0100

    flow: remove unused function declaration

[33mcommit cba8efff2ac5d36f8e102d04f8903398ddaf0e77[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun May 3 11:10:28 2020 +0200

    flow: remove unused sctp enum member
    
    This caused some arrays to be larger than needed.

[33mcommit c2561b265560dd19e26bcbf3ed15e5fbb9084129[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 11 17:33:02 2020 +0200

    flow: cleanup validation check

[33mcommit 65e9a7c31cc68bdb1fb3e1412b0a56260265c608[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 15 09:57:42 2020 +0200

    smb: fix 'dangling' files in lossy sessions
    
    In case of lossy connections the SMB state would properly clean up
    transactions, including file transactions. However for files the
    state was never set to 'truncated', leading to files to stay 'active'.
    
    This would lead these files staying in the SMB's state. In long running
    sessions with lots of files this would lead to performance and memory
    use issues.
    
    This patch cleans truncates the file that was being transmitted when
    a file transaction is being closed.

[33mcommit 25f2efe97749611760e6e26d388b420091423732[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun May 17 14:24:07 2020 +0200

    smb: check post-gap timeouts once a second at most

[33mcommit 8aa380600da15b95e74a6649e6003a1c484c4ce0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun May 17 14:48:52 2020 +0200

    smb: update ts only if it changed

[33mcommit 8c5c949cfa05e00a896fe6f61513f1d234cb7d24[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Jul 2 10:01:12 2020 -0400

    output/tftp: Convert to JsonBuilder
    
    This commit converts the TFTP logging mechanisms to JsonBuilder.

[33mcommit 5ac8e41a130f7b17678be00a1a5510a85f7baa2e[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Sat May 2 15:55:23 2020 +0200

    signature: fix linked list for bidirectional signatures
    
    Bidirectional signatures are really two signatures with one id
    This needs to be handled with care when changing a linked list

[33mcommit ac76ff9e4788de1579085c210e6211a68f49d2d1[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Jun 19 09:34:46 2020 +0200

    detect: fail properly on invalid transform pcrexform

[33mcommit 57d0f4bb6fc35f0dee486c224cacac884e2f89f0[m
Author: Antti Tönkyrä <daedalus@pingtimeout.net>
Date:   Fri Jun 26 10:37:45 2020 +0000

    detect/flowbits: fix stack overflow in analyzer
    
    Fix stack overflow in DetectFlowbitsAnalyze.
    
    Use dynamically allocated array instead of stack and free
    it after it is no longer needed.

[33mcommit c09235e327eed02eb22d990c017c40316cd246f8[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Jul 1 09:55:53 2020 -0600

    netflow/eve: convert to JsonBuilder

[33mcommit b116a56a324a0608c291d3120ab1eb32325bff53[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Jun 17 10:15:41 2020 -0400

    doc: Correct typos

[33mcommit 59cc3c628159b6c557a4b1425de729a0e239aa63[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Jun 17 10:15:06 2020 -0400

    doc: Update byte_extract doc

[33mcommit 297f91479e356bcba9301448b0e274f7762d4ea1[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Jun 12 08:37:51 2020 -0400

    doc: Fix spelling error

[33mcommit 9c47b8c1bfb5aa06e077ef976a348bf5e2d09bba[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Jun 12 08:37:23 2020 -0400

    general: Fix spelling error

[33mcommit 64912104b3a6dcaa204b308b327002260df0c9ad[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Jun 11 09:08:42 2020 -0400

    detect/content: Validate content byte array
    
    This commit checks whether the content byte array is compatible with the
    transforms, if any, for the rule.

[33mcommit 197a593078781adaaec12aaac61696deff2f08ba[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Jun 11 09:07:43 2020 -0400

    detect: Add transform validation api
    
    This commit extends the API with a function that validates arguments
    against the transforms for the SM list (if any).

[33mcommit 0189ff998f982f4ac8519f0a8c47bdbd94bc646b[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Jun 11 09:05:08 2020 -0400

    detect/transform: Add validation function
    
    This commit adds a function to pre-validate buffers. If a content
    buffer contains whitespace, the validation fails.

[33mcommit a4132d8e0f30c1f184b2e3113537afd6f9c86126[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Jun 11 08:31:55 2020 -0400

    detect/transform: Add transform "validate" function
    
    This commit adds an (optional) entry for a validation function. The
    validation function, if present, will be used during rule processing.
    
    Its role is to determine if the arguments are compatible with the
    transform. E.g., a content string of "this string has whitespace" is not
    compatible with the `strip_whitespace` transform.

[33mcommit 114b7e5cd98397f81c6335984c290fdac93f98f0[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Jun 29 11:11:36 2020 -0600

    dhcp/eve: remove erroneous jsonbuilder close
    
    The JsonBuilder was being closed to early.

[33mcommit 07e88a74791d4a78b4445b758c9e67deccc25911[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Jun 29 11:10:40 2020 -0600

    jsonbuilder: add debug_validate to state
    
    If debug validation is enabled, panic on invalid state errors.
    
    For example, calling close on an already closed jsonbuilder
    object.

[33mcommit ca6b70ea1b9383df1367bdddfc86ddb0380ff7a9[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Jun 29 11:09:16 2020 -0600

    rust: macro debug_validate_fail to fail with message
    
    Add a new debug_validate macro that unconditionally panics
    with a message. Useful in Rust pattern matching.

[33mcommit 4127c5fcc8d6e8522cb3432a1d0bf2d2959cab1e[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon Jun 29 09:54:15 2020 -0400

    output/fileinfo: Optimize filename output
    
    This commit optimizes the JSON preparation of the file name by
    eliminating the temporary copy before adding to the Json builder buffer.

[33mcommit 0d298d47a1d280922ccf6363166fb7b0fe83fa7d[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon Jun 29 09:51:35 2020 -0400

    output/rdp: Include common output options
    
    This commit will cause common metadata values and the community id to be
    included in log output when configured.

[33mcommit ef3840e256ce0afe8e7cbda8f98424b53edfa6e9[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon Jun 29 09:50:53 2020 -0400

    output/dhcp: Include common output options
    
    This commit will cause common metadata values and the community id to be
    included in log output when configured.

[33mcommit c6c4936a200731ea73ba850e7a7a5b61e72ff8ae[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon Jun 29 09:50:21 2020 -0400

    output/smb: Include common output options
    
    This commit will cause common metadata values and the community id to be
    included in log output when configured.

[33mcommit 414bb25c931556b313c028e0d446953d95f7c136[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon Jun 29 09:48:20 2020 -0400

    output/tftp: Include common options
    
    This commit will cause common metadata values and the community id to be
    included in log output when configured.

[33mcommit 0cdc009da1c97784b3c1742b33fa817e9597ea68[m
Author: Angelo Mirabella <amirabella@lastline.com>
Date:   Tue Jun 16 10:04:06 2020 +0100

    detect/http_raw_header: Correct type mismatch
    
    This changeset fixes a bug on the computation of the buffer
    lenght for raw http headers. The bug is due to a mismatch
    on the data type of the length (uint8_t vs uint32_t) and it
    was causing signature misses.

[33mcommit 06f414d66de9fd8b64ad443aaa5d10e5e13ec335[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 14 10:56:43 2020 +0200

    doc/manpage: improve intro, add examples

[33mcommit 37d228dae03d66df7c361234c4fd23ac228e26ca[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jun 13 23:39:56 2020 +0200

    rule/parse: minor action parsing cleanup

[33mcommit 75727c05e0502d32b76bc9720212475905793dd1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jun 13 23:36:28 2020 +0200

    doc/manpage: add --reject-dev option

[33mcommit 82ac72782d372ac629a00ce9fff03053f2c35afb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jun 13 23:36:13 2020 +0200

    doc/userguide: update app-proto list

[33mcommit e6330c354dcb1293233e31867ce554d4cdcc981e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jun 13 23:35:40 2020 +0200

    doc/userguide: list valid rule actions

[33mcommit 14e1a342ac17d143cb21f379d998a9b90bb277ab[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jun 13 17:20:14 2020 +0200

    reject: support single vlan layer
    
    Support sending RST/ICMP errors for packet with a single VLAN header.

[33mcommit 9f3f07dd97e5a17f2b042fafa5a4eb17b67a87e2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 12 15:52:00 2020 +0200

    reject: get MTU for reject-dev and use it

[33mcommit 498ae0180bdacddd76e5e5f8b5a096fdb09e945b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 12 12:16:47 2020 +0200

    reject: minor optimization of reset entry code

[33mcommit 279865b145e4d4feef6df0a156ffa94d010137bb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 12 12:14:01 2020 +0200

    reject: remove L3 from function names

[33mcommit c594d0c1ad4ea738ca66a0d27ea1cfc5b966e155[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 11 11:27:29 2020 +0200

    reject: allow configuration of the reject interface
    
    Using the '--reject-dev <dev>' commandline option. This is a global option
    that applies to all 'reject' actions.
    
    If the interface specified is using ethernet, libnet will use the faster
    L2 (link) layer. Suricata sets up the ethernet header based on the packet.
    
    When the interface is specified, cache libnet_t ctx for (much) better
    performance.

[33mcommit 604aa65c80f0395afb66ffba94de618a87449a49[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 12 15:51:30 2020 +0200

    reject: don't respond to tunnel packets

[33mcommit a6ed9b11d5df89f522454211e1216d77d1d8fa87[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 11 11:31:21 2020 +0200

    reject: check tcp header sooner to avoid potential leak

[33mcommit 1b042cf1086f544beea93e868813037ea0a35b80[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 9 08:36:07 2015 +0100

    reject: optimize and simplify run test

[33mcommit 66257f37ebfdfc24a3f5b045cf7548898a3e5aa0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 11 09:22:10 2020 +0200

    reject: never return error
    
    Errors by thread modules are not handled.

[33mcommit b8d1677b9ce25a2fe2e1d275518613f9c7a45548[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Jun 26 11:45:38 2020 -0600

    file-hash-common: fix rule_file truncation
    
    Loading file hash lists uses dirname(3) on the
    de_ctx->rule_file which modifies the contents,
    removing the last part of the path. So on subsequent
    calls the rule_file no longer contains the rule_file,
    but instead just the directory name.
    
    Mostly noticed when using "-S" with rule files outside
    of the default-rule-path which requires more hunting for
    the rule file.

[33mcommit 648bd5afff68dfab8d2d495aa9ab94ef572f7191[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun Jun 14 10:17:43 2020 -0400

    output/ftp: Use "Eve" prefix with FTP helpers
    
    This commit changes the prefix of the FTP helper routines from Json to
    Eve.

[33mcommit 1f19ab1013f3d260c23b1a2ca22394f305ae41ad[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Jun 6 14:06:43 2020 -0400

    output/eve: Remove unused helper function
    
    This commit removes an unused helper function no longer required/used
    after conversion to JsonBuilder.

[33mcommit 03de315bc2c419165802a270eb244b846ef8c143[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Jun 6 14:05:39 2020 -0400

    ftp/eve: Convert FTP logging to use JsonBuilder
    
    This commit converts the FTP logging mechanisms to use JsonBuilder.

[33mcommit a7535099b46f5306633acf56d2ea32e6dfd7145d[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Sat Jun 6 22:07:01 2020 +0530

    smb/eve: convert to jsonbuilder
    
    Closes redmine ticket 3712.

[33mcommit d14a14fa1371ac36510cd24748a2ee65f6b73497[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Jun 12 10:13:10 2020 -0400

    output/anomaly: Use helpers for string output

[33mcommit 9097df3a3b48408cea4b1c9df3938ecc8147d4a2[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Jun 12 10:12:15 2020 -0400

    output/flow: Use helpers for string output

[33mcommit ff9274585176ab21dcfff3ad4e541dcc998b8d46[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Jun 4 08:37:12 2020 -0400

    output/json: Include fileinfo in alerts
    
    This commit adds fileinfo to alerts when `metadata` is configured.

[33mcommit cc99f95ecd999bc0e463a4562a4510a71450e52c[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Jun 13 08:08:28 2020 -0400

    json: macro for setting formatted false value

[33mcommit ae50d1a225ca8feba42a5e3f2acc5f099461f0df[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Jun 4 07:45:05 2020 -0400

    output/json: Refactor file output helper
    
    This commit creates a common file output helper function based on the
    logic in output-file-info.c:BuildBuildFileInfoRecord
    
    The refactored helper will be used to create "fileinfo" information
    during the alert output path.

[33mcommit f2dbee4787e171f3cc1c9593f499f7a6501c29dc[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Wed Jun 17 18:41:51 2020 +0530

    util: check if parsed data is in range

[33mcommit 2162c52b17ce09c76cc900ec45b4b05fb87095a7[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Sat Dec 21 14:07:58 2019 +0530

    src: remove multiple uses of atoi
    
    atoi() and related functions lack a mechanism for reporting errors for
    invalid values. Replace them with calls to the appropriate
    ByteExtractString* and StringParse* functions.
    
    Partially closes redmine ticket #3053.

[33mcommit 271e33fbaa055585be1a9ee0c323c700b26df66e[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Sat Jun 20 20:09:17 2020 +0530

    affinity: Convert nb_threads to uint32_t

[33mcommit a516435443d2a2e93d629011331a5f9533211733[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Fri Jun 26 12:29:23 2020 +0530

    napatech: make stream_id uint8_t

[33mcommit f4c9d339238399451877ca7175047aaba780b134[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Wed May 13 00:20:37 2020 +0530

    redis: Change port type to uint16_t

[33mcommit 639f3d265edad49a82a85bb2f250b26b95cdfb4c[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Jun 16 08:04:49 2020 -0600

    rust: lock to nom 5.1.1
    
    5.1.2 pulls in dependencies that don't build on Rust 1.34.

[33mcommit 79681bf655bc8039c246ec8a647eb1859666fac9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 26 10:35:34 2020 +0200

    app-layer: remove old MPMId API calls
    
    Had been deprecated and non-functional since 2017.

[33mcommit 74053f43cb051b3d9354c0999d50297ecdd2da9a[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Jun 8 12:28:02 2020 -0600

    json: macros for setting formatted true and string values
    
    JB_SET_TRUE(jb, key), and JB_SET_STRING(string, key, val) are C macros
    around jb_set_formatted to set static string and true values as a
    (micro) optimization.

[33mcommit a545cdef6ad2aa4217b3966b9d22690339bd242f[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Jun 8 12:27:05 2020 -0600

    jsonbuilder: setter for formatted data
    
    Create a method to set preformatted data that contains the key
    and the value already formatted.
    
    This is an optimization for static data.

[33mcommit e3b7c582189a056be4d2e08dc1358535e8759803[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Jun 8 11:11:28 2020 -0600

    jsonbuilder: export {set,append}_string_from_bytes to C

[33mcommit f184bcc10e9fd7210e18730db4d183bc7e3cec3e[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Jun 8 10:57:00 2020 -0600

    jsonbuilder: use Box::from_raw instead of transmute to free
    
    I think this is a bad use of transmute, while the end result
    is the same, Box::from_raw is more correct as we created this
    pointer with Box::into_raw.

[33mcommit e5d4332ede1201c44b40d655b51dcc0062d5cfc1[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Fri May 1 10:54:51 2020 +0200

    signature: adds file flag for file_data keyword
    
    So that SigValidate can check if a protocol not supporting
    files was set after this keyword

[33mcommit baf5f52f22a6de227122cb059b9812be138de6b7[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Sat Jun 6 22:02:26 2020 +0200

    ssh/eve: convert to jsonbuilder

[33mcommit 5e4aa5b8519cfc1b3b4e2d816c1cbe040eada681[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat May 2 10:09:12 2020 -0400

    doc: Improve tos description
    
    This commit improves the description of the `tos` keyword by emphasizing
    that the value used should adhere to the guidelines in RFC2474. Instead
    of specifying the DSCP value directly, right shift the DSCP value and
    use that.

[33mcommit 3005dca3fd1a378523cf1c07933b036097f988dc[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon Feb 24 08:22:33 2020 -0500

    doc: pcrexform documentation

[33mcommit a0b81b3c9d7fd94b6253184c29e78736d605c172[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Mar 7 09:03:44 2020 -0500

    detect: Register pcrexform
    
    This commit registers the `pcrexform` transform.

[33mcommit 66d15710b848d0af91d87bb32ec72990759be310[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon Feb 24 08:22:52 2020 -0500

    transform/pcrexform: Add pcrexform source files

[33mcommit c1875d8532c7a0333e8d59000a4c65ec0a579285[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon Feb 24 08:19:05 2020 -0500

    detect/pcrexform: New transform: applies RE
    
    This commit adds a new transform -- pcrexform -- that applies a regular
    expression to the transformation buffer. If an expression was captured,
    that is output to the transformation buffer. Otherwise, the
    transformation buffer is unchanged.

[33mcommit c8eca5280426f80dc42faf224287ff40cc97d32e[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Mar 7 09:03:01 2020 -0500

    detect: Add constant for new transform
    
    This commit adds the definition of the new `pcrexform` transform.

[33mcommit 5d10db88bc823e594afbb742a4f482548d0a982f[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Jan 31 10:21:57 2020 -0500

    detect/transform: Support transform options
    
    This commit adds support for transform-specific options. During Setup,
    transforms have the signature string available for options detection.
    When a transform detects an option, it should convert the option into an
    internal format and supply a pointer to this format as the last argument
    to DetectSignatureAddTransform.
    
    Transforms that support options must provide a function in their
    Sigmatch table entry. When the transform is freed, a pointer to the
    internal format of the option is passed to this function.

[33mcommit b569670c33c47b315ee70f01f73fe5aa4c025140[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Jan 31 09:59:29 2020 -0500

    general: Correct typos

[33mcommit 4407cf89793ef4510641233048ce83d52036facc[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Jan 31 09:57:23 2020 -0500

    general: Update copyright year

[33mcommit be3379f00e30fd4776c6a3a622c2b27ca60a92e1[m
Author: Emmanuel Thompson <eet6646@gmail.com>
Date:   Tue Apr 28 14:03:26 2020 -0400

    detect/asn1: Fix relative_offset keyword option
    
    - Fix relative_offset keyword option to be relative in regards to the
    last content match
    - Change relative_offset to int32_t with bounds check to allow the full
    range of the packet buffer size (uint16_t)
    - Added checks for over/underflows
    - Changed the offset type to uint16_t because the offset is applied to
    the payload length, which is a uint16_t
    - Adjusted test cases to work relative to the content match
    - Added test case to verify bounds

[33mcommit f5e2968f129737ccbd5f0ee8ae3776203714b229[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jan 23 13:30:29 2020 +0100

    redis: ensure a dump per second
    
    In sync mode, Suricata was waiting to have batch size alerts before
    logging them. This was introducing delay in some configuration with
    low traffic.

[33mcommit ec8eba28a8ec0b7cb6eba5291da0174e8ab018db[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jan 23 13:10:44 2020 +0100

    redis: fix reconnect in batch mode
    
    In case of redis outage, the redis session was reset but the replies
    were still fetch even if there is none replies in the new session.

[33mcommit 025de61f439c4a32035ff4dc6986d73c1a5a772d[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri May 29 12:08:31 2020 +0200

    redis: add support for unix socket
    
    If there is a '/' in the redis server string then we consider that
    the connection should be done other a unix socket.

[33mcommit 82fb72678fbac41628c4bbe7fbf950941f672bda[m
Author: Joshua Lumb <joshua.lumb@gmail.com>
Date:   Wed Jun 3 08:24:40 2020 -0400

    cmdline: --list-app-layer-protos respects -c arg

[33mcommit a4568a634d5df223a4caaed4552b54f9e4598c12[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 4 22:50:38 2020 +0200

    htp: enforce body limits more exact

[33mcommit 0db3ee26d0d61a5d89d3cfb4f83f06d8d88c2998[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 5 07:24:40 2020 +0200

    eve/alert: convert decoder event logging to jsonbuilder

[33mcommit aa0286d925bb6e5b250b2f50e4f10e027fa4521d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 5 07:14:20 2020 +0200

    eve/anomaly: don't add timestamp twice
    
    Timestamp is added unconditionally by CreateEveHeader(), so no need
    to have a local timestamp in case of non-IP packets.

[33mcommit bd3fdeb53fa7237f8bb087b0a30e245c1724715e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 5 06:58:55 2020 +0200

    eve/alert: clean up decoder event logging

[33mcommit b3b5802c85c8e893fdf6ae144880836bff0a16ee[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 4 14:28:59 2020 +0200

    eve/nfs: switch output to jsonbuilder

[33mcommit cb7e72e602060c80fe2958e8173ab8594f3ec215[m
Author: Giuseppe Longo <giuseppe@glongo.it>
Date:   Thu Jun 4 21:20:23 2020 +0200

    jsonbuilder: fix build error
    
    Clang's build in travis-ci is actually failing because of this error:
    
    output-json-alert.c:476:40: error: missing field 'state_index' initializer
    
          [-Werror,-Wmissing-field-initializers]
    
                JsonBuilderMark mark = { 0 };

[33mcommit a77662bdbf233ae496fdc6e3dad4ee817f63b742[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Jun 2 11:01:42 2020 -0600

    userguide: remove old drop-log documentation
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/2381

[33mcommit e26718aea36ae8d08c3d3fa3fb4ee0d67dd812bc[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Jun 2 10:58:09 2020 -0600

    drop-log: remove drop log (deprecated)
    
    Remove the old style line based drop log.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/2381

[33mcommit 8997a114cb78ee21c4b912256d14f6c2a76287fa[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Jun 2 10:19:37 2020 -0600

    userguide: RDP now enabled by default
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/3255

[33mcommit 6ce9b2972bcb1aa6c071c129cc4bb833f8560af8[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Jun 2 10:16:17 2020 -0600

    rdp: enable by default
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/3255

[33mcommit 3eb0461abd41af3955ff77454750786ae679055c[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Jun 2 10:08:23 2020 -0600

    userguide: SIP now enabled by default
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/3256

[33mcommit 5a7ba624939f284a708165d9115f0a8847c0d0fb[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Jun 2 10:08:32 2020 -0600

    sip: enable by default
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/3256

[33mcommit 3ccd44b144c68d104be42d390a233d5cd0c5ef74[m
Author: Phil Young <py@napatech.com>
Date:   Mon Jun 1 11:02:49 2020 -0400

    Napatech: Fix network byte order when comparing addresses
    
    This fixes an issue where the "endieness" was not properly accounted for
    when comparing two IPv4 addresses to be sorted.

[33mcommit d1d09ecfa8d96059e1b4a3c52c8dca87a2f48619[m
Author: Phil Young <py@napatech.com>
Date:   Mon Jun 1 11:01:06 2020 -0400

    Napatech: Change to use separate FlowStream handle for each thread
    
    Previously a single handle to the FlowStream (which is  used to program
    flows to the card) was shared between the threads.  This resulted
    in contention between the threads where sometimes programming the flow would
    silently fail.

[33mcommit d0526e71c04721a0e92cc9db27c7f69b0a07ba94[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 12 10:19:55 2020 +0200

    doc/userguide: add IPS with BPF info, minor cleanups

[33mcommit bd70e0e62191b4417379e0c2d1e041a17c1107d1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat May 23 15:12:45 2020 +0200

    eve: print interface info for vxlan and other tunnel pkts

[33mcommit 7d22993a8f30728ba4ed842f8438e08ac0f55721[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Jun 2 08:28:15 2020 -0600

    github-ci: allow pull-request to be referenced in pr body
    
    For example, to use suricata-verify pr #239:
    
    suricata-verify-pr: 239
    
    Also update the pull request template to contain the available
    parameters that can be set.

[33mcommit 36d687580a7671a4ab63c2005b042f1fdd4128ac[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri May 22 11:26:53 2020 -0600

    rfb/eve: convert to jsonbuilder

[33mcommit 49f7dc93bda45083176d584f38ac56732771471b[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu May 21 13:11:17 2020 -0600

    smtp/eve: convert to jsonbuilder

[33mcommit 60bfbd43fdead02ff156f5335b1961f6d5bc9689[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu May 21 13:06:50 2020 -0600

    jsonbuilder: add reset marks
    
    Add methods to get the state of a JsonBuilder (called a mark),
    then allow restoring to the mark.

[33mcommit 7803a9ac4089bb27fce19d33e9ad542471684dfd[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon May 4 14:20:33 2020 -0600

    anomaly/eve: convert to jsonbuilder

[33mcommit 037c449b85838b13c61a0f818bdad3115d69656d[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon May 4 14:01:12 2020 -0600

    tls/eve: convert to jsonbuilder

[33mcommit be8fa5da43711f0b3718df97ea582f4f6e9f4529[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon May 4 12:14:36 2020 -0600

    http/eve: remove jansson version of metadata logger
    
    With fileinfo converted over to JsonBuilder, these
    Jansson versions are no longer needed.

[33mcommit fb7ee888bc0781e83b7782cf42823344e2a4860a[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon May 4 12:07:18 2020 -0600

    fileinfo-filestore/eve: convert to jsonbuilder

[33mcommit 0ec7d2ff66da70fb4ae69c22a6e0b4ff1b168894[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon May 4 11:42:47 2020 -0600

    fileinfo: use addr info cache for address logging (jsonbuilder prep)
    
    This is to prepare for JsonBuilder conversion where we can't
    overwrite an already set value. Here we prepare the addresses
    to be logged in a struct, overwite with XFF if needed, then
    log.

[33mcommit 6ba93d905feb1905e38d13ab9335aa3a51f706a4[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon May 4 10:47:44 2020 -0600

    http/eve: convert to jsonbuilder

[33mcommit baf272375724d2467b48b770785bae042fb1c022[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Apr 29 11:45:22 2020 -0600

    flow/eve: convert to jsonbuilder

[33mcommit ddb22549bed9ed8287e2ad5a03859391950e4088[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Mar 11 11:43:17 2020 -0600

    rust: allow some clippy lints without warning
    
    Suppresses some clippy lints that have more to do with style
    than anything else, to reduce the amount of noise in the
    clippy output.

[33mcommit 03cf3dcd6ddf82e63e5c5024e387cf7d3e7d70f7[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue May 5 09:14:36 2020 -0600

    dns/eve: convert to jsonbuilder

[33mcommit 6a70d6bb6e1cc4ec12afcfd25a06bd3bdedb3971[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Mar 4 16:56:07 2020 -0600

    sip/eve: convert to jsonbuilder

[33mcommit e9a3415fc2ad0ad73b574f0c84c2325a1145c993[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Mar 4 15:48:54 2020 -0600

    dhcp/eve: add common eve fields
    
    Add the common eve fields like metadata and community id.

[33mcommit deed0541bbf7dc9377fef34f438b75700f39da6d[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Jan 13 10:44:32 2020 -0600

    dhcp/eve: convert to jsonbuilder

[33mcommit 30cc373b7fd44316cbe220831e8463cb99842ff5[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Sun Mar 15 11:05:16 2020 -0600

    alert/eve: convert to jsonbuilder
    
    Convert alert Eve logging JsonBuilder. Currently
    makes heavy use of JsonBuilder being able to log Jansson's json_t
    which is a temporary measure until all protocols loggers can be
    converted to JsonBuilder.
    
    New functions that replace Jansson versions with JsonBuilder
    variations use "Eve" instead of "JSON".

[33mcommit 942dd08654b8e2db80b8711011a2ee13cb9de752[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Jan 7 13:08:29 2020 -0600

    jsonbuilder: new module for generating json
    
    JsonBuilder is a Rust module for creating JSON output. Unlike
    Jansson, the final JSON string is built up as items are added,
    instead of building up an object tree and rendering it when
    done.
    
    The idea is to create a more efficient JSON serializer instead
    of a flexible one.

[33mcommit c1f4edc4340271ccdbd412f2d61901b7d26f939b[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Mar 12 15:33:32 2020 -0600

    rust: bring back libc as a dependency
    
    Its already pulled in by some of other dependencies so adds zero
    extra weight, and provides handy definitions for basic functions
    like free().

[33mcommit 5513b4ed0bd0206c46dbfd05d0b9c62fe968da56[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Mar 6 15:13:44 2020 -0600

    rust/json: expose libjansson json_dumps
    
    This will be temporarily used by JsonBuilder to add the ability
    to extend JsonBuilder with Jansson's json_t types.

[33mcommit 5e1b44ac713c657df58b61764bfb4514f67096d5[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Mar 13 13:38:02 2020 -0600

    alert/eve: use addr info struct for source/target (jsonbuilder prep)
    
    Update the source/target logging to use the cached address info
    instead of fetching it from the constructed json_t object.
    
    This is required for migration to JsonBuilder which does not
    have the ability to retrieve already set fields.

[33mcommit 5ab673aee2a36b10e9b9d3c017bdec0979e661ce[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Sun Mar 15 09:50:45 2020 -0600

    flow/eve: separate flow and app_proto logging (jsonbuilder prep)
    
    Currently the flow logger also logs app_proto information,
    but not to the flow object, but instead to the root object
    of the log record.
    
    Refactor into 2 separate methods, one for the app_proto
    and one for the flow, to make this more clear, as well
    as make it easier to refactor for JsonBuilder as JsonBuilder
    can only write to the currently open object.

[33mcommit 99f460aa5a1e9a57c2157ca0aec649a97febeb4e[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Mar 13 13:25:56 2020 -0600

    eve/fivetuple: use intermediate address struct (jsonbuilder prep)
    
    Currently alert logging relies on the ability to change existing
    values in the json_t structure to overwrite addresses with xff
    data. This feature is also used for the "target" logging.
    
    As we can't do this with JsonBuilder, create a new struct to
    hold the 5 tuple, with the values swapped as needed, and
    overwritten with XFF data if needed. This struct will now
    be used to write out the 5 tuple, as well as cache the information
    for log fields to be written out later on in the log path.

[33mcommit cc4f9d7f3d45dbb2923471ec33ded694471461f8[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Mar 12 17:06:58 2020 -0600

    alert/eve: remove jansson specific feature (jsonbuilder prep)
    
    Remove the Jansson specific feature of being able to delete
    an object from json_t, in prep for refactors to JsonBuilder.
    
    Instead create a new header for each alert to be logged.

[33mcommit f4f1fdbf86d480085b27f0915a149f174966a854[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Mar 12 16:12:50 2020 -0600

    alert/eve: move logging of rule text (jsonbuilder prep)
    
    Move the logging of the rule text to where the alert object
    is being logged to remove the usage of json_object_get...
    
    Getting previously logged objects will not be possible with
    JsonBuilder.

[33mcommit f8f2a2bbc082aefacedd4e5cbc1e39c7f783b1ed[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 1 12:56:20 2020 +0200

    detect/pcre: set app proto correctly when using modifiers

[33mcommit 9fd56e84303888fd01afde81579b4827f27de5c8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 1 12:50:20 2020 +0200

    detect/pcre: minor code cleanups

[33mcommit de6c9b9441e5a5c547e99cf5fc6d74f4d1397a18[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 1 12:16:40 2020 +0200

    detect: clarify and slightly cleanup non-pf logic

[33mcommit 5acfdfcc76471aba93881255a4aa4ab94f2ece23[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 28 08:33:57 2020 +0200

    flow/manager: fix management tasks not running
    
    Fix tasks not running on the first manager, even if there is just
    a single manager.

[33mcommit 9fd326b6c070128bbca2788ca64c14f248d901c1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat May 30 20:35:21 2020 +0200

    ssh: minor cleanups in incomplete handling

[33mcommit 3a2434ed4d6355033e9399a8b8bb988b0d8bca6b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat May 30 20:34:41 2020 +0200

    app-layer: support Copy and Clone traits in AppLayerResult

[33mcommit b0288da686c0f641282ba5818b2a86c485d40f2f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat May 30 20:20:54 2020 +0200

    app-layer: add methods to get status from AppLayerResult

[33mcommit 6373071aa3a79579b45884a0bb21452d0641fbcf[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue May 26 08:46:24 2020 +0200

    ssh: handles incomplete record after banner
    
    To signal incomplete data, we must return the number of
    consumed bytes. When we get a banner and some records, we have
    to take into account the number of bytes already consumed by
    the banner parsing before reaching an incomplete record.

[33mcommit ae5650d443c77054623585d39d5f1e98d8a6bf24[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri May 29 11:24:31 2020 +0200

    magic: get rid of global lock
    
    Global magic context was involving a lock that appear to be really
    costly for some traffic.

[33mcommit d8c82d4f39e6696a4bf63efaf76544722ad1bd97[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 29 14:27:24 2020 +0200

    af-packet: fix warnings by undefined sanitizer

[33mcommit 3957750731e6699fcb1f2a4c777f7892f0556ab4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 29 13:04:47 2020 +0200

    capture: optimize checksum handling
    
    Don't use a flag in the livedev, but overwrite the config setting after
    'auto' mode has determined checksums should be disabled.

[33mcommit 4554ca168a5badaf40770c39ccbcf96aa41291b6[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu May 28 13:59:38 2020 +0200

    build: allows use of env variable CARGO_BUILD_TARGET
    
    needed by oss-fuzz

[33mcommit bbdc11842d324005567bac5eafdea5fd0fc62688[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat May 23 20:57:21 2020 +0200

    windows: fix timestring timezone display
    
    Bug: #3690

[33mcommit 12148bc53ca9b8e22b7e831eb5aca402ac2f9c66[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed May 6 08:10:44 2020 -0400

    detect/pcre: Use the keyword context for JIT stack
    
    When PCRE `jit` is available, store the JIT stack in the keyword context
    instead of on a global id. This ensures proper cleanup and
    re-initialization over a rule reload.

[33mcommit d1e690ccb3b6d4dfbe74dd24253d0dc130f8da11[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 11 11:26:19 2020 +0200

    profiling: c11 atomics fixup

[33mcommit ced6656317030be114b06f9b99dd8a7fa74a73d9[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Apr 28 10:29:17 2020 -0600

    github actions: extract repo/branch names from PR message
    
    Create a "prep" build that parses libhtp, suricata-update and
    suricata-verify repo and branch information from the pull
    request message and turn these into artifacts that are
    used by the builders
    
    Examples:
    
    libhtp-repo: https://github.com/OISF/libhtp
    libhtp-branch: 0.5.x
    
    suricata-verify-repo: http://github.com/OISF/suricata-verify
    suricata-verify-branch: master
    
    suricata-update-repo: http://github.com/OISF/suricata-update
    suricata-update-branch: master
    
    Other changes:
    - checkout@v2 (faster)
    - working directory cleanup

[33mcommit 6b8320d1c066d9ac19c3721be9db348204712000[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri May 15 11:28:49 2020 -0600

    doc: document file-store v1 to v2 configuration changes

[33mcommit 6850dbc852a6c8fe637acc46c089a0b5849e393a[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri May 15 11:28:26 2020 -0600

    suricata.yaml: remove filestore v1 configuration

[33mcommit ca88e4d0e3b99f6298152c24288b005939553119[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed May 6 10:49:01 2020 -0600

    filestore v1: remove
    
    File store v1 has been deprecated and was scheduled for removal
    by June 2020.
    
    Log an error if a file-store configuration is loaded without
    version set to 2.

[33mcommit 5a98035bac707dd137a20df76bb3892a71e8c5f6[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Mar 5 15:10:46 2020 +0100

    rules: add SSH decoder events rules

[33mcommit 69b4fffdae19e033b18b36f627cc666b5daec625[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Mar 5 15:11:00 2020 +0100

    parse: move SSH parser from C to Rust

[33mcommit cb3c4785257629382b7a412bd3161001944140e4[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Apr 8 11:43:33 2020 +0200

    style: compressed function headers for rustfmt

[33mcommit 6b2e7dde7d99e2f69bf1b6700842e83d3b4665b9[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Mar 5 15:10:06 2020 +0100

    rust: export enums definition to C

[33mcommit 80adf7d1cfd466eed44d00627eb8e55acc011715[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Tue Apr 21 13:50:10 2020 +0530

    smb: Import constants from DCERPC
    
    Remove DCERPC constants to avoid duplicate name errors. Import the
    required constants from DCERPC implementation.

[33mcommit 6457754fd678c29b30c368c2fedf198a144f04e9[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Tue Apr 21 14:36:06 2020 +0530

    dcerpc: Replace C function calls with Rust
    
    All the dead code in C after the Rust implementation is hereby removed.
    Invalid/migrated tests have also been deleted.
    All the function calls in C have been replaced with appropriate calls to
    Rust functions. Same has been done for smb/detect.rs as a part of this
    migration.

[33mcommit 8036202c7b0a20d6cdf2be9174a6f93973732d0e[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Tue Apr 21 14:25:43 2020 +0530

    rust: Add DCERPC parser
    
    This parser rewrites the DCE/RPC protocol implementation of Suricata
    in Rust. More tests have been added to improve the coverage and some
    fixes have been made to the tests already written in C. Most of the
    valid tests from C have been imported to Rust.
    
    File anatomy
    
    src/dcerpc.rs
    This file contains the implementation of single transactions in DCE/RPC
    over TCP. It takes care of REQUEST, RESPONSE, BIND and BINDACK business
    logic before and after the data parsing. DCERPCState holds the state
    corresponding to a particular transaction and handles all important
    aspects. It also defines any common structures and constants required
    for DCE/RPC parsing irrespective of the carrier protocol.
    
    src/dcerpc_udp.rs
    This file contains the implementation of single transactions in DCE/RPC
    over UDP. It takes care of REQUEST and RESPONSE parsing. It borrows the
    Request and Response structs from src/dcerpc.rs.
    
    src/detect.rs
    This file contains the implementation of dce_iface and opnum detect
    keywords. Both the parsing and the matching is taken care of by
    functions in this file. Tests have been rewritten with the test data
    from C.
    
    src/parser.rs
    This file contains all the nom parsers written for DCERPCRequest,
    DCERPCResponse, DCERPCBind, DCERPCBindAck, DCERPCHeader, DCERPCHdrUdp.
    It also implements functions to assemble and convert UUIDs. All the
    fields have their endianness defined unless its an 8bit field or an
    unusable one, then it's little endian but it won't make any difference.
    
    src/mod.rs
    This file contains all the modules of dcerpc folder which should be
    taken into account during compilation.
    
    Function calls
    
    This is a State-wise implementation of the protocol for single
    transaction only i.e. a valid state object is required to parse any
    record. Function calls start with the app layer parser in C which
    detects the application layer protocol to be DCE/RPC and calls the
    appropriate functions in C which in turn make a call to these functions
    in Rust using FFI. All the necessary information is passed from C to the
    parsers and handlers in Rust.
    
    Implementation
    
    When a batch of input comes in, there is an analysis of whether the
    input header and the direction is appropriate. Next check is about the
    size of fragment. If it is as defined by the header, process goes
    through else the data is buffered and more data is awaited. After this,
    type of record as indicated by the header is checked. A call to the
    appropriate handler is made. After the handling, State is updated with
    the latest information about whatever record came in.
    AppLayerResult::ok() is returned in case all went well else
    AppLayerResult::err() is returned indicating something went wrong.

[33mcommit 6db1f19d621a1a07bceddcbf58876324a87ea92d[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Wed May 6 23:30:53 2020 +0530

    rust: Add debug_validate_bug_on macro
    
    This macro allows to check if certain parts of the code are reachable
    during fuzzing.

[33mcommit 57ad609a97e95950632ac6f7427e3d5bdc46435f[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Tue Apr 21 13:32:26 2020 +0530

    rust: Add new crate uuid

[33mcommit ab6b4986cefb441afdb744d48f41691558dc8836[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Tue Apr 21 13:24:25 2020 +0530

    rust: Add Debug and PartialEq to AppLayerResult

[33mcommit 2fe82ce0d62731b1b9855bae2bd3b9f331710021[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Sat May 16 14:30:13 2020 +0200

    fuzz: do not reuse global variable named suricata

[33mcommit 304aedfa95d3164e898e9b954d41de71bc22f290[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon May 11 14:06:10 2020 +0200

    fuzz: improves sigpcap target
    
    So that it can cover alert generation
    ie in function DetectRun, get past scratch.sgh == NULL condition

[33mcommit e5fd47dcfdbc4f0ad15d4c1a74bfce89a759b47f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 30 14:23:24 2020 +0200

    doc/devguide: create basic layout
    
    Issue: #3343

[33mcommit 980cceed4d7f8e55d9c2c15ace0188fe3d291d0f[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Apr 30 23:26:32 2020 -0600

    travis-ci: pin cbindgen to 0.14.1
    
    0.14.2 breaks builds with Rust 1.34.0, which we still support.
    
    Also build cbdingen in debug mode. It builds much faster
    with minimal runtime performance.

[33mcommit 4318c1de45911eb9e81297d1b9c87e48cc312e6d[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Apr 30 23:11:45 2020 -0600

    github ci: pin cbindgen to 0.14.1
    
    0.14.2 breaks builds with Rust 1.34.0, which we still support.
    
    Also build cbdingen in debug mode. It builds much faster
    with minimal runtime performance.

[33mcommit c82ad8346c0afe758556077b8e0a8f84bcacc4cd[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Apr 30 23:10:39 2020 -0600

    appveyor: pin cbindgen to 0.14.1
    
    0.14.2 breaks builds with Rust 1.34.0, which we still support.
    
    Also build cbdingen in debug mode. It builds much faster
    with minimal runtime performance.

[33mcommit 690bd14371879a0d6f2ae5297579561287d54aa3[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Apr 28 08:50:29 2020 -0400

    napatech: Fix parameters passed to thread-check
    
    This commit corrects an error introduced earlier: the call to
    `TmThreadsCaptureHandleTimeout` is passing too many parameters.

[33mcommit 9db8a917a216dc3a752401c9389d4cb24d4e1148[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Apr 28 08:48:26 2020 -0400

    dag: Fix parameters passed to thread-check
    
    This commit corrects an error introduced earlier: the call to
    `TmThreadsCaptureHandleTimeout` is passing too many parameters.

[33mcommit a0392c60270607bc59b85d8e4b0c168ad25f6a02[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 29 20:49:52 2020 +0200

    fuzz/sigpcap: enable protocols, add more outputs

[33mcommit 032f31b7d38f6be5561f03d10d05a54b2271407f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 27 09:34:16 2020 +0200

    htp: fix test after libhtp changes

[33mcommit beb45c564ec3ed8891189c15ec93195b3e3d87d8[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Apr 17 14:01:36 2020 -0400

    detect/smtp: Refactor command check
    
    This commit refactors the code that matches reply with command.
    
    Bug: #3677

[33mcommit dc7a991bfb771545c2bcaf601531f534fdfabb87[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Apr 16 10:44:53 2020 -0400

    app-layer/smtp: Improve RSET handling
    
    This commit improves how the parser handles the `RSET` command.
    Termination of the transaction occurs when the `RSET` ack is seen (reply
    code 250).
    
    Bug: #3677

[33mcommit a15e503b7d30c657d402a12795212d59c8490760[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Apr 6 17:22:33 2020 +0200

    enip: more precise probing parser
    
    Bug: #3615

[33mcommit 049c5fe2302a386b7a2b300589e51e9be29a0846[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 14 11:00:39 2020 +0200

    detect/port: limit recursion in port parsing
    
    Bug: #3586

[33mcommit 476b5f21f37e662bb5e694c7aa051b5b589e2918[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 14 08:01:49 2020 +0200

    detect/address: limit recursion during parsing
    
    Allow a max depth of 64.
    
    Bug: #3586

[33mcommit b6658e62694bfcbc906f797efd438be15e196e28[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 14 08:01:37 2020 +0200

    detect/address: minor cleanups

[33mcommit 41d0dcae9965c9af2c10c6bd02c3b25e0d0b94e6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Apr 5 14:35:29 2020 +0200

    decode: cleanup packet properly on bad packets
    
    In case of bad IPv4, TCP or UDP, the per packet ip4vars/tcpvars/udpvar
    structures would not be cleaned up because the cleanup depends on the
    'header' pointer being set, but the error handling would unset that.
    
    This could mean these structures were already filled with values before
    the error was detected. As packets were recycled, the next packet decoding
    would use this unclean structure.
    
    To make things worse these structures are part of unions. IPv4/IPv6 and
    TCP/ICMPv4/ICMPv6 share the same memory location.
    
    LibFuzzer+UBSAN found this both locally and in Oss-Fuzz:
    
    decode-ipv6.c:654:9: runtime error: load of value 6, which is not a valid value for type 'bool'
        #0 0x6146f0 in DecodeIPV6 /src/suricata/src/decode-ipv6.c:654:9
        #1 0x617e96 in DecodeNull /src/suricata/src/decode-null.c:70:13
        #2 0x9dd8a4 in DecodePcapFile /src/suricata/src/source-pcap-file.c:412:9
        #3 0x4c8ed2 in LLVMFuzzerTestOneInput /src/suricata/src/tests/fuzz/fuzz_sigpcap.c:158:25
        #4 0x457e51 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:556:15
        #5 0x457575 in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool*) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:470:3
        #6 0x459917 in fuzzer::Fuzzer::MutateAndTestOne() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:698:19
        #7 0x45a6a5 in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector<fuzzer::SizedFile, fuzzer::fuzzer_allocator<fuzzer::SizedFile> >&) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:830:5
        #8 0x448728 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:824:6
        #9 0x472552 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:19:10
        #10 0x7ff0d097b82f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)
        #11 0x41bde8 in _start (/out/fuzz_sigpcap+0x41bde8)
    
    Bug: #3496

[33mcommit 3ed188e0bcb6f4ae5b6c5eafdd75ce1f8e3d7246[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 20 07:06:31 2020 +0200

    ssl: support multi-frag certificate assembly
    
    Support reassembling multi-frag certificates. For this the cert queuing
    code is changed to queue just the cert, not entire tls record.
    
    Improve message tracking. Better track where a message starts and ends
    before passing data around.
    
    Add wrapper macros to check for 'impossible' conditions that are activate
    in debug validation mode. This helps fuzzers find input that might trigger
    these conditions, if they exist.

[33mcommit 4f679fd843b2101d76a60f97086aebff0875b507[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 16 07:44:40 2020 +0200

    ssl: add asserts for 'impossible' conditions
    
    Wrap in debug validation so that fuzzing can pick them up.

[33mcommit 68d5a9dc2ce23727f3869afe155726f4f9a4384c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 3 17:15:20 2020 +0200

    tls/sni: parsing cleanup
    
    Set proper event on all invalid sni length values.

[33mcommit 61b8c99236ae0048566c53913aa638348f278ef5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 3 15:34:41 2020 +0200

    ssl: improve error checking

[33mcommit bb062981023f44b60bd82fd837f6ac4a132ecc7a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 1 20:59:02 2020 +0200

    ssl: unify main parsing routine

[33mcommit 40be9d22190a08d7d2e747cbc2ce6f0d23f22109[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 1 20:58:26 2020 +0200

    ssl: improve debug output

[33mcommit f1bf11f716e79db2a874a79ca9cff7b44780dfac[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 1 14:58:37 2020 +0200

    ssl: record parsing cleanup

[33mcommit ab44b5edacfc879917f6bc9c2060476554787396[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 21 22:52:24 2020 +0100

    ssl: handshake parsing code cleanup

[33mcommit d1ada2e13c207e0937f8a4818d5731d319f5fa07[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 3 16:31:00 2020 +0200

    ssl: copy data using a safe memcpy wrapper
    
    To avoid future memcpy issues introduce a wrapper and check the
    result of it.
    
    When compiled with --enable-debug-validation the wrapper will abort if
    the input is wrong.

[33mcommit cffbdff024eab99d6871ce44c40f895cd1ea535e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 21 20:07:19 2020 +0100

    ssl: don't say we consumed bytes if we didn't consume them

[33mcommit 9950ebffe63aeab14897a282b81e00dddef59c39[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 21 19:26:42 2020 +0100

    ssl: code cleanups

[33mcommit 1578c84605267da2dcac5db53da6edb16fcba298[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 21 08:37:21 2020 +0200

    ssl: bump copyright year

[33mcommit 9a97821c43f54ed7a4425b0bdace0e516d7424ac[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Apr 19 11:56:58 2020 +0200

    ssl: improve 'first cert' check to avoid leaks
    
    In some error conditions, or potentially in case of multiple 'certificate'
    records, the extracted subject, issuerdn and serial could be overwritten
    without freeing the original memory.

[33mcommit fa2a1385eafb1606bd49c1fcff4939f255fd81e6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 3 17:03:47 2020 +0200

    ssl: fix handshake cert buffer sizing
    
    'trec' buffer was not grown properly when it was checked as too small.
    After this it wasn't checked again so that copying into the buffer could
    overflow it.

[33mcommit 26bcc97515e6fd38b36d7cb39373b5bf8a63a5fc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 28 09:56:44 2020 +0200

    detect/keywords: dynamic version part of doc URL

[33mcommit 8f2df0f9389d3e8aa99d7cc173004c7c85665eb7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 28 09:25:43 2020 +0200

    logging: fix default log format for release mode

[33mcommit eef7760870d99beca75cf96262f4721563198a42[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 27 08:17:51 2020 +0200

    datasets: reputation value validation

[33mcommit ae102ca0961fddd54c1f7d07b8772d43d06f3f41[m
Author: Philippe Antoine <pantoine@oisf.net>
Date:   Sat Apr 25 11:38:53 2020 +0200

    detect: refactoring parsing of ip range
    
    To optimize first netmask

[33mcommit 8ca9c0e8f04598ebcbe72bafce1512b8fe2f554a[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Apr 22 09:54:49 2020 +0200

    signature: minimizes ip CIDR for ip range
    
    Example leading to over allocation is 41.232.107.2-43.252.37.6

[33mcommit fa082d04dc5109dfe138c2472467d195f92df5e7[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Apr 23 10:07:18 2020 -0400

    decode/erspan: Warn on ERSPAN Type I config
    
    This commit checks whether pre-6.x settings for ERSPAN Type I are
    present. ERSPAN Type I is no longer enabled/disabled through a
    configuration setting -- it's always enabled.
    
    When a setting exists to enable/disable ERSPAN Type I decoding, a
    warning message is logged.
    
    Enabling/disabling ERSPAN Type I decode has been deprecated in 6.x

[33mcommit 82da71bbc46f0fc50fc6f735929bbdf397e82e92[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Apr 23 10:05:05 2020 -0400

    decode/erspan: Add warning ERSPAN Type I config
    
    This commit adds a warning value when ERSPAN Type I configuration
    settings are detected; specifically, when ERSPAN Type I `enabled` is
    specified.
    
    Enabling/disabling ERSPAN Type I decode has been deprecated in 6.x

[33mcommit 0dd1b2a616decfaa5ad5526540c72b9bf3ae1092[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Apr 24 09:55:13 2020 -0600

    doc: typo: http.server_body should be http.response_body
    
    Thanks to Jason Williams for pointing this out.

[33mcommit ad448da3f454667c96b54d913084761358fe5018[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 25 14:25:29 2020 +0200

    flowbits: fix hang in flowbits 'or' parsing

[33mcommit 07ed0dadaeae6d3120a7196f4a7c94e3001e077a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 25 07:48:25 2020 +0200

    fuzz: suppress too noisy htp errors check

[33mcommit 2b938987717b2128c2dcb984563bf876add6f0f7[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Apr 24 10:28:54 2020 -0400

    napatech: Correct timestamp rounding issue
    
    This commit fixes the conversion of timestamps. Without the extra
    parens, the resulting timestamp value for usecs will be 1 or 0 due to
    the operator precedence order (+ takes precedence over ?:)

[33mcommit f12adcc58cf5b79aec13609c672918f5279d4a7d[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Apr 24 10:28:32 2020 -0400

    napatech: Check for out-of-band control operations
    
    This commit causes the packet source to check for out of band control
    operations when there are no packets immediately available.

[33mcommit 5b13468bfcbbd5d5a2a9743b317d2e5a9c3a5afe[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Apr 24 10:27:20 2020 -0400

    dag: Check for out-of-band control operations
    
    This commit causes the packet source to check for out of band control
    operations when there are no packets immediately available.

[33mcommit b48049c51c2d99c4679e2c44f82e4530b8145367[m
Author: Phil Young <py@napatech.com>
Date:   Fri Apr 24 17:43:32 2020 -0400

    napatech: Restructure Packet/Hostbuffer release
    
    The end-of-processing has been restructured so that Packet and Hostbuffer
    data structures are now released within the NapatechReleasePacket() callback
    function.

[33mcommit e22b345bb651d1a578823270e6ca4d92bef4ad85[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Sat Dec 21 13:10:25 2019 +0530

    af-packet: change type of cluster_id to uint16_t

[33mcommit e7c0f0ad91fdd57f539b3d71b59defad92a0b4c1[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Sat Dec 21 13:06:01 2019 +0530

    src: remove multiple uses of atoi
    
    atoi() and related functions lack a mechanism for reporting errors for
    invalid values. Replace them with calls to the appropriate
    ByteExtractString* functions.
    
    Partially closes redmine ticket #3053.

[33mcommit 92bb52f430f48f457fd3d7c23585ad611c450bb2[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Wed Apr 22 02:22:46 2020 +0530

    Add wrappers for validating range checks

[33mcommit c2d36ed261ac76685fa56c45eb831122af26febc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 24 10:28:06 2020 +0200

    fastlog: copyright year bump and remove stale comments

[33mcommit 28837b203e45a8cc24b4b7b97f7bf9c5e118eb7b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 24 10:27:18 2020 +0200

    fastlog: fix unlikely memleak
    
    Fix memleak is case of alloc error during startup.

[33mcommit b763885d1b167ca3a1c8f0fe8a8e797e19dffafe[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 24 10:23:51 2020 +0200

    thash: suppress coverity fp's

[33mcommit b0c79c69964a473e32e14dd94d5e12e3ff926dcd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 24 10:21:11 2020 +0200

    datasets: suppress coverity fp's

[33mcommit bbe9137f2072d4f8e4fe2dd9b709346bf7d8c60a[m
Author: frank honza <frank.honza@dcso.de>
Date:   Tue Apr 14 12:04:13 2020 +0200

    rfb: Update incomplete handling in parser.
    
    This commit adds an updated incomplete handling for the RFB-Parser. If
    incomplete data is processed, the successfully consumed position and
    length of remainder + 1 is returned. If the next packet is not empty
    suricata will call the parser again.
    
    This commit is a result of discussion on https://github.com/OISF/suricata/pull/4792.

[33mcommit d955acc01cc0ce7bd5bf04b0e36a96fb55ee56f5[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Apr 21 09:29:57 2020 -0600

    github-ci: check all commits on pr
    
    On a pull request, attempt to compile all commits from
    the base branch to the head of the PR branch.
    
    The job is in a separate workflow file to limit it to
    pull-requests only, as the base branch is not available
    on push (something to look into).

[33mcommit 053c7288716a09e224cf96cb3e0d0b8d0260c72f[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Apr 15 14:31:37 2020 +0200

    http: adds debug check against too many warnings

[33mcommit aa3f784d32308b642052c076787ace547b260781[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Apr 21 10:36:27 2020 -0400

    detect/ftp: FTP memory accounting fixes
    
    This commit continues the work started by @vanlink and corrects the
    accounting of FTP memory usage against the memcap limit.

[33mcommit 7ca94ba0a2de18726bb7ebae125bdecef06c2ad4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 21 10:52:04 2020 +0200

    app-layer: fix protocol detection bail conditions for TCP fastopen

[33mcommit e8ad67fa4f4460a23e6b38f0fc391123269acb60[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Apr 22 19:12:26 2020 -0400

    detect/lua: Unregister object during free
    
    This commit removes the registration for the object being freed.

[33mcommit d3a65fe156425e3275376dcfef6ca95b7c5d7e8c[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Apr 22 19:12:02 2020 -0400

    detect: Provide `de_ctx` to free functions
    
    This commit makes sure that the `DetectEngineCtx *` is available
    to each detector's "free" function.

[33mcommit d1151f3f8e5d21f08c47dd9d3e3650768f7d3004[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Mar 21 10:10:09 2020 -0400

    detect: Provide function to clear per-thread ctx
    
    This commit provides an interface to free previously allocated
    per-thread contextual information on the keyword lists.

[33mcommit cf4e4e4ac31c11fd743969d0108d6e41fee66219[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Wed Jan 29 20:20:24 2020 +0530

    flowbits: Allow support for flowbit ORing
    
    This patch allows to OR multiple flowbits on isset and isnotset flowbit
    actions.
    
    e.g.
    Earlier in order to check if either fb1 or fb2 was set, it was required
    to write two rules,
    ```
    alert ip any any -> any any (msg:\"Flowbit fb1 isset\"; flowbits:isset,fb1; sid:1;)
    alert ip any any -> any any (msg:\"Flowbit fb2 isset\"; flowbits:isset,fb2; sid:2;)
    ```
    
    now, the same can be achieved with
    ```
    alert ip any any -> any any (msg:\"Flowbit fb2 isset\"; flowbits:isset,fb1|fb2; sid:23;)
    ```
    
    This operator can be used to check if one of the many flowbits is set
    and also if one of the many flowbits is not set.

[33mcommit a611ae2102b5a100a120bb7fcc037cadbede9e28[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 20 15:39:32 2020 +0200

    doc/perf: minor improvements

[33mcommit 1d9db2b5f90c8d2027a13ef9d47d3d47bbaf84f1[m
Author: Andreas Herz <andreas.herz@dcso.de>
Date:   Thu Apr 9 15:23:40 2020 +0200

    doc: add performance analysis section

[33mcommit fef124b92dbabe64c6f1580113a251fae639857f[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Mar 16 14:52:32 2020 +0100

    ftp: use switch for ftp commands for style

[33mcommit 6f36403219687b1bbcb667078a57c1c9d4aed185[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Mar 16 14:48:40 2020 +0100

    ftp: FTPGetAlstateProgress for done port commands
    
    For a done transaction with command PORT,
    we expect FTP_STATE_FINISHED
    and we got FTP_STATE_PORT_DONE instead
    which prevented logging of these transactions
    
    We change the order of the evaluations to get the right result

[33mcommit 699d6682daad908fb30f2b871129dfa826f4a476[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Mar 20 14:42:50 2020 +0100

    ftp: indent FTPParseResponse again

[33mcommit a6294d6ec25d0f2f0b5d25f7a824c7325e8f87ce[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Mar 16 14:46:51 2020 +0100

    ftp: FTPParseResponse bufferizes lines
    
    Protects against evasion by TCP packet splitting
    
    The problem arised if the FTP response is split on multiple packets
    
    The fix is to bufferize the content, until we get a complete line

[33mcommit cd26fc139ec8766a73892174fd929e9478a050bc[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Apr 20 13:57:44 2020 +0200

    detect: fix insertion in linked list for fast pattern
    
    Make sure we do not add the same list_id twice
    by checking at least all the lists with the current priority

[33mcommit 0ce489bcc9629b7b4cc5a29288df318d2d5472a6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 17 15:00:40 2020 +0200

    conf/datadir: fix possible out of bounds array access

[33mcommit 1d8d03184dd91a33251e6a45f5286b387bfda38e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 17 14:58:06 2020 +0200

    datasets: remove useless variables

[33mcommit 7a6269798ba309deedc7110c5cc8bb763bd89926[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 14 14:21:31 2020 +0200

    datasets: add 'dataset-remove' unix command

[33mcommit af06883f65ff50d2b118ffd772d1bd93bb3b00f0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 13 16:31:50 2020 +0200

    datasets: add 'remove' support

[33mcommit 51726e0a0f9c56c452cf9c4a566ba302a26cb1d4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 13 16:31:35 2020 +0200

    thash: add 'remove' support

[33mcommit b80ab56d10d9907e3dcab8cdcd2285c711201de8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 13 15:47:18 2020 +0200

    datasets: improve 'dataset-add' error checking

[33mcommit ff55a444d423f1b3b55be51712bee065f0d4fbda[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 14 21:49:33 2020 +0200

    datasets: fix return values for 'add's

[33mcommit 381bc2dd64b2ba6a61b99563194df3a2739ed364[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 14 21:44:34 2020 +0200

    datasets: fix ref cnt handling
    
    Each 'add' and 'lookup' would increment the use_cnt, without anything
    bringing it back down.
    
    Since there is no removal yet, nothing is actually affected by it yet.

[33mcommit 03dc5d1d74dbee2ef63c402a599d0cddbec93f05[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 14 21:57:06 2020 +0200

    datasets: silence noisy 'dataset-add' log

[33mcommit f8159bd37241f0363de9f4da794f7aea0b8fb7da[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 13 09:10:20 2020 +0200

    build: default to c11 standard
    
    Rearrange pcap includes to fix builds on MinGW

[33mcommit 1893e40e7949d7d2acdd5b145bd757e6bdbd2a84[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 13 07:47:02 2020 +0200

    build: don't limit C std to c99 (gnu99)
    
    Now that C11 atomics and thread local storage are supported, the
    compiler can figure out what version to use.

[33mcommit 7691fc4f9e797444e3509ecde404847aad26be80[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 13 21:04:45 2020 +0200

    configure: check for u_int and friends

[33mcommit cb4b5296dae87af996899d841e6a9d138994d5c2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 14 11:06:17 2020 +0200

    fuzz: include pcap headers through suricata-common.h

[33mcommit d4f86e370946ede7724231996a5072c98bb68d2e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 14 13:19:01 2020 +0200

    threads: remove u_long usage

[33mcommit 3ba4afd40b3ff43b406cfd6ea7b13958644b46d7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Apr 12 14:03:24 2020 +0200

    threads: make thread local storage manadatory
    
    Support either the __thread GNUism or the C11 _Thread_local.
    
    Use 'thread_local' to point to the one that is used. Convert existing
    __thread user to 'thread_local'.
    
    Remove non-thread-local code from the packet pool code.

[33mcommit 32cfd71f1a9326e6f6b2b280e3c458e767fba287[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Apr 12 11:12:28 2020 +0200

    atomics: stdatomics.h version of SC_ATOMIC_* wrappers

[33mcommit 7553937a22d90e6c7739594805894fb17e595dcd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Apr 12 11:25:45 2020 +0200

    detect-engine/tags: avoid confusion over data type

[33mcommit 5b9d17b4854f82561be73523dce8520bcb49b1d2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Apr 12 12:00:57 2020 +0200

    atomics: remove unused macros

[33mcommit c83a607b6aebc9c270f5e1631f73e7a40947cb27[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Apr 12 11:09:34 2020 +0200

    atomics: add SC_ATOMIC_INITPTR macro
    
    Until now both atomic ints and pointers were initialized by SC_ATOMIC_INIT
    by setting them to 0. However, C11's atomic pointer type cannot be
    initialized this way w/o causing compiler warnings.
    
    As a preparation to supporting C11's atomics, this patch introduces a
    new macro to initialize atomic pointers and updates the relevant callers
    to use it.

[33mcommit 531ff3ddeca3d14104875bf8bd1e06a1bbdd6f11[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Apr 12 11:06:32 2020 +0200

    atomics: change SC_ATOMIC_ADD to 'fetch_add'
    
    Until this point the SC_ATOMIC_ADD macro pointed to a 'add_fetch'
    intrinsic. This patch changes it to a 'fetch_add'.
    
    There are 2 reasons for this:
    
    1. C11 stdatomics.h has only 'atomic_fetch_add' and no 'add_fetch'
       So this patch prepares for adding support for C11 atomics.
    
    2. It was not consistent with SC_ATOMIC_SUB, which did use 'fetch_sub'
       and not 'sub_fetch'.
    
    Most callers are not using the return value, so these are unaffected.
    The callers that do use the return value are updated.

[33mcommit 109b2ae5517b249f6cc7a792cbe856762c5c6a1b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Apr 12 11:25:12 2020 +0200

    atomics: avoid unnecessary (direct) CAS use

[33mcommit c6607571533e6013f51fd1b2555baca27daede86[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Apr 12 12:02:56 2020 +0200

    atomics: remove useless SC_ATOMIC_DESTROY

[33mcommit 1cb7eec52d594a35e65326f8840ca9cd26fc1389[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 4 15:45:15 2020 +0100

    atomics: remove spinlocked fallback

[33mcommit 967340e9011ba991bd56530f14b6a1cc6a265069[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 15 22:46:19 2020 +0200

    fuzz: fix applayer eof check segv

[33mcommit 4fda7ed4bd5cf2984cb2dc708506fa6d712bfaa0[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Apr 15 14:30:48 2020 +0200

    fuzz: stop app layer target as Suricata
    
    Before being overwhelmed by successive errors

[33mcommit fe1d36ec7eff8fecbe39f4d7447c0ab24a9d37ee[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Apr 15 11:48:13 2020 +0200

    conf: returns instead of exiting in ConfYamlParse
    
    So that we can keep on fuzzing even on too much recursion

[33mcommit dfdf2eb050781a6d337581543a08a65a7f7ab678[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 14 14:42:17 2020 +0200

    fuzz: add missing debug validation to configure

[33mcommit c76f98073e388cef74b1659bcdb217b55b3a782a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 14 11:02:50 2020 +0200

    fuzz: add configure wrapper for oss-fuzz

[33mcommit 5e1381638029f98c5c2f2babf6370e21c2786252[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 13 10:22:43 2020 +0200

    includes: don't include sys/types.h twice

[33mcommit df79613fb564ae51373d4ace441ede60a16749cd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 13 10:21:46 2020 +0200

    privs: include headers in suricata-common.h

[33mcommit 61c9e01f87a17971469806c7f3af971f143eb64b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 13 10:21:07 2020 +0200

    conf/yaml: include yaml.h after suricata-common.h

[33mcommit 5598ff5bb3fb6260518f93e4df9636e5e9d5a9c5[m
Author: Sascha Steinbiss <satta@debian.org>
Date:   Fri Apr 10 11:53:54 2020 +0200

    doc/install: refer to buster as Debian stable

[33mcommit f6bf86f1361baa829bf5e39a09d2476c4d39e328[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 13 08:19:14 2020 +0200

    fuzz/sigpcap: enable all of eve

[33mcommit 4d50eb1647709c9f2b8809f91b2af67be99ce4ab[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 11 13:54:00 2020 +0200

    detect/iponly: fix parsing of '0' valued netmask

[33mcommit d4613e5c70d8a3325d9f378b5a49d4741ccfd2d8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 28 15:05:05 2019 +0100

    util/mem: reduce scope of win32 specific include

[33mcommit 415c992909a1623c1b9ffa565faa5dab7d4cdb2a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 27 20:03:44 2019 +0100

    util/mem: cleanup by moving atomic from mem hdr

[33mcommit 3b877929e3fca7c01ffe2934a48eaefa473245a3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 27 17:37:37 2019 +0100

    util/mem: move most logic to functions
    
    Reduce macro use and simplify code. Also reduces compiled code
    size.

[33mcommit 48bb26abe731a470d3b6371eb7789921c2ef6b96[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 27 18:13:32 2019 +0100

    util/mem: remove old debug code for counting allocs

[33mcommit 481a1923b43b4bc8170ae7273c6f01bf6eab5600[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 27 12:01:01 2019 +0100

    logging: turn SCLog and SCLogErr into funcs
    
    Reduces compiled code size.

[33mcommit 64e307936eca7beb8bee0b0b097257dff386f598[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 28 14:55:29 2019 +0100

    common: add ATTR_FMT_PRINTF wrapper
    
    Wraps around __attribute__((format(printf, (x), (y))))

[33mcommit a8c8e2d5c919b292c1d7411c25cd02cb0788ce35[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 28 14:47:53 2019 +0100

    common: use suricata-common.h in more places

[33mcommit b856caad94cf0c262d674404eedf513ed21eed86[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 28 14:18:59 2019 +0100

    common: use WARN_UNUSED macro

[33mcommit f903766849c42fb4949be27c26a934a86597ca52[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 28 11:47:56 2019 +0100

    detect/mpm: don't process empty store

[33mcommit a95fa3c1564f696f1a7e78cf6ced657bb4dd1276[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 10 13:50:33 2020 +0200

    dns/tests: comment typo fixes

[33mcommit d5712efc91a632bc06c2b78950606eb8b43cec5c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 2 15:45:25 2020 +0100

    decode: return bool network layer
    
    So that the caller can set the correct event type on error.

[33mcommit 328a94206eeabdd306cf129d896e7af0ba53a275[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 13 21:43:30 2020 +0100

    decode/hdlc: initial support

[33mcommit 136d351e403b0ca53c7a7d9544f1affab31cee42[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 26 14:06:26 2020 +0100

    decode: single network layer entrypoint
    
    This way new layers can be added in a single place.

[33mcommit 88bccfb80ef48d38cf31b99965ecf0e81774a14c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 21 16:07:57 2020 +0100

    decode: create linklayer entry point
    
    Make AF_PACKET and PCAP mode use it.

[33mcommit 685d490d07fe5f54cd597ede3f5735fdd4567139[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 26 20:34:25 2020 +0100

    decode/ieee8021ah: fix possible packet truncation

[33mcommit 5404dc7f6d5673a9b47e1fa4f4ed7946dd31402c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 9 10:05:21 2020 +0200

    fuzz/siginit: cleanup detect engine every 1024 runs

[33mcommit aaa604b4c678be0e6a19b6382baf69c4e9b227ab[m
Author: Andreas Herz <andreas.herz@dcso.de>
Date:   Thu Apr 9 15:24:14 2020 +0200

    app-layer-template: fix log typo

[33mcommit 4dc80a6e6f9b396de5dc25d3468522316c4661d0[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Apr 9 15:59:23 2020 -0600

    conf/yaml: limit recursion depth while paring YAML
    
    A deeply nested YAML file can cause a stack-overflow while
    reading in the configuration to do the recursive parser. Limit
    the recursion level to something sane (128) to prevent this
    from happening.
    
    The default Suricata configuration has a recursion level of 128
    so there is still lots of room to grow (not that we should).
    
    Redmine ticket:
    https://redmine.openinfosecfoundation.org/issues/3630

[33mcommit fc6ada85411caa9c08df3eae1cc908436a4ea257[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 10 10:02:43 2020 +0200

    detect/parse: properly free bidir sigs in error path

[33mcommit 5abead93259e8d0bfb3f7556b9653debe320621a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 10 09:55:36 2020 +0200

    detect/parse: fix minor memory leak in error path
    
    Only reachable on SCMalloc so should be unlikely to be reached.

[33mcommit 27186778b84873d81b99089c60d95a808ae84172[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 8 22:08:39 2020 +0200

    fuzz: allow uninitialized stats api

[33mcommit 794d9eeb83462df79f8d4b34492b86029ce360d7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 7 12:41:12 2020 +0200

    fuzz: remove UNITTEST dependency
    
    Expose UTH flow builder to new 'FUZZ' define as well. Move UTHbufferToFile
    as well and rename it to a more generic 'TestHelperBufferToFile'.
    
    This way UNITTESTS can be disabled. This leads to smaller code size
    and more realistic testing as in some parts of the code things
    behave slightly differently when UNITTESTS are enabled.

[33mcommit edcb784f1ae733550aeca1260ef7f273d0c2b07c[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Mar 16 10:22:35 2020 +0100

    dns: improve probe_tcp handling of incomplete data

[33mcommit 4639dd79324f7395054ea290077d315412796d6c[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Apr 6 10:50:36 2020 -0600

    source/erf: validate record length before read
    
    Check the ERF record length before attempting to read it as
    a record length less than the size of the record header
    is invalid.
    
    Redmine ticket:
    https://redmine.openinfosecfoundation.org/issues/3593

[33mcommit 960c52d7ff69a3f78b2ddb8b62b9eb8a88d0b5d1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 7 07:01:59 2020 +0200

    fuzz/sigpcap: initialize empty packet pool
    
    Fixes runs with --enable-debug-validation. The target did not init a
    packet pool, so for a tunnel packet would try to get a packet from
    an uninitialized pool. In non-debug mode, this silently works by
    falling back to a packet from alloc.
    
        (gdb) bt
        #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51
        #1  0x00007ffff35a6801 in __GI_abort () at abort.c:79
        #2  0x00007ffff359639a in __assert_fail_base (fmt=0x7ffff371d7d8 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=assertion@entry=0x555557fe7260 "!(pool->initialized == 0)",
            file=file@entry=0x555557fe7220 "tmqh-packetpool.c", line=line@entry=253, function=function@entry=0x555557fe7500 <__PRETTY_FUNCTION__.21181> "PacketPoolGetPacket") at assert.c:92
        #3  0x00007ffff3596412 in __GI___assert_fail (assertion=0x555557fe7260 "!(pool->initialized == 0)", file=0x555557fe7220 "tmqh-packetpool.c", line=253,
            function=0x555557fe7500 <__PRETTY_FUNCTION__.21181> "PacketPoolGetPacket") at assert.c:101
        #4  0x00005555577e24be in PacketPoolGetPacket () at tmqh-packetpool.c:253
        #5  0x0000555556914ecd in PacketGetFromQueueOrAlloc () at decode.c:183
        #6  0x00005555569161e1 in PacketTunnelPktSetup (tv=0x555559863980 <tv>, dtv=0x614000068e40, parent=0x61e0000fc080, pkt=0x61e0000fc470 "LL", len=72, proto=DECODE_TUNNEL_IPV4) at decode.c:286
        #7  0x00005555569de694 in DecodeIPv4inIPv6 (tv=0x555559863980 <tv>, dtv=0x614000068e40, p=0x61e0000fc080, pkt=0x61e0000fc470 "LL", plen=72) at decode-ipv6.c:59
        #8  0x00005555569e60b5 in DecodeIPV6ExtHdrs (tv=0x555559863980 <tv>, dtv=0x614000068e40, p=0x61e0000fc080, pkt=0x61e0000fc470 "LL", len=112) at decode-ipv6.c:522
        #9  0x00005555569e846f in DecodeIPV6 (tv=0x555559863980 <tv>, dtv=0x614000068e40, p=0x61e0000fc080, pkt=0x61e0000fc420 "cLL", len=255) at decode-ipv6.c:641
        #10 0x0000555556a032f9 in DecodeRaw (tv=0x555559863980 <tv>, dtv=0x614000068e40, p=0x61e0000fc080, pkt=0x61e0000fc420 "cLL", len=255) at decode-raw.c:70
        #11 0x0000555557659ba8 in DecodePcapFile (tv=0x555559863980 <tv>, p=0x61e0000fc080, data=0x614000068e40) at source-pcap-file.c:412
        #12 0x0000555556573401 in LLVMFuzzerTestOneInput (data=0x613000000047 "\241\262\315\064", size=339) at tests/fuzz/fuzz_sigpcap.c:158
        #13 0x0000555557a4dc66 in main (argc=2, argv=0x7fffffffdfa8) at tests/fuzz/onefile.c:51
    
    That line:
    
        BUG_ON(pool->initialized == 0);

[33mcommit 6b4d32c6bbb6ead772435d9811c0b76899fe1a97[m
Author: Todd Mortimer <todd@opennet.ca>
Date:   Mon Mar 30 23:49:32 2020 +0000

    doc: Update documentation for by_rule and by_both thresholds.

[33mcommit 944209592feb24d925856f1e3ad629617d41d49c[m
Author: Todd Mortimer <todd@opennet.ca>
Date:   Mon Mar 30 23:49:04 2020 +0000

    detect/threshold: Add tests for thresholding by_rule and by_both.

[33mcommit 50e5b80463deed2d67cbcd373136b9bde68032ec[m
Author: Todd Mortimer <todd@opennet.ca>
Date:   Mon Mar 30 23:47:47 2020 +0000

    detect/threshold: Add a common function to (re)allocate the by_rule threshold table.
    
    Ensure that the by_rule threshold table is initialized if a rule
    is thresholded by_rule. Replace manual table reallocaton with calls
    to the common function.

[33mcommit 82dc61f4c3e3e845e752dde05da3dfbe0e7a5e25[m
Author: Todd Mortimer <todd@opennet.ca>
Date:   Mon Mar 30 23:45:50 2020 +0000

    detect/threshold: Refactor threshold calculation to handle by_rule and by_both.
    
    The only difference between threshold calculations for by_src/by_dst,
    by_rule or by_both is which table stores the DetectThresholdEntry.
    Refactor the ThresholdHandlePacket* functions to do table lookup and
    storage individually, but calculate thresholds in a common function.

[33mcommit 9fafc1031c0c9c11e5d98a286535b6b18af7cd3d[m
Author: Todd Mortimer <todd@opennet.ca>
Date:   Mon Mar 30 23:38:24 2020 +0000

    time: Add TIMEVAL_EARLIER and TIMEVAL_DIFF_SEC macros.
    
    Make it easy to compare 'struct timeval's and get their difference.

[33mcommit e945dea244ca2ab5ca2774ef838dab8c1ffb4abc[m
Author: Todd Mortimer <todd@opennet.ca>
Date:   Mon Mar 30 23:36:12 2020 +0000

    detect/threshold: Parse by_rule and by_both in rules.
    
    Also add tests for parsing them.

[33mcommit ed8f48b05374a3335bc15969f2dde82540d18607[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 6 19:35:24 2020 +0200

    app-layer/proto-detect: minor cleanup
    
    Make sure the mask calculation is u32.

[33mcommit aba4e195484a4ee2068ca13ed7852aab81f00d5a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Apr 5 16:56:35 2020 +0200

    detect/pktvar: fix memory leaks

[33mcommit 240df05af59f14f74eedb703cf94a36e4b29a796[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Apr 6 17:28:33 2020 +0200

    fuzz: limit input size for protocol detection consistency check

[33mcommit 6bffe0bd353654b0f2e5e123cd3f68d2570c5553[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon Apr 6 09:55:41 2020 -0400

    detect/ssl: Fix memory leak in version parsing
    
    This commit fixes a memory leak in the SSL version handling that
    manifests when the version identifier is incomplete or incorrect.

[33mcommit 91b29308916f4c3f6dd47f9c906dd12ac5ff6a06[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Apr 6 10:58:23 2020 +0200

    fuzz: build compatibility with oss-fuzz flags
    
    ie C define FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION

[33mcommit 5f71e7a37166eeed7eb8801c64641078951b2975[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon Mar 30 11:01:59 2020 -0400

    doc/devguide: Submission and style
    
    This commit adds code submission and coding style guidelines to the
    devguide. Most of the material is a straight port from the wiki but
    there have been some content modifications and additions.

[33mcommit 752e4828d73f5ca9aba9d9e830b9f76cb5c5672a[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Mar 19 16:27:37 2020 -0600

    devguide: include sources in EXTRA_DIST
    
    Required for distcheck to pass, and required to build docs
    from a dist archive.

[33mcommit 211b193e08e9fdd69264f77f3196dde502eff5e6[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Mar 19 14:13:33 2020 -0600

    github-ci: on centos-8 build, use distcheck
    
    And verify that man page is built.

[33mcommit bcbd8c2ac0a88171bddc62666652dbc4180af2c8[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Mar 19 13:30:45 2020 -0600

    github-ci: build documentation on Ubuntu 18.04

[33mcommit 7c0c2e76eeef84cdbcc5d2053aed24edb5ab8602[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Mar 19 12:30:06 2020 -0600

    github-ci: build documentation on Fedora-31 build
    
    Install sphinx and latex tools to test the building
    of documentation on the Fedora 31 build, including
    the PDF.

[33mcommit 9b5ccbe4d7ffac900831a506d995080f2ca81cea[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Apr 3 15:31:59 2020 +0200

    ci: adds a build with make tags

[33mcommit 752fc77cdcd0f74d5a7d7b8061b04b482a83c728[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Feb 11 16:21:39 2020 +0200

    configure: correctly display nss/nspr status
    
    If autodiscovery of libnss was used (default), then the line
     libnss support:                          yes
    was never set to no.
    
    Same behavior for libnspr.
    
    Broken by commit 'configure: fix nspr check logic' (7ea269a212a3a2209effc3cc9300873d6a06859e)

[33mcommit 09a21545ce00de8ef161f097603f98770351e9be[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 3 10:09:07 2020 +0200

    flow: cleanup expectations first
    
    Make sure to cleanup expectations for a flow as the first step, before
    parts of the flow itself are getting cleaned/freed.
    
    Also indicate use unlikely as flows with expectations should be relatively
    rare.

[33mcommit fcfeeeb694f01508bf98ecc8e22dc3d30ef34f95[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Feb 9 20:33:21 2020 +0100

    app-layer-expectation: update copyright date

[33mcommit 1ddd77fae06d7b41b7d7752c70ebfce3d335983e[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Feb 8 00:05:01 2020 +0100

    app-layer-expectation: clean expectation at flow end
    
    When a flow timeout, we can have still existing expectations that
    are linked to this flow. Given that there is a delay between the
    real ending of the flow and its destruction by Suricata, the
    expectation should be already honored so we can assume the risk
    to clean the expectations that have been triggered by the
    to-be-deleted flow.

[33mcommit 6c9d1c08614fdbd42c22b5aca0d4c438bd404c5e[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Feb 8 00:01:28 2020 +0100

    app-layer-expectation: limit number of expectations
    
    This patch introduces a limitation in term of number of
    expectations attached to one IPPair. This is done using
    a circle list so we have a FIFO approach on expectation
    handling.
    
    Circleq list code is copied from BSD code like was pre existing code
    in queue.h.

[33mcommit 03e4bfeb026a568857617a2e1e135c4b3bbd1505[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Dec 10 22:15:14 2019 +0100

    app-layer-expectation: remove unused parameter

[33mcommit 0ae6b0b2503f6e50ee876f27627b071734a3b757[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Mar 31 08:46:38 2020 -0400

    tests/bsize: Fuzzing test case added
    
    This commit adds a test case to validate the issue found during fuzz
    testing.

[33mcommit 5b38bc989492672277178e93b8685b9e63fe6ec8[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon Mar 30 09:51:27 2020 -0400

    detect/bsize: Ensure numeric values fit
    
    This commit ensures that the numeric values will not exceed the size of
    the containers used to hold them.

[33mcommit 095981cb2a7b204e66770ab5ab4efcf5034caa27[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 31 14:04:07 2020 +0200

    detect/parse: fix crash on 'internal' keyword use
    
    When keyword __flowvar__postmatch__, an internal keyword, is used
    in a rule the 'Setup' func ptr will be NULL. This caused a crash.

[33mcommit 1e71eecf473cf32a15a5990549e2363d7ed5753e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 31 13:53:40 2020 +0200

    fuzz/siginit: fix leak in case of bidir sig

[33mcommit 5430141f7a08c3b684eaa90afd400fac407fc24f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 31 13:32:35 2020 +0200

    fuzz/siginit: minor improvements
    
    Enable detect engine 'quiet' mode to generate less output.
    
    Set a fake filename so that datarep doesn't hit a reachable assert.

[33mcommit 13c9d0ca7e3a41a8023dc80def36e24686288742[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 31 10:38:06 2020 +0200

    detect/pkt_data: error on unconsumed transforms
    
    If a rule has transforms w/o consuming them (e.g. a content keyword),
    don't consider 'pkt_data' valid.

[33mcommit e1c474a1b08eb31e53c455cd7a14c64d8af96acc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 31 11:37:51 2020 +0200

    detect/pkt_data: code and test cleanup

[33mcommit 7f19da1cc0956a36982b6027e8bce517ca447609[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 31 10:35:54 2020 +0200

    detect: more robust against transform issues
    
    In case of transform issues (transform not consumed before pkt_data
    for example), the code would hit an ugly BUG_ON.
    
    Address this by a more graceful error message, that will still
    invalidate the sig but not crash the engine.

[33mcommit 713c379427c43aa9be9be1dcf7c3ed79a91cab94[m
Author: Sascha Steinbiss <satta@debian.org>
Date:   Sun Mar 29 19:33:29 2020 +0200

    rfb: make sure size calculations do not overflow
    
    Addresses #3570 by extra checking of calculated size requests.
    
    With the given input, the parser eventually arrived at
    parser::parse_failure_reason() which parsed from the remaining four
    bytes (describing the string length) that the failure string to follow
    would be 4294967295 bytes long. While calculating the total size of the
    data to request via AppLayerResult::incomplete(), adding the four bytes
    for the parsed but not consumed string length caused the u32 length to
    overflow, resulting in a much smaller value triggering the bug condition.
    
    This problem was addressed by more careful checking of values in each step
    that could overflow: one subtraction, one addition (which could overflow
    the usize length values), and a final check to determine whether the result
    still fit into the u32 values required by AppLayerResult::incomplete().
    If so, we would safely convert the values and pass them to the result type.
    If not, we simply return AppLayerResult::err() but do not erroneously and
    silently request the wrong amount.

[33mcommit 2823bc5aed3ade2f916a9592c0ecf214bb62481b[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon Mar 30 07:57:36 2020 -0400

    detect/tls: Use pcre_copy_substring to avoid leak
    
    This commit eliminates a memory leak while parsing TLS version
    information. The leak was identified through fuzzing.

[33mcommit 3d969a1c7db5060ca6ea99f877d451d7d4a5aa23[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 30 09:11:54 2020 +0200

    build: wrap fuzz targets in guard to fix 'make tags'

[33mcommit 8cbae1371f18d1427244f18fe2110256496a9f9f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Mar 29 19:34:18 2020 +0200

    fuzz/sigpcap: fix FPs due to missing pkt cleanup

[33mcommit 1aaf9a80c570569f61daf4b5581155e177e85593[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 27 12:48:27 2020 +0100

    decode/vxlan: minor yaml example clarrification

[33mcommit e97cdb48f3e32e8d76aaa2f7325a1a67e245be8e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 23 11:06:55 2020 +0100

    decode/teredo: implement port support
    
    Implement support for limiting Teredo detection and decoding to specific
    UDP ports, with 3544 as the default.
    
    If no ports are specified, the old behaviour of detecting/decoding on any
    port is still in place. This can also be forced by specifying 'any' as the
    port setting.

[33mcommit 0e4f261224ef7da7f49b35760ab69e8ea18226cb[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Wed Dec 18 16:31:10 2019 +0530

    Use StringParse* for all parsers and configurations

[33mcommit c4c734541aed7dcf2d2fb7ebeeb503d39761159d[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Wed Dec 18 13:51:08 2019 +0530

    Use appropriate ByteExtractString* functions

[33mcommit 6b2c7d5be845e1d8a09d39ff1c397e732e2df8c1[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Sun Dec 22 22:28:54 2019 +0530

    util: Add StringParse* functions
    
    StringParse* functions would perform a stricter check compared to
    ByteExtractString* functions. These new functions shall also check if
    any extra characters follow the extracted numeric value in addition to
    the checks performed by ByteExtractString* and return -1 in that case.
    This is particularly important in parser, configuration and setup functions.

[33mcommit 293eebd999a31a920aaf1b4cf004ec5c73f9e706[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Mar 26 16:11:21 2020 +0100

    fuzz: remove obsolete AFL code

[33mcommit 19fe8d9894207f18dbd305a5834820f3a698dc32[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 26 14:44:58 2020 +0100

    ci: add fuzztargets and afl build test

[33mcommit bf60959d84edcb871c6935e7959690f898bd40d0[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Mar 26 14:55:31 2020 +0100

    fuzz: simpler way to force usage of CXX linker

[33mcommit 440bb4d6007560be6e431fb2087d1d28c3676872[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Mar 26 14:42:50 2020 +0100

    fuzz: remove decodeder fuzz target
    
    As we removed decodeder function

[33mcommit e15f3db4740c53275fbee5642e643360d5ed3420[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Mar 26 14:29:38 2020 +0100

    configure: right test for AFLFUZZ_PERSISTANT_MODE

[33mcommit 66181ed2e4b9f174d84e0db06ab99e5817367f73[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Mar 26 14:06:32 2020 +0100

    ci: enables fuzz targets in one build
    
    github workflow wih debian

[33mcommit e500c59b994ef2c4ba1c2bd17b4d4ff674a144ef[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 24 13:11:03 2020 +0100

    stream/tcp: fix STREAM_HAS_SEEN_DATA macro
    
    The macro would not return true for smaller TCP streams, leading to
    cases where the app-layer was not notified of EOF.

[33mcommit 1618fb1b97daf2ef673f9949429bec4627165e74[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 24 11:37:01 2020 +0100

    stream/tcp: clean up stream flags

[33mcommit 01aef49cbd32fb2437d1615a2111111e5f3ee862[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Sun Mar 22 16:19:57 2020 +0100

    rust/x509: map decoding errors to decoder events

[33mcommit 333fcc43e774d40eebad32c02894f20b7ec4a61e[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Mon Mar 9 21:49:51 2020 +0100

    ssl/tls: call rs_cstring_free for strings allocated in Rust

[33mcommit 36d2e257c6b00f816443ac53ba7f8f015b06e3ee[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Mon Mar 9 20:36:21 2020 +0100

    rust/x509: use the raw serial number so leading zeros are not removed

[33mcommit 1d9f37a60e7fde720768f41e5680ee2e02b78ffc[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Mon Mar 9 20:35:27 2020 +0100

    DER: remove the C parser for DER

[33mcommit d92321d8b12b84eee9d28a80cc960a68477f32f0[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Mon Mar 9 13:38:13 2020 +0100

    ssl/tls: use the rust decoder to decode X.509 certificates

[33mcommit 10d9deec9f2293c797df7dbe8bda346d4dc7d600[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Mon Mar 23 16:53:51 2020 +0100

    rust: add common function to exchange CString objects from/to C

[33mcommit e0bd79670c82506a6f99f1fed1560cc887805ada[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon Dec 16 17:07:20 2019 -0500

    detect: byte-test convert neg_op flag to a bool
    
    Only 8 flags are permitted so convert one of them to a struct member. I
    choose neg_op

[33mcommit 313c23a26bee7f22e9ea8bfb36d413bdb23dc6a0[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun Dec 15 14:47:27 2019 -0500

    detect: Add unittests to exercise bitmask

[33mcommit d12950c9e4991dc76460d240d95c1b9d7987ada3[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun Dec 15 14:47:00 2019 -0500

    detect: fixup incorrect comments, indentation

[33mcommit 31ed9786f6b7954ffd83106e2de000ba58f01a75[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun Dec 15 14:45:50 2019 -0500

    detect: byte_test impl for bitmask
    
    This commit implements byte_test's bitmask feature.

[33mcommit 4ad6c5421a8135a71ee509def7789ce4122f4503[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun Dec 15 14:44:45 2019 -0500

    doc: fix documentation typos

[33mcommit bc01392e93ffba5b5b0ceee2fad20a92e3564089[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun Dec 15 14:44:07 2019 -0500

    doc: Update byte_test documentation

[33mcommit 26123e05f217596c58ec7a663455e34ba1eda582[m
Author: Sascha Steinbiss <satta@debian.org>
Date:   Thu Mar 19 19:19:56 2020 +0100

    rfb: use more idiomatic Rust code
    
    Using 'if let Some()...' makes the code in these many checks more
    concise and readable.

[33mcommit b85539b2aba4cc95a2773b71da44821cd225b50a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 19 21:30:45 2020 +0100

    stream/tcp: fix fast open off by one
    
    With data on SYN the sequence number used for the first data
    was off by one, leading to the next segments to appear to come
    after a one byte gap.

[33mcommit f51d7d89475f7b3e041cb8269f54506a2f7273ad[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Mar 19 09:00:29 2020 +0100

    fuzz: check tcp splitting evasions in protocol detection

[33mcommit 9eddaa038ea453787f213df11de3c5482c3d7feb[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Feb 28 09:41:52 2020 +0100

    fuzz: enable AFLFUZZ_PERSISTANT_MODE for libfuzzer targets

[33mcommit ac35118ebed7fe31058a9652903a30763da047af[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Feb 21 11:47:37 2020 +0100

    fuzz: use env variable to restrict app layer

[33mcommit 600b0d7c5590b62f7efe27792332783101439562[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon May 27 17:02:22 2019 +0200

    fuzz: adds eight fuzz targets
    
    And ways to compile them with enable-fuzztargets at configure time
    Adds utility function in util-unittest-helper

[33mcommit 1c8943dedd0042acdd86e825fe4f145bf93d1bec[m
Author: Frank Honza <frank.honza@dcso.de>
Date:   Fri Feb 7 13:22:17 2020 +0100

    add RFB parser
    
    This commit adds support for the Remote Framebuffer Protocol (RFB) as
    used, for example, by various VNC implementations. It targets the
    official versions 3.3, 3.7 and 3.8 of the protocol and provides logging
    for the RFB handshake communication for now. Logged events include
    endpoint versions, details of the security (i.e. authentication)
    exchange as well as metadata about the image transfer parameters.
    Detection is enabled using keywords for:
    
     - rfb.name: Session name as sticky buffer
     - rfb.sectype: Security type, e.g. VNC-style challenge-response
     - rfb.secresult: Result of the security exchange, e.g. OK, FAIL, ...
    
    The latter could be used, for example, to detect brute-force attempts
    on open VNC servers, while the name could be used to map unwanted VNC
    sessions to the desktop owners or machines.
    
    We also ship example EVE-JSON output and keyword docs as part of the
    Sphinx source for Suricata's RTD documentation.

[33mcommit b4d75b7448e98a4bc202874339db92667315e222[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 19 15:13:22 2020 +0100

    output/anomaly: minor code cleanups

[33mcommit 4d21b0357526a12a8229bdcd5a85479885ff908e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 19 15:07:21 2020 +0100

    detect/app-layer-event: code cleanups

[33mcommit f0bd69e7e335beafc8a84d3637dcdbc03ade5113[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Mar 17 10:34:39 2020 -0400

    detect/pcre: Correct spelling typos

[33mcommit 7f6af10fedee27e35d4afade0a978d0324de3f4a[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun Mar 8 15:32:04 2020 -0400

    general: copyright bump

[33mcommit 4b0085b03ce85f9b0f09d7e44a96774388d0b09b[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon Nov 18 19:30:53 2019 -0500

    detect: Update to take advantage of PCRE refactor
    
    This commit changes the keyword detectors to use the refactored PCRE
    modifications from detect-parse.[ch]

[33mcommit abe0cdc4adc872f346a94c554883570783917034[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon Nov 18 17:02:17 2019 -0500

    detect/pcre: Changes to support pcre_jit_exec
    
    This command causes `pcre_jit_exec` to be used when available. If it's
    available and there are allocation errors preparing for it, things
    fallback to `pcre_exec`.

[33mcommit aa67a0a236d6544301caac4ba8c74d2951926b92[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Mar 18 08:43:59 2020 -0400

    detect/pcre: Add warning for failed registrations
    
    This commit adds a warning used by the PCRE detect logic when it fails
    to register initialization and free functions for per-thread JIT stack
    handling.
    
    This error code is only used when the platform has PCRE JIT exec
    functionality.

[33mcommit d19429f7e54f3d8e1d1c0c11470c1cabeca3f47a[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun Nov 17 16:07:56 2019 -0500

    detect/parse: Refactor interfaces/definitions
    
    This commit refactors existing code patterns to reduce code duplication
    and to be a base for supporting additional PCRE jit-related actions.

[33mcommit 94df0b08d46bf169d68b6188962177eed011452f[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun Nov 17 15:58:01 2019 -0500

    configure: Determine whether pcre_jit_exec exists
    
    This commit adds logic to determine whether pcre_jit_exec is present in
    the system's pcre library using AC_RUN_ELSEIF

[33mcommit ccfdcb55fbce588347dede4f94a403304381441c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 18 10:39:50 2020 +0100

    devguide: document new app-layer retvals

[33mcommit 6251deae21c3c75e68f0a784e57f28c5bcf01bb5[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Mar 12 09:11:52 2020 +0100

    doc: adds doc for ipv4.hdr signature keyword

[33mcommit 1cd314c500d684b382feb55c3d297b00665d630b[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Mar 5 22:18:57 2020 +0100

    detect: adds icmpv6.mtu keyword

[33mcommit 75ec528384a5b75c99de110dd41863992b550f1b[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Mar 5 15:39:37 2020 +0100

    detect: adds utility file for uint keywords

[33mcommit 0355b70f5a7c41b6f41a83cfd56bc095e3d5287e[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Mar 6 09:55:02 2020 +0100

    detect: define generic PrefilterIsPrefilterableById

[33mcommit bb7abbd6ec117b8740da7a43f66a20565e2b987f[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Mar 6 09:54:25 2020 +0100

    detect: extend PrefilterPacketHeaderValue to 16 bytes

[33mcommit d04d69acbbc691aa65c6fbf9a19defe572960673[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Feb 28 15:08:33 2020 +0100

    decode: fix endianness for ICMPv6 MTU

[33mcommit 9d2fabcd999bc5a2bf73332e89752ec5e89c4b13[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Feb 28 14:19:44 2020 +0100

    doc: fix typo in DetectTcpmssSetup description
    
    And use lowercase true for boolean

[33mcommit efee458af8a711323d74045af67b1fa9b648569c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 17 13:08:33 2020 +0100

    stream: fix direction flags in corner case
    
    When a TCP DNS flow would start with a GAP on the TS side, the successful
    protocol detection on the TC side would trigger 'opposing side' reassembly
    and app-layer processing. In this case the stream flags would indicate the
    wrong direction and the wrong parser would be called.

[33mcommit 960045323db76123e17b853425c0839fde4899bb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 16 22:25:49 2020 +0100

    app-layer: minor code cleanup

[33mcommit 9b1f0656d00055d89bd99e6b3c888e66a40bfb74[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 16 15:18:02 2020 +0100

    app-layer: fix progress tracking
    
    Esp in combination with GAPs and proto detection.

[33mcommit acef21b759eb65a20a74eceae3cafc39c4d4bd73[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 14 13:38:05 2020 +0100

    app-layer: extend AppLayerResult to add convenience

[33mcommit 2f5834cdfab8157a0f8700bd7ac56d9b271b6d6d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 13 20:01:21 2020 +0100

    rust: merge parser.rs into applayer.rs
    
    Both were serving the same purpose.

[33mcommit 21e6f1f063e676f41cd85a30c83b236b1e845e72[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 13 14:43:00 2020 +0100

    app-layer: document return macros

[33mcommit 5b9b0b7226388fce78819ca020c6e4b5e22936b9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 13 12:56:18 2020 +0100

    nfs: switch to new 'incomplete' logic
    
    Remove buffering code in favor of using incomplete API.

[33mcommit 66598f9ce72432015f92ee53a027f546d77fdc35[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 13 11:03:19 2020 +0100

    nfs: switch to AppLayerResult

[33mcommit 5cd9cfb5a00fa2926fea8e56d28b40acf8a6c58e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 13 10:13:56 2020 +0100

    smb: update return type of GAP handling

[33mcommit 4bf87d30e45a00d731b3d5a639158e58fdc43753[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 9 19:33:38 2020 +0100

    smb: convert to return AppLayerResult
    
    Support returning 'incomplete' and remove the buffering
    code from the parser.

[33mcommit 674b8dc0fb35c7f91074cdb993d7b925f1987027[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 12 16:35:56 2020 +0100

    app-layer: add 'incomplete' return logic
    
    Allow app-layer parsers to indicate how much data they need
    before being called again.

[33mcommit 44d3f264bfe4b09d3628d886dd2421066f96e8aa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Mar 8 22:17:58 2020 +0100

    app-layer: update API to return more details
    
    Add AppLayerResult struct as the Parser return type in
    preparation of allowing returning 'Incomplete(size)' similar
    to what nom in Rust allows.

[33mcommit 3bcf948a75054280d3a74992833e0d9c5e5cb77e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 6 22:03:20 2020 +0100

    app-layer: change return codes
    
    This patch simplifies the return codes app-layer parsers use,
    in preparation of a patch set for overhauling the return type.
    
    Introduce two macros:
    
    APP_LAYER_OK (value 0)
    APP_LAYER_ERROR (value -1)
    
    Update all parsers to use this.

[33mcommit 54b2ec0e4ddcce0ee14e1ae7ea976a57d91ec173[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 10 21:14:39 2020 +0100

    app-layer: minor optimization

[33mcommit fee7b97ec021f02bdb43a6a17a8dec9bacb060b7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 12 19:52:58 2020 +0100

    stream: fix function style

[33mcommit 157d01e87e7b6172fbd7e7be80cf92bd57852d2c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Mar 8 08:29:44 2020 +0100

    ftp: minor code cleanups

[33mcommit 6ae66cb2bb2a3a4d3bf793b5e7fc6f5d74748993[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 17 21:11:27 2020 +0100

    nfs: code cleanups
    
    Use 'if let' to replace simple 'match' statements.
    
    Use explicit returns to easy code review.

[33mcommit a729d266c398d0d3a9f43d7df3f351245d1773e3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 17 20:44:33 2020 +0100

    smb: fix rustc 1.42 warnings

[33mcommit 0c5c2173bc1d9d903abac3745ffceb05926216ff[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Mar 3 09:48:46 2020 -0500

    config: General typo and grammar cleanup

[33mcommit e14447d594a8bf4eb3e838335c7faffe02908b63[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Mar 3 09:48:27 2020 -0500

    docs/napatech: Correct typo

[33mcommit b0f6737c10e3b18316428178ce5270f4e1f269df[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Nov 22 15:20:45 2019 +0100

    python: style for prscript
    
    Remove unnecessary pass
    Remove unused variable

[33mcommit be6f6cc6a2fd783f5aa6a96c480db8fb5262a732[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Nov 22 15:20:11 2019 +0100

    python: style for suricatasc.py
    
    Remove unnecessary return
    Better comparison with None

[33mcommit 492504cf629f3c77bcfd828cab24bbe8e0ff3c03[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Nov 22 15:19:09 2019 +0100

    python: remove unused imports

[33mcommit 47082dd5df1b71485333039cd6af75b39cdfffeb[m
Author: Stephen Donnelly <stephen.donnelly@endace.com>
Date:   Fri Mar 6 10:49:17 2020 +1300

    dag: Skip over ERF_TYPE_META records
    
    Suricata generates an error on unrecognised ERF types.
    Suricata should ignore ERF 'Provenance' records with ERF_TYPE_META.

[33mcommit 76582e34c146e59e11547b90133bbafdf6e456bf[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Feb 21 16:29:58 2020 -0600

    suricata.yaml/dns: removed unused settings
    
    Remove DNS settings global-memcap, state-memcap and request-flood.
    These have never been used in the Rust implementation of the DNS
    decoder.

[33mcommit 8a643c893c4cae61a22e343f1b910461dd110a54[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Feb 25 10:41:26 2020 -0600

    detect/parse: allow for OK signature parsing errors
    
    The idea of an OK signature parsing error is an error that is
    allowed to occur, but still lets test mode pass, unlike
    silent errors which will still fail testing.
    
    This is introduced to allow for app-layer event keywords to be
    removed, but not have old rules fail out on this case. For example
    the Rust DNS parser removes from DNS app-layer events that are
    not used anymore.
    
    To signal that an error is OK, -3 is returned. This also implies
    silent.

[33mcommit 947cfac62e5c1ad7669cba01291fa338d95c23f8[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Feb 21 15:49:36 2020 -0600

    detect/parse: softer error on unknown app-layer event
    
    On an unknown app-layer event, return -3 for "silent OK fail". A
    warning will still be emitted, but its not considered a rule parse
    error. This is to handle app-layer events being removed in a more
    graceful manner for the user.
    
    This allows -T to pass with an old app-layer events rule file
    that may used removed app-layer event keywords.

[33mcommit 688874582a7afad090801e0ca1a86fc5f852f7eb[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Jan 13 12:31:14 2020 -0600

    dhcp: remove C app-layer-dhcp wrapper
    
    This just wrapped the Rust function to register the parse,
    so instead just call the Rust function directly to remove
    the C wrapper, and the 2 C files.

[33mcommit a0e3e2d7b41de234c418f14251c02048eb5f7169[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Jan 29 16:34:00 2020 -0600

    dns: register parsers from Rust
    
    And port the C DNS tests to Rust.

[33mcommit 0af9a3a5f7954d7c972e448cad88cfbee025af3b[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Jan 13 18:35:57 2020 -0600

    dns: remove C wrapper functions to Rust
    
    Remove registration of C wrapper functions and register
    the Rust functions directly for UDP.

[33mcommit 1b44f839e67f1b96289b91d8980119e21ec1d5e2[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Jan 9 16:21:54 2020 -0600

    dns: cleanup: move event callbacks into Rust
    
    Remove app-layer-dns-common.c as its no longer needed.

[33mcommit ca5a3f0f047ccb8fc4fff728abf7a205118e6005[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Jan 9 12:10:32 2020 -0600

    dns: cleanup: remove unused events
    
    Removed events that are no longer used since the Rust
    implementation of DNS:
    - UnsolicitedResponse
    - StateMemCapReached
    - Flooded

[33mcommit 4d312b6813e6ee8612128b672f531444f483388f[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Jan 9 11:47:16 2020 -0600

    dns: cleanup: remove C DNS type definitions (dead code)

[33mcommit d809b0959b2466de38f171cd1ab0ea9173eef0b7[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Jan 9 11:43:41 2020 -0600

    dns: cleanup: move DnsGetRcode (Lua) to rust
    
    Move the implementation of Lua DnsGetRcode to Rust.

[33mcommit d6b3b33f4af1d361b52d3b7146bab4ad3f76b0de[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Jan 9 10:46:04 2020 -0600

    dns: cleanup: remove unused function DNSCreateTypeString

[33mcommit c5cee05169fd27a2f685a9224e067760e1ed6af3[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Sat Mar 7 13:53:36 2020 +0530

    doc: Fix typo Generate -> Generator

[33mcommit 7b1699c5a8515f48dc04b65d9d00c02c8517cc2f[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Tue Mar 3 11:40:08 2020 +0530

    doc: Add chassis for dev docs
    
    Closes redmine ticket 3344.

[33mcommit 23f796a021cd4a0f2614418a5d2d40acefd56df3[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Mar 6 10:45:23 2020 +0100

    kerberos: fix against packet split in record size

[33mcommit 76dd95152300b7e2fc2cd96fd6bb0e08df783134[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Mar 8 17:11:36 2020 +0100

    krb5/tcp: remove notice logging on failed records

[33mcommit 83963334932e8e62ecbcb3e957f5e5a6fd2cdf0d[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Feb 28 12:03:16 2020 +0100

    detect: adds icmpv6.hdr keyword

[33mcommit 02d94f5cf24d903913516739b4b6de0868a5db46[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Feb 28 12:04:00 2020 +0100

    detect: fix typo for ipv6.hdr description

[33mcommit fc48a7cebf9e34d035ae2315d82f58577d6ccb72[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Mar 4 16:43:51 2020 +0100

    detect: use SC macros for IPV6 header

[33mcommit af1361a988d8a83102bf98dbe55935f4ebbba7dd[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Feb 28 13:37:20 2020 +0100

    doc: add missing documentation for ipv6.hdr keyword

[33mcommit 5f95822f8bd28a16e5bfc395f30bec43102bdeff[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Feb 28 14:18:32 2020 +0100

    doc: fix typo in ByteExtractUint32 description

[33mcommit c20ab53eaeb57d873a5ea065f31adcec28786078[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Mar 4 09:37:04 2020 -0500

    detect/threshold: Correct typos

[33mcommit ff9a01ee1b63452d1b047f9bcc7522e3ab1eda10[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Mar 4 09:35:54 2020 -0500

    detect/threshold: Don't allow duplicates
    
    This commit detects duplicate threshold rule options. When duplicates
    are found in a rule, an error message is displayed and the rule is
    rejected.

[33mcommit f6c77dcdd94282b798da57b2cc5ea65c10065de4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 5 11:12:01 2020 +0100

    pcap/file: minor code cleanups

[33mcommit faf5beed2f56d6ff349d14cf167be9dbdfe14670[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 5 11:05:12 2020 +0100

    threads/time: minor code cleanup

[33mcommit 11912bd71517408000f70e68407571dff3be449a[m
Author: Sascha Steinbiss <satta@debian.org>
Date:   Mon Feb 17 17:29:59 2020 +0100

    sip: address trailing space parsing

[33mcommit c92975e22b809e9f4121b653670ae1233fe3e567[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Feb 14 08:38:53 2020 -0500

    mime: Test cases for filename length limit

[33mcommit 9a33b5d5ded247e94a6572092ab2aca3f51752b3[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Feb 5 09:21:05 2020 -0500

    smtp/mime: Fix typos

[33mcommit 130b8d26e7e8e64ca42dc7e4db9890619d9730aa[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Feb 5 09:20:29 2020 -0500

    smtp/mime: Set event when name exceeds limit

[33mcommit d0d20bd8746ad8933a515fa4facf9e3e10f22ecc[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Feb 4 10:13:49 2020 -0500

    smtp/mime: Restrict file name lengths
    
    This commit places restrictions on the length of the file name specified
    in attachments (`name=` or `filename=`) to `NAME_MAX`. Names exceeding
    these limits will be truncated and processing will continue with the
    truncated name.

[33mcommit 072c421e46abb8d3ddeaea818736a68299a20da5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 28 13:17:03 2020 +0100

    pcap/file: improve time handling
    
    This patch addresses two problems.
    
    First, various parts of the engine, but most notably the flow manager (FM),
    use a minimum of the time notion of the packet threads. This did not
    however, take into account the scenario where one or more of these
    threads would be inactive for prolonged times. This could lead to the
    time used by the FM could get stale.
    
    This is addressed by keeping track of the last time the per thread packet
    timestamp was updated, and only considering it for the 'minimum' when it
    is reasonably current.
    
    Second, there was a minor race condition at start up, where the FM would
    already inspect the hash table(s) while the packet threads weren't active
    yet. Since FM gets the time from the packet threads, it would use a bogus
    time of 0.
    
    This is addressed by adding a wait loop to the start of the FM that waits
    for 'time' to get ready.

[33mcommit 4977daec3297dcd06548c67d4d2779530f78c13d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 28 13:06:09 2020 +0100

    threads/time: rename ts to pktts to make purpose clear

[33mcommit ae4137937e0c5a0f80547be7f9dae08e8768babb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 27 17:20:18 2020 +0100

    pcap/file: fix race during pcap processing start
    
    A race condition during the start of pcap file processing could cause
    missed alerts and logged events. This race happens between the packet
    threads and the flow manager. It was observed on slower hardware, but in
    theory could happen on any machine. It required the 'autofp' runmode.
    
    In commit 6f560144c1b9 ("time: improve offline time handling") the logic
    was added to make the flow manager use a minimum of all the packet threads
    perception of time.
    
    The race condition was that the flow manager may become active _before_
    all of the packet threads have started processing packets and thus setting
    their timestamp. The threads that had not yet initialized their timestamp
    would not be considered when calculating the minimum.
    
    As a result of this, older packets timestamps would not yet be registered.
    This would give the Flow Manager a timestamp too far in the future. While
    the FM was running, the packet processing would start and a flow would
    be created. This flow would then immediately be considered 'timed out' by
    the FM, due to the timestamp too far in the future.
    
    In the observed case, the thread processing packet 1 from the pcap had not
    yet started processing while other threads had already started. The FM was
    also already active. Due to the timestamps in the pcap this meant that the
    time the FM used was about 500 seconds in the future compared to packet 1.
    
    This patch fixes the issue by initializing all of the threads timestamps
    with the timestamp value of the first packet. This way the minimum will
    always consider this timestamp.

[33mcommit 1b1855c3bd3a243dad590a5fa3e1139d0a90e5b5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 27 20:27:20 2020 +0100

    time: remove unused time structure

[33mcommit 13b4ece11d77f383b9674f01609d41ec29458097[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 27 20:20:33 2020 +0100

    time: minor code cleanup

[33mcommit 6176338d0b0bbce1771d73ee3683923dec97c330[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 28 10:22:23 2020 +0100

    time: fix function name typo

[33mcommit 227e2812f6c96fc08d2659aa36853542ec403473[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 28 10:38:22 2020 +0100

    pcap/file: fix function ptr naming

[33mcommit 95e7246b75c8f63181fc79ef6c60ff4624cfae69[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 2 17:18:50 2020 +0100

    rust: bump minimum supported version to 1.34.2

[33mcommit 74305c048683ff56ccf28991fd0226d0ad66aa05[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 7 11:33:30 2020 +0100

    rust/nfs: minor code cleanups

[33mcommit 576e92983e636ef3d49ec09bfcf436531cc4e9fe[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 6 10:43:17 2020 +0000

    rust/rpc: add partial data tests

[33mcommit 442500678bd2c831f801ffb243e81813e2b10177[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Thu Feb 6 21:45:39 2020 +0100

    rust: use the streaming version of combinators to fix incomplete reads

[33mcommit df9a4fd63504d0d34b6679a4c8776d013aec6f90[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Mon Nov 4 10:27:08 2019 +0100

    rust/rdp: use the streaming version of combinators to fix incomplete reads

[33mcommit 2561da89c09c2c6575b447bee0c370f473eb77a3[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Mon Nov 4 10:22:45 2019 +0100

    rust/rdp: fix regression introduced during nom 5 upgrade

[33mcommit f3ddd7127caed711f963a25ef8af1519a74169d6[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Thu Oct 31 15:33:57 2019 +0100

    rust: Add types annotation when required
    
    Unfortunately, the transition to nom 5 (and functions instead of macros)
    has side-effects, one of them being requiring lots of types annotations
    when using a parsing, for ex in a match instruction.

[33mcommit 62e31396aee6c8c0576b92558df97929dd3374f4[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Thu Oct 31 10:49:20 2019 +0100

    rust/ftp: upgrade to nom 5
    
    CompleteByteSlice type has been removed, and replaced by combinators
    under the nom::character::complete namespace.

[33mcommit 1a505ccd1142a4708d336a1551d8b1514222898b[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Thu Oct 31 09:25:58 2019 +0100

    rust/rdp: add custom error handling

[33mcommit d1bf34a4276b026da431c51a44ad1f7a93dd73e3[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Thu Oct 31 08:21:12 2019 +0100

    rust/smb: add custom error handling

[33mcommit 1ab8c5763c67ee821ab1204465e23785436a2910[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Wed Oct 30 17:17:52 2019 +0100

    rust: add SecBlobError custom error type for the Kerberos parser

[33mcommit 030c9a3d865f1252c4ee666a307103e55273004c[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Wed Oct 30 17:17:32 2019 +0100

    rust: add take_until_and_consume replacement function

[33mcommit 8664a55ee7168ee8905cf6b03572cee0dc4562d5[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Wed Oct 30 13:22:22 2019 +0100

    rust/dns: remove unneeded calls to closure!

[33mcommit 5b809f77f1ab6322d48b97035564b0a3cce80e16[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Wed Oct 30 13:14:07 2019 +0100

    rust: upgrade all parsers to nom 5

[33mcommit a2d91d9bf52f59b5610d84996d9a380f762f728c[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Feb 24 10:49:41 2020 -0600

    log-pcap: fix log message: unified2 -> pcap
    
    Likely a result of copy and pasted code.

[33mcommit 13635dba576172d6c52ab89438eddbf015f23d8b[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Nov 8 16:22:24 2019 -0600

    unified2: not supported message if configured

[33mcommit d86973b38655b2ac202c331d92b21e05712d8408[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Nov 5 20:26:53 2019 -0600

    unified2: remove deprecated output unified2
    
    Ticket 2385:
    https://redmine.openinfosecfoundation.org/issues/2385

[33mcommit bfe3c0105d951a87a83a92611943d288575dcbe5[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Nov 5 20:26:42 2019 -0600

    wirefuzz: removed unified2 file removal

[33mcommit d3f6a95b560fc270316a0d8facaeade6e9c941e8[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Nov 5 20:26:27 2019 -0600

    doc: removed unified2 output

[33mcommit e73aec150b165285d51425356c4d3b03b83781de[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Feb 19 09:16:36 2020 -0500

    pcre: Sticky buffer check
    
    This commit adds logic checking if the sticky buffer in effect provides
    the required content.
    
    If the sticky buffer doesn't, the rule will not load and a diagnostic
    message with follow-on steps is displayed.

[33mcommit 8279bab8dc6bd1da636134d5bf67cf4c0efb843c[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Feb 19 09:15:40 2020 -0500

    general: Wordsmith "no rules loaded" message

[33mcommit 7e47fc58afc8d0940eed990f04db4d397ec69ecf[m
Author: William Stearns <william.l.stearns@gmail.com>
Date:   Fri Feb 21 11:44:08 2020 -0500

    rules: fix files.rules typo

[33mcommit efaa1755c636a11ef509b5e951b20c56fd36bf5b[m
Author: Sascha Steinbiss <satta@debian.org>
Date:   Thu Feb 20 10:47:32 2020 +0100

    snmp-version: make comment more clear

[33mcommit f02a18e55747b40950a79095b930095407cc97b8[m
Author: Sascha Steinbiss <satta@debian.org>
Date:   Thu Feb 20 10:46:55 2020 +0100

    snmp: do not set SIGMATCH_NOOPT

[33mcommit 6d94b096a9bdf069465aae447aea036609bfb9bb[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Feb 22 13:24:45 2020 -0500

    spelling: Fix spelling error

[33mcommit 6c3503932ff604443820b85421ef0271deaf7032[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Feb 22 13:24:13 2020 -0500

    detect/ssl_state: Fix memory leaks from pcre_get_substring
    
    This commit replaces usages of pcre_get_substring with
    pcre_copy_substring to avoid leaking memory on error conditions.

[33mcommit 9fe51a8bd280c3662d5b48bbd9c8745a7bdd0822[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Feb 22 13:23:04 2020 -0500

    detect/flowvar: Fix memory leaks from pcre_get_substring
    
    This commit replaces usages of pcre_get_substring with
    pcre_copy_substring to avoid leaking memory on error conditions.

[33mcommit c2071e1c4e2d2ff89f7f7e07cefb307c095338e3[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Feb 22 13:21:36 2020 -0500

    detect/filestore: Fix memory leaks from pcre_get_substring
    
    This commit replaces usages of pcre_get_substring with
    pcre_copy_substring to avoid leaking memory on error conditions.

[33mcommit 8c132c0b8746ee2b91693c54625076e6a3be123e[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Feb 22 13:19:28 2020 -0500

    doc: Correct RST quote usage
    
    Corrects misplaced backticks preventing proper formatting of `mpm-algo`
    section.

[33mcommit bcea73026635c3bf080d9dab1717077acc23c5f2[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Feb 22 13:25:02 2020 -0500

    util-error: define SC_ERR_PCRE_COPY_SUBSTRING

[33mcommit be4c6b85de69d24e733ce47f48e5cea91f8197c2[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Oct 29 11:24:53 2019 +0100

    general: Convert _Bool to bool
    
    This commit addresses task 3167 and changes usages of '_Bool` to `bool`.
    The latter is included from `suricata-common.h`

[33mcommit 338585917600078249af5731378f46bf5cfa7dcc[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Dec 21 11:22:34 2019 -0500

    doc/userguide: Update for dump-features

[33mcommit 1519c1f006a235a316f271364638036d75ef277d[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Dec 21 11:16:31 2019 -0500

    detect/feature: Support --dump-features

[33mcommit 5e08e6bccf344b1afd177cf5ce229b5f44dfa667[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Dec 21 11:15:42 2019 -0500

    detect: update version comment

[33mcommit 1cddbc085b0a900680df6478cb7814e3b6f7938e[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Dec 21 11:12:30 2019 -0500

    detect: Fix typos/spelling errors.

[33mcommit 8f6e133497a172644c6d97570ac1789b19556de4[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Dec 19 19:51:59 2019 -0500

    main: feature init and release

[33mcommit 9631808b04b88e8ae5c5c7741ef83478aa77059c[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Dec 19 19:51:08 2019 -0500

    output/filestore: announce provided features

[33mcommit cf840c37b3bdeaa54758ef8b4a967970d921a4cf[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Dec 19 19:50:30 2019 -0500

    detect/filestore: Warn if req'd feature missing

[33mcommit 31e2cff9cb1bfd5e8b5293f7b849d64335bef680[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Dec 19 19:49:21 2019 -0500

    detect/analysis: Warn if required feature missing

[33mcommit f83b199f2a64c4d4ecfa193114dfd3fb947e9a39[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Dec 19 19:48:25 2019 -0500

    feature: feature tracking services

[33mcommit 5597801ccbb49c56cd48bf5c49bf974df0b9fcb4[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Dec 6 08:58:56 2019 +0100

    perf: optimizes alert fast log
    
    In the case when we have multiple alerts for one packet
    We suppose this happens more often than having decoder_event != 0

[33mcommit 1c99536945d604da009c62d6ab84ecc72ef033a2[m
Author: Phil Young <py@napatech.com>
Date:   Mon Jan 6 13:43:32 2020 -0500

    napatech: add hardware based bypass support
    
    Napatech hardware bypass support enables Suricata to utilize
    capabilities of Napatech SmartNICs to selectively bypass flow-based
    traffic.

[33mcommit 3fbcacf9a884cdc647c5885be0b18b45645832f3[m
Author: Phil Young <py@napatech.com>
Date:   Mon Jan 6 13:42:05 2020 -0500

    napatech: documentation hardware based bypass support
    
    Napatech hardware bypass support enables Suricata to utilize
    capabilities of Napatech SmartNICs to selectively bypass flow-based
    traffic.

[33mcommit f1f3b03143a1c008275241fbf789714959fb6bfc[m
Author: Andreas Herz <andreas.herz@dcso.de>
Date:   Fri Jan 31 10:19:36 2020 +0100

    doxygen: update config from 1.8.4 to 1.8.17

[33mcommit 52970d850858bb9784fe562422e9cf2c3aec4230[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Oct 9 16:59:13 2019 +0200

    detect/parse: move spaces skip up the stack
    
    Switch to isspace() as well.

[33mcommit 666324656378f9d71938c10eb1b5a47ff1eabbe2[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Feb 18 09:35:47 2020 +0100

    parser: make rust probing parsers optional

[33mcommit 427ec4e739611975b983fcf06bec8fc9b8f8917e[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Dec 28 09:45:31 2019 -0500

    decode: Fix typos/spelling

[33mcommit aec4e9a032855a710d71a4c397affcdce5351b39[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Dec 28 09:44:56 2019 -0500

    decode: Handle ERSPAN Type I

[33mcommit 99d48cc91f0b3a13c3ec563ef0ae9332f5b56509[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 14 11:07:45 2020 +0100

    configure: update to match autoscan suggestions

[33mcommit a3ef1b307df6d8bf537c101e80b52f394dcabc71[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 14 10:17:22 2020 +0100

    configure: clean up func checks

[33mcommit af2a689a9932c658f1fd47b348010b0bf708c482[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Jan 22 09:33:05 2020 +0100

    init: move main to a separate file
    
    so as to reuse code from suricata.c with fuzz targets

[33mcommit bb42be7e089ef6f2d60297d442e1e525860612b6[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Jan 22 09:30:51 2020 +0100

    fuzz: disable signal handlers while fuzzing

[33mcommit 47eba331104c573605ff4198e97f327b32b8aa2a[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Jan 22 09:30:26 2020 +0100

    init: make PostConfLoadedSetup global
    
    to be used by fuzz targets

[33mcommit 913082941c231340c6abf006e3a8d229885c0dfb[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Jan 22 09:28:36 2020 +0100

    init: fix PostConfLoadedSetup to use local suri ptr

[33mcommit d2b3668a68c842acdb632457a570b308630eac83[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Jan 16 08:49:19 2020 +0100

    init: InitGlobal function
    
    To be reused by fuzz targets

[33mcommit f5190da67edda7f04626ceb35d1a2d86b638f480[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Oct 24 14:41:21 2019 +0200

    util: UTHmemsearch to use memmem if defined

[33mcommit ce55d06569596930fa97d9e8d31c836e1b9ba31c[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Jul 12 16:26:28 2019 +0200

    check: Using const keyword for some arguments
    
    For ConfigSetLogDirectory and PrintRawLineHexBuf

[33mcommit 12a3a24906470567a0112b61d4f8d02d9811756f[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon May 27 17:00:05 2019 +0200

    log: can use a file set from env variable
    
    Enables the redirection of log to a file set by an environment
    variable SC_LOG_FILE when SC_LOG_OP_IFACE=file

[33mcommit 2456f27d08142b571a06ffd211c90a5fa557366a[m
Author: vanlink <paradoxes@163.com>
Date:   Thu Jan 16 16:27:57 2020 +0800

    stream/reassembly: fix data overlap check
    
    Fix function CheckOverlap bug.

[33mcommit aeefc82eb92e8b7b72cb31810c5f1040f8df2ace[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 29 13:50:05 2020 +0100

    tls: fix missing extern logic for cert_id tracking

[33mcommit 62c0f3d2b46f41d1b0462eb6eecbf7b95650c452[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 29 13:46:56 2020 +0100

    stats: fix missing extern keyword

[33mcommit 903291f88ac8d4d3042337d27f89bb4317e6b8ce[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 29 13:43:49 2020 +0100

    defrag: fix use of globals

[33mcommit 5c3c6c609ca4e466613d83f37c7fd65a56213fca[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 29 13:30:35 2020 +0100

    threading: fix queue handlers globals use

[33mcommit 3ae1854d2fc28c185c2d66a8c98d1049c92e1289[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 29 13:28:17 2020 +0100

    htp: fix globals use for flags

[33mcommit 85289f32835276f4c3acbcc54b64e36c125f3e4c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 29 13:27:58 2020 +0100

    proto: fix globals use

[33mcommit 5e583f3a12e94ccd91d20477066294730527180e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 29 13:23:36 2020 +0100

    flow: fix global variable use

[33mcommit 29f54a34ae608ed0fda2d8f10e753ccabf7cee02[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 29 11:55:27 2020 +0100

    stream: fix global declaration of the config

[33mcommit 2436daccd9574064d9f880813e0e8ba3de944d64[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 29 11:51:11 2020 +0100

    threading/modules: fix global declarations

[33mcommit c5f4b41881369e099159c148de652f729124b4ed[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 29 10:56:54 2020 +0100

    ippair: fix global declarations

[33mcommit 0a006d2258625b46043b38f62fedfcd0a8ee470c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 29 10:37:44 2020 +0100

    host: fix global declarations

[33mcommit 29780d6164d20531365d9bd82d8890a3dc662d8f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 29 10:28:16 2020 +0100

    mpm: fix global declarations

[33mcommit b89059bda7814eccf1373c5dc8d8aaa13c46e590[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 29 10:22:57 2020 +0100

    detect: fix global declaration of sigmatch_table

[33mcommit 0118e07d57a34c5fa72a57fdbae8bf2d3c182478[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 29 10:11:54 2020 +0100

    spm: fix global declaration of spm_table

[33mcommit a12c0b499df7a1f9761ae190796f551a6b63ccbe[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 29 08:33:18 2020 +0100

    threading: fix global declaration of threading_set_cpu_affinity

[33mcommit 45955d2e589f040cee74dce35a53d26de9cfe29c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 29 08:15:21 2020 +0100

    unix-socket: avoid using global variable w/o extern

[33mcommit a9a522fac3d2424d72e133d799be2644e3ac6df0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 29 08:10:59 2020 +0100

    decode: fix default-packet-size global variable

[33mcommit f68c255f090a94162df1fcd7e7262548a2119c50[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 11 11:55:18 2020 +0100

    nfs: implement post-GAP transaction cleanup
    
    Close all prior transactions in the direction of the GAP, except the
    file xfers. Those use their own logic described below.
    
    After a GAP all normal transactions are closed. File transactions
    are left open as they can handle GAPs in principle. However, the
    GAP might have contained the closing of a file and therefore it
    may remain active until the end of the flow.
    
    This patch introduces a time based heuristic for these transactions.
    After the GAP all file transactions are stamped with the current
    timestamp. If 60 seconds later a file has seen no update, its marked
    as closed.
    
    This is meant to fix resource starvation issues observed in long
    running SMB sessions where packet loss was causing GAPs. Due to the
    similarity of the NFS and SMB parsers, this issue is fixed for NFS
    as well in this patch.
    
    Bug #3424.
    Bug #3425.

[33mcommit 7709b90c168afb20e53e5f4f1a4546f62585b459[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 26 14:46:02 2019 +0100

    detect/file-data: remove debug abort that wasn't reachable

[33mcommit ac8ceae9bf29e4b80183ea2bc641a8c8e3f625f4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 26 14:45:34 2019 +0100

    detect/file-data: fix function doc

[33mcommit 500e8da63aba55e8a892d081eaf5de8d81b23dbf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 26 12:38:19 2019 +0100

    files: tracking flag update
    
    Improve flow file flags and file flags updates. Introduce a mask
    that is set at start up to avoid lots of runtime checks.
    
    Disable cocci flags check as it doesn't support the more dynamic
    nature of the flag updates.

[33mcommit a4a4d17ad02ce23d6b79bd5c3372d367287f6dd3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 26 10:56:53 2019 +0100

    app-layer/files: optimize GetFiles calls
    
    Remove FlowGetProtoMapping calls from the GetFiles wrapper and
    get the alstate from the flow directly.

[33mcommit d369e54f1dd729cb4a89ee4b44f7a9497fe73b34[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 26 10:42:24 2019 +0100

    app-layer: all protocols are tx aware now
    
    So remove the runtime check for it.

[33mcommit 1262ecbde0c2130f3fd4ca336cd2646828de9391[m
Author: Timo Sigurdsson <public_timo.s@silentcreek.de>
Date:   Mon Feb 3 23:17:17 2020 +0100

    init: Fix dropping privileges in nflog runmode
    
    Using the run-as configuration option with the nflog capture method
    results in the following error during the startup of suricata:
    [ERRCODE: SC_ERR_NFLOG_BIND(248)] - nflog_bind_pf() for AF_INET failed
    
    This is because SCDropMainThreadCaps does not have any capabilities
    defined for the nflog runmode (unlike other runmodes). Therefore, apply
    the same capabilities to the nflog runmode that are already defined for
    the nfqueue runmode. This has been confirmed to allow suricata start
    and drop its privileges in the nflog runmode.
    
    Fixes redmine issue #3265.
    
    Signed-off-by: Timo Sigurdsson <public_timo.s@silentcreek.de>

[33mcommit 7810f22413812d60e9503846aa1a5eebdb86c552[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 11 11:59:35 2019 +0100

    decode: remove pseudo packet checks
    
    Bug 1107 checks/hacks should not longer be needed, so remove them.

[33mcommit 272a5f526b7358e215012747178bb2d9120d7a34[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 13 19:50:48 2019 +0100

    threading/queues: simplify error handling

[33mcommit dce227ec88efd172e53e401fe1873a7ab4f9482c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 13 17:16:06 2019 +0100

    threading/queues: remove 256 queue limit
    
    Convert fixed size array to a dynamic TAILQ so we can
    grow as needed.

[33mcommit 0e3f27a87eaae862c15316093f384db6ec9e6efa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 13 16:29:11 2019 +0100

    threading: remove 'trans_q' array of packet queues
    
    Let the queues code set up PacketQueues on demand.

[33mcommit efa8a699238560b4ec57124513dfe56a64fc9626[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 13 16:16:15 2019 +0100

    packet-queue: create alloc and free functions

[33mcommit 550cfdd98d595ead90811be4491ca2b82db7d1f5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 13 15:59:51 2019 +0100

    threading: hide 'trans_q' from queue handlers

[33mcommit 45e5e19e6efefa4ff0197b65c697c9501a7961a3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 13 11:39:44 2019 +0100

    threading/threadvars: optimize layout
    
    Make sure StatsPublicThreadContext is on its own cache line.

[33mcommit e3fbdf1948ad2ea243abfe1dd8817f2eb578bb2f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 13 09:43:11 2019 +0100

    flowworker/stream: use no-lock packet queue
    
    Use smaller structure for temporary packet queues.

[33mcommit f8aed4ce2dd8ef141f5dd2ae64c9faccf8f0ca2e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 12 22:34:51 2019 +0100

    threading: change local packet queue logic
    
    Previously each 'TmSlot' had it's own packet queue that was passed
    to the registered SlotFunc as an argument. This was used mostly for
    tunnel packets by the decoders and by defrag.
    
    This patch removes that in favor of a single queue in the ThreadVars:
    decode_pq. This is the non-locked version of the queue as this is
    only a temporary store for handling packets within a thread.
    
    This patch removes the PacketQueue pointer argument from the API.
    The new queue can be accessed directly through the ThreadVars
    pointer.

[33mcommit b8c2b66d333c0816ec4f7e2bc1b38a44019fedbf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 12 14:54:55 2019 +0100

    packet-queue: introduce a non-locked version
    
    Works exactly like PacketQueue, just does not contain a mutex
    and cond var, leading to much reduced memory size.

[33mcommit 9ed260c489155e9f9015eddce8710293ed364d14[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 12 14:54:33 2019 +0100

    threading: more efficient TmSlot layout

[33mcommit 18e652309ffa284f6a1c85ba3ce2d7fe8bd9d5c7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 12 13:28:09 2019 +0100

    threading: remove 'id' field from TmSlot
    
    Field was now unused.

[33mcommit d7cb0774dd89763cf5f6d1f5cc5f3e3dae6acd68[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 12 13:03:58 2019 +0100

    detect: cleanup reload thread handling

[33mcommit 786e697590248e79d2e1a596b13bb0eebf6d8826[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 12 12:54:18 2019 +0100

    threading: simplify flow timeout loop

[33mcommit 261b77742e05078da4f03d4726d856fbd429d648[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 12 12:44:57 2019 +0100

    threading: shrink and reorganize TmSlot

[33mcommit 87c9b11d8c59427f3b22fa41dab068a971ca74a2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 12 10:01:18 2019 +0100

    threading/threadvars: rearrange for better cache behavior

[33mcommit 071b753e8436e680e12c5b06b4144f67c84bff95[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 11 20:57:35 2019 +0100

    threading/threadvars: remove unused 'prev' field

[33mcommit f53f004917c955b5dcb195603aeee76d6e0386a1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 11 20:53:03 2019 +0100

    threading: remove unused 'TmThreadRemove' function

[33mcommit 569a5d985b350e8e86ea8319274aafc8500d8841[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 11 20:49:24 2019 +0100

    threading: remove handler names to shink struct
    
    Shrink ThreadVars by removing the queue handler names that are only
    used at shutdown. Since this is not performance critical, we can use
    the id's to look up the queue handler.

[33mcommit 74a6f8d4ddf6fb1ea580561f12ff1bd8e4f68aad[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 11 20:48:11 2019 +0100

    threading/queues: add way to lookup by ID
    
    In preparation of doing runtime operations by ID instead of by name,
    add functions to look up by ID and to convert name to ID.

[33mcommit d0218696ba59d6f1e7ed613e90d6d82c5e4d65cb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 11 17:01:12 2019 +0100

    threading: shrink threadvars struct size

[33mcommit c0295995156f35abf2e7308278970ca1cfebeda1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 11 16:52:47 2019 +0100

    threading: remove unused threadvars field

[33mcommit f1ee176111b72e8d43c2dc3801093bc582b6ac2a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 11 16:49:55 2019 +0100

    threading: clarify threadvars fields

[33mcommit d50492cb2024d5d4d6906fa0ecab78f09bae472b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 11 16:11:55 2019 +0100

    threading: cleanup packet thread shutdown loop

[33mcommit 8e762f519019c916a17a405e2e95e9903dffd72d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 11 15:44:33 2019 +0100

    source-pcap: remove unused function

[33mcommit 3a703c84ad930143939ef5da9084faeac0dc7574[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 11 08:16:26 2019 +0100

    threading/modules: declare prototypes static
    
    Declare registered threading API funcs static where appropriate.

[33mcommit 7c83cb585e634fab7f94a5b4ebddbc54365325d9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 11 15:26:32 2019 +0100

    sources: fix pipeline failure handling
    
    When TmThreadsSlotProcessPkt fails it will return the packet that was
    passed to it to the packetpool.
    
    Some of the packet sources were doing this manually as well. This patch
    fixes those sources.

[33mcommit 49599dfe8949bf71186aa0205f680ccac00eab42[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 11 11:19:44 2019 +0100

    threading: use tm_flowworker for pseudo packets
    
    Pseudo packets don't need to be processed by the decoding layer.

[33mcommit 9df8e1c98451ddd689e4ad274729deceebcb5c16[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 11 11:11:55 2019 +0100

    threading: add shortcut to flowworker

[33mcommit 02004fa5475650677a546e84ad39f0f767c83fcf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 9 20:24:21 2019 +0100

    threading: remove per slot post_pq
    
    Use a single packet queue per thread for flow timeout packet
    injection. The per slot queue was unused except for this use
    case. Having a single queue makes the logic and implementation
    simpler.
    
    In case of 'autofp', the per thread packet queue will actually
    use the threads input queue. For workers/single a dedicated
    queue will be set up.
    
    Rename TmThreadsSlotHandlePostPQs to TmThreadsHandleInjectedPackets
    to reflect the changed logic.

[33mcommit 15e3bdb7b879547e90b54c433b9aa06575b3da6f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 11 08:07:35 2019 +0100

    af-packet: prototypes cleanup
    
    Remove unused prototype.
    
    Declare other prototypes static.

[33mcommit 44d7f636f2199ff86c829117a6dee6ca5fe39416[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 11 08:07:35 2019 +0100

    threading: remove post_pq argument from 'SlotFunc'
    
    This was not in use anywhere.

[33mcommit f5045af3e3978fba90cd3d50ceaeb33a511749fc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 4 19:40:07 2019 +0100

    runmodes: code cleanups

[33mcommit 1a8562b3c69ab87510dea442763bc4de6ee6dc9a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 4 11:46:54 2019 +0100

    detect: clean up threads handling
    
    Clean up reload and break loop thread handling.

[33mcommit e5010d77044a65fb298e47c0b5aa3b19d3461a4f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 4 11:20:40 2019 +0100

    detect: inject packet cleanup

[33mcommit abea227cfc98301607128db6dd317559472dbf03[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 3 20:43:56 2019 +0100

    flow-manager: code cleanups

[33mcommit 6fd35fb78683a5bf93140c353d621e747810c92e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 3 20:42:47 2019 +0100

    flow-manager: avoid doubly signaling threads
    
    Don't try to wake up the threads we just flagged and validated that
    they changed their state.

[33mcommit 539c1a275f641b797e408870061d2b5d4f01335c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 3 20:13:33 2019 +0100

    threading: remove commented out function

[33mcommit b55f617c2fc8e6ef43a65ae04c67440acba0d767[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 3 16:02:21 2019 +0100

    threading: optimize and unify post_pq checks
    
    TmThreadsSlotProcessPkt did not need to look all 'slots' as only the first
    slots post_pq can have been used.
    
    Unify post_pq cleanup handling.

[33mcommit 2a1ed3ba1bda47b0103a2386fb890e410fc241a2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 3 15:57:23 2019 +0100

    threading: remove wrong unlikely statement; minor cleanups

[33mcommit e5192ae20a7b39c162b410b3f4cf494e45652975[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 3 15:47:01 2019 +0100

    threading: TmSlot::SlotFunc does not need to be atomic

[33mcommit 89048d71ad1ff6576ed0974fb103054152c1fc0e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 3 10:37:06 2019 +0100

    threading: fix flags handling by using uint32_t everywhere

[33mcommit 85cf34118989a8b253cb66edc8659d1d2bc1f86a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 3 10:02:18 2019 +0100

    threading: optimize error handling in main packet loop

[33mcommit 9d8ea3b4fe3bc48e75e4ba6e132ab851cc46249b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 3 10:00:14 2019 +0100

    threading: minor code style cleanups

[33mcommit b1056b38367ad342c94a538629faa5b7ad7af684[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 3 09:58:34 2019 +0100

    threading: simplify packetpool checks

[33mcommit 603b2ced47ea4e374dc7185c139d8d0641d80cda[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 3 09:52:21 2019 +0100

    threading/queues: add shortcut for packetpool check
    
    Allows code simplifycation in the threading loops.

[33mcommit 29cb9d1d52977f0db874f130cb38566fa70045cb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 3 09:28:46 2019 +0100

    threading/queues: minor code cleanups

[33mcommit f05c12b70f78d5369ec19c5759db033fb103f052[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 7 14:50:39 2020 +0100

    afl: fix compilation

[33mcommit 01862eae78fdd704a7130ce56d006fbd7f4a781c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 20 12:27:13 2019 +0200

    afl/decoder: make file dumps optional

[33mcommit 42d112e7b6db6c85102c1864905cca0ea2c05f88[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 1 06:50:38 2019 +0200

    detect/address: dead code removal and style cleanups

[33mcommit d41aeccea459e52fc2c1a6fa2ce1000973651001[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 21 12:20:40 2020 +0100

    smb: handle file transactions post-GAP
    
    After a GAP all normal transactions are closed. File transactions
    are left open as they can handle GAPs in principle. However, the
    GAP might have contained the closing of a file and therefore it
    may remain active until the end of the flow.
    
    This patch introduces a time based heuristic for these transactions.
    After the GAP all file transactions are stamped with the current
    timestamp. If 60 seconds later a file has seen no update, its marked
    as closed.
    
    This is meant to fix resource starvation issues observed in long
    running SMB sessions where packet loss was causing GAPs.

[33mcommit 80cafb2979f2559852a08e081f8df8ebd3e8b097[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Dec 3 14:10:45 2019 -0600

    flow: expose last time as a function
    
    This function returns the individual components
    of the timeval in output pointers making it suitable
    for use over Rust FFI.

[33mcommit d1eab5aa462f18f66ada9e5bbc9c89b8104db96a[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Jan 23 11:31:06 2020 -0600

    defrag: set livedev on the reassembled packet (issue-3380)
    
    Set the livedev on reassembled packets to that of the parent
    packet. Fixes issues with multidetect, specifically a segfault
    as reported in issue 3380.
    
    Bug #3380.

[33mcommit 9ae87e79a28d9e646df2558eba257e7c182a804f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 28 11:12:19 2020 +0100

    configure: fix cygpath check

[33mcommit 9d0976ea8ac2e065d6ceb6b8354d80e63503cef7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 17 13:45:42 2019 +0100

    output/tx: split list of loggers per alproto
    
    This patch splits the list of loggers the tx logging walks into lists per
    alproto. The list was getting longer with each eve addition. The result
    was that for each tx we would have to loop through multiple loggers that
    did not apply to this tx as it was for the wrong protocol.

[33mcommit 5b7aa506c169361ad30a25c113b8275dfe58c799[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 16 15:56:15 2019 +0100

    output: micro optimization
    
    LogFunc is always set, so don't check for it at runtime.

[33mcommit 4f9e4d41e07c5cf734b2f0931b67ea9972036c18[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 16 15:46:13 2019 +0100

    output: optimize root logging loop
    
    Instead of unconditionally looping all the 'root' loggers, loop only
    those that are in use.
    
    Root loggers are: packet, tx, file, filedata, streaming.

[33mcommit 07df1ce6afffb35c0acd25b3b787ce04643306b1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 16 11:11:02 2019 +0100

    output: clarify registration

[33mcommit 284c3cf68a2734400120954a7c60ff28cd3a3172[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 9 08:35:30 2015 +0100

    output/tx: bail early if no flow

[33mcommit ed99e9204f0903ed38eb2c2de2f36f2753e8c5ea[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 20 10:47:14 2019 +0100

    output: fatal error if root logger alloc fails

[33mcommit 1e741641a619eee5c6aa5e834bf8b2279410b024[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Jan 24 12:27:27 2020 -0600

    rust: make clean fixups
    
    For make clean, only remove gen/ if cbindgen is available.
    This prevents make clean from remove gen when the headers
    were bundled, but cbindgen is not available to remove them.
    
    Unconditionally remove gen and vendor in maintainerclean.

[33mcommit 0a1d2fcec383a4481aabc733d040b561a7d1d3a4[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Jan 24 10:14:21 2020 -0600

    github-ci: test make after make clean
    
    On the CentOS 7 build, test a make after a make clean. Should
    catch the case where bundled generated headers files get deleted
    when cbindgen is not available to rebuild them.

[33mcommit 53aaa82deb888b8e4d63d7077f38d788e3b614d0[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Dec 16 13:42:44 2019 -0600

    rust: set edition to 2018

[33mcommit e68dfa46a6614a0f2fc1ff2c86b90788e8f03f51[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Dec 16 13:41:07 2019 -0600

    rust: cargo fix for Rust 2018 edition

[33mcommit 56528a38dd6382ab48520c9dbf9fa7d823985822[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Dec 16 10:48:44 2019 -0600

    github-ci: add .cargo/bin to path on cbindgen install
    
    And remove cbindgen from builds that use the distribution
    archive.

[33mcommit 5fbe02058576f76d00928535538fc597b8992fd7[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Jan 14 09:52:28 2020 -0600

    rust/cbindgen: Revert Makefile to a more pre-cbindgen state
    
    The modifications as part of the cbindgen commit caused issues
    with distcheck, revert the Makefile to how it was with the Python
    generator, but still using cbindgen.
    
    Also always assume we'll include the generated headers in the
    distribution archive to fix make distcheck from distribution
    archives with headers included, but no cbindgen.

[33mcommit b573c16dd5430abf5b0c4d3df5292dd1226aaac9[m
Author: Danny Browning <danny.browning@protectwise.com>
Date:   Tue Jun 25 12:16:52 2019 -0600

    build: cbindgen
    
    Rust headers are now generated using cbindgen. If cbindgen is present, they can
    be generated during dist, otherwise they will be available for builds.

[33mcommit 593da166bb80fca09adc134b4f06f8f255b9c8e4[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Jan 24 10:15:30 2020 -0600

    version: starting work on 6.0.0
    
    Bump version to 6.0.0-dev.

[33mcommit 2c050187a3ad78388e57781c4feb74426bc75e21[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 14 20:20:45 2019 +0100

    streaming/api: fix overlap check
    
    In some cases a SBB could be seen as overlapping with the requested
    offset, when it was in fact precisely before it. In some special cases
    this could lead to the stream engine not progressing the 'raw' progress.

[33mcommit 0f41cf3d74dec2ba095b43a5957247d78391a1ed[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 14 07:11:26 2019 +0100

    debug/validation: check tcp/app-layer data lengths

[33mcommit a742c86741022996cd892819a1a3172288361a89[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 13 22:26:30 2019 +0100

    stream: improve app-layer data retrieval with GAPs
    
    Don't assume that the next block after the sbb head is after the
    requested offset.
    
    If the next block was before the offset, the returned data_len
    would underflow and return a nonsense value to the app-layer.
    
    Bug #2993.

[33mcommit ed2f6ac64bc0a60419ad12e070753909ee7bd86a[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Jan 11 09:51:00 2020 -0500

    modbus: Correct typo

[33mcommit d4428d94deba7ba5fafeb76505012492136b0519[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Jan 11 09:49:55 2020 -0500

    modbus: Update correct TX flags

[33mcommit 6c2cdbb5f0c8af6d88fb0ffc1653d25896471073[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Jan 4 09:12:38 2020 -0500

    analysis: exit if table entries are stale
    
    This commit causes Suricata to exit when a buffer from the analyzer
    table is not recognized.
    
    Since the table must match what's registered, exiting will bring noticed
    to the condition.

[33mcommit ce0ae81d9530ce96c5e573da1d94c65559ccb1cb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 17 16:40:38 2020 +0100

    rust: fix vendor use on MinGW

[33mcommit 57b683233dbaf2da9bec43f740c4cf69f5df9f44[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Jan 16 09:30:28 2020 -0600

    rust: Don't use --frozen during build.
    
    If sources are vendored, we get the same effect of using frozen
    with a lock file, and the Cargo.lock is generated based
    on the vendored sources.
    
    This also removes the need to ship a Cargo.lock.
    
    Fixed out of source builds with vendored sources.

[33mcommit c6f168eb98c665f82e43500ed17f9807ae3c3639[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Jan 16 09:09:13 2020 -0600

    rust/Makefile: Don't include Cargo.toml
    
    There is no need to include Cargo.toml in the distribution,
    it is always generated from Cargo.toml.in during
    ./configure.

[33mcommit 2ff963db16534c852dec48c781a05a7e1a8a7ec5[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Jan 8 10:16:40 2020 -0600

    github-ci: do distcheck on fedora 31 build
    
    There were no distchecks being done on builds from git.

[33mcommit 83630015b9abb32fdaf92fb52cef376da664d9e7[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Dec 31 09:19:43 2019 -0600

    github-ci: make distcheck on centos 7 build
    
    Tests distcheck on a build from a distribution archive.

[33mcommit 700eebaeccb94bdd0ad6a22466c0026afed6c4df[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Sat Dec 21 05:52:42 2019 +0530

    doc/conf: Update copyright and regex for version
    
    Make the new regex in compliance with the modern autoconf syntax.
    Closes redmine ticket #3423

[33mcommit 1666bc0ad18630d956e29890d3e7ca3014677d62[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Wed Dec 18 09:59:54 2019 -0500

    doc: minor capitalization fix
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 4f7dc4f136cec13c820ff062ad5ef76dca5d2a87[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Wed Dec 18 09:59:23 2019 -0500

    doc: add bsize documentation and rule example
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 5ee8323028aeb0d2c4926bae3bf8dafd05215d56[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Dec 19 11:02:56 2019 -0600

    rust: remove unnecessary parentheses (Rust 1.40 fixup)
    
    Rust 1.40 in strict mode will now fail the build on the
    presence of unnecessary parentheses.
    
    warning: unnecessary parentheses around type
      --> src/smb/smb2_ioctl.rs:41:12
       |
    41 |         -> (&mut SMBTransaction)
       |            ^^^^^^^^^^^^^^^^^^^^^ help: remove these parentheses
       |
       = note: `#[warn(unused_parens)]` on by default

[33mcommit b9515671be598c89badf1fb5d2652497d493bcd3[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Dec 13 09:14:35 2019 -0600

    github-ci: use container for 18.04 build
    
    As the action runs natively on 18.04 we were not explicitly
    setting a container, but this means we're using what GitHub
    provides us as a default state which might be broken. Instead
    use the standard Ubuntu 18.04 container.

[33mcommit 3d9071639b6037a8d13186ea0a73fbf0424901cc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 13 16:49:52 2019 +0100

    version: starting work on 5.0.2

[33mcommit f9840b513d1b295eb6977fa9971472d427086487[m[33m ([m[1;33mtag: suricata-5.0.1[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 12 09:54:45 2019 +0100

    version: release 5.0.1

[33mcommit 6fa66e3ddb2f77df9ed9f91edc4b48a125e7bdc5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 13 11:09:18 2019 +0100

    changelog: update for 5.0.1

[33mcommit 627cc23769dc574ca13e6fd6e1af1ab34b5bb575[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 3 09:50:14 2019 +0100

    detect/asn1: fix offset bounds checking

[33mcommit 8609939e60cdd52dc1745e2eeb5dc3db275acd13[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Nov 14 14:56:43 2019 -0600

    ipv4: continue parsing options after invalid option
    
    As long as an option has a valid length, we can continue
    parsing the options after an invalid one.

[33mcommit df8db1ddb0736300bad4a7fee811d333ab77cb54[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Nov 14 11:34:56 2019 -0600

    ipv4: fail packet decoding on bad ipv4 option length
    
    Currently all failures in IPv4 option decode are ignore with
    respect to continuing to handle the packet.
    
    Change this to fail, and abort handling the packet if the
    option length is invalid.
    
    Ticket 3328:
    https://redmine.openinfosecfoundation.org/issues/3328

[33mcommit fa692df37a796c3330c81988d15ef1a219afc006[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 21 16:10:21 2019 +0100

    stream: reject broken ACK packets
    
    Fix evasion posibility by rejecting packets with a broken ACK field.
    These packets have a non-0 ACK field, but do not have a ACK flag set.
    
    Bug #3324.
    
    Reported-by: Nicolas Adba

[33mcommit 9f0294fadca3dcc18c919424242a41e01f3e8318[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 21 14:47:04 2019 +0100

    stream: fix SYN_SENT RST/FIN injection
    
    RST injection during the SYN_SENT state could trick Suricata into marking
    a session as CLOSED. The way this was done is: using invalid TSECR value
    in RST+ACK packet. The ACK was needed to force Linux into considering the
    TSECR value and compare it to the TSVAL from the SYN packet.
    
    The second works only against Windows. The client would not use a TSVAL
    but the RST packet would. Windows will reject this, but Suricata considered
    the RST valid and triggered the CLOSED logic.
    
    This patch addresses both. When the SYN packet used timestamp support
    the timestamp of incoming packet is validated. Otherwise, packet responding
    should not have a timestamp.
    
    Bug #3286
    
    Reported-by: Nicolas Adba

[33mcommit 9bcc1118e18076ac401d9fd47ee20e8fdc9837f3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 13 11:12:15 2019 +0100

    configure: require libhtp 0.5.32

[33mcommit df74f34a6287097ee62af392aa13c831326a8dbb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 12 15:57:29 2019 +0100

    decode/tcp: accept TCP fast open cookie request

[33mcommit 3ca7dcd8d8339201b8d99d96302dc6dd0c070dc7[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Dec 10 16:40:35 2019 -0600

    configure: fix test -f for rust/vendor, should be -e
    
    Introduced with commit: c08ec8d8b27280e2bcb066c9caa24da97e0419ee

[33mcommit 69c00a77b5a04c3b667e50a0e1125e37d0806492[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Dec 10 16:22:02 2019 -0600

    github-ci: in a dist build, check that --frozen is being used
    
    Verify that ./configure is picking up the vendored Rust sources
    when building from a dist archive.

[33mcommit 040aff5197ba19caef1113c1c5c323eef72a9f69[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 11 20:57:57 2019 +0100

    htp: close request only from request side
    
    This allows the response side to keep going for just
    a bit longer.

[33mcommit 77539e08fc8a4e548035663c46fc5f9bea8188d3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 11 20:57:07 2019 +0100

    stream: in IDS mode, call app-layer at EOF
    
    On stream end call app-layer with empty message in IDS mode.

[33mcommit eceb7dcba46621ab0ac5f600812c74fe4152affc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 10 12:48:56 2019 +0100

    eve: support pcap_filename for unix socket mode
    
    Bug #3390.

[33mcommit fccdb1c642f0916e24b01def4ee1e028892b115c[m
Author: Daisu <daisuki@tuxtrooper.com>
Date:   Wed Mar 13 23:39:48 2019 +0100

    doc/commandline: -i option is useable several times

[33mcommit 4ac5ab00b7a5ac475340349039da202308df3334[m
Author: Steven Hostetler <steven.hostetler@gmail.com>
Date:   Mon Oct 28 23:06:00 2019 -0400

    doc/install: fix geoip typo

[33mcommit 411dd69e92c9d5b2937c583e5c1cb55981d82def[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 10 12:26:44 2019 +0100

    doc/eve: layout and formatting fixes

[33mcommit 55a36c79ff60fea68c9847b8dababc9a39c6458b[m
Author: Jason Williams <jwilliams@oisf.net>
Date:   Mon Nov 25 16:44:57 2019 -0700

    doc: update http keywords documentation

[33mcommit 4a2918e6b5d377fab04600aea4172a22a94e39c0[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Oct 30 09:12:42 2019 +0100

    yaml: clarify comment about dump-all-headers
    
    Logs a warning if the value is unknown
    Fixes #2810

[33mcommit f2117774f53ff9315af457636cec6cd08e432bc1[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Sat Nov 23 23:35:56 2019 -0600

    configure: assume cargo vendor if cargo >= 1.37
    
    Rust/Cargo 1.37 and greater has vendor support built-in.

[33mcommit 007a461d69b0e8589d0b1ba4968b17903e91ab86[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 9 17:09:20 2019 +0100

    detect/parse: track negation during address parsing
    
    Fix address negation detection not resolving variables when
    looking for the negation.
    
    This patch makes use of the actual parsing routines to relay this
    information to the signature parser.
    
    Bug #3389.
    
    Fixes: 92f08d85aac2 ("detect/iponly: improve negation handling in parsing")

[33mcommit 34b7035a0d0a734b120962e65125013289ea798a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 9 17:08:45 2019 +0100

    detect/iponly: debug output improvements

[33mcommit 618ad0d92fccb2a4bd6489e76b695d661da82dd1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 5 15:31:28 2019 +0100

    app-layer: optimize inspection id tracking
    
    Increase the inspect id for a completely inspected tx in any case.
    This avoids re-evaluating transactions.
    
    Reported-by: Ilya Bakhtin

[33mcommit f5b33a070acc65ed6706e1904b55aa8cfa7e327a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 4 10:22:55 2019 +0100

    smb1: allow empty trans records

[33mcommit 40fe29de96877d32cd315d07d60626e94b6fbcd5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 4 10:06:01 2019 +0100

    smb1: fix 'event' txs not getting closed
    
    If the only reason we created a request side TX was to set an event,
    we would not close it.
    
    This patch always looks up the TX from the response side.

[33mcommit 129cd28058334cf9048cc06764ca112faf1a8b59[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 3 09:27:34 2019 +0100

    smb/dcerpc: close request tx sooner

[33mcommit 44ac3e30dd47e3dda202a0a03559d314581e6917[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 3 09:25:48 2019 +0100

    smb: post-GAP handling update
    
    Close all prior transactions in the direction of the GAP, except the
    file xfers. Those use their own logic.

[33mcommit a7ee2ffbde99ae6df24196ffe6cb1b85e60bb22d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 2 20:57:59 2019 +0100

    smb: winreg is a DCERPC facility

[33mcommit f302f3543fc816723a89c03f94c53bb1f375192b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 5 15:00:40 2019 +0100

    files: add call for setting inspect sizes
    
    The inspect sizes are currently only used during file prune
    house keeping for SMTP.

[33mcommit f9f958d66e3c080fa83ec74562aad3691c368291[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 2 11:49:18 2019 +0100

    smtp: fix and clean up new file handling
    
    Set tx id on files that were just opened.
    
    Move logic to a small util func.

[33mcommit 683b22d114857f5c33734b4a96942742ced98f63[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 22 13:45:10 2019 +0100

    smtp: use FILE_USE_DETECT for raw-extract

[33mcommit 21760bfc76fca336de9e914efaff051c0323a0ef[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 22 17:27:19 2019 +0100

    files: change pruning behavior
    
    If file prune is called inspect has already run. So if file is closed
    we can just prune. No need to consider a window anymore.
    
    When still in progress, fix the left_edge calculation.

[33mcommit 682014619f29676f1aab0421ff810318c6f30eb2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 24 09:16:29 2019 +0100

    files: fix FILE_USE_DETECT with --disable-detection
    
    Don't set FILE_USE_DETECT flag if detect is disabled.

[33mcommit 4ac9cd2c70dbe887f004deb905d1f08b1bc4efcc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 24 09:16:46 2019 +0100

    files: move smtp prune logic to main
    
    Now that we call the file prune loop very regularly, we can move the
    SMTP specific inspection pruning logic into this loop. Helps with
    cases there we don't (often) update a files inspection trackers.

[33mcommit 4b7599af9072fcd125bd1a4beeaddc30f70730bd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 25 15:17:29 2019 +0100

    http/file: modernize unittests
    
    Part of ticket #2975.

[33mcommit 1cdb2182e458fd8b912ed63990a3f2cbeca1e9db[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 9 11:30:10 2019 +0100

    fastlog: apply icmp type logic to icmpv6 too

[33mcommit 5ef05ffad15d70cec28b2192d6ae556715616edd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 25 19:09:10 2019 +0100

    http/multipart: small cleanup

[33mcommit aae00df4df42bab54a8404200f253897469f99a8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 25 17:16:56 2019 +0100

    http/multipart: use wider type for boundary lengths
    
    Use uint32_t for a local type instead of uint8_t to avoid casts.
    
    Length should always stay under this regardless.

[33mcommit 4d0db9cb4a8d4f5f0cad1b885801d8b50ddf69a4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 25 17:01:59 2019 +0100

    http/multipart: optimize form end search
    
    If we already know that the boundary exists, we can start looking
    there. Otherwise, we can skip trying as the boundary is a subset
    of the form end marker.

[33mcommit 54d93e1eb982562964ffb5c99e6b990236fe02af[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 25 15:21:32 2019 +0100

    http/multipart: process incomplete file data
    
    Start processing multipart data as soon as it is available to
    allow inspection sooner.

[33mcommit fcfb679893e4641c9510e571a4480aa07d251f2c[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Dec 5 19:15:13 2019 -0500

    detect/analyzer: Suppress direction warnings
    
    This commit ensures direction warnings for ICMP v4 and v6
    are suppressed and corrects check so that both protocols
    are checked (instead of the same protocol being checked twice).

[33mcommit 1b9009ea0e6dfcc835a036d06654aa2420aaa152[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Dec 7 10:43:28 2019 +0100

    suricata: fix computing of default packet size
    
    Update the default packet size computation to use LiveDeviceName
    instead of LiveDevice as the LiveDevice list is not built when
    the default packet size is built.

[33mcommit 222a81f85dfea32f518f68eda51d9f45e1bcc46a[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Dec 6 15:10:23 2019 -0600

    travis: remove cocci and macos builds
    
    These tests are covered by Github actions and removing
    them may speed up the Travis builds to get results sooner.
    
    Its still worth keeping some of these builds as they test
    more compile time options than the Github Actions currently
    do.

[33mcommit c08ec8d8b27280e2bcb066c9caa24da97e0419ee[m
Author: Fabrice Fontaine <fontaine.fabrice@gmail.com>
Date:   Sat Oct 26 13:30:43 2019 +0200

    configure.ac: remove AC_CHECK_FILE
    
    The use of AC_CHECK_FILE and AC_CHECK_FILES cause the following error
    when cross-compiling:
    
      configure: error: cannot check for file existence when cross compiling
    
    The solution is to check for the file directly instead of using a macro.
    
    Signed-off-by: Fabrice Fontaine <fontaine.fabrice@gmail.com>

[33mcommit c9cd7559fd5d7cf4f2d501b70839321c7c4a5eb9[m
Author: Ciprian <abuwarez@gmail.com>
Date:   Mon Dec 2 14:07:15 2019 +0200

    configure: fixing rust/cargo cross compile command
    
    adding --target argument to cargo command line when cross compiling

[33mcommit c010f092e09042128ee21637352fd17a2e56cfbb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 28 11:48:19 2019 +0100

    detect/replace: fix debug print issue
    
    Don't print field that will likely not be 0 terminated.

[33mcommit c3ea5e71e5cd48f1bfe5a2b8c8241af989498bac[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 2 14:35:04 2019 +0100

    detect/file.data: fix buffer reusing id 0

[33mcommit cd66c37711ba342bbbaa1dc59dd41d06fa480eeb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 25 14:03:13 2019 +0100

    http/multipart: use proper progress value to test eof

[33mcommit 95237f98944d9285278549c207ad2a8ae8f6a682[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Wed Oct 16 21:16:52 2019 -0400

    docs: update datasets examples
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 08b84e060ba2dafd667b4ce375104f945879ba63[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Oct 30 09:46:53 2019 +0100

    fastlog: use icmp type and code instead of port
    
    Fixes #3266

[33mcommit 75a7d9641c75eec2a9f19bf6dff2a6f928e284fa[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Oct 30 09:33:51 2019 +0100

    fastlog: move code to reduce variable scope

[33mcommit c2fdd7c969b9ced9766d0251f7d2e44eb6b0b478[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Nov 7 17:10:14 2019 +0100

    transform: fixes comment about compress_whitespace

[33mcommit 9126fc25c1b76c5a5655cb364f9b6bfa393014d4[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Nov 6 10:15:21 2019 +0100

    transform: updates doc about compress_whitespace
    
    And removes duplicate test from strip_whitespace

[33mcommit 2b581fa8361931669a9e4c4b07b0079d35eb92c9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 24 20:13:30 2019 +0100

    qa/banned-functions: remove strndup now we have a fall back

[33mcommit 18a1d93c58902632d8214d0c52a67adfeacdbbcd[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Nov 30 19:07:05 2019 +0100

    qa/coccinelle: fix make distcheck
    
    We need to use top_srcdir to know where the sources are. Relative
    directory is not enough.

[33mcommit 7a8ddf06de96f99264193dda34f1f7dc9decb0b5[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Nov 30 18:24:06 2019 +0100

    qa/coccinelle: flag check for setter and getter
    
    WHen adding something like
    /* coccinelle: AppLayerParserStateIssetFlag():4,2:APP_LAYER_PARSER_ */
    the coccinelle check will consider that AppLayerParserStateIssetFlag
    is taking 4 parameters and that the second one is a flag that needs
    to be checked against APP_LAYER_PARSER_.

[33mcommit 3ded7f1170f7ab1a5b6f0fa58c04cb2949ec525f[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Nov 30 17:20:44 2019 +0100

    qa/coccinelle: fix false positive in setter getter
    
    Coccinelle test was doing a false positive on the function
    AppLayerParserStateSetFlag and AppLayerParserStateIssetFlag.
    To address that, this patch adds a new coccinelle markup:
    
     /* coccinelle: AppLayerParserStateSetFlag():2,2:APP_LAYER_PARSER_ */
    
    It indicates that AppLayerParserStateSetFlag is a setter and getter
    and that the checks should be disabled inside the function.
    
    Currently this markup is only used for that but following patch will
    add some checks on option value.

[33mcommit f745f0655b36f6ef1caf2ae057f822038d1d44d9[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Nov 30 11:20:06 2019 +0100

    qa/coccinelle: port struct-flags.py to Python3

[33mcommit b58d508bff6c4458edef4e266b71d7f6d5c98dea[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Nov 30 11:17:50 2019 +0100

    qa/coccinelle: reformat struct-flags.py

[33mcommit ba6b58a0da330d98ca81363b91d63226bbb81271[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Nov 21 18:26:49 2019 +0100

    qa: generate struct-flags.cocci at each run

[33mcommit 50bb8d4cb25d8e4c4c4d7f70973b1f38e41dc9b1[m
Author: EmilienCourt <emilien.court@telecomnancy.eu>
Date:   Wed Dec 4 11:07:26 2019 +0100

    doc: fix typo on example
    
    Quotes have been forgotten in the dnp3.data example, which throws an
    SC_ERR_INVALID_SIGNATURE(39) if used like in the example.

[33mcommit 8f4f1cb633c6c7b1feb2648869a1d9cd2b4594eb[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun Dec 1 13:15:34 2019 -0500

    detect/analyzer: Improved fast pattern display
    
    When transforms are part of a rule, improve information displayed with
    fast patterns to include the original buffer name and whether any
    transform(s) are applied.

[33mcommit c88c1f1e14eec51c34f3de962424ee7fe55a2a85[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Nov 27 14:42:20 2019 -0500

    detect/analyzer: Suppress direction warnings
    
    This commit suppresses direction warnings by the rules analyzer for ICMP
    and ICMPV6 since it's not actionable.

[33mcommit 83bbe287e7d2713669990dee41181d33f7cd571b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 5 09:20:31 2019 +0100

    stats: fix stats not always syncing in flow timeout

[33mcommit ba3a2c31bf0544e531789d88b19cefd8f5c75dd9[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Nov 27 12:47:01 2019 -0600

    app-layer: validate TX detect flag callbacks
    
    Check that both are set or unset.

[33mcommit 706558d4d5211c545b779be43eb1b3fe28b3b876[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Nov 27 09:50:40 2019 -0600

    enip: add tx detect flags

[33mcommit cb62c8dacffd787795c2f30b12b05342ab70d37c[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Nov 26 16:18:51 2019 -0600

    dcerpc: add tx detect flags

[33mcommit e2c846d01fd9ae8f05aa8b2014cc0d736c013cec[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Nov 26 16:08:18 2019 -0600

    snmp: add tx detect flags

[33mcommit 21f014f5c3fa03ca5be8e4ee161842b62febcf21[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Nov 26 16:01:09 2019 -0600

    modbus: add tx detect flags

[33mcommit fa4b9d37c2c2d8204aaea209d91734c57c337b19[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Nov 21 12:26:32 2019 -0600

    krb5: register tx detect flags
    
    Related ticker #3345:
    https://redmine.openinfosecfoundation.org/issues/3345

[33mcommit 8a232be77e4e766ea5618319b1553e1d2a7749ee[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Nov 26 13:25:04 2019 -0600

    rust: define TxDetectFlag struct and binding macros
    
    Define a TxDetectFlag type and macros to generating C
    bindings for getting and settings the tx detect
    flags.

[33mcommit cde49ec24660bfab7cd2dc0d14cb08a16654ba4c[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Nov 19 13:44:31 2019 -0600

    rust: add tx detect flags function to registration struct

[33mcommit 20bc08a72271a6b7237efd663765c872e6d8125e[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Nov 19 13:42:24 2019 -0600

    app-layer: add tx detect functions to register struct

[33mcommit fdb587d2fc93ea82e69834f0df6b6e78c2bf4557[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Nov 25 16:57:06 2019 -0600

    detect-engine: check for tx detect flag support
    
    When registing a detection engine, check that the app-layer
    protocol supports tx detect flags. Exit with a fatal
    error if it does not as this is a code implementation
    error that should be resolved during development.

[33mcommit b1beb76fd7c6fac527c723139088f4a97a9f5d50[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Nov 25 16:56:50 2019 -0600

    ftpdata: add tx detect flags

[33mcommit 62e4211f042679f337cf830bb81a268d5d54618b[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Nov 25 16:55:08 2019 -0600

    debug: add SCReturnBool function exit macro

[33mcommit 739df21e2d87fe195a09334f66409f458711f3f8[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Nov 25 16:51:44 2019 -0600

    app-layer: method to see if parser supports tx detect flags
    
    Add method to check if a parser for an app-layer protocol
    supports tx detect flags.
    
    This is a bit of a hack for now as where we need to run
    this check from we do not have the IP protocol.

[33mcommit 3887f8d1f3d2816b3f46fb48560f9de57ae66314[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Sat Nov 23 23:36:48 2019 -0600

    github-actions: builds for our tier one linux distributions
    
    Example of using GitHub actions to perform builds across
    CentOS, Ubuntu, Debian and the latest Fedora.

[33mcommit 218a5c43452842369bd98ca61ae736166f2e8922[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Nov 23 14:47:11 2019 -0500

    mpm: Fix typos and spelling errors

[33mcommit aef24bee96fe7d1495162b9142ee808a87d7d9d8[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Nov 23 14:43:41 2019 -0500

    detect: Fix spelling errors

[33mcommit f318a46d34b29bd5b0a5c9cafdbe3376f1cd4d7d[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Nov 23 14:35:40 2019 -0500

    detect: Improve handling of variable values
    
    When one of offset/depth/distance is from a variable, adjust the depth
    by the offset as is done with scalar values at parse time.

[33mcommit db8527e7b39162799c2997cfc2683d4a0473274e[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Nov 23 14:33:38 2019 -0500

    detect/mpm: Improved handling of variable values
    
    This commit removes the offset and depth if either of these values are
    dependent upon a byte-extract operation.

[33mcommit 94982ae6902ac5247068d07097511e0ef88ed370[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 23 22:25:02 2019 +0100

    http: split request/response tx id handling
    
    When HTTP pipelining was in use, the transaction id used for events
    and files could be off. If the request side was several requests ahead
    of the responses, it would use the HtpState::transaction_cnt for events
    and files, even though that is only incremented on complete requests.
    
    Split request and response tx id tracking. The response is still handled
    by the HtpState::transaction_cnt, but the request side is now handled by
    its own logic.

[33mcommit b82e71b95eb274959d2d942a09a9470d0e9097ca[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 22 16:32:43 2019 +0100

    files: remove FILE_USE_TRACKID flag
    
    Once it was optional but as it no longer is it is no longer useful.
    
    Remove it.

[33mcommit f9155aa1218808f0b26816438e87c2f45b3a51cb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 22 15:33:27 2019 +0100

    files: simplify pruning logic
    
    Since ebcc4db84ac2c1957a6cc23b5154d7d6333f4cb8 the flow worker runs
    file pruning after parsing, detection and loging. This means we can
    simplify the pruning logic. If a file is in state >= CLOSED, we can
    prune it. Detection and outputs will have had a final chance to
    process it.
    
    Remove the calls to the pruning code from Rust. They are no longer
    needed.

[33mcommit ab471c30541338aa9232b001436dec9b870e5ccb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 22 07:54:04 2019 +0100

    app-layer: don't consider tx flags if not registered
    
    If a protocol does not support TxDetectFlags, don't try to use them.
    
    The consequence of trying to use them was that a TX would never be
    considered done, and it would never be freed. This would lead to excessive
    memory use and performance problems due to walking an ever increasing
    list.

[33mcommit 54d362066211c2db0efdbd1daaade7c3f214b5f0[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Nov 19 17:21:10 2019 +0100

    source-pcap-file: honor bpf filter on command line
    
    When a BPF filter is given on the command line when reading a
    pcap file, the BPF filter is not honored.
    
    The regression has been introduced in:
    
    commit 3ab9120821e2b5cbc5925470bcfa5bcfb53f246b
    Author: Dana Helwig <dana.helwig@protectwise.com>
    Date:   Thu Apr 27 11:17:16 2017 -0600
    
        source-pcap-file: Pcap Directory Mode (Feature #2222)
    
    Reported-By: Tim Colin <tcolin@et.esiea.fr>

[33mcommit 860f43753c720204058f5c322e4fe26673267475[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Nov 19 17:28:05 2019 +0100

    source-pcap-file: fix memory leak on pcap filter

[33mcommit 20e06f45c037d0943d58e6eb1d8b4f4f602032f0[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Nov 1 08:48:56 2019 +0100

    util: removes warning about double conversion
    
    From clang 10 :
    implicit conversion from 'unsigned long' to 'double' changes value
    from 18446744073709551615 to 18446744073709551616

[33mcommit 502a8b5fb324cc6c7dfdbaf0f2ce4a3c6877e734[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 19 16:47:47 2019 +0100

    detect: fix inspection buffer for packet engines
    
    Fix buffers not being reset per inspection round for packet engines.
    
    Bug #3341.

[33mcommit 58b9a2dc2135e491307f6aeb32d007ee325ca458[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 25 19:45:42 2019 +0100

    threading: add debug validation for stale packets

[33mcommit fe9aeed0f0e65da7e7f61b5722580efc86f6355a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 8 12:09:24 2019 +0100

    threading: fix shutdown race condition
    
    A BUG_ON statement would seemingly randomly trigger during the threading
    shutdown logic. After a packet thread reached the THV_RUNNING_DONE state,
    it would sometimes still receive flow timeout packets which would then
    remain unprocessed.
    
    1 main:   TmThreadDisableReceiveThreads(); <- stop capturing packets
    2 worker: -> TmThreadTimeoutLoop (THV_FLOW_LOOP) phase starts
    3 main:   FlowForceReassembly();           <- inject packets from flow engine
    4 main:   TmThreadDisablePacketThreads();  <- then disable packet threads
    5 main:   -> checks if 'worker' is ready processing packets
    6 main:   -> sends THV_KILL to worker
    7 worker: breaks out of TmThreadTimeoutLoop and changes to THV_RUNNING_DONE.
    
    Part of the problem was with (5) above. When checking if the worker was
    already done with its work, TmThreadDisablePacketThreads would not consider
    the injected flow timeout packets. The second part of the problem was with (7),
    where the worker checked if it was ready with the TmThreadTimeoutLoop in a
    thread unsafe way.
    
    As a result TmThreadDisablePacketThreads would not wait long enough for the
    worker(s) to finish its work and move the threads to the THV_RUNNING_DONE
    phase by issuing the THV_KILL command.
    
    When waiting for packet processing threads to process all in-flight packets,
    also consider the 'stream_pq'. This will have received the flow timeout
    packets.
    
    Bug #1871.

[33mcommit 825173a2baa988ab51ded416811070363f945f7d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 8 11:35:02 2019 +0100

    threading: fix flow timeout loop race

[33mcommit 56354afd4113c38a72042dd5a5fa3f2b91c2b5b2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 3 10:37:42 2019 +0100

    threading: improve thread queues checking by dumping more info

[33mcommit 0a809bf577d08cb15a93fe56bd15c460607d7384[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 7 08:57:20 2019 +0100

    packet: set unique pkt_src 'flush' packets
    
    Set unique type for capture timeout and for detect reload flush
    to assist in debugging.

[33mcommit 6bc76368269830ed4e19833c29764307548bd174[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 13 10:38:46 2019 +0100

    stream: remove unused code
    
    Remove now unused 'pkt_src' type as well.
    
    Remove related unittests.

[33mcommit 1633744fcb8878715c10e5ec991e9a9ed21aeb0f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 13 10:53:36 2019 +0100

    nfq: remove unused queue handler type

[33mcommit ab01cbe345554df7f453b02e537d399f1bcf36f2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 9 20:36:31 2019 +0100

    log-pcap: remove stale comments

[33mcommit 6de025bb125b2e40d7f383ad1fd96463d81b0d53[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 9 20:35:39 2019 +0100

    alert-syslog: remove stale comments

[33mcommit 90c2e3561c655c9485990e6032bcaa4abddfd767[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun Nov 17 15:09:11 2019 -0500

    Add general purpose `ARRAY_SIZE` macro
    
    This commit adds `ARRAY_SIZE` as an helper for determining the number of
    elements in an initialized array. The calculation is the same but the
    macro provides a convenient shortcut. The implementation was borrowed
    from the kernel sources.

[33mcommit ae198add6da9d87b0f30d0bb64f7aafba65efd62[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Sep 3 17:57:54 2019 -0400

    detect/analyzer: Refactor engine analysis code
    
    This commit changes the analysis code to be table driven to better
    identify the rule elements covered by the analysis.

[33mcommit 6e63c957ffc4d0317ec2d16b3c865a071d716b1a[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Nov 1 09:23:06 2019 +0100

    signature: Fixes memory leak in parsing app layer event

[33mcommit fccbd36d37dd630a76584b3a7ac6083f4c2eb3ed[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Nov 18 12:58:06 2019 -0600

    dns: log addresses in flow direction, not packet
    
    Ticket #3340.
    https://redmine.openinfosecfoundation.org/issues/3340

[33mcommit 0824b0413455b668777e83cabe9fbc0ea81c400a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 24 14:51:48 2019 +0200

    filestore: don't assume flow is TCP
    
    Filestore can be used by UDP based protocols as well. NFSv2 is one
    that Suricata supports.
    
    Bug #3277.

[33mcommit 2a55afbd89d484eb738f1cae2054f864448c6c1a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 20 07:50:32 2019 +0200

    decode/pppoe: fix potential crash in debug statement

[33mcommit 51ad701d8e0c448b8a79ea7666e236809ab271cc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 19 10:12:44 2019 +0200

    version: starting work on 5.0.1

[33mcommit 2ab7fb4b416439c26597cc336a808a848f90be4d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 19 10:10:28 2019 +0200

    version: automate and cleanup ver handling
    
    Create a single function to return the version string, to avoid lots
    of ifdefs in multiple places.
    
    Make the version determine the 'release' status. If the version from
    autoconf has '-dev' in the name, it is not a release. If it hasn't
    it is considered a release version.

[33mcommit 51ec980e803002aba695dc91c542646b64d7ded4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 30 13:31:39 2019 +0100

    dataset: fix string length handling in hash

[33mcommit 1721da91ef005b53622f8d0d427645c01568ac68[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Oct 29 10:55:59 2019 +0100

    dataset: fix hash computation

[33mcommit 64a789bbf6b7e297048e574f21f7a084c54f307b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 18 12:02:03 2019 +0200

    nfq: clear memory of queue before using it
    
    Avoids using uninitialized memory. Show showed itself
    in nonsense values in counters, and in nfq_handle_packet
    errors that were likely the result of passing uninitialized
    memory to the nfq API.
    
    Bug 3263.
    Bug 3120.
    
    Fixes: b2a6c60dee83 ("source-nfq: increase maximum queues number to 65535")

[33mcommit 2fd1174a56adc34bd8ff748caee2394f6bfc022e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 18 10:54:15 2019 +0200

    nfq: micro optimization

[33mcommit 9d6087f7d6e8f102aee6f6e1e3803b0cc3d194a4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 18 10:49:56 2019 +0200

    nfq: don't warn on 'handle_packet' error
    
    NFQ can generate warnings/errors with a delay. After Suricata has
    succesfully passed a verdict to the kernel, there are still things
    that can go wrong for that verdict. This is then passed to the
    queue through a netlink error message, which leads to nfq_handle_packet
    returning an error code.
    
    Suppress the warning. Also remove the errno/strerror use as
    nfq_handle_packet does not set the errno.
    
    Thanks to Florian Westphal.
    
    Bug 3120.

[33mcommit f8acad7fca88552fb9b807ab5d7bd651bc7784cd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 18 10:49:18 2019 +0200

    nfq: code cleanups

[33mcommit f280e66f8402d87b2569d413205cd44c0075bb77[m
Author: Alexander Gozman <goal81@gmail.com>
Date:   Tue Sep 3 22:52:23 2019 +0300

    nfq: check for EAGAIN after recv() call in NFQRecvPkt()

[33mcommit 4cc90e9a4ce2d96af164eedd445dba05f269ac5b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 18 10:30:57 2019 +0200

    nfq: minor code cleanups

[33mcommit 01cea2ec890c65820065979df33f79794dd5737e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 18 10:10:32 2019 +0200

    datasets: suppress noisy debug statement

[33mcommit 505b2dd256b2686e7ca27de43969c89218988bfa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 18 10:08:18 2019 +0200

    log-pcap: don't print (null) for compression method

[33mcommit fb26268c6b758569eab2e29b09ecbc599f5ed112[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 17 15:42:15 2019 +0200

    tcp: don't set event on empty SACK opt
    
    TCP_OPT_INVALID_LEN was set if the opt len was 2. While useless
    an empty SACK is not uncommon.
    
    Seen on an iOS device talking to an Apple server.
    
    Bug #3254.

[33mcommit aae76a84cd90ad3699f28da1ffa33e6187472127[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 14 12:58:57 2019 +0200

    suricata: use version from autoconf

[33mcommit 9ef2f81ee7f8f7b1a457edc38d5aef63f67d3ad6[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Oct 12 17:39:54 2019 +0200

    doc/userguide: fix typo

[33mcommit 821d590f5b9fb646d3ca76624cc4c3f80de78f49[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Oct 12 17:37:20 2019 +0200

    doc/userguide: fix base64 example
    
    Add a sticky buffer example and fix the content modifier one.

[33mcommit 2d11e9394c6d5c771bdeb98e30def0b6a9af5747[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Oct 12 17:33:32 2019 +0200

    detect-base64: fix url in list keywords commands

[33mcommit 8e6a2bd42e797ce270667444fba3e4b68dad409a[m
Author: Pascal Delalande <pdl35@free.fr>
Date:   Wed Oct 16 21:41:17 2019 +0200

    doc: removal of disable-rust and path typo for suricatasc

[33mcommit 6eada54fc8b78c09050295f5c99d5edc08fe392f[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Oct 16 09:03:14 2019 -0600

    eve/dns: don't log warning if dns log version not set
    
    If the DNS log version is not set, we default to v2. This should
    not be warning, but better logged at the config level.
    
    A warning will still be logged if the value is set but is not
    1 or 2.

[33mcommit 989a6461b0f4d77a85bc4b64b355eafe7d7d36f2[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Oct 11 10:11:56 2019 +0200

    signature: leak fix in DetectAddressParse2

[33mcommit c1e41632c1aa2e631738474f9b78f9b761b107bd[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Jul 12 11:17:59 2019 +0200

    config: use logging instead of stderr

[33mcommit bf1b65558b23f8a70dd07529c3c4234cf2a51297[m
Author: Wesley van der Ree <wesley.vanderree@fox-it.com>
Date:   Tue Oct 15 15:08:58 2019 +0200

    mpls: Allow MPLS after vlan.
    
    Fixes #2771

[33mcommit 7cca9005fb09458c2c70374d96c24b5b61f337b6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 17 07:51:01 2019 +0200

    dns: minor cleanup

[33mcommit 4164c0bbd6d87379371de6303ba185864a6b2122[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 17 07:38:46 2019 +0200

    app-layer: make dns,smb,tls parsers less noisy w/o config

[33mcommit 0526878feeac3c77bc531ebbcf1e007af7c843d6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 17 07:28:33 2019 +0200

    detect/tls: set alternatives for legacy tls keywords

[33mcommit 3019f10ac796954dcda7ebe53587f529800132c7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 17 07:27:55 2019 +0200

    detect/tls: tls.cert_fingerprint is a sticky buffer
    
    Not a content modifier.

[33mcommit d5ae68afc2de6fbd252bad49efe081235f241c6d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 15 12:17:14 2019 +0200

    doc: fix version in install doc

[33mcommit 1c27a998277b700d8966e23729e0c000dc0c20bc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 7 10:40:29 2019 +0200

    doc: add upgrade page

[33mcommit 697410cbbfe351afd307424bab5590955a1b95ae[m[33m ([m[1;33mtag: suricata-5.0.0[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 13 10:26:30 2019 +0200

    changelog: update for 5.0.0

[33mcommit 3b5b71afa0e8b04dbeb2b3d78828d3c01750bedb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 13 10:28:58 2019 +0200

    changelog: update 5.0rc1 section with missing entries

[33mcommit 412ae11badba767be5a4168b753b4b8e6eeae218[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Sat Oct 12 08:37:38 2019 -0600

    automake: use tar-ustar for longer filenames
    
    According to the automake manual it should be considered
    portable these days.
    
    https://www.gnu.org/software/automake/manual/html_node/List-of-Automake-options.html
    
    Required for the dist generation with Rust vendoring.

[33mcommit 718fcbb682e4e2ee4583502e344518091fe08562[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Sat Oct 12 10:02:19 2019 -0600

    doc: document eve/dns v2 as the default
    
    Adds eve/dns v2 format documentation. Update legacy format
    to require the version field.

[33mcommit 16221c0b33f1b83277ccc9c7e1ddacc2f6d497a6[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Sat Oct 12 09:59:46 2019 -0600

    suricata.yaml/dns: small cleanups, not that default is v2
    
    Note that the eve dns log format is version 2 by default.
    
    Make the value of commented out values their default.
    
    Update the comment on the types to better reflect what it does.

[33mcommit 42452b327c7a5e3813a89d8e219b710c02cf7b2b[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Oct 12 10:35:53 2019 -0400

    mem: Use correct len with strlcpy

[33mcommit b026fbb519bf5822433bcda281316d6156db19e4[m
Author: Fabrice Fontaine <fontaine.fabrice@gmail.com>
Date:   Fri Oct 11 10:55:51 2019 +0200

    configure.ac: fix static build with pcap
    
    pcap can depends on nl-3 so use pkg-config to find these dependencies
    otherwise all AC_CHECK_LIB calls will fail when building statically
    
    Signed-off-by: Fabrice Fontaine <fontaine.fabrice@gmail.com>

[33mcommit 8cf4afabc3bf015cb44c701290017a8f7295dc8f[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Oct 11 11:11:27 2019 -0600

    Makefile: prefix suricata-update error with @
    
    So only the echo output is displayed. Not the lines themselves.

[33mcommit 03da49bfaa62a6901ab29058b3e991b2d4ae10ec[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Oct 11 11:11:05 2019 -0600

    suricata-update: don't install if requirements not met
    
    Don't try to run suricata-update if its not installed.
    
    The 'make install-rules' target would try to run suricata-update
    when it was detected that it was bundled, but didn't consider
    if suricata-update was actually installed.

[33mcommit d19ded6c43c78fb01aca6a93beaaeeeac53a73d6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 11 14:25:10 2019 +0200

    stream: fix progress for min_inspect_depth
    
    Make sure progress don't exceed raw_progress.

[33mcommit 5f15e7c6a4cfd70018e6ac2bb3620d132bacafa7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 11 12:47:29 2019 +0200

    smtp: implement min_inspect_depth logic
    
    Implement min_inspect_depth for SMTP so that file_data and
    regular stream matches don't go out of sync on the stream start.
    
    Added toserver bytes tracking.
    
    Bug #3190.

[33mcommit 58e48bcb875cb16d62e6fb6ac52104b05b3f260c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 11 12:47:10 2019 +0200

    debug: make it easier to trace flush logic

[33mcommit 728d19eaac69ef59d0549ff2708d2ece9ea35edf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 11 12:32:09 2019 +0200

    configure: don't print ERROR if we don't exit

[33mcommit 876f05aa28f868b9576ece4ed23dd98e1090a617[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 11 12:24:23 2019 +0200

    eve/dhcp: remove leftover template comments

[33mcommit 9716c24ba1508925e7403c7203126313ceab3379[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 11 12:23:05 2019 +0200

    eve/alert: clean up proto metadata
    
    Use a switch statement to select the protocol specific function.

[33mcommit f66e12f7afc42f77fda9f3fc18520e4e781850ed[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 11 12:17:27 2019 +0200

    dns: rename rust files and funcs

[33mcommit 842037d32736e4eebee512cc55413f547b615741[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 11 12:10:23 2019 +0200

    jansson: remove explicit <jansson.h> includes
    
    Header is included from suricata-common.h

[33mcommit edd2cd626fb126646c630bbf271f0d055898d62d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 11 12:06:59 2019 +0200

    jansson: remove HAVE_LIBJANSSON guards

[33mcommit b4318a11e3ea21923761adab09bc695387e40ba9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 11 11:21:41 2019 +0200

    rust: remove build system HAVE_RUST guards

[33mcommit 5e9714e384e31dc52922d8516415b6c94a6ffd54[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 11 11:19:14 2019 +0200

    rust: remove all HAVE_RUST guards

[33mcommit 6921608673fe35a8d1bda58c5698e24dde16c446[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Oct 1 14:19:35 2019 +0200

    http: updates suricata.yaml comments
    
    As well as the userguide documentation about suricata.yaml

[33mcommit c44f82cf4ce08e0f307a6ce6753049269bb968b4[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Oct 10 16:32:21 2019 -0600

    configure: fix python major version check on python 2.6
    
    Python 2.6 doesn't use a named tuple for the version info,
    instead use the index of the major version which works
    on Python 2.6 upwards.

[33mcommit a3cdef2b4dd0d1c9618a7990941867032001914a[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Oct 9 09:18:31 2019 -0600

    rust: run tests with same features as build
    
    Cargo check wasn't being passed --features so could have a different
    configuration than the build.

[33mcommit 389272f4c7c36cbe39d726be4dddf22c398305a9[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Oct 9 01:05:24 2019 -0600

    rustup: handle rustup for sudo and su
    
    If rustup is in use, and a user uses sudo or su for the make
    install, the install may fail with a "no default toolchain"
    error.
    
    To prevent this, detect at configure if rustup is being used,
    then set RUSTUP_HOME for all calls to cargo.

[33mcommit 1b6eee829f6f5a64ec1a4127bf5ea601595d1ae3[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Sun Sep 22 16:11:55 2019 -0600

    python: fixes for installing from path with spaces
    
    Related to Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/2668

[33mcommit 6e981fd15a6a6e7277fef8078d6736f0d2c9db25[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Sep 20 15:58:53 2019 -0600

    rust: fix build when source directory has spaces in it
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/2668

[33mcommit a1ee536daa8ba5519745d6a1d3c4a6016a85eb7f[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Oct 8 23:50:34 2019 -0600

    configure: no, followed by reason for python tools
    
    This:
      Install suricatactl:                     no, requires distutils
    instead of this:
      Install suricatasc:                      requires distutils

[33mcommit 109cf36866ee8743e94f44857f182ad76a4cc5f6[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Oct 8 23:33:24 2019 -0600

    configure: generic instructions for missing python modules
    
    Instead of telling the user what packages to install for missing
    Python modules, give generic instructions about what module
    needs to be installed.
    
    It is getting tricky to get these package names correct
    across distributions.

[33mcommit 26dcef1290cfabdcabc044107d6e28dde75c35f0[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Oct 8 15:34:26 2019 -0600

    suricata-update: build before install
    
    Run the Python build independent of install. Prevents files
    in the tree becoming owned by root.

[33mcommit c4b856ea9922fa52e039aa6f843bc8ad9d526bd3[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Oct 8 22:56:35 2019 -0600

    configure: detect python major version
    
    For informational purposes only when notifying what Python
    modules are required during ./configure.

[33mcommit 00ad7a911faffe5e82f1cb7902f36597e6650910[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Oct 8 09:43:12 2019 -0600

    configure: don't detect python version
    
    Don't detect the Python version, it is not needed anyways,
    all we need is the Python path.
    
    Also, python2 --version prints to stderr, while python3
    prints to stdout, leading to some odd output during
    ./configure (but fixable).

[33mcommit 9111b9df57db279b02baf0c4fc64991be40a54f2[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Oct 3 09:29:14 2019 -0600

    doc: cleanup enging logging
    
    Attempt cleanup the engine logging a bit.
    
    Also a include a verbatim excerpt of the default configuration
    here for reference purposes.

[33mcommit c97195bf0bc562a94b27af4ccc183e8161d2fd5a[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Oct 2 16:49:50 2019 -0600

    doc: -v verbose option documentation update
    
    Update -v documentation to reflect the new behaviour discussed
    in bug #1851 where -v changes the log level to fixed levels
    instead of an offset of the default log level configured
    in suricata.yaml.

[33mcommit 8425259c883707442b4a7ffe7f06fb2c3b3686ac[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Oct 2 16:45:31 2019 -0600

    help: better description for -v
    
    -v: be more verbose (use multiple times to increase verbosity)

[33mcommit 71c53484eea030b4710ddd253d49785ae235aa36[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Oct 2 16:38:50 2019 -0600

    logging: used fixed levels of verbosity for -v, -vv...
    
    Change the meaning of the verbosity flag to change the log
    level to fixed levels instead of being relative to whats
    configured.
    
    -v    => INFO
    -vv   => PERF
    -vvv  => CONIFG
    -vvvv => DEBUG
    
    But do now allow -v to decrease the verbosity.
    
    Bug #1851

[33mcommit 89634b65084fc80e11c177d26d0122cb71638ce2[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Oct 2 16:23:05 2019 -0600

    logging: respect individual log levels
    
    The log level of individual loggers (console, file, syslog) was
    being capped by the default log level. For example, if the
    default log level was notice, setting the file level to info
    would still result in notice level logging.
    
    Bug #3210

[33mcommit 808ea0dba9ee68d0e0359bf94aa6fd7575f4e34d[m
Author: Konstantin Klinger <konstantin.klinger@dcso.de>
Date:   Fri Oct 4 15:46:15 2019 +0200

    app-layer: remove obsolete msn protocol detection

[33mcommit 6d2bd6607e2b1a992a93709b99c56d59f8d6b59b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 10 07:39:12 2019 +0200

    datasets: make clear the feature is experimental

[33mcommit ebecaca7eacc06d5943088162b787cf43004697e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 9 17:37:08 2019 +0200

    eve/anomaly: enable by default
    
    Default config will only enable 'app-layer' type within the anomaly
    logger.

[33mcommit ea3d9c32304ec5e291224e5f169e2135b09fd7c1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 9 17:35:02 2019 +0200

    htp: require 0.5.31

[33mcommit 514c7c1a048aeb9a6137d639085a0d3c6f0ef88f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 9 17:12:00 2019 +0200

    yaml: minor improvements

[33mcommit cec80670017b2a1fab03d8b5d782e429c6345d6e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 9 17:01:50 2019 +0200

    yaml: clean up 'autofp-scheduler' option

[33mcommit d514a38913314a9f412294aee6bcc9fbff297b7f[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Oct 5 09:57:18 2019 -0400

    log/anomaly: remove leading underscore from static var

[33mcommit 17c3e22ecd4dae396f0de9603f01369504403b60[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Sep 28 09:02:18 2019 -0400

    doc/eve.alert: Expand metadata description

[33mcommit 95879c0d5ab402d63392f983358bb0449336082a[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Sep 28 09:00:24 2019 -0400

    logging/alert: Warn if metadata not selected
    
    Warn when HTTP body logging has been selected but applayer/metadata
    logging is not configured.

[33mcommit 883cad1a865a02ad83732d93923f40285b023217[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Sep 28 08:59:04 2019 -0400

    logging/anomaly: Clarify anomaly logging
    
    Clarify the description of the anomaly logging types.

[33mcommit af615baaf700506476a168d57d26f1367c4907d4[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Sep 28 08:57:29 2019 -0400

    logging/alert: Expand alert logging description
    
    Clarify the configuration requirements for alerts and http-body logging.

[33mcommit 354074bac68b4d6356f2fcd9fd60a322268a51ce[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Oct 8 20:14:23 2019 -0400

    ftp: Handle malformed RETR/STOR
    
    Ensure that RETR (STOR) have a filename -- otherwise, treat the command
    string as malformed.
    
    Added unittests for each command and verified that SEGV's occur without
    parser change and no longer occur with the parser change.

[33mcommit 61becb29bf2bcce5febd7f98e09b0006d217c8cb[m
Author: Fabrice Fontaine <fontaine.fabrice@gmail.com>
Date:   Sun Oct 6 09:53:23 2019 +0200

    configure.ac: fix --disable-geoip
    
    $enableval should be used to know if the user has passed --enable-geoip
    or --disable-geoip
    
    Fixes:
     - http://autobuild.buildroot.org/results/a7a34f760ae5fe0922fdb720b8234dbcd85ed222
    
    Signed-off-by: Fabrice Fontaine <fontaine.fabrice@gmail.com>

[33mcommit 99d9e09599e7dce7151d3eec4d112f8090a299a2[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Oct 1 10:00:29 2019 -0600

    config: install classification.config (and ref) to $datadir
    
    Install classification.config and reference.config to $datadir,
    where they can be updated on every upgrade.
    
    This required moving them into a sub-directory for autotools
    to do its thing.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/3209

[33mcommit 7609adb05d0cb88316afbeb33493fc8c9073043c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 8 21:48:24 2019 +0200

    Revert "runmode: consider test mode a user mode"
    
    This reverts commit 6dca50a322b08bbd6391f091787671305649671a.
    
    The test mode should actually test in system mode by default as
    that is what tools like Suricata-Update need before issuing a
    reload command.

[33mcommit 0771eb1e0ecd68cb1bf7ec2dbf80bd4ea0928005[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 7 16:02:16 2019 +0200

    detect/ja3: print error for one rule only
    
    Use 'silent error' logic for any other rules using ja3 as well.

[33mcommit 4d44ca77393aad5deecef46a9bb375bf5de2345b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 7 15:50:09 2019 +0200

    detect/parse: allow signature parsing to fail silently
    
    A sigmatches 'Setup' function may indicate it intends to fail
    silently after the first error. It will return -2 instead of -1
    in this case.
    
    This is tracked in the DetectEngineCtx object, so errors will
    be shown again at rule reloads.

[33mcommit aa5a6ab5f1a4f146efbc11ab450488a26b6605c4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 7 13:09:02 2019 +0200

    detect/parser: minor cleanup

[33mcommit c582fd28d97f385d1223c2b21c64a1d67068ea61[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 6 12:01:32 2019 +0200

    tls/ja3: allow 'auto' setting for ja3

[33mcommit ca5226f0c76c873c6bd06f7e9d2b7c25291d4842[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 3 13:30:53 2019 +0200

    tls/ja3: try to enable ja3 if rule keywords need it

[33mcommit 29dcd98ed13f54c0b4510cb4e4ce857f78a17f69[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 3 13:26:43 2019 +0200

    tls/ja3: add way to check active config

[33mcommit 788c9f8f11cc45d832b642daecb8df8b5e424b74[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 3 12:51:08 2019 +0200

    tls/ja3: don't disable; allowing runtime enabling

[33mcommit 4cd3b846066d071eb3c0e3cef92e2a9f6acbde43[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 3 12:48:00 2019 +0200

    tls/ja3: allow dynamic enabling of ja3

[33mcommit 09882ec4cb9e26a6d15758515a964059e69bf072[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 3 10:39:06 2019 +0200

    detect/reference: implement strict parsing option

[33mcommit 89a717d41c505857966df58398f7feb30893baeb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 3 10:36:03 2019 +0200

    detect/classtype: implement strict parsing option

[33mcommit b5521b58bca49b9c55af5cb658b10e1d255ed817[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 3 10:32:42 2019 +0200

    detect/parse: add --strict-rule-keywords option
    
    Add --strict-rule-keywords commandline option to enable strict rule
    parsing.
    
    It can be used without options or with a comma separated list:
    --strict-rule-keywords
    --strict-rule-keywords=all
    --strict-rule-keywords=classtype,reference
    
    Parsing implementations can use SigMatchStrictEnabled to check
    if strict parsing is enabled for them and act accordingly.

[33mcommit 88e26ea91464414fe5cebba014505624cfb56f88[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 3 10:17:20 2019 +0200

    detect: use named enum for keyword types

[33mcommit 0b40d4ae93e6f5214e4d3e5c3cbd277a08fb3a2f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 2 21:47:29 2019 +0200

    detect/reference: allow undefined references
    
    References are currently not used in Suricata, so erroring out on
    rules using a undefined reference is too harsh.
    
    Just issue a warning once per unique missing reference.

[33mcommit 61185cc9bad5e2d1254d4ebb3acff6ed36c0ac53[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 2 21:29:32 2019 +0200

    reference: change scope of add func to global

[33mcommit d17a3b3c2bb0df907567a2f2a8365c8f5ffb1227[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 2 15:01:29 2019 +0200

    reference: use global defines for size limits

[33mcommit e27895345522f925025b8fa9364e655dbe50edf2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 2 14:52:36 2019 +0200

    detect/reference: code cleanups

[33mcommit 523e91b231602419f6f7ba62be959ade82bd978b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 2 10:30:48 2019 +0200

    detect/classtype: check size of rule input

[33mcommit e5f6f384814ebb522cde24050f2c1c64e7d556ec[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 1 20:19:20 2019 +0200

    classtype: handle missing classification.config
    
    Still initialize the classtype hash table so that the classtypes
    rules use can be added to it.
    
    The file missing now reports a warning instead of error, as we
    will continue to work.

[33mcommit 517834e32710f0eeb93c6c19aa5d129feed4939c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 2 10:30:28 2019 +0200

    classtype: use global defines for size limits

[33mcommit 99bdb54d9fb8faafa8feee973a7705745dbcccfe[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 1 15:20:55 2019 +0200

    detect/classtype: show file and line for unknown classtype

[33mcommit 43b5234055f3ed69d53fe8486a1cf01aac1cc198[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 1 14:05:08 2019 +0200

    detect/priority: use global define for default prio

[33mcommit 954c43daf4eaa9e20c87a304731f79fd1f3aee04[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 1 13:22:01 2019 +0200

    detect/classtype: allow undefined classtypes
    
    Effect of classification on Suricata's working is minimal. Impact
    of adding undefined classtypes is large: rules will fail to load
    completely. This also leads multiple lines of log output per rule,
    which in a large ruleset can lead to excessive output.
    
    This patch changes the classtype keyword behavior. Instead of erroring
    and invalidating a rule, we will merely warn.
    
    The undefined classtype is then defined with a default priority,
    so other rules using the classtype will not also warn. This way
    there will be just a single warning per missing classtype.

[33mcommit 323a747f391ed65171659bdbd50fe7cdc711bebe[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 1 12:50:13 2019 +0200

    classtype: increase id size
    
    Switch from u8 to u16 to allow for more classtypes.
    
    Rename Signature::class to Signature::class_id to make it clear
    it is an id.

[33mcommit ccf6c5a6ef96615819699b204fbc922f3ddfe20f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 1 12:07:05 2019 +0200

    classtype: small memory reduction
    
    Reduce memory use by making sure SCClassConfClasstype
    has a more optimal memory layout.

[33mcommit 26e2370f99c9697f1d937d01c4d79b21eb5ff775[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 1 12:02:47 2019 +0200

    classtype: put UNITTESTS guards where appropriate

[33mcommit e104c3d9130d0f9e9533dbc8e71a7e0bc07ef7fc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 1 11:59:58 2019 +0200

    classtype: reduce scope of functions

[33mcommit a37e09cbe002e9ebd0f224cccae7145506720bbe[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 1 11:33:25 2019 +0200

    detect/classtype: change duplicate classtype behavior
    
    Detect duplicate instances and use the one with the highest
    priority.
    
    Use new priority flag to make the logic around explicit priority
    sets easier to follow.
    
    Minor code cleanups. Also clean up unittests.

[33mcommit c471d81f04f1b4b423db7c88a967e2c91512773a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 1 10:55:37 2019 +0200

    detect/priority: change duplicate priority behavior
    
    Introduce Signature init_flag to indicate priority has been set.
    This will be needed in a follow-up classtype update.
    
    Detect duplicate priority instances in a keyword, and use the
    highest priority in the rule. Do issue a warning in this case.

[33mcommit 828d2572f86164216d0128481cebf2e54046a953[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 1 10:37:51 2019 +0200

    detect: use BIT_U32 macros for INIT flags

[33mcommit 3fd4e7bd05cfbd4171b239a46ec3eda6b6f23b46[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 1 10:32:22 2019 +0200

    detect/priority: minor cleanups

[33mcommit bfee28db5e98fcab817e5220514dcdf32fc817aa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 1 10:25:11 2019 +0200

    detect/classtype: clean up error handling

[33mcommit 5e5761a29c98b8cbdeb575199cf2295f09891db2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 1 10:23:17 2019 +0200

    detect/classtype: warn on duplicate classtype
    
    Issue warning instead of erroring and invalidating the rule.
    
    It's not a very serious issue, so don't error out.

[33mcommit 282e1c2520e57f43b17609f4d6d60790327bec23[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 1 10:19:53 2019 +0200

    detect/classtype: fix parsing error checking

[33mcommit 2d0b3d73202861d2e7b1ed0487eea8a710e2f6d9[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Oct 8 10:23:08 2019 -0600

    detect/test: update test for file prune changes
    
    As the file prune is now moved to the flow worker, the file
    prune is run later, meaning the first file has not yet
    been pruned from the file container list.
    
    Adjust test to look for a second file, and check the
    flags on that file.
    
    For commit addressing bug 2490.

[33mcommit ebcc4db84ac2c1957a6cc23b5154d7d6333f4cb8[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Oct 7 16:20:02 2019 -0600

    file extraction: always prune files after detect
    
    If a keyword like filemd5 was being used without a filestore,
    or a file output enabled, it would be pruned before detection
    had a chance to match.
    
    Consolidate file pruning to the end of the flow worker so files
    are available for detection even when a file output is not
    enabled.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/2490

[33mcommit c7e4433fe942e440a47d7b14417b3bd4769b0db7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 8 14:19:42 2019 +0200

    afl/decode: fix stats related memleak reports

[33mcommit 8940a9d32630934ff3a50fa1e1dab1271f2f0348[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Tue Oct 8 00:02:40 2019 +0530

    afp: nicer error message in case of fanout failure
    
    Use clearer message in case fanout is not supported or cluster_id is
    already in use.
    
    Closes redmine ticket #1940.

[33mcommit ac55b21184c4a736e7bbd7ec0443ed397e718a1c[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Tue Oct 8 00:00:07 2019 +0530

    suricata: Check if default log dir is writable
    
    At the startup, if the default log dir provided either by command line
    options or suricat.yaml is not writable, the error comes quite later.
    This patch makes suricata exit if there is such an error in the
    beginning itself.
    
    Closes redmine ticket #2386.

[33mcommit 5fbb7cef0a747de786a693945dac4632ff9e203a[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Mon Oct 7 23:57:43 2019 +0530

    Makefile: Make libhtp available at install-rules stage
    
    So far when "make install-rules" stage was executed, libhtp path was not
    recognized as ldconfig does not run by this stage.
    Set "LD_LIBRARY_PATH" since we already know the path where libhtp would
    be.
    
    Closes redmine ticket #2669.

[33mcommit 4061bf5ceb28513759c97323d27236392a8ef38c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 5 10:52:30 2019 +0200

    doc/datasets: update example config to map

[33mcommit 6dca50a322b08bbd6391f091787671305649671a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 4 15:55:52 2019 +0200

    runmode: consider test mode a user mode

[33mcommit 914c5b7975753e62b0de42cc238437cb5ff43c52[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 4 15:48:23 2019 +0200

    datasets: fix error handling

[33mcommit 1021465f237ba34d2b6f76cd05871e032ed4ac58[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 4 10:03:33 2019 +0200

    datasets: improve and doc return codes

[33mcommit a2fcc304e7665356dfee3189af13128a6b6e2a63[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Oct 3 15:54:51 2019 -0600

    dataset: fix return value check on isnotset
    
    The dataset api returns -1 for not found.

[33mcommit c6cda99bcdeffce3fa775f0b2b414529e94bae11[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 3 17:12:00 2019 +0200

    thash: fix prealloc config setting

[33mcommit e264a0cee8f71e5fc7288423fbf73b5bec89c942[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 3 17:08:36 2019 +0200

    datasets: fix hash table config
    
    Example:
    
    datasets:
      ua-seen:
        type: string
        state: ua-seen.lst
        hash:
          hash-size: 100000
          prealloc: 1000
          memcap: 256mb

[33mcommit 9b64b6794b297a171347a4ea4d5f40333cb4a48a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 3 16:40:45 2019 +0200

    datasets: change config to map
    
    Example:
    
    datasets:
      ua-seen:
        type: string
        state: ua-seen.lst
      dns-sha256-seen:
        type: sha256
        state: dns-sha256-seen.lst

[33mcommit 1e50b2e404d9467740963a8f2c169c0cfc817206[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 4 07:36:56 2019 +0200

    lua: fix lua int size detection
    
    Failed to work with non-bundled htp and with some stricter
    compile flags.

[33mcommit f9c9548b74235647c57068c3962acce210a02b03[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Sep 27 15:33:45 2019 -0600

    configure: detect lua integer size
    
    Lua 5.1 and 5.3 use a different integer size. Run a test program
    to set the integer size used in the Rust FFI layer to Rust.

[33mcommit 342fa8ee26f1d00ec7d27fdeeb51d402a01add8d[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Sep 27 16:28:54 2019 -0600

    magic/test: remove NULL as format string
    
    Remove passing NULL as a format string parameter
    in test. Convert to FAIL_IF_NULL.

[33mcommit 5f1c8517164a11b871361487a33ea22140589f4c[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Sep 27 16:06:06 2019 -0600

    configure: remove unused LUA_PC_NAME.
    
    This variable is no longer used. Instead multiple
    lua pkg-config names are checked.

[33mcommit e4156b2f89f7237e908ca0e8c0d70ba4c25f82d9[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Mon Sep 30 14:44:50 2019 -0400

    config: update lzma size notes to match others
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 029683cbac14d6680f3e60daba527288bb2af995[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 3 16:01:15 2019 +0200

    doc: reformat linux ips guide

[33mcommit 6d9416148b8f4a40a45f95630ad172114adc5700[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Sep 29 10:46:17 2019 +0200

    doc: add nftables IPS configuration

[33mcommit 82eb669205ce7d845d2ed07466515196de467fab[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Sep 29 10:17:04 2019 +0200

    doc: information about scaling AF_PACKET IPS mode

[33mcommit ffe81dc9f2d3372d9522937e3d40560a2dc9f1d9[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Sep 28 22:06:50 2019 +0200

    doc: add info about AF_PACKET IPS
    
    Based on https://home.regit.org/2012/09/new-af_packet-ips-mode-in-suricata/
    
    Also fix some typo in Netfilter setup.

[33mcommit 0cd545219448f42b6975af1503425d6dc5b0540d[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Oct 1 09:30:21 2019 -0600

    doc: mark independent json loggers as deprecated
    
    This is the loggers such as alert-json-log, dns-json-log, etc.
    They are not even referenced in the default configuration file,
    and are easily replaced with multiple eve instances.

[33mcommit 0b02539ea94151ee8617fd31673b0a23a30d79eb[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Oct 1 09:13:22 2019 -0600

    drop.log: log deprecation warning if used

[33mcommit 6c2e9ac27c2bd942659503892b73c8b62bbc70a5[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Oct 1 09:10:23 2019 -0600

    suricata.yaml: mark drop.log as deprecated

[33mcommit 212252faf272ce364ad955b5a41a5240352f30e9[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Oct 1 09:09:10 2019 -0600

    doc/drop.log: mark as deprecated and scheduled to be removed
    
    Also make sure options are in sync with those in
    suricata.yaml.

[33mcommit 4e12984ac8bb4bbc2720c45f90821238e1f98f31[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Sep 30 11:35:24 2019 -0600

    suricata.yaml: mark unified2 as deprecated

[33mcommit 5345379d1489e18d6f325dbb3fd04995cf5f365f[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Sep 30 11:35:05 2019 -0600

    doc/unified2: add deprecation/removal notice

[33mcommit bfacedfad18f56124d94622233c4586294adaa48[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Sep 30 11:31:17 2019 -0600

    unified2: log deprecation warning when used

[33mcommit d891a8cb7909c2c2cf814d1325be78a951d37f0c[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Sep 30 11:22:43 2019 -0600

    config: remove all but a stub of file-store v1.
    
    Remove most of the file-store v1 configuration section and mark
    it as deprecated. Provide a link where to find the available
    options.

[33mcommit 57b4259640756d34c5d64c1086e6936841ceb58f[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Sep 30 11:16:59 2019 -0600

    filestore(v1): deprecation log warning when enabled
    
    Notify the user with a warning log that this feature is
    deprecated and will be remove in v6 of Suricata.

[33mcommit 873bc290bc010fa24eed9b2953ebc7a8a6ef2e2e[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Sep 30 11:16:11 2019 -0600

    doc/filestore(v1) - make deprecation text a note
    
    Highlights that is is deprecated in the HTML output.

[33mcommit 7f3282284325091dfbab9d8d144cdbd3e28f4821[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Sep 30 11:13:53 2019 -0600

    doc/filestore(v1) - document force-filestore field

[33mcommit 44a59b78c7d98ec69454dcf67917baf912649b1e[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Oct 2 20:49:36 2019 -0700

    doc/anomaly Remove event_no

[33mcommit 04ee27bcd25e83c9ff90ba7fbaa5348f263e1a04[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Oct 2 20:49:15 2019 -0700

    log/anomaly: Remove event_no from alert

[33mcommit be6cdd37f85de9c026f385cad48d4a9617923584[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 3 15:37:37 2019 +0200

    stream: remove fix stream.depth references

[33mcommit 10819ed892d5c6f275afcf3378b82ac617d854b7[m
Author: Peter Manev <pmanev@stamus-networks.com>
Date:   Thu Oct 3 11:15:27 2019 +0200

    doc: Update tuning considerations doc

[33mcommit 6df10019575f5c62adac3799593e28b49d718e4b[m
Author: Peter Manev <pmanev@stamus-networks.com>
Date:   Thu Oct 3 11:14:58 2019 +0200

    doc: Update high performance config doc

[33mcommit 9340769ad2a7ddcd0ac44a0c011b7cec41dab8e3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 28 10:55:34 2019 +0200

    enip: fix compile warnings in gcc-8
    
    In file included from suricata-common.h:471,
                     from app-layer-enip-common.c:27:
    app-layer-enip-common.c: In function ‘DecodeCIPRequestPathPDU’:
    util-debug.h:222:31: warning: ‘req_path_class8’ may be used uninitialized in this function [-Wmaybe-uninitialized]
                 int _sc_log_ret = snprintf(_sc_log_msg, SC_LOG_MAX_LOG_MSG_LEN, __VA_ARGS__);   \
                                   ^~~~~~~~
    app-layer-enip-common.c:589:13: note: ‘req_path_class8’ was declared here
         uint8_t req_path_class8;
                 ^~~~~~~~~~~~~~~
    app-layer-enip-common.c:607:9: warning: ‘segment’ may be used uninitialized in this function [-Wmaybe-uninitialized]
             switch (segment)
             ^~~~~~
    app-layer-enip-common.c: In function ‘DecodeCIPResponsePDU’:
    app-layer-enip-common.c:773:13: warning: ‘service’ may be used uninitialized in this function [-Wmaybe-uninitialized]
         service &= 0x7f; //strip off top bit to get service code.  Responses have first bit as 1
                 ^~
    app-layer-enip-common.c: In function ‘DecodeCIPRequestPDU’:
    app-layer-enip-common.c:503:25: warning: ‘path_size’ may be used uninitialized in this function [-Wmaybe-uninitialized]
         offset += path_size * sizeof(uint16_t); //move offset past pathsize
                   ~~~~~~~~~~^~~~~~~~~~~~~~~~~~
    app-layer-enip-common.c:506:5: warning: ‘service’ may be used uninitialized in this function [-Wmaybe-uninitialized]
         switch (service)
         ^~~~~~
    
    Bug #3139.

[33mcommit c769909dada7dd16c63180ce89ba3d160d371de3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 28 10:12:49 2019 +0200

    eve/stats: update warning for new default behavior

[33mcommit bd2f1e15fd1a065d12730367fc53b4ff3e9c7021[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 28 10:10:13 2019 +0200

    doc/stats: minor clarrifications on 5.0 defaults

[33mcommit 76e1836aeddfb71333771364c495ee981eeaeb24[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 28 10:05:02 2019 +0200

    counters: improve handling missing global config
    
    Improve warnings when eve.stats can't work because of the global config
    missing or disabled.
    
    Issue warning if global config is missing but stats are still enabled due
    to the legacy stats.log.
    
    Issue clearer warning when stats are disabled and unix socket dump-counters
    command is issued.
    
    Warnings include links to docs.
    
    Bug #2465.

[33mcommit 2d381f93f3f215f54cc97cee624e31f1522bb4b4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 28 08:16:45 2019 +0200

    stats: add global way to check if API is enabled

[33mcommit 9ccecdecb68e470bc64b256f2e18d009cd501b6e[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Sep 26 11:16:07 2019 +0200

    ebpf: make sure 'make dist' include eBPF files

[33mcommit 5bfedf78fc8520c8625eea08ce386a753385e3c3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 25 22:37:43 2019 +0200

    posix: replace bzero with memset
    
    bzero(3): The bzero() function is deprecated (marked as LEGACY in
    POSIX.1-2001); use memset(3) in new programs.  POSIX.1-2008 removes
    the specification of bzero().
    
    Use memset instead.

[33mcommit 2da90a1cd82eb73f492034b1d67156d27f83bf21[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 25 22:23:51 2019 +0200

    posix: remove deprecated index/rindex calls
    
    Replace index by strchr and rindex by strrchr.
    
    index(3) states "POSIX.1-2008 removes the specifications of index() and
    rindex(), recommending strchr(3) and strrchr(3) instead."
    
    Add index/rindex to banned function check so they don't get reintroduced.
    
    Bug #1443.

[33mcommit b82a0e2cad50ab5c411e82892b94ad763f0101fa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 25 10:28:15 2019 +0200

    detect/port: more cleanups
    
    Remove unused funcs. Minor style updates.

[33mcommit 8b0b301a151a11de6a463e0ec4905467d0b64d23[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 24 11:30:38 2019 +0200

    detect/port: remove function only used in tests

[33mcommit ada0708e51f0090d4237193bfdf4c5803ae4d537[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 24 07:06:41 2019 +0200

    detect/port: unittest cleanups

[33mcommit deffabadff22f3ca2fd468e913f66363a9127003[m[33m ([m[1;33mtag: suricata-5.0.0-rc1[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 23 15:59:19 2019 +0200

    changelog: update for 5.0.0-rc1 release

[33mcommit 7864e8e7cc8e1a2ce2989459d9af5d9072a31ab6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Sep 22 07:54:57 2019 +0200

    der/asn1: reduce max depth limit to 32
    
    OpenSSL uses 30, so this seems a reasonable limit.
    
    Set a smaller limit than before to reduce the resources spent on
    specially crafted input designed to be maximally expensive.

[33mcommit 335ad2d8cc1c7dae39ee3a9f8523fd7384663465[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 20 17:12:17 2019 +0200

    der/asn1: don't pass on more data than is specified
    
    Set and Sequence parsers would pass on max available data instead
    of the size of their object.
    
    Malformed data could trigger massive recursion this way, leading
    to spending much more resources than necessary.
    
    Found using AFL.
    
    Bug #3185.

[33mcommit 4ca83ca4896bbb07fff0ff8225f37a93b08c3374[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 18 13:26:23 2019 +0200

    decode/ipv4: fix ts opt flags decoding
    
    Field is at data+1 offset, not +3. Also makes sure we always stay
    within checked data bounds.
    
    Reported-by: Sirko Höer -- Code Intelligence for DCSO.
    
    Bug #3176.

[33mcommit 7bb3dfcfc80cfe59733da8ebc9d533fcb8c0d9d3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 18 12:21:04 2019 +0200

    decode/ipv4: unittest to show parsing issue

[33mcommit 922f4f7d78055ed96833b43cb0c086fe37e2b672[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 6 15:07:56 2019 +0200

    ssl: fix bounds checking in version decoding
    
    Reported-by: Sirko Höer -- Code Intelligence for DCSO.
    
    Bug #3169.

[33mcommit c8b49aee56b9ae10e0aa8a5bf2b4a49b386ad942[m
Author: Jason Ish <jason.ish@gmail.com>
Date:   Tue Sep 17 12:08:15 2019 +0200

    defrag: check minimum size of reassembled packet
    
    Before re-assembling, check that the first fragment is large
    enough to contain the IPv4 or IPv6 header to prevent
    an out of bounds read (IPv4) or write (IPv6).
    
    Reported-by: Sirko Höer -- Code Intelligence for DCSO.
    
    Bug #3171.

[33mcommit 229eccdd04eee5e562036fc44e9b280392521ad7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 6 15:02:05 2019 +0200

    ssl: minor cleanups

[33mcommit 42438ec08e1edf92b62b6f810aa60047897d7f62[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 23 14:30:10 2019 +0200

    doc/userguide: add quickstart to dist

[33mcommit 05f6f5481a9ebbb3e7b60c8bfb6edf6c9535390f[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Sun Sep 22 18:28:32 2019 +0200

    tls-log: restructure code for writing to buffer
    
    Restructure code to make it clearer that either 'basic', 'extended'
    or 'custom' is being printed, by creating one function for each of
    the possibilities.

[33mcommit 03c8b82bfef97d308527026c33d6df722886fd77[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Sun Sep 22 18:02:17 2019 +0200

    tls-log: quick code cleanup

[33mcommit a151fe2225e8acd9fb7937bf9257b965f77bf538[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Sun Sep 22 17:34:40 2019 +0200

    tls-log: remove a wrongful comment
    
    The app-layer parser for TLS has been TX aware for quite some time.
    Remove a comment that is stating that it is not.

[33mcommit 85536e89182207763a7883587a47c69cfb504248[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu Sep 19 23:10:48 2019 +0200

    tls-log: fix so buffer is reset on custom logging
    
    Move MemBufferReset() so it also works when using custom tls
    logging. This avoids duplicate tls log entries.
    
    Bug #3177

[33mcommit af4f816204e0addf80cec67c2ea006e5e47dc556[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Sep 19 16:24:31 2019 +0200

    http: sets compression bomb limit

[33mcommit c09ad018360a82d21a75dd6d59d940ad2ac10d5e[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Sep 19 16:54:44 2019 +0200

    http: disable lzma decompression from configuration

[33mcommit 94aa36df1b76a0cc3b344a3d0e50d4fc6bff91fa[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Sep 13 17:24:26 2019 +0200

    lzma: replaces liblzma with own sdk for swf decompression
    
    so as to avoid memory exhaustion

[33mcommit a121c7b460f4f2919d9d291c6da9711878cde7b8[m
Author: Yujie Zhao <yujzhao@amazon.com>
Date:   Tue Sep 17 12:47:18 2019 +0000

    Avoid to shutdown NSS if it is not initialized

[33mcommit 178d420f36d37702e5909d2e55eef5b143d77467[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Sep 18 15:41:53 2019 -0600

    main: enable coredumps after privileges are dropped
    
    On Linux, by default, coredumps are disabled after
    privileges are dropped. This re-enables coredumps
    after privileges are dropped.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/1271
    
    Credit to Elazar Broad for the pull request:
    https://github.com/OISF/suricata/pull/3362

[33mcommit bd691778eb1989e49a387b5a44cfcd51a4fbbd7e[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Aug 28 18:55:00 2019 -0400

    rust/ftp: add parser for active mode port handling

[33mcommit b4070b6dcd7942521181771de1d9b2fdb9db2d50[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Aug 28 18:54:14 2019 -0400

    ftp: Use rust parsers to parse dynamic ports

[33mcommit 9cbf9ef7a458f5f0c81e3cf37e4f534d8093d01c[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Mar 4 13:25:46 2019 +0100

    HTTP new parser warning for Ambiguous C-L

[33mcommit d801c3e58868abb3f3778b084d39238e0d6ff17f[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Thu Sep 19 13:36:16 2019 +0530

    detect: Make keyword description consistent
    
    Closes redmine ticket #3137.

[33mcommit d4bc46038133a26ac0010ef64c865746f95814c7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 17 15:01:45 2019 +0200

    smtp: fix file_data inspection
    
    Continue tracking data if API is used with detect. Detection engine
    then manages the tracking.
    
    Bug #2395.

[33mcommit 876583908415f988bc54dde2336594143085b0f8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 17 10:42:55 2019 +0200

    sip: disable output by default

[33mcommit 517ecd68a9a4018d15afceeaf962814fe61b2f3e[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Sep 16 17:11:37 2019 -0600

    sip: rustfmt
    
    As this is new Rust code, format with rustfmt using default
    styling.

[33mcommit a45a2fa1fc46ab7c789a06f0eb0a4c8509c56754[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Sep 16 16:56:02 2019 -0600

    sip: disable by default in 5.0

[33mcommit fdbc2fe49c66c8927a7632438a0462b944192875[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Sep 16 16:50:15 2019 -0600

    sip rust fixup: remove unused import in tests

[33mcommit afe065c7ace9648186d4dbe6d49e68f800f43178[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Sep 16 16:48:47 2019 -0600

    sip fixup: _Bool -> bool

[33mcommit dd5d0afd79a29a22177ca110337eb61dca7356c7[m
Author: Giuseppe Longo <giuseppe@glongo.it>
Date:   Wed Jul 10 22:05:30 2019 +0200

    doc: add SIP keywords

[33mcommit e06291922fa60eab99bb3e3705a5cda7203b611c[m
Author: Giuseppe Longo <giuseppe@glongo.it>
Date:   Sun Mar 3 21:52:25 2019 +0100

    detect/sip.response_line: add sticky buffer
    
    Matches on response line field in SIP.

[33mcommit 17de4a80237525ffb9b7d532b6271b11b1244567[m
Author: Giuseppe Longo <giuseppe@glongo.it>
Date:   Sun Mar 3 21:37:30 2019 +0100

    detect/sip.request_line: add sticky buffer
    
    Matches on request line field in SIP.

[33mcommit 8939ece53846de2795319003b991fcc7da04bf37[m
Author: Giuseppe Longo <giuseppe@glongo.it>
Date:   Sat Mar 2 21:45:07 2019 +0100

    detect/sip.stat_msg: add sticky buffer
    
    Matches on status msg field in SIP.

[33mcommit bd2219cac6e307a20797517878589c6626a17dc6[m
Author: Giuseppe Longo <giuseppe@glongo.it>
Date:   Sat Mar 2 21:23:19 2019 +0100

    detect/sip.stat_code: add sticky buffer
    
    Matches on status code field in SIP.

[33mcommit 8454122eb2b9c46affea29e6f4fff5c3512570f1[m
Author: Giuseppe Longo <giuseppe@glongo.it>
Date:   Fri Mar 1 21:27:23 2019 +0100

    detect/sip.protocol: add sticky buffer
    
    Matches on protocol field in SIP.

[33mcommit 2661c5b2981e52131adab0c75e975b9d590df8f3[m
Author: Giuseppe Longo <giuseppe@glongo.it>
Date:   Thu Feb 28 07:29:25 2019 +0100

    detect/sip.uri: add sticky buffer
    
    Matches on uri field in SIP.

[33mcommit 424eead8c08ed2a437554bbe6e8b3f3aec5a3d26[m
Author: Giuseppe Longo <giuseppe@glongo.it>
Date:   Tue Feb 19 21:11:31 2019 +0100

    detect/sip.method: add sticky buffer
    
    Matches on uri field in SIP.

[33mcommit c88559dc7257c67c41ccbfde0052aa10855c8169[m
Author: Giuseppe Longo <giuseppe@glongo.it>
Date:   Sun Feb 24 19:16:09 2019 +0100

    output/json-alert: add sip metadata
    
    Put SIP information to alert event.

[33mcommit edc2a583a9ebe19756ac225090fe032d8e727df0[m
Author: Giuseppe Longo <giuseppe@glongo.it>
Date:   Sun Feb 17 18:06:17 2019 +0100

    rust/sip: add SIP logger

[33mcommit 2e975a0481ed93428a2956466688a89f61188f8d[m
Author: Giuseppe Longo <giuseppe@glongo.it>
Date:   Sat Feb 9 09:02:11 2019 +0100

    rust/sip: add parser for SIP protocol

[33mcommit a2356a89f7cb42c91fdf607ffe0af3ecc7df5a4b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 17 10:41:59 2019 +0200

    detect/dns.opcode: improve error reporting

[33mcommit d3e2cc9926a0a1149495c418f531ecbae9ef4c8c[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Sep 16 14:46:15 2019 -0600

    doc: document dns.opcode keyword

[33mcommit daed788d49f404400f6c0e48bb189b88fd94649d[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Sep 16 14:39:42 2019 -0600

    doc: Replace dns_query with dns.query.

[33mcommit d79c23baa3a16c7faf5136741ef0f769dab4d1b5[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Sun Sep 15 23:43:14 2019 -0600

    dns/detect: dns.opcode keyword
    
    Add a rule keyword, dns.opcode to match on the opcode flag
    found in the DNS request and response headers.
    
    Only exact matches are allowed with negation.
    
    Examples:
      - dns.opcode:4;
      - dns.opcode:!1;

[33mcommit c68fbfcfe690934e370f90a4f3e04872a1878c37[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 16 12:44:42 2019 +0200

    htp: simplify depth check

[33mcommit 972be0a560a610f20e967b74cd488900ef86de73[m
Author: Giuseppe Longo <giuseppe@glongo.it>
Date:   Mon Jan 28 21:39:07 2019 +0100

    doc: update file-extraction section

[33mcommit de904db8305688dfe7454bb6a2126cae40b5ba3d[m
Author: Giuseppe Longo <giuseppe@glongo.it>
Date:   Mon Jan 28 16:15:22 2019 +0100

    app-layer-htp: use stream depth with filestore
    
    This permits to use stream-depth value set for file-store.
    
    Currently if a file is being stored and hits a limit,
    such as request or response body, it will be truncated
    although file-store.stream-depth is enabled but the file should be
    closed and not truncated.
    
    Two unit tests have been added to verify that:
    - a file is stored correctly
    - chunk's length computation doesn’t cause an underflow

[33mcommit ed5a439b8e8680c74b8bec8873e1a126081b7fce[m
Author: Giuseppe Longo <giuseppe@glongo.it>
Date:   Thu Jan 24 23:22:11 2019 +0100

    app-layer-parser: flag a tx to use stream depth
    
    This adds a new API that permit to set the stream-depth
    file for file-storing when a rule with filestore keyword is matched.

[33mcommit b5b429c2884ef8c19ddbbbbe0a7708113b95953b[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Mon Jul 1 16:28:04 2019 +0530

    detect: Add missing keyword URLs and description
    
    Add missing keyword URLs and their description. Fix the ones that
    were incorrect.
    
    Partially closes redmine ticket #2974.

[33mcommit adcd7ce0ffd05d05030d7380c66055e26fa4d3e1[m
Author: Jack Mott <jack@malwarefor.me>
Date:   Mon Aug 19 13:36:30 2019 -0600

    classification: add command-and-control classtype
    
    Added new classtype 'command-and-control' to be used with more
    general TROJAN/MALWARE categories to designate traffic between
    infected machine and c2 server.

[33mcommit 798d8746620187eb1a825f3d5233fcea3a30cd0d[m
Author: Travis Green <travis@travisgreen.net>
Date:   Thu Sep 12 09:27:53 2019 -0700

    doc: fix whitespace

[33mcommit 08423282aa7196176d2ea60219708fc107934a1e[m
Author: Travis Green <travis@travisgreen.net>
Date:   Thu Sep 12 09:24:51 2019 -0700

    doc: add to sigmatch_table

[33mcommit 4612d4b50af3519a8f3ce9141c8daa7567f071d0[m
Author: Travis Green <travis@travisgreen.net>
Date:   Fri Aug 9 15:56:52 2019 -0600

    detect: syntax regex logic update
    
    Updated regex logic to include more spaces. Fixed spelling.

[33mcommit 4111272c88bebe2cbbdac5fb810a1670ebc3b1af[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Sep 12 16:44:57 2019 -0600

    config/anomaly: use enabled key word; cleanups
    
    The anomaly section was commented out, but the types sub object
    was not, which then attached the types keyword to the previous
    object.
    
    Instead keep "anomaly" enabled in the yaml (not commented out)
    and use the "enabled: no" to have it disabled by default.
    
    Additonally reformat the comments to be better viewed in 80
    columns.

[33mcommit e976d8cf740e6a96b0d3adab92e9111d9bc2ce09[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Sep 13 23:49:11 2019 +0200

    output-lua: register app-layer parser logger for SSH
    
    Bug #3162

[33mcommit 1e9f767debac8ac72d9f8c936d534873c2abe767[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Sep 13 23:46:36 2019 +0200

    output-lua: register app-layer parser logger for TLS
    
    Bug #3162

[33mcommit 61a6eaf3307f60f3e856fcbbe72aba0b56c9bb79[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Sep 12 14:53:07 2019 -0600

    htp/lzma: set limit from configuration
    
    Also use a default defined in Suricata, not libhtp.

[33mcommit c9c23d5cda94275f1459270f181a784b901fa985[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 10 13:06:28 2019 +0200

    htp: set lzma memlimit from config

[33mcommit 6aa2d550a12d0eee5313f31960407821089fe077[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 12 17:31:39 2019 +0200

    doc/dotprefix: fix example rules

[33mcommit ab3d6328ba1064b2a9794761803d1c1bffcf4272[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun Jul 14 14:28:14 2019 -0400

    detect/transform: add dotprefix keyword to doc

[33mcommit 7808b946e302b23c96c13890cf66d92905a3b033[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun Jul 14 14:16:23 2019 -0400

    detect/transform: add dotprefix keyword

[33mcommit df325d63ea2bf0500bf9e199b421c14582fd9c97[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 12 16:42:31 2019 +0200

    doc/eve.anomaly: fix indent and general formatting

[33mcommit 9df44afa30812f7ec74cee10f3ad4da0fbe3be16[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Aug 31 14:23:11 2019 -0400

    logging/anomaly: Add warning code for anomaly log

[33mcommit 075592b66f3d5d0bdfb4ed0df470b43a9d8ea4f4[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon Aug 12 20:01:34 2019 -0400

    doc: Simplified anomaly configuration settings

[33mcommit aaacbf28c23f2604933a14571eb6a3921782dd1a[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun Jul 7 19:31:23 2019 -0400

    logging/anomaly: Support configuration filter types

[33mcommit 35bc73e4e2cb4865c06e0da7a05ea60f2966ee08[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Sep 10 11:42:43 2019 +0200

    doc: change eBPF directory path

[33mcommit 85ba2e16babbb8d4803c53a3ac19c5edb0840657[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 10 13:18:20 2019 +0200

    rust/conf: don't print failed conf lookups at info level

[33mcommit c1b333c96e015240d39c607f5e27a308b36d01ad[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 10 13:17:40 2019 +0200

    rdp: disable eve.rdp by default

[33mcommit 664605b5f14553b74984e3015aca77ba939ca086[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Sep 9 13:30:07 2019 -0600

    rdp: disable rdp by default for 5.0

[33mcommit 0f102989902f6b45fd942f2b74ab832fea132c90[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Sep 9 11:32:28 2019 -0600

    rdp: address comments in pull request
    
    Pull request:
    https://github.com/OISF/suricata/pull/4174
    
    - fix commit: range -> set
    - OUTPUT_BUFFER_SIZE -> JSON_OUTPUT_BUFFER_SIZE
    - output: check for initdata first

[33mcommit caef8b5b385859c68180545df7be8d831f66fb6a[m
Author: Zach Kelly <zach.kelly@lmco.com>
Date:   Thu Sep 5 13:46:14 2019 -0400

    protocol parser: rdp
    
    Initial implementation of feature 2314:
    1. Add protocol parser for RDP
    2. Add transactions for RDP negotiation
    3. Add eve logging of transactions

[33mcommit 59da7ae3029127b455d28780721d6ffee47e5c74[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Fri Aug 30 21:46:44 2019 +0530

    counters: Add new default for decoder events
    
    Set the new default for decoder events to `decoder.event` instead of the
    previously used `decoder`. Remove the corresponding warning for 5.0.

[33mcommit d657fd9bf05b368d72da2fcea95e9348f80984f0[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Sun Sep 1 00:39:04 2019 +0200

    doc: add quickstart guide

[33mcommit 7cabb025ea530cc97b033cbca55e87053a32fd00[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 9 15:36:39 2019 +0200

    ips: fix wrong thread for bridge ips modes

[33mcommit d5009c5d8c4c9db0428b5b59c1d7aca40699853e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 9 19:26:36 2019 +0200

    doc/stream: briefly explain bypass

[33mcommit 8aeff8f97334e3f8238d7af22a8ab6d94fad4573[m
Author: Phil Young <py@napatech.com>
Date:   Mon Aug 5 15:37:10 2019 -0400

    stream: fix bypass callback for stream.depth
    
    Fix bug with bypass callback when called with stream depth threshold.
    bug report: https://redmine.openinfosecfoundation.org/issues/2986

[33mcommit ba6b73cd106aaa7fd53e4f1867fe7ce44b3bc2c7[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Sun Apr 14 00:09:06 2019 +0530

    ctl/filestore: Add check for filestore directory
    
    Up until now, suricatactl would delete any directory that is provided as
    an argument on command line. This patch adds a basic test for the
    directories `tmp`, `00` and `ff` in order to justify that the provided
    directory is actually a filestore directory.
    
    Additionally, some code has been broken up and made more readable and
    pythonic.
    
    Closes redmine ticket #2843

[33mcommit 52187d854862e1d95b70f29cf91d23cb8d0b1c9d[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Sep 6 09:39:29 2019 -0600

    ftp: removing uninitialized variable warning
    
    output-json-ftp.c: In function ‘JsonFTPLogger’:
    output-json-ftp.c:129:9: warning: ‘js_respcode_list’ may be used uninitialized in this function [-Wmaybe-uninitialized]
      129 |         json_object_set_new(cjs, "completion_code", js_respcode_list);
          |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    output-json-ftp.c:74:13: note: ‘js_respcode_list’ was declared here
       74 |     json_t *js_respcode_list;
          |             ^~~~~~~~~~~~~~~~
    output-json-ftp.c:128:9: warning: ‘js_resplist’ may be used uninitialized in this function [-Wmaybe-uninitialized]
      128 |         json_object_set_new(cjs, "reply", js_resplist);
          |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    output-json-ftp.c:73:13: note: ‘js_resplist’ was declared here
       73 |     json_t *js_resplist;
          |             ^~~~~~~~~~~

[33mcommit 0bb07b550c1f00a95e6803aba7cdeb22d637fbc2[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Sep 6 09:32:04 2019 -0600

    userguide: remove section on using Oinkmaster
    
    Users should be using Suricata-Update now.

[33mcommit 55852d0de3151517b6cb22c736cb2de8a893cb11[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Fri Sep 6 09:28:05 2019 -0600

    rules: remove configuration for legacy rule handling
    
    Removes the autoconf, and suricata.yaml sections for using
    the legacy style of rule management.

[33mcommit 3c11665317d779c24652267bd0a27e63ecda6766[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Mon Sep 2 11:02:47 2019 -0600

    rules: no longer install rules to /etc/suricata/rules
    
    Stop falling back to the old method of installing rules into
    /etc/suricata/rules if Suricata-Update is not available.
    
    The goal here is to move away from the behaviour of installing
    rules to /etc/suricata/rules as part of the default install
    process. The engine provided rules are already installed to
    /usr/share/suricata/rules, which can then be used as input
    to rule management tools such as Suricata-Update.
    
    This does not change the behaviour for Suricata release users
    with the bundled Suricata-Update.
    
    Also removes Oinkmaster and PulledPork suggestion for rule
    management.

[33mcommit e3cfc9fc4b432be7ce305c3e0d14bdc9be850445[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Thu Sep 5 09:35:40 2019 -0600

    rules: install dhcp-events.rules; order alphabetically
    
    Add dhcp-events.rules to Makefile.am so it gets installed.
    
    Also order the rule files alphabetically for easier review.

[33mcommit a272e433a8f9a1886db22cf77d2f6a3b2eed2a57[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 2 10:25:30 2019 +0200

    pd: don't reverse flow if TCP session not midstream

[33mcommit 5f1d21f2479ecb29e50b4181e8b186e8c44db441[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Apr 2 13:18:53 2019 -0600

    dns: handle mid stream pickup on response packet
    
    Related Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/2146

[33mcommit 3f146cdd7e965ef46a4c8ae1052151a57723a589[m
Author: Travis Green <travis@travisgreen.net>
Date:   Thu Sep 5 11:33:55 2019 -0700

    doc: add endswith keyword docs

[33mcommit 9f8dcad287471bded15f86d535cddc1b2883cdd7[m
Author: Travis Green <travis@travisgreen.net>
Date:   Thu Jul 18 15:25:51 2019 -0600

    doc: update of ssh-kewords documentation
    
    Modifies ssh-keywords.rst to fix syntax error in example rule as well as
    update descriptions to indicate older keywords have been deprecated.

[33mcommit 9488002a0d73d6338fe1b671d6bf80add6f51054[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Aug 20 09:20:53 2019 -0600

    doc: use describe instead of option for old Sphinx
    
    Older versions of Sphinx will generate duplicate IDs when you have
    options like:
    
    .. option:: some-option
    
    .. option:: some-other-option
    
    The version of Sphinx provided on CentOS 7 has this issue, newer
    versions of Sphinx do not.  As CentOS 7 is still a popular
    distribution, change ".. option" to ".. describe" which has the
    same visual output, but does not generate links.

[33mcommit 42e5065ab888e6a7624f40cf7d09dd415401a990[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Aug 27 14:29:00 2019 -0600

    rust: update to Rust 2018 with cargo fix
    
    Migrate to Rust 2018 edition.
    
    Credit to Danny Browning for first demontrating this:
    https://github.com/OISF/suricata/pull/3604/commits

[33mcommit 79d308db7393b81a6bdf3b98f0e5643c16a51fa6[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Aug 31 16:16:39 2019 -0400

    detect/analyzer: Add missing http_accept_enc handling

[33mcommit 8bebea5d4c885194f72d2c86db5c9f50a4c66682[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Wed Sep 4 18:10:53 2019 +0530

    rust: Get rid of unneeded macros, fix warnings

[33mcommit a3e5b91668c824ffae65130066ac8198a3036c21[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 5 15:00:04 2019 +0200

    detect/dataset: fix 'state' path handling

[33mcommit e36a963196a77ec5b300f8ad992ebb91ea012d96[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 5 10:59:33 2019 +0200

    datasets/doc: minor fixes and clarifications

[33mcommit 7ae86a0ae9905e32a6c7ce89abae77a370a432c3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 5 10:54:28 2019 +0200

    datarep: remove notice messages

[33mcommit 8045746bd13df524593d8faee12c540362d4f930[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 5 10:47:32 2019 +0200

    datasets: remove notice messages and improve errors

[33mcommit 0107b9a0570da951d46dee396a9d880a9dc234c1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 25 16:32:29 2019 +0200

    doc/dataset: initial documentation

[33mcommit d5ceafa2e5cbc93559fab49a0ad80c8afb3252bc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jul 14 08:58:18 2019 +0200

    suricatasc: add dataset-add command

[33mcommit 1d6a358d8a4e6450dd39a5e9851f1fb7d1a1320e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jul 14 07:09:12 2019 +0200

    datasets: unix socket dataset-add command

[33mcommit 317376f59d4723a7a2557f7395c354c6bf011a46[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 20 11:22:57 2017 +0100

    datasets: match on lists of data
    
    Datasets are sets/lists of data that can be accessed or added from
    the rule language.
    
    This patch implements 3 data types:
    
    1. string (or buffer)
    2. md5
    3. sha256
    
    The patch also implements 2 new rule keywords:
    
    1. dataset
    2. datarep
    
    The dataset keyword allows matching against a list of values to see if
    it exists or not. It can also add the value to the set. The set can
    optionally be stored to disk on exit.
    
    The datarep support matching/lookups only. With each item in the set a
    reputation value is stored and this value can be matched against. The
    reputation value is unsigned 16 bit, so values can be between 0 and 65535.
    
    Datasets can be registered in 2 ways:
    
    1. through the yaml
    2. through the rules
    
    The goal of this rules based approach is that rule writers can start using
    this without the need for config changes.
    
    A dataset is implemented using a thash hash table. Each dataset is its own
    separate thash.

[33mcommit b286c14324c03a54c026c83790cd9011c4611e25[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Sep 4 21:33:45 2016 +0200

    thash: generalize hash table as used in flow
    
    Thread safe hash table implementation based on the Flow hash, IP Pair
    hash and others.
    
    Hash is array of buckets with per bucket locking. Each bucket has a
    list of elements which also individually use locking.

[33mcommit 0b120bbe341d7344879df0b746a4fad74c0ff11f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 25 16:52:41 2019 +0200

    suricata: expose system as global

[33mcommit 5d5612f98e8db1571830e87a1efb6acdb700a340[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 25 15:42:46 2019 +0200

    suricata: --data-dir option

[33mcommit f24067f5e56461a3a81f3e073e47f5b9ed77eff4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 3 11:25:43 2019 +0200

    travis: add liblzma (xz) for osx

[33mcommit 6f80821ff00f4d377e6f9920ed7559d051015ff8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 27 11:55:11 2019 +0200

    configure: bump minimum htp to 0.5.30

[33mcommit dbbdfedb98d027f5115455837148e3345216473d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 27 10:48:50 2019 +0200

    lzma: make mandatory
    
    Libhtp is starting to use it as well, so its safe to make it mandatory
    here.
    
    Remove guards for flash file decompression code.

[33mcommit 8d4cbb3f7bd8ea724cbe7bdba1a501888ccb0fb8[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon May 20 12:47:35 2019 +0200

    http: fixes stream flags for http tests

[33mcommit 9665ab04098105b132834a96c7ec2a99cbc54c04[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Apr 2 16:32:43 2019 +0200

    http: wait for response line for filename
    
    See http evader case 481

[33mcommit 579cc9f02b164174ad64651db814580041d67045[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 2 15:29:18 2019 +0200

    const: constify decoder, app-layer, detect funcs

[33mcommit 399ab35aa1e802ac75efc3add5befe6909c26d56[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 2 15:28:36 2019 +0200

    afl: fix compile warnings for decoder fuzz funcs

[33mcommit a472dec865c0cc57b81c394133f4e15c373d98c8[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Aug 27 10:52:59 2019 -0600

    travis-ci: update for minimum Rust version of 1.33.
    
    Plus:
    - Set latest known working stable Rust to 1.37.0.
    - Remove test for --disable-rust, as that as option is
      not respected anymore.
    - Add test for old/unsupported version of Rust to make
      sure ./configure fails.
    - Other minor cleanups.

[33mcommit 8f66f39b29ff438d8caaf813f5486efc707595fb[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Aug 27 10:19:09 2019 -0600

    rustfmt: use default rustfmt configuration
    
    Remove our config that limited line length to 80 columns.

[33mcommit c9d569f410d4c187bc334bd31637d6c2b1f03ccc[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Tue Aug 27 10:15:14 2019 -0600

    rust: check for minimum Rust version of 1.33.0.
    
    Related Redmine ticket:
    https://redmine.openinfosecfoundation.org/issues/2629

[33mcommit ecb9e85d6954f6929b1b7c70f493da6af889be76[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Jun 3 11:01:18 2019 +0200

    install: install all files for events rules
    
    Fixes #2786

[33mcommit aa73d834b598491fed149d0549fdba7f886134cf[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Jun 3 16:50:28 2019 +0200

    boyermoore: avoid one tolower call
    
    Fixes #1218

[33mcommit 86deaefe66e3e2cdd69031f816987f3271a72c28[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Aug 28 19:12:40 2019 -0400

    ftp: Ensure non-zero command length with MPM init

[33mcommit d14fe372b4cc92443dd4a51e7c55425fd5ef99a8[m
Author: Jason Ish <jason.ish@oisf.net>
Date:   Wed Aug 28 12:01:14 2019 -0600

    configure.ac: prevent empty if block (llc check)
    
    As AC_SUBST doesn't expand to anything in the shell script, this
    will generate a bad script on older versions of autoconf.
    
    Change the logic to eliminate the possibility of an empty
    if or else block.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/3124

[33mcommit f750e4ca40ab529077ab46c3525697bc6c742446[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Thu Jun 20 16:49:25 2019 +0530

    configure: Remove enable-rust-debug
    
    Get rid of enable-rust-debug flag and use enable-debug for acheiving the
    desired functionality. From now, adding `--enable-debug` to `configure`
    shall create an [unoptimitized + debuginfo] target. Rest behavior stays
    the same.
    
    Closes redmine ticket #3054

[33mcommit 85b56b633eb28ddcd994d3eddb606a232588a8a9[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Wed Aug 28 15:41:24 2019 +0530

    detect: Improve rule keyword alproto registration
    
    1. Set WARN_UNUSED macro on DetectSignatureSetAppProto.
    2. Replace all direct 'sets' of Signature::alproto from keyword registration.
    
    Closes redmine ticket #3006.

[33mcommit 1bc738fbe4f58c3b0b58032790b6e2d8fbbe4310[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 26 12:45:53 2019 +0200

    doc: typo fixes
    
    By @espritlibre and @Zeal0us

[33mcommit d0a85b75508a208c671412fe4d71e6a9a994c556[m
Author: Nick Price <nick@spun.io>
Date:   Thu Apr 25 13:16:09 2019 -0400

    ja3: Mention LibNSS dependency for JA3

[33mcommit 9b05db7db0c3ed4647adbe763f77a5f61b6aefe1[m
Author: Fabrice Fontaine <fontaine.fabrice@gmail.com>
Date:   Wed Apr 24 19:14:29 2019 +0200

    fix build on m68k with uclibc
    
    uclibc on m68k defines _POSIX_SPIN_LOCKS but does not define
    pthread_spin_unlock so check for this function before using
    pthread_spin_xxx functions
    
    Fixes:
     - http://autobuild.buildroot.org/results/ed923bcc1454ce90444b8dac7c064b5f4ea4a0a5
    
    Signed-off-by: Fabrice Fontaine <fontaine.fabrice@gmail.com>

[33mcommit 86fabef09378bfaefb1417492086a7e1d4b1a57f[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Aug 23 11:34:01 2019 -0400

    ftp: address review comments

[33mcommit f79316d71af0f993b2e24d5b735e3d5559b8574b[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Aug 22 20:12:28 2019 -0400

    ftp: remove RUST guards

[33mcommit cc5e9ca17961970e7c425d036927799c5895ce26[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Aug 22 20:09:03 2019 -0400

    eve/ftp: Modifications for MPM-enabled command descriptor table

[33mcommit bc68ef4657d11410c45ca9887d8b38c81a5aa07f[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Aug 22 20:08:12 2019 -0400

    app-layer: Invoke FTP parser cleanup function

[33mcommit 09ab032a8d2469acbfccb2b4c4f628d805828115[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Aug 22 20:06:22 2019 -0400

    ftp: Use MPM for command lookup

[33mcommit 4f2a485c559b89c9f405858e8d330c5fdf6d10b8[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Aug 21 19:26:40 2019 -0400

    ftp: Remove LIBJANSSON guards

[33mcommit 3df2b3437c4cc58de4e67244ead074bbb933abe5[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun Jul 21 12:36:10 2019 -0400

    eve/ftp: Move "get next line" into app-layer-ftp.c

[33mcommit f43584661c3cca1f34832e51b4a65347053f7c0f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 23 15:02:52 2019 +0200

    stream: support debug notice message in tfo

[33mcommit cc28d24e9a23a3b45e963dd84ca17e646539f35c[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jul 15 09:29:21 2019 +0200

    doc: install eBPF files in share directory
    
    Following proposal by Sascha Steinbiss, let's use /usr/share/suricata
    to store the eBPF files.

[33mcommit 5366f80941486fd7297e063c41124f0df92e1c2f[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Jul 13 10:47:40 2019 +0200

    bypass: fix build on Windows
    
    For the sake of unittests, we need to build capture bypass so we
    end up with a Windows build of flow bypass.

[33mcommit 3cf49ae86865a9624b3eeac4162e73904540a0c1[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jul 10 16:00:23 2019 +0200

    doc: fix English and some typos

[33mcommit 4be6701836580e2cbdc432f1f5d4ac54d1324c88[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Jul 6 16:30:43 2019 +0200

    doc: pointer to bpfctrl
    
    As bpfctrl is currently the easiest way to manage pinned maps,
    let's point to it. We will switch doc to suricatacl once support
    has been added.

[33mcommit 8f1a7de791e10c2f179dcaa86468a062f2b81a12[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Jun 23 16:58:09 2019 +0200

    doc: improve doc on compiling with eBPF support

[33mcommit f1ab27b7cbd8773baa571116d0e29cb58e9b4524[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Jun 22 08:58:36 2019 +0200

    doc: improve XDP cpu redirect documentation

[33mcommit e0e3cc7cc24f3993605de6125be94160166d150d[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Jun 23 15:07:51 2019 +0200

    ebpf: add tunnel aware load balancing
    
    This patch decapsulates GRE tunnel in xdp_lb

[33mcommit a536852526efb62bd82d61545bb592b76fe4ca9d[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Jun 22 08:32:15 2019 +0200

    ebpf: add XDP load balancing code
    
    This patch uses CPU redirect map to do load balancing. This is a
    simplified version of xdp_filter that includes code for bypass.

[33mcommit 6d9ac64f7bc8aaa7d1f6c309e59e7ddda3413023[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jun 21 23:01:33 2019 +0200

    doc: only balance by ip pair
    
    As there is some issue with defrag, let's recommend to only do
    IP pair load-balacing for RSS

[33mcommit a1d3835b863d6506bacf77d9b5c543cb970bd091[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jun 21 20:22:47 2019 +0200

    doc: document filter.bpf changes
    
    Also adds some info to explain maps.

[33mcommit 53a62953e902d708a4930c2867ce6146bb24d8b0[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jun 20 13:08:44 2019 +0200

    bypass: introduce CAPTURE_OFFLOAD
    
    This define is used to remove reference to capture bypass in case
    no capture method implementing this is active.
    
    This patch also introduces CAPTURE_OFFLOAD_MANAGER that is defined
    if we need the flow bypass manager code.

[33mcommit 094d28d40e98680a8003cc67620e578a3f1ec27e[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jun 20 13:02:51 2019 +0200

    flow-hash: generalize function
    
    THis patch generalizes the function to get a flow by its flowkey
    by removing the call setting it to capture bypassed state.

[33mcommit 9f016f8ba196e04284d29b7847c850975285311d[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jun 19 09:57:38 2019 +0200

    ebpf: improve parsing in filter.bpf
    
    Parse VLAN and only filter on IPv4. This patch also change the type
    of the counter to get a per CPU hash.

[33mcommit 7384744c3e52977b8db8a451df7f15a06cb8a2b8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 22 11:28:36 2019 +0200

    detect: fix FP on ICMP unreachable errors
    
    ICMP unreachable errors are linked to the flow they send an error for.
    This would lead to the detection engine calling the TX inspection
    engines on them.
    
    The stream inspect engine would default to a match for non-UDP
    and non-TCP as for ICMP we're not expected to use a TX inspect engine
    for stream data.
    
    This all would lead to a false positive match.
    
    This patch fixes this by making sure the TX engines are not called if
    the packet protocol and flow protocol are not the same.
    
    Bug #2769.

[33mcommit 240520a3cc58171634390aa62850937f6b3ab088[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Aug 15 18:56:21 2019 -0400

    main: fix typo in output

[33mcommit ef327ab1948b2c2124a11468e956746fb72c5e8d[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Aug 14 19:20:21 2019 -0400

    stream/tcp: correct spelling typos

[33mcommit bc2267f131b85e34a7513d7f1a3d708e4c3a8e6e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 1 18:54:40 2018 +0200

    stream/tcp: support TCP fast open

[33mcommit 8f8581bedaeea9467fd6adfcfd4354b57c71f25b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 1 10:22:41 2018 +0200

    decode/tcp: TCP fast open option decoding
    
    Support both regular TFO and TFO as part of the experimental
    options support.

[33mcommit c775a4af43b4b5b8ffcc85855f7bfc9079ba5a4c[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed May 22 17:31:14 2019 +0200

    signature: fixes leak with duplicate signatures

[33mcommit 63deb8862f8a06f4c0f7517def5f7f972b489f48[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Jun 4 11:46:01 2019 +0200

    boyermoore: optimization with one alloc less
    
    Fixes #1220

[33mcommit 5ff50773bd8d23e430263350029766cf08ac4c43[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Aug 1 14:12:54 2019 +0200

    detectproto: adding missing probing parsers
    
    In direction TO_CLIENT for symetric protocols

[33mcommit cf98b0223e73e0380fe1c19019c2e76014b23588[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Aug 2 09:57:42 2019 +0200

    detect-geoip: add info for list keywords

[33mcommit 08397e07f19f654cfaa642e99fce29477da0e40f[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Aug 2 09:32:08 2019 +0200

    doc: fix typos in geoip doc

[33mcommit 0d5608bab2d93ec345db585dbf5e84b724e9b8e4[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Aug 1 10:33:44 2019 +0200

    doc: fix display of icmp code and type array

[33mcommit 0c84591afe693256fc0631d4a89ccd1ee3ef6a78[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Aug 1 09:49:17 2019 +0200

    doc: use a table to list direction filter in geoip

[33mcommit c01cadbade090bf99c6470b5be0b4b14fa71446a[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Aug 1 00:02:30 2019 +0200

    doc: fix geoip syntax
    
    Spaces are not allowed before country code.

[33mcommit 9d6f1d318a6f51aaef203bec900da17adf98cc56[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Wed Jul 24 21:18:38 2019 +0530

    unix/socket: Add rev date to version info

[33mcommit 4c18fee3c69ac04629f095604473843eaea2c98e[m
Author: Vinjar Hillestad <vhillestad@gmail.com>
Date:   Fri Jun 21 14:09:28 2019 +0000

    Documenting base64_decode and base64_content
    
    base64 doc changes based on #4027 pull feedback

[33mcommit 36998ab4cde0b69b76952cda38e68fec45ad6283[m
Author: Hilko Bengen <bengen@hilluzination.de>
Date:   Wed Jul 24 11:36:53 2019 +0200

    Add documentation for --with-clang parameter

[33mcommit f105bb724ab2d438c99b35afc3c6b2b4277115e7[m
Author: Hilko Bengen <bengen@hilluzination.de>
Date:   Thu Feb 21 09:34:41 2019 +0100

    ebpf: Use $(CLANG) to build eBPF programs
    
    This change makes it possible to generate the eBPF programs even if
    Suricata itself is built a different C compiler. It also simplifies
    how the correct llc program is detected.
    
    Implements Feature https://redmine.openinfosecfoundation.org/issues/2789

[33mcommit e3f00c3d304b22ccd875f6bf8fa1e0860dba3459[m
Author: Hilko Bengen <bengen@hilluzination.de>
Date:   Tue Jan 22 18:10:47 2019 +0100

    configure: Introduce CLANG variable

[33mcommit be22b23d2e9cecdc8775841db7cd7c1db12d9e1f[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Fri Jul 26 15:44:27 2019 -0700

    cleanup: eliminate warnings/errors with debug build on macos

[33mcommit c0bddff07879e4fb7a13b61b6533587bb7c97322[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Mon Aug 12 22:05:40 2019 +0200

    userguide: remove old reference to rule-reload option

[33mcommit 26bc0d6e1d27c37f0fdf631e9110748b22014e34[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Sat Aug 10 23:35:04 2019 +0530

    src/detect: check DetectBufferSetActiveList return code
    
    Make sure to always check the return codes of DetectBufferSetActiveList.
    Also, force this warning on function prototype.
    
    Closes redmine ticket #3005.

[33mcommit 15783fb322b8a9ff39f217866197cac1129eeba2[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Aug 1 15:27:39 2019 +0200

    signature: avoids overflow from VariableNameHash

[33mcommit 140bfd7b0c5e3477ba57ef3a839b33f19ed0a5a7[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun Aug 18 18:06:01 2019 -0400

    detect/analyzer: remove HAVE_LIBJANSSON cpp guards

[33mcommit 87bfce025dd51c7d655faf5503b7b26929e38781[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun Aug 18 18:04:58 2019 -0400

    spelling: correct spelling typo

[33mcommit dcf5e247ca2b7e9817406fc6863a2143b89c7ace[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun Aug 18 18:03:01 2019 -0400

    detect/analyzer: add support for http_content_type

[33mcommit 6d39f6fd7dcc24932332eb8cf26f648cc56bd267[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Fri Jul 26 23:22:34 2019 +0530

    rust: Fix deprecation warnings
    
    Fix the following warnings by compiler,
    (1) warning: use of deprecated item 'take_until_s': Please use `take_until` instead
    (2) warning: `...` range patterns are deprecated
    
    For the second warning, the builtin lint
    "ellipsis_inclusive_range_pattern" has been added which causes the
    following warning to show up with rustc 1.24.
    
    warning: unknown lint: `ellipsis_inclusive_range_patterns`
      --> /home/travis/build/OISF/suricata/suricata-5.0.0-dev/rust/src/lib.rs:18:10
       |
    18 | #![allow(ellipsis_inclusive_range_patterns)]
       |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
       |
       = note: #[warn(unknown_lints)] on by default
    
    Since there is no other way to fix this, the above warning shall stay.
    We need to take care of modifying this if and when the support for 1.24
    as MSRV is dropped.

[33mcommit da2c4d7382776fcfb2adddf2c7a6005e611a971a[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Fri Aug 16 13:54:41 2019 -0400

    applayer: fix typo in debug output
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 6ebb1b2cc4f299ccb0dd9676a5dad394866f07b7[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Mon Aug 12 22:19:14 2019 +0200

    rule-reload: enable rule-reload for -s and -S run as well

[33mcommit 3a912446adf68a821781122e1242184c0d886b67[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 5 22:06:08 2019 +0200

    pcap: fix breakloop error handling
    
    Ticket #3004

[33mcommit 06d3e1d3d8315415f2755eed0a1751a7b6630acf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 19 22:16:33 2019 +0200

    netmap: suppress format truncation warning
    
      CC       source-netmap.o
    source-netmap.c: In function ‘NetmapOpen’:
    source-netmap.c:327:56: error: ‘%s’ directive output may be truncated writing up to 15 bytes into a region of size between 10 and 57 [-Werror=format-truncation=]
             snprintf(devname, sizeof(devname), "netmap:%s%s%s",
                                                            ^~
                     ns->iface, strlen(optstr) ? "/" : "", optstr);
                                                           ~~~~~~
    source-netmap.c:327:9: note: ‘snprintf’ output 8 or more bytes (assuming 70) into a destination of size 64
             snprintf(devname, sizeof(devname), "netmap:%s%s%s",
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                     ns->iface, strlen(optstr) ? "/" : "", optstr);
                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    source-netmap.c:330:59: error: ‘%s’ directive output may be truncated writing up to 15 bytes into a region of size between 8 and 55 [-Werror=format-truncation=]
             snprintf(devname, sizeof(devname), "netmap:%s-%d%s%s",
                                                               ^~
                     ns->iface, ring, strlen(optstr) ? "/" : "", optstr);
                                                                 ~~~~~~
    source-netmap.c:330:9: note: ‘snprintf’ output 10 or more bytes (assuming 72) into a destination of size 64
             snprintf(devname, sizeof(devname), "netmap:%s-%d%s%s",
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                     ns->iface, ring, strlen(optstr) ? "/" : "", optstr);
                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    source-netmap.c:316:54: error: ‘snprintf’ output may be truncated before the last format character [-Werror=format-truncation=]
             snprintf(devname, sizeof(devname), "%s}%d%s%s",
                                                          ^
    source-netmap.c:316:9: note: ‘snprintf’ output 3 or more bytes (assuming 65) into a destination of size 64
             snprintf(devname, sizeof(devname), "%s}%d%s%s",
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                     ns->iface, ring, strlen(optstr) ? "/" : "", optstr);
                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    cc1: all warnings being treated as errors
    
    Gcc 8 with -Wformat-truncation=1

[33mcommit bdd74d413b55632ce17a7f16bb8c5a532d891610[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 19 16:05:30 2019 +0200

    detect/mpm: put transform into 'profile name'
    
    So that profiling gives more info about cost of the mpm
    engines when they use transforms.

[33mcommit 5c735f340fda8675b13d5082094a186b0ba0c661[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 19 16:10:05 2019 +0200

    detect/dns: register correct profile name

[33mcommit 8a59ad60960fba187b78e88949bae37a664dbf94[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 19 15:07:46 2019 +0200

    string: making shortening function global

[33mcommit 26c52495741270dbb400abdf9b21a0483c935cab[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 19 15:03:09 2019 +0200

    device: break string shortening out of device shortening

[33mcommit 7eff6ec500e68df2664d5909d219bbe7d8325e44[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 19 15:02:10 2019 +0200

    device: remove duplicate length check
    
    Shorten code handles all cases correctly.

[33mcommit 2a136c917f6bbed2653284eb4be06daa4da2340c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 19 13:48:33 2019 +0200

    detect: move includes/declarations closer to use

[33mcommit bc866ff2a0ca6afac1652b7087b4219b68aef28f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 19 13:48:15 2019 +0200

    detect: fix inaccurate comments

[33mcommit 4f3bb48f83acb9c784aaa45a4fb4e3bd50ca7cb6[m
Author: Max Fillinger <maximilian.fillinger@fox-it.com>
Date:   Thu Jul 18 13:03:32 2019 +0200

    pfring: Fix kernel version in comment

[33mcommit b37554e0bc3cf383e6547c5c6a69c6f6849c09e3[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jul 17 12:35:12 2019 +0200

    af-packet: fix build on recent Linux kernels

[33mcommit bbfd706e1fd78e838f55345c02218b270ba11276[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Tue Jul 16 14:09:13 2019 +0530

    rust: fix compiler warning
    
    rustc 1.36 introduced:
    
    error: variable does not need to be mutable
       --> src/dhcp/parser.rs:202:17
        |
    202 |             let mut malformed_options = false;
        |                 ----^^^^^^^^^^^^^^^^^
        |                 |
        |                 help: remove this `mut`
        |
    note: lint level defined here
       --> src/lib.rs:18:38
        |
    18  | #![cfg_attr(feature = "strict", deny(warnings))]
        |                                      ^^^^^^^^
        = note: #[deny(unused_mut)] implied by #[deny(warnings)]
    
    error: aborting due to previous error
    
    error: Could not compile `suricata`.
    
    Ticket #3072.

[33mcommit 477328f79b24896488de51aaa75f274e1ee5ed9b[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Jul 10 21:02:09 2019 +0200

    ssl: register probing for port 443 if no config

[33mcommit 8c2c78f0b62b3325659cd8296db6dbfd728943c1[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Wed Jul 17 19:04:36 2019 +0530

    configure: Add date with rev information
    
    Date makes it even clearer that when was the last commit for the build
    that one is running. Add this info alongwith rev. Change inspired by
    rustc.
    
    Before
    ```
    $ suricata -V
    This is Suricata version 5.0.0-dev (rev 2d217e666)
    ```
    
    After
    ```
    This is Suricata version 5.0.0-dev (2d217e666 2019-07-12)
    ```
    
    Closes redmine ticket #3092

[33mcommit 3d5eccf084cec618563bf1173fc62407e85c6111[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Jul 6 09:42:10 2019 -0400

    output/json: Refactor output buffer size macro

[33mcommit 66c565e9e78c9e9248034376e627369d689caac1[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Jun 18 19:06:59 2019 -0400

    eve/json: Break multiline FTP responses into array
    
    This changeset breaks multi-line FTP responses into separate array
    entries. Multi-line responses are those with "text-1\r\ntext-2[...]".
    Each of \r\n delimited text segments is reported in the `reply` array;
    each text segment _may_ include a completion code; completion codes are
    reported in the `completion_code` array.

[33mcommit 9cf4e2e432ec793aa302e2e4ee887d1837e80887[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Jun 15 10:05:20 2019 -0400

    eve/ftp: Refactor and reduce logging functions

[33mcommit 911d423a6bcc70deb8b06fc7b2811a7e078e0fc2[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Jun 15 10:03:23 2019 -0400

    ftp: Generalize prelim positive reply
    
    Extend special case for reply code 150 to handle all preliminary
    positive reply -- reply codes with `1xy`.

[33mcommit 343ba459169b85dbb1d6d3b11e82a31701f89773[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 11 13:33:49 2019 +0200

    ftp: reply code 150 doesn't end tx

[33mcommit b595da6c51eee8ba857166e7cc8862365d4a72e9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 11 12:57:19 2019 +0200

    ftp: fix reply without request
    
    Permit picking up any reply w/o a request. Observed unsolicited server
    messages before connection termination.
    
    Previously the code assumed that this could only happen on connection
    start when there was no previously recorded command.

[33mcommit dc80d520affa690c0f7141fb55aaec47fbf2ade4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 11 12:09:38 2019 +0200

    ftp: implement progress tracking
    
    Make sure FTP_STATE_FINISHED is returned for transactions that
    are marked 'done'.
    
    This is necessary for timely logging and inspection.

[33mcommit 8ae691155d9ffaf0077b6b92b98440a3824491db[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 11 12:08:50 2019 +0200

    ftp: be more strict with tx type

[33mcommit fb019213e72a5bc2dfaac2c56af969e86b5a0336[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Jun 8 12:29:08 2019 -0400

    eve/ftp: minor cleanups and fixes

[33mcommit 1588cd87354126de625f0a43be8b8f181d72729e[m
Author: Zach Kelly <zach.kelly@lmco.com>
Date:   Thu May 23 15:07:28 2019 -0400

    eve/ftp: Bug fix and banner capture
    
    1. Correct off-by-one error in server response whitespace removal
    2. Include banner response (before first command entered)

[33mcommit a04b1c1664a12e30c88dbd27fd7edf791268e02d[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat May 25 07:08:31 2019 -0700

    eve/ftp: Log initial responses
    
    This changeset ensures that unknown commands are logged.
    Unknown commands are either
    - Banner responses when connecting to the FTP port
    - Commands not includes in the FtpCommands descriptor table

[33mcommit a66383569c869be3a93e465b7a37bda62b4d97d9[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat May 25 05:52:40 2019 -0700

    userguide: formatting: remove tabs

[33mcommit c68510437f4ebf0582fcbc73240ab742ed4aec21[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat May 25 05:51:56 2019 -0700

    userguide: ftp formatting updates

[33mcommit 2149807bd62b02d0203887f8cd57b958268ccc4a[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue May 7 15:49:57 2019 -0700

    eve/ftp: Transaction support for unmatched requests
    
    Modified transaction logic to create a new transaction with each
    request; replies location transactions by using the oldest "open"
    (unmatched) transaction or the last transaction if none are open.

[33mcommit 9b88ecb3c186f8df136991ca157868d1b21e1b05[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Apr 30 16:41:05 2019 -0700

    suricata.yaml: Add ftp logging option to eve-log

[33mcommit 1930b1f5043d9eae17c6665ba920a2a7863f2a8e[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon Apr 1 15:14:28 2019 -0700

    eve/ftp: Log FTP transactions
    
    This changeset includes changes that
    1. Add transaction support to the FTP parser
    2. Support eve json logging of FTP transactions

[33mcommit 2d217e66611b767b70634c5c9901a828ac00d690[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Jul 5 08:34:06 2019 +0200

    http: fixes overflow in range parsing

[33mcommit 5ddfc42b87c320bf7882a539c818a09d7a233c18[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 2 15:53:56 2019 +0200

    stream: fix midstream reverse flow handling
    
    When a TCP session is picked up from the response the flow is
    reversed by the protocol detection code.
    
    This would lead to duplicate logging of the response. The reason this
    happened was that the per stream app progress tracker was not handled
    correctly by the direction reversing code. While the streams were
    swapped the stream engine would continue to use a now outdated pointer
    to what had become the wrong direction.
    
    This patches fixes this by making the stream a ptr to ptr that can be
    updated by the protocol detection as well.
    
    In addition, the progress tracking was cleaned up and the GAP error
    handling in this case was improved as well.

[33mcommit 2c1b923500c9dac5781a4a590097df852e484649[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Jun 22 08:09:54 2019 +0200

    ebpf: remove left over debug in lb.c

[33mcommit 94a976d47ef065d298c411f8f4d3f4f32f3fa972[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Jul 3 07:20:25 2019 +0200

    ftp: removes one use of atoi
    
    Fixes only one small part of #3053

[33mcommit 66d6196e9b54d0dfb85cbdc69be7288e798c3446[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 11 09:55:41 2019 +0200

    pcap: code reformatting and minor cleanups

[33mcommit 255ab1528bdd7a1a3d06b6586e1a8989ff5f8a56[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 11 09:37:10 2019 +0200

    flow: minor formatting updates

[33mcommit bcc03f172a05b4c455131315011f4a09a121a198[m
Author: Max Fillinger <maximilian.fillinger@fox-it.com>
Date:   Mon Jul 8 18:21:42 2019 +0200

    af-packet: Always fill in vlan_id
    
    The vlan tag will be filled in either from the extended header (for
    kernel version >= 3.0) or from the packet itself.
    
    Related to https://redmine.openinfosecfoundation.org/issues/3076

[33mcommit 09c54471e579956ea1365ba131f1a2468d25b929[m
Author: Max Fillinger <maximilian.fillinger@fox-it.com>
Date:   Mon Jul 8 18:00:55 2019 +0200

    pfring: Always fill in vlan_id
    
    Previously, source-pfring.c would copy the vlan_id from the extended
    header only if vlan.use-for-tracking was enabled. This commit removes
    that check.
    
    Related to https://redmine.openinfosecfoundation.org/issues/3076

[33mcommit 44bea80d3cc1f90131bb9c289b1996dec36de475[m
Author: Max Fillinger <maximilian.fillinger@fox-it.com>
Date:   Mon Jul 8 16:51:46 2019 +0200

    decode erspan: Always fill in vlan_id
    
    Fill in the vlan_id fields unconditionally. We can now remove the check
    for the vlan.use-for-tracking setting in decode.c. The debug log message
    is moved to suricata.c.

[33mcommit 8d3b04b0e3a013c12261e0d70d76cc9eb83d5773[m
Author: Max Fillinger <maximilian.fillinger@fox-it.com>
Date:   Mon Jul 8 16:01:23 2019 +0200

    decode vlan: Always fill in vlan_id
    
    Since the vlan.use-for-tracking setting is now handled in flow-hash.c,
    we can fill in the vlan_id fields unconditionally. This makes the vlanh
    fields unnecessary.
    
    Related to https://redmine.openinfosecfoundation.org/issues/3076

[33mcommit cef9961f59abecf8c0a66c7dce707dcf556d2bc0[m
Author: Max Fillinger <maximilian.fillinger@fox-it.com>
Date:   Mon Jul 8 12:51:41 2019 +0200

    flow hash: Mask vlan_id if not used for tracking
    
    If vlan.use-for-tracking is disabled, set the vlan_id fields to 0 when
    hashing or comparing flows. This is done using a bitmask as suggested by
    Victor Julien in IRC, in order to avoid adding more branches to this
    code.
    
    Currently, suricata does not fill in vlan_id fields if
    vlan.use-for-tracking is disabled and instead leaves them at the default
    0 value, so this commit makes no functional change. This change is in
    preparation for future commits where the vlan_ids will be always filled
    in.
    
    Related to https://redmine.openinfosecfoundation.org/issues/3076

[33mcommit 38731d30da10284c7790f1965ced8e2f7f1da5da[m
Author: Max Fillinger <maximilian.fillinger@fox-it.com>
Date:   Fri Jul 5 16:59:36 2019 +0200

    flow hash: Make CMP_FLOW macro an inline function

[33mcommit 7ccf14bc60e9d35032c8347a9f337ba5406ca593[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 9 14:02:20 2019 +0200

    runmodes: remove unused prototypes

[33mcommit c12252617c885a4278650ba5f9b2d183fa66afa2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 9 13:48:16 2019 +0200

    afl: fix afl-ftp causing FPE due to missing ippair

[33mcommit 9e70716d5ae8d8b9859ee23724b144a47cb8a4d2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 9 13:46:23 2019 +0200

    runmodes: remove no-Rust logic

[33mcommit 8c6251ea6c71418f65e28db885cbeca3f8055cfc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 9 13:20:44 2019 +0200

    runmodes: simply default runmode logic

[33mcommit 3282fb49675adb19f66b195f33bb4b30ecc5a162[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 9 13:07:22 2019 +0200

    runmodes: code cleanups

[33mcommit feda5e73922b8590100d6ea3c1f097c0d4b07f89[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Jul 3 11:34:26 2019 +0200

    leak: Fixes leak in AppLayerProtoDetectPMRegisterPattern
    
    Fixes #3070

[33mcommit 66c500eaac41bd471efe9d0171ec09a0be98417a[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Jul 3 16:39:19 2019 +0200

    leak: Fixes leak in DetectAppLayerEventPrepare

[33mcommit 684f1017103bcd725d860fd2e23e9ef7fc9ee8fd[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Jul 3 15:33:15 2019 +0200

    log: use SCLogError instead of fprintf

[33mcommit 19ab85f17e878dc237695be5f61b3fb269749eab[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Jul 3 15:26:08 2019 +0200

    leak: fixes leak in DetectAddressParse2

[33mcommit 8b87801b80f16d4b24c419221b49e43370ff6932[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 21 21:40:20 2019 +0200

    geoip: fix unittests w/o db present

[33mcommit a7d65668ae162518ba9843a38b24aa27240b43c9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 21 15:50:36 2019 +0200

    mem: avoid potential shadow vars with 'len' name

[33mcommit d1525c6fb80fa54cfc18ea2a0ff1e71a4c97a661[m
Author: Bill Meeks <bmeeks8@bellsouth.net>
Date:   Fri Jun 21 09:27:48 2019 -0400

    mem: add SCStrndup() function to wrap strndup().

[33mcommit a291209e473a261546363f0d9051f1e3b82e699a[m
Author: Bill Meeks <bmeeks8@bellsouth.net>
Date:   Fri Jun 21 09:26:01 2019 -0400

    detect/geoip: migrate to GeoIP2 database format
    
    Issue #2765

[33mcommit d6323ae33d9109b134441feb8515a62b09f989d7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 30 20:55:18 2019 +0200

    detect/mpm: improve stats reporting

[33mcommit 24f0092b7214a500f8b7f75fe1a866a9efebe26a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 30 11:07:39 2019 +0200

    detect: add ipv6.hdr sticky buffer
    
    Inspects IPv6 header and extension headers.

[33mcommit 3c9a55781098e13e6609ca3d69aa7ac7c9bb623f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 30 11:07:05 2019 +0200

    decode/ipv6: track length of ext hdrs

[33mcommit 9252400f680433002b172bc7ce8dc81eb860a801[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 30 10:26:24 2019 +0200

    decoder/ipv6: minor cleanups
    
    Remove unused field and macros.
    
    Minor code style cleanups.

[33mcommit 4ac327f5b58f02a236e3d0e0a27f9af0f93b6ade[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 27 07:05:18 2019 +0200

    detect/ipv4: add ipv4.hdr sticky buffer

[33mcommit 367e3e1895c6852530bb2f5b17ebf3153989f946[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 26 14:42:55 2019 +0200

    detect/tcp/udp: minor cleanups

[33mcommit 4dff903b356bd155896eab516cda5bccd63b8a4f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 28 19:36:24 2019 +0200

    detect: introduce pkt mpm engines
    
    Instead of the hardcode L4 matching in MPM that was recently introduced,
    add an API similar to the AppLayer MPM and inspect engines.
    
    Share part of the registration code with the AppLayer.
    
    Implement for the tcp.hdr and udp.hdr keywords.

[33mcommit 14896365efa44ae5ed9eb3460a0f469cfc71b7e6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 28 19:29:55 2019 +0200

    detect: remove Threadvars argument from API calls
    
    Remove it as it's (almost) never used. If it is really needed it can
    be accessed through DetectEngineThreadCtx::tv as well.

[33mcommit c1dd4534d9c3d47babeb3e1104581e18182797f3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 26 11:12:22 2019 +0200

    detect/bsize: support transforms in case w/o content

[33mcommit 963abc961cc65331935f92c9f95e07a460c4506a[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Jun 28 09:00:08 2019 -0600

    python: fix parsing Suricata version from configure.ac
    
    If parsing the version fails, or no version is found, fail
    instead of defaulting to a version of 0.0.0.

[33mcommit 82de6e06590cce00056d6886c8739271fbd33b05[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 26 12:22:33 2019 +0200

    decoder/vxlan: improvements and cleanups
    
    Implement port config handling. Also check both src port and dest
    port for tunnels that only set the destination port to the VXLAN
    port. At the point of the check we don't know the packet direction
    yet.
    
    Implement as Suricata tunnel similar to Teredo.
    
    Cleanups.

[33mcommit 3519b011b7784b570c7de09e64e6f28988ef33be[m
Author: Henrik Lund Kramshoej <hlk@kramse.org>
Date:   Tue Jul 17 07:37:12 2018 +0200

    decoder/vxlan: initial implementation of decoder

[33mcommit 35b88991c309a36bee741ced2f1935fb85d1d0d0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 21 13:14:21 2019 +0200

    mem: fix shadow declaration warning
    
    Avoid clash by adding a leading underscore to the declaration in the
    macro. These temporary vars should never clash with valid variables
    from the code where they are called from.

[33mcommit 034555644bfe977db85bfd1363ee24da63951b58[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 21 11:10:13 2019 +0200

    doc: add tcp.hdr and udp.hdr

[33mcommit e30a77c5a1333d193e6e6dc7f7aac28ddd1006cc[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Jun 20 09:45:11 2019 +0200

    warnings : Fixes integer sizes in format strings

[33mcommit 0795dc1e143c7751d2233c73ca61946c49854415[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Wed Jun 19 00:07:43 2019 +0200

    configure: update configure.ac to reflect modern autoconf syntax

[33mcommit af7d245a315ed6d1d419c6190f604fd03881b214[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Tue Jun 18 17:05:39 2019 +0200

    rust/snmp: add event when expected/received PDU versions mismatch

[33mcommit 1880f6945c7ef3ed7de8735368f3834cca4b2a60[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Tue Jun 18 16:34:04 2019 +0200

    rust/snmp: use generic parsing function, for all SNMP versions
    
    Do no restrict parsing to the version seen in the first packet, but
    use a generic function, independent of the version.

[33mcommit 577c8cb0c0bff52145ca53d20b32855bd4ed1091[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Jun 17 23:00:48 2019 -0600

    dns-log: remove from config
    
    dns-log has been removed from the code.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/2297

[33mcommit ba5679de0f25a21ad5f61723cd93f4e63aff428c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 19 17:03:28 2019 +0200

    profiling: fix undefined profiling code use

[33mcommit ac694b089a2fb6dabba2265b949173ffdaf0b252[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 19 16:51:44 2019 +0200

    detect: add udp.hdr sticky buffer

[33mcommit bdf53f449ce9daa9e0c08fb0f9040cad0e12a7bb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 19 14:10:09 2019 +0200

    detect/tcp: rename tcp keyword files

[33mcommit 47919fd0e468e49354c7ca513bc1620149c96cc2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 19 14:00:18 2019 +0200

    detect/tcp: add tcp.<field> notation variants

[33mcommit 0cecb1c3b29a0ed87d65b1f124a029aea533c29c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 19 12:48:22 2019 +0200

    detect/prefilter: minor error handling cleanup

[33mcommit 35be8385eb77f6f292eb3d34f9a997ab714f22af[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 19 12:54:13 2019 +0200

    detect: tcp.hdr sticky buffer
    
    Sticky buffer to inspect the TCP header.

[33mcommit 47ef8f58224ebc7836570c7e9d3cfab513681a35[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 19 09:08:15 2019 +0200

    detect/mpm: add l4-header support
    
    Prepare MPM part of the detection engine for a new type of per
    packet matching, where the L4 header will be inspected.
    
    Preparation for TCP header inspection keyword.

[33mcommit 0965afd661327f33b3f494e88e33bd38e28e3a5e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 19 12:53:52 2019 +0200

    detect: pkt inspect engines
    
    Instead of hard coded calls to the inspection logic for
    payload inspection and 'MATCH'-list inspection use a callback
    approach. This will register a callback per 'sm_list' much like
    how app-layer inspect engines are registered.
    
    This will allow for adding more types later without adding
    runtime overhead.
    
    Implement the callback for the PMATCH and MATCH logic.

[33mcommit 2a778e439a41b66b06136a71438dce93bd615448[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 18 20:21:00 2019 +0200

    detect/build: minor code cleanups

[33mcommit a01df4b86b4089c5f227c205d3d4dc755783e654[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 18 15:05:51 2019 +0200

    doc: document tcp.mss keyword

[33mcommit 66648df0995e61bbcef0ad2c4a556971293f39b5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 18 14:39:28 2019 +0200

    detect: add tcp.mss keyword
    
    Allows matching on TCP option MSS.
    
    Syntax:
    
        tcp.mss:<value>;
        tcp.mss:<value1>-<value2>;
        tcp.mss:<op><value>;
    
    Operator can be: >, <.

[33mcommit d2fdbc7d6f7e253c3a892e30dfba7af0cf6ac4d9[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu Jun 13 19:52:07 2019 -0400

    output/json: Avoid use of uninitialized value
    
    In JsonPacket, a Base64Decode error could cause an uninitialized
    variable to be used because its return value is ignored.

[33mcommit 6911cc01add013123513b927c64b09bb4dcee153[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Jun 11 18:56:59 2019 -0400

    rust/snmp: Support get-info-by-id

[33mcommit 7560b75591e6b33649672695599c0a2ff1260569[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Jun 11 18:56:43 2019 -0400

    rust/ntp: Support get-info-by-id

[33mcommit 12c2d18c8bfbfba88232e7f9dd49a47fc768dae2[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Jun 11 18:56:28 2019 -0400

    rust/krb: Support get-info-by-id

[33mcommit fb01641629e5ac18201d0abbf2683d2ade5b55ac[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Jun 11 18:56:11 2019 -0400

    rust/ikev2: Support get-info-by-id

[33mcommit e3ca6b43fc9e1296771a996da839520c63052959[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Jun 11 18:55:36 2019 -0400

    rust/dhcp: Support get-info-by-id

[33mcommit a5d9d37c348f337374a95b2c2f994d54d06a63d6[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Jun 11 18:53:35 2019 -0400

    rust/parser: Extend Rust parser for event-by-id
    
    Extend the Rust parsing infrastructure with the "get event info by id"
    calls. This changeset extends the parser structure, the C-based
    registration handlers and the template parser.

[33mcommit 294d0e8cbab31bc5193f4995f7802be64a81e584[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun Jun 9 07:25:37 2019 -0400

    snmp: Fix type

[33mcommit 9ccc28baebb1cfef6161d88dd33fe855b34891bf[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Jun 8 16:07:23 2019 -0400

    rust/smb: Implement get event by id

[33mcommit 643864a8f58dbf10e2a3f3b7080ff6ee0a429a38[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Jun 8 09:17:37 2019 -0400

    rust/snmp: fix libc deprecation warnings

[33mcommit 3f6624bf1612fb4dabfc7d9e62f826124f7306de[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 3 17:04:21 2019 +0200

    rust: remove libc crate dependency
    
    Use std::os::raw instead.

[33mcommit 28ed0d3a18720be4d3eb572f853934707a220ad8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 3 16:08:29 2019 +0200

    nfs: implement get_event_info_by_id callback

[33mcommit 429ca858dcdf02ff86bc7dc99f5c096837b51d61[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 3 16:21:15 2019 +0200

    rust/gen: turn *mut*const T into const T **

[33mcommit 6cd39c5cfb645e06b8b5fcdb3a951f4e5d9c400a[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Jun 1 07:45:42 2019 -0700

    userguide: Document app-layer anomaly items
    
    This changeset expands the anomaly section to include newly added
    app-layer items.

[33mcommit d568e7faddd9d8db1eba1c449e7b2da458374f42[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat May 25 13:38:45 2019 -0700

    eve/logging: 2991 Optimize logging by TX
    
    This changeset makes changes to the TX logging path. Since the txn
    is passed to the TX logger, the TX can be used directly instead of
    through the TX id.

[33mcommit 488446cf3714754c457ef5da2abc2b55d550ff8a[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue May 21 14:56:32 2019 -0700

    logging/anomaly: Track event log progress
    
    This changeset adds a mechanism to track when individual events
    are logged. Transactions can be provided more than once; track
    events to prevent event re-logging.

[33mcommit 4a39d7a1eecfc91c4d9b372559e401c7d272825d[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue May 21 14:55:45 2019 -0700

    app-layer: Extend event container with progress

[33mcommit 07c05f7dd813b4a6f0018c55d5d62f8986d45f6f[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu May 16 17:11:49 2019 -0700

    logging/anomaly: TX based logging addition

[33mcommit 36644907f52811980a355dd8c2614cebdf8cab98[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu May 16 17:10:56 2019 -0700

    app-layer/logging Add TX packet logging support
    
    Add transactional logging support for packet based loggers, like
    the anomaly logger.

[33mcommit f7b934f83f0da14a17bfe34b52f3b7d4b754283e[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue May 14 16:58:47 2019 -0700

    app-layer/logging: protocol parser updates

[33mcommit 49438569a2036713db577e878bb3b4f29a5e8c31[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue May 14 16:57:51 2019 -0700

    logging: anomaly log updates

[33mcommit 50e23ba93a3c7137bd73b3a0ca41185541d0bd49[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon May 13 14:58:21 2019 -0700

    app-layer: Initial app layer logging

[33mcommit 4e8d38348f0badfa863ed48aa2a2af1636728096[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 20 09:16:41 2019 +0200

    flow: no bypass manager for Windows

[33mcommit 287b87b81b34a425bb25fa69f294f4d61af82253[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 19 19:39:52 2019 +0200

    bypass: switch to gettimeofday

[33mcommit d8614a15c6b65c588eadddb5233dc9d0b304de04[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 18 15:58:36 2019 +0200

    mingw: fix compile error
    
    Declare _POSIX_C_SOURCE before sys/time.h to avoid:
    
    util-time.c: In function 'SCUtcTime':
    util-time.c:222:12: error: implicit declaration of function 'gmtime_r'; did you mean 'gmtime_s'? [-Werror=implicit-function-declaration]
      222 |     return gmtime_r(&timep, result);
          |            ^~~~~~~~
          |            gmtime_s
    util-time.c:222:12: warning: returning 'int' from a function with return type 'struct tm *' makes pointer from integer without a cast [-Wint-conversion]
      222 |     return gmtime_r(&timep, result);
          |            ^~~~~~~~~~~~~~~~~~~~~~~~
    util-time.c: In function 'SCLocalTime':
    util-time.c:305:9: error: implicit declaration of function 'localtime_r'; did you mean 'localtime_s'? [-Werror=implicit-function-declaration]
      305 |         localtime_r(&timep, &cached_local_tm[lru]);
          |         ^~~~~~~~~~~
          |         localtime_s
    util-time.c:321:56: warning: comparison between pointer and integer
      321 |         if (localtime_r(&timep, &cached_local_tm[lru]) == NULL)
          |                                                        ^~
    cc1.exe: some warnings being treated as errors
    
    Tickets: #2994 #3051

[33mcommit 1f151dd8a6404dd31c2363cd4c134a6916cec7f8[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jun 14 22:08:51 2019 +0200

    doc: address norg comments on eBPF doc

[33mcommit 8692aac97ff73ee4aca29fa620ef667b16361504[m
Author: Eloïse Brocas <eloise@brocas.org>
Date:   Wed Jun 12 11:37:10 2019 +0200

    doc: specify config file in ebpf doc
    
    This patch updates the ebpf-xdp.rst file to specify which
    configuration file has to be modified.

[33mcommit 6126f105ea00c069efd5534959fdcc85ef45b995[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jun 12 02:52:56 2019 +0200

    util-ebpf: fix creation of flow from pinned maps

[33mcommit 7df30070660014c062b252ada1697037a389daac[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jun 12 00:43:47 2019 +0200

    af-packet: xdp pinned maps need to be read

[33mcommit 4ba02830b6705a6f46e931ac9fb9ea65e79c2e6c[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jun 12 00:40:23 2019 +0200

    flow-bypass: registration of non periodic check
    
    This patch adds the capability to register a set of functions
    without providing a periodic check function. This permit to
    run a task only at init.

[33mcommit 3e8fd26ee3f81fe3fc6c3ef48a1d8481af26adc9[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jun 11 23:38:55 2019 +0200

    flow-hash: real hash computation for FlowKey

[33mcommit 0963fea3904b4b675b1b565acba492e9571e6bba[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jun 11 23:38:25 2019 +0200

    util-ebpf: log bypassed flow maps count

[33mcommit eea3c6b6107a30b35675e21cce3bfb442361f005[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jun 11 23:01:22 2019 +0200

    doc: info for new bypass counters

[33mcommit 7e5439bc1577670e654499a04e6a225cb6aeb292[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jun 11 22:21:45 2019 +0200

    bypass: add counter for local captured bypass
    
    Packets from captured bypassed flows that are received by Suricata
    before the capture method start to bypass them can represent an
    important part due to various buffer and insertion delay.
    
    This patch adds a two counters to know the number of packets and
    bytes in this case.

[33mcommit de52e78e653f580448f725aea77776cb4e19c83c[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jun 11 22:05:59 2019 +0200

    bypass: flow bypass is not ebpf only

[33mcommit c938dbde27eb99bf19195e9ab2ae266d874f7468[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jun 11 22:05:34 2019 +0200

    util-ebpf: early exit if no map

[33mcommit e5d325a6cabc736d4697ac941f14d5c5f5b402f5[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jun 11 20:30:14 2019 +0200

    util-ebpf: reindex

[33mcommit aa989a7445e6ca4186ae7d0ca4c0b8b249826e0d[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jun 11 16:53:28 2019 +0200

    af-packet: some conditional fields

[33mcommit e3dccb2400245cf78f1f841ed6c42710c1750530[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jun 10 23:20:25 2019 +0200

    doc: update bypass stats doc

[33mcommit abbb066a96630e19aa8f7123a5b60175f03d8f44[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jun 10 22:48:10 2019 +0200

    bypass: bytes and pkts counters for local bypass

[33mcommit 9206b30fe14060ad4b5f01f079fe8987e60bef8e[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jun 10 16:40:47 2019 +0200

    af-packet: better accounting and error handling
    
    This patch improves the bypass error handling add adds more counters
    to the interface so it is possible to get a view on success and
    failure of insertion in the eBPF maps via the `iface-bypassed-stat`
    command.

[33mcommit aeb2bd3aa180fbb1d1de6dd15981d413d5442644[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jun 10 14:55:20 2019 +0200

    util-ebpf: optimization on flow storage queries

[33mcommit 288f335aa57323946a7c70decc43455de5652e7f[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jun 10 12:23:11 2019 +0200

    util-ebpf: simplify free function
    
    First key can't be null.

[33mcommit f4abe2f9c05fe7345d6d8c04d9ab14fd1adb73d1[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jun 10 12:18:21 2019 +0200

    util-ebpf: set livedev in flow
    
    This will fix the accounting for pinned maps as the livedev field
    of Flow is used to do the accounting of bypass flows.

[33mcommit 98e7d9d1c0ee4d2392698ea3ef2381f214de51cd[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jun 10 12:11:43 2019 +0200

    util-device: introduce bypassed stats sub function

[33mcommit f29a4b8beec3e1f371fc74abd0e0e6355a1785e8[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jun 10 11:45:33 2019 +0200

    flow-manager: move bypass timeout to a inline func

[33mcommit 89e8cb50edf0fc6216954b1937ef9489c90ab3df[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jun 10 01:11:17 2019 +0200

    util-ebpf: case is not possible so remove warning

[33mcommit 8c97998cb96a2c5136d4345a9d7588e3512aca26[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jun 10 00:55:17 2019 +0200

    bypass: implement iface-bypassed-stat for callback

[33mcommit 51ab06256a50f8e7143cc7bfd4807a59ac66dfaa[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jun 10 00:03:57 2019 +0200

    bypass: account callback method in stats

[33mcommit f78e5ba1e122cc736d6599351413d8e30bd31ee8[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Jun 9 23:32:36 2019 +0200

    bypass: restore interface counter

[33mcommit d119845d9862313817e5bc8c7d413cd3cfeeffe5[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Jun 9 23:00:53 2019 +0200

    bypass: compress flow keys structure

[33mcommit 69d2c8eb750ab20aa8577833ed4fb05d23d89375[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Jun 9 22:09:42 2019 +0200

    ebpf: get rid of hash in map value

[33mcommit b07bda7a7b223f1c7058335dcb8e9b5843d9af46[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Jun 8 18:11:22 2019 +0200

    bypass: new callback stragegy
    
    This patch introduces and uses a new bypass strategy
    based on a callback. EBPF bypass implementation is
    updated to use this new strategy.
    
    Once the flow manager detect that a flow should be timeouted,
    it asks the capture method if it has seen packets in the interval.
    If it is the case the lastts of the flow is updated and the timeout
    is postponed.

[33mcommit fcae1c18de348762c25cf703de71c3a06009235c[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jun 5 23:33:17 2019 +0200

    af-packet: improve error handling for some hw
    
    Some cards seems to return EAGAIN when there is no more place in
    the hash table.

[33mcommit 0bfbb4a88991a08115c28fdb4721f893d11b91ae[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jun 5 15:12:13 2019 +0200

    bypass: fix accounting
    
    The flow bypass stats is computed at every pass so the accounting
    needs to be done at each pass. This patch fixes the accounting
    in the flow_bypassed counters.

[33mcommit 44566e5a24a103581aec80b1d02a0b71c74fd1eb[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jun 4 16:22:52 2019 +0200

    ebpf: only display that file is loaded if we do it

[33mcommit 5e62ae6d28a43dfac716100e342130cabe1149ba[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jun 4 14:48:03 2019 +0200

    af-packet: avoid error flooding when bypass fails

[33mcommit af6daceeda128296cfc075b39b411c696a1cbce7[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jun 4 13:49:32 2019 +0200

    util-ebpf: more useful error message
    
    At the time of the writing, libbpf output useful error message
    on strdout only and errno is not really interesting. So let's
    tell user to look at stdout.

[33mcommit 833d9ef7e1f7b37c2c35079e6fd09f77b65f1040[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Jun 1 17:04:40 2019 +0200

    ebpf: don't use nexthdr to build hash
    
    As pointed by Victor Julien, it is not a good idea to use the
    nexthdr value, as init key for the hash as it could contain some
    other headers and can be changed for a session.

[33mcommit 0f64c25b73410d19a3c80fb05dd5f90911fba458[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri May 31 13:20:34 2019 +0200

    util-ebpf: improve code readability
    
    As pointed by Victor Julien, the pkts_cnt usage was quite confusing
    so functions are now returning a bool.

[33mcommit a8f35cc30ec91d0a01615906e4f5dddae93c4467[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri May 31 12:58:50 2019 +0200

    util-ebpf: discard flow if no Flow storage

[33mcommit dbf3606169089469c59ea05cd6bb82309faad3b7[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 28 23:54:08 2019 +0200

    doc: document flow event_type

[33mcommit efb648aa24bf0f62d3f6e95a2b1edd87a3a2369f[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 28 23:10:53 2019 +0200

    util-ebpf: fix ebpf bypass
    
    Fix endian order in eBPF bypass. It has to be updated after the
    bypassed flows handling change.

[33mcommit f8aa9ee9868f748e80c57acbfca3da96d594abf4[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 28 12:26:23 2019 +0200

    bypass: fix wait time at exit
    
    The loop on bypassed flow maps can take a few seconds on heavily
    loaded system causing Suricata to not honor a stop before a few
    seconds.
    
    This patch adds the code needed to detect the need to exit from
    the check loop.

[33mcommit a277f2eb0c773a0e9c88a720a7984c5be3fca93a[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun May 26 23:44:03 2019 +0200

    af-packet: fix use after free on config
    
    ASAN did find that afp config was used after free. This was in
    fact done in the Flow bypass manager hence this patch.

[33mcommit fc2f2fa7d3eb6406307a38123fe171805113915f[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat May 25 16:04:03 2019 +0200

    bypass: allow bypass for packet without flow
    
    For capture method that have their own flow structure (not maintained
    by Suricata), it can make sense to bypass a packet even if there is
    no Flow in Suricata.
    
    For AF_PACKET it does not make sense as the eBPF map entry will
    be destroyed as soon as it will be checked by the flow bypass
    manager. Thus we shortcut the bypass function if ever no Flow is
    attached to the packet.
    
    This path also removes reference to Flow in the bypass functions
    for AF_PACKET. It was not necessary and we possibly could benefit
    of it if ever we change the bypass algorithm.

[33mcommit 285768c59ecbfd6e7ecc2c0be3d14afe9d46c15a[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun May 19 12:37:58 2019 +0200

    ebpf: fix bypass filter vlan

[33mcommit 8a11581ac88b5f9cf4251ad3de875148e5ef9694[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri May 17 20:01:36 2019 +0200

    doc: update ebpf doc following bypass_filter change

[33mcommit 853d832de75b22ef1b3be34f13f8fbdac5c51983[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri May 17 19:55:39 2019 +0200

    ebpf: complete vlan support for ebpf bypass filter

[33mcommit 253c011c70074d0609dfb3206d5d143c77691d9c[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun May 12 09:52:51 2019 +0200

    doc: update for latest xdp_filter.c change

[33mcommit 6ab1cbcb8ef87ba6df05a14e045170088ab2c19b[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Mar 24 19:47:02 2019 +0100

    bypass: use flow storage for bypass counter
    
    There is a synchronization issue occuring when a flow is
    added to the eBPF bypass maps. The flow can have packets
    in the ring buffer that have already passed the eBPF stage.
    By consequences, they are not accounted in the eBPF counter
    but are accounted by Suricata flow engine.
    
    This was causing counters to be completely wrong. This code
    fixes the issue by avoiding the counter change in invalid
    case.
    
    To avoid adding 4 64bits integers to the Flow structure for the
    bypass accounting, we use instead a FlowStorage. This limits the
    memory usage to the size of a pointer.

[33mcommit 640bc937b4843e0cfa575243658508af82d71df1[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat May 11 11:43:59 2019 +0200

    ebpf: add vlan tracking option to xdp_filter
    
    If vlan is not use for tracking in Suricata this result in vlan not
    being used in the flow key in Suricata and we need to adjust that
    in the XDP filter to avoid any problem.

[33mcommit 34b8583f35eb7187c11c71adafe222254e508a4d[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat May 11 11:14:23 2019 +0200

    ebpf: tls encrypted bypass in xdp_filter
    
    Tests have shown that when we bypass encrypted traffic a non
    neglicteable amount of encrypted  packets of the session are already in the
    capture ring buffer. Result is that Suricata is doing unnecessary
    work on these packets.
    
    These packets can be identified via the first bytes of their payloads
    so we can bypass them directly in the XDP code. This is done here
    for application data packets on port 443 and for TLS 1.2.

[33mcommit d2d3a5a92ac60d7c8ae28510d85344d044f74606[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat May 11 11:09:40 2019 +0200

    ebpf: fix UDP bypass in xdp_filter

[33mcommit 98b68e87eb8456b8f74d4237de9ce5943b83b522[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Apr 23 10:51:05 2019 +0200

    ebpf: fix typo in xdp_filter.c comment

[33mcommit 4e6add7faa9c39d699112defcd036779ae89c9f9[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Apr 23 09:40:47 2019 +0200

    bypass: generalize iface bypass stats
    
    Introduce functions in util-device.c to be able to manage the
    flow bypassed count stats.

[33mcommit 7e8f4b70f0334d285555f11048c203ea908a6b13[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Apr 21 20:57:03 2019 +0200

    ebpf: add comment for some define in XDP filter

[33mcommit 455d78728ea478fbffe97910bc32db43993d99b2[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Mar 23 10:44:51 2019 +0100

    ebpf: remove useless var in xdp_filter

[33mcommit 258e90be7695a067530eb966f40976bce6f6cd19[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Mar 23 10:40:33 2019 +0100

    util-ebpf: change flow accounting logic
    
    Update the flow counters during the life of a bypassed flow
    instead of just accounting at the end of it.

[33mcommit 3026e9a80db2450dfbe428b43e901fc5a24057fe[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Mar 17 21:11:25 2019 +0100

    util-ebpf: better error handling

[33mcommit 2ffd3ad2b7b1c97ecbe900f38eb4fea0c1f65cbe[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Mar 17 21:07:51 2019 +0100

    util-ebpf: better error handling of map unlink

[33mcommit b952b32a265de80ceae3d67d16561b8f26c78e2b[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Mar 17 21:00:50 2019 +0100

    util-ebpf: rename field 'unlink' to avoid confusion

[33mcommit edf2db4e30d2f7081d290f00734930eb95803692[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Mar 17 20:58:42 2019 +0100

    af-packet: improve warning message

[33mcommit 567b5ee1bc76896861341829864dcf65e608de3b[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Mar 17 20:50:29 2019 +0100

    af-packet: rename option 'no-percpu-hash'

[33mcommit 0f6b1297a9e05f687bf0c2dc85945b3886db29ab[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Mar 17 20:34:52 2019 +0100

    af-packet: warn when XDP is not supported

[33mcommit b1c9b39435fa98988622999c57e349bc3ff92b4d[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Mar 17 20:32:39 2019 +0100

    af-packet: remove question from code

[33mcommit 1992093c8861b933bb6de37a9bc99934fb7c5af1[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Mar 17 20:24:58 2019 +0100

    flow-bypass: rename variables

[33mcommit d239e0f2d58ed17422f6135892ae592294a1f837[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Mar 17 20:22:55 2019 +0100

    flow-hash: doc and code cleaning

[33mcommit b73634497535ceb66954829a01a67ec4b9365269[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Mar 17 20:00:04 2019 +0100

    flow-bypass: clock_gettime error handling
    
    Only reason clock_gettime could fail is a permission so let's
    error and leave the flow bypass manager if it is the case.
    
    Also let's suppress the error message if ever the error appear in
    the middle of a run (which is unlikely).

[33mcommit 4129938c2164cf5b9063f423fa63e8d3ecba9a1b[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Mar 17 19:51:14 2019 +0100

    util-ebpf: log level fixes and code cleaning

[33mcommit 140269a6be1bb1180fe930bfe09af12368ce1130[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Mar 17 19:45:58 2019 +0100

    util-ebpf: init code optimization

[33mcommit ccb8f3cd4b1bf042cc3734195549d4184a09b6c3[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Mar 13 09:01:04 2019 +0100

    configure: libbpf path

[33mcommit 373afab9e0d2658a4cdd82a77226b0b2611ff8b9[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Mar 10 20:47:06 2019 +0100

    ebpf: reindent xdp_filter.c

[33mcommit ca50f8852ed041e0dc0edcb09e382aab773687d4[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Mar 10 16:58:25 2019 +0100

    doc: improve ebpf doc
    
    Add example of bypass rules and explain clang dependency.

[33mcommit c11eb781410d0c1b692ac837de53c2872abe57ce[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Mar 10 00:01:39 2019 +0100

    doc: document netronome hardware bypass usage

[33mcommit c5e2af05459e809deba76547110248af8b73ced8[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Mar 10 11:53:22 2019 +0100

    util-ebpf: fix error reported by coccinelle check
    
    Some allocation errors were not checked during init phase.

[33mcommit c1fd0da550feb8524688e57cb54aa6b2052bab99[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Mar 9 21:47:40 2019 +0100

    af-packet: add vlan_id in bypass key
    
    Bypassing on vlan was not supported due to the missing key.

[33mcommit 651a27e4fb9d9a8b56da4b390492140de114b398[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Mar 9 15:13:26 2019 +0100

    ebpf: fix percpu hash handling
    
    An alignement issue was preventing the code to work properly.
    We introduce macros taken from Linux source code sample to get
    something that should work on the long term.

[33mcommit 142c69e1ef2b672c826048cd83b6bf6fbfc95198[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Mar 6 00:16:33 2019 +0100

    flow-bypass: increase bypass timeout
    
    This is needed as we did switch from counter maintained in kernel
    to internal polling so we need a bigger value.

[33mcommit b8e184ceb58821838235c58d437f57b382c41faf[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Mar 5 23:54:36 2019 +0100

    flow-bypass: fix timeout of maps bypassed flows
    
    The time is taken from the parameter and is checked against real
    flow entries so we need a standard time.

[33mcommit 07d0bd3a0fe1e31fd80c52f312a4d75a11400355[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Mar 5 23:28:26 2019 +0100

    util-ebpf: fix IPv6 deletion loop

[33mcommit b481f290e275df574b66a67de664665e575b4007[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Mar 5 23:12:12 2019 +0100

    af-packet: fix bypass for IPv6

[33mcommit 3bd8ba5d0024a3d4d104ee56599b372ae3688f34[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Mar 5 22:09:29 2019 +0100

    util-ebpf: add message if key deletion fails

[33mcommit 269f601f8a371df273d16171386070831403457a[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Mar 5 00:44:11 2019 +0100

    util-ebpf: can't delete in place so update algo

[33mcommit 5b056c15bfb63193910e4541e054b78c40b865a1[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Mar 4 23:34:04 2019 +0100

    af-packet: fix default in pinned maps name

[33mcommit eff56acca5563ef1b55c81deff49fbe66f992379[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Mar 4 23:18:36 2019 +0100

    af-packet: be sure to nullify option if not set

[33mcommit 36c6a62954858e0ccb04c381ace018e17f6cd5d9[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Mar 4 22:37:50 2019 +0100

    util-ebpf: simplify function declarations

[33mcommit 69630d7a1783fd3da9c016ed2edba23165e294ce[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Mar 4 22:17:50 2019 +0100

    util-ebpf: micro optimization

[33mcommit d21c3a6555a797ba5a6a96aaaa088763db7f3da8[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Mar 4 00:11:36 2019 +0100

    util-ebpf: create flow from bypassed flows

[33mcommit 04c65a309e90b5312280ff9d6c437e1925e94d77[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Mar 4 00:10:54 2019 +0100

    flow-hash: new function to get flow from flowkey

[33mcommit 885fc992dea758e13d689ec273ddd88c23ec5e22[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Mar 3 21:06:53 2019 +0100

    ebpf: make table iterator generic
    
    Also adds a basic skeleton for flow creation loop.

[33mcommit 880c42f11ca9b408a19bebb78de01b9712a836ed[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Mar 3 20:42:06 2019 +0100

    af-packet: bypass with init function

[33mcommit f93573ac5e79b3981932dee40ae0ce64d931e96b[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Mar 2 23:21:05 2019 +0100

    ebpf: fix indentation in xdp_filter

[33mcommit 522e98d830cd3910c16152747622925ed635093b[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Mar 2 22:26:12 2019 +0100

    util-ebpf: fix iteration in flow timeout
    
    We were not setting the key using the correct item in map. Result
    was deletion of wrong flow.

[33mcommit f270e534773e0dcddac73df36ec49e7a7b4d9a49[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Feb 25 23:54:11 2019 +0100

    ebpf: set number of RSS queues to a power of 2
    
    This is needed as netronome can not do a division (so can't do a modulo)
    in hardware.

[33mcommit 82c4f5135b52df3010a49cf66d9faff12c484d91[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Feb 25 22:11:27 2019 +0100

    doc: use github mirror to setup libbpf

[33mcommit 94bda5b7fbb4965f3ccfbba22608c36e9e541bb0[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Feb 25 14:18:02 2019 +0100

    ebpf: implement RSS load balancing in hardware mode

[33mcommit 8b4c3653527e383318fed2154b7beda83bcd3f94[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Feb 25 13:27:20 2019 +0100

    ebpf: use atomic for counter in hw offload case

[33mcommit 0c3e1e85799232251fc262c3c68756dd3694cd8a[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Feb 24 23:57:04 2019 +0100

    af-packet: correctly set up hardware offload

[33mcommit 7f60be83f53d60f260cc96994b2dd43211ba3bb9[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Feb 24 23:51:04 2019 +0100

    ebpf: more conditional code for netronome support

[33mcommit 638a006e877e489074475af553e0a56e704a2b7c[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Feb 14 12:54:32 2019 +0100

    ebpf: remove BPF_LL_OFF in nhoff offset
    
    It fixes invalid parsing in with recent kernels and does
    not affect older kernels.

[33mcommit bd28f77a1e5342bf746198ba7a63d5301a83c5e8[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Feb 13 16:11:53 2019 +0100

    af-packet: fix loading of ebpf filter

[33mcommit f8724485ed7263ae47f55f407833f72dc56a14cb[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Feb 13 15:40:37 2019 +0100

    ebpf: sync header with upstream

[33mcommit 1c4d214cdbf49df5513800aa9dfff5a90a336398[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Feb 13 09:10:02 2019 +0100

    doc: typo fixes on ebpf doc

[33mcommit 6fdcb127e9a3aa97a49f82eb674576bb8adb8c9b[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Feb 10 23:31:32 2019 +0100

    af-packet: fix the start when XDP is pinned

[33mcommit 7e0ef4cec83a31f835dfac07fbabffa48f8ee93c[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Feb 10 23:30:00 2019 +0100

    util-ebpf: change return of pinned maps loading
    
    The calling function needs to be able to see when this is a success
    and XDP do not need to be reloaded.

[33mcommit b7560d7547a673693ca3bf328f537d48734b0798[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Jan 20 22:29:18 2019 +0100

    doc: document externally managed global switch
    
    This is currently implemented as an exposed map and it seems
    a good way to do it.

[33mcommit d950a9f2721041e97cae48515053151de3f2b2db[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Jan 20 21:49:11 2019 +0100

    util-ebpf: conditional flow table loading

[33mcommit 4777af213cfbf7d41af2e7a34daead5c6dcf910d[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Jan 20 20:29:46 2019 +0100

    ebpf: implement global switch bypass
    
    Add a switch to allow to bypass all traffic if the switch is on.
    Concept is to use a persistant script and pinned maps, so an
    external tool can be used to trigger global bypass in case Suricata
    is dead.

[33mcommit d25e8dbfc7fa5a24119bd261de482ba6f7e28cf3[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Jan 20 19:53:09 2019 +0100

    af-packet: implement pinned-maps-name

[33mcommit 36838017feb3542bb167a7a6f925a6a1d1a91447[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Jan 19 17:33:46 2019 +0100

    af-packet: fix build when eBPF not built-in

[33mcommit b1769d5f8fa219f137fdc4e8a064a4d2d08e75e8[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Dec 9 23:22:08 2018 +0100

    util-ebpf: implement pinned maps loading
    
    Load flow tables at start if asked to.

[33mcommit 96f1454ebf53f39dce6f44a3b74ef85db6540881[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Dec 9 21:11:27 2018 +0100

    util-ebpf: only unlink pinned maps in eBPF filter

[33mcommit 4cf531008e8840d09793bce64ce00565ad65dbb0[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Dec 9 20:34:28 2018 +0100

    af-packet: conditionaly remove XDP filter
    
    Only remove the XDP filter if we are in XDP mode and not using the
    pinned maps.

[33mcommit 19c0a5edf5eaab3b9e8d0d2a65143dcc2bf98573[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Dec 9 20:24:36 2018 +0100

    doc: white space and typo fix

[33mcommit 4f48c45727e681a135029014521032e1af3d2edd[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Dec 9 20:03:31 2018 +0100

    util-ebpf: conditional pinning of maps
    
    Only pin maps if `pinned-maps` is set in the configuration. This
    ensure backward compatibility.

[33mcommit 6d41a0ced0bc66228bec61dce97b2eb33380ef58[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Dec 9 13:08:53 2018 +0100

    doc: more eBPF and XDP capabilities

[33mcommit 73a928fa0b698396208e69ee5bdf52c57ef1c84e[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Dec 8 08:21:44 2018 +0100

    util-ebpf: fix loop on maps
    
    We were missing the last element of the map by working on previous
    key instead of current key.

[33mcommit 3ce69c446b7320e9cc967fe21d5944594594117c[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Dec 7 16:41:31 2018 +0100

    util-ebpf: suppress spaces at end of line

[33mcommit 954762a429276cae09ae44b9787eafb6a56bc3e9[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Nov 29 18:18:52 2018 +0100

    ebpf: add filter by maps on example filter

[33mcommit 5d8ac36a49197bc071338bf4b5ca74f1f5590d9d[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Nov 14 22:14:49 2018 +0100

    util-ebpf: pin the maps
    
    By pinning the maps we are creating a file in /sys/fs/bpf that can
    be used by external program to access the map. This has multiple
    benefits such as handling list from an external program.
    
    The pinned maps could be persistent accross Suricata reload but
    this can be complicated in term of handling everything in the life
    of Suricata.

[33mcommit bf4381b17bfae9628977abb2b52e31752d729977[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Oct 7 20:46:45 2018 +0200

    ebpf: document XDP iface redirect

[33mcommit a37a7c4a2102c40dec7c80091cd0f161b0f37e30[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Oct 7 20:07:56 2018 +0200

    ebpf: reduce counter size to allow netronome offload

[33mcommit 2f579e6a4c4e5eddd47492840388775e8360a81b[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Sep 25 13:13:36 2018 +0200

    ebpf: add VLAN support to loadbalancing
    
    This patchs adds VLAN support to eBPF load balancing by doing a
    parsing of VLAN headers.

[33mcommit 315c29a8e627dfeda16fb737e5c6137307f7682b[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri May 25 17:05:17 2018 +0200

    ebpf: change the logic to avoid ktime usage
    
    Kernel time is not available (and/or costly) on NIC such as
    Netronome so we update the logic to detect dead flows based on a
    lack of update of packets counters. This way, the XDP filter will
    be usable by network card.
    
    This patch also updates the ebpf code to support per CPU and
    regular mapping. Netronome is not supporting it and the structure
    is using atomic for counter so the cost of simultaneous update
    is really low.
    
    This patch also updates the xdp_filter to be able to select if the
    flow table is per CPU on shared. Second option will be used for
    hardward offload. To deactivate the per cpu hash, you need to set
    USE_PERCPU_HASH to 0.
    
    This patch also adds an new option to af-packet named no-percpu-hash
    If this option is set to yes then the Flow bypassed manager thread
    will use one CPU instead of the number of cores. By doing that
    we are able to handle the case where USE_PERCPU_HASH is unset (so
    hardware offload for Netronome).
    
    This patch also remove aligment indications in the eBPF filter. This
    was not really needed and it seems it is causing problem with
    some recent version of LLVM toolchain.

[33mcommit 1745408c139214033396154215cbf24490e56bf5[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Jul 14 22:37:03 2018 +0200

    flow-manager: no force reassembly on bypassed flow
    
    When a bypassed flow is created we are forcing the reassembly so
    we don't need to do it again when it timeout.

[33mcommit 4e94c2b8c23c80854ca2be97e3a068b3991018d9[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jul 12 21:13:00 2018 +0200

    suricata.yaml: fix path to ebpf and xdp doc

[33mcommit 7c7e04487f9ec6310dfe235a0d731488d0cbcdc1[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Fri Jun 7 19:42:58 2019 +0530

    detect/content: Message for escaping backslash
    
    So far, if the rule loaded had a backslash character ("\") in its
    content field, the rule will fail to load but without giving a
    descriptive error message. This patch tells the user to escape the
    troubling character.
    
    Before
    ```
    9409] 7/6/2019 -- 16:12:22 - (detect-engine-loader.c:184) <Error> (DetectLoadSigFile) -- [ERRCODE: SC_ERR_INVALID_SIGNATURE(39)] - error parsing signature "alert tcp $HOME_NET any -> $EXTERNAL_NET any (msg:"Backslash needs escaping msg"; flow:established,to_server; content:"MyBackslash\here"; sid:86; rev:1; )" from file /var/lib/suricata/rules/myrule.rules at line 1
    ```
    
    After
    ```
    [9409] 7/6/2019 -- 16:12:22 - (detect-content.c:155) <Error> (DetectContentDataParse) -- [ERRCODE: SC_ERR_INVALID_SIGNATURE(39)] - '\' has to be escaped
    [9409] 7/6/2019 -- 16:12:22 - (detect-engine-loader.c:184) <Error> (DetectLoadSigFile) -- [ERRCODE: SC_ERR_INVALID_SIGNATURE(39)] - error parsing signature "alert tcp $HOME_NET any -> $EXTERNAL_NET any (msg:"Backslash needs escaping msg"; flow:established,to_server; content:"MyBackslash\here"; sid:86; rev:1; )" from file /var/lib/suricata/rules/myrule.rules at line 1
    ```
    
    Closes redmine ticket #2626

[33mcommit 30fd80b0ef2086ee261807edd8fbbc9b7a1efc5f[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Fri May 31 23:02:24 2019 +0200

    doc: convert fancy quotes to straight quotes

[33mcommit 7513f6cae27d1c4ff0c5af0db851e6a302e6f3b4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 12 09:57:02 2019 +0200

    threads: minor code cleanups

[33mcommit 92d38683ce8271e5550c1fcc5be6a2e9258a5207[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 12 09:56:26 2019 +0200

    threads: improve flow timeout loop
    
    Improve thread safety and remove BUG_ON

[33mcommit e6b633cf95d2aeb42251c0f45aecf2f728dfcbde[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 12 07:45:38 2019 +0200

    stats: walk tv_root under lock

[33mcommit 9474b846834bf3ab6929030023691262cbf4ba32[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 12 07:34:21 2019 +0200

    stats: more accurate time handling for wakeup thread

[33mcommit ab1268cfea91e5a7d7c98b5a907124358fe88300[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 12 07:33:17 2019 +0200

    stats: minor code cleanups

[33mcommit 1a1d32c6b2aee4a357695dbf66454d66c54ac99e[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Jun 15 13:57:15 2019 -0400

    make: Remove rust generated headers during clean

[33mcommit b5f3e03209922f1029b76a1a3570a3aca91659f5[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Mar 5 14:08:01 2019 +0100

    New app layer event for invalid http request line
    
    Handles logs from libhtp even if case of error

[33mcommit 4a74e9edcc6a8acba1616b53f14a0dec41bdf4ac[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Jun 6 15:42:47 2019 +0200

    signature: error for rules with illegal port
    
    Fixes #2080

[33mcommit 248f9c66cfb9c437dd46c43302288e422b006abc[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue Jun 4 11:27:04 2019 +0200

    warnings: fixes integer sizes in format strings
    
    Fixes #3009

[33mcommit a3e38861b98f11d51b44710a6cfb1b9a56cac296[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Jun 3 09:22:07 2019 +0200

    http: adds unit tests for HTPParseContentRange

[33mcommit 90ab0b0ec2e8fe6f5746ee397bddf67e2bdac7a7[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed May 29 21:21:03 2019 +0200

    http: fix overflow in HTPParseContentRange

[33mcommit c1b30fe9fd4970043a546d05ab57e23c837998e1[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Thu Jun 6 10:24:20 2019 +0200

    rust/snmp: fix libc deprecation warnings for int types

[33mcommit bc07656ce7344ac895c83026ada63e46022345eb[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Thu Jun 6 10:06:03 2019 +0200

    rust/snmp: use snake_case when logging PDU types

[33mcommit 39cf5b0c8b33a2a38c3549ae63c82bd88a2e8741[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 23 06:49:23 2019 +0200

    snmp: fix 'defined but not used' warning
    
    Remove HAVE_RUST guards as well.

[33mcommit 8c61cfdca5f2a70dde76d26a0c3c0f3fd81fcbf2[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Wed May 22 16:59:55 2019 +0200

    snmp.version: move unittests to tests/

[33mcommit 58d85b1460d7d30dd1c9addd5dd8a60464d0126a[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Wed May 22 16:55:59 2019 +0200

    snmp.pdu_type: move unittests to tests/

[33mcommit ff0ff6344fc0b8b68cbcdbf4fccf2a29e9a0524f[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Wed May 22 14:45:21 2019 +0200

    snmp.community: move unittests to tests/

[33mcommit 509a54281fddd9a43523e8d2e459903002d4efb6[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Wed May 22 14:38:34 2019 +0200

    detect/snmp: convert snmp.community keyword to v2, and MPM

[33mcommit c60f2028e5a0540547385b835fe4aa6101156138[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Tue May 21 21:10:02 2019 +0200

    rust/snmp: fix missing IPPROTO_* declarations (use core)

[33mcommit c67a53773bdd6e3ae3ffa5e9c5fe2a0abf032fa6[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Mon May 13 14:14:48 2019 +0200

    detect/snmp: rename keywords to snmp.<name>, and make rust mandatory

[33mcommit 031cbbe8689cccd34ae20707c19d9a578c1c011c[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Thu Feb 14 17:11:50 2019 +0100

    rust/snmp: fix selection of v1/v2c parser

[33mcommit 9dfec7e73411d2884b36da5c156726445e54bc86[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Tue Dec 11 17:21:44 2018 +0100

    SNMP: add the "snmp.pdu_type" detection keyword

[33mcommit e1dd19a0eb207a251bb4c0fd24e5ece6fbba9e80[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Tue Dec 11 08:54:17 2018 +0100

    SNMP: add the "snmp.community" detection keyword

[33mcommit aa608e0ca2389e7878b58c0cd213f029849fc305[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Mon Dec 10 13:48:00 2018 +0100

    SNMP: add the "snmp.version" detection keyword

[33mcommit ed4823bbe8d33bdfc24c858433023bf07e6aa7cf[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Wed Dec 5 09:46:16 2018 +0100

    SNMP: add missing case for profiling enum

[33mcommit 60324740e65602bca31d76b8f8d247f900dba5aa[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Tue Dec 4 17:40:28 2018 +0100

    SNMP: use explicit references to support build with old rust compiler

[33mcommit 57b233f46209e6e3dc84e5e187b98033e6bffbd0[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Mon Oct 8 10:37:01 2018 +0200

    SNMP: start looking for transactions from end of list

[33mcommit 6fc7fc74cbef16b4aba5a52cf40c0d770cce5147[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Mon Oct 8 10:36:39 2018 +0200

    SNMP: add logger

[33mcommit 2df840a8b87d15b8d3b398a8af964e4c9b5ee82c[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Wed Aug 8 15:35:31 2018 +0200

    Add SNMP (v1/v2c/v3) application layer

[33mcommit b65896c0defd104c1d632be7390b2728d3dbe4b3[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Sat Apr 21 16:05:33 2018 +0200

    Rust: expose function AppLayerParserRegisterGetTxIterator

[33mcommit b1d493184204c1cffcb5427bc947ac8e5ff5573f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 3 09:47:23 2019 +0200

    rust: fix warnings about wrong type of comments
    
    "rustdoc does not generate documentation for macro expansions"

[33mcommit bf1bd407dd42be450f12a09678ea69aaff58af21[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 3 09:40:57 2019 +0200

    rust: fix libc deprecation warnings for int types

[33mcommit cdd061ba37682cad1174fa6f4149a837a31e18ef[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 31 14:10:46 2019 +0200

    ikev2: clean up c glue code

[33mcommit 3f36a6ce595b8ab243cacaa9047b6070c618930f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 30 21:54:28 2019 +0200

    tftp: c glue code cleanup

[33mcommit 723f1586ca97fce86224c4b02dcab10985b1a57e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 30 20:21:01 2019 +0200

    ikev2: remove excess new lines

[33mcommit adcbac1c77c66a825348e6f549f7bf252950cf55[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 30 20:20:33 2019 +0200

    tftp: properly implement tx handling

[33mcommit ade2b1e6cf348d61468f96021d4c51bd0ec4082f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 30 10:24:10 2019 +0200

    output: get rid of BUG_ONs

[33mcommit 9ea6db38896656f64499db62293dc15492206d71[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 28 15:45:37 2019 +0200

    pool: don't call Cleanup after failed Init
    
    Stream reassembly memcap is regulated by the Init and Cleanup
    callbacks. If Init fails due to memcap reached, Cleanup had no
    way of knowing and it would decrease the memcap even if it hadn't
    been increased by Init. This could lead to too much memory use and
    memcap counter underflow.
    
    This patch fixes the issue by not calling Cleanup in this case. It's
    fair to see a failed Init the responsibility of Init.

[33mcommit 597ff3c8e315ebba704d0a70f08df7b1e3333c5f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 28 15:32:27 2019 +0200

    pool/thread: clean up tests

[33mcommit 025cc64f557d82931205d043b5e2a437921780d8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 28 15:21:25 2019 +0200

    pool/thread: remove old grow function

[33mcommit 67ba132c10d38bdf0bf098fb7bfbbfc1636ee386[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 28 15:16:50 2019 +0200

    stream: simplify segment and ssn pool inits

[33mcommit 0b02efdf01500d477ba313b28accbf180d609361[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 28 15:14:20 2019 +0200

    pool/thread: introduce simpler way to grow thread pool

[33mcommit 6e6c1bad7d092db7970d8f1fa16cff19d694aecc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 28 15:01:41 2019 +0200

    pool/thread: minor code cleanups

[33mcommit 924982e7921eec9a75953b90ac103b64acd7dcfc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 27 21:47:04 2019 +0200

    app-layer: minor cleanups

[33mcommit ce71bf1fffbeefb70b63efa176408a296dc57ccd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 27 15:46:18 2019 +0200

    capture: check for flow packets on capture timeout
    
    The capture threads can receive packets from the flow manager in their
    Threadvars::stream_pq packet queue. This mechanism makes sure the packets
    the flow manager injects into the engine are processed by the correct
    worker thread.
    
    If the capture thread(s) would not receive packets for a long time, the
    Threadvars::stream_pq would not be checked and processed. This could
    lead to packet pool depletion in the flow manager. It would also lead
    to flows not being timed out/logged until either packets started flowing
    again or until the engine was shut down.
    
    The scenario is more likely to happen in a test (e.g. replay) but could
    also delay logging on low traffic sensors.

[33mcommit 952cbb563c932a5d2e298019bd30301a53be3d28[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun May 26 21:09:05 2019 +0200

    app-layer: mandatory tx registration checks
    
    All protocols now implement the TX API, so the runtime checks for
    whether or not a protocol supports the TX API can be removed.

[33mcommit 8bc1e120eae098c759ebdc182a8a2db0ebbe2531[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 27 09:46:41 2019 +0200

    app-layer: make tests tx aware
    
    Make tests minimally TX-aware so we can asume all parsers use
    the tx API.

[33mcommit 3526569b25d70936a62b496432a09b9d54b6b7b4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 27 09:38:55 2019 +0200

    ssh: test cleanup
    
    Remove explicit locks. Set ALPROTO_SSH in all tests.

[33mcommit 480f497d05e5c63b5fe1bd8e445406f32100046c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat May 25 20:56:27 2019 +0200

    packetpool: move return stack to pool earlier
    
    If waiting for N packets move the return stack to the main
    stack every time we take the return stack lock.
    
    Make sure we consider enough packets when setting the pending pool
    flush logic. This should at least make sure to have the 9 packets
    the flow manager requires per run.

[33mcommit fa0008dbbed1b38c6e92f6737e3268121f8338b3[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Wed May 15 14:03:29 2019 -0400

    detect/content: clean up logging output
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit e9be6126e2683460e510daf9042f6471e6aa43f8[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon May 27 11:12:10 2019 +0200

    suricatasc: fix reconnect

[33mcommit ab1d95446a75fa30f1007cd73f93d8bc40da07fe[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed May 22 16:34:32 2019 -0700

    doc: http keyword update
    
    This changeset updates the keyword type for http.location and http.server

[33mcommit 0960ca0d0013e6c4c493f256ee5b7758d1dcaa7a[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue May 21 16:52:41 2019 -0700

    detect/analyzer Add missing HTTP values
    
    This changeset adds recognition of missing HTTP values
    - Raw host
    - Header names
    - Server body
    - User agent

[33mcommit a370d2a91d2ef0b649517ab5231fdbc959258e18[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon May 20 10:06:25 2019 +0200

    signature: fix memory leak in DetectBytejumpSetup

[33mcommit 8a339e73d3d4377b7bca6f548b8858995974905b[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri May 17 13:16:27 2019 +0200

    http: adds an event for double encoded uri

[33mcommit e5879650bb7eb7fe531e1938682cd0ac419422ed[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri May 17 13:08:26 2019 +0200

    http: fixes double-encode configuration keywords

[33mcommit a5f1f19b275bd7c09b4f4cf934d47e476bdddf7d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 21 11:37:29 2019 +0200

    travis: move checks into script
    
    This makes error handling easier and more robust:
    https://docs.travis-ci.com/user/job-lifecycle#complex-build-commands

[33mcommit 68455caa6a2233264483183baed55476a03536fe[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 21 10:08:19 2019 +0200

    travis: add sphinx to trigger doc build

[33mcommit f634da61c9ed57aaac9348f83ea45d9a99f74bbf[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Mon May 13 13:32:11 2019 +0200

    ja3s-string: move unittests to tests/

[33mcommit 736d35f36e02012bc5e7d281c9f14777858ecce1[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Mon May 13 13:27:35 2019 +0200

    ja3s-hash: move unittests to tests/

[33mcommit b59e82a6426a76d8cd35a6936bc50634a1c13df8[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Nov 16 18:50:58 2018 +0100

    userguide: add documentation for ja3s.string keyword

[33mcommit 0b489f329c39077ccb4b6b0a99cd5071671197af[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Nov 16 18:45:01 2018 +0100

    detect: add (mpm) keyword ja3s.string
    
    Match on JA3S string using ja3s.string keyword, e.g:
    
      alert tls any any -> any any (msg:"ja3s.string test";
          ja3s.string; content:"10-11-12"; sid:1;)

[33mcommit 76b94c7073c2df08c61d5b2a1d9fb04ad802c2da[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu Nov 15 23:42:45 2018 +0100

    userguide: add documentation for ja3s.hash keyword

[33mcommit 80cee5091623fef06c629d1c3a1e0b3669f49688[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu Nov 15 23:36:28 2018 +0100

    detect: add (mpm) keyword ja3s.hash
    
    Match on JA3S hash using ja3s.hash keyword, e.g:
    
      alert tls any any -> any any (msg:"ja3s.hash test";
          ja3s.hash; content:"b26c652e0a402a24b5ca2a660e84f9d5"; sid:1;)

[33mcommit d15903a2efb4f3e209bbbee3ca545344d95dad25[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu Nov 15 23:04:20 2018 +0100

    userguide: add documentation for Ja3SGetString Lua function

[33mcommit 03e8e658d7daffd298ea3acd59bff8f79763a682[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu Nov 15 23:01:42 2018 +0100

    lua: add Ja3SGetString function
    
    Add Ja3SGetString() to return the content of the JA3S string buffer from
    the TLS session.
    
    Example:
    
      function init (args)
          local needs = {}
          needs["protocol"] = "tls"
          return needs
      end
    
      function setup (args)
          filename = SCLogPath() .. "/ja3s_string.log"
          file = assert(io.open(filename, "a"))
      end
    
      function log (args)
          ja3s_string = Ja3SGetString()
          if ja3s_string == nil then
              return
          end
    
          file:write(ja3s_string .. "\n")
          file:flush()
      end
    
      function deinit (args)
          file:close()
      end

[33mcommit 37a0594417242050900a00053327a423876561bd[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu Nov 15 22:58:39 2018 +0100

    userguide: add documentation for JA3SGetHash Lua function

[33mcommit b1d5fe9657e6eb63e76c2855229f2dbafe980928[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu Nov 15 22:50:57 2018 +0100

    lua: add Ja3SGetHash function
    
    Add Ja3SGetHash() to return the content of the JA3S hash buffer from
    the TLS session.
    
    Example:
    
      function init (args)
          local needs = {}
          needs["protocol"] = "tls"
          return needs
      end
    
      function setup (args)
          filename = SCLogPath() .. "/ja3s_hash.log"
          file = assert(io.open(filename, "a"))
      end
    
      function log (args)
          ja3s_hash = Ja3SGetHash()
          if ja3s_hash == nil then
              return
          end
    
          file:write(ja3s_hash .. "\n")
          file:flush()
      end
    
      function deinit (args)
          file:close()
      end
    
    In the example above, each JA3S hash is logged to a log file.

[33mcommit 800608ab65a7256f8a9168291c9d6236283d626a[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu Nov 15 22:44:59 2018 +0100

    userguide: add JA3S fields to the TLS logger documentation

[33mcommit a4eaef25d6ac404faba9af488fdd8d5cc12b036d[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu Nov 15 22:41:44 2018 +0100

    eve: add JA3S field to TLS JSON logger
    
    Add JA3S object to TLS JSON logger (extended log).

[33mcommit a4471987bacca2ab92a7400ed925923f0f533c83[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu Nov 15 19:49:11 2018 +0100

    app-layer-ssl: generate JA3S fingerprints
    
    Generate JA3S fingerprints based on fields in the ServerHello record.

[33mcommit 3a16009966d5f98f49f8b9bd689d9d9da7e939c5[m
Author: Alexander Gozman <goal81@gmail.com>
Date:   Mon May 6 19:10:52 2019 +0300

    Bug #2965: fix NFQ arguments parsing

[33mcommit 8baf64f5e9ab158919324f113d471f3cf7fa4c05[m
Author: Andreas Herz <andreas.herz@dcso.de>
Date:   Wed May 8 13:10:42 2019 +0200

    af-packet: fix setting block_timeout value through afpconfig

[33mcommit 8a94b93b7b93e00ac9729998728aae4a042dc3cf[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed May 8 15:40:05 2019 -0700

    doc: Anomaly logging documentation
    
    This changeset adds discussion of anomaly log records and
    the anomaly log record format.

[33mcommit 462a4e2b5b14891ff4e8a56755ee11bd89e78676[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Thu May 9 16:11:32 2019 -0700

    detect/analyzer: Improve warning message
    
    This changeset modifies the warning printed when a rule
    is determined to detect in both directions.

[33mcommit 5d76f0897cc862a7096749355d261e2b3d130e0d[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat May 11 10:23:14 2019 +0200

    af-packet: remove rollover reference
    
    This patch removes reference to rollover in the configuration file
    and add warnings when it is used.

[33mcommit 037d50ef06239d412d8fd3bfafc93140e1201ad0[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri May 17 15:33:53 2019 +0200

    signature: fix overflow in parsing

[33mcommit 3e120668194ca7c139688754d1776eb0b2a198e0[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Tue May 14 09:33:29 2019 +0200

    http: adds events for each libhtp log
    
    Fixes #997

[33mcommit 3c57ac144c279eb8cb5f7a23b9046ba6b09a19dc[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue May 14 15:46:40 2019 +0200

    detect-ssl-version: move unittests to tests/

[33mcommit 238797cc660cf1f1afc70ba897808b352b46a581[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue May 14 15:42:33 2019 +0200

    detect-ssl-state: move unittests to tests/

[33mcommit 479e73b98e3cbf7f855a65644dd9dd9bc9e693f0[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue May 14 15:38:45 2019 +0200

    detect-tls-version: move unittests to tests/

[33mcommit 767bde5e74ab1be063e2dced9e4808cca08d49b3[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue May 14 14:28:30 2019 +0200

    detect-tls-cert-validity: move unittests to tests/

[33mcommit a260a57b6862a60044de17f8356db7705a42b61e[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue May 14 13:54:36 2019 +0200

    detect-tls-sni: move unittests to tests/

[33mcommit adb4da3975b61f1c309ca2bcdd32105609e7bbe0[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue May 14 13:35:04 2019 +0200

    detect-tls-ja3-string: move unittests to tests/

[33mcommit 74a7b7e3cf2314a64a3acd035f67aa42e2cbcf81[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue May 14 13:28:22 2019 +0200

    detect-tls-ja3-hash: move unittests to tests/

[33mcommit 5d3b94b3e49447750acfe4745198960dc2f13b0f[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue May 14 13:22:46 2019 +0200

    detect-tls-cert-subject: move unittests to tests/

[33mcommit 0d728ee4c6f38997a699ebd3a23d8c2555fe534d[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue May 14 13:19:36 2019 +0200

    detect-tls-cert-serial: move unittests to tests/

[33mcommit e125e58c9740727cf479560a722211735998e8c9[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue May 14 13:15:35 2019 +0200

    detect-tls-cert-issuer: move unittests to tests/

[33mcommit 3646234ac58c07c8e3d9f2fcd870a8ebb6f0fdb1[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue May 14 11:26:11 2019 +0200

    detect-tls-cert-fingerprint: move unittests to tests/

[33mcommit 12d37b8b2c2dfe41423bbdc92ea45ddc1ef432d9[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue May 14 09:25:57 2019 +0200

    detect-tls: tidy up unittests
    
    By doing the following:
    - removing unnecessary locks
    - moving variable declarations
    - removing redundant function 'SigCleanSignatures'

[33mcommit 15012fc9085fb9a1ac45cf4c81c71cf38d2cc7bf[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue May 14 08:49:28 2019 +0200

    ja3: check if JA3 is disabled on one line

[33mcommit 285855d928370d48edb73b78cba8de0315b7c0cc[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue May 14 08:44:19 2019 +0200

    detect-tls: remove NULL settings from keyword registration

[33mcommit 008f08c1b34de2bb66809dfa7ea65892f3d1eb59[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue May 14 08:35:42 2019 +0200

    detect-tls: declare ssl_state as const in GetData()

[33mcommit 0f7f35bd850307914d5523f1b91fb756b64aa992[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue May 14 08:12:47 2019 +0200

    detect-tls: check return values of functions on setup
    
    Check the return values of DetectBufferSetActiveList() and
    DetectSignatureSetAppProto().

[33mcommit 1c04d7cdae8f5261d709dc4052c48cf3a371f375[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue May 14 07:54:03 2019 +0200

    detect-tls: remove confusing underscores from variables
    
    Remove confusing underscore prefix from variables in GetData() for
    all tls keywords.

[33mcommit 7020cffaa807ad203db6ca2abd8038d86ae62133[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue May 14 07:42:16 2019 +0200

    userguide: 'sticky' instead of 'Sticky' for all tls keywords

[33mcommit de983fb7c986fac1760847b2bbb152d09d0a8307[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat May 11 10:59:16 2019 -0700

    app-layer-ftp: Potential memory leak fixed
    
    Ensure that when handling failures during STOR command
    processing, that all memory is freed on the error path.

[33mcommit 03d986dd55930cd59b71c29c4eb98a1a84c3c708[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed Nov 14 00:38:56 2018 +0100

    userguide: add documentation for tls.certs keyword

[33mcommit ba857e973938fdcbeb43e1caa71d9789b1d5c9ed[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed Nov 14 00:31:08 2018 +0100

    detect: add tls.certs keyword
    
    Add keyword to do "raw" matching on each of the certificates in the
    TLS certificate sticky buffer.
    
    Example:
      alert tls any any -> any any (msg:"tls.certs test"; tls.certs; \
              content:"|01 02 03 04|"; sid:1;)

[33mcommit edae50de949d626dcc169de41937951cd4b4cf2d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 9 12:11:29 2019 +0200

    detect/ssh: fix ssh.protoversion memory leak

[33mcommit 567a7c3cefa96b78b89a171378bf91ca545f2342[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 9 12:06:50 2019 +0200

    detect/ssh: mark old ssh keywords as deprecated

[33mcommit d623dc4ac0ee0ca0496d05a2aabf8b3203a65572[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 9 12:06:08 2019 +0200

    detect/parse: add flag to indicate keyword is deprecated
    
    Issue warning when it is still used.

[33mcommit b84eba80aa1bcd6edbfd76dd56b1095906732a9b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 8 16:50:04 2019 +0200

    detect/nfs.version: minor cleanups

[33mcommit 2ea11da230f0be64db2bf0ca756f8a8b20d372b2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 8 16:49:47 2019 +0200

    detect/nfs: add nfs.version

[33mcommit 3299f007f8685c7b10cb166607fef771e0febb4f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 7 21:07:52 2019 +0200

    detect/dcerpc: add dcerpc.iface
    
    Keep dce_iface as an alias.

[33mcommit cdff1d50b71031a1e032d9b73252cb4dc50af189[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 7 20:52:35 2019 +0200

    detect/dcerpc.opnum: minor code cleanups

[33mcommit 6840e5c7df07375e2ad1d64feedb8f81f2055020[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 7 20:52:15 2019 +0200

    detect/dcerpc: add dcerpc.opnum as new name for dce_opnum

[33mcommit cc492c50c87f9ec1df29d4b5dfb5620480c53fa9[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat May 4 07:55:50 2019 -0700

    eve/logging: disable anomaly logging by default
    
    Disable anomaly logging by default. Networks with excessive issues may
    experience packet processing degradation.

[33mcommit b6b7778e2d8ab86735326fc382a61ebca744330b[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon May 6 12:38:17 2019 +0200

    http: adds event for header repetition

[33mcommit 9d8eb7b5f03e72a81d215223628d000f0a143792[m
Author: Jason Ish <ish@unx.ca>
Date:   Sat May 4 08:03:52 2019 -0600

    filestore: remove jansson ifdefs
    
    Jansson is now required.

[33mcommit 3dc973d4b1a2a4f898cc55c76bbcac7b2f2c1924[m
Author: Jason Ish <ish@unx.ca>
Date:   Sat May 4 08:03:22 2019 -0600

    eve/file: remove rust and jansson ifdefs.
    
    Both Rust and Jansson are required now.

[33mcommit 42c327adc451c2f6c1e668e4c84125def9f5a2c6[m
Author: Jason Ish <ish@unx.ca>
Date:   Sat May 4 07:48:46 2019 -0600

    filestore: fix leak in contructing json
    
    Use json_array_append_new instead of json_array_append to transfer
    ownership of the integer object to jansson so it gets freed.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/2961

[33mcommit ddfcf76c5747fca3548942fd8bf764ad3f11a95d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 3 14:21:04 2019 +0200

    detect/engine: make DetectAppLayerMpmRegister decprecated

[33mcommit 752bb1c41072cf1cedbe8ea9a621eb66f49c48ba[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 3 14:02:46 2019 +0200

    detect/dnp3: add dnp3.data with v2 api support
    
    Adds MPM support as well. Add TxDetectFlags support to the parser
    to avoid duplicate matches.

[33mcommit 09a21627d58270e0597d9ae9db68fa454d9f0b45[m
Author: magenbluten <magenbluten@codemonkey.cc>
Date:   Wed Feb 27 09:14:17 2019 +0000

    filestore: fix dropping of unwanted files (Issue #2853)

[33mcommit 9132e4032ab8b33f4886428e1a7b6a44908427da[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 3 12:10:14 2019 +0200

    files: open files with track id only

[33mcommit 3b31bad85586a2c4856af11ffcf047c9db2b34a8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 3 10:36:15 2019 +0200

    detect/dce_stub_data: add dcerpc.stub_data
    
    Also use v2 API for inspect and mpm registration.

[33mcommit d270a7603a879fdd4154cc26887ead0be3a6115e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 3 10:16:38 2019 +0200

    detect/inspect: add flags to inspect buffer

[33mcommit 32fb7d773afd29e1373457484049157dd1d3db16[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 3 10:00:09 2019 +0200

    detect/content-inspect: turn void arg into Packet
    
    Replace the 'void *data' argument by a 'Packet *p' as this was
    the only user left of the data pointer.

[33mcommit b7a751727323f417f426f02ae196ee9238a874b4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 3 09:47:59 2019 +0200

    detect/dce_stub_data: minor cleanups

[33mcommit 55db6d6fb4ba5c443704e6142f58b64718813798[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 3 09:47:23 2019 +0200

    detect/dcerpc: move endian handling from pointer to flags

[33mcommit b2638f719538b0b7b942d39c1162cd71f3b9d55e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 3 09:18:47 2019 +0200

    detect/krb5: add krb5.sname and krb5.cname

[33mcommit aefce4d761d3ebb7e95697fabd9599edb445500d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 3 09:06:09 2019 +0200

    detect/nfs: remove HAVE_RUST guards

[33mcommit da45d92c54ced94b94c03fc29ea1aa100c353c65[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 3 07:13:00 2019 +0200

    valgrind: support hyperscan warning
    
    Issue on Ubuntu 19.04.
    
    ==18655== Conditional jump or move depends on uninitialised value(s)
    ==18655==    at 0x5454603: hs_alloc_scratch (in /usr/lib/x86_64-linux-gnu/libhs.so.5.1.0)
    ==18655==    by 0x3D5C9A: SCHSPreparePatterns (util-mpm-hs.c:707)
    ==18655==    by 0x215FEC: DetectMpmPrepareBuiltinMpms (detect-engine-mpm.c:364)
    ==18655==    by 0x20813A: SigGroupBuild (detect-engine-build.c:1932)
    ==18655==    by 0x21287B: SigLoadSignatures (detect-engine-loader.c:366)
    ==18655==    by 0x35A702: LoadSignatures (suricata.c:2419)
    ==18655==    by 0x35B0DD: PostConfLoadedDetectSetup (suricata.c:2574)
    ==18655==    by 0x35C827: main (suricata.c:2986)
    
    https://github.com/intel/hyperscan/issues/148

[33mcommit 15eac12a3920b6a30f178beac2ef1721d0045ea6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 2 20:31:57 2019 +0200

    afl: fix compilation

[33mcommit 3ae2edb22ad974ab6c4391e61022051410181b85[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 1 16:36:50 2019 +0200

    ftp: fix realloc handling to avoid valgrind warning
    
    Bug #2951

[33mcommit 84881bf1b892183c9567d7ad26737a047566ec05[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 2 13:02:07 2019 +0200

    detect/file.magic: add sticky buffer
    
    Add sticky buffer to inspect file magic. Includes mpm support.

[33mcommit d78c6ff71459ed5f48a8756b489a28bb11abafee[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 2 16:30:57 2019 +0200

    detect/thread: ctx info is allowed to have NULL data

[33mcommit aa52dfab047656326cbd16804b875ffc6f146570[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 2 12:01:20 2019 +0200

    detect/smb: clean up keywords

[33mcommit d64fbb71ae66759c7ffccbcd2c46dd883438164f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 2 11:45:46 2019 +0200

    detect/file: add file.data, small cleanups

[33mcommit b5d53894380dc0cd1e05bb681e21d310828185c4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 2 11:26:34 2019 +0200

    detect/ssh: minor --list-keywords improvements

[33mcommit f246e319b27b981c1530448ea2569e44a4344abf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 2 10:54:39 2019 +0200

    detect/http.header.raw: minor cleanups

[33mcommit a21a7d16bd0b60e2f72309599c7f38bf46f0c1b0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 2 10:48:15 2019 +0200

    detect/http.host.raw: minor cleanups

[33mcommit 0e1d47c87bc10aebe7616b2576aa0d0a03f44f25[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 2 10:43:46 2019 +0200

    detect/http.method: minor cleanups

[33mcommit bdd8e6152b32cabefbac265909e3345eda7dcd97[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 2 10:31:19 2019 +0200

    detect/http.start: modernize name and code

[33mcommit cd2e6511c9cf8060379095626cd1b7eeee8f08a5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 1 21:53:44 2019 +0200

    detect/http: cleanup http stat *

[33mcommit 84da0376fb1c956ec633878daeb503a618c7f996[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 1 21:29:29 2019 +0200

    detect/http.host: rename file for consistency

[33mcommit 2b8311beff9631c19c44a1d07496f054744f8300[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 1 21:27:49 2019 +0200

    detect/http.host: fix --list-keywords output

[33mcommit 0e5c987533c09c6f5447b95379c7fae5adc0b220[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 1 12:53:13 2019 +0200

    detect/http.uri: fix up --list-keywords output

[33mcommit 19163ca2e1f0efaa39783f6bdc149d72619c42c7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 1 12:49:57 2019 +0200

    detect/http: request/response line keyword modernization

[33mcommit fb2e4e4453f94ed7e55abfd7e23b975543b6ce8e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 30 21:06:03 2019 +0200

    detect/http.header_names: use v2 api and new name

[33mcommit 65039d4accf2133c64bd2ff3223f5be19dd9daa9[m[33m ([m[1;33mtag: suricata-5.0.0-beta1[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 29 19:55:55 2019 +0200

    changelog: update for 5.0.0-beta1

[33mcommit 63ab296cca7d2341b3ef587a3413e562c52cbee2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 2 15:32:33 2019 +0200

    nfs: fix integer underflow
    
    Fix int underflow that leads to Rust panic in NFS3 readdirplus
    parsing.
    
    Reported-by: Sirko Höer -- Code Intelligence for DCSO.

[33mcommit 316a411b6b40365ffff382967bec8bc22f18c192[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Mar 27 22:56:15 2019 +0100

    ssl : SSLProbingParser overflow fix
    
    Found by fuzzing
    Fixes ssl detection evasion by packet splitting

[33mcommit 666bb1b6e48b47e9fafe161ac57deae8d0fd89f0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 15 14:52:38 2019 +0200

    parse/ip: fix potential oob write in ipv4 validation
    
    Found using AFL.

[33mcommit 8be4142aaf100353dcf10b4d79ff68e34b78f87c[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Mar 26 16:46:27 2019 -0600

    dhcp: verify client id len before parsing data
    
    Verify that the client id length is at least 2 per the DHCP
    protocol rfc before parsing the data.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/2902

[33mcommit 9d75fdc6eafcbbc47b6cff5d54cc8bf86237585e[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Mar 26 16:24:34 2019 -0600

    rust/ftp: validate port components in passive reponse
    
    Make sure they are valid 8 bit integers before combining the
    two parts into a u16 to prevent an overflow of the u16
    return value.
    
    Add unit tests to check parsing of invalid ports.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/2904

[33mcommit 275e8f280dc46d8e5d8a4dc28b134c222dc5d730[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Mar 20 06:45:49 2019 -0600

    rules: add mpls packet too small decoder rule

[33mcommit b8ce7f2885cea0ea31c45e9c3dbad4785ae69397[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Mar 15 17:13:00 2019 -0600

    mpls: check buffer length before peeking at next header
    
    Check that we have enough bytes before peaking into the MPLS
    packet payload.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/2884

[33mcommit 8d7d6a96a52273dfae17c55aef7098d0d9670aba[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Mar 18 00:47:30 2019 -0600

    ethernet: fix next packet size on DCE packet
    
    Missing parans on the DCE length caused the length update
    for the next call to DecodeEthernet to be wrong.
    
    Tests added.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/2887

[33mcommit 76cc03010adfb1441d883c947888ea4ed58fb691[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 15 14:01:40 2019 +0100

    ssh: fix banner overflow issue
    
    Reported-by: Sirko Höer - Code Intelligence

[33mcommit 2b75222250c54f3c6223f11ea564dd3f1ccd1832[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 29 10:47:50 2019 +0200

    runmodes: for test runmodes, clean up properly
    
    For conf test and engine analysis, clean up memory correctly.
    
    This helps valgrind tests for leaks.

[33mcommit 74f436d209ef503f49f22f425178561a5a494891[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Apr 20 05:05:30 2019 -0700

    logging: display base64 decoded string for packet
    
    This changeset changes the packet display to be base64, rather than hex.

[33mcommit 7d28c19f055394031ca1bd18c95d77fe86ac32a9[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Apr 16 16:27:51 2019 -0700

    logging: Ensure all anomalous events have an event_type
    
    This change ensures that each anomaly is tagged with an
    event type to support querying.
    
    Each anomalous event will include `"event_type": "anomaly"`
    in the log record.

[33mcommit 5e222129d53f673b02f28d4aef5bde4e00afe582[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon Apr 8 15:37:45 2019 -0700

    eve/alert: Remove unused results from PrintRawLineHexBuf
    
    This changeset removes the call to `PrintRawLineHexBuf`. The
    return values were never used.

[33mcommit a8938f449d71554a31b1c585e3c8e75ab1b7e09c[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Apr 2 16:14:36 2019 -0700

    logging: Anomaly logging
    
    This changeset adds anomaly logging to suricata for issue 2282.
    
    Anomaly logging is controlled via the `anomaly` section within eve-log.
    There is a single option -- `packethdr` -- for including the packet header
    in the anomaly.

[33mcommit a1c6e091ac0960293306b1bc90fc658cee8e2689[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Mar 6 08:56:47 2019 +0100

    http: new event for auth unrecognized
    
    activates libhtp auth parsing
    Fixes #984

[33mcommit 7d6875fb6857de8c905cf6870d77e6378b0c25c8[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon Apr 8 15:53:47 2019 -0700

    documentation: Correct rst for ssh-keywords
    
    This changeset corrects an error in the ssh-keywords
    where 3 "`" characters were used instead of 2 "`" characters.

[33mcommit 97fc7c1e1aa40a0add4813e486b6490bd95d4a88[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Mon Apr 8 15:52:55 2019 -0700

    documentation: sticky buffer updates
    
    This changeset updates the userguide for the TLS and JA3
    keywords that have been renamed from <id>_<name> to <id.name>

[33mcommit 7f102d95b634916088b09b29e5b943773a9b63af[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun Apr 7 10:42:25 2019 -0700

    detect: Modernize TLS keywords
    
    This changeset adds keywords for "tls.<name>" and moves the existing
    value of "tls_<name>" to an alias.

[33mcommit 36796de731d59c3320b212fb7cdb3c45bf6e39bc[m
Author: Alexander Bluhm <alexander.bluhm@gmx.net>
Date:   Wed Apr 10 15:32:55 2019 +0200

    init: pledge(2) needs "fattr" during suricata reload.
    
    When killed with SIGHUP, suricata reopens the log files.  If filemode
    is set in the config, it needs pledge promise "fattr" to allow the
    chmod(2) on OpenBSD.

[33mcommit 76357350fdad26dc2832fd12d2173057b1d77cf9[m
Author: Giuseppe Longo <giuseppe@glongo.it>
Date:   Tue Apr 23 16:27:41 2019 +0200

    doc: update http.protocol description

[33mcommit af9399f2ac43ca00d6714e5c21cfa5db2cd69959[m
Author: Giuseppe Longo <giuseppe@glongo.it>
Date:   Tue Apr 9 21:03:17 2019 +0200

    detect-http-protocol: use v2 inspect/mpm engines
    
    This updates inspect/mpm engines to v2.

[33mcommit 4705314fd2741ac0b375b822706da7f34810e37c[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Mon Apr 1 23:32:08 2019 +0530

    doc: Add manpages for suricatasc and suricatactl
    
    Add the missing manpages and the corresponding Sphinx configuration
    for the command line tools `suricatasc` and `suricatactl`.
    
    Closes redmine ticket #884.

[33mcommit a6a0b0aa4a493a3d3a3f3d9a9a84b7184e14f79c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 23 11:20:59 2019 +0200

    detect/files: fix file sigs state handling
    
    Make sure all file sig mismatches indicate this in their return
    code, not just the ones with filestore enabled. This is needed
    to tell the stateful detect engine that it is dealing with a file
    sig, so it can make sure these are inspected correctly even if
    there are possibly multiple files per tx.

[33mcommit 225cdf996e6de52e79b7b306a4e99e9b9604fa47[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 23 13:06:16 2019 +0200

    eve/alert: take vlan from packet, not flow
    
    Flow is not guaranteed to exist.

[33mcommit 360a6ace435353b8c72a98bbaf8aa00dcb55f7c3[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Apr 21 10:04:27 2019 +0200

    doc: add info about buffer usage in lua

[33mcommit 497f35164b6689012c5f448a35f47b3b8aa514a4[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Apr 21 09:40:28 2019 +0200

    detect-filename: avoid multiple inspections of buf
    
    If the filename inspection function is returning nomatch this will
    trigger iterative inspections with same content (aka filename) being
    inspected. To avoid this we change the return as the buffer inspection
    has not to be inspected anymore.

[33mcommit 63f2032ed6ed7e0875ec64221096fa667043abb2[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Apr 21 00:39:16 2019 +0200

    doc: fix way to build URL

[33mcommit f48ac1860a251e6325d61b6c828e4fef73733f1f[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Apr 20 23:23:10 2019 +0200

    detect-lua: implement sticky buffer
    
    This patch implement an option named 'buffer' that can be used in the
    init function of a lua signature:
    
     function init (args)
         local needs = {}
         needs["buffer"] = tostring(true)
         return needs
     end
    
    With this, the lua script will get access to the sticky buffer
    content.

[33mcommit 62a11dd3ed29392a10a3ab30a6c6d53ca6cb78a3[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Apr 20 23:20:46 2019 +0200

    detect-lua: fix DNP3 value

[33mcommit 600f2ab39159b475f72a19837a91dd4432905df1[m
Author: Mark Janssen <mark@praseodym.net>
Date:   Sun Feb 10 15:29:42 2019 +0100

    eve/json: always output vlan field as array

[33mcommit 0cc3c2cc6c4743600101e8fe74005515737757c7[m
Author: Mark Janssen <mark@praseodym.net>
Date:   Thu Jan 24 22:04:51 2019 +0100

    eve/flow: add in_iface field
    
    Fixes #2057

[33mcommit fed9b7a180177bd373641f17801b79ff34f087a8[m
Author: Mark Janssen <mark@praseodym.net>
Date:   Thu Jan 24 21:48:21 2019 +0100

    eve/flow: add vlan field

[33mcommit f558ef2c55141807f59d5e5c823641a0d05b7c8b[m
Author: Bendik Hagen <bendik@mnemonic.no>
Date:   Thu Jan 31 22:43:58 2019 +0100

    Flow/Stream: set psuedopacket iface/vlan from flow
    
    This fixes redmine bug #2057 by setting pseudopacket iface and vlan from
    flow values, solving the problem of missing vlan/iface when psuedopacket
    gets logged/alerted on.

[33mcommit b7b40393dce953f76e7aab63001963396332360c[m
Author: Bendik Hagen <bendik@mnemonic.no>
Date:   Thu Jan 31 22:41:46 2019 +0100

    Flow: Set flow iface and vlan_idx
    
    Setting flow iface and vlan_idx from packet, making it possible to log
    iface and vlan on psuedopackets and in flow-logs.

[33mcommit ec0dd0209a8f9e4980358f4b9f197b03330f0aad[m
Author: Bendik Hagen <bendik@mnemonic.no>
Date:   Thu Jan 31 22:32:25 2019 +0100

    Flow: Adding livedev and vlan_idx on flow
    
    Adding livedev and vlan_idx on flow, making it possible to use it for
    logging in_iface on flow-logs and fix in_iface on psuedopackets.

[33mcommit bef190f767828f240f1ef9718e72b187faedc5af[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Apr 4 20:37:29 2019 +0200

    http: logs content range
    
    Fixes #2485

[33mcommit 43e205fc32ea14d0c466572fd418e725b79c94d0[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Thu Apr 18 16:04:50 2019 +0200

    smtp: rset command resets bdat chunks length
    
    Fixes #1860

[33mcommit ff52bb14b7f5a15b906ac92cc2b74d74419f360a[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Mon Apr 1 14:57:15 2019 +0200

    ssh : code style consistency
    
    Adds SSH_FLAG_VERSION_PARSED to flags before each return
    This way, we are sure SSHParseBanner does not get called again
    And proto_version does not get leaked

[33mcommit 4f33b8c18d4c5afa7ec56f4f749b4e0be176ff82[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Mar 16 06:54:01 2019 -0700

    decode: Improved FTP active mode handling
    
    This changeset addresses 2 issues:
    - 2459
    - 2527
    and improves handling for FTP active mode over IPv4 and IPv6.
    
    Active mode is triggered when the FTP client conveys the port
    that should be used for a data connection (PORT, EPRT).
    
    When this occurs, the FTP state is marked as "active".

[33mcommit 164fb7189898893ff0b2ace957c7cec19d0ee88a[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Mar 26 16:28:17 2019 -0600

    mpls: fix misaligned read
    
    Instead of casting the packet buffer to a uint32, memcpy it to
    avoid misaligned read error, as caught by the undefined behavior
    detector (ubsan).
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/2903

[33mcommit a4ec133a888a465418eb30bb839b76dfa85bea4d[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Wed Apr 3 13:26:24 2019 -0400

    ci: updated travis and appveyor for nss/nspr
    
    * added nss and nspr requirements for appveyor build
    * added nss and nspr requirements for travis builds
    * added travis build without nss and nspr
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit dd2063a75e47b6fa769b59f3fd115b9728e8e93e[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Wed Apr 3 13:21:14 2019 -0400

    configure: fix nss check logic
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 7ea269a212a3a2209effc3cc9300873d6a06859e[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Wed Apr 3 12:55:26 2019 -0400

    configure: fix nspr check logic
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit f7d8401c2e650655487bcb5085b5d81d3425107a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 17 13:11:10 2019 +0200

    eve/smb: minor cleanup now Rust is mandatory

[33mcommit c2cb155ebb8d4068b19db1c62ba39f1d05fd22b5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 17 09:04:17 2019 +0200

    rust/smb: rename files and code from RustSMB to SMB

[33mcommit e572324c5a43d3694f1c75fb611403f2e56729fe[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 17 08:45:36 2019 +0200

    detect/dcerpc: cleanup now Rust is mandatory

[33mcommit 50709144f9e47d68fc123f7f42a0e854e55b643a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 16 21:44:41 2019 +0200

    detect/app-layer-event: cleanup test

[33mcommit f30c05e68431dce92ea01aa8c665a275ff2507a4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 16 21:11:00 2019 +0200

    smb: remove C implementation
    
    Now that Rust is mandatory it is obsolete.
    
    Ticket: #2849

[33mcommit 8a2b94c6f47c7e49022ad5353a382bc77732df99[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 13 15:34:49 2019 +0200

    openbsd: fix rust linking

[33mcommit 67b2692d345c6fcfbd606468a6dc3b2b40e14dc1[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Apr 3 23:48:48 2019 -0600

    dns: remove as much C DNS code as possible
    
    As some of the C code is still used it can't all be removed.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/2850

[33mcommit 355d125c4fd56e1ce5bdfde1b44de77ade593212[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Apr 3 17:08:00 2019 -0600

    userguide: remove dns-log

[33mcommit 78b82ce6a516168243e6b77e987e33e7a5a4c76f[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Apr 3 17:05:38 2019 -0600

    dns-log: remove, not supported now that Rust is required
    
    The non-json line based DNS log is not supported with Rust only
    builds and has been scheduled for removal in Suricata 5.0.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/2297

[33mcommit 75a018ead256eceb3932118e30f151b80c61de8c[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Mar 22 08:28:15 2019 -0600

    doc: remove autoconf replacement var for Rust
    
    Set to yes as Rust is always enabled now.

[33mcommit fc3191dc2d602f87c53841e659356a966a0992ec[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Mar 22 08:26:52 2019 -0600

    config: enable all things requiring Rust
    
    Instead of only enabling them if Rust is enabled, as Rust is
    always enabled now.

[33mcommit b2fedc9ed2cae4e4a36cf0a9dbe8e3530c3e89c9[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Mar 22 07:45:47 2019 -0600

    travis-ci: enable Rust for all builds

[33mcommit 75429bbe3ea3ff12a9e8e7e863a10ded91cb6de9[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Mar 22 07:05:35 2019 -0600

    autoconf: make Rust required in configure
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/2507

[33mcommit 832270c1d36a34d3e5d546f7fcecf8fbc93e8590[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Mar 21 08:37:28 2019 -0600

    travis-ci: test that configure fails without jansson
    
    Update the no-jansson test to fail out if configure
    passes.
    
    The script needed to be converted into a single list item
    for the early exit to work on Travis.

[33mcommit e49c40428e1b9f7e5dcdb5857c3978d5cb859fd9[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Mar 21 07:40:35 2019 -0600

    autoconf: jansson is now required
    
    Jansson is required by the Suricata Rust support which
    will also be mandatory.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/1970

[33mcommit 6cfc39d7c9e06e03d7cdd6ce54c960d096ceecb9[m
Author: Phil Young <py@napatech.com>
Date:   Thu Mar 28 16:01:54 2019 -0400

    napatech: auto-config documentation update
    
    Added documentation describing how to configure suricata to automaticly
    configure sreams and host buffers without using NTPL.  I.e. from
    suricata.yaml.

[33mcommit 05271bfbe5fed82e267bb17fb2afb8e151f50219[m
Author: Phil Young <py@napatech.com>
Date:   Thu Mar 28 16:00:58 2019 -0400

    napatech: simplify integration with Napatech cards
    
    - There is now an option to automatically create streams on the
      correct NUMA node when using cpu affinity.
    
    - When not using cpu affinity the user can specify streams to be
      created in the suricata.yaml file.  It is no longer required to
      use NTPL to create streams before running suricata.
    
    - The legacy usage model of running NTPL to create streams is still
      available. This can be used for legacy configurations and complex
      configurations that cannot be satisfied by the auto-config option.

[33mcommit fd9f64d00f95f619cfe81257501fc0c9dd6ea205[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 9 12:22:21 2019 +0200

    byte: suppress errors in byte extraction utils

[33mcommit a496c8be0c4a7f80f4cade6f59b4b8c04a5ef8d8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 9 12:11:15 2019 +0200

    detect/bytejump: suppress runtime error messages

[33mcommit 5703ce371efa8cfe1c368ff19815572d17c3ad7d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 9 10:12:19 2019 +0200

    detect/byteextract: suppress runtime error messages

[33mcommit 7f63ec185a00b9d518bc82f7f1432dadadc7a24b[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Tue Apr 2 20:05:03 2019 -0400

    pfring: update PfringThreadVars_ for gcc 4.x
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 00917a0415629abbf675fd14d8752a0a27ab1ff5[m
Author: Emmanuel Roullit <emmanuel.roullit@cognitix.de>
Date:   Fri Mar 1 15:21:46 2019 +0100

    init: use pledge(2) after suricata initialization.
    
    pledge(2) can be used on OpenBSD to restrict suricata possible
    operation on the system once initialization is completed.
    The process promises to only make use of:
    - "stdio" to allow read(2) on IPS rules and write(2) on log file
    - "rpath wpath cpath" to allow log rotation
    - "unix" to operate the control unix socket and log unix sockets
    - "dns" to retrieve DNS from recvfrom(2)/sento(2) in IPFW mode
    - "bpf" as suricata uses libpcap, which uses the BIOCGSTATS operation
    
    Signed-off-by: Emmanuel Roullit <emmanuel.roullit@cognitix.de>

[33mcommit 8b75e69165be3a0b0f2621e20ffbed67e58ed439[m
Author: Emmanuel Roullit <emmanuel.roullit@cognitix.de>
Date:   Fri Apr 5 10:46:06 2019 +0200

    log: output file mode in octal on chmod warning
    
    The mode input in chmod is an octal integer. However when the warning is logged,
    the file mode is printed in decimal which is confusing.
    
    Signed-off-by: Emmanuel Roullit <emmanuel.roullit@cognitix.de>

[33mcommit 8e464530ef9c788bb5482ff8806aadb4001c4d43[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Mar 26 14:30:09 2019 -0700

    decode: Change return type of IPv4 and TCP options decode
    
    The return value from the options decoder in TCP and IPv4 is ignored.
    This commit changes the return type of the function to `void` and
    modifies existing return points to return without a value.
    
    When an error occurs, the packet state is being set to indicate whether
    it's valid or not and the existing return value is never used.

[33mcommit 03b0e4272b2a278c2021a44e12125f3a5569b2b5[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Tue Mar 26 14:32:52 2019 -0700

    parse: Improve unknown protocol parse message
    
    The message associated with unknown protocols during parsing is incomplete.
    This commit improves the message readability.

[33mcommit 9856c5533a7278ed48dad38ab0feb04f11b27b56[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun Apr 7 08:36:51 2019 -0700

    doc: ssh.{proto,software} documentation update

[33mcommit b10125af07fe478bc579557e42c5bcef7ca518e2[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun Apr 7 08:56:22 2019 -0700

    sticky: Convert ssh_software to new format

[33mcommit ceba8c89e93b8b130e81ea5fbeb75cbd3ec60ff1[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun Apr 7 08:35:44 2019 -0700

    sticky: Convert ssh_proto to new format
    
    This changest converts the 'ssh_proto' sticky buffer
    into the v2 framework.

[33mcommit 80be07a534942b720f6718651b585c2634bb6b57[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun Mar 31 05:36:58 2019 -0700

    detect/http: Use v2 inspect and mpm engines
    
    This changeset updates the http stub detect logic to use the v2 inspect
    and npm engines.

[33mcommit aaf502d383b6c91b611cc3e4d731677bc7a30c0b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 5 16:47:06 2019 +0200

    stream: suppress noisy debug info messages

[33mcommit 63569aeb5715c1ec847011d74ec4ff86f437c950[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 5 16:46:49 2019 +0200

    pcap: suppress info messages

[33mcommit ee128c7460a87f677bb392a90e973ec820aa0fb1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 5 15:50:39 2019 +0200

    detect/disable-detect: suppress info message
    
    The message would be displayed even when level was higher than
    info.

[33mcommit d00950be81d3f70ad1e363c75c97dd753dd2f3b5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 5 13:53:59 2019 +0200

    log/file: use default-log-dir for suricata.log
    
    Default to just suricata.log instead of the full path, so that
    in user mode we can log in the user mode location.

[33mcommit a36482e92407f02a70123b1509bde28e84afb6b6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 5 12:23:05 2019 +0200

    user mode: use CWD as logdir
    
    Introduce util func for handling user mode settings.

[33mcommit c72dd84ade4264b2070ae0c114f40f49a8c9352b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 5 11:33:52 2019 +0200

    logopenfile: remove duplicate ifdefs

[33mcommit 56e4c348e15b77e07ee94204d1cff8367ebcf570[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 5 11:31:45 2019 +0200

    runmodes: improve error messaging

[33mcommit 1a7e93f4a6e7d8a7d382d6e4f4e17687ffe4e063[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 5 11:28:56 2019 +0200

    startup: log system mode with version

[33mcommit 86ed5815cb42dfd5e4f27bfab4797b86f3234568[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 5 11:20:24 2019 +0200

    instance: set system vs user mode

[33mcommit 231496f1653411d62bb2d5c55d2b6691e4df2fef[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 4 12:03:26 2019 +0200

    rust/mingw: enable in appveyor

[33mcommit 24d6a164598bbb51b009ba519393e11489e3f7d4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 27 19:59:21 2019 +0100

    rust/mingw: build fixes
    
    Fix path passed to cargo by using 'cygpath' if available.

[33mcommit 968e613037194ecef47ce1e98ff90c20c60a0499[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 3 20:49:52 2019 +0200

    list-keywords: don't load yaml
    
    Avoids a useless warning if the file is not found.

[33mcommit 1b1fc9fee2ba1aa22486447bd8ae11d49d00e9f9[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sun Mar 17 20:04:02 2019 -0400

    rule-analyzer: Ensure content counts are accurate
    
    Fix for issue 2605.  Make sure that content is counted,
    even if none of the specific content types are matched.

[33mcommit 1c97423adf178e58f2e2d508aa6f538f2eae36d7[m
Author: Giuseppe Longo <giuseppe@glongo.it>
Date:   Sun Mar 31 14:00:00 2019 +0200

    source-nflog: fix memleaks
    
    This fixes two memleaks found with ASAN.
    
    Direct leak of 96 byte(s) in 1 object(s) allocated from:
       #0 0x7f59cf4a4d28 in malloc (/usr/lib/x86_64-linux-gnu/libasan.so.3+0xc1d28)
       #1 0xd7f92f in ReceiveNFLOGThreadInit /home/glongo/suricata/src/source-nflog.c:221
       #2 0xe9c8eb in TmThreadsSlotPktAcqLoop /home/glongo/suricata/src/tm-threads.c:293
       #3 0x7f59cd7aa4a3 in start_thread (/lib/x86_64-linux-gnu/libpthread.so.0+0x74a3)
    
    Indirect leak of 70000 byte(s) in 1 object(s) allocated from:
       #0 0x7f59cf4a4d28 in malloc (/usr/lib/x86_64-linux-gnu/libasan.so.3+0xc1d28)
       #1 0xd814ea in ReceiveNFLOGThreadInit /home/glongo/suricata/src/source-nflog.c:324
       #2 0xe9c8eb in TmThreadsSlotPktAcqLoop /home/glongo/suricata/src/tm-threads.c:293
       #3 0x7f59cd7aa4a3 in start_thread (/lib/x86_64-linux-gnu/libpthread.so.0+0x74a3)
    
    SUMMARY: AddressSanitizer: 70096 byte(s) leaked in 2 allocation(s).

[33mcommit 4b4bb31c30339caa2c6020a7ec14bea848ba5a5d[m
Author: Emmanuel Roullit <emmanuel.roullit@cognitix.de>
Date:   Thu Mar 28 09:19:17 2019 +0100

    log: add NULL ptr guard on fclose when reopening.
    
    Signed-off-by: Emmanuel Roullit <emmanuel.roullit@cognitix.de>

[33mcommit f84667ceb7fed1de93086136a2e93c002f6bc7e1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 2 15:21:43 2019 +0200

    nfs: small cleanups

[33mcommit 884ca0cd3a730f897a1240d9b0b3c2dd32d65fb5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 3 20:24:59 2019 +0200

    detect/ftp: small ftpdata_command cleanups

[33mcommit 834d579f7ef402bed237da39902473718ca7dadb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 3 20:18:35 2019 +0200

    detect/uricontent: suggest http.uri as alternative

[33mcommit 6974eb31165412ba50ff8aaf0558e1e9df3caed0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 3 20:12:30 2019 +0200

    detect/dns: add dns.query for dns_query keyword
    
    Improve error checking.
    
    Part of #2283.

[33mcommit 822a434036f084bf9ff0380a9e7e925f75346645[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 1 22:21:06 2019 +0200

    nfs: implement midstream reverse flow support
    
    Register special midstream version of protocol detection that
    can indicate the flow is the wrong direction based on the record
    properties.

[33mcommit bb78d48c0a72598c9a01ba429f63940099f80e46[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 1 22:20:53 2019 +0200

    app-layer/probing-parser: implement reverse flow
    
    Implement midstream support for the pure probing parsers. These
    need to look up the appropriate parsers based on the reverse
    tuple.

[33mcommit 34cb49f1e9ab27cb4e2455a516a89d62f458d423[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 2 14:53:25 2019 +0200

    flow: add macro to get sp/dp
    
    Account for possibility of a reversed flow.

[33mcommit 7f0bdc6621b38777e3acb0bf90773ffc08f42ab2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 29 15:10:00 2019 +0100

    rust/mingw: fix C glue code generator

[33mcommit 0301ceab136b8b4624dce956a1f083bf951ad7bc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 28 11:51:43 2019 +0100

    rust/mingw: fix missing IPPROTO_* declarations
    
    The libc crate doesn't provide these on MinGW, so define them in
    our 'core' instead. We only use IPPROTO_TCP and IPPROTO_UDP.
    
    Bug #2733

[33mcommit 37893d88748b8a108e017efdad8ea57c61bb1296[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 29 14:44:36 2019 +0100

    alert/unified2: remove useless packed attributes

[33mcommit 9dd200b5c97b7b2218331b3407317fa9520d8215[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 29 14:44:15 2019 +0100

    decode: remove useless packed attributes

[33mcommit 948a4ccb3b494290dd835486ffbef8e5e8bc0455[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 29 10:21:28 2019 +0100

    detect/iponly: only run iponly address parsers for iponly rules

[33mcommit 92f08d85aac203b05f72aa704fcc6b51e23f362b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 29 10:20:34 2019 +0100

    detect/iponly: improve negation handling in parsing

[33mcommit ba1de99f10125aa63e5f1f3960eb6a2d34cb52bb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 29 10:19:00 2019 +0100

    detect/address: clean up 'any' logic

[33mcommit 6a5084ccf91c737f48e44820524edc36c867a1a5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 28 12:07:15 2019 +0100

    detect/parse: set the type of signature early
    
    This way we can know much sooner if the rule is ip-only
    or not.

[33mcommit 449f1698482d0d0a9c19ce8e6a762d706fbfd94d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 28 10:50:05 2019 +0100

    detect/parse: reduce scope of main parse func

[33mcommit ac2fb706d4639a3f9ac3fb8a57adf90530af6020[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 28 13:38:47 2019 +0100

    detect/content: test cleanup

[33mcommit 5626528c73c3fb6ccc19e99485245e528aebb503[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 26 11:09:02 2019 +0100

    smb3: support direction check in midstream
    
    As the records contain no indicator, fall back to checking the
    flows port number.

[33mcommit 422e4892cc724e2ec064a5672030220cbdcd5406[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 21 13:57:50 2019 +0100

    proto-detect: improve midstream support
    
    When Suricata picks up a flow it assumes the first packet is
    toserver. In a perfect world without packet loss and where all
    sessions neatly start after Suricata itself started, this would be
    true. However, in reality we have to account for packet loss and
    Suricata starting to get packets for flows already active be for
    Suricata is (re)started.
    
    The protocol records on the wire would often be able to tell us more
    though. For example in SMB1 and SMB2 records there is a flag that
    indicates whether the record is a request or a response. This patch
    is enabling the procotol detection engine to utilize this information
    to 'reverse' the flow.
    
    There are three ways in which this is supported in this patch:
    
    1. patterns for detection are registered per direction. If the proto
       was not recognized in the traffic direction, and midstream is
       enabled, the pattern set for the opposing direction is also
       evaluated. If that matches, the flow is considered to be in the
       wrong direction and is reversed.
    
    2. probing parsers now have a way to feed back their understanding
       of the flow direction. They are now passed the direction as
       Suricata sees the traffic when calling the probing parsers. The
       parser can then see if its own observation matches that, and
       pass back it's own view to the caller.
    
    3. a new pattern + probing parser set up: probing parsers can now
       be registered with a pattern, so that when the pattern matches
       the probing parser is called as well. The probing parser can
       then provide the protocol detection engine with the direction
       of the traffic.
    
    The process of reversing takes a multi step approach as well:
    
    a. reverse the current packets direction
    b. reverse most of the flows direction sensitive flags
    c. tag the flow as 'reversed'. This is because the 5 tuple is
       *not* reversed, since it is immutable after the flows creation.
    
    Most of the currently registered parsers benefit already:
    
    - HTTP/SMTP/FTP/TLS patterns are registered per direction already
      so they will benefit from the pattern midstream logic in (1)
      above.
    
    - the Rust based SMB parser uses a mix of pattern + probing parser
      as described in (3) above.
    
    - the NFS detection is purely done by probing parser and is updated
      to consider the direction in that parser.
    
    Other protocols, such as DNS, are still to do.
    
    Ticket: #2572

[33mcommit c0ab45aa6fbe1a299facf45e34ba2bcb3d76ce75[m
Author: Danny Browning <danny.browning@protectwise.com>
Date:   Mon Feb 18 09:57:21 2019 -0700

    source-pcap-file: Pcap File Init Failure Handling (#1694)
    
    Better handle case where pcap file receive thread fails to initialize. Allow
    initialize to complete, but terminate the thread quickly. Delay exiting
    unix socket runmode as late as possible.

[33mcommit 55ab112e77819bcd715088e0064b988bc6487f09[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 22 20:34:06 2019 +0100

    app-layer/pd: minor code cleanup

[33mcommit 2cf0a34e66f2b46695f5ee43062540a1e6921679[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 22 20:19:31 2019 +0100

    app-layer/pd: set offset and depth in mpm

[33mcommit 7cea1e4181dadb7527eed31b403d11ebdbc15a70[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 22 20:18:44 2019 +0100

    mpm/hs: track maxdepth

[33mcommit 928fe1b859afb448f6fe344f80d8952a3b69c470[m
Author: Alexander Gozman <a.gozman@securitycode.ru>
Date:   Sun Mar 3 13:25:46 2019 +0300

    Bug 2857: NFQ ASAN 'heap-use-after-free' error.
    
    Global NFQ contexts were not freed properly causing
    'use-after-free' error. Moving contexts cleanup to a
    separate NFQContextsCleanup() and calling it from
    GlobalsDestroy(), like it's done for AFPacket, solves
    the problem.

[33mcommit 74cd6a9ee8c8c64063e1c8fcbcfc0002df629e26[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Feb 27 18:58:44 2019 -0500

    doc: add http.location and http.server

[33mcommit 81c1af0887bd400dd44398381b8804a8d82eb52c[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Wed Feb 27 18:53:10 2019 -0500

    detect: implement http {location,server} sticky buffer
    
    This implements inspection of the Server and Location buffer as a
    content sticky buffer.

[33mcommit 081fdc68049d8f26d2ab9aacb19a187c98b5b2f4[m
Author: Max Fillinger <maximilian.fillinger@fox-it.com>
Date:   Mon Mar 11 10:51:00 2019 +0100

    pcap-log: Don't leak memory in LZ4 error paths

[33mcommit bde65467a91accf637a60c2f71b5c93ba7f8a56c[m
Author: Pascal Delalande <pdl35@free.fr>
Date:   Wed Mar 20 21:20:29 2019 +0100

    doc: add ssh protocol in eve log section

[33mcommit 0ea3fa92a8955b065f052fb378aab253622f1a4e[m
Author: Alexander Bluhm <alexander.bluhm@gmx.net>
Date:   Mon Mar 18 14:06:39 2019 +0100

    Avoid use-after-free during pid file cleanup.
    
    In case the pid file is given in the config file, the file name is
    stored in volatile memory.  Removal of the pid file happens after
    cleanup of config memory.  Create a copy of the name which will be
    freed after the pid file has been removed.

[33mcommit b98c28a60de49d71631ef81a273b88e1c7d3a028[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Mon Mar 11 12:47:57 2019 -0400

    configure.ac: update lzma check and misc doc
    
    * the lzma check during configure wasn't properly displaying the
    additional information on how to install if --enable-lzma was passed
    but lzma devel files were not present
    
    * updated additional information blocks to include distribution
    package names
    
    * minor formatting updates to add quotes around variables
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit c63fea8d0a3651f33824fee0f0a45595e238abef[m
Author: Giuseppe Longo <giuseppe@glongo.it>
Date:   Thu Mar 7 17:05:01 2019 +0100

    reputation: remove dead code
    
    This removes some code commented long time ago.

[33mcommit 6b2a5ef21eae5f7a55bfb0aac6805a2fc703263f[m
Author: Giuseppe Longo <giuseppe@glongo.it>
Date:   Thu Mar 7 16:41:50 2019 +0100

    reputation: declare max value as constant

[33mcommit f7a41412d6fe0fbf285c538ae9d6d02eb63adb21[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 22 11:57:52 2019 +0100

    smb1: fix NT create andx records filename parsing
    
    Use file name parsing routines that take unicode into account
    and consider padding bytes as well.

[33mcommit cc50908f8d8beabaae3a60ee72412d704a024c2d[m
Author: Wesley van der Ree <wesley.vanderree@fox-it.com>
Date:   Thu Mar 21 14:48:18 2019 +0100

    smb: fix NT create filename parsing
    
    parse_smb_create_andx_request_record skipped 1 byte too much before
    the filename.
    
    Fixes: #2894

[33mcommit 2622006faa66e9b3ac86bce47f7825f60870cac4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 21 14:22:04 2019 +0100

    stream: minor test cleanups

[33mcommit 636fb8d387b7da46f6a67434458d410390b5a3fd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 19 11:41:41 2019 +0100

    mpm: track maxdepth
    
    Track max depth setting per MpmCtx.
    
    To make sure the data structure doesn't increase in size change global
    bool to use a flags field.

[33mcommit 55e5d50496cde7a29a01fff847bc56dd7b823e9a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Mar 17 19:29:45 2019 +0100

    detect/flow: optimize flow check
    
    Flow direction doesn't need explicit checking as the rule groups (sgh)
    are already per direction. So if a rule sets only flow:to_server or
    flow:to_client, we can avoid adding a sigmatch to the signature.

[33mcommit 119db92c999e4efd4ec53da49933a6ba9f14127e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 16 08:11:42 2019 +0100

    detect/tag: minor code cleanup

[33mcommit 6bf35a42f194789ee4dd2a9aea624e9a9fd61656[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 16 08:07:14 2019 +0100

    detect/mark: use postmatch instead of tag list
    
    Keep the tag list for just tags. Post match list is better so the
    keyword also works with pass and noalert rules.

[33mcommit 4dbf600d64118175f0989714600ea17d3b510209[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 16 08:05:17 2019 +0100

    detect/mark: minor code cleanups

[33mcommit bd31e4e3320f74e67bf79d878979bb927af3e8ba[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 16 07:34:40 2019 +0100

    detect: packet match micro optimization

[33mcommit 7497c633c426379788bee8796ca3cea48701197d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 15 21:41:49 2019 +0100

    detect/filestore: use postmatch callback

[33mcommit 065c3379edd62693472d78cd155307b42deb7157[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 15 20:05:32 2019 +0100

    detect/replace: implement post-match
    
    Implement replace executor as a post match callback so that it
    is only considered if there actually is a replace keyword in use.

[33mcommit 00beeef0314a5fdd77c2c375022187e6e3f92e71[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 3 14:14:05 2018 +0200

    eve/flow/netflow: log correct tulpe on reversed flows

[33mcommit 9c241fa32c39643a9ca8aa4d82623bbc30406d67[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 3 12:12:43 2018 +0200

    stream: use flow/packet swap logic for SYN/ACK midstream

[33mcommit 2f1ace64c6f9c4f00f7960037ac508c09ddd7546[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 20 16:38:56 2019 +0100

    flow: on timeout, consider reverse flows for pseudo packets

[33mcommit 4d6e6b8270698aa8b66d3e1003c5556dd3ce8b5b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 3 11:10:26 2018 +0200

    flow: introduce flow swap support

[33mcommit 0225ab3828dce70e22030df6dddece7a5b9bcf66[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 27 14:16:41 2018 +0200

    common: introduce flags and var swapping macros

[33mcommit d307cfad052d8ecbd69332dc9ea8229f2794435c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 27 12:24:20 2018 +0200

    packet: add 'swap' function to reverse direction

[33mcommit d5baac3f8507450e44284e0200f52a1f702c7472[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 30 21:01:05 2018 +0200

    detect/flow: don't require flow for direction options
    
    Flow isn't directly used for direction checks, so don't require
    a flow to be present.

[33mcommit c1dcc2696536e29d134601828a70d71a0aa6f5bc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 31 09:14:26 2018 +0200

    detect/parse: improve direction setting on sigs
    
    Only set both directions if no direction has been explicitly set before.

[33mcommit 9a14cb252db053168ef6be2f0e079ef660104b21[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 12 19:55:34 2019 +0100

    detect/bytetest: debug cleanup

[33mcommit cb9b27ab89a2b6174b6c7279d0bd5724a4f04531[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 21 12:06:07 2019 +0100

    app-layer/pd: free memory

[33mcommit 39725907d6aab3b62a560a95088a09b9249c68f7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 18 10:35:45 2019 +0100

    detect: remove BUG_ON from packet path

[33mcommit 042f8063623e205d194e9367f23472eb77c985b6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 18 10:34:03 2019 +0100

    detect: fix match array reset
    
    Fix match array reset depending on prefilter matches for the
    current run. If there were none, the match array of the previous
    packet was used. This could lead to inspection of rules from the
    wrong rule group.

[33mcommit 05d9527d01dce17cc23b876c23b9e456a9c75c6d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 16 18:04:16 2019 +0100

    app-layer/profile: fix udp protocol detection profiling

[33mcommit f44bbd71f56581cfc326b0142a26f51ab65f1db0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 16 15:01:37 2019 +0100

    app-layer/udp: micro optimization

[33mcommit 6123d7752746a2db828cbb07552d75568e208a75[m
Author: Jeff Lucovsky <jeff@lucovsky.org>
Date:   Sat Mar 9 07:28:27 2019 -0800

    Fix memory leak with TOS handling
    
    Use `pcre_copy_substring` to avoid memory allocations when parsing
    TOS values.

[33mcommit 1f3dd852163e7e440888546a842358f08bc0e71e[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Wed Mar 13 20:41:00 2019 -0400

    pfring: update bpf error handling to be consistent
    
    * updated bpf error handling to be consistent with af-packet
    * minor internal doc updates
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit d0e2420faff8d275c3f1feaf06fec2cf91844165[m
Author: Giuseppe Longo <giuseppe@glongo.it>
Date:   Thu Mar 7 16:38:47 2019 +0100

    reputation: move unit tests
    
    UTs are moved inside "test/" directory,
    and reworked to improve readability and reduce lines of code.

[33mcommit 389227d899c3ef0bc2a45d04c159db75c6064ba8[m
Author: Giuseppe Longo <giuseppe@glongo.it>
Date:   Sat Mar 9 22:36:03 2019 +0100

    detect-iprep: fix memory leaks
    
    Loading rules with iprep keyword cause
    memory leaks due to missing frees.
    
    Direct leak of 8 byte(s) in 4 object(s) allocated from:
        #0 0x7f81c862bd28 in malloc (/usr/lib/x86_64-linux-gnu/libasan.so.3+0xc1d28)
        #1 0x7f81c6afea69 in pcre_get_substring (/lib/x86_64-linux-gnu/libpcre.so.3+0x27a69)
        #2 0x43206f7420676e68  (<unknown module>)
    
    SUMMARY: AddressSanitizer: 8 byte(s) leaked in 4 allocation(s).

[33mcommit 58b804f7d25250ce7aa1124ec66d16d129b7a0f4[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Mar 6 14:41:47 2019 +0100

    flow-bypass: set thread name to FB

[33mcommit abe2836caf60979cacc6eafbb8b1a90c9ddc5c23[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jul 12 21:28:20 2018 +0200

    suricata.yaml: fix name of encryption-handling var

[33mcommit a69afd5cf97dba77811642e9b86f8ccba628b61c[m
Author: Jason Ish <ish@unx.ca>
Date:   Sat Mar 9 09:00:59 2019 -0600

    autoconf/python: check for distutils
    
    Require distutils to install the Python tools. Update the logic
    to only install suricatactl (and suricatasc) if Python and
    distutils are found. Suricata-Update will only be installed if
    bundled, and python-distutils and python-yaml are found.

[33mcommit a228986caa7a760e7d667705689c255b7881f67c[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Feb 11 11:27:38 2019 -0600

    autoconf: prefer python 3 over python 2
    
    When looking for Python, prefer "python3" over "python2" and
    "python".
    
    Also add information about the Python path and version to the
    ./configure summary.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/2808

[33mcommit 69d0d484ebe0f92bd4f83694bec6e7f56134dd77[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 2 14:25:38 2019 +0100

    af-packet: don't use anonymous unions

[33mcommit acd9e1c2e7f0891a718aa4d9e26d270a456c7927[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 2 14:26:07 2019 +0100

    af-packet: fix v3 code using v2 union member

[33mcommit 96c6cf98d5ea551f1070b2925edea5f6484ce381[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 5 12:43:40 2019 +0100

    doc/userguide: add 3rd-party-integration to dist

[33mcommit f90733fe3f00ba9cd01dac3ba2de6aca95f3f681[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Mon Mar 4 18:47:07 2019 +0100

    rust/ikev2: fix events not being raised in first message
    
    The `set_event` function requires that the transaction is already
    inserted, or the event set is silently lost.
    When parsing first IKEv2 message, first insert transaction, prepare
    values, and borrow back inserted transaction to update it.

[33mcommit 27b0775d279da00ab563e6335c2664da8e349e1f[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Mon Mar 4 18:45:38 2019 +0100

    rules: fix event names for ikev2 (weak authentication and DH parameters)

[33mcommit db2ceb46dc89e22f70ada17e0ccb0a8338a5ddfa[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Feb 25 13:52:12 2019 -0600

    travis: call make check in qa/coccinelle
    
    Was being skipped due to the way the tests are called on
    travis to prevent Travis from failing on too much output.

[33mcommit fff927fa4a82bf778238a4d698637d2834b12f39[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Feb 25 13:44:19 2019 -0600

    travis/macos: use xcode 8.3 build image
    
    Travis retired the xcode 8.1 image and has already been
    routing this build to the xcode 8.3 image.

[33mcommit 08fb4d790e469a71e2c4e154443ad387194973d7[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Feb 25 13:43:17 2019 -0600

    travis-ci/macos: install PyYAML and jq for verify

[33mcommit 9d86e9c54afc53aeab3c1488fa6d7ca0ca42707a[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Feb 25 12:47:17 2019 -0600

    travis: cache rust toolchain

[33mcommit e9d1e37f3da00a4f5effd03bf5d0829e3d25db7f[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Feb 25 12:24:41 2019 -0600

    travis-ci: run suricata-verify on each build

[33mcommit f1c83c3308cc2a3c7d9a8fa4a25e0fa5ed1dc679[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 25 14:59:37 2019 +0100

    doc/userguide: new 3rd party section, add bluecoat
    
    Add Symantec SSLV (bluecoat) doc to new 3rd party section for
    documenting integrating Suricata with 3rd party tools.

[33mcommit 398133b6ce4db589f99bdd9b8c35f6985a276fe4[m
Author: Bryant Smith <bhsmith27+git@gmail.com>
Date:   Sat Mar 2 10:07:25 2019 -0700

    doc: add byte_* documentation to the userguide
    
    Added byte_test, byte_jump and byte_extract description and example rules

[33mcommit 9948c96c681fede57843689d8f3a3799fd98188a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 27 07:16:18 2019 +0100

    stream/ips: set proper payload len for inspection
    
    On mem(cap) presure we fall back to the packet payload. The previous
    patch failed to properly set the payload length.

[33mcommit d6903e70c1b653984ca95f8808755efbc6a9ece4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Feb 24 19:56:29 2019 +0100

    file-log: remove and add warning
    
    Feature was deprecated and scheduled for removal.
    
    Ticket #2376

[33mcommit 83a8df90f3723f8625dfe1d2cdd35cebc4caf832[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Feb 24 09:30:38 2019 +0100

    doc: improvement of xbits documentation page

[33mcommit 43ede4db7f457622919f9b38e1fdf361c29c7854[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Feb 19 09:53:02 2019 +0100

    doc: xbits:noalert is not a valid syntax

[33mcommit 2b1fa53c66a1db4b5c057394a44ab6aef10bac52[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Feb 18 23:06:10 2019 +0100

    detect-hostbits: error on some invalid config

[33mcommit e09fa43ba53af63c5e9969d3f9ce5b150a5ea6a2[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Feb 18 22:59:01 2019 +0100

    detect-xbits: error on some invalid config

[33mcommit 910c3691afc4f65ba118458e9f0d939805c80d40[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Feb 18 22:31:26 2019 +0100

    detect-flowbits: error on some invalid syntax
    
    The regular expression was accepting something like
    "flowbits:!isset,isma;" without complaining even if it is not
    correct and don't have the expected result.

[33mcommit 033fbc0f8532a159ee143a875900cc6af139e83e[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Feb 18 14:27:18 2019 +0100

    suricata: fix list keywords URL in release mode
    
    The tags are suricata-X.X.X so we need to update the chain to get
    URLs right.

[33mcommit bb08040df6023e270b6a31f1acaf8f4900e83d6d[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Wed Feb 20 15:56:34 2019 +0530

    unix-socket: Fix the message for unregister-tenant-handler

[33mcommit 2483331a5d1bae838ee47b4b9ad441abf432de77[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Wed Feb 20 15:47:01 2019 +0530

    doc/unix-socket: Add missing commands and detail
    
    Add missing commands and their corresponding details in unix-socket
    userguide.
    
    Closes redmine ticket #2800

[33mcommit 342f3d5eecf6636e4ca7fed469b21b3eb839ee91[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Wed Feb 20 23:40:14 2019 +0530

    suricatactl: Clean up parser, improve help
    
    So far the suricatactl parser was unclear about the options to use and
    did not well display the required and optional param difference. Fix
    that to make it legible for any user.
    
    Before
    ```
    └─ $ ▶ ./bin/suricatactl filestore -h
    usage: suricatactl filestore [-h] {prune} ...
    
    positional arguments:
      {prune}
    
    optional arguments:
      -h, --help  show this help message and exit
    
    └─ $ ▶ ./bin/suricatactl filestore prune -h
    usage: suricatactl filestore prune [-h] [-d DIRECTORY] [--age AGE] [-n] [-v]
                                       [-q]
    
    optional arguments:
      -h, --help            show this help message and exit
      -d DIRECTORY, --directory DIRECTORY
                            filestore directory
      --age AGE             prune files older than age
      -n, --dry-run         only print what would happen
      -v, --verbose         increase verbosity
      -q, --quiet           be quiet, log warnings and errors only
    ```
    
    After
    ```
    └─ $ ▶ ./bin/suricatactl filestore -h
    usage: suricatactl filestore [-h] {prune} ...
    
    positional arguments:
      {prune}     sub-command help
        prune     Remove files in specified directory older than specified age
    
    optional arguments:
      -h, --help  show this help message and exit
    
    └─ $ ▶ ./bin/suricatactl filestore prune -h
    usage: suricatactl filestore prune [-h] -d DIRECTORY [--age AGE] [-n] [-v]
                                       [-q]
    
    optional arguments:
      -h, --help            show this help message and exit
      -n, --dry-run         only print what would happen
      -v, --verbose         increase verbosity
      -q, --quiet           be quiet, log warnings and errors only
    
    required arguments:
      -d DIRECTORY, --directory DIRECTORY
                            filestore directory
      --age AGE             prune files older than age, units: s, m, h, d
    ```

[33mcommit 2b05f315e143b28bf33f43ca683915ab0ca81387[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Sun Feb 17 00:19:22 2019 +0530

    suricatactl: Fix PyLint issues
    
    Pylint is a tool to make sure we do not regress the support for Python
    3. The following conventions, warnings, errors, refactors have been
    fixed.
    
    W0301: Unnecessary semicolon (unnecessary-semicolon)
    C0303: Trailing whitespace (trailing-whitespace)
    W1401: Anomalous backslash in string
    C0103: Variable name doesn't conform to snake_case naming style
    R1705: Unnecessary "elif" after "return"
    W1201: Specify string format arguments as logging function parameters
    W0611: Unused import
    R1710: Either all return statements in a function should return an expression, or none of them should
    W0612: Unused variable
    C0103: Method name doesn't conform to snake_case naming style
    R0201: Method could be a function

[33mcommit ccea7fe50abdb0ea07ebb21965fec9025eabdb80[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Sat Feb 16 23:27:24 2019 +0530

    suricatactl: Make code compatible with Python 3
    
    Call to suricatactl was failing with Python3 with the following error:
    ```
    Traceback (most recent call last):
      File "bin/suricatactl", line 40, in <module>
        sys.exit(main())
      File "./suricata/ctl/main.py", line 50, in main
        args.func(args)
    AttributeError: 'Namespace' object has no attribute 'func'
    ```
    Fix this by making it run with Py3 just like it does with Py2.
    
    Closes redmine ticket #2793

[33mcommit c47164ebc8ddfcaa36d491375a3c0c052e4d4a09[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 23 20:14:08 2019 +0100

    doc: add table for custom values of eve/http

[33mcommit 74a42f683c4a00ddcb46fe9989c4f20d242da084[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 23 19:27:22 2019 +0100

    eve/http: add proxy related custom headers

[33mcommit ac7ab4ef018e73eb3fd8566a98002e53023047dd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 23 19:03:13 2019 +0100

    eve/http: fix custom header table

[33mcommit e99063b6b8079d053dce4648da370b6d686dc9d9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 23 12:30:12 2019 +0100

    smtp: minor code cleanup and debug addition

[33mcommit bf905bcbca711b571f786d59d7285cd0d6c72d53[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 22 22:01:37 2019 +0100

    checksum: use u64 types

[33mcommit 02ba360903dc7f678fba484b9275fc3057a9d2c5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 22 20:41:41 2019 +0100

    ips/stream: handle low mem(cap) crash
    
    In low memory or memcap reached conditions a crash could happen in
    inline stream detection.
    
    The crash had the following path:
    
    A packet would come in and it's data was added to the stream. Due
    to earlier packet loss, the stream buffer uses a stream buffer block
    tree to track the data blocks. When trying to add the current packets
    block to the tree, the memory limit was reached and the add fails.
    
    A bit later in the pipeline for the same packet, the inline stream
    mpm inspection function gets the data to inspect. For inline mode
    this is the current packet + stream data before and after the packet,
    if available.
    
    The code looking up the packets data in the stream would not
    consider the possibility that the stream block returned wasn't
    the right one. The tree search returns either the correct or the
    next block. In adjusting the returned block to add the extra stream
    data it would miscalculate offsets leading to a corrupt pointer to the
    data.
    
    This patch more carefully checks the result of the lookup, and
    falls back to simply inspecting the packet payload if the lookup
    didn't produce the expected result.
    
    Bug 2842.
    
    Reported-by: Ad Schellevis <ad@opnsense.org>

[33mcommit ff920472f64092a6819b9bbe9e95ab268e90d226[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 22 16:14:48 2019 +0100

    stream-buffer: fix block search compare func
    
    Sbb search function could return the wrong block due to an off by
    one error.

[33mcommit c306c02f8f64043a62f40aff407bd88e82a529cd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 22 11:55:07 2019 +0100

    stream-buffer: fix streaming buffer size issue
    
    It was using buffer size instead of the real usage of the buffer.

[33mcommit 034724ec7239072c58014f55f0b06b920000d27c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 21 20:33:01 2019 +0100

    flow-manager: improve thread shutdown loops

[33mcommit 8a9cbb37a0e25b36fda4b4b7ad7a4f9c1cbd07bf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 21 20:32:40 2019 +0100

    threads: move sleep macros into common header

[33mcommit 7b3e1d535437e26e4352923c2a5b15fd8e3f6a5f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 22 10:19:39 2019 +0100

    github: update codeowners

[33mcommit aab03dde8742b580d9c6f9a93e9f28e33aa2a22a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 21 10:21:42 2019 +0100

    mpm/ac-ks: rename files from -tile to -ks

[33mcommit 6fcd2db0438416f6f2d9f197c9514d8b6d562262[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 20 21:28:18 2019 +0100

    tile: remove files

[33mcommit 3f253cb8c02b02062138240092837586aced8964[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 20 21:11:14 2019 +0100

    mpm: rename internal id for ac-tile to ac-ks

[33mcommit 2bd23bc1d511801469d4736ef85efeb373992411[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 20 16:58:34 2019 +0100

    detect/pcre: fix false positive
    
    Fix case where a HTTP modifier in PCRE statements would lead to
    the rule alerting when it should not.
    
    Bug #2769

[33mcommit 43698a975acda124fbecc8b598595c23971571a9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 18 15:17:36 2019 +0100

    decoder: improve stats hash error handling

[33mcommit 517b45ea2d5537c88ea2a081a620adb6621896c5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 29 17:55:54 2016 +0200

    netmap: switch to nm_* API
    
    Process multiple packets at nm_dispatch. Use zero copy for workers
    recv mode.
    
    Add configure check netmap check for API 11+ and find netmap api version.
    
    Add netmap guide to the userguide.

[33mcommit 1378f376a141c6c7fb9b6b6a4f09aaacec6e877b[m
Author: magenbluten <magenbluten@codemonkey.cc>
Date:   Fri Feb 15 14:31:41 2019 +0000

    filestore v2: print sid in json output

[33mcommit 1743cf5dcd985123111f87e8d493025990f01547[m
Author: Travis Green <travis@travisgreen.net>
Date:   Fri Feb 15 15:03:30 2019 -0700

    engine-analysis: add support for http_host buffer
    
    Add support for http_host buffer for more accurate reporting.
    Bug: #2798

[33mcommit 699fd6cbd7cdde05c17374433bdfb4e44b8c0652[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Feb 12 12:55:08 2019 +0100

    configure: rust support requires Python
    
    Add error message to warn the user.

[33mcommit 2869f8a746d3c40ab7578db54a99dcba941f2397[m
Author: Alexander Gozman <a.gozman@securitycode.ru>
Date:   Sat Feb 9 12:49:52 2019 +0300

    nfqueue: more descriptive queue names (e.g. 'NFQ#1' instead of '1')
    
    This will also make 'iface-list' output more informative.

[33mcommit 86d7dddfabca51768c4056cf64ad6ea8649de847[m
Author: Alexander Gozman <a.gozman@securitycode.ru>
Date:   Sun Feb 3 20:19:13 2019 +0300

    nfqueue: added received packets counter for 'iface-stat' command
    
    Previously nfqueue did not update received packets counter in a
    livedev so 'iface-stat' UNIX-socket command always showed zeros.

[33mcommit dadac4ae4f385c6ad6cb79f701f3afabe5e50ab7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 12 20:15:56 2018 +0100

    eve/fileinfo: don't alloc filename during logging

[33mcommit 7e1235c9c8c983800aac020b123b0229f91662e1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 12 19:57:14 2018 +0100

    eve/ftp: don't alloc memory to log filename

[33mcommit 3749caadd7ac6c734c919d6c5329e3209e2b5fc4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 12 15:06:18 2018 +0100

    eve/http: use stack for buffer to string conversions

[33mcommit 20f9b0d9c66039a766f36dc8b9bbeb2fd75b24e7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 12 14:35:11 2018 +0100

    byte: add bytes to string w/o allocation

[33mcommit d62d33cdff2b450116d9b572821d93d30a39946b[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Sat Feb 16 21:55:19 2019 +0100

    app-layer-ssl: check that cipher suites length is divisible by two
    
    Cipher suites length should always be divisible by two. If it is a
    odd number, which should not happen with normal traffic, it ends up
    reading one byte too much.

[33mcommit 22d8fc802e405d3aa61d557555b313410de120a0[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Sat Feb 16 21:49:23 2019 +0100

    util-ja3: fix AddressSanitizer heap-buffer-overflow
    
    No resizing is done in Ja3BufferResizeIfFull() when the buffer is
    empty. This leads to a potential overflow when this happens, since
    a ',' is appended even when the buffer is empty.
    
    Bug #2762

[33mcommit 932e5dedc248782146cb3ab14292948fff306332[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 19 09:44:14 2019 +0100

    windows: msys/mingw based appveyor support
    
    Add rust but have it disabled as it is broken.
    
    Add windivert, winpcap and npcap builds.
    
    Run unittests on one of the builds.
    
    Use reasonably strict CFLAGS.

[33mcommit d143ac6e89b1617b0b8e3ec5116be1949c7499b4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 20 10:46:03 2019 +0100

    windows/syscall: fix unused function warning

[33mcommit 759040a75aef6c79d7a1761fc3280425bc944f0e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 20 10:44:30 2019 +0100

    windows/syscall: convert file to use unix newlines
    
    ran: dos2unix src/win32-syscall.[ch]

[33mcommit bae83e61f8867a13bbfe4cc687f8b7cdb38c417b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 19 11:10:31 2019 +0100

    configure: support msys target

[33mcommit d522746c01fc7629d19851a45651ca1bb29ec3a5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 19 16:44:32 2019 +0100

    windows: fix sc_log_stream_lock handling

[33mcommit 7811498d4912d1190bc693faf1cc59de68baa9ec[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 15 11:29:00 2019 +0100

    windows: allow multiple pcap devices on commandline
    
    Ticket #2774

[33mcommit 3d4d2ecc0eef5ef4ddc80345abe5b11ebb4ca41e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 15 10:45:12 2019 +0100

    ips: set host mode only after engine mode
    
    Make sure it is set after the final engine mode update.

[33mcommit 0a106fe2ea1dba94af00922555a080d66a3571ce[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 15 10:37:42 2019 +0100

    stream: fix 'stream.inline=auto' for L2 IPS
    
    Make sure the livedev setup is finalized before initializing the
    stream engine.
    
    Bug #2811
    
    Reported-by: Ad Schellevis

[33mcommit f98b5ecd6a1792076fd0fa5b45fd2fa637fd0748[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 12 15:30:15 2019 +0100

    flow: log gap state per direction

[33mcommit 2a3cb32071adf68276ea612a376889442dc8c6e7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 2 17:27:59 2018 +0100

    stream: no more stream events after known issue
    
    No longer set stream events after a gap or wrong thread. We know
    we lost sync and are now in 'lets make the best of it'-mode. No
    point in flooding the system with stream events.
    
    Ticket #2484

[33mcommit b0b12021d36debee40144b2c0b8a47bd7e9b0450[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Wed Feb 13 16:32:06 2019 +0530

    suricatasc: Fix command failures
    
    This commit addresses the following three cases:
    
    1. Do not use maxsplit keyword arg
    maxsplit argument to the split command was not a part of Python 2
    and using it with Python 2 causes the following failure:
    ```
    TypeError: split() takes no keyword arguments
    ```
    Avoid this by eliminating all the named arguments from split.
    
    2. Fix failure on extra arguments
    Up until now, suricatasc fails if any command which is not supposed to
    take args is given args.
    Fix this by ignoring any extra params.
    Closes redmine ticket #2813
    
    3. Fix failure on different type of args
    If a command was given a string argument where it expected an int, it
    would fail and the process would exit.
    Fix this by handling the exception caused in such cases.
    Closes redmine ticket #2812

[33mcommit 27842c375048bbe141fddd829e895a72809f7d7e[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Fri Feb 8 15:32:24 2019 +0530

    suricatasc: Use better exception message, sort imports
    
    Up until now, suricatasc gives a message as follows in case a command is
    missing arguments:
    ```
    >>> list-hostbit
    Arguments to command 'list-hostbit' is missing
    ```
    
    Fix this up and provide a better message:
    ```
    >>> list-hostbit
    Missing arguments: expected 1
    >>> pcap-file-continuous
    Missing arguments: expected at least 2
    ```

[33mcommit bf37e3f5da77137c3facfdc0e75a7a58dd15fbdb[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Thu Feb 7 17:39:15 2019 +0530

    suricatasc: Snug the processing of different commands
    
    Since all of the commands were following the same procedure, namely,
    split the input extract the arguments, throw the error if required
    argument is missing else send the command over to suricata, put all of
    this in one compact function alongwith a dictionary for specifications
    for different commands, the name of the argument, the type and if it is
    required or not.
    Following fixups come with this commit:
    - Code becomes really cozy
    - Split errors on a few commands are well handled
    - No redundant code
    - More readability
    
    References redmine ticket #2793

[33mcommit 57285b54d5cf611cee78cef6f428320555cbe90d[m
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Thu Feb 7 15:30:44 2019 +0530

    suricatasc: Get rid of issues detected by Pylint
    
    Pylint is a tool to make sure we do not regress the support for Python
    3. The following conventions, warnings, errors, refactors have been
    fixed.
    
    C0326: Exactly one space required around assignment
    C0326: No space allowed around keyword argument assignment
    C0325: Unnecessary parens after 'if' keyword
    W0301: Unnecessary semicolon
    W0702: No exception type(s) specified
    W0231: __init__ method from base class 'Exception' is not called
    W0107: Unnecessary pass statement
    C0121: Comparison to None should be 'expr is not None'
    E0602: Undefined variable 'raw_input'
    W0201: Attribute 'socket' defined outside __init__
    W0611: Unused import

[33mcommit 87019ff22bdc1d788c86b6713e9c4a86c5d5b3ba[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 25 12:00:13 2019 +0100

    dcerpc/udp: fix int mishandling in opnum parsing
    
    For Big Endian support in the protocol, the opnum would not be set
    correctly.
    
    Found using undefined sanitizer.

[33mcommit 9aa4e53434ee0a0a239b584a39ecfaec01ac2da8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 25 11:52:06 2019 +0100

    file/swf: fix undefined int behaviour
    
    Fix warnings by the undefined sanitizer.

[33mcommit 94191ea960f331a5719cc4391bf4098f04dad747[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 25 11:48:50 2019 +0100

    detect/bytetest: don't print errors at runtime

[33mcommit 25112ee7e33642653945ce4f61c0a93a9112af15[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 9 10:40:05 2019 +0100

    rust/smb: fix and optimize record search
    
    Get rid of struct with just a slice reference as well.

[33mcommit 9e7f261a883d8221fae18f3b7900fdf9d8c9f126[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Fri Feb 8 14:45:57 2019 +0100

    rust: fix cargo tests

[33mcommit f22695130b46f4227252de86c54d848ce75492d8[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Fri Feb 8 14:43:45 2019 +0100

    rust: nom4 requires to add complete!() when using many! combinators

[33mcommit 8c0cde36c6671147ea3d1e79ae4c1044ec9c9975[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Fri Feb 8 14:30:17 2019 +0100

    rust: fix warnings for unused variables (add _)

[33mcommit 13b7399790ed11435feedbf18b3f7f647a32773e[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Fri Feb 8 13:39:04 2019 +0100

    rust: upgrade all parsers to nom4

[33mcommit 2f08b3eabdda6c97e15870db12a752fff9d85e3b[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Fri Feb 8 10:44:15 2019 +0100

    rust/nom4: error_code is superseded by error_position

[33mcommit d3011e3ee863d4f09beffab0ba7055b0ebebb5bb[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Fri Feb 8 10:37:55 2019 +0100

    rust: update dependencies for nom4 transition

[33mcommit 6c0ec0b2f374207411be2d2c68b0ea104cf000fa[m
Author: Maurizio Abba <mabba@lastline.com>
Date:   Fri Aug 3 14:27:05 2018 +0100

    eve/http: add request/response http headers
    
    Add a keyword configuration dump-all-headers, with allowed values
    {both, request, response}, dumping all HTTP headers in the eve-log http
    object. Each header is a single object in the list request_headers
    (response_headers) with the following notation:
    
    {
        "name": <header name>,
        "value": <header value>
    }
    
    To avoid forged malicious headers, the header name size is capped at 256
    bytes, the header value size at 2048.
    
    By default, dump-all-headers is disabled.

[33mcommit 469735118876b2eaec1d4efe5a7af9cf3b1a23cc[m
Author: Maurizio Abba <mabba@lastline.com>
Date:   Thu Aug 2 19:43:17 2018 +0100

    smtp: create raw-extraction feature
    
    Add a raw-extraction option for smtp. When enabled, this feature will
    store the raw e-mail inside a file, including headers, e-mail content,
    attachments (base64 encoded). This content is stored in a normal File *,
    allowing for normal file detection.
    It'd also allow for all-emails extraction if a rule has
    detect-filename:"rawmsg" matcher (and filestore).
    Note that this feature is in contrast with decode-mime.
    
    This feature is disabled by default, and will be disabled automatically
    if decode-mime is enabled.

[33mcommit b2a6c60dee83908b383a329b1648df32a342fe54[m
Author: Alexander Gozman <a.gozman@securitycode.ru>
Date:   Mon Nov 19 07:10:39 2018 +0000

    source-nfq: increase maximum queues number to 65535
    
    Previously this was limited to 16, however Netfilter allows
    up to 65535 queues. Suricata now is able to create as many
    queues as possible, but at the same time warns user if one
    specifies more queues than available CPU cores.
    
    This change involves dynamic (de)allocation of NFQ contexts
    instead of on-stack arrays to use less memory.

[33mcommit bdd69d13e0d039328d519b3ff01d887642c7eef0[m
Author: Alexander Gozman <a.gozman@securitycode.ru>
Date:   Tue Nov 6 18:09:21 2018 +0000

    source-nfq: support queue range
    
    If one needs to use multiple sequential Netfilter queues,
    it can be done with a new '-q' option's syntax: "start:end"
    (just like it's done with iptables '--queue-balance' option).

[33mcommit 93c956ebdfc1eb252c68f6dce782c37939904fa3[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Feb 7 13:53:23 2019 -0600

    issue 2795: python 3 fix in Rust C header gen
    
    The C header generation script was failing with a unicode error
    in Python 3 on FreeBSD.  Fix the reading of files to properly
    handle unicode in all Python 3 environments.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/2794

[33mcommit 9bf6f7d5a94e91ef77ef6fbc5714f59a39054571[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Jan 23 14:08:21 2019 -0600

    rust/dns: add dns to dns alerts

[33mcommit d01ce2e58e3e4342e2b25fec859c956d61793e99[m
Author: Fabrice Fontaine <fontaine.fabrice@gmail.com>
Date:   Thu Jan 31 08:56:15 2019 +0100

    configure.ac: fix --{disable,enable}-xxx options
    
    Currently, if the user provides --enable-libmagic or
    --disable-libmagic, libmagic will be disabled because $enableval is not
    used to know if the user provided --enable or --disable
    
    Most of the options have this issue so fix them all by using $enableval
    
    Fixes:
     - https://redmine.openinfosecfoundation.org/issues/2797
    
    Signed-off-by: Fabrice Fontaine <fontaine.fabrice@gmail.com>

[33mcommit e710b06669364e4d174534d60b4af20aaface712[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 15 21:25:45 2018 +0100

    detect: add file.name sticky buffer

[33mcommit ca8471387a2b041069423ffafffc176317cebb90[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 15 10:13:17 2018 +0100

    detect: add http.response_body sticky buffer
    
    As a mirror of the http_server_body content modifier.

[33mcommit 998f32f88c044594f0b26a9222e615c2ad43bbe4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 15 07:57:25 2018 +0100

    detect/tls: consolidate validity code

[33mcommit ccdafe6697ea35492eb9b570e037d79de514b9be[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 15 07:43:16 2018 +0100

    detect/http-server-body: move tests to tests/

[33mcommit 2221dd94036781998e73a7e2c17c7c20aabff45e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 14 07:35:45 2018 +0100

    detect: add http.request_body sticky buffer
    
    Sticky buffer version of the http_client_body content modifier.

[33mcommit 64987f36fb437a3c01b16ac48117f2eb024c547f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 13 14:01:40 2018 +0100

    detect/file-data: move tests into tests/

[33mcommit 2fa8066f3abe10e81c1cc5aea195e721d71c3b7e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 13 13:44:17 2018 +0100

    detect/file-data: consolidate matching code

[33mcommit 9a8092249e4d742cd8f393a55214e40ead09405c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 13 13:15:59 2018 +0100

    detect/http-client-body: move tests into tests/

[33mcommit 477e46da7871c68f5d3dce9aa5d13c123e9e3668[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 13 11:29:15 2018 +0100

    detect/http-client-body: convert to inspect api v2

[33mcommit ce677abdf080725301f5db4ba466e8268af95f23[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 13 11:28:51 2018 +0100

    detect/file-data: minor cleanups

[33mcommit c0767ece9b51e1e7ecf2fd68d488d20824c0e440[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 13 10:21:41 2018 +0100

    detect/file-data: minor cleanups and clarifications

[33mcommit 58aa9dca65e63a709bf5bcec111f122abae5de8f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 13 10:07:58 2018 +0100

    detect/http-server-body: code cleanup and test cleanups

[33mcommit 34137570274148731420f3ed69657bbab51ce83f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 13 07:59:20 2018 +0100

    detect/http-client-body: code cleanups and test cleanups

[33mcommit 645acb1089b5f44c422dc276561c2aa95705651e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 11 10:01:31 2018 +0100

    detect: add http.header.raw sticky buffer keyword
    
    Add parsing tests as well.

[33mcommit 76fd666cad09fb1a9b97e1c3a901b944fdc62fd5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 11 07:26:22 2018 +0100

    detect/http_raw_header: move tests into tests/

[33mcommit 25f974eb29859be8f5734b969ba43cdbd2cf530b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 29 08:31:06 2018 +0100

    detect/http_raw_header: use inspect v2 api

[33mcommit c2984129479dd309fc64670b7f510a421c4c57fd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 29 07:08:12 2018 +0100

    detect/http_raw_header: minor code cleanups

[33mcommit 85697671b89767c4ae4482453f36e0ef4cf2dfcd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 28 10:04:54 2018 +0100

    detect: add http.header sticky buffer keyword

[33mcommit 31444cd0883fec412a186c388ad7cb8fcdad3206[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 28 09:34:25 2018 +0100

    detect/http_header: convert parsing tests to use helper

[33mcommit b9bcd4e115b32a28f5808df2abede342c8190909[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 28 08:53:41 2018 +0100

    detect/http_header: move tests into tests/

[33mcommit 5e951a8b0613b8ebd40a7d3470785d73f4adbee4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 27 14:42:34 2018 +0100

    detect/http_header: inspect v2 api

[33mcommit 74b06b56f24d4a57cd5dc2619cdacdfa568806bb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 27 16:09:14 2018 +0100

    detect/http_header: test cleanups

[33mcommit 2a61ee13e19319ad2e04cea4cbdcec887c0eacf4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 27 14:39:58 2018 +0100

    detect/http_header: remove unused func args

[33mcommit dac182741b40c8e78d0a63e03d11ff187e9ddde8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 27 12:02:56 2018 +0100

    detect: add http.cookie sticky buffer keyword

[33mcommit ab027cb481c1b5916d82b130d4f222b49bee2927[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 27 11:53:21 2018 +0100

    detect/http_cookie: move tests into tests/

[33mcommit 988cc8468eae8995b599e473319b7fde8a3e1a0f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 27 11:43:24 2018 +0100

    detect/http_cookie: switch to inspect v2 api

[33mcommit 0aab3ac336aeb5330036f415911ccbea5f059ddf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 27 11:18:14 2018 +0100

    detect/http_cookie: minor cleanups

[33mcommit e222017a296ccd2e069b287bacd4f9e114c89bc7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 27 10:50:51 2018 +0100

    detect/http_user_agent: set alternative and info flags

[33mcommit b8a0a0d6ea891d5ea40ca54bae9353d2ae0f3c72[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 26 13:34:16 2018 +0100

    detect: add http.stat_code sticky buffer keyword

[33mcommit 2f342da048051bca5752bc1fa6ee876ff8fd5802[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 26 13:13:59 2018 +0100

    detect/http_stat_code: move tests into tests/

[33mcommit 382fa2e81d5457841322cb0b0d497d3dba1672bd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 26 13:02:12 2018 +0100

    detect/http_stat_code: use inspect v2 api

[33mcommit db7d7b24019927cfb50c897c710a98069bdc6163[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 26 12:55:16 2018 +0100

    detect/http_stat_code: minor code cleanups

[33mcommit 59c3c748c973ddfbde44f0f9ec62f3c90d0f5562[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 26 12:23:42 2018 +0100

    detect: add http.stat_msg sticky buffer keyword

[33mcommit 5dfba01b2e43740e7ce982363d7bd54c78c5d7f3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 26 12:06:55 2018 +0100

    detect/http_stat_msg: move tests to tests/

[33mcommit 9b9cf2cc5f84431814be807c8b07109aa680baba[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 26 11:38:35 2018 +0100

    detect/http_stat_msg: switch to inspect v2

[33mcommit 880724d2eee558e2334ea239d2242f795b0ed0bc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 26 11:17:53 2018 +0100

    detect/http_stat_msg: minor code cleanups

[33mcommit e9d43254c8db0ea840de3189e5de68ede97651f7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 25 18:33:01 2018 +0100

    detect: add http.host.raw sticky buffer

[33mcommit b46993899824e05e7365d49283e8a93921eb1ecd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 25 18:24:12 2018 +0100

    detect/http_raw_host: move raw into regular host logic

[33mcommit dc43f35427ba63b9df662339207af51597d1b512[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 25 17:33:08 2018 +0100

    detect/http_host: move tests into tests/

[33mcommit 2c5703761110dedaa39e8fc35d2a2fdcd90527b1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 25 17:20:58 2018 +0100

    detect/http_raw_host: use inspect v2 api

[33mcommit 8c8a3473c9d525db9c5497680be4c467462d69dc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 25 16:54:50 2018 +0100

    detect/http_raw_host: minor cleanups

[33mcommit e9fcb9d5efa695187974cd4b20222250c0673ec3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 25 16:44:54 2018 +0100

    detect/http_method: add http.method sticky buffer

[33mcommit cb332b4cda3acebdc567e855b8bc87525f2a9a6d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 25 16:40:49 2018 +0100

    detect/http_method: move all tests into tests/

[33mcommit d00732175a6d77decf073167b101352da9d6f240[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 25 16:31:05 2018 +0100

    detect/http_method: use inspect v2 api

[33mcommit 5fbee0430663889d31c21cb17a62444a1c8ffb38[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 25 16:26:51 2018 +0100

    detect/http_method: minor cleanups

[33mcommit 4e50df0f55f78e77f16d222175473b01f6235a02[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 25 12:05:24 2018 +0100

    detect/http: add http.uri.raw sticky buffer keyword

[33mcommit 0a405e27a0c4ae8e101d3e9dccb25034b7a00c38[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 25 11:53:15 2018 +0100

    detect/http_raw_uri: code reorganization
    
    Move registration into http_uri logic, move tests into the other uri
    tests. Switch to v2 mpm/inspect APIs.

[33mcommit e29f13502b69fc37b58af4d91cfcdf1cc94fa090[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 25 11:43:10 2018 +0100

    detect/http_raw_uri: small cleanups

[33mcommit 10e2731f18d93685fdc75be3fcb6129de830add1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 25 11:39:28 2018 +0100

    detect/http-uri: move tests into tests/

[33mcommit 0c879d5041d0b41c71efad9a000b56710efdeff6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 26 15:25:04 2018 +0100

    detect: add http.uri sticky buffer keyword

[33mcommit 789f302d1a59583b8f5e080edd31322ef036454b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 24 12:06:43 2018 +0100

    detect: add http.host sticky buffer

[33mcommit a0e4c5e79bbbb3ab475a253934186d5a79ab4bbf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 23 16:36:04 2018 +0100

    detect/http-hh: code cleanups

[33mcommit 3111910fc6cdbbfbb542cef937d6125eb2fd3573[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 26 11:01:03 2018 +0100

    detect/http_user_agent: move tests into tests/

[33mcommit 123ebb2c41849e10a386cef199978d762866a3d2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 24 11:16:26 2018 +0100

    detect: add http.user_agent sticky buffer

[33mcommit fe738014e42c94a377e8bbdedc617d9b4d04524a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 23 16:31:07 2018 +0100

    detect/http-ua: remove dead code

[33mcommit e62c75335ee760dcaadd496e95284b5f954d0727[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 23 16:28:40 2018 +0100

    detect/http-ua: test cleanups

[33mcommit 33b81f7439d55077db797523a40d80728e46ba61[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 27 10:49:37 2018 +0100

    detect: add verbosity of --list-keywords
    
    Add indicators of content modifier or sticky buffer, and also
    allow registering an alternative to a keyword.

[33mcommit d3e953e5f24d8a9805adec9d85b99621e8218c2e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 27 10:03:48 2018 +0100

    detect: switch keyword flags u16

[33mcommit eb73008ccfa1855cb802874effdb47ff340a71a8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 22 12:57:32 2018 +0100

    detect/transform: add to_sha1 keyword

[33mcommit 75f9c1ae9f20540aaceafbda809152cfc9ac4a39[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 22 12:44:34 2018 +0100

    detect/transform: add to_md5 keyword

[33mcommit 42d22ddb2a70833079a24c9b51a4afc67f7f3a60[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 28 09:33:56 2018 +0100

    unittests: add signature parse test helper

[33mcommit 705d3b61302d7a24634126a89da91cd22f3d13ff[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 17 16:59:09 2018 +0100

    Open 5.0.0-dev branch

[33mcommit 7f38ffc8bcfa3bca793eb3be41f112634b48de2a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 29 11:40:57 2019 +0100

    log/stats: fix formatting of long decoder events

[33mcommit b3c021f8d05966c0ca64d9c7452293dce6021c81[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 28 16:55:59 2019 +0100

    userguide: improve stats logging documentation

[33mcommit bb26e6216e5190d841529c0ecb1292b9a358ed54[m
Author: Jingyu Yang <yjyfrombnu@gmail.com>
Date:   Mon Dec 24 16:22:42 2018 +0800

    source-pcap:set PktAcqBreakLoop as pcap_breakloop

[33mcommit d8634daf74c882356659addb65fb142b738a186b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 18 15:03:39 2019 +0100

    stream: fix false negative on bad RST
    
    If a bad RST was received the stream inspection would not happen
    for that packet, but it would still move the 'raw progress' tracker
    forward. Following good packets would then fail to detect anything
    before the 'raw progress' position.
    
    Bug #2770
    
    Reported-by: Alexey Vishnyakov

[33mcommit fb18a1655c15d4025d2f0d79daf089079de41232[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 24 12:23:37 2019 +0100

    eve.stats: warn that output might miss decoder-events

[33mcommit 0d86263efdae0ade81d03f841965a5285bb3e9e1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 24 11:40:39 2019 +0100

    eve.stats: make decoder event prefix configurable

[33mcommit 932c2a7ec5e75451a813c7a70281a9df762e9ab7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 23 21:18:59 2019 +0100

    eve: fix missing decoder-events in stats
    
    In the eve log the decoder events are added as optional counters. This
    behaviour is enabled by default. However, lots of the counters are
    missing, as the names colide with other counters.
    
    E.g.
    
    decoder.ipv6 counts ipv6 packets
    decoder.ipv6.unknown_next_header counts how often an unknown next
        header is encountered.
    
    In this example 'ipv6' would be both a json integer and a json object.
    It appears that jansson favours the first that is generated, so the
    event counters are mostly missing.
    
    This patch registers them as 'decoder.events.<event>' instead. As
    these names are generated on the fly, a hash table to contain the
    allocated strings was added as well.

[33mcommit 0f1fc1f0c8800032865f1e46d1f4bf70dc07b751[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 23 22:02:25 2019 +0100

    hash: move string hash funcs into util files

[33mcommit c140505bece2cc13d098976ff62d4878ab8ce6b7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 23 21:17:56 2019 +0100

    decoder: add gre over ipv6 support

[33mcommit 8709a20d945ea47746274afc48371db02fbfde2e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 22 21:34:28 2019 +0100

    af-packet: minor code cleanups

[33mcommit c99dc5a7bfc3b29f746d28f868d3233b37625770[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 22 21:28:40 2019 +0100

    af-packet: re-enable sync for tpacket v2
    
    Synchronize start was disabled for v2 when v3 was introduced, without
    a reason being given.
    
    Re-enable as v2 will otherwise also start reading packets before the
    other threads are set up. This will lead to hashing issues.
    
    Part of bug #2788.

[33mcommit cebbe06f70ffdbda86dea7435aa406b5d1b26bac[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 22 21:00:57 2019 +0100

    af-packet: fix sync start for tpacket v3
    
    The tpacket-v3 implementation of the synchonize start logic would
    not correctly consider the timestamp parameter, leading to threads
    starting before synchronization between threads was complete.
    
    Bug #2788

[33mcommit 03af3e1ed8aacf34d44b242a507d623352dc10a8[m
Author: Alexander Gozman <a.gozman@securitycode.ru>
Date:   Fri Dec 21 16:16:29 2018 +0000

    nfqueue: inject fake packet on timeout
    
    Fixes nfqueue and delayed-detect.
    
    On systems with small amount of traffic (or with no traffic at all)
    nfqueue with 'delayed-detect' enabled hanged in 'workers' mode.
    
    Bug #2362.

[33mcommit f2dca4638267c8785838e9f5be5476dbb559b2ea[m
Author: Pascal Delalande <pdl35@free.fr>
Date:   Wed Jan 9 21:33:32 2019 +0100

    doc: fix minor typo

[33mcommit a51d1f7c461d567a5b3bce501b1b8b53a7975f0f[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Dec 27 23:02:47 2018 +0100

    lua: add lua dir with example to make dist

[33mcommit 2b72dfaf0152b55be19238bd3a8a728c7e536496[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Dec 27 23:01:43 2018 +0100

    coccinelle: add missing tests to make dist

[33mcommit 0e3b1eba868a1cc6a117bcd27a92a66af2f8b9e0[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Dec 27 21:49:31 2018 +0100

    util-binsearch: remove the files

[33mcommit 7a121d9b4c0c77442b77e593bf11ab734a285702[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Dec 27 21:44:09 2018 +0100

    doc: add _static dir to make dist

[33mcommit 97da91dc5ef45c9f8448bf6410343cf60897c603[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Dec 27 14:19:46 2018 +0100

    ebpf: include files in make dist

[33mcommit b51e4a395978889fabba99287261a616aa8cd37a[m[33m ([m[1;33mtag: suricata-4.1.2[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 20 18:57:46 2018 +0100

    changelog: update for 4.1.2 release

[33mcommit 8b570c0293f1d7b1c1796b8aac51187625de9e85[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 20 09:11:21 2018 +0100

    smb: improve request/response mapping
    
    Only use ssn_id and msg_id for mapping a response to a request.
    
    By not using the tree_id it can always be included in the tx.hdr which
    means it can be logged properly in case of IOCTL and DCERPC.

[33mcommit 6f5eb487a1393d960e1ff68a0cd508bdbc540c7d[m
Author: Travis Green <travis@travisgreen.net>
Date:   Wed Dec 19 18:41:28 2018 -0700

    doc: add missing and fix 404 for --list-keywords

[33mcommit c2adb9e6697a19718b285dc9a771aa51b07b7a87[m
Author: Travis Green <travis@travisgreen.net>
Date:   Wed Dec 19 17:45:11 2018 -0700

    doc: added tos keyword
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/2583

[33mcommit 7fca771ef4d1467a07f7df5fdf508056243a2aeb[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Dec 5 10:22:18 2018 +0100

    Fixes other affected tests for smtp pipelining
    
    Either checking state has pipelining
    Or removing pipelining from input

[33mcommit 447c1042f476cb01d1020da47de4a33db113ebcb[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Wed Dec 5 09:31:56 2018 +0100

    smtp: improve pipelining support
    
    Fixes #1863

[33mcommit 8357ef3f8ffc7d99ef6571350724160de356158b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 19 11:49:42 2018 +0100

    proto/detect: workaround dns misdetected as dcerpc
    
    The DCERPC UDP detection would misfire on DNS with transaction
    ID 0x0400. This would happen as the protocol detection engine
    gives preference to pattern based detection over probing parsers for
    performance reasons.
    
    This hack/workaround fixes this specific case by still running the
    probing parser if DCERPC has been detected on UDP. The probing
    parser result will take precedence.
    
    Bug #2736.

[33mcommit 11f3659f64a4e42e90cb3c09fcef66894205aefe[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 19 09:45:35 2018 +0100

    teredo: be stricter on what to consider valid teredo
    
    Invalid Teredo can lead to valid DNS traffic (or other UDP traffic)
    being misdetected as Teredo. This leads to false negatives in the
    UDP payload inspection.
    
    Make the teredo code only consider a packet teredo if the encapsulated
    data was decoded without any 'invalid' events being set.
    
    Bug #2736.

[33mcommit e30212c5d8b536f351927d943580b1fcac920fe9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 18 21:08:19 2018 +0100

    detect: fix crash during startup with malformed yaml
    
    detect-engine:
      custom-values:
        toclient-groups: 200
        toserver-groups: 200
    
    Bug #2745

[33mcommit 9dd925a46a9800000f8139f12fde0c57791a53d7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 18 16:01:19 2018 +0100

    userguide/install: add rust, python-yaml to ubuntu

[33mcommit 4c8f6b22466e882e217a6278e026ef5beaf41979[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 15 15:57:31 2018 +0100

    offloading: on bsd, disable rxcsum and v6 variants

[33mcommit fa6b73d1c9f88d5ee534f5d85cb29d9426b78e20[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 15 15:20:39 2018 +0100

    offloading: don't set multiple times per interface
    
    This could happen with netmap igb0->igb0^ IPS mode.

[33mcommit d1fa4a35eb5627e52e6a10250bd8f55e7ff64f9d[m[33m ([m[1;33mtag: suricata-4.1.1[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 17 10:13:31 2018 +0100

    changelog: update for 4.1.1

[33mcommit ad1945aae45edb128f46fbc4f9be82540a2465b9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 13 11:23:03 2018 +0100

    detect: fix content inspection flags
    
    Fix generic inspect function content inspection flags so that
    streaming buffers work correctly.

[33mcommit 394e1150369c113f3560c5636ef172d65620af97[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 14 10:22:39 2018 +0100

    detect/rawbytes: improve error message plus do minor cleanups

[33mcommit f336ba3217390023cba3e9f2afacc1870da6db12[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 13 11:16:04 2018 +0100

    detect/file-data: fix enabling http body tracking

[33mcommit 3eade88bd870a27a65b6c84ecb21d438490ff27c[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Thu Dec 13 20:30:29 2018 +0100

    Krb5: make TCP probing function less strict, messages can be fragmented

[33mcommit 3eec088d3181e800c1ff3623d4c352dad77111d3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 28 10:02:57 2018 +0100

    detect/parse: error out on unused sticky buffers

[33mcommit b36e921cf9b68c3c0daf5fc05d3d99240cee196a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 27 16:09:54 2018 +0100

    detect/prefilter: add closing debug return statement

[33mcommit 1dd81f7346ab0dad1774c76359b360d714418422[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 10 21:24:38 2018 +0100

    yaml: add missing eve pcap-file comment

[33mcommit 3a057c5f54c77ebd5673199984c53df25a2cf128[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 10 20:43:37 2018 +0100

    capture: fix mtu plus sign names for non-netmap
    
    Bug #2502.

[33mcommit 31f81429c20680806896efa2df0fdb29324d78ff[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 8 18:51:23 2018 +0100

    stats: more accurate interval handling
    
    In the stats loop sleep for a time period more closely matching
    the stats.interval setting. Fix an off by one that would make
    the loop wake up ~1 second early.
    
    Bug #2716

[33mcommit c1238af3e0f5aafc792ca8c9d2e20d09dc8b3323[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Dec 7 17:59:35 2018 -0600

    check-setup: fix script names for .sh to .py

[33mcommit 56af22803b8cf873155d1646069eab95fea2521b[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Dec 7 10:42:40 2018 -0600

    travis: update rust version to 1.24.1 and 1.31.0.
    
    1.24.1 is now the oldest version we test support for. All major
    distributions appear to be at this version or new.
    
    With the release of 1.31.0 just out, test that as the most
    recent version.

[33mcommit d03a5be118dd8545000262463152eef374e066cc[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Dec 7 09:26:31 2018 -0600

    dns json v2 (C) - log rrtype in response
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/2723

[33mcommit b7083bc3a8ec3f9ca78f12f37cc6974b1783c30d[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Dec 7 09:25:56 2018 -0600

    rust/dns/v2 - log rrtype in response
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/2723

[33mcommit b7a58680db4a0c65abf3adb3827db327439a6109[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Dec 7 09:08:16 2018 -0600

    dns/rust - if let Some over options instead of loop.
    
    Except in one case where the loop makes more sense for easy break
    out.
    
    Also remove one line of non-conforming debug logging.

[33mcommit 4163d5c3600713c1b225f47c0e87b3da128b1e8f[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Dec 6 11:16:00 2018 -0600

    rust/dns/lua - fix call convention to match C.
    
    Also, when requesting the query, if the request doesn't exist,
    return the query from the response. This makes it behave
    more like C implementation.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/2730

[33mcommit 87250da0fcad1deac27e8a3b222febd9403744c5[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Dec 3 10:34:36 2018 -0600

    rust/dns: add v1 dns logging
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/2704

[33mcommit 9d36182b7433ce028ffc2ae4040bfcc1f256d72a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Dec 9 09:05:44 2018 +0100

    unix: fix deadlock in unix runmode on many cores
    
    Same issue as in 7f8795c7563827f090d8679cb35847af0085fc56, with the
    solution now also applied to the unix socket runmode.
    
    Bug #2734

[33mcommit 8d2883f3fa3ac0f4811a7ede46f35ec9456bdff5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 7 13:18:37 2018 +0100

    output/tx: fix multi-instance logger output
    
    Fix transactions not being logged after the first tx logger had
    logged.

[33mcommit 0e40231189a4b8f60553e9c3d256416b4622edc6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 6 15:35:40 2018 +0100

    app-layer: improve transaction cleanup handling
    
    The app layers with a custom iterator would skip a tx if during
    the ..Cleanup() pass a transaction was removed.
    
    Address this by storing the current index instead of the next
    index. Also pass in the next "min_tx_id" to be incremented from
    the last TX. Update loops to do this increment.
    
    Also make sure that the min_id is properly updated if the last
    TX is removed when out of order.
    
    Finally add a SMB unittest to test this.
    
    Reported by: Ilya Bakhtin

[33mcommit d34e41068f6070f71bdf1bf509fc807a999a3723[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 5 22:09:15 2018 +0100

    app-layer: fix tx tracking updates in tx cleanup
    
    Fix min_id not getting updated in all cases.
    
    Reported by: Ilya Bakhtin

[33mcommit e62e4bdc4935305078cfdda7a3ef8045ca3e4b02[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 5 22:07:53 2018 +0100

    app-layer: add debug statements to tx cleanup logic

[33mcommit 37203c98a1090ddfeff0ecdca9d972cea11c5205[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 5 22:05:49 2018 +0100

    unittests/app-layer: add helper to get app tx trackers

[33mcommit fc395eb2c588bc1034311105247e7d44c384761f[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Tue Dec 4 15:01:55 2018 -0500

    userguide: updated hyperscan version reference
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 3539ae3041648d619002429891e6d16628a42241[m
Author: Travis Green <travis@travisgreen.net>
Date:   Mon Dec 3 15:51:10 2018 -0700

    Updated link for Prelude SIEM
    
    Updated link for Prelude SIEM to https://www.prelude-siem.org/

[33mcommit f3be8eaaf40c47cca0c11eb8e7dd4e15590af9c0[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Nov 12 23:09:11 2018 +0100

    detect-depth: remove semi coma from desc
    
    It was breaking the CSV export.

[33mcommit 8c1b16e22d5ec0bfff2e42b8566d1b8df05375e4[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Nov 11 18:49:39 2018 +0100

    doc: fix some links in list-keywords command

[33mcommit 24806c21024e2f799e1cf4d0355e7e5e718224e3[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Dec 4 17:08:40 2018 +0100

    suricata.yaml: fix path to XDP doc

[33mcommit 64df672cf7bfff0b003fb222d556d6f87998cb5c[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Dec 3 18:06:16 2018 +0100

    util-bpf: workaround OpenBSD old libpcap
    
    OpenBSD is not using a pcap_compile_* function so we can just
    comment the code for OpenBSD users.

[33mcommit 68536830851fd84031ed5657d39f62745c0779d2[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Nov 22 15:00:11 2018 +0100

    af-packet: remove unused field in AFPThreadVars

[33mcommit 750651a45a75b9f0256e09b01571be89f37be1e3[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Oct 23 06:39:18 2018 +0200

    configure.ac: better llc binary detection
    
    llc is needed to build the ebpf files and current autoconf code
    was not working properly on Debian.

[33mcommit 6bfecd6906ec353568cb504f068fb01ff34c32bb[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Oct 12 19:34:43 2018 +0200

    af-packet: remove years old todos

[33mcommit 017acaa4654abbf69abafd5a0170fee69ff1d530[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Oct 11 00:17:59 2018 +0200

    netmap: use custom BPF compile function

[33mcommit 28e9e4c85c9e37d1e3b2964d3427d0e95fd84d6a[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Oct 11 00:12:00 2018 +0200

    af-packet: use the new BPF compilation function

[33mcommit 3c566e0f8981cd0cb5266e47fb21f216c6b71e6d[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Oct 11 00:10:54 2018 +0200

    util-bpf: introduce custom BPF compile functions
    
    We can't get error from pcap_compile_nopcap() so let's get our
    own function and output message.

[33mcommit e98b5e4946a0eb7bb4938b96c99b975107b77168[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Oct 10 19:26:29 2018 +0200

    af-packet: micro optimization
    
    Use a else if instead of two chained if constructs.

[33mcommit 9efa4ace6935382dc938c68ede7e9973bea2ed35[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Oct 8 23:51:37 2018 +0200

    af-packet: improve error handling
    
    Stress condition in Suricata could lead to interface to disconnect
    when it is not necessary. This patch updates the error handling
    code to try to continue reading when such a case occurs.

[33mcommit 74761b04fe8bf4da82bdacba64ff93009bc0a7e1[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Tue Nov 27 14:35:35 2018 -0500

    bypass:added new documentation reference
    
    Documentation didn't previously exist for the bypass keyword
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 90a0731564d7b133a252a823911aa43a534ab7d2[m
Author: Eric Urban <bluediscus@hotmail.com>
Date:   Mon Nov 12 12:38:50 2018 -0600

    debug/log: add log level for JSON type
    
    resolves #2671

[33mcommit 345ec58df490a638d7052bb60264dd9f9cd70fda[m
Author: Jason Ish <ish@unx.ca>
Date:   Sun Nov 25 09:03:22 2018 -0600

    configure: allow for --disable-suricata-update
    
    This is to prevent suricata-update from being installed if it
    would otherwise be installed based on in being bundled, and
    its dependencies being available.
    
    Warn the user that Suricata-Update will not be installed if it
    is bundled, but python-yaml is missing (this will also cover
    the case where Python is missing).
    
    Add "Install suricata-update" to the build summary. For consistency,
    relable "Suricatasc install" as "Install suricatasc".

[33mcommit db36708756b28dda0806855cddfe5b0872553c6b[m
Author: Jason Ish <ish@unx.ca>
Date:   Sat Nov 24 12:06:46 2018 -0600

    configure: check for python-yaml
    
    Don't install suricata-update if python-yaml does not
    exist.

[33mcommit 5eb7f0f77c27be75661e6666446ced6fd5d64081[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Nov 16 10:32:01 2018 -0800

    configure: print datarootdir
    
    This is relevant now as its where Suricata engine rules
    get installed.

[33mcommit 6f2b974f9c3307062f2f274693eeaf442eddadcf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 1 10:06:54 2018 +0100

    detect/mpm: fix fast_pattern handling of len >255
    
    The fast pattern selection logic would truncate a patterns len to
    255 leading to assigning the same pid to different patterns.
    
    This in turn would be caught by the hyperscan setup code which would
    abort.
    
    Bug #2714.

[33mcommit eedf08be2983e166180b816c45a309e65c88ed88[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 30 11:59:17 2018 +0100

    rust/filetracker: remove reachable panic
    
    Remove reachable panic condition when an existing file chunk is not
    completed. Instead trunc the file and reset.
    
    Related to bug #2717

[33mcommit 1b1e136c4f0a243f76772972050d5df8b07664c3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 30 11:38:04 2018 +0100

    nfs: improve file tracking under packet loss
    
    In case of packet loss during an in-progress chunk the file tracker
    could loose track of a file because it couldn't map the XID to a
    file handle.
    
    The file tracker would then panic if a new file was opened, as
    it noticed the last chunk wasn't yet complete.
    
    This patch tracks the file handle for a in-progress chunk in the
    state, just like the tracking of the size that is left.
    
    Bug #2717

[33mcommit 27f87567ca161ee948550f1c6193194e9ea93feb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 30 11:37:46 2018 +0100

    rust/nfs: improve debug output

[33mcommit 961610489a921ebce21a1ae9af39fb75901a206b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 22 10:34:57 2018 +0100

    iprep: small cleanups

[33mcommit 5740c79b93d420aea2ce644a2ad04fe7bffd527e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 22 10:34:49 2018 +0100

    iprep: improve error checking of path handling

[33mcommit 0b3220a0df9689e3cc9633981c0e558f451d23b8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 18 15:25:40 2018 +0200

    detect: improve inspect buffer handling
    
    Fix and Optimize cleanup. For the simple single inspect buffer optimize
    the cleanup by keeping track of the actually used buffers. This avoid
    looping over unused buffers.
    
    Fix the case of cleaning not being done after a tx if the next tx is
    also inspected in the context of the same packet.
    
    Fix cleanup of the multi-inspect buffers. Optimize in 2 ways. First
    like with single keep track of which multi-inspect buffers have been
    used. Second, keep a max of the buffers within a multi-inspect buffer.
    Use this max to limit (nested) looping.

[33mcommit 683be94830ce733d8b3c66a76b31194b4ac252d3[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Wed Nov 14 23:18:52 2018 -0500

    profiling: set loop limit to match array size
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 5aef72efd13d9d439037b5970542da6857f4f2da[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 20 12:31:01 2018 +0100

    prelude: fix potential uninitialized value use

[33mcommit ca1161d7986ea36ac42797940faeb5013d305076[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 20 12:28:16 2018 +0100

    detect: suppress coverity deadcode warnings
    
    Suppress as scan-build-7 relies on this 'dead' code to not issue
    a warning.

[33mcommit 7b318592e60eb621029c0065b860dee4981cdaa3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 20 12:25:04 2018 +0100

    filestore: suppress coverity toctou warning

[33mcommit cb2008fb27cbb47a3c8da0f3bafe3ddd882dd424[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 20 12:22:47 2018 +0100

    detect: fix coverity memory leak warnings

[33mcommit 16100e592dc081c31e538c21f30383871724e2b6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 19 22:00:33 2018 +0100

    file: use u32 file id everywhere

[33mcommit 59d526481c3b1bcfc1fb5e4f26ad8b58c1298321[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 12 16:45:05 2018 -0800

    detect/distance: improve value parsing and fix broken test

[33mcommit 9cce1995efd431a281b350565483636dbc83007e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 12 16:27:27 2018 -0800

    detect/within: clean up option value parsing

[33mcommit 8814b994b58de1bed61b8f3b636da848cf46128f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 12 15:48:45 2018 -0800

    detect/within: test cleanups

[33mcommit 1803af7aa69b5131a210ab306709865ce8124dab[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 12 15:35:46 2018 -0800

    eve/dns: improve version warning message

[33mcommit 758acd4b7ef9ec32d38708b2b14fb10d8b9dcce9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 12 15:33:39 2018 -0800

    detect/offset: improve value parsing

[33mcommit b5dfc9ed412e13cd36f3fad9feb27f6e8537bdef[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Nov 13 20:06:50 2018 +0100

    app-layer-ssl: fix coverty error (RESOURCE_LEAK)
    
    Bug #2677

[33mcommit 787473ec64550a2448b81aa13064c1f613642c57[m[33m ([m[1;33mtag: suricata-4.1.0[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 6 09:54:10 2018 +0100

    changelog: update for 4.1

[33mcommit 36e84b929cb37bd03943ed14749a4fef3ff1f61d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 30 16:10:33 2018 +0100

    smtp/mime: fix null ptr deref on bad traffic
    
    Due to missing error handling, a bad mime message could put the
    mime parser in an error state, without the SMTP layer taking this
    into account. So the SMTP layer would continue to pass data to the
    mime parser, even though it was in an error state.
    
    When the parser would be fed a very long line while in this state,
    it would try to set an error flag in the state. However, due to
    the error state, this setting of the flag would dereference a null
    pointer.
    
    This patch fixes this issue by updating the mime parser to check
    the state it is in when receiving new input. It will refuse to
    process futher data while in the error state. It will also return
    a new error code to indicate to the SMTP layer that the parser
    was in an error state.

[33mcommit fa2ce043cf6463903d1d68df67a6509920f63329[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 2 16:59:40 2018 +0100

    ipv6: disable zero len padN rule by default

[33mcommit 131112de1361bc961ca7be62b8ecdb0c0abd2133[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Tue Oct 23 19:23:11 2018 -0400

    doc: Remove gulp references
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit fc54d750dd8b82f11ea9a72a3cb896ab5887899d[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Wed Oct 17 15:52:59 2018 -0400

    doc: add bypass keyword documentation
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 961931e73a223c6fa1fa03fd83b245efc90f9ccb[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Oct 31 16:41:07 2018 -0600

    filestore: fix compiler truncation warnings
    
    And error out if the constructed filename is truncated.

[33mcommit 033e756905d134cd085eb67673da95a7f16dba1d[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Oct 30 21:35:25 2018 +0100

    app-layer-ssl: add Facebook TLSv1.3 draft versions
    
    Add draft versions for Facebooks custom TLSv1.3 implementation "fizz"
    to SSLVersionToString().

[33mcommit dd5374c20d8554c8008f513f33281ffcdac66835[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Oct 30 20:18:05 2018 +0100

    app-layer-ssl: change how TLSv1.3 drafts are logged
    
    Change from logging TLSv1.3 drafts as "TLS 1.3 (draft 28)" to
    "TLS 1.3 draft-28" instead.

[33mcommit be8c06adfdcd362052181e2d6f9dafa0d807f9c5[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Mon Oct 29 23:03:08 2018 +0100

    userguide: add documentation for ssl_version keyword

[33mcommit 9291d434c6a957d3185b1de294bc8dad1f37395b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 29 10:31:52 2018 +0100

    pfring: default to runmode workers
    
    Now that threads:auto is implemented workers is a better default
    as it generally performs better.

[33mcommit 1467c30883f46ea8e50d208192e1bac3cef36131[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 29 09:56:40 2018 +0100

    pfring: implement 'threads: auto'
    
    If threads is set to auto, first try the CPU count. If that would
    fail, fall back to RSS queue count.

[33mcommit 5f2831d60ff616342d789b5e55830332ecb3b20c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 29 09:37:11 2018 +0100

    pfring: support checking/disabling offloading

[33mcommit 7c02b40be6c3db83d5669cbc3c04c3ea9fa495f3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 29 09:29:58 2018 +0100

    pfring: fix bypass counter print uninitialized values
    
    If the option was disabled in the config the value would be uninitialized.

[33mcommit 1360e030b1847000190e8478696167a326a206f9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 26 16:03:05 2018 +0200

    storage: don't leak memory for unittests

[33mcommit 121b3021df3895a797bb7cc7346ec9d47e7cfcef[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 26 16:15:58 2018 +0200

    radix: fix a memleak when removing the last node

[33mcommit 3836fe2353bfb81e9bc890c61b9ce2ef3a86a2a1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 25 17:31:49 2018 +0200

    detect/address: minor memory handling cleanups

[33mcommit 00e9fd7a36cb4b84f3c8687c7bb209e068436592[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 25 17:02:43 2018 +0200

    detect: suppress scan-build warnings

[33mcommit 0a39e0653554184df4ab0e08700df81051fe1233[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 25 12:30:12 2018 +0200

    detect/flags: cleanup parsing to not alloc temp strings

[33mcommit e22a833b948a8476d89fc40297404f6e72e830e3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 25 11:55:05 2018 +0200

    mpm: fix minor scan-build warning

[33mcommit e180576afea4ba3a6682de8ea1196c81368a3259[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 25 11:44:53 2018 +0200

    pool: avoid possible double free in error path
    
    Should be impossible as a double free, but scan-build-7 thinks it
    is possible.

[33mcommit 7ce1ebe0d3a91c1b78c50aacea16f3faacb29435[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 25 11:44:15 2018 +0200

    pool: small code cleanups

[33mcommit 478caac97584e06805f57ac325f17cc73bb80a8a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 25 08:27:22 2018 +0200

    stream: don't assume malformed TCP packets
    
    This deep in the stream engine packets are valid, so don't check
    for the tcph header in a packet as it confuses scan-build.
    
    Do add a DEBUG_VALIDATE_BUG_ON so in QA we double check.

[33mcommit cf37faff3175ca5d75456a13d9122170b19179a6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 24 11:05:21 2018 +0200

    decode/tcp: rewrite options decoding to assist scan-build

[33mcommit 347e64e8d4a1fa804ab4deb764f923e92d1d4ad4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 24 10:58:58 2018 +0200

    smb/c: don't accept null input

[33mcommit ce1753c71555ad4060943f64336a63cdd352d3f0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 23 16:17:26 2018 +0200

    htp: fix potential (but unlikely) memleak in uri normalization

[33mcommit 7ef8d31e4f1fb86760692aaed1ca804fabd8b23a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 23 15:10:56 2018 +0200

    thresholds: remove dead code in parsing

[33mcommit 8ef0818c3b9d6bbc90c9ef91aa479a7fd3708173[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 23 15:08:05 2018 +0200

    radix: fix memory leak in error path

[33mcommit 506f299b093023a1dc9d92e4b88a4285828054e7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 23 15:01:42 2018 +0200

    coverity: suppress warnings

[33mcommit 2010610c91f4f118717b49359ed4cd69835966c3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 23 14:59:15 2018 +0200

    host/os/info: fix lookup memleak

[33mcommit 1bf658f9ee713464903cfc3f74733d910b0bd802[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 23 14:54:17 2018 +0200

    debug/log: suppress coverity checked_return warning

[33mcommit ec94d7b33d1cdaa7ad6bc04e7f652de4bf90a659[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 23 14:53:28 2018 +0200

    bpf: suppress coverity toctou warning

[33mcommit 22c7be26c40c8dc63f09bd75d7512c14bbbb3466[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 23 14:51:25 2018 +0200

    pcap: fix buffer size validation logic

[33mcommit 9c2c258f2ba014b460b0b2c2381940da82535b06[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 23 14:43:35 2018 +0200

    uricontent: move debug func into unittests
    
    Cleanup header, which lead to the app-layer-htp.h header needing to
    be added in a few other places.

[33mcommit 4ae85f16c50217f0f90e911a1a98d27c1467cb40[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 23 14:37:05 2018 +0200

    detect/replace: fix mem leak in error path

[33mcommit 0d0da7880e4f6f6addb67378d456a86ba6ba88e9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 23 14:34:08 2018 +0200

    isdataat: fix mem leak in error path

[33mcommit 2ef2febc7cc995a4bf62cf18c5067d8739e1b18a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 23 14:29:59 2018 +0200

    bits: avoid memory leak in case of adding types

[33mcommit 5c69bbb236272671c84153bbfc0ffe2a79af51ed[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 23 14:10:18 2018 +0200

    ipproto: fix memleak in error case

[33mcommit 528379601850ba630767658d2dbddbf1acacb6fd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 23 13:56:50 2018 +0200

    bytetest: don't leak memory in error condition

[33mcommit 9d54a8361d07213b6201f3466e790b1aa4be07d7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 23 13:53:13 2018 +0200

    yaml: fix potential memleak and suppress coverity issue

[33mcommit 15e0f7f5bb6b47214c6903bc9fc2e28d83eb9019[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 23 13:49:37 2018 +0200

    outputs: fix memleaks in the error paths reported by coverity

[33mcommit 575fb69a064fefb8ada4dca80d0409925d4c75ef[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 23 13:23:09 2018 +0200

    coverity: suppress warning for intentional code

[33mcommit 335df629a243ef6d7ba71dea230a7dd341255690[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 23 13:21:08 2018 +0200

    rust/dns: don't compile unused C code if Rust is enabled

[33mcommit f97bf298b2ab28d0c4de4916c085bc403415136e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 23 13:06:42 2018 +0200

    coverity: fix filestore v2 memleak

[33mcommit 00111499b07c56eb876586fdf29b2b5440be8b39[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 23 13:01:53 2018 +0200

    log-pcap: fix coverity memleak warning

[33mcommit a6832791378e37c482ea7062a84da07af5e68df4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 23 12:57:50 2018 +0200

    coverity: don't warn on fall back random

[33mcommit a8347e1bc271b8a0447755b1298b88c8d70e94d0[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Mon Oct 29 21:26:13 2018 +0100

    app-layer-ssl: fix flow and inspection bypass for TLSv1.3

[33mcommit 3b73b7d542466ec0d6f4b581627bdc2581275596[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Mon Oct 29 21:20:33 2018 +0100

    app-layer-ssl: add 0-RTT support for TLSv1.3

[33mcommit 23993c18cdc91a184aae4dcaab4267e706b21fed[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Mon Oct 29 20:56:51 2018 +0100

    app-layer-ssl: decode early data extension in ClientHello record
    
    Decode early data extension used by 0-RTT that is used to indicate that
    application data will be sent right after the ClientHello record.

[33mcommit 7556004a51f41b11af61c9a08cd47b7af1704b8e[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Mon Oct 29 20:48:54 2018 +0100

    app-layer-ssl: use extension length when decoding extensions
    
    Pass extension length to functions decoding extensions, instead of
    passing the length left in the record. This enables us to also
    decode empty extensions.

[33mcommit ee1de4c812e580993347d2a976a68e4a2e8bdda5[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Mon Oct 29 20:30:41 2018 +0100

    app-layer-ssl: handle all versions above TLSv1.2 as TLSv1.3
    
    This makes it more likely to log custom versions of TLSv1.3 that
    doesn't comply with the draft version numbering.

[33mcommit 31b87d5f8f0bf4b527f35f94f029abb63d85735f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 22 19:25:04 2018 +0200

    tls: remove debug printfs

[33mcommit 16643befe7bebb9736d44f3a02efdf71135a7b84[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Sun Oct 21 19:55:13 2018 +0200

    detect-tls-ja3-hash: add another unit test
    
    Add unit test that covers the JA3 bug in TLS extensions decoding.

[33mcommit fc53b2ecd5272a85aea029b65344b99846e042ff[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Oct 19 23:00:42 2018 +0200

    app-layer-ssl: fix JA3 bug in TLS extension decoding

[33mcommit 89bd274f446c534f59772ec72d168871db0f8d64[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu Oct 18 23:12:50 2018 +0200

    app-layer-ssl: fix JA3 bug in TLS version decoding

[33mcommit 215e37a9c0fa18887fb9a66f6136bd08a1a9eb9d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 22 08:59:44 2018 +0200

    capture: multidev is not experimental

[33mcommit 631ee383bb836f250c43907cb306afdea4e916d2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 5 20:38:10 2018 +0200

    flow/stream: 'wrong thread' as stream event & counter
    
    Set event at most once per flow, for the first 'wrong' packet.
    
    Add 'tcp.pkt_on_wrong_thread' counter. This is incremented for each
    'wrong' packet. Note that the first packet for a flow determines
    what thread is 'correct'.

[33mcommit 588a56c8ba9b5579e885a2f6a601f1baf8e4bdf4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 24 10:01:55 2014 +0100

    smtp: fix clang -Wunreachable-code warning
    
    app-layer-smtp.c:756:12: error: will never be executed [-Werror,-Wunreachable-code]
        return 0;
               ^
    1 error generated.

[33mcommit 17e7d179d0abe76a1aea5c2fe586536069df2500[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 22 18:14:56 2018 +0200

    profiling/csv: update output format
    
    Update output to be:
    
    pcap_cnt,total,receive,decode,flowworker,threading,proto detect,flow,
    stream,app-layer,detect,tcp-prune,loggers,<detect stages>,<loggers>
    
    For TCP, the app-layer cost is not part of stream anymore.

[33mcommit 85f2486e0b39bad66549e693cb63023c5483479e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 7 21:17:59 2018 +0200

    multi-tenant: document per tenant settings

[33mcommit 67811465563d266561fd88116dd73a862bacafcb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 7 16:13:31 2018 +0200

    test mode: parse interface list in test mode

[33mcommit 77c7cf0211972369470b762651e30e04824ef0f1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 7 16:13:01 2018 +0200

    windivert: fix whitespace issue

[33mcommit b86e176262e343fab0578d074d9e73281e021efc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 7 16:12:29 2018 +0200

    af-packet: suppress noisy info message

[33mcommit d6460392c51b2f6cbbfc6316eb96e0926ddc1d25[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 17 22:06:23 2018 +0200

    detect/transforms: fix doc urls

[33mcommit 3ba2c9fba7bccff17fcabe7fc40607a01db05cd1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 19 16:57:59 2018 +0200

    pfring: multiple receive threads is not experimental

[33mcommit 57921d95d66a94e3f7bfc3bae5a3e966f6e780bf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 19 16:54:38 2018 +0200

    eve: improve error handling for Rust loggers
    
    Give useful warning message if Rust is not compiled in.

[33mcommit 24b18e47bdfbeba72f5b20180958c7ddeb67ba4d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 19 15:41:35 2018 +0200

    pfring: minor cleanups

[33mcommit 4f84672d7c7d3592171e2e29f5c5561000351b1d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 19 15:08:48 2018 +0200

    stats: decoder/stream events as stats

[33mcommit 014056f686a117e1eb7159e46467aa489b24d815[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 18 21:02:40 2018 +0200

    detect/analyzer: add detection for sigs that could use http keywords

[33mcommit 127937b2ddd9ce10a24101b5382a2798f27547b6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 18 21:01:56 2018 +0200

    detect/analyzer: add debug statements

[33mcommit c05459ce89ecb5007d486f9425d843c82a9147aa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 18 19:06:28 2018 +0200

    detect/analyzer: fix json analyzer being called on incomplete rules

[33mcommit c62273f4fda39e6ae25990f92fb7bf721a2c9950[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 18 17:28:48 2018 +0200

    rust/smb: silence noisy debug messages

[33mcommit 6c97909a92f8ec32e5d5a4e98a66a41c3e2810d2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 18 14:26:18 2018 +0200

    stream/events: log as stats

[33mcommit fa068795632fd7c6e98bdaad3b70521cdb0f0655[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 18 14:20:35 2018 +0200

    detect/events: cleanup keyword

[33mcommit 5afeebf88429389ec9e94121e86a35ff14691515[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 17 12:06:23 2018 +0200

    doc/flow: updates and cleanups to flow section

[33mcommit 2ae8d1a208ebca202cda276ec2d733b463bbc5b9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 17 09:57:30 2018 +0200

    cocci/detect: add flags check to SigTableElmt

[33mcommit ecb5d6419b21c646475dc8b1c1a890cfaa7258d1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 17 09:52:29 2018 +0200

    rules/transform: add to list-keywords

[33mcommit 72dd4a5f92bc5507b97eb3b48f0d6f1c1a50ec31[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 17 09:45:56 2018 +0200

    doc/rules: initial transforms documentation

[33mcommit 226fe5cab3da7b881e9d713549308196c1ae54e5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 16 17:08:01 2018 +0200

    doc/performance: redo runmodes explanation

[33mcommit 17e2d3953152ff930e44bf8f33c48cd633802623[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 16 17:06:49 2018 +0200

    doc/install: update Rust info in generic install overview

[33mcommit 473688746ba34aad0288840993ffe3659b43e568[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 16 15:33:53 2018 +0200

    doc/eve: add community id

[33mcommit 81cdcd315b572be4127e8b6cc4cf7091e7852f47[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Oct 16 22:05:52 2018 +0200

    detect-ssh-software: fix url for keyword

[33mcommit 08efbdc63275192df825cd2facf277b89b314ea4[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Oct 16 22:04:01 2018 +0200

    detect-ssh-software-version: add description and url to keyword

[33mcommit f4da3050f2ba98ec290f6830a61d8918a69ec8ec[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Oct 16 22:00:07 2018 +0200

    detect-ssh-proto-version: add description and url to keyword

[33mcommit c58252bb3b4ff507a258a9cde572293d1158be0b[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Oct 16 21:53:45 2018 +0200

    detect-ssh-proto: fix url for keyword

[33mcommit e92fda37c92b943decc132b32754072b5beba8e1[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Oct 16 21:48:32 2018 +0200

    doc: add documentation for SSH keywords

[33mcommit fd13970bfa4201c48039570de88ef60dce62d1df[m[33m ([m[1;33mtag: suricata-4.1.0-rc2[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 15 17:18:20 2018 +0200

    changelog: update for 4.1rc2

[33mcommit 083908f3be941c8d4588935b046834fda7b60aad[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 15 20:53:14 2018 +0200

    rust/ike2: free destate on tx free
    
    Bug #2604

[33mcommit 6f00ba06599f665c0693ca95e41a90bd3fb3e02a[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Oct 15 07:47:56 2018 -0600

    rust: fix (again) out of tree builds
    
    As the generated Cargo.toml is shipped as part of a release
    tarball, build from the source directory but set the cargo
    CARGO_TARGET_DIR to the build directory.

[33mcommit 64922a476e2d69a41822cadacf76eed0372370b7[m
Author: Pascal Delalande <pdl35@free.fr>
Date:   Fri Oct 12 21:32:13 2018 +0200

    doc: remove deprecated force-md5 flag from userguide

[33mcommit 576b3b6a8198417e9ed2771d958a41fd1e3cd4da[m
Author: Travis Green <travis@travisgreen.net>
Date:   Tue Oct 9 11:16:59 2018 -0600

    Added new classifications to classification.conf
    
    Added classifications from rule-writing community feedback.

[33mcommit daaa90d515bf2d7fd4f45f699c080f5f0f823445[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 15 10:38:00 2018 +0200

    rust/smb: suppress noisy messages

[33mcommit c4d8508f511030d728962541ffab10cf172de948[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 7 11:29:06 2017 +0100

    eve/json: introduce community flow id
    
    Add support for community flow id, meant to give a records a
    predictable flow id that can be used to match records to
    output of other tools.
    
    Takes a 'seed' that needs to be same across sensors and tools
    to make the id less predictable.

[33mcommit e956b484c5993ded904bc35fbb1b6c17ece9b2e2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 9 14:08:56 2018 +0200

    eve/json: handle common options in central function

[33mcommit df1ec82b55546170ad77cbc97326e172e282e7a6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 9 13:34:17 2018 +0200

    eve/json: move common settings into it's own struct

[33mcommit 116c03cf1733f0c842d58ff1028b1c9f5f15fa6d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 9 17:19:54 2018 +0200

    nfs: use common json output structures

[33mcommit 04edc7cb6c4d3e7e5e8f3e4af9251fa5a17645fd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 9 16:39:21 2018 +0200

    smb: use common json output structures

[33mcommit 8b8270e732df9b91ad0b5db4e8059d9726a2689f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 9 16:39:05 2018 +0200

    eve/json: add common helper funcs
    
    Add simple helper funcs for option-less loggers

[33mcommit f357ad1df2a84e6d936033d0e2a9fdea385a87c1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 9 11:03:35 2018 +0200

    eve/flow: minor cleanups

[33mcommit 7bf71805b839df0d9d07a05687d630287755547c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 9 09:25:20 2018 +0200

    hash/sha1: optimize by avoiding mem alloc
    
    Don't allocate an output buffer for each call. These buffers
    would have the exact same size every time.

[33mcommit c54acd3a6e9a772ae781247fe838e376393bc263[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 8 20:56:54 2018 +0200

    travis: update rust to 1.29.1, add auto & disabled tests

[33mcommit ed712768d5e30a9df380fc7b4d3472c8f24ea157[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 7 09:14:06 2018 +0200

    rust: enable by default
    
    Remove 'experimental' label for Rust, and enable it by default if
    rustc and cargo (and libjansson) are available.
    
    Add rustc and cargo versions to the build-info.

[33mcommit 4ece6ba7588ad31df9fe6c93b8983cfe23f92ccb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 8 13:07:38 2018 +0200

    configure: fix and cleanup nss and nspr detection

[33mcommit 4d5024255f5e2fd44d75e367a7a1dcfc0692f8ff[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 6 15:45:40 2018 +0200

    smb/dcerpc: remove now unused ssn2maxsize_map

[33mcommit 4d044483cfc40873155c7dbb1781289ea2fc7d0e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 6 15:42:18 2018 +0200

    smb/dcerpc: clean up and unify DCERPC probe logic

[33mcommit ac4e8885976422498806af97fb14592465428b68[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 3 19:55:46 2018 +0200

    smb2/dcerpc: probe if response data is dcerpc
    
    If we missed the tree connect we can't know for sure if we're
    reading from a (DCERPC) PIPE or not. In this case probe the data
    to see if it looks like DCERPC.
    
    If the detection succeeds, use a special 'suricata::dcerpc' service
    in the TX.
    
    Simplify handling of DCERPC records that cross records
    
    Update logging for the response only TXs.

[33mcommit 9dd7c381132be80341bb8f55ae23408b094eb792[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 13 16:53:43 2018 +0200

    smb2: skip rest of READ response if status is not success

[33mcommit 7f4e5e6eac59d005f34aa180ffd8ba1849a1fc82[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Wed Oct 3 15:32:20 2018 -0400

    userguide: update hyperscan documentation
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit ae10a92bc63565fd07cbd3d295e0f942b053b2c4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 3 21:13:31 2018 +0200

    rust/applayer: use correct return type for Parser
    
    The mismatch between the types would randomly lead to the return code
    of the Rust parser to be not correctly handled over the C/Rust
    boundary. This would lead to the API considering a parser to be in
    error state when it was not.

[33mcommit efbb5ce0fe9555011f8b133bfed7ec86a4562bf2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 3 22:50:02 2018 +0200

    afpacket: fix formatting of errors

[33mcommit 8d5da9e00f0fac5b93fd39f5c5c7469e0b10a353[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Sep 30 09:37:24 2018 +0200

    dns: shrink per flow state by improving layout

[33mcommit 275cf9b0299a347c90c0b58603ee2535a15deade[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 29 09:44:06 2018 +0200

    detect/ttl: major clean up of ttl code
    
    Redo unittests using FAIL/PASS macros
    Switch parsing to pcre_copy_substring.
    Misc cleanups.

[33mcommit 13ea30ef2381571bd76b1772e78e5ace20111307[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 29 09:42:14 2018 +0200

    spelling: fixing minor spelling mistakes

[33mcommit 8b213e9d63b0b308424e3a7869151b257089ffe6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 28 21:51:08 2018 +0200

    yaml: fix typo

[33mcommit 731c2b2e1737b8bc9fadc624bdda67f5a250519a[m
Author: Hilko Bengen <bengen@hilluzination.de>
Date:   Tue Sep 25 14:16:50 2018 +0200

    configure: Fixed "no" output for XDP, libnss, libnspr

[33mcommit a307e637c6d44f0672244dbf22cc95e29f19a3bf[m
Author: Danny Browning <danny.browning@protectwise.com>
Date:   Tue Sep 18 10:05:03 2018 -0600

    suricata: file existence check (bug #2615)
    
    Files and directories passed via command line option -r should be checked for
    existence during command line parsing and not start additional suricata
    functionality.

[33mcommit d038c78cd6541fad15569490569ea1437fea74ec[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Fri Sep 28 16:40:01 2018 -0400

    config: added ja3 to tls custom logging example
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 8c3f1aa7a5735bd92d410c19ff7898aa05502079[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Sep 21 08:03:26 2018 +0200

    tlslog: don't log as "resumed" without ServerHello
    
    Don't log a session as "resumed" if a ServerHello record has not been
    seen. This makes sure that incomplete TLS sessions where the ClientHello
    contains a session ticket, is not logged as a session resumption.

[33mcommit 814e1624c2db4e4f4d526575d14d0f8477f13bf9[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Sep 21 07:57:34 2018 +0200

    output-json-tls: don't log as "resumed" without ServerHello
    
    Don't log a session as "resumed" if a ServerHello record has not been
    seen. This makes sure that incomplete TLS sessions where the ClientHello
    contains a session ticket, is not logged as a session resumption.

[33mcommit 4470b05ae4eb1c6626e0e92ae05d6c0693a4f103[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Sep 21 07:25:19 2018 +0200

    app-layer-ssl: remove unnecessary length check
    
    We already check that empty extensions are not decoded, so this length
    check is not needed.

[33mcommit 0b5a2ab49bd443644a51dabb53deee52f5dfaef3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 19 21:25:16 2018 +0200

    setup-app-layer: support tests in tests/

[33mcommit 7ec7d85ecc52ab8d2c681bf90fed44ec5cf8d9df[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Sep 18 23:51:37 2018 -0600

    setup-app-layer.py: integrate detect buffer setup
    
    Add --detect to setup a detect buffer.
    
    Obsoletes setup-app-layer-detect.sh.

[33mcommit 35fd10bc2ea2c7542035a3611d438d6bbc5483fd[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Sep 19 11:15:47 2018 -0600

    rust: app-layer detect template for rust parsers

[33mcommit 15922dcd8cd26470ff20fa31a7c69b8676add295[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Sep 18 23:01:08 2018 -0600

    setup-app-layer.py: attempt to cd into correct directory
    
    - If in src, cd to ..
    - Error out early if the current directory does not look like a
      Suricata source directory.

[33mcommit 58933bafc14569f60992f83eea17179c8b4e712d[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Sep 18 22:35:20 2018 -0600

    rust app layer template: functions to get buffers
    
    Example functions for getting the request and response buffers.
    Useful for running detection on the decoded buffers.

[33mcommit 01f7dcf5fd2830dc7eac87c105072e9a1d8b8657[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Sep 18 09:59:19 2018 -0600

    rust template parser: sample pcap

[33mcommit c3f1a35e28f5c7c06b595a95efb3b7c1554151e0[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Aug 30 23:20:21 2018 -0600

    rust: app-layer template parser and logger
    
    The protocol is a simple request/reply based protocol that can
    be hand driven with netcat.
    
    Request  -> 12:Hello World!
    Response -> 3:Byte
    
    Its of the format <length>:<message> where length is the length
    of the message, not including the length or the delimiter.

[33mcommit 7682b1ba742be02a25739fca8156efb84991b233[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Sep 17 20:35:14 2018 -0600

    rustfmt.toml: set to 80 char line width
    
    The rustfmt default is 100, set to 80 to be more inline with
    the Suricata C code.

[33mcommit 9636b9de32c1e072fee358ffdb1c8b5a18fefe0a[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Aug 30 13:14:54 2018 -0600

    rust: expose AppLayerParserStateIssetFlag to Rust.

[33mcommit 90dfcf490729494da989d259666fb76a781ea1bd[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Aug 30 12:55:33 2018 -0600

    rust/gen-c-headers: don't attempt to split empty lines

[33mcommit ee3aba900847b5a356b45d5b60c28dbc5a4423bd[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Aug 30 09:34:18 2018 -0600

    templates: C stub output for Rust logger

[33mcommit 96dc20abb15969b5c61e3b93d02b80c1462edf56[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Aug 28 07:12:45 2018 -0600

    templates: C stub template for Rust parser

[33mcommit 789b1474edd2d2ba7421e0bc6db3ab9c5be5a651[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 19 18:49:15 2018 +0200

    detect/template2: setup script

[33mcommit 486054595a067b068847c4e91d0457dcfdcd75b4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 19 18:48:53 2018 +0200

    detect/template2: template with prefilter (copy of ttl)

[33mcommit 4d0fc67560cbd6a15f2e3b4ffb8f46b31a8e0005[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 19 17:07:01 2018 +0200

    decode/template: minor updates

[33mcommit 5ed7e4fb5f14407aaca5d43fe7390d669f7b3d07[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 19 16:34:44 2018 +0200

    setup-app-layer-detect: update for tests/ dir

[33mcommit 452355bb63fc8f2e89448095db39958439b63d9a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 19 16:17:02 2018 +0200

    setup-simple-detect: update for new tests location

[33mcommit 9da00bebf0982a37eaa7157df487fe72732fe94b[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Aug 30 08:19:35 2018 -0600

    scripts/setup: remove 'ed' based setup scripts
    
    Removes:
    - setup-app-layer.sh
    - setup-app-layer-logger.sh
    
    These have been replaced by setup-app-layer.py.

[33mcommit e232fcc415541fdb5be0a039f3c3cb16077e6571[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Aug 29 11:49:57 2018 -0600

    setup-app-layer: rewrite script in Python
    
    The idea being that it is easier to read and maintain than
    wrapping ed commands.
    
    This script also merges the parser and logger setup into a single
    script, but still allows just the parser, or just the logger
    to be generated with flags, --logger and --parser.

[33mcommit a013cece697b95b989984d957221ccaa2523491d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 18 14:50:59 2018 +0200

    app-layer/template: code cleanups

[33mcommit 33914c2f2f8c448d8b1be602f5d448ee2f90a49e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 18 10:11:08 2018 +0200

    detect/template: clean up packet keyword

[33mcommit d3e5c1599572adf1784736a648c82df2ab8373b8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 17 17:26:52 2018 +0200

    detect/template: move test to own file in src/tests/

[33mcommit 1bb8fcecec825de94ed5cd1f85f4a185e98f2169[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 17 17:15:13 2018 +0200

    detect/template: switch to v2 API, add MPM

[33mcommit 234d113838de5d4e46a0d7e362d0b378178e4229[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 17 16:44:55 2018 +0200

    detect/template: clean up unittest

[33mcommit b1b45a54c56fe237580500445e05f811e951516b[m
Author: Jacob Masen-Smith <smith.jacob@gmail.com>
Date:   Fri May 11 12:27:31 2018 -0700

    detect/analyzer: disable automatic json output
    
    EngineAnalysisRules2 was in a strange location where it did not respect
    the --engine-analysis flag. It has been moved to the same call location
    as EngineAnalysisRules.

[33mcommit 64d75496b8becae237e6daa6b977cfdb8643c0e3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 11 15:19:29 2018 +0200

    detect/analyzer: add notes (and warnings)

[33mcommit e02b74dee783b4434c0b9885fc8d499155498b66[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 17 17:53:16 2018 +0200

    http: implement min size stream logic
    
    Update HTTP parser to set the min inspect depth per transaction. This
    allows for signatures to have their fast_pattern in the HTTP body,
    while still being able to inspect the raw stream reliably with it.
    
    The inspect depth is set per transaction as it:
    - depends on the per personality config for min inspect size
    - is set to the size of the actual body if it is smaller
    
    After the initial inspection is done, it is set to 0 which disables
    the feature for the rest of the transaction.
    
    This removes the rescanning flush logic in commit
    7e004f52c60c5e4d7cd8f5ed09491291d18f42d2 and provides an alternative
    fix for bug #2522. The old approach caused too much rescanning of
    HTTP body data leading to a performance degradation.
    
    Bug #2522

[33mcommit 7186ce7b99887d5986ee611583b36837e164e021[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 17 10:41:51 2018 +0200

    stream: introduce min inspect depth logic
    
    Some rules need to inspect both raw stream data and higher level
    buffers together. When this higher level buffer is a streaming
    buffer itself, the risk of mismatch exists.
    
    This patch allows an app-layer parser to set a 'min inspect depth'.
    The value is used by the stream engine to keep at least this
    depth worth of data, so that the detection engine can request
    all of it for inspection.
    
    For rules that have the SIG_FLAG_FLUSH flag set, data is inspected
    not from offset raw_progress, but from raw_progress minus
    min_inspect_depth.
    
    At this time this is only used for sigs that have their fast_pattern
    in a HTTP body and have raw stream match as well.

[33mcommit 9b86c7c5c0babd73cfa02c7cebc51853e3194f62[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Sep 13 23:11:14 2018 -0600

    defrag: break out of loop in linux profile when able to

[33mcommit aa986786621d7c722eac822a3fd1ae4f703209b8[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Sep 13 13:09:20 2018 -0600

    defrag: remove fragments that have complete overlap
    
    Instead of just marking fragments that have been completely
    overlapped and won't be part of the assembled packet, remove
    them from the fragment tree when detected.

[33mcommit fe6e96a8c1eb2a5a4cd57943a50c31d02fccbc0f[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Sep 3 16:53:47 2018 -0600

    defrag: use rb tree to store fragments

[33mcommit 023a2fe9ab1faaae0016145325c4ec4a22fa8f22[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 13 12:18:32 2018 +0200

    unittests: fix format-truncation warning

[33mcommit 269313a53ee1fd7b3f85fcffaadd0c539cf401ac[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 30 17:25:54 2018 +0200

    stream/segments: change packing to reduce size
    
    Change the way fields are ordered to reduce TcpSegment structure
    with 8 bytes.

[33mcommit b6b9b56e45d7af5b5754dd0b41d6136a054bf262[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 28 14:02:40 2018 +0200

    stream/segments: keep track of tree right edge
    
    Use this in places where we need to use the outer right
    edge of our sequence space.
    
    This way we can avoid walking the tree to find this, which
    is a potentially expensive operation.

[33mcommit ea771c69afe0557d6aae104a33fe4187a25ae8e7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 29 15:31:39 2018 +0200

    streaming/sbb: convert RB_MIN to 'head'

[33mcommit bbf1f78ffef1e1ecbbada9155afc04f400247df3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 29 15:13:31 2018 +0200

    streaming: keep track of tree 'head'

[33mcommit 450500e6674b723a09ac7bcb502d5ded563917df[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 27 08:11:54 2018 +0200

    streaming: use rbtree for stream blocks
    
    Switch StreamBufferBlocks implementation to use RBTREE instead of
    a list. This makes inserts/removals and lookups a lot cheaper if
    the number of data gaps is large.
    
    Use separate compare functions for inserts and regular lookups.
    Inserts care about the offset, while lookups care about the blocks
    right edge as well.

[33mcommit 9bda558c59bc86d3b792dfbdf60f1cd830e07186[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 27 09:01:16 2018 +0200

    stream/sack: optimize SACK size handling
    
    Optimize by keeping count during insert/remove instead of
    walking the tree per check.

[33mcommit 7ec7d234ccca638ca4915ef849777c2cdf923471[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Aug 26 10:14:18 2018 +0200

    stream/sack: turn SACK record list into rbtree
    
    Convert to rbtree from linked list. These ranges, of which there can
    be multiple per packet, are fully controlled by an attacked. The
    attacker could craft a stream of packet in such a way that the list
    would grow very large. This would make inserts/removals very expensive,
    as well as the list walk that is done and size calculation and pruning
    operations.
    
    The RBTREE makes inserts/removals much cheaper, at a slight overhead
    for 'normal' operations and slightly higher per record memory use.

[33mcommit 51ce03e76a1b848e97cb37ac8ae789de8318f8df[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 27 22:55:19 2018 +0200

    stream/segments: speed up inserts
    
    Don't try to do a 'fast path' by checking RB_MAX. RB_MAX walks the
    tree which means it can be quite expensive. This cost would be paid
    for virtually every data segment. The actual insert that follows would
    walk the tree again.
    
    Instead, simply insert it. There is a slight cost of the unnecessary
    overlap check, but this is much less than the tree walk in a full
    tree.

[33mcommit f4ff33969eb3bc7b7b58b5b8100e1e0e98faf152[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 28 11:50:23 2018 +0200

    stream/segments: remove RB_MIN/RB_MAX

[33mcommit 00e65e3cfac53cc018d4a89c2377bd379bd0f192[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 27 12:26:11 2018 +0200

    stream/segments: optimize overlap tree operations
    
    Now that with the RBTREE we have a properly sorted Segment tree,
    where with exact SEQ matches the tree is sorted by payload_len
    smallest to largest, we can avoid walking backwards when checking
    for overlaps. Our direct RB_PREV either overlaps or not and that
    is a reliable verdict for the rest of the tree.

[33mcommit 26b5e1ed13ae3a88b275d51d668d461a8e172080[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 23 17:27:08 2018 +0200

    stream/segments: turn linked list into rbtree
    
    To improve worst case performance turn the segments list into a rbtree.
    This greatly improves inserts, lookups and removals if the number of
    segments gets very large.
    
    The tree is sorted by the segment sequence number as its primary key.
    If 2 segments have the same seq, the payload_len (segment length) is
    used. Then the larger segment will be places after the smaller segment.
    Exact matches are not added to the tree.

[33mcommit 6a0cf0dd742b7942ad3ceac104206df31d37369f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 11 14:54:29 2018 +0200

    tree: add scan-build assertions to suppress FPs

[33mcommit 555fb15ab4d304a6b111513691ed91e6289134cf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 23 13:53:03 2018 +0200

    tree: add 2-clause BSD licensed tree.h

[33mcommit 9266334430bb4d0204cc820bb514d141bdd85b0a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 30 15:03:34 2018 +0200

    stream: expand GAP detection

[33mcommit 3a0eca9fdeaff90121f87b4e5f48ff4ff36edb8f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 11 15:16:10 2018 +0200

    detect/mpm: minor code cleanup

[33mcommit 164252e381b75e3b6a67b0b283263418fb156d95[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 12 14:47:55 2018 +0200

    detect/file: fix minor scan-build warnings

[33mcommit 11f213fb80a65a55a3710f807c8f70249dac2eac[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Sep 2 11:34:42 2018 +0200

    stream/tcp: be more liberal in last_ack
    
    Don't set even if seq is before next_seq, as this could still be
    a valid packet that was sent before the state was reached.

[33mcommit d7dae87e8b7fe4d0785c316687120a38d3f2095b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Sep 2 11:34:22 2018 +0200

    stream/tcp: add debug statements to state dispatcher

[33mcommit eba0d0417171d09f38e1a63875a694f4d2d0df9f[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Sat Sep 15 14:01:11 2018 +0200

    app-layer-ssl: don't decode empty extensions

[33mcommit 4d38d0844be794655de18798da5c368f952b95a3[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Aug 28 22:54:07 2018 +0200

    doc: add documentation for Lua function 'TlsGetVersion'

[33mcommit 04e78ace0a9e30170c0724bffa717564ab3e1d76[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Aug 28 22:46:26 2018 +0200

    lua: add function 'TlsGetVersion'
    
    Add another function to get TLS version, since 'TlsGetCertInfo' only
    works when a TLS session contains a clear text certificate, which is
    not the case in TLSv1.3 or when a session is resumed.

[33mcommit 10fcc8d2ca5ff341ca9762d51617fa0a7cba45a4[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Mon Aug 27 12:43:06 2018 +0200

    doc: update tls.version documentation

[33mcommit df9853b75cb30c12a7373b1fcd59fbcb738d778a[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Mon Aug 27 10:13:00 2018 +0200

    detect-tls-version: add support for 'raw' matching
    
    Add support for matching a 'raw' TLS version using a hex string, e.g:
    
      tls.version:0x7f12;
    
    The above example matches TLSv1.3 draft 16.

[33mcommit 4323e7840f17a8035e4f9830e4b5685b9ea593bb[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu Aug 23 19:31:40 2018 +0200

    detect-tls-version: add support for TLSv1.3

[33mcommit e81384273175e1af76861a016482a595efaedc1d[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu Aug 23 18:16:29 2018 +0200

    detect-ssl-version: add support for TLSv1.3

[33mcommit db2fc9208afe5bcdd6c128c7e314f3a2cff81190[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed Aug 22 22:08:35 2018 +0200

    lua: use 'SSLVersionToString' in TlsGetCertInfo()

[33mcommit 13918be589c69f547ad44972f5f5d0ed59c805fa[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed Aug 22 14:25:55 2018 +0200

    tlslog: add support for TLSv1.3

[33mcommit 25fb02da9a2d9bd5187a297411581e43db25d025[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed Aug 22 14:24:42 2018 +0200

    output-json-tls: add support for TLSv1.3

[33mcommit 97cc3475bf60ded08ba1ccda98c832af614dd4ad[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Aug 28 22:25:50 2018 +0200

    app-layer-ssl: add function to get string from version
    
    Add 'SSLVersionToString' to get string from version.

[33mcommit 91acd3831f271b76621bd361af285dba90428ff3[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed Aug 22 21:12:40 2018 +0200

    app-layer-ssl: add support for earlier TLSv1.3 drafts
    
    Add support for TLSv1.3 draft 1 to draft 21.

[33mcommit 831ddb62d2283b54ac743c1e19c2f3e3a6224879[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed Aug 22 14:21:24 2018 +0200

    app-layer-ssl: add support for TLSv1.3 from draft 22
    
    Add support for draft 22 to draft 28 and for the final
    version (RFC8446) of TLSv1.3.

[33mcommit e0ef578c4681c158e7b19b9513854c09dff4dc4d[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Aug 21 12:58:44 2018 +0200

    app-layer-ssl: add support for session tickets
    
    Add support for logging a session as 'resumed' when using a non-empty
    session ticket extension in the client hello record.

[33mcommit 21897a4d7aaed971477e32dc38ad5e3eb7f162e8[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Aug 21 08:21:21 2018 +0200

    app-layer-ssl: add better session id support
    
    Verify that the session id from both the client hello record and the
    server hello record matches before marking the session as 'resumed'.

[33mcommit f22bd5a75bf7dd78edff5335a1e4f4e4f6004cd5[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Sun Aug 19 20:49:45 2018 +0200

    app-layer-ssl: decode server hello record
    
    Decoding server hello is needed to do a better implementation of
    session resumption.

[33mcommit 0f1c8711ce9e0a812e11e64fcae1954e8c4eda21[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Thu Aug 30 10:11:48 2018 -0400

    doc: README.md minor fixes
    
    - Capitalization update
    - Typo fix
    - Spacing update
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 93364b9175a719ba949af26d759221c626f5311e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 29 21:14:28 2018 +0200

    flow/timeout: code simplification and cleanup

[33mcommit c8ecca59f8b23cc404ec39ebfe2e63ce2d316c48[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 29 13:10:41 2018 +0200

    stream: minor code cleanup

[33mcommit af6f52cc097495950250bc6fedd179e4d1d9215b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 30 09:11:07 2018 +0200

    rules: hide 'template' from --list-keywords

[33mcommit b0577402b626cf486b4747d9eba1cd9056d35664[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 30 09:09:49 2018 +0200

    rules: hide internal keywords from --list-keywords

[33mcommit 8c7aee92eb85e8c1bfdc42c5fdc787a249abf16c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Aug 26 08:56:33 2018 +0200

    flow-manager: fix unittest initialization

[33mcommit 68cc53d18836200946ec5ed451783ec0184e53f5[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Sat Aug 25 21:50:05 2018 +0200

    app-layer-ssl: make sure that JA3 stuff is only initialized once
    
    Avoid possible memory leaks by making sure that JA3 buffer and
    string is only initialized once.

[33mcommit 5ec2f6e7b3e983ca980bd519f8cc8fc629a5f29a[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Sat Aug 25 18:47:18 2018 +0200

    app-layer-ssl: fix memleak/coredump (Bug #2603)

[33mcommit fcd5e138b95206a9ac4ba7d04194a62e3f18ae48[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Aug 28 22:46:25 2018 +0200

    af-packet: close the socket in case of early fail

[33mcommit 7e8a749227c8a70c7e41350133ece7c85d9354a9[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Aug 23 00:21:51 2018 +0200

    log-filestore: fix file descriptor leak
    
    In the case we exceed the number of simultaneously open
    file we can reach a state were we will not close the file
    after writing.
    
    Thanks to Steve Grubb <sgrubb@redhat.com> for the analysis.

[33mcommit 876156d3a12e107e1b7e4a9c7b0427b45e3c1705[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 29 12:11:03 2018 +0200

    profiling/app-layer: fix TCP parsers showing UDP stats

[33mcommit 1f16b42d78cb99dc14a61749b46a3988c8ef8f26[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 29 12:08:59 2018 +0200

    profiling: add missing logger labels

[33mcommit 1f4cd75f051394291cc0b17b66fea4b3fe31169b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 16 22:15:09 2018 +0200

    detect: clean up sgh flags and add cocci check

[33mcommit e6b74f8ee0398c04b9d051f797e7ea5b88c9d4fe[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 16 21:59:37 2018 +0200

    stream: minor code cleanups

[33mcommit 7abb8745bfb01abc1c2453acd240685b8cc967ce[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 16 14:57:20 2018 +0200

    detect/mpm: clean up setup code

[33mcommit 1c6bc5754c4a808d1fc980081b1bda3a857db1ee[m
Author: Jason Ish <ish@unx.ca>
Date:   Sun Aug 12 22:44:02 2018 -0600

    dhcp: check length of option before accessing
    
    Prevent Rust index out of bounds panic.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/2571

[33mcommit 7bc2469eb1ce91d6901c934579487f74fc5652e3[m
Author: Jason Ish <ish@unx.ca>
Date:   Sun Aug 12 22:40:10 2018 -0600

    dhcp: remove println!() that got committed

[33mcommit 88277d04021bbec145ee1a13e23a94770648c4c8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 15 12:28:52 2018 +0200

    detect: fix file_data detect issue with alert ip
    
    Fix mpm progress being updated by irrelevant engines. Esp in the
    case of file_data engines, signature can contain multiple versions
    of the same engine, registered for different 'progress' values.
    
    This would lead to signatures being considered 'can't match' even
    in cases where they clearly could still match.
    
    Only consider those progress values that apply to the protocol in
    use.

[33mcommit a68eec630f26967943d5d712b657f460d6d7c696[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 15 12:15:26 2018 +0200

    detect/parse: try to set flow direction for sigs w/o explict app proto as well

[33mcommit 4c1173ffcd30fb054cf27f42c9068db8aaf0b084[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Tue Jul 17 09:27:23 2018 -0400

    configure: added rust install notes
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 015cd9301471c2a52b4b3be029f47ae941a843f8[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Mon Jul 16 20:53:24 2018 -0400

    configure: updated fedora/centos references
    
    * updated fedora yum references to dnf
    * updated/added centos/rhel references
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit bce7c2dd87fe9fbf149e68848f4713b3c21e57cf[m
Author: Maurizio Abba <mabba@lastline.com>
Date:   Fri Aug 3 13:51:13 2018 +0100

    eve/http: add tx->request_port_number as http_port
    
    Add the port specified in the hostname (if any) to the http object in
    eve. The port may be different from the dest_port used by the TCP flow.

[33mcommit 2938f797f29362cdf3962824ebe9a4561c9c97e9[m
Author: Konstantin Klinger <konstantin.klinger@dcso.de>
Date:   Mon Jul 23 14:46:33 2018 +0200

    yaml: add var for DC_SERVERS (Domain Controller)

[33mcommit 99193b1492fdf91caaec517190903dd08ade2b5d[m
Author: Konstantin Klinger <konstantin.klinger@dcso.de>
Date:   Mon Jul 23 14:50:21 2018 +0200

    yaml: add note for dns v1 not available with rust

[33mcommit a3832e4594832c8af058908ab230c8a60b09fd22[m
Author: Konstantin Klinger <konstantin.klinger@dcso.de>
Date:   Mon Jul 23 14:48:29 2018 +0200

    yaml: add note for dns.log with Rust
    
    It is not availbale when rust is enabled.

[33mcommit 173e5a1c58de4e1f06fa82cded2450b32ee195e4[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Aug 4 09:49:59 2018 +0200

    doc: iprep supports CIDR networks

[33mcommit c9b9f7fd1b7784107f10f0b4780ed798ec650a60[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Aug 4 09:40:41 2018 +0200

    util-unittest: fix typo

[33mcommit 28e74abcc56ff6b22837301bce4f7608d3449757[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 14 11:12:37 2018 +0200

    detect/files: fix inspection issues with 'alert ip'
    
    Don't track the 'skipped' engines as matches.

[33mcommit 6ffa0507d272dfec88e36fa536086b3a76127f07[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 14 10:17:37 2018 +0200

    detect/filehash: try to open data file from rulefile dir
    
    If the data file can't be found in the default location, which
    normally is 'default-rule-path', try to see if it can be found
    in the path of the rule file that references it.
    
    This makes QA much easier.

[33mcommit 39ca1db8e8042a384c4fee4575aac2307470e7ee[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 14 09:21:04 2018 +0200

    files: only prune in own direction
    
    Only prune files in own direction. The opposite direction may still
    require inspection.

[33mcommit 1df38c3b970134311bc9c9a11694bae1d5767ee6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 13 10:23:59 2018 +0200

    cocci: add more flag checks

[33mcommit 67c90954c0d7ea8c22fb3483b7ca117a0f720c6c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 13 10:13:53 2018 +0200

    detect: use BIT_* macros
    
    Also add notes that when adding flags they should be added to the
    analyzer as well.

[33mcommit 25a87cbbedda64eae6deaebbb83b027877d5dd2e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 13 09:21:05 2018 +0200

    stream: use BIT_U8 for stream flags

[33mcommit 7fca17639de115725205c56585813ebb73311463[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 10 00:06:24 2018 +0200

    detect/prefilter: speed up setup
    
    If the global detect.prefilter.default setting is not "auto", it is
    wasteful to run each prefilter setup routine. This patch tracks which
    of the engines have been explicitly enabled in the rules and only
    runs those.

[33mcommit 4f1befd217d7ba30424be91306b6563a34f79ba6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 9 17:35:32 2018 +0200

    detect/prefilter: fix prefilter when setting is 'mpm'
    
    When prefilter is not enabled globally, it is still possible to
    enable it per signature. This was broken however, as the setup
    code would never be called.
    
    This commit always call the setup code and lets that sort out
    which signatures (if any) to enable prefiltering for.

[33mcommit 085521b2184b98ce7bc9ae417913b24eafa04aaa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 10 00:05:50 2018 +0200

    detect: include keyword types in detect.h

[33mcommit 38b698c50f44c07e59dd37728155700b9eaccf96[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 9 23:27:00 2018 +0200

    detect/analyzer: show pattern that is used by mpm
    
    Set a new DETECT_CONTENT_MPM flag on the pattern that is selected
    during setup.

[33mcommit 0b5d8a1d75078e1b8b88dcb70e7c754e8bab3736[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 9 17:33:19 2018 +0200

    detect/prefilter: fix alias for fast_pattern
    
    If prefilter is used on a content keyword, it acts as a simple
    fast_pattern statement. This was broken because the SIG_FLAG_PREFILTER
    flag bypasses MPM for a sig. This commits fixes this by not setting
    the flag when it should act as fast_pattern.

[33mcommit 35c5ae34589804768b75c9d04e715317f89c3447[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 9 15:32:49 2018 +0200

    detect: limit flush logic to sigs that need it
    
    Limit the early 'flush' logic to sigs that actually need to match
    on both stream and http bodies.

[33mcommit f35a3bbae0482b435dbc0ebc7821ae0e8b27d827[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 9 13:45:24 2018 +0200

    detect/analyzer: add built-in lists

[33mcommit 28a0291d07d54e7d40b4453e25cc41ced8ff2b3b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 9 13:45:04 2018 +0200

    detect: don't setup PMATCH if it will be unused
    
    Safes a bit of memory and makes it easier to debug.

[33mcommit 6694593cc0e5ca0643550bbe23cbe8d958cbe69f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 9 13:10:38 2018 +0200

    detect/analyzer: add Signature::flags

[33mcommit c0adff377039646ec2b97529d369fd799b0e44fe[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 9 12:35:58 2018 +0200

    detect: remove STATE_MATCH flag use at runtime
    
    Instead, use it only at init time and use Signature::app_inspect
    directly at runtime.

[33mcommit 5879dafe55852191cd71d2a6f8ba24cce918195c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 9 11:51:07 2018 +0200

    detect: cleanup direct SIG_FLAG_STATE_MATCH use
    
    This flag should normally not be set manually. It will be set by the
    code registering the app engines in a signature.

[33mcommit cbd5ca3f6942dafb8dcd23a1878e2b150ac8451c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 9 11:45:18 2018 +0200

    detect/dnp3: cleanup list and proto registration

[33mcommit c279a801e5766c4adbbf882b0e4e3eeada120423[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 9 11:32:00 2018 +0200

    detect: remove SIG_FLAG_STATE_MATCH flag check
    
    It could not fail as before it the flag was already checked as a bail
    out condition.

[33mcommit 83d2d7bb4bdc7ff1e82df658a7c56c2de7bb7739[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 9 11:21:01 2018 +0200

    detect: minor formatting fixups

[33mcommit adfcb1071bcf0da2bbf8114844bbc0df9feecf29[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 9 11:14:33 2018 +0200

    flow: reduce structure size by removing gap

[33mcommit 7e004f52c60c5e4d7cd8f5ed09491291d18f42d2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 8 14:06:43 2018 +0200

    detect/http: flush bodies when inspecting stream
    
    The HTTP bodies (http_client_body and http_server_body/file_data) use
    settings to control how much data we have before doing first inspection:
    
        request-body-minimal-inspect-size
        response-body-minimal-inspect-size
    
    These settings default to 32k as quite some existing rules need this.
    
    At the same time, the 'raw stream' inspection uses its own limits. By
    default it inspects the data in blocks of about 2.5k. This could lead
    to a situation where rules would not match.
    
    For example, with 2 rules like this:
    
        content:"abc"; content:"data="; http_client_body; depth:5; sid:1;
        content:"xyz"; sid:2;
    
    Sid 1 would only be inspected when the POST body reached the 32k limit
    or when it was complete. Observed case shows the POST body to be 18k.
    Sid 2 is inspected as soon as the 2.5k limit is reached, and then again
    for each 2.5k increment. This moves the raw stream tracker forward.
    
    So by the time sid 1 is inspected, some 18/19k into the stream, the
    raw stream tracker is actually already moved forward for approximately
    17.5k, this leads to the stream match of sid 1 possibly not matching.
    Since the body match is at the start of the buffer, it makes sense
    that the body and stream are inspected together.
    
    The body inspection uses a tracker 'body_inspected', that keeps track
    of how far into the body both MPM and per signature inspection has
    moved.
    
    This patch updates the logic in 2 ways:
    
    1. it triggers earlier HTTP body inspection, which is matched to the
       stream inspection. When the detection engine finds it has stream
       data available for inspection, it passes the new 'STREAM_FLUSH'
       flag to the HTTP body inspection code. Which will then do an
       early inspection, even if still before the min inspect size.
    
    2. to still somewhat adhere to the min inspect size, the body
       tracker is not updated until the min inspect size is reached.
       This will lead to some re-evaluation of the same body data.
    
    If raw stream reassembly is disabled, this 'STREAM_FLUSH' flag is
    never set, and the old behavior is used.
    
    Bug #2522.

[33mcommit 2629ca423ae52261146d97379650140fdd283226[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 30 10:26:21 2018 +0200

    stream: improve TCP CLOSED handling
    
    Trigger app layer reassembly in both directions as soon as we've set
    the TCP state to closed.
    
    In IDS mode, if a toserver packet would close the state, the app layer
    would not get updated until the next toclient packet. However, in
    detection, the raw stream inspection would already use all available
    stream data in detection and move the 'raw stream progress' tracker
    forward. When in later (a) packet(s) the app layer was updated and
    inspection ran on the app layer, the stream progress was already
    moved too far forward. This would lead to signatures that matched
    on both stream and app layer to not match.
    
    By triggering the app layer reassembly as soon as the TCP state is
    set to closed, the inspection as both the stream and app layer data
    available at the same time so these rules can match.
    
    Bug: #2570
    Bug: #2554

[33mcommit ee1d2074545bb4108d2033cf3a75fcff828f3038[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 8 07:04:09 2018 +0200

    detect: add debug statements to stream inspect

[33mcommit 4e452a471fc524f1b4838bbfe0a7a829fd6b9f9b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 8 07:03:25 2018 +0200

    proto/detect: add debug info

[33mcommit 5a8779cfc02d15ee28a4ef106c50ed9dd82ed451[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 7 13:28:55 2018 +0200

    flow: flag packets as established for async
    
    If a stream is async we see only on side of the traffic. This would
    lead to the flow engine not flagging packets as 'established' even
    if the flow state was in fact established. The flow was tagged as
    such by the TCP engine.
    
    This patch considers the flow state for setting the packet flag.
    
    Bug #2491.

[33mcommit 0b46d027d08335d30f051879fe739756dc8bf489[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 7 10:57:49 2018 +0200

    rust/smb: implement stream-depth, unlimited by default

[33mcommit d38e7d9410b71c21014444e72baf4084f9b27c11[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jun 12 18:59:46 2018 +0200

    stream-tcp: fix typo in debug message

[33mcommit fc38013975ab8875863e23efda97eaecb7ff7a09[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Mon Mar 12 12:41:35 2018 +0100

    app-layer-htp: close file with TRUNCATE state
    
    When a file in TOSERVER direction is being stored and
    libhtp or stream depth limit is reached,
    it will be closed by HTPCallbackRequest without setting
    any flags so the file state will be set to CLOSED
    instead of TRUNCATED.

[33mcommit c8fb9bcba54590a9c082b96b24f3789b9db1f1ad[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 7 10:19:02 2018 +0200

    app-layer-parser: split registration flags

[33mcommit 397f5f5fdf11204027b045bb4e8ca89676dac2ed[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Thu Jan 18 12:49:53 2018 +0100

    app-layer-parser: don't overwrite stream_depth value
    
    When an app-layer parser is enabled, it could set its
    own stream_depth value calling the API AppLayerParserSetStreamDepth.
    
    Then, the function AppLayerParserPostStreamSetup will replace
    the stream_depth value already set with stream_config.reassembly_depth.
    
    To avoid overwriting, in AppLayerParserSetStreamDepth API a flag
    will be set internally to specify that a value is already set.

[33mcommit 7c884e0850a2fe7681ec34f91748c029998f91b0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 31 09:55:33 2017 +0200

    doc: update multi-tentant for device feature

[33mcommit 12fec46d13062ee2c562ffcad372ed2b259e9782[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 31 09:33:16 2017 +0200

    multi-tenant: introduce device selector
    
    Add device to tenant mapping support:
    
      mappings:
      - device: ens5f0
        tenant-id: 1
      - device: ens5f1
        tenant-id: 23
    
    Implemented by assigning the tenant id to the 'livedev', which means
    it's only supported for capture methods that use the livedev API.
    
    It's also currently not supported for IPS. In a case like 'eth0 -> eth1'
    it's unclear which tenant should be used for the return traffic in a
    flow, where the incoming device is 'eth1'.

[33mcommit a337908c789f5cd4cd9d3c3d3de7ea1ed5b96919[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 6 12:08:20 2018 +0200

    rust/dhcp: free events and destate at tx end

[33mcommit 55b14f37212ddf3f9cea16e72622fbe1b1e3e1b9[m
Author: Maurizio Abba <mabba@lastline.com>
Date:   Tue Jan 16 16:53:51 2018 +0000

    decode: set pktlen of decode handler to uint32
    
    Change the decode handler signature to increase the size of its decode
    handler, from uint16 to uint32. This is necessary to let suricata use
    interfaces with mtu > 65535 (ex: lo interface has default size 65536).
    
    It's necessary to change several primitive for Packet manipulation, to
    unify the parameter "packet length" whenever we are before IP decoding.
    
    Add tests before calling DecodeIPVX function to avoid a possible
    integer overflow over the len parameter.

[33mcommit 22f987509655c2667a853c3719b1b66fe3a8a454[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Aug 4 10:10:58 2018 +0200

    detect: free rule group init memory at the end of startup

[33mcommit f32cc6ca9c11c09d4e84a5a9a37d3bca4abfaed1[m
Author: Maurizio Abba <mabba@lastline.com>
Date:   Tue Jul 31 07:08:10 2018 +0100

    detect: fix fileext and filename negated match
    
    fix bug in fileext and filename preventing negated match to work
    correctly. Previously, negated fileext (such as !"php") would cause a
    match anyway on files that have extension php, as the last if would not
    be accessed.
    
    Using the same workflow as detect-filemagic we remove the final
    isolated if and set it as a branch of the previous if.

[33mcommit 9370805af630f5be415b84813b902072d6deab17[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 2 15:10:15 2018 +0200

    eve/smb: use flow direction for tuple

[33mcommit edd0c2246c22abb5510deb02532bf9f9040dac1f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 2 15:09:52 2018 +0200

    smb1: add SMB1_COMMAND_QUERY_INFO_DISK command mapping

[33mcommit 17ced4fb7f61461410560a17ee7f844a4b22702d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 2 13:49:26 2018 +0200

    smb: add smb-events.rules to dist

[33mcommit bf4398b15d4244a51800ece59566babd2be1fa05[m
Author: Maurizio Abba <mabba@lastline.com>
Date:   Thu Jul 26 13:54:58 2018 +0100

    output-json: ensure string is json-encodable
    
    Substitute json_string with SCJsonString custom function.
    SCJsonString will ensure string passed is json-encodable (utf-8).
    If it's not, the string will be converted in such a way that any
    non-printable character will be encoded in its hex form.
    The resulting json object will be returned.
    
    rust modification will encode any non-printable character during its
    conversion in to_cstring.

[33mcommit 4f32324fe42170a5fc5a7cf6d226f4b6f60b616f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 2 13:21:51 2018 +0200

    devices: clean up device init code

[33mcommit 023bb72cc6a340bd07af7a6ac5be46eaa9e9c5c6[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jul 24 17:28:47 2018 +0200

    suricata: fix init process for layer 2 IPS
    
    4474889667d664a66c1c123f4f7d2756e8a7fbb9 did break the logic of IPS
    mode detection for layer 2 IPS mode like Netmap and AF_PACKET. This
    pach fixes the issue by calling the IPS detection mode after
    complete registration of the interfaces.
    
    Reported-by: Alexander Gozman <a.gozman@securitycode.ru>

[33mcommit 44daf84321fca6a63acdff32418d6c49c127d122[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 2 12:31:40 2018 +0200

    output/tls: don't pass NULL fingerprint to json logging

[33mcommit 155a017cf84254d78c811f366472497cf9a3b2de[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 2 08:12:48 2018 +0200

    ssl: fix uninitialized variable warning

[33mcommit 3c72d67635b1a7cefd95f38daecb46c7560b61f3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 1 23:42:29 2018 +0200

    detect/analyzer: log mask flags and more engine details

[33mcommit c4b56ca28917eb460ea9eb223b9bc98fbb9ee1d8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 1 21:52:16 2018 +0200

    dcerpc: fix dce_iface not matching

[33mcommit a2b8ea57fc89231a29c70186c43b8cc2f9e80077[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 1 17:32:34 2018 +0200

    detect/dce: fix false positives in detection
    
    If a signature didn't explicitly specified 'dcerpc' or 'smb' as the
    app proto, false positives on other traffic could happen. This was
    caused by the sig not having a app_proto set. This isn't set as the
    rule is supposed to match against either ALPROTO_DCERPC or ALPROTO_SMB.
    
    To avoid adding runtime costs for checking for both protocols, this
    patch adds a new flag for DCERPC in the 'mask' logic. The flag is set
    on the sig if dce_* keywords are present and set on the packet if the
    flow's app proto is either ALPROTO_DCERPC or ALPROTO_SMB.
    
    Bug #2559
    
    Reported-by: Jason Taylor

[33mcommit 8547d113bfe6b44f188ff72194c31e407d5ae42c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 1 17:12:17 2018 +0200

    detect: minor code cleanups

[33mcommit 329e02952559751f9aadcb63a8958dc6501e1bc9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 1 17:06:26 2018 +0200

    detect/dce: keyword cleanups

[33mcommit 177966970a93b1c18c69fe705e108363fae1ac7a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 31 19:20:15 2018 +0200

    smb: probing parser improvement

[33mcommit fd389891137ab249158a9d036293943d7462f51b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 31 09:34:29 2018 +0200

    proto/detect: remove probing parser offset argument
    
    Remove offset argument as it was unused.

[33mcommit 991ec4ed606ce85d5d813d221ffc0341044e823f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 30 19:27:09 2018 +0200

    detect/flow: minor code cleanups

[33mcommit bfa884c956d9afdc5362b69b4c87ca580c43fddf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 30 17:04:57 2018 +0200

    detect: avoid potential use-after-free in error path

[33mcommit 9cd0bbcab1ce04e7f6fa5d7fc1786096da98f69d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jul 29 13:12:21 2018 +0200

    proto/detect: minor cleanup

[33mcommit d062089c60928bf5bceba08c69719665aa1cf856[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jul 28 14:23:01 2018 +0200

    detect: clean up counter registration

[33mcommit e8079e2f1b0265426d9b326e2332de258a3e16a1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 26 10:47:52 2018 +0200

    flow: fix comment typos

[33mcommit c6e79f4410835eb257e74b11cffa71dd8e809a52[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 23 11:47:39 2018 +0200

    nfs4: create tx for CREATE procedure

[33mcommit 90e0e3da27f76f2a919972f9d18db32334511239[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 23 11:47:05 2018 +0200

    nfs: fix applying nfs3 logging logic to nfs4

[33mcommit cb3abba1e0f69d523f4d3ad35c795d9c408d3641[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jul 21 18:13:32 2018 +0200

    nfs4: log remove procedure + add multi-proc support
    
    Add TX creation for NFS4 transactions. Start with the 'REMOVE' procedure.
    
    Start on logging all procs. In NFS4 COMPOUND records there are multiple
    procedures. One of them can be considered the 'main' procedure, with others
    as supporting utility. This patch adds the first step in supporting to
    track those in the TX for logging and inspection.

[33mcommit ff518e5c644ff5769a5f69bb4d5c908d7a38da26[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jul 21 16:59:26 2018 +0200

    nfs4: for putrootfh set 'mount root' as name

[33mcommit 22e0fc97f85d2a4b7aad4ab372fd08cf2669f266[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jul 21 10:12:41 2018 +0200

    nfs: rename generic functions from nfs3 to nfs

[33mcommit d22c170c3880e35986830666212b92bddc0bd0bd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jul 21 10:06:18 2018 +0200

    nfs: move v2 parsing into own file

[33mcommit 9b42073e540b2eb4c72d66e4716bac25a26b7ed1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jul 21 09:54:36 2018 +0200

    nfs3: move nfs3 specific handling into own file

[33mcommit 4c09766b33223690e67d7083be77d27ea663621e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jul 21 09:46:42 2018 +0200

    nfs: request parser cleanup

[33mcommit e0a58ffa410b090aa629b9cfd803438bd6209122[m[33m ([m[1;33mtag: suricata-4.1.0-rc1[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 20 10:20:17 2018 +0200

    changelog: update to 4.1rc1

[33mcommit 87839d973ca4894010a43dc2057305291b5495bd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 20 10:07:29 2018 +0200

    changelog: add missing 4.1beta1 tickets

[33mcommit f570905f8c337b455b904422051cae6b1ecb28f4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 19 19:13:22 2018 +0200

    nfs: get rid of reachable panic statements

[33mcommit 8a1af5c367b00616726eab28ba7819285647dce5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 19 15:45:08 2018 +0200

    nfs4: remove panic calls, set events instead

[33mcommit f2382356b1a145f34a7b5cc7e42f7a2d64657930[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 19 15:28:12 2018 +0200

    nfs4: support 4.1 SEQUENCE procedure

[33mcommit 64b6ff7392341f1f5abe81f7942351df4900ec57[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Jul 13 08:55:12 2018 -0600

    config: better default rule file configuration
    
    Move the rule file configuration down near the bottom of the
    configuration file under advanced settings. With the bundling
    of Suricata-Update, any rule file configuration within
    suricata.yaml could be considered advanced.
    
    Add extra comments to the yaml to make it more clear which was
    enabled at installation time.

[33mcommit cd40a3f7ac116874befb07bad56b8d19202082db[m
Author: Danny Browning <danny.browning@protectwise.com>
Date:   Tue Jul 17 12:17:19 2018 -0600

    detect-parse: fix missing space in error message (2541)
    
    Fix missing space in error message.

[33mcommit f68bf3301ad4d25f0a5ecb13405f4e26316cdf8d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 19 14:55:01 2018 +0200

    enip: harden byte parsing code
    
    Make sure we never read more than we have.
    
    Reported-by: Henning Perl

[33mcommit 9ba89a31efc89ec5cb72326dbcb9166b098f3ea0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 19 11:27:43 2018 +0200

    ssh: fix out of bounds read in banner parsing
    
    Reported-by: Henning Perl

[33mcommit 843d0b7a10bb45627f94764a6c5d468a24143345[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 10 17:23:05 2018 +0200

    stream: support RST getting lost/ignored
    
    In case of a valid RST on a SYN, the state is switched to 'TCP_CLOSED'.
    However, the target of the RST may not have received it, or may not
    have accepted it. Also, the RST may have been injected, so the supposed
    sender may not actually be aware of the RST that was sent in it's name.
    
    In this case the previous behavior was to switch the state to CLOSED and
    accept no further TCP updates or stream reassembly.
    
    This patch changes this. It still switches the state to CLOSED, as this
    is by far the most likely to be correct. However, it will reconsider
    the state if the receiver continues to talk.
    
    To do this on each state change the previous state will be recorded in
    TcpSession::pstate. If a non-RST packet is received after a RST, this
    TcpSession::pstate is used to try to continue the conversation.
    
    If the (supposed) sender of the RST is also continueing the conversation
    as normal, it's highly likely it didn't send the RST. In this case
    a stream event is generated.
    
    Ticket: #2501
    
    Reported-By: Kirill Shipulin

[33mcommit 33614fcae054ee417fe83bf68fd5d8e082d74223[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 21 16:15:39 2018 +0200

    stream-events: fix mapping

[33mcommit 2b581cd6db63e090afd35376c39d82f58e21220f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 10 17:22:53 2018 +0200

    smb: log trans2 that enable delete on close

[33mcommit eefac0ef95757ff8d148bd141881c5625abfb7c7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 9 15:43:02 2018 +0200

    smb1: add support for trans2 set_path_info rename

[33mcommit 1b86d4e1a23d3226531b3040e47cf61570e5cdc5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jul 7 11:47:55 2018 +0200

    smb: improve dcerpc logic
    
    Detect whether a pipe is a dcerpc channel based on the name of the
    pipe.

[33mcommit 7c8a078a2c2e8ace810c4da707bb50ae5db38a8f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jul 7 10:37:59 2018 +0200

    smb1: improve NT Create response record parsing

[33mcommit 83e7ddf41f7d50fc0802b32ee9c1b99aa9eab04f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 5 11:43:41 2018 +0200

    http: fix setting event on the last tx

[33mcommit 62e6e0eb3ce59b769ea7fbfe1f8a1032ca41e3c0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 5 10:13:52 2018 +0200

    pcap-file: fix segv on bad pcap format

[33mcommit d0cded2523b0d05f5052cbea3fe258da0fd0b772[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 5 10:01:47 2018 +0200

    http: set events for too many layers of compression
    
    libhtp would already issue warnings, but these were not mapped
    to events yet.

[33mcommit 2dc6b6ee14b0886783674fecaaa50e62328f9727[m
Author: Danny Browning <danny.browning@protectwise.com>
Date:   Tue Jan 16 09:24:16 2018 -0700

    source-pcap-file: delete when done (2417)
    
    https://redmine.openinfosecfoundation.org/issues/2417
    
    Add option to have pcap files deleted after they have been processed.
    This option combines well with pcap file continuous and streaming
    files to a directory being processed.

[33mcommit 84fc43842f75452eea50a832da2b4aa96c041789[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 4 15:10:34 2018 +0200

    detect: fix memory leak in app-layer-event keyword
    
    Bug #2515.

[33mcommit 5c584c2b74db0934d38ea083230e9e9931801d39[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 21 15:22:26 2018 +0200

    app-layer/tcp: set STREAM_MIDSTREAM flag

[33mcommit 2e6014b15cc492cc15b65feac7daabc62d0f443d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 21 14:31:14 2018 +0200

    rust/smb: search for record on midstream start
    
    Calls with both START and MIDSTREAM mean the record might be cut and the
    start of it could be missing. For this case, enable the same logic as is
    used when catching up after a GAP. Search for the start of the record
    instead of assuming it sits exactly at the start of the input data.

[33mcommit 905d9a1dd8135033bee90b133b81729bf04a8219[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 21 14:18:02 2018 +0200

    rust: define all STREAM_* types

[33mcommit 7bc3c3ac6e003aee4597ba7b1435ee1062802271[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 21 11:23:27 2018 +0200

    app-layer: pass STREAM_* flags to parser
    
    Pass the STREAM_* flags to the app-layer parser functions so that
    the parser can know more about how it is called.

[33mcommit df88c048bafb6b96ecaab4f468c6f4063be4f15c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jun 30 14:13:19 2018 +0200

    detect: fix delayed detect
    
    Last multi-detect changes broken delayed-detect by refusing to reload
    a 'stub' detect engine. This patch distinguishes between a stub for
    multi-tenancy and for delayed detect.

[33mcommit a2bc0080932e2971590b83011df109373f7aca66[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Thu Jun 28 14:08:43 2018 -0400

    add note about eve-alert metadata
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit ede94e1f66337e166ef811bec91e55eba9b331ea[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Jun 28 10:07:52 2018 -0600

    doc: alphabetize EXTRA_DIST

[33mcommit ff73d908aa2d096cada96e25220ac8847f03ca55[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Jun 28 10:05:05 2018 -0600

    doc: add window ips inline doc to extra_dist

[33mcommit d2142cf4337985e190891eb3a9d8ddcc017fed58[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Jun 28 09:24:46 2018 -0600

    doc: make warnings errors when building man page

[33mcommit 01f477786e1fd3c79fcef733c258b0691457ead4[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Jun 28 09:07:55 2018 -0600

    doc: link in windows ips setup page

[33mcommit 5bcae216533b03e49372a7436b3ee9dcf032d3a9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 28 16:31:40 2018 +0200

    detect: reload-rules shouldn't reload a stub

[33mcommit 4eaec2dff01a2b228d811d132eb633bdca0b9254[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 28 10:43:25 2018 +0200

    detect/debug: suppress noisy info messages

[33mcommit 8c918a4bea18e557e4854a7eb9118b8b79a5ceee[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 27 22:17:34 2018 +0200

    detect/multi-tenant: fix mix of default detect engine and tenants

[33mcommit 6e9d81289db477a37fc399081a4feae0e6d3fc0e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 27 13:44:06 2018 +0200

    detect: make detect engine types explicit
    
    There are 3 types of detect engine objects:
        1. normal
           The normal detection engine if no multi-tenancy is in use
    
        2. tenant
           A per tenant detection engine
    
        3. stub
           A stub (or minimal as it was called before) detect engine
           that is needed to have something in place when there are
           only tenants.
    
           A stub is also used in case of 'delayed detect', where we
           need a minimal detect engine to start up which is replaced
           by a full (normal type) detect engine after startup.
    
    This patch adds a new field 'type' to the DetectEngineCtx object
    to distinguish between the types. This replaces the boolean 'minimal'.

[33mcommit b5bc509857faff0179a2fb0b900692f1aa17cba8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 25 11:17:29 2018 +0200

    dhcp: suppress notice message at startup

[33mcommit d83707bef9c95cc267618db2b38d288c9e24c5bc[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Jun 25 08:40:54 2018 -0600

    rust/dns - remove extra parantheses
    
    Removes rust compiler warning.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/2521

[33mcommit 7d5f8295bc78d6268cb66723377c6f3df25354af[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Jun 25 07:08:38 2018 -0600

    yaml-loader: fix memory leak on fail include
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/1929
    
    If an include failed to load, either by the file not existing or
    a parse error, the file pointer and yaml parser instance were
    leaked.

[33mcommit ec0a7b22a5802fa33bd01c484f0a81fddbee4dd9[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jun 21 21:05:16 2018 +0200

    output-json-alert: log correct dns and dnp3 tx
    
    Using transaction log entry is not correct to log the transaction
    that did cause the alert. The tx_id in the PacketAlert is correct
    so let's use that.

[33mcommit d377eba254781705c2086ab2a7fc0036f30e5dde[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 26 13:27:09 2018 +0200

    detect/multi-tenant: fix removing of tenant id 0

[33mcommit f8ebcac73612cea982606a9bd8a1b9d909f2387f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 25 13:57:16 2018 +0200

    unix/multi-tenant: improve (log) messages

[33mcommit 4866295bfb07945c863313a4702fd3db05024afe[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 25 11:15:16 2018 +0200

    detect/tenants: fix crash when adding mapping
    
    When no tenants and mappings are defined in 'live' mode, adding a
    mapping resulted in a crash.

[33mcommit 663549d02c5dff01b732ec4e496962c21f2a37a7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 24 11:06:24 2018 +0200

    detect: remove lock from global keyword logic
    
    The global keyword registration and per thread init handling used
    the lock from the DetectEngineMasterCtx. This lead to a dead lock
    situation at multi-tenancy tenant reloads.
    
    The lock was unnecessary however, as the only time the registration
    list is updated is at engine initialization. At that time Suricata
    is still running in a single thread. After this, the data structure
    doesn't change anymore.
    
    Bug #2516.

[33mcommit ec77632e84a106ddbcd0baef4e4368b4fe5c5f9e[m
Author: Jacob Masen-Smith <smith.jacob@gmail.com>
Date:   Wed Jun 20 13:44:26 2018 -0700

    Adds WinDivert support to Windows builds
    
    Enables IPS functionality on Windows using the open-source
    (LGPLv3/GPLv2) WinDivert driver and API.
    
    From https://www.reqrypt.org/windivert-doc.html : "WinDivert is a
    user-mode capture/sniffing/modification/blocking/re-injection package
    for Windows Vista, Windows Server 2008, Windows 7, and Windows 8.
    WinDivert can be used to implement user-mode packet filters, packet
    sniffers, firewalls, NAT, VPNs, tunneling applications, etc., without
    the need to write kernel-mode code."
    
    - adds `--windivert [filter string]` and `--windivert-forward [filter
        string]` command-line options to enable WinDivert IPS mode.
        `--windivert[-forward] true` will open a filter for all traffic. See
        https://www.reqrypt.org/windivert-doc.html#filter_language for more
        information.
    
    Limitation: currently limited to `autofp` runmode.
    
    Additionally:
    - `tmm_modules` now zeroed during `RegisterAllModules`
    - fixed Windows Vista+ `inet_ntop` call in `PrintInet`
    - fixed `GetRandom` bug (nonexistent keys) on fresh Windows installs
    - fixed `RandomGetClock` building on Windows builds
    - Added WMI queries for MTU

[33mcommit 55ad4e4ecef6a3160c978a53bcada66458e17bff[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Jun 19 11:03:04 2018 -0600

    travis: use gcc-7 on cocci build
    
    Catches more errors, like switch statements fall throughs
    that are caught in private QA.

[33mcommit 1e8959b4659ff3290a75bca61762d9be18c69769[m
Author: Chris Speidel <cspeidel@knackworks.com>
Date:   Sun Jun 17 18:25:23 2018 -0400

    doc: fix minor typo

[33mcommit cf33c9975a651e65edc65fead54ea723f1d1ce84[m
Author: Jason Ish <ish@unx.ca>
Date:   Sat Jun 16 07:37:28 2018 -0600

    filestore: fix truncation warnings

[33mcommit f67aa5deaab6c2496520754c92a529402f42b645[m
Author: fooinha <fooinha@gmail.com>
Date:   Fri Jun 1 12:45:10 2018 +0100

    packet: gre over ip link type

[33mcommit 693a3df031f985203528ca473aec32fc4cbdfaeb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 29 21:37:21 2018 +0200

    tls: document encrypt-handling option
    
    Document in sample yaml and user guide.

[33mcommit 2d50fe499ad2ffc2df6b6fc61cb35aab6b924cb1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 24 14:56:30 2018 +0200

    tls: new config for dealing with encrypted traffic
    
    Much of encrypted traffic is uninteresting to Suricata. Once encrypted
    communication starts, inspecting the packet payloads is generally
    not interesting anymore. The default behavior is to disable the parts
    of the detection engine and stream reassembly that relate to raw content
    inspection.
    
    The tls app-layer parser also had a crude option to affect this behavior:
    set 'no-reassemble' to true went much further than the default behavior.
    It disabled the TCP reassembly on the flow completely, disabled all
    inspection on the flow and enabled bypass if available.
    
    This patch adds a new option: full inspection. This continues to treat
    a TLS session as any other, so without any limits to inspection.
    
    The new option is implemented in a new config option 'encrypt-handling',
    that replaces 'no-reassemble'. The new option has 3 values:
    'default', 'full' and 'bypass'. Default is the current default behavior,
    'bypass' is the current 'no-reassemble = true' behavior and 'full'
    is the new full inspection mode.

[33mcommit e6a009ae7fbce507ee2824c99ea7e352e7f221db[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 24 14:56:03 2018 +0200

    detect/stream_size: code cleanups

[33mcommit f30f038179d3898cc8738e9c48b2b8e635f12a3d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 23 13:55:30 2018 +0200

    detect/stream_size: apply rule to packets & stream
    
    The use of stream_size in combination with raw content matches is an
    indication that the rule needs to be evaluated per packet, not just
    per reassembled stream chunk.

[33mcommit c677e07d3e5b5a173f4721d7add6a0b95e28627d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 18 10:53:14 2018 +0200

    kerberos: minor doc updates, add author

[33mcommit b61e9c21736de2f37e1f99f54016fa9ae99a7f06[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 18 10:52:59 2018 +0200

    dhcp: add author

[33mcommit fb85822730ab4ed49570252a431986ad1eaca41a[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Jun 8 13:18:03 2018 -0600

    dhcp: update user guide

[33mcommit c052e23348e71e4fef27204642eee56ac476ea42[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu May 31 17:05:52 2018 -0600

    dhcp: add dhcp app-layer rules file

[33mcommit 9210d8743bef65fee0d6ef0a07368e42d3c48f65[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue May 8 17:49:52 2018 -0600

    rust/dhcp: Rust based DHCP decoder and logger.
    
    This is a DHCP decoder and logger written in Rust. Unlike most
    parsers, this one is stateless so responses are not matched
    up to requests by Suricata. However, the output does contain
    enough fields to match them up in post-processing.
    
    Rules are included to alert of malformed or truncated options.

[33mcommit 1b0b74dc1610bf27a035acb878e416fc61fdf81f[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Jun 13 16:03:33 2018 -0600

    rust: a Rust ConfNode wrapper.
    
    A Rust wrapper around the C ConfNode object. Currenlty only exposes
    ConfGetChildValueBool and ConfGetChildValue.

[33mcommit 05e20c5c57b31e4a4b5d6b33b8acfdf874e809ed[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Jun 13 16:36:49 2018 -0600

    eve: check if enabled before attempting to setup
    
    Before setting up a sub eve-logger, check that it is enabled. This
    allows us to set "enabled: no" for loggers that are not registered
    with the system without generating an error. An example of this
    is loggers that are only available with Rust.

[33mcommit 2ec33816007ee27163e433fa6832b95f0695afb7[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu May 31 16:39:22 2018 -0600

    rust/app-layer: macros to export de_state functions
    
    These macros generate the extern "C" functions for transactions
    structs that need provide functions for setting and getting
    the de_state. The idea is to provide macros do avoid code
    duplication and make it simpler to create an app-layer.
    
    A trait would be the correct solution, but it doesn't look like
    you can use traits to export extern "C" functions.

[33mcommit da4912dfe738be8542a0b8c1dda40dfe5a85ef30[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu May 31 16:38:53 2018 -0600

    rust: add get_tx_iterator to parser registration

[33mcommit 14843a7b439e4d2a595033cf5119fef20632fbc8[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu May 31 16:34:23 2018 -0600

    app-layer-register: add GetTxIterator
    
    Add a field to set the GetTxIterator function to the AppLayerParser
    registration struct.

[33mcommit 9fc1250ca8c3a07d4819a274a843a230954a0ac4[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon May 28 16:00:18 2018 -0600

    app-layer-detect-proto: remove unnecessary gotos

[33mcommit e9ae62ed05ddd7b0644814f8634c65ea2133cba7[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Thu May 24 09:27:25 2018 +0200

    Kerberos 5: properly handle TCP buffering

[33mcommit c51ff32adb870dbb5f0ae38ea0595c73c4cd6484[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Tue May 15 16:54:31 2018 +0200

    Document Kerberos 5 parsing events

[33mcommit 1076c7cd4715d085a14b74598628dfca3ec2f01d[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Mon May 7 08:16:53 2018 +0200

    Add krb5_err_code detection keyword

[33mcommit d6b9c0294a9af22c741471948fee74b859c85b26[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Sat May 5 16:10:51 2018 +0200

    Add krb5_cname and krb5_sname detection keywords

[33mcommit 0bd81ff838971f7884639081e2c650f5a94f0b56[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Sat May 5 16:06:54 2018 +0200

    Add krb5_msg_type detection keyword

[33mcommit 50370511615574ec09be0e1b6be465c0e3dc2b7f[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Thu Apr 19 23:15:42 2018 +0200

    Kerberos 5: rename weak crypto to weak encryption, and log it

[33mcommit 6ae53a1869a40d5471dfa6fe39f726c0d270012b[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Thu Apr 19 13:09:43 2018 +0200

    Add event rules for Kerberos 5

[33mcommit 3a017f61b0a1f5e7f69321c2fb7b06a17f4b57c3[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Thu Apr 19 11:04:01 2018 +0200

    Kerberos 5: pretty-print error code when logging

[33mcommit 52f5c7914f83efa93c53c9b996df3e87cdddc3da[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Thu Apr 19 11:17:23 2018 +0200

    Log Kerberos 5 errors

[33mcommit 1e5f5d405ffa05c56e0959fdfd6fe223fe9a0d97[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Tue Apr 17 09:31:04 2018 +0200

    Kerberos 5: add support for TCP as well

[33mcommit 645ba17509334c5d5c09964c6734dc72cd1b98e5[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Tue Apr 17 08:32:59 2018 +0200

    Kerberos: check version in probing function

[33mcommit fd175f2bfbbd8da06ce87e9ce489e2803f3561b6[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Tue Apr 17 07:50:43 2018 +0200

    Add logger for Kerberos 5 metadata

[33mcommit 77f0c11c9ed21319ebbb828f8741e91165954fc5[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Mon Apr 16 08:15:02 2018 +0200

    Add Kerberos 5 application layer

[33mcommit 325f336f637f8a3f4f2fb00c6cd6d0f04d5ca62f[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu May 24 13:43:30 2018 +0200

    util-random: fix detection of getrandom failure

[33mcommit 851efd9c60eaa30d8843f935c1445d91ddd86d68[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed May 23 08:57:13 2018 +0200

    util-random: workaround getrandom unavailability
    
    getrandom syscall availability is detected at runtime. So it is
    possible that the build is done on a box that supports it but
    the run is done on a system with no availability. So a workaround
    solution is needed to fix this case.
    
    Also we have seen some issue in docker environment where the build
    is detecting getrandom but where it does not work at runtime.
    
    For both reasons, the code is updated to have a call to a fallback
    function if ever the getrandom call returns that the syscall is
    not available.

[33mcommit d73b5ee276c336f406f52d9711c2f23bff21f5c2[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue May 22 12:16:05 2018 -0600

    rust: cargo fixes for out of tree build

[33mcommit 7e06e765f39088c51a700cf232f2c3cc953929f7[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon May 21 08:55:19 2018 -0600

    python: fixes for out of tree build
    
    Autoconf/automake and python setup.py don't play that well
    together with out of tree builds.
    
    Makes suricatasc not an autoconf input file, instead use the
    defaults module that is already being created.
    
    In the case of an out of tree build, copy the generated defaults.py
    to the build directory manually.

[33mcommit 4f48927c44e467492dfd2d7bd250c0a72a0b2c75[m
Author: Pascal Delalande <pdl35@free.fr>
Date:   Tue May 15 22:15:16 2018 +0200

    doc: spelling mistakes in various sections of the user guide

[33mcommit 2d1c4420de2437a4751173e759d519c17994de5c[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Tue May 15 15:33:30 2018 +0200

    Update ntp-parser to 0.2.0

[33mcommit 95481a91760eda26510ee0e60348d3acdfe37629[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed May 9 06:50:03 2018 -0600

    eve/json/xff - remove check for flow being NULL.
    
    Fix Coverity issue:
    ** CID 1435535:  Null pointer dereferences  (REVERSE_INULL)
    /src/output-json-file.c: 212 in JsonBuildFileInfoRecord()
    
    Where we check a variable for being NULL, when all paths to the
    code show that it can't be NULL.

[33mcommit 26b61bad90970d6a0a8347a7d3238ce6d4379b73[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 23 12:33:02 2018 +0200

    htp: cleanup and fix test

[33mcommit 08af5ddd8817733c144a73120ef216c382ba3624[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 19 16:31:43 2018 +0200

    http: add tests for header folding
    
    To test for https://github.com/OISF/libhtp/issues/159

[33mcommit 953dceece2d0b680bf83a25882a1465b562e1fce[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 19 15:34:51 2018 +0200

    http: clean up unittest

[33mcommit d0a8310fcfa5f2ae9cf5d8f0446a79fbc683113d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 7 16:20:45 2018 +0200

    pcap-log: don't divide by 0 on no traffic

[33mcommit 0d51ebc71a46a507df28bb307bee49d32e708af1[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu May 3 12:43:27 2018 -0600

    eve/alert: use eve-level xff config by default
    
    The alert section can still have an xff configuration which
    will take priority over the eve level xff config.

[33mcommit e3645bd9ae7aaf7329806d796983806b89309516[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu May 3 12:22:33 2018 -0600

    eve/alert: separate xff and metadata configuration
    
    Put xff setup and metadata setup into their own
    functions.

[33mcommit 48223874118f462e6436612c6886c7ede29e7fb9[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu May 3 11:35:18 2018 -0600

    qa/coccinelle: allow to run from non git directory
    
    For example, when I put the contents of a git worktree into
    a Docker image for a test build .git will not be a directory
    causing the run_check.sh script to fail.

[33mcommit 36ec1281b20e83c2c7569ec8ec9d5d32c750cbb7[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu May 3 09:36:34 2018 -0600

    eve/files: use eve-level xff config by default
    
    The files section can still have an xff configuration which
    will take priority over the eve level xff config.

[33mcommit 6607ee8489f925c0ba918bfe0952124fd5cf2596[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu May 3 09:31:53 2018 -0600

    eve/http: use eve-level xff config by default
    
    The http section can still have an xff configuration which
    will take priority over the eve level xff config.

[33mcommit 576584152c8b9c0a85b4490ecbbfc5ea3d5f6a40[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu May 3 09:27:53 2018 -0600

    eve: use eve-level xff configuration
    
    If an "xff" configuration section exists on the eve object,
    parse and save it for child loggers to use.

[33mcommit 781a7e108946353ffb4ff392e95d5805326f2db6[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Apr 30 17:22:02 2018 -0600

    xff: HttpXFFGetCfg - allow conf to be NULL
    
    The code fully handles conf being NULL, and we have other functions
    where conf can be NULL.

[33mcommit 2543930d7498d23810e5784bb187442d65ad2c53[m
Author: Maurizio Abba <mabba@lastline.com>
Date:   Mon Jan 15 15:59:28 2018 +0000

    xff: Use XFF configuration in eve and filestore
    
    XFF configuration is already set in app-layer-htp-xff, and in
    output-json-alert. Extending XFF configuration to files and HTTP allow
    to get the same behavior as for alerts.
    
    Extend the configuration of filestore json to let filestore metafile
    dump be aware of xff. This is available only if write-fileinfo is set
    to yes and file-store version is 2.

[33mcommit 6ba02cac50502d1c076f400ec30409618ac951d6[m
Author: Elazar Broad <elazar@thebroadfamily.com>
Date:   Wed May 2 12:38:40 2018 -0400

    Fix segfault when the protocol is anything other than HTTP
    
    When a file is transferred over anything other than HTTP, the previously hard-coded HTTP protocol would trigger a non-existent index into htp_list_array_get(), causing a segfault. This patch mimics the logic in detect-lua-extensions.c.

[33mcommit 2d2c01e7725fd78a578cb0c02e13caab0f076ef0[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Sun Mar 25 11:54:01 2018 +0200

    detect-tls-cert-fingerprint: fix typo in unittest

[33mcommit 4671d57d7ad4ebf922f48e8919fc9a401d65be1f[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Sun Mar 25 11:52:29 2018 +0200

    detect-tls-cert-fingerprint: fix failing unittest
    
    Fix unittest that failed with the content validation callback.

[33mcommit f36d578ee0b0582e7750d287ebe4263d3164272c[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Sat Mar 24 23:16:40 2018 +0100

    detect-tls-ja3-hash: add setup callback to lowercase content
    
    Add setup callback that lowercase the content that follows 'ja3_hash'.

[33mcommit 5b954212f73dc4e9f838370667d087f91455ae6a[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Sat Mar 24 23:15:58 2018 +0100

    detect-tls-ja3-hash: add warning if nocase is used

[33mcommit 2501d48ac828b957313552ab10550f038cb68a9a[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Sat Mar 24 23:07:04 2018 +0100

    detect-tls-cert-serial: add warning if nocase is used

[33mcommit 2c5d5bbdaa994119a5847eac0b2c188715981d51[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Sat Mar 24 23:00:33 2018 +0100

    detect-tls-cert-fingerprint: add warning if nocase is used

[33mcommit 4c9d448fa1ec90fde0bdbbeaa754d220e632c41c[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Sat Mar 24 13:33:52 2018 +0100

    detect-tls-ja3-hash: add content validation callback
    
    Validate that the content that follows the 'ja3_hash' keyword has
    the correct length.

[33mcommit 52d9d457472947090287a34965cb66bc0d50851a[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Sat Mar 24 13:00:31 2018 +0100

    detect-tls-cert-fingerprint: add setup callback to lowercase content
    
    Add setup callback that lowercase the content that follows
    'tls_cert_fingerprint'.

[33mcommit f788719348419c1c32396d11ab57af1bf31e1c30[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Sat Mar 24 12:47:48 2018 +0100

    detect-tls-cert-fingerprint: add content validation callback
    
    Validate that the content that follows the 'tls_cert_fingerprint'
    keyword is on the correct form and has the correct length.

[33mcommit 6cf4c3c26e41e755cf30e67fc5aac0e43e134e9c[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Sat Mar 24 00:34:49 2018 +0100

    detect-tls-cert-serial: add setup callback to uppercase content
    
    Add setup callback that uppercase the content that follows
    'tls_cert_serial'.

[33mcommit 321603de37439d78e913b2d407a6ae8723f2c017[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Sat Mar 24 00:31:25 2018 +0100

    detect-engine: add DetectEngineCtx to setup callback function
    
    Add detect engine context as variable to setup callback function
    in 'DetectBufferTypeRegisterSetupCallback'.

[33mcommit 48a5ea9df05861c75a49a79b76e64be93e23f12b[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Mar 23 15:53:08 2018 +0100

    detect-tls-cert-serial: add content validation callback
    
    Validate that the content that follows the 'tls_cert_serial' keyword
    is on the correct form. If it's longer than two bytes it should be
    separated by colons.

[33mcommit ce270a8f6aa0d9d60a514f3a1b5f05a48fbbdfcc[m
Author: Max Fillinger <maximilian.fillinger@fox-it.com>
Date:   Thu Jan 25 13:54:58 2018 +0100

    Add info about pcap log compression to user guide

[33mcommit 58e92392eafd244a9e72ee948e01dadbd9488336[m
Author: Max Fillinger <maximilian.fillinger@fox-it.com>
Date:   Thu Feb 15 15:57:51 2018 +0100

    configure: Show installation info for liblz4 if not found

[33mcommit b85a0b188b001934cccd6ea3d655440fab3e576b[m
Author: Max Fillinger <maximilian.fillinger@fox-it.com>
Date:   Mon Jan 15 10:18:53 2018 +0100

    Add an option for compressing pcap-log files
    
    Introduces the option 'outputs.pcap-log.compression' which can be set
    to 'none' or 'lz4', plus options to set the compression level and to
    enable checksums. SCFmemopen is used to make pcap_dump() write to a
    buffer which is then compressed using liblz4.

[33mcommit 6062c27eb7f25fc073bff52f6912bc5406478457[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Apr 19 23:16:32 2018 +0200

    af-packet: kill some white spaces

[33mcommit 75b6972cfd56a2dcb78dd263c6af8ba810896981[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Apr 19 16:58:27 2018 +0200

    util-ioctl: fix a typo in setter message

[33mcommit f53e687bb8f870b37979184fe04c8275717dc524[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Apr 19 19:13:20 2018 +0200

    af-packet: dump counters when timeout occurs
    
    When traffic is becoming null (mainly seen in tests) we reach the
    situation where there is timeouts in the poll on the socket and
    only that. Existing code is then just looping on the poll and
    the result is that the packet iface counters are not updated.
    
    This patch calls the dump counter function to be sure to get
    the counter right faster (and not only right at exit).

[33mcommit e048a74ecdfdfe468618d7ce1a3e9e570915ea3e[m
Author: Jason Ish <ish@unx.ca>
Date:   Sun Apr 29 07:33:11 2018 -0600

    rules: set default rule dir to suricata-update if bundled
    
    If suricata-update is bundled, set the default-rule-dir
    to lib/suricata/rules under the $localstatedir
    
    For now use 2 rule-files section that are renamed depending
    on if suricata-update is bundled or not.

[33mcommit 732ce3f1235afc8827b21fef7815eec6978f8650[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Apr 26 07:40:04 2018 -0600

    install-rules: use suricata-update if available
    
    If Suricata update was bundled, use it for "install-rules" instead
    of curl or wget.

[33mcommit b9e083a70395596bf45db8288a1d8112bafe79e5[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Apr 26 07:27:07 2018 -0600

    python: put some defaults on suricata.config.defaults
    
    This is a module that can contain installation default. For now
    it includes the sysconfdir, and rules data directory for use
    by suricata-update.

[33mcommit 7bf490062c7998fd76213d945f3bd2a3edf12fee[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Apr 26 07:15:39 2018 -0600

    rules: install to $datadir/suricata/rules
    
    Common /usr/share/suricata/rules or /usr/local/share/suricata/rules.
    
    The rules provided by the distribution are installed here as part
    of the Suricata install process so will always be installed, even
    without the use of install-rules.

[33mcommit de6fcb7c922be01d8e2e22519b8a0070c6b2e588[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 2 09:00:35 2018 +0200

    wirefuzz: add 'quiet' mode
    
    Adds -q commandline option to force quiet operation.

[33mcommit 8a5710307d3b2dd144ea7d1ba884441695721cf9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 25 17:23:45 2018 +0200

    hyperscan: don't abort on payloads > 64k
    
    SPM API was recently updated to accept 32 bit length fields instead of
    16 bits. This could trigger a BUG_ON in the hyperscan implementation.

[33mcommit a5de9968dd7663836bd554ead121c7c83409c79d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 24 12:01:40 2018 +0200

    gcc8: fix format truncation warnings

[33mcommit f79f64097e04ef44ae44ff5e82e1b2cd504b7b9d[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Apr 14 17:21:45 2018 +0200

    configure: fix error hw timestamp check
    
    This fixes #2469

[33mcommit 5faaa5dceb8b9d34b1a8acbded9b517522f04090[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 4 15:40:50 2017 +0200

    file_data/http: inspect cleanup

[33mcommit 1d0727d85fe49807e55839f6165515e0110650aa[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Apr 20 19:23:21 2018 +0200

    stream-tcp: fix stream depth computation
    
    The stream depth computation was partly done with the stream_config
    depth instead of using the value in the TCP session. As a result,
    some configuration were resulting in abnormal behavior.
    
    In particular, when stream depth was 0 and the file store depth was
    not 0, Suricata was stopping the streaming on the flow as soon as
    the filestore was started.
    
    Reported-by: Pascal Delalande <pdl35@free.fr>

[33mcommit 1012fc446611a4b8c66522b5985c76b156ba8982[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Apr 19 11:41:40 2018 +0200

    file: update logger API to log direction
    
    By adding the flow direction to the logger we can have an accurate
    logging of fileinfo events that has source and destination IP
    correctly set.

[33mcommit 2515c8927b3933b1924ebcb3a47696a0f3eda36e[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Apr 19 14:32:51 2018 +0200

    app-layer-ftp: fill direction of transfer
    
    This is required to return the file when asked with one direction.

[33mcommit d2bf7a3ba9698ded982683e17837ea08f3ddecba[m
Author: Maurizio Abba <mabba@lastline.com>
Date:   Tue Apr 10 15:37:41 2018 +0100

    detect: fix buffer length to uint32
    
    There is a difference in the size of the buffer length as passed from
    the content buffers (cfr HttpReassembledBody.buffer_len) and the buflen
    variable passed to mpm primitives. This can cause a misdetection
    whenever the bufferlen is multiple of 65536 (as uint16(X*65536) == 0).
    Increasing the buflen variable type to uint32 solves the issue (this
    does not cause any issue with primitives, they all accept uint32).

[33mcommit 2e8fd612a63902829a3c518729fbc07c26ce92a1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 6 12:57:24 2018 +0200

    files: properly close files on flow timeout
    
    If a file transfer stops on flow timeout, it won't be closed or
    truncated. This patch makes sure that in such cases the files
    are indeed truncated. This fixes the filestore-v2 output module,
    as that requires a sha256 for storing the partial file correctly.

[33mcommit 73d94fff731a50ebbe9b5f898c1592592094beea[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 21 16:11:40 2018 +0100

    nfs4: support records wrapped in GSSAPI integrity

[33mcommit 53fa2af07c12642b276c19da83d7c6aa070975ca[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 21 15:52:44 2018 +0100

    nfs4: fix attr parsing corner case

[33mcommit 39489bc5fdc9e71b9b013f999c7dbd67812ed9c4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 20 09:43:17 2018 +0100

    nfs4: implement COMMIT parsing and handling

[33mcommit c7cb01b636983139d674e01d85c9a6fa1afed922[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 20 09:36:47 2018 +0100

    nfs4: parse GSSAPI init

[33mcommit bfa60753f9693f903ab8319d7390a4c7bc103c8c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 19 20:52:28 2018 +0100

    nfs4: create link support

[33mcommit 06f6c159549b9f2ae7177862d092bcd73fddac33[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 16 12:24:51 2018 +0100

    nfs4: initial implementation
    
    Implements record parsing and file extraction for READs and WRITEs.
    
    Defines all types from RFC 7530.

[33mcommit 75c5722b7e1707623c70911f660b6836e9b1c364[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 21 15:53:15 2018 +0100

    nfs/rpc: add parser for GSSAPI Integrity records

[33mcommit 81c0b53d3f78b54165409bd427f10840b1f839bd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 23 18:24:41 2017 +0100

    flow: track flow for ip proto 41

[33mcommit 8c75a022ea49117cec7b2cafc3d04be57b9bc25c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 3 14:26:49 2018 +0200

    eve/netflow: only log response record if we've seen response pkts

[33mcommit c662383b53f059dc221d74841228adda2c9a200f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 6 17:08:44 2017 +0100

    flow: track flow for ICMP
    
    Change packet layout to allow for expected counterpart type.

[33mcommit 708aad3f4ac108b28b01286b35ba9411cbf9cc83[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 4 13:49:35 2018 +0200

    unified2: address strict aliasing issue

[33mcommit 7ce77f93515c60949394c2a0e735a92dd2404d31[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 4 13:28:29 2018 +0200

    decode/ipv6: expose addr as 'struct in6_addr' as well

[33mcommit 49b02f8f1b44078daadc85719022f87fed47a7b0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 4 12:43:17 2018 +0200

    mingw: minor compile warning fixes

[33mcommit 28849509b212ac6610b4d6d48eb0d2b1ad251cf1[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Tue Apr 3 10:45:34 2018 +0200

    tests/detect-engine-hsbd: deinit det_ctx threads

[33mcommit c620fc3dc4721436c396f41c558a036d1d655c2d[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Tue Apr 3 10:44:42 2018 +0200

    detect-engine: free events
    
    Events are stored in a detection engine but actually
    they are not freed.

[33mcommit f461be75c55f2b07f63df6e4be5ac48974405f57[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Apr 1 12:33:10 2018 +0200

    smb: use inspect API v2 for smb keywords
    
    Simplies code and supports transforms.

[33mcommit 3854c304d865d54775593ab52a90b0d039f0ba08[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 3 12:10:46 2018 +0200

    mpm/hs: fix minor coverity warning
    
    CID 1428797 (#1 of 1): Unchecked return value (CHECKED_RETURN)
        check_return: Calling HashTableAdd without checking return value
        (as is done elsewhere 5 out of 6 times).

[33mcommit 7ea80b5c57a0058783f4a26005a4aaa15da30aad[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 3 12:06:37 2018 +0200

    configure: fix small issue with libevent check

[33mcommit e249ce29bbc7b77c95a1945a59301ef05ceb1af9[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Apr 3 11:09:55 2018 +0200

    doc: add lua directory to Makefile

[33mcommit 4a90dced8ef06cf1869bd669894e1bcd937549ce[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 3 10:13:43 2018 +0200

    doc/lua: small update to the usage intro

[33mcommit 2546e86a16e3b81ff51d38d6398b184a528fc106[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Feb 16 09:22:35 2018 +0100

    doc: document lua function about flow var

[33mcommit 0c4bf2d33297d08f110b8413efad65cbf59ca22d[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Feb 16 08:52:51 2018 +0100

    doc: add a lua support top level section
    
    Both output and signature are using lua. So lua functions should
    be displayed in a single section.

[33mcommit 293b00798ef99b5e61935cd95e5665eedfffd323[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Feb 15 12:32:45 2018 +0100

    doc: document lua TLS functions

[33mcommit e3c5784dd53f1210a3abe26eb35143d8cc07d4c0[m
Author: Pascal Delalande <pdl35@free.fr>
Date:   Sat Mar 31 18:20:16 2018 +0200

    doc: minor updates (tls custom, TODO removal, ftp/smb file rules)

[33mcommit e834d94fd28b55abc313b7a38f9e8a63717c6e17[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 30 13:36:59 2018 +0200

    detect/pktvar: clean up keyword parsing

[33mcommit 83bf60d8972b20ba79ad2262fa06febbebbaa023[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 30 10:24:33 2018 +0200

    doc: add ntlmssp, kerberos and other setup fields

[33mcommit 5de77e3102acb991b20e2e24313d689135b4d237[m
Author: Richard Sailer <richard_siegfried@systemli.org>
Date:   Fri Mar 16 18:34:43 2018 +0100

    lua output: Update example script to match style of user doc examples

[33mcommit dc07c1fe1322eb8d6fafe1bbe7ca807bac022d48[m
Author: Richard Sailer <richard_siegfried@systemli.org>
Date:   Fri Mar 16 18:43:15 2018 +0100

    lua output doc: Use more descriptive variable names in the examples
    
    This also removes the "args" parameter of the hooking functions in the examples,
    since this parameter is unused in all functions.
    It would not be very helpful anyways since 3 of the 4 functions don't get passed
    any parameters. The only exception is init() which gets a table containing:
      script_api_ver = 1

[33mcommit 3307f7a94e1ce8ec83e18aa6544839defd39a644[m
Author: Richard Sailer <richard_siegfried@systemli.org>
Date:   Fri Mar 16 18:39:07 2018 +0100

    lua output doc: Add explaining introduction text

[33mcommit e09027915a216b900525a10d3ae72fa9fcf34490[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 30 09:29:48 2018 +0200

    doc: fix json formatting in smb doc

[33mcommit 10a360280f09b69185629cd4652620f84e950ddb[m
Author: Alexander Gozman <a.gozman@securitycode.ru>
Date:   Thu Mar 29 15:55:52 2018 +0000

    Print syslog format with SCLogDebug() instead of printf()

[33mcommit 21078521f868ca10ca1e99c07eb0afb6263dec28[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed Mar 28 23:26:20 2018 +0200

    app-layer-ssl: remove possibility to overflow HAS_SPACE macro

[33mcommit 598ef96b7b1e9ae9e778fcbdea3d9d0fb99ad67c[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu Mar 29 17:57:42 2018 +0200

    app-layer-ssl: really fix CID 1433623

[33mcommit 67e81a9555dfd51c55e521a546aa354ed320641e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 29 16:20:22 2018 +0200

    doc: initial smb eve documentation

[33mcommit 78437375c4351d5b8852bbaf3a1bcdd064f21908[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 29 15:31:47 2018 +0200

    doc: add by_either to suppress explanation

[33mcommit 2c259f223938a3f1cf37be1f9dc64495d826b99f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 29 15:13:35 2018 +0200

    doc: add smb section to yaml

[33mcommit 13bdcd52494513fb29bea3254ed4a1e7a20947f8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 29 15:13:18 2018 +0200

    doc: minor fix

[33mcommit 900c27e2355e1e9f97351325edbf951d97d12c4e[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed Mar 28 22:29:15 2018 +0200

    app-layer-ssl: fix use-after-free (CID 1433623)
    
    Ja3BufferAddValue frees the buffer on error, so there is no point
    in doing it twice (use-after-free).

[33mcommit fc0e339467078709bf616cb7662bee53ff45ba29[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed Mar 28 22:25:46 2018 +0200

    app-layer-ssl: fix use-after-free (CID 14336229)
    
    Nullify JA3 buffer on free to avoid use-after-free vulnerability.

[33mcommit 3b474ac59927d5662fe15aae7610174d82e337cf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 28 15:24:18 2018 +0200

    tls: work around coverity warnings

[33mcommit 1edd9d19fcf23998a5cc6236accaea689b5ecb60[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 29 13:09:26 2018 +0200

    doc: add SMB to file extraction. Minor improvements.

[33mcommit b4771150b8e5f1b33823697a7abcff6511d6ae5d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 29 13:06:31 2018 +0200

    doc: update suricata-update screenshot

[33mcommit b531e7725da188f15d7abe4b345b5232e70dbf4c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 29 10:15:34 2018 +0200

    doc: improve suricata-update docs now that its bundled

[33mcommit ac1ed24cb429c4137c9fac9d2142967da84f98b8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 29 10:01:50 2018 +0200

    doc: improve making sense of alerts

[33mcommit ccde621ceb3f010c5628215b7e3c954cf1df1bb1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 28 21:37:44 2018 +0200

    doc: add suricata-update to intro for rules

[33mcommit 5c1a2b53f99236ed77fa396e31efd290539fd2fc[m
Author: Alexander Gozman <a.gozman@securitycode.ru>
Date:   Mon Mar 26 14:14:48 2018 +0000

    Bug #2466: map SC_LOG_CONFIG level to syslogs LOG_DEBUG

[33mcommit 43617dc11ff37605b27e3c42c354555babaa8694[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Mar 26 07:55:10 2018 -0600

    suricatasc: move lib to suricata.sc
    
    Pull the sc python package under the suricata top level
    package. A suricatasc package still exists for compatibility
    that pulls in suricata.sc.

[33mcommit 4a115f4d56e63a6371552830e760b8fdb6be9ffe[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Mar 26 07:49:17 2018 -0600

    suricatasc: allow to run from non-standard python locations
    
    When we install to a non-standard prefix, the Python modules
    are not in the standard location requiring the PYTHONPATH
    to be fixed up.
    
    This wa a pre-existing issue with suricatasc, and not due to
    the move into the python directory.

[33mcommit a7d90162d13d08161fa27f1f53766601bef07ba0[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Mar 26 07:38:54 2018 -0600

    suricatasc: move into python/
    
    Will be built and installed as part of the Python code used
    for suricatactl, which is intended to be the generic place
    for all Python utility code that gets installed with Suricata.
    
    No change to suricatasc code.

[33mcommit 7f0cfc0717f8b39f50d9846b386005ade89cb966[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu Mar 22 13:27:00 2018 +0100

    app-layer-ssl: use BIT_U32 for flags

[33mcommit 3e597512eaa592c18a554477d57f7048b77f53c4[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu Mar 22 12:56:22 2018 +0100

    app-layer-tls-handshake: remove since it is no longer needed
    
    Remove this file and all its content, since the functionality
    was reimplemented in app-layer-ssl.

[33mcommit e93fef5c44e24a0dec8366b7b194d0bcbd345f30[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed Mar 21 23:29:01 2018 +0100

    app-layer-ssl: reimplement function for decoding certificates
    
    Do a complete rewrite of the function for decoding the SSL/TLS
    certificate from the handshake.

[33mcommit d9ddae4592069592ecd1c0505abb874959951bd6[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu Mar 22 13:17:17 2018 +0100

    tls: replace variable in header file with TAILQ_EMPTY()
    
    Use TAILQ_EMPTY to check if a certificate exists instead of
    setting two variables in the app-layer-ssl header file for
    that purpose only.

[33mcommit f40fc0293b1fd61fbab0ae91849077d214006116[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 27 10:31:28 2018 +0200

    smb: minor optimizations

[33mcommit f201a3761f7360b41cc01029298034025aaa746e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 26 11:50:58 2018 +0200

    rust: remove multi level 'experimental'
    
    Don't treat 'external' parsers as more experimental. All parsers
    depend on crates to some extend, and all have C glue code. So the
    distinction doesn't really make sense.

[33mcommit d222b9ae6c0a8d64f6a6f0d9ff832494b3a88605[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Thu Mar 15 14:06:08 2018 +0100

    IKEv2: Use JSON arrays instead of comma-separated values

[33mcommit bf66948ad76db33c568882c064876d09c0dbdb0d[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Thu Mar 15 08:27:17 2018 +0100

    IKEv2: suppress some debug output

[33mcommit 3fbfb22204510e9346f83d8f7b33451e8bb58589[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Tue Mar 13 13:24:38 2018 +0100

    IKEv2: remove events counter

[33mcommit 6eb48e1e93393cbeb7347cc47b68f67fbcb2f7fd[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Tue Mar 6 08:03:11 2018 +0100

    Add ikev2 to userguide

[33mcommit 4e4cf00c07dfa403f7a736945635546b70367bd0[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Fri Mar 2 19:35:49 2018 +0100

    Remove the 'experimental' mark for IKEv2

[33mcommit f65fafa34b8f9a04a350c80e01df57bab14d9ab8[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Fri Mar 2 17:44:06 2018 +0100

    IKEv2 logger: use Debug trait for IkePayloadType

[33mcommit d94346282cd7eb0f30089cefae58271d791f76ca[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Fri Mar 2 09:20:33 2018 +0100

    Add logger for IKEv2

[33mcommit d16397ce618bc871d700e3012745097ca878dae4[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Fri Mar 2 22:16:48 2018 +0100

    Add rules for IKEv2 events

[33mcommit c99b9462d712f92f12c573a59a55024225267beb[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Wed Jan 31 08:13:41 2018 +0100

    Add new parser: IKEv2
    
    Add a new parser for Internet Key Exchange version (IKEv2), defined in
    RFC 7296.
    The IKEv2 parser itself is external. The embedded code includes the
    parser state and associated variables, the state machine, and the
    detection code.
    
    The parser looks the first two messages of a connection, and analyzes
    the client and server proposals to check the cryptographic parameters.

[33mcommit b810275b162f47340069c22ac4aed01ee302795f[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Mon Jan 15 22:52:39 2018 +0100

    Rust: fix prototype of parsing function (make pstate mutable)

[33mcommit 8e8f0db19216ad1297a0a2442c79364b471a8ce0[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Mon Jan 15 22:51:39 2018 +0100

    Rust: expose function AppLayerParserStateSetFlag

[33mcommit 8f926fb75a5b95e17218eed5423875e50b1b15a2[m
Author: Renato Botelho <garga@FreeBSD.org>
Date:   Thu Mar 22 11:02:42 2018 -0300

    configure: allow to disable libnss and libnspr
    
    Let user chose to disable libnss and libnspr support even if these
    libraries are installed in the system. Default remains to enable when
    libraries are found and disable parameter were not used

[33mcommit 91307dafd95b1e7f366e9fed25fe7f5d4282692d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 21 15:50:11 2018 +0100

    nfs/rpc: fix reponse parsing

[33mcommit b1e2783788c183e78e490d8711962dca2f4587dd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 20 09:29:41 2018 +0100

    auth/krb5: move kerberos5 wrapper to rust root
    
    Make it available outside of just the SMB parser.

[33mcommit 4d58aaae90573dc7d860e640e6ec650a6e0248ef[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 24 16:17:20 2018 +0100

    smb: clean up partial read/write record handling

[33mcommit aa8d64c2b8026444d3cabb4495794d3d29f17acf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 24 10:30:26 2018 +0100

    smb: improve skip handling
    
    When skipping records the skip tracker could underflow if the record
    parsing had more data than expected.
    
    Enforce the calculation by moving it into a method and make the actual
    fields private.

[33mcommit eac7a92200c79cf64810238dc227ddcf15dbe696[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 24 10:15:52 2018 +0100

    smb2: improve read/write record parsing
    
    parse_smb2_response_read()/parse_smb2_response_write() can be called on
    incomplete data, so they didn't use the read/write length field to grab
    the data field. Instead it just used rest(). However in some cases
    SMB2 records have trailing data, which would be included in the
    READ/WRITE data.
    
    This patch addresses this by using the length field if enough data is
    available.

[33mcommit 97c224d193dfb7f4811425a4dda64519b7776560[m[33m ([m[1;33mtag: suricata-4.1.0-beta1[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 22 11:23:34 2018 +0100

    changelog: update for 4.1.0-beta1

[33mcommit 26e807ca34e5a93013019b02daa80c1eb4b58069[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 13 11:41:33 2018 +0100

    doc: fix http_header_names example

[33mcommit 1e56cfe08e5dcde9b2c335457337b9026a98b3bf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 21 19:29:30 2018 +0100

    threshold: don't touch globals after init
    
    Don't free/reinit pcre globals per tenant. Others may be using them
    at the same time, or try to free/reinit them at the same time.

[33mcommit efdc592172008d99cff4aaaa47c3e528b27564d3[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Mar 16 22:39:17 2018 +0100

    detect-tls-sni: use *_Register2 API functions
    
    Use *_Register2 API functions when registering 'tls_sni' detection
    keyword.

[33mcommit b479d1d47c2d194af16ab2d5f4e8e9dde609084f[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Mar 16 22:17:34 2018 +0100

    detect-tls-cert-serial: use *_Register2 API functions
    
    Use *_Register2 API functions when registering 'tls_cert_serial'
    detection keyword.

[33mcommit 5c96e1df95166a890d0383e35557a24104c70559[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Mar 16 22:08:03 2018 +0100

    detect-tls-cert-subject: use *_Register2 API functions
    
    Use *_Register2 API functions when registering 'tls_cert_subject'
    detection keyword.

[33mcommit b1dd41c9cda6855a8e9e947ed6feef1b30f43f7a[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Mar 16 22:00:19 2018 +0100

    detect-tls-cert-issuer: use *_Register2 API functions
    
    Use *_Register2 API functions when registering 'tls_cert_issuer'
    detection keyword.

[33mcommit c3a329d6e980b22e1e72e6f7a5f434e643afc151[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Mar 16 21:48:25 2018 +0100

    detect-tls-cert-fingerprint: use *_Register2 API functions
    
    Use *_Register2 API functions when registering 'tls_cert_fingerprint'
    detection keyword.

[33mcommit 53f63f749805a485a772fb732d1513e2876cb566[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 20 08:27:24 2018 +0100

    nfs/rpc: improve RPCv2 parser, add GssApi
    
    Improve RPCv2 credentials parsing. Add GssApi and turn creds into
    an enum.
    
    Minor cleanups and optimizations.

[33mcommit 47ebef3af8be22a08e6321a9557d35975b97902e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 17 22:17:41 2018 +0100

    nfs: minor cleanup

[33mcommit 56e7afc4f7861d4cc274e637095025ed6b8fa5f8[m
Author: Antoine LUONG <antoine.luong@c-s.fr>
Date:   Wed Feb 21 18:48:26 2018 +0100

    prelude: swap msg and class_msg in Prelude alert

[33mcommit caa2903f1fd543a89ee4edb3b6e90a2f22c9bbbf[m
Author: Antoine LUONG <antoine.luong@c-s.fr>
Date:   Tue Feb 20 16:36:13 2018 +0100

    prelude: fix duplicated analyzer in Prelude alert

[33mcommit 697a5a19780126526b9bafa29d538785ad4d6ec2[m
Author: Danny Browning <danny.browning@protectwise.com>
Date:   Tue Feb 27 08:46:24 2018 -0700

    pcap/file: fix missing files stopping engine #2451
    
    https://redmine.openinfosecfoundation.org/issues/2451
    
    When a missing (or empty named) file is passed to source-pcap-file while
    using unix socket, the pcap processing thread will incorrectly be stopped,
    and no longer available for subsequent files.

[33mcommit 2cf2387e313cc42aac48dad81231fee4f832b86c[m
Author: Alexander Gozman <a.gozman@securitycode.ru>
Date:   Sun Jan 21 11:21:40 2018 +0000

    rules: optimize bidir rules with same src/dst
    
    As an optimization, reset bidirectional flag for rules with same src and dst.
    If one created bidirectional rule like 'alert tcp any any <> any any ...',
    the rule was checked twice (for each packet in every direction). This is
    suboptimal and may give duplicated alerts. To avoid this, bidirectional
    rules are now checked for the same src and dst (addresses and ports) and
    if it's the case, the rule is treated as unidirectional and a corresponding
    message is logged.

[33mcommit 0a72d5be96cc7500acfe6a3b108fa2472252227c[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Mar 20 22:15:27 2018 +0100

    doc: fix typo in unix socket doc
    
    Also fixes a dead link to code.

[33mcommit 975f413308ff8298de502e716a8c55b4e7700d45[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Mar 20 22:06:19 2018 +0100

    doc: more info on unix socket rule reload

[33mcommit e2aab10d29683f99da8dcb290467dd8622121c53[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Mar 20 21:55:59 2018 +0100

    doc: fix typo in ebpf xdp doc

[33mcommit 66b37d8689315140bea9924d6a5389bf6d42788d[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Mar 20 21:04:20 2018 +0100

    suricata.yaml: fix some spelling mistakes

[33mcommit ba24bb82faa81d01ed00e4caa6262d6ce8013ffa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 20 15:49:00 2018 +0100

    der: don't overwrite errcode
    
    If the code has already been set it is more detailed than the more
    generic 'invalid object'.

[33mcommit cbcbc0f6b05e6dffb3f538ec1b33566be4517920[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Jan 31 15:42:42 2018 -0600

    suricata-update: bundle suricata update
    
    Add autoconf/automake support for installing suricata-update
    if found in the top level suricata-update.

[33mcommit c130820bff1288ad6dca66ea5da0e4d4a0b5389d[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Feb 21 12:06:17 2017 +0100

    conf: user-configurable umask setting
    
    Make umask user-configurable by setting 'umask' in suricata.yaml.

[33mcommit 3140e4598ad1f0960d33dbf0815eeed9c8ea1166[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Thu Mar 1 18:58:41 2018 +0100

    DER parser: ensure errcode is set for every return path

[33mcommit 2d34e402c017f395f225e99874f5ca4a0c3b22f9[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Thu Feb 15 15:00:35 2018 +0100

    DER parser: fix undefined behaviors and  add missing length tests
    
    Fix several undefined behaviors, caused by possible use or read of
    uninitialized memory.

[33mcommit d6a98aa1c3bcd72d757c884915edadb67121e762[m
Author: Antti Tönkyrä <daedalus@pingtimeout.net>
Date:   Mon Mar 19 12:18:56 2018 +0200

    stream-tcp: add counters for midstream pickups
    
    If midstream pickups are enabled this will help in discovering how
    many midstream pickups are being done by Suricata.

[33mcommit 47a7ebbbc2a97c2e2ae5e1bb0dfd3853960d89c5[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu Dec 28 22:45:50 2017 +0100

    doc: add JA3 fields to the TLS logger documentation

[33mcommit d55e4555042fe910fe32b7a78c6ef0d3a165aa6d[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu Dec 28 22:40:27 2017 +0100

    eve: add JA3 fields to TLS JSON logger
    
    Add JA3 object to TLS JSON logger (extended log).

[33mcommit fb0bfb614f60dba746152311393ac7323426e753[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu Dec 28 21:51:44 2017 +0100

    doc: add documentation for Ja3GetString Lua function

[33mcommit 8339ed338fcc107c70c605ce05ff6bf52cf5af41[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu Dec 28 21:45:08 2017 +0100

    lua: add Ja3GetString function
    
    Add Ja3GetString() to return the content of the JA3 string buffer from the
    TLS session.
    
    Example:
    
      function init (args)
          local needs = {}
          needs["protocol"] = "tls"
          return needs
      end
    
      function setup (args)
          filename = SCLogPath() .. "/ja3_string.log"
          file = assert(io.open(filename, "a"))
      end
    
      function log (args)
          ja3_string = Ja3GetString()
          if ja3_string == nil then
              return
          end
    
          file:write(ja3_string .. "\n")
          file:flush()
      end
    
      function deinit (args)
          file:close()
      end

[33mcommit 25145530987cbb54f1a7d303ca6da9a5c7ef67e6[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu Dec 28 21:21:16 2017 +0100

    doc: add documentation for Ja3GetHash Lua function

[33mcommit 195fa9d272fb397929bf31d9c54bed9165553842[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu Dec 28 21:06:28 2017 +0100

    lua: add Ja3GetHash function
    
    Add Ja3GetHash() to return the content of the JA3 hash buffer from the
    TLS session.
    
    Example:
    
      function init (args)
          local needs = {}
          needs["protocol"] = "tls"
          return needs
      end
    
      function setup (args)
          filename = SCLogPath() .. "/ja3_hash.log"
          file = assert(io.open(filename, "a"))
      end
    
      function log (args)
          ja3_hash = Ja3GetHash()
          if ja3_hash == nil then
              return
          end
    
          file:write(ja3_hash .. "\n")
          file:flush()
      end
    
      function deinit (args)
          file:close()
      end
    
    In the (useless) example above, each JA3 hash is logged to a log file.

[33mcommit a357f52fa5aa9f79d061b5560afe4df0458d81fd[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Sun Dec 10 16:47:07 2017 +0100

    doc: add documentation for ja3_string keyword

[33mcommit 6e23ae230bb9f88411032ff494ae3343f820ac0e[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Sun Dec 10 16:05:37 2017 +0100

    detect: add (mpm) keyword ja3_string
    
    Match on JA3 string using ja3_string keyword, e.g:
    
    alert tls any any -> any any (msg:"JA3 string test";
            ja3_string; content:"65-68-69-102"; sid:1;)

[33mcommit 38cc6f595fbea20b5f70a42cc7500492eb19d3b7[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Sun Dec 10 16:40:58 2017 +0100

    doc: add documentation for ja3_hash keyword

[33mcommit 6c7aacce9e4be2e884ab3034f496fcc770a78943[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu Dec 7 09:30:03 2017 +0100

    detect: add (mpm) keyword ja3_hash
    
    Match on JA3 hash using ja3_hash keyword, e.g:
    
    alert tls any any -> any any (msg:"JA3 hash test";
            ja3_hash;
            content:"e7eca2baf4458d095b7f45da28c16c34";
            sid:1;)

[33mcommit d4af90032e30ae7d1ad706fb19c781827656f5b6[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Dec 26 13:33:05 2017 +0100

    util-ja3: add function to check if JA3 is disabled

[33mcommit 0c16cd01200a6ae576e5fdcd53506928eda632c5[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu Nov 30 11:04:03 2017 +0100

    app-layer-ssl: generate JA3 fingerprints
    
    Decode additional fields from the client hello packet and generate
    JA3 fingerprints.

[33mcommit 3f0dea582d6c08c95d00981616c76651a9a7933e[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Mon Nov 27 12:23:57 2017 +0100

    app-layer-ssl: split function into multiple smaller functions
    
    Split 'TLSDecodeHandshakeHello' into smaller functions to make
    it easier to read the code when the function grows in size.

[33mcommit ea1e13cb00894717eb6fba9bf6785a71955780c9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 16 14:42:58 2018 +0100

    smb: suppress notice messages

[33mcommit 576b8ef7227133d97cb3632f11d8e954a0166754[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Fri Mar 16 07:50:12 2018 +0100

    SMB: simplify code

[33mcommit cf5de0c58e340435dfeeb95079f61757e1c4c950[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Thu Mar 15 08:16:24 2018 +0100

    SMB: use String::from_utf8_lossy in logging functions

[33mcommit b5529e4ffb7320c8ca583edf941e6fbc919e02f5[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Thu Mar 15 08:24:10 2018 +0100

    SMB: use kerberos-parser to extract Real and PrincipalName

[33mcommit 0dfb3f0e7fa64b914c8d9daa48d4e57c0d252217[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 15 16:50:38 2018 +0100

    smb1: extract rename info from TRANS2
    
    Exclude TRANS2 from generic TX lookup bypass.

[33mcommit 8eeda113c8551b510b6e80453a476fd96654cd40[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 15 14:17:19 2018 +0100

    smb1: add parsing for RENAME command

[33mcommit 7b61f2c589117412744748f8a059c23c2b4cf090[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 15 11:11:07 2018 +0100

    smb2: log renames

[33mcommit 15978d4e859ffa37fb640d626767d211d33c14a9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 15 07:37:56 2018 +0100

    smb: if filename is missing, use '<unknown>'

[33mcommit c60decd678f9d8f155fec65b0d5dcc67efc61487[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 14 16:58:45 2018 +0100

    rust/dns: default to eve log version 2 for rust

[33mcommit 27fd5214204fa5e6d891b27e223635670bbd2ad2[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Feb 2 12:46:13 2018 -0600

    eve/dns/v2: support eve/dns v2 in rust

[33mcommit 57d9574839f089624a6c5ed39a754ca3011c974c[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Feb 2 12:45:35 2018 -0600

    rust/json: expose more of jansson to rust

[33mcommit dfdfc478abb89a05dc9f1373a484f4ac9aac4243[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Feb 2 11:45:20 2018 -0600

    eve/dns-v2: only log responses for enabled types
    
    This changes the logic a bit for v2, checking the rrtype of the
    query to see if the response should be logged.

[33mcommit 769f9721856e4bee5d0ef7dca17da6f702f94677[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Feb 2 11:08:00 2018 -0600

    eve/dns-v2: log authorities as a list
    
    Log the authorities just like the answers, as a list under
    the authorities key.

[33mcommit fb66d4575406310bfe15335a75924e20c9f82206[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Wed Dec 20 11:27:48 2017 +0100

    doc: introduce dns compact logging

[33mcommit 92db7be502bc80294151a0a2169b55175603f7a4[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Mon Aug 7 10:31:16 2017 +0200

    output-json-alert: add dns info
    
    This changes LogQuery and LogAnswer functions
    returning a json object instead of writing it in a log file.
    In this way it's possible to reuse them to add dns info
    into an alert.
    
    The following is an alert record with dns:
    
    {
      "timestamp": "2017-07-31T15:01:17.885281+0200",
      "event_type": "alert",
      "src_ip": "8.8.8.8",
      ...
      "dns": {
        "query": [
          {
            "type": "query",
            "id": 25394,
            "rrname": "notifications.google.com",
            "rrtype": "A",
            "tx_id": 0
          }
        ],
        "answer": {
          "type": "answer",
          "id": 25394,
          "rcode": "NOERROR",
          "answers": [
            {
              "rrname": "notifications.google.com",
              "rrtype": "CNAME",
              "ttl": 3599,
              "rdata": "plus.l.google.com"
            },
            {
              "rrname": "plus.l.google.com",
              "rrtype": "A",
              "ttl": 299,
              "rdata": "216.58.205.174"
            }
          ]
        }
      }
    }

[33mcommit 6231ffc110dcc4b05186e6f49877082c4606faf5[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Thu Aug 10 14:21:56 2017 +0200

    output-json-dns: add json logging functions
    
    This adds some public functions needed to add
    dns information when an alert is logged.

[33mcommit 756bed06a8f9d879fdd2b138a168223f3096698d[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Wed Aug 2 15:55:01 2017 +0200

    output-json-dns: add new output formats for v2
    
    This adds two new output formats that permits to reduce
    the number of line logged for a dns answer because
    actually an event is logged for each answer.
    With this patch, only an event that contains all the answers
    is logged.
    
    The formats are named 'detailed' and 'grouped'.
    
    The first format provides a list of answers with
    the following fields:
    - rrname
    - rrdata
    - ttl
    - rdata
    
    The second format provides a list of record data grouped
    by their type.
    
    The output below is an example of the formats:
    
    {
      "timestamp": "2017-11-29T10:27:18.148282+0100",
      "flow_id": 268864910185905,
      "in_iface": "wlp2s0",
      "event_type": "dns",
      "src_ip": "192.168.1.254",
      "src_port": 53,
      "dest_ip": "192.168.1.176",
      "dest_port": 52609,
      "proto": "UDP",
      "dns": {
        "type": "answer",
        "id": 3654,
        "rcode": "NOERROR",
        "answers": [
          {
            "rrname": "wordpress.org",
            "rrtype": "A",
            "ttl": 544,
            "rdata": "66.155.40.249"
          },
          {
            "rrname": "wordpress.org",
            "rrtype": "A",
            "ttl": 544,
            "rdata": "66.155.40.250"
          }
        ],
        "grouped": {
          "A": [
            "66.155.40.249",
            "66.155.40.250"
          ]
        }
      }
    }

[33mcommit 869b7c0e0cb3b62bb3a88f89ef90979e1d17e0bd[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Tue Nov 28 09:51:48 2017 +0100

    output-json-dns: add new configuration
    
    This patch adds a new configuration for dns,
    introducing a "version" that permits to switch
    between the new and old format to provide
    backward compatibility.
    
    The new configuration is made up of these new fields:
    - version
    - requests (query)
    - response (answer)
    - types (custom)

[33mcommit c2236ea2b31deb683319481cf9312abdaf42764b[m
Author: David DIALLO <david.diallo@gmail.com>
Date:   Thu Feb 22 00:29:33 2018 +0100

    modbus: Support Unit Identifier
    
    When destination IP address does not suffice to uniquely identify
    the Modbus/TCP device.
    
    Some Modbus/TCP devices act as gateways to other Modbus/TCP devices
    that are behind this gateways.

[33mcommit 71742ed52bac6053892746b2285de0a100b419f6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 14 21:59:51 2018 +0100

    smb: share can't be <share_root>

[33mcommit bc193242ad3d4a7b96516823b8a67912200fa94e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 14 13:47:07 2018 +0100

    smb1: add OPEN_ANDX command name for logging

[33mcommit 32b19fac99d4602b392c03118e98a67ad3cf98e3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 14 13:16:38 2018 +0100

    smb2: don't log/track each READ/WRITE/etc

[33mcommit fb986abe81f5948724eb152318ec9b592120e6b5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 14 10:26:40 2018 +0100

    smb: log file FID/GUID as fuid

[33mcommit 67f0e27ca4b8259c2d06b53654a61784f735e431[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 14 09:05:12 2018 +0100

    smb: add smb records to fileinfo

[33mcommit 816bd022a6996267e72d7d73fda3fc277074f9a1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 13 17:34:00 2018 +0100

    smb1: improve non nt-status handling
    
    Support SRV error, with a couple of codes.
    Rename statux field to status_code.

[33mcommit 0519807639f9dd3b6feef57f90cd153771351531[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 13 16:36:45 2018 +0100

    smb1: ignore tree_id in session setup

[33mcommit 286c054472e6253595a4e62aa2fd3a13cc09c463[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 13 13:44:35 2018 +0100

    smb: improve nbss/smb record detection

[33mcommit 7ab071a58da141d4316c9452337114c0414b49dd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 13 13:36:19 2018 +0100

    rust/smb: implement minimal record parsing in probing

[33mcommit ff398deda9ace22c20724c78eaac25eb38de8420[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 13 13:24:45 2018 +0100

    rust/smb: improve protocol detection
    
    Register both pattern based detection and probing parsers.

[33mcommit 251a8e7debbd5cc5276c7984a6a9928f75ec897e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 13 13:10:42 2018 +0100

    smb: add smb to default eve-log config

[33mcommit 283be3cade48896bfe27fd11946a51fd6e967113[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 13 08:05:03 2018 +0100

    smb2: break out ioctl handling

[33mcommit bf08285602ed6a010d5a537310117fe00e291ed1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 12 21:05:07 2018 +0100

    smb2: parse async records

[33mcommit 5c260207147de4aa4cea27ab8552fdec635fd307[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 12 21:04:54 2018 +0100

    smb2: add ioctl transactions to log the funcs

[33mcommit 75265ec37614e6aa6e065bd17de8bef7d1609d7f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 12 18:09:12 2018 +0100

    smb2: map ioctl funcs to names
    
    List is based on Wireshark's list.

[33mcommit 7cd66516f0fed144d04942eb9a95a6efda4d8647[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 12 14:32:08 2018 +0100

    smb: use formal MS names for disposition

[33mcommit f7ed749d4f66ee96c546b46643d0d41109fa2f20[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 12 14:31:49 2018 +0100

    smb: disable debug output

[33mcommit eed492547c605fcdc85365f472cb46e1fcd9758f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 12 09:56:12 2018 +0100

    smb1: extract server guid from negotiate

[33mcommit 6d56edc3de480113e2db5f19b10827601bc92849[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 12 09:32:17 2018 +0100

    smb2: log client and server guid from negotiate

[33mcommit c56f5e11ca2748c700ba37e7d5a26955403d91bb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 12 08:28:21 2018 +0100

    smb2: log share type

[33mcommit d75ebdb9814eafc520c988a93eacc0d6b8f5c437[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 12 07:57:06 2018 +0100

    smb: log create empty filename as '<share_root>' like Bro does

[33mcommit fcbeab70a4cddd87395c10ff9b9ca5a50f369439[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 12 07:56:29 2018 +0100

    smb1: log create 'service' fields

[33mcommit 90e2abaac4692d35acd626465782cf2b5c36e9fb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 10 12:52:56 2018 +0100

    smb1: use generic string parsing for trans

[33mcommit 76917a87324aaab55c1fa1c8bf1417f3957c323c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 10 11:18:48 2018 +0100

    smb1: generic smb string parse func

[33mcommit 668c747aee1fe2fb666e63b1c6788b7c7e5a1a4c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 10 11:10:25 2018 +0100

    smb1: more exact tree connect record parsing

[33mcommit 0ed00cf104f1cd776898c69237d5ffe25152b3f1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 10 09:57:44 2018 +0100

    smb: move common parsing funcs into own file

[33mcommit 1c701dc50e1ea6ed24a2b46752e1b6a49fcbee10[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 10 09:42:55 2018 +0100

    smb: make string parsing functions public

[33mcommit 1d4aac1d4d01e5a5e2a170123e7e65cff4d68597[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 9 17:09:23 2018 +0100

    smb1: set event on empty/malformed dialect

[33mcommit c91242e71cae8059840e0439e2f653476f98d89f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 9 16:05:17 2018 +0100

    smb: rename file to filename in output

[33mcommit caf29e92b3f314f552bc9fece4f2e7a542551ed5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 9 16:04:22 2018 +0100

    smb1: parse and log timestamps in CREATE

[33mcommit 0e05ef7369e3f7204cbac728e2670abea607f9ca[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 9 10:27:13 2018 +0100

    smb2: parse and log timestamps in CREATE

[33mcommit 28f16e38ac2a310e3e562a373e6a3ea9a7cf6daa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 7 18:23:17 2018 +0100

    smb1: disable 'generic tx's for common commands
    
    Don't create a generic TX for each READ, WRITE, TRANS, TRANS2,
    except if they cause events to trigger.

[33mcommit 78cd92a933cc280951a846eed6e4db5b7ddf034e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 7 15:29:49 2018 +0100

    smb: generic event per trans/read/write for tx events

[33mcommit 05992f1772e70621f3fb64d210a45ee81ad2afd2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 7 11:32:04 2018 +0100

    smb: fix event handling when no tx is available

[33mcommit be615c9fbc386c85a2714f3e27edcfd538bcaba6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 6 10:13:40 2018 +0100

    smb: small cleanups, fixes and optimizations

[33mcommit dab055d8c83b409a0046766e29717ee45d56f25d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 2 17:19:18 2018 +0100

    smb: update to der-parser 0.5.1

[33mcommit 0d69e7b8c286815e69dbb613269ec8bc9049baca[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 1 12:47:49 2018 +0100

    smb: remove unused dialects from state

[33mcommit ad1bc7f473610977b992ed6cef7604a2cb2925fe[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 1 12:39:15 2018 +0100

    smb1: minor debug improvment

[33mcommit a44504a1bf0bbef07fa640e562f0229a08346963[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 1 12:38:53 2018 +0100

    smb: redo gap catch up handling

[33mcommit 7114d5d25be3fc1df5dfec1028bd2b88ff5ee834[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 1 10:55:21 2018 +0100

    smb1: parser cleanups

[33mcommit d9e43d3e633e398812bd858763e26585ac1deec0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 1 10:37:06 2018 +0100

    smb: cleaner server component parsing

[33mcommit ecbf10da70c0ecbcedd2663262ef389807064b0b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 1 10:31:07 2018 +0100

    smb2: improve write error handling

[33mcommit b34392051dd7c5c75c64144294bb4d496d4a491f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 1 10:30:02 2018 +0100

    smb3: parse transform records

[33mcommit 894a73ee066acd00229f053b514bced69c6cfce4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 1 08:50:36 2018 +0100

    smb2: add missing commands and improve ioctl err handling

[33mcommit 170edf7c445cfce8a608224227286b73035b1491[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 1 08:50:04 2018 +0100

    smb1: improve error handling

[33mcommit 7ceb67138f495aaf192f64b6fca3f72f6dd5ca28[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 28 21:19:20 2018 +0100

    smb: add status

[33mcommit 98b926bf728d09b9efd04b96d2f0507dcc1a6e1a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 28 18:38:33 2018 +0100

    smb1: implement WRITE_AND_CLOSE

[33mcommit 595557eb8d29a9a3fbc17985dfd459e9d20fecfe[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 28 17:56:01 2018 +0100

    smb1: locking andx may have no response

[33mcommit 7dff9b99696fe52eb8a11d20144056a41527ca3c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 28 17:25:08 2018 +0100

    smb/nbss: work around bad traffic

[33mcommit 8bef1208989d47c03e07589dae204cd4e995e755[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 27 18:12:07 2018 +0100

    smb: session setup improvements
    
    Improve ntlmssp version extraction and logging, make its data structures
    optional. Extract native os/lm from smb1 ssn setup.
    
    Move session setup handling into their own files.
    
    Only log auth data for the session setup tx.

[33mcommit 75d7c9d64af9a758c3b6f76c474a787b4e1d1d85[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 26 13:39:42 2018 +0100

    rust/smb: initial support
    
    Implement SMB app-layer parser for SMB1/2/3. Features:
    - file extraction
    - eve logging
    - existing dce keyword support
    - smb_share/smb_named_pipe keyword support (stickybuffers)
    - auth meta data extraction (ntlmssp, kerberos5)

[33mcommit 50a182194a20a9a733d637b83a35ab5f2876c63c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 19 17:30:36 2018 +0100

    eve: log pcap filename

[33mcommit 19988310d1dfe941be7fd9231a64c98aba7391d2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 8 08:35:16 2018 +0100

    detect: fix tx iterator logic in detect
    
    The 'tx_id' variable was used to be passed into the IterFunc as a
    minumum tx to return. The IterFunc could then return either the tx
    for that id, or a later one if that turned out to be the first available
    tx.
    
    The tx_id however, was still used for some things as if it was the
    current tx id. Most importantly for setting the tx id for alert
    ammending. So this could lead to alerts with missing or wrong
    applayer records.

[33mcommit fec5997d1d6228401b2941cf87eddf694637aaa5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 8 08:48:39 2018 +0100

    mingw: fix compile error

[33mcommit 748fda196667416b2f6caf2289df910618c262ca[m
Author: Richard Sailer <richard_siegfried@systemli.org>
Date:   Thu Feb 22 01:53:16 2018 +0100

    output/lua: better lua output setup error handling
    
    If suricata was started with --init-errors-fatal and an error occured
    during setup of lua output (like if lua scripts configured in the conf file
    don't exist or are not readable) suricata continued, which did not reflect
    "init errors fatal" very well.
    
    This fix makes the suricata initialization abort and send an error message
    in such cases.
    
    For details see:
    https://redmine.openinfosecfoundation.org/issues/1503

[33mcommit 7910b6689e80a1b2ad43b611807ecaf32a6d05be[m
Author: Richard Sailer <richard_siegfried@systemli.org>
Date:   Thu Feb 22 01:27:59 2018 +0100

    output/lua: remove unnecessary detect.h include
    
    output-lua.c contained an include of detect.h.
    
    Since we don't (and shouldn't) call any functions from detect.c in output-lua.c
    and such coupling is generally unwanted this patch removes that include.

[33mcommit b69acaadf5a24f594153c28ee6fc8fb6d793f9eb[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Tue Mar 6 21:33:33 2018 +0100

    Rust: add 'debug' feature
    
    The 'debug' feature is enabled if suricata was configured with the
    --enabled-debug' flag.
    If enabled, the SCLogDebug format and calls the logging function as
    usual. Otherwise, this macro is a no-op (similarly to the C code).

[33mcommit 04e87e1a9f0779300ae65e50b7fb47f1d2a498c1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 5 18:37:17 2018 +0100

    profiling: suppress debug statements

[33mcommit eb12001c82f78422061a593e1dbce51e67202931[m
Author: Thomas Andrejak <thomas.andrejak@gmail.com>
Date:   Thu Jun 8 14:56:26 2017 +0200

    prelude: add protocol information through JSON

[33mcommit 6162ef57bd7af7ac9e981dce0a357a5d1f3f0c32[m
Author: Daniel Humphries <Daniel.Humphries@esentire.com>
Date:   Mon Dec 4 19:53:27 2017 +0000

    unified2: fix xff extra-data output (Bug #2305)
    
    In extra-data mode, suricata does not output xff data without
    undocumented conditions (including enabling packet output). This
    behaviour has been fixed to remove the hidden requirements. Fix
    included removing previous xff data output implementation and adding a
    new function for outputting xff that is called after outputting each
    event.
    
    IPv6 XFF entries were also being recorded incorrectly as if they were
    IPv4 and this has been fixed.

[33mcommit 2e5b293afb512553d045aaee8182becfa9eceda1[m
Author: Pascal Delalande <pdl35@free.fr>
Date:   Thu Feb 22 22:28:56 2018 +0100

    doc: update eve json output for DNS and HTTP

[33mcommit 12c350f77d3c7a1a7d57d1abb76ea4f3584bce45[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 5 09:11:30 2018 +0100

    der/afl: free data during fuzzing

[33mcommit 68b9ebdc02c9fda03208dc3226703294b704fdb9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 2 13:44:43 2018 +0100

    output: fix logging wrong direction in tls upgrade
    
    When upgrading to TLS from HTTP logging of the final HTTP tx could
    have the wrong direction. This was due to the original packet triggering/
    finalizing the upgrade would be used as the base for both the toserver
    and toclient pseudo packet meaning it was wrong in one direction.
    
    This patch creates a pseudo packet in the same way as the flow timeout
    code does, so it no longer takes the raw original packet in.
    
    Bug #2430

[33mcommit 710c7b821fcb919dfaa816f45a8b342acee622f4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 2 12:15:11 2018 +0100

    output/json: update callers to use explicit directions

[33mcommit 9f133652223f8be116c8e1083bcb5be27bd74493[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 2 11:53:12 2018 +0100

    output/json: make log direction explicit
    
    Introduce enum OutputJsonLogDirection to make logging direction
    explicit.

[33mcommit 44c4008f7794752090c8d8153e2f7f51c070f376[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 2 11:36:36 2018 +0100

    output/json: clean up CreateJSONHeader calls

[33mcommit 1115eb52eb546fad87fe10b5c9b183ca440ad735[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Mar 1 07:42:09 2018 -0600

    travis: redirect unittest output to file in all builds
    
    On error, print the last 500 lines of output then exit 1.
    
    Shoud allow us to see why a build fail on the debug tests,
    when the error was burried in an output file we weren't
    making visible.

[33mcommit 053022931c189ee12a4801df5c67f851a0b1afcd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 26 13:35:28 2018 +0100

    rust/json: add array_append_string

[33mcommit 73fac478a25777fddc6e78dcf868585a8458672f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 19 18:24:14 2018 +0100

    rust/dns: fix nom verbose error mode

[33mcommit a01a229b373c6e93f7592a9af0965632fc6faa32[m
Author: Brandon Sterne <brandon.sterne@gmail.com>
Date:   Tue Feb 27 13:28:45 2018 -0800

    doc: use standard spelling of daemon

[33mcommit 4b897c906004d2b43a1d0f77d86f0c48a2e672be[m
Author: Danny Browning <danny.browning@protectwise.com>
Date:   Thu Dec 21 14:09:08 2017 -0700

    source-pcap-file: Directory mode may miss files (bug #2394)
    
    https://redmine.openinfosecfoundation.org/issues/2394
    
    Certain parameters of delay and poll interval could cause newly added
    files in a directory to be missed. Cleaned up how time is handled for
    files in a directory and fix which time is used for future directory
    traversals. Add a mutex to make sure processing time is not optimized
    away.

[33mcommit cd98d7ddccbc9c6077efbcecef63d37cb0b5ad46[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Feb 13 00:04:05 2018 +0100

    ebpf: remove vlan_hdr alignement
    
    If we align the vlan_hdr then we increase its size and the parsing
    of packets with VLAN tag is broken.

[33mcommit 39754a976a0c969552df4ff8024bb8fa29907fef[m
Author: Jesper Dangaard Brouer <netoptimizer@brouer.com>
Date:   Wed Feb 7 23:21:24 2018 +0100

    epf: improving the ebpf makefile
    
    The current ebpf/Makefile.am have the problem that clang compile
    errors still result in an ELF .bpf output file.  This is obviously
    problematic as the problem is first seen runtime when loading
    the bpf-prog.  This is caused by the uses of a pipe from
    clang to llc.
    
    To address this problem, split up the clang and llc invocations
    up into two separate commands, to get proper reaction based on
    the compiler exit code. The clang compiler is used as a
    frontend (+ optimizer) and instructed (via -S -emit-llvm) to
    generate LLVM IR (Intermediate Representation) with suffix .ll.
    The LLVM llc command is used as a compiler backend taking IR and
    producing BPF machine bytecode, and storing this into a ELF
    object.  In the last step the IR .ll suffix code it removed.
    
    The official documentation of the IR language:
     http://llvm.org/docs/LangRef.html
    
    Also fix the previous make portability warning:
     '%-style pattern rules are a GNU make extension'
    I instead use some static pattern rules:
     https://www.gnu.org/software/make/manual/html_node/Static-Usage.html
    
    Signed-off-by: Jesper Dangaard Brouer <netoptimizer@brouer.com>

[33mcommit 3f4c7efa72125db39a6737b46c72a94bd3c4f6a4[m
Author: Jesper Dangaard Brouer <netoptimizer@brouer.com>
Date:   Wed Feb 7 23:21:19 2018 +0100

    ebpf: compile with clang -target bpf
    
    Enable compiling eBPF programs with clang -target bpf.
    
    This is mostly to workaround a bug in libbpf, where clang > ver 4.0.0
    generates some ELF sections (.eh_frame) when -target bpf is NOT specified,
    and libbpf fails loading such files.
    
    Notice libbpf is provided by the kernel, and in kernel v4.16 the library
    will contain the needed function for attaching to the XDP hook.
    
    Kernel commit 949abbe88436 ("libbpf: add function to setup XDP")
     https://git.kernel.org/torvalds/c/949abbe88436
    
    The library fix has reached kernel v4.16 but the workaround for Suricata
    is interesting anyway in case people use a kernel v4.15.
    
    Signed-off-by: Jesper Dangaard Brouer <netoptimizer@brouer.com>

[33mcommit 7906c521cdde5b1d0eb3ce379b8e343c3055653f[m
Author: Jesper Dangaard Brouer <netoptimizer@brouer.com>
Date:   Wed Feb 7 23:21:14 2018 +0100

    ebpf: take clang -target bpf include issue of stdint.h into account
    
    This patch prepares code before enabling the clang -target bpf.
    
    The clang compiler does not like #include <stdint.h> when
    using '-target bpf' it will fail with:
    
     fatal error: 'gnu/stubs-32.h' file not found
    
    This is because using clang -target bpf, then clang will have '__bpf__'
    defined instead of '__x86_64__' hence the gnu/stubs-32.h include
    attempt as /usr/include/gnu/stubs.h contains, on x86_64:
    
      #if !defined __x86_64__
      # include <gnu/stubs-32.h>
      #endif
      #if defined __x86_64__ && defined __LP64__
      # include <gnu/stubs-64.h>
      #endif
      #if defined __x86_64__ && defined __ILP32__
      # include <gnu/stubs-x32.h>
      #endif
    
    This can be worked around by installing the 32-bit version of
    glibc-devel.i686 on your distribution.
    
    But the BPF programs does not really need to include stdint.h,
    if converting:
      uint64_t -> __u64
      uint32_t -> __u32
      uint16_t -> __u16
      uint8_t  -> __u8
    
    This patch does this type syntax conversion.
    
    The build of a ebpf files had an issue for system like Debian
    because they don't have a asm/types.h in the include path if the
    architecture is not defined which is the case due to target bpf.
    
    This results in:
    
     clang-5.0 -Wall -Iinclude -O2 \
             -D__KERNEL__ -D__ASM_SYSREG_H \
             -target bpf -S -emit-llvm vlan_filter.c -o vlan_filter.ll
     In file included from vlan_filter.c:19:
     In file included from include/linux/bpf.h:11:
     /usr/include/linux/types.h:5:10: fatal error: 'asm/types.h' file not
     found
     #include <asm/types.h>
              ^~~~~~~~~~~~~
     1 error generated.
     Makefile:523: recipe for target 'vlan_filter.bpf' failed
    
    This patch fixes the issue by adding a include path setting the
    architecture to the one of the builder.
    
    Signed-off-by: Jesper Dangaard Brouer <netoptimizer@brouer.com>
    Sidned-off-by: Eric Leblond <eric@regit.org>

[33mcommit ffc847db01fbf81df8a647d7a794d99894e4939d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 13 13:42:39 2018 +0100

    file: fix files not getting pruned
    
    When the filedata logger is enabled (file extraction), but a file is not
    stored due to no rules matching to force this, the file would never be
    freed.
    
    This was caused by a check in the file pruning logic that only freed a
    file when the FILE_STORED flag was set. However files can also have the
    FILE_NOSTORE flag set which indicates that a file won't be stored.
    
    This patch makes sure that both conditions lead to file pruning.

[33mcommit 9423f6149f5aa673e4313ec0281033c02cc09c63[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 12 18:31:14 2018 +0100

    stream: inform app layer of depth reached

[33mcommit 7078b4e8e4c181de98615f99d719a40649944e53[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 2 15:45:47 2018 +0100

    flash: code cleanups

[33mcommit e251c45d3d968567cfde897bfd95eaeab6053b1f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 19 18:00:38 2017 +0100

    detect/bsize: tests for http_request_line

[33mcommit 4d1fa4aaf96e3691172ca94b7be59a4bcf42212b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Dec 10 21:39:50 2017 +0100

    detect: bsize keyword
    
    Allows matching on stickybuffers. Like dsize, it allows matching on
    exact values, greater than and less than, and ranges.
    
    For streaming buffers, such as HTTP bodies, the final size of the
    body is only known at the end of the transaction.

[33mcommit 709b3bc1e4caa80d106a585b346fd9f051211c7d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 3 12:33:53 2017 +0100

    rule analyzer: simple rules to json dumper

[33mcommit d14e51a4aa6c2111ff115b4fe4b1b36fd09d6bc9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 18 17:11:15 2017 +0100

    detect/content: pass START/END flags to inspection

[33mcommit c8bd489aa19525b4379a4b6c02b6ae06c7bb4e21[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 3 12:29:49 2017 +0100

    detect: set implied flow direction based on keywords

[33mcommit 82ffba20f4d8ee09f410e60de66338dde19198a2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 1 08:33:37 2017 +0100

    detect/dns_query: move to API v2. Supports transforms.

[33mcommit 7823ef721f1e8e7296b915f15a56698bdc3700c4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 1 08:33:09 2017 +0100

    file_data: update to API v2
    
    As we can have multiple files per TX we use the multi inspect
    buffer support.
    
    By using this API file_data supports transforms.
    
    Redo part of the flash decompression as a hard coded built-in sort
    of transform.

[33mcommit 483ffc103cd1c887f3e48e8cdf52825264094aa1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 1 08:32:31 2017 +0100

    detect/http_request_line: convert to inspect api v2

[33mcommit 7f97fc40d5c5bccc2a381931e1300ce1c2c61ef1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 26 08:14:14 2017 +0200

    detect/transform: initial to_sha256 implementation
    
    Takes input buffer and replaces it with hash value for that buffer.
    Hash value is in raw bytes.

[33mcommit 016d65fdf892b71792b51ef852056d170dcf06b8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 25 09:27:02 2017 +0200

    detect/transform: initial compress_whitespace implementation

[33mcommit 38ed6cd050caba6757248db689a46037031e2a17[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 26 10:20:07 2017 +0200

    detect/transform: initial strip_whitespace implementation

[33mcommit d64785274e28814963f12c04b462ca2721a99d4a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 31 13:49:42 2017 +0100

    detect/prefilter: move hash into detect engine ctx

[33mcommit 91296d1eeccc238598d856368849743ba83bb2e6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 31 12:20:20 2017 +0100

    detect/prefilter: add de_ctx to registration

[33mcommit efbd901385202825a8cb327fda513ac82cf1fbc8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 30 22:37:42 2017 +0100

    detect: move mpm engines into detect engine ctx
    
    This allows safe registration at runtime.

[33mcommit ad16925bc90eba121791d6be2d796a6aa71348a1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 30 19:42:35 2017 +0100

    detect/inspect engines: copy to detect engine ctx
    
    Register rule-time engines in the detect engine. This is necessary
    now that rule parsing can create new buffers.

[33mcommit 0de86211c6179f9a5829f69c495358a9b2f18619[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 30 17:14:34 2017 +0100

    detect: register dynamic buffers into de_ctx
    
    Register buffers that are created during rule parsing. Currently
    this means an existing buffer with one or more transformations.

[33mcommit 313661451d29d78f22cdcd7f47dc2c5fe1f89357[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 23 13:27:32 2017 +0200

    content inspection: support transforms
    
    Make sure content is applied to the transformed version of a buffer.
    
    Support content with its modifiers, and also isdataat, pcre, bytetest
    and bytejump.

[33mcommit a499a44f7a0c9bcb8755b4e31cf7d908b7666276[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 30 09:43:42 2017 +0100

    detect: move buffer type map into detect ctx
    
    Move previously global table into detect engine ctx. Now that we
    can register buffers at rule loading time we need to take concurrency
    into account.
    
    Move DetectBufferType to detect.h and update DetectBufferCtx API calls
    to include a detect engine ctx reference.

[33mcommit f6e5cb1db6e5aa6ed27bd6d906a8b0af60af5085[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 23 12:25:33 2018 +0100

    detect: prefilter/inspect API v2, with transforms
    
    Introduce InspectionBuffer a structure for passing data between
    prefilters, transforms and inspection engines.
    
    At rule parsing time, we'll register new unique 'DetectBufferType's
    for a 'parent' buffer (e.g. pure file_data) with its transformations.
    Each unique combination of buffer with transformations gets it's
    own buffer id.
    
    Similarly, mpm registration and inspect engine registration will be
    copied from the 'parent' (again, e.g. pure file_data) to the new id's.
    
    The transforms are called from within the prefilter engines themselves.
    
    Provide generic MPM matching and setup callbacks. Can be used by
    keywords to avoid needless code duplication. Supports transformations.
    
    Use unique name for profiling, to distinguish between pure buffers
    and buffers with transformation.
    
    Add new registration calls for mpm/prefilters and inspect engines.
    
    Inspect engine api v2: Pass engine to itself. Add generic engine that
    uses GetData callback and other registered settings.
    
    The generic engine should be usable for every 'simple' case where
    there is just a single non-streaming buffer. For example HTTP uri.
    
    The v2 API assumes that registered MPM implements transformations.
    
    Add util func to set new transform in rule and add util funcs for rule
    parsing.

[33mcommit 765b7a6b66c236aaf9658198d8c3ec4398668cbd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 23 12:08:47 2017 +0200

    detect: prep for dynamic smlists arrays in sigs
    
    Initialize Signature::init_data::smlists like normal, but before use
    expand them if needed.

[33mcommit bdb886bd68f0b4e770b7466f144b79af49e6c5e3[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Tue Feb 13 23:41:47 2018 +0100

    docs: remove many outdated and old install docs

[33mcommit 2e8678a5ffa740434deb8880de1efb7e59ea0cfb[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Tue Feb 13 22:06:33 2018 +0100

    docs: replace redmine links and enforce https on oisf urls

[33mcommit c411519605fb1a9f22fd1a2901e0e37948c12991[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Feb 12 13:43:59 2018 -0600

    app-layer: remove has events callback - not used

[33mcommit 23ceb2cc26008a022b7c35e6477b41c69ef76870[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Jan 26 16:15:09 2018 -0600

    dnp3: regenerate object decoding code

[33mcommit f70e8d00eacf465da540482a814db7dcd993fcc1[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Jan 26 16:14:11 2018 -0600

    dnp3-gen: require jinja2 v2.10 or later
    
    Previous versions, but not all, have issues tracking
    variables.

[33mcommit 6a6aa04f55bbe4eeb5e53d1ec0ae57db81a259ec[m
Author: Philippe Antoine <contact@catenacyber.fr>
Date:   Fri Jan 26 16:09:18 2018 -0600

    dnp3-gen: fix heap buffer overflow in generated code
    
    Due to missing check before memcpy.

[33mcommit 261f15a1465b48e8baa7ebfdbc34fb11aa3e0fb9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 2 11:17:23 2018 +0100

    der: fix recursion depth not being handled correctly
    
    In a mix of sequences the 'depth reached' error would not
    be fully propagated.
    
    Found with AFL.

[33mcommit 7ac041b872015a7ad1aedf6c0d4294379cd2d277[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 2 11:56:16 2018 +0100

    der: warn if null passed to decoders
    
    Remove null checks for errcode.

[33mcommit 356440b3805b29baf4ffb7126028f257de4717ff[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Dec 26 20:14:24 2017 +0100

    tm-threads: fix build warning in afl mode

[33mcommit 968ed663a8e129bf502b0fa6c743c4e9b383e0b6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 11 14:07:14 2017 +0100

    detect: fix out of bounds write in detect thread space creation

[33mcommit 6c643d8975e9bab542ef5583d1422d5e669188df[m
Author: David DIALLO <david.diallo@gmail.com>
Date:   Thu Feb 8 00:20:09 2018 +0100

    modbus: duplicate alerts unaware of direction
    
    Remove DetectAppLayerInspectEngineRegister for TOCLIENT direction
    because Modbus inspection engine is only performing in request (TOSERVER).
    
    Detect Value keyword in read access rule. In read access, match on value
    is not possible.
    
    Update Modbus keyword documentation.

[33mcommit 92b537d02861001434bf88e86d2f2b4f1a4094cf[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Thu Feb 8 19:41:49 2018 +0100

    rust: update 'external' api for app layer changes
    
    Remove unused HasTxDetectState function and remove state argument
    from SetTxDetectState.
    
    Update NTP code.

[33mcommit 8b74ac6ba00c40fd252698b6938ea5bcda39163b[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Feb 7 15:11:54 2018 -0600

    conf/yaml: don't allow empty key values
    
    When loading an empty file, libyaml will fire a single scalar
    event causing us to create a key that contains an empty string.
    We're not interested in this, so skip an empty scalar value
    when expecting a key.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/2418

[33mcommit 013c4e0aa04436727d8c8cc4292387af069eea52[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Feb 5 15:34:09 2018 -0600

    metadata: fix parsing when not k/v
    
    Allows for parsing metadata with mixed single word and key/val
    pairs.

[33mcommit f815027cdfbf9fda9f6141d9bf3a5584d6d7a672[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 6 11:24:50 2018 +0100

    rust/dns: simplify tx freeing
    
    Now that we no longer need the state when freeing a TX, we can simply
    do cleanup from the Drop trait.

[33mcommit 7548944b49b0dfc218d73e3d12c993629258fb2a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 6 11:12:56 2018 +0100

    app-layer: remove unused HasTxDetectState call
    
    Also remove the now useless 'state' argument from the SetTxDetectState
    calls. For those app-layer parsers that use a state == tx approach,
    the state pointer is passed as tx.
    
    Update app-layer parsers to remove the unused call and update the
    modified call.

[33mcommit 1c270cae134f72ed7b5a88edb9695f27cf793dcc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 6 10:35:05 2018 +0100

    nfs: remove old test code

[33mcommit e96d9c11596e6a2b611902f0c7c601de5dccc6f3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 31 15:58:21 2018 +0100

    app-layer: add tx iterator API
    
    Until now, the transaction space is assumed to be terse. Transactions
    are handled sequentially so the difference between the lowest and highest
    active tx id's is small. For this reason the logic of walking every id
    between the 'minimum' and max id made sense. The space might look like:
    
        [..........TTTT]
    
    Here the looping starts at the first T and loops 4 times.
    
    This assumption isn't a great fit though. A protocol like NFS has 2 types
    of transactions. Long running file transfer transactions and short lived
    request/reply pairs are causing the id space to be sparse. This leads to
    a lot of unnecessary looping in various parts of the engine, but most
    prominently: detection, tx house keeping and tx logging.
    
        [.T..T...TTTT.T]
    
    Here the looping starts at the first T and loops for every spot, even
    those where no tx exists anymore.
    
    Cases have been observed where the lowest tx id was 2 and the highest
    was 50k. This lead to a lot of unnecessary looping.
    
    This patch add an alternative approach. It allows a protocol to register
    an iterator function, that simply returns the next transaction until
    all transactions are returned. To do this it uses a bit of state the
    caller must keep.
    
    The registration is optional. If no iterator is registered the old
    behaviour will be used.

[33mcommit 7da805ffd9a9202c67d53ef6a06c3215436495e9[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Feb 2 21:39:14 2018 +0100

    doc: improve eBPF and XDP doc
    
    Remove reference to `buggy` clang as a workaround has been found in
    libbpf.
    
    Proof read and add information on the structure of eBPF code.

[33mcommit 6f69c65c48a1f1466472f8e88398c817a3c0cc72[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jan 31 21:20:52 2018 +0100

    util-ebpf: rename local variable

[33mcommit 194751654fba60424df9c2af1bdceae29c672fa1[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jan 31 21:12:59 2018 +0100

    af-packet: count only CPUs once

[33mcommit 8030e3f66b663ad76a845487ea1b7efea26413f2[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jan 26 10:14:44 2018 +0100

    doc: update documentation
    
    This patch adds info on kernel requirement for XDP and rework a few
    things.

[33mcommit 15260460726ba24c9d5c25e61f258b3f3f63e708[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jan 26 10:11:56 2018 +0100

    ebpf: allow modified build of xdp_filter
    
    Using BUILD_CPUMAP constant will allow user to use XDP bypass on
    kernel prior to 4.15.

[33mcommit 796ec08dd7a6311b108b5352ab66653b10f2aff9[m
Author: Jesper Dangaard Brouer <netoptimizer@brouer.com>
Date:   Thu Jan 25 20:24:38 2018 +0100

    ebpf: improve xdp-cpu-redirect distribution in xdp_filter.c
    
    The XDP CPU destination array/set, configured via xdp-cpu-redirect,
    will always be fairly small.  My different benchmarking showed that
    the current modulo hashing into the CPU array can easily result in bad
    distribution, expecially if the number of CPU is an even number.
    
    This patch uses a proper hashing function on the input key. The key
    used for hashing is inspired by the ippair hashing code in
    src/tmqh-flow.c, and is based on the IP src + dst.
    
    An important property is that the hashing is flow symmetric, meaning
    that if the source and destintation gets swapped then the selected CPU
    will remain the same.  This is important for Suricate.
    
    That hashing INITVAL (15485863 the 10^6th prime number) was fairly
    arbitrary choosen, but experiments with kernel tree pktgen scripts
    (pktgen_sample04_many_flows.sh +pktgen_sample05_flow_per_thread.sh)
    showed this improved the distribution.
    
    Signed-off-by: Jesper Dangaard Brouer <netoptimizer@brouer.com>

[33mcommit 460a0a6977614a521ebb17cc8e531c6528ff8c69[m
Author: Jesper Dangaard Brouer <brouer@redhat.com>
Date:   Thu Jan 25 20:24:33 2018 +0100

    ebpf: add Paul Hsieh's (LGPL 2.1) hash function SuperFastHash
    
    Adjusted function call API to take an initval. This allow the API
    user to set the initial value, as a seed. This could also be used for
    inputting the previous hash.
    
    Signed-off-by: Jesper Dangaard Brouer <brouer@redhat.com>

[33mcommit 0e1a4173ff53f6eb156630f216e195e1f38caa70[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jan 17 16:59:23 2018 +0100

    doc: how to get live info about ebpf behavior

[33mcommit 276b93fb53c8b7f52ca0e1382a05aa2788e3680d[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jan 17 03:45:01 2018 +0100

    unix-socket: add ebpf-bypassed-stats command
    
    This command output the count of element in IPv4 and IPv6 flow
    table of interfaces using eBPF/XDP bypass.

[33mcommit 0356293d848a9d7ed82c60e7c2106eac737bfd0f[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jan 17 03:28:20 2018 +0100

    unix-socket: add bypassed counter to iface-stat

[33mcommit 93f5b5f1e82ddc8c08e86a0a46993d8cd2fb53db[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jan 17 03:24:58 2018 +0100

    util-ebpf: add bypassed counters
    
    Use LiveDevice bypassed counter and also add hash size counters
    for the v4 and v6 flow table.

[33mcommit b93548d2ab4df83e6ec289ba09c4be70d28995fd[m
Author: Jesper Dangaard Brouer <netoptimizer@brouer.com>
Date:   Mon Jan 15 19:31:27 2018 +0100

    ebpf: maintain a copy of kernel UAPI header file linux/bpf.h

[33mcommit 027c903f50bcba8da10a4577891c6142cac09429[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jan 12 16:18:34 2018 +0100

    ebpf: fix detection of llc

[33mcommit 8c7b5cb0889a493c1bd13feb2facf45d14f96b44[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jan 11 16:56:18 2018 +0100

    doc: add info about xdp IPS bypass

[33mcommit f04391031f113dbab7bae506906628e606a6adaf[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jan 9 00:25:02 2018 +0100

    af-packet: XDP bypass in IPS mode
    
    Implement XDP bypass in IPS mode by using XDP redirect to send
    packets from bypassed flow directly to the transmission interface.

[33mcommit 7bec54158fc09a772457c52448cfc4fc6cc743f6[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jan 9 23:11:23 2018 +0100

    flow-bypass: introduce update function
    
    Main objective of the function is to be able to bypass a flow on
    other interfaces. This is necessary in AF_PACKET case as the flow
    table are per interface.

[33mcommit bc34703c093ff2d4e7d7e11d894eca393969df8a[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Jan 7 22:05:40 2018 +0100

    ebpf: add some comments to eBPF filter

[33mcommit 0807dd674063062d22e0677837f2b8e7bea4a965[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Jan 7 21:58:09 2018 +0100

    ebpf: slight bypass_filter optimization

[33mcommit 2b56b02569d8d79da3de98d5f11884afa502aec0[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Jan 7 21:47:43 2018 +0100

    util-ebpf: simplify code cleaning
    
    Avoid to use an unnecessary callback strategy as the purpose of the
    function using the callback is hardcoded.

[33mcommit 94a622cb552ece8a403830855c735499c696a6ca[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Jan 7 13:16:27 2018 +0100

    af-packet: add comments to eBPF/XDP code

[33mcommit 3379311e661d9eb2ab9ba520f230734d45d95156[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Jan 7 13:15:37 2018 +0100

    af-packet: fix error handling in bypass case
    
    If the key is already in the hash table then the bypass is
    succesful.

[33mcommit e1515b48ad4fe42bbdd474b461bf0a9a6dcca0d5[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Jan 7 12:59:16 2018 +0100

    util-ebpf: fix libbpf error handling

[33mcommit ce8b74b524da51104e48826caebd9cc386bde97b[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jan 11 16:52:21 2018 +0100

    doc: document XDP CPU redirect

[33mcommit 4f57008a2353dc15878c0bcd0c53c5af6430bb28[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jan 2 22:08:21 2018 +0100

    af-packet: add support for XDP cpu redirect map
    
    This patch adds a boolean option "xdp-cpu-redirect" to af-packet
    interface configuration. If set, then the XDP filter will load
    balance the skb creation on specified CPUs instead of doing the
    creation on the CPU handling the packet. In the case of a card
    with asymetric hashing this will allow to avoid saturating the
    single CPU handling the trafic.
    
    The XDP filter must contains a set of map allowing load balancing.
    This is the case of xdp_filter.bpf.
    
    Fixed-by: Jesper Dangaard Brouer <netoptimizer@brouer.com>

[33mcommit 33072a49fe38420e15bd167057bf9b16b94b2f8b[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jan 2 19:30:00 2018 +0100

    ebpf: import more recent version of helpers

[33mcommit ac5957d4615c45e4de67f99cac571904dd2f6dd3[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Jan 6 09:44:00 2018 +0100

    util-affinity: export CPU set parsing function

[33mcommit 2598078ee6da1169326c3f59e4ac8766896b8297[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jan 5 23:32:54 2018 +0100

    af-packet: code cleaning and comments

[33mcommit cde438f670e61dcf87a6fe2dc8c94eef57b39f4a[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jan 5 13:27:59 2018 +0100

    af-packet: add missing copyright header
    
    And also fixes the copyright date in some files.

[33mcommit 3f3a206722e1bde8ac8ecdcb2c0eb856c9e69529[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jan 2 12:50:26 2018 +0100

    util-ebpf: add error handling in hash value fetch

[33mcommit 60265e023a4c146503d49f6b56c00e9cdb92a027[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jan 5 19:31:43 2018 +0100

    doc: update xdp documentation
    
    Also remove configuration info from yaml as they are now in the
    documentation.

[33mcommit 5ee44c877c9baf1a840a38729f79d672a0bfa810[m
Author: Peter Manev <pmanev@stamus-networks.com>
Date:   Sat Dec 30 22:11:35 2017 +0100

    doc: add XDP setup documentation

[33mcommit 1e729f059f438fa2955a10e15b63f31731c540b7[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Dec 30 22:04:04 2017 +0100

    af-packet: improve xdp error handling
    
    Don't try to bypass the flow if the flow table is unknown.
    
    Also continue after error message if ever XDP was not correctly
    setup.

[33mcommit 126488f74dbaf1121fcf614b3f75a77e97562604[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Dec 26 22:55:55 2017 +0100

    af-packet: add support for multi iface bypass

[33mcommit 4474889667d664a66c1c123f4f7d2756e8a7fbb9[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Dec 30 19:50:12 2017 +0100

    util-device: change logic of registration
    
    Device storage requires the devices to be created after storage
    is finalized so we need to first get the list of devices then
    create them when the storage is finalized.
    
    This patch introduces the LiveDeviceName structure that is a list
    of device name used during registration.
    
    Code uses LiveRegisterDeviceName for pre registration and keep
    using the LiveRegisterDevice function for part of the code that
    create the interface during the runmode creation.

[33mcommit 0998f37b78fd86d8473d35074b245b01d1505e9e[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Dec 26 22:47:44 2017 +0100

    util-device: add an iteration function

[33mcommit 3ae714d3544e80c40c873112b0b8aeefb0805d42[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jan 2 00:33:23 2018 +0100

    device-storage: introduce feature
    
    The capture method may have to store data depending related to the
    offloading so having a per interface storage via LiveDevice seems
    interesting.

[33mcommit e2d31e1c571bc63da76ebf37d4aeb86e4269c965[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Dec 28 19:17:56 2017 +0100

    flow-bypass: fix sleep strategy

[33mcommit 7a0d53448d87ad3d141050e09422e4e0597d8e0a[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Dec 26 20:14:24 2017 +0100

    tm-threads: fix build warning in afl mode

[33mcommit 9cb591aa6cd8c005e3514f843ef796b24756cd82[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Dec 24 16:19:03 2017 +0100

    af-packet: remove done fixme in XDP

[33mcommit eff10fce1054257a46349904bc043edd38bcea72[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Dec 24 16:17:19 2017 +0100

    af-packet: end of map factoring

[33mcommit d65f45856cd596dee61d30435ba17fbd7bb4c100[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Dec 21 16:52:37 2017 +0100

    af-packet: cache map fd search

[33mcommit 17a32bdaa0d836e7e33c848492d2becf9f850df7[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Dec 17 22:09:23 2017 +0100

    af-packet: fix bypassing of IPv6
    
    Also misc fixes.

[33mcommit b937e1afefe065ce7489b1455fccf99c5ad3f0d0[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Dec 17 11:58:59 2017 +0100

    util-ebpf: fix ipv6 cleaning and add comments

[33mcommit 60752d231c3d2faaecacd44c62754d3facc59850[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Dec 17 11:47:11 2017 +0100

    util-ebpf: fix XDP delete key
    
    The key was deleted twice so let's remove the local deletion.

[33mcommit 08eec0833e4990ade0a196a0c8b56398ec7eb4f0[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Dec 17 00:01:42 2017 +0100

    flow-bypass: add abstraction layer
    
    The flow bypass thread can now be used by any capture method that
    register it timeout check function.

[33mcommit 43ecf0d78d5862cbda341ec9521758b6e7e9df81[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Dec 13 23:09:42 2017 +0100

    util-ebpf: add call to remove memlock limit
    
    Without that, user has to use ulimit to be able to load the eBPF
    file.

[33mcommit a2296357927bca505a1ee033f034ae9b186e287d[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Dec 1 20:07:27 2017 +0100

    ebpf: implement vlan filter
    
    Basic filter allowing only a list of VLANs.

[33mcommit 0654c313975c184c013650e5565b81d333660c67[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Nov 12 15:53:39 2017 +0100

    util-ebpf: suppress call on loop init

[33mcommit 8c880879486705fc2c121c4791128bc7f20ef6c8[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Nov 28 00:21:54 2017 +0100

    af-packet: implementation of XDP bypass
    
    This patch adds support for XDP bypass. It provides an XDP
    filter that can be loaded to realize the bypass of flows.

[33mcommit 31c947b4d8ecd97829ce5293ddbafb89c3aaaebc[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jan 5 22:33:48 2018 +0100

    af-packet: use per CPU hash in bypass
    
    eBPF has a data type which is a per CPU array. By adding one element
    to the array it is in fact added to all per CPU arrays in the kernel.
    This allows to have a lockless structure in the kernel even when doing
    counter update.
    
    In userspace, we need to update the flow bypass code to fetch all
    elements of the per CPU arrays.

[33mcommit 8640cc5dcf6677e6c74c46fdb7b8007c5e119f37[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Sep 29 22:24:08 2017 +0200

    flow-bypass: only start thread on demand

[33mcommit 06173267c6d6c5702db6c4d3a9710b4f8dd2b56e[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Nov 26 20:29:52 2017 +0100

    af-packet: kernel bypass implementation
    
    This patch implements bypass capability for af-packet.
    
    The filter only bypass TCP and UDP in IPv4 and IPv6. It don't
    don't bypass IPv6 with extended headers.
    
    This patch also introduces a bypassed flow manager that takes
    care of timeouting the bypassed flows. It uses a 60 sec
    timeout on flow. As they are supposed to be active we can
    try that. If they are not active then we don't care to get them
    back in Suricata.

[33mcommit 91e1256b0134ebe89b89e18bf785d20679c25225[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Nov 26 20:27:13 2017 +0100

    af-packet: add support for eBPF cluster and filter
    
    This patch introduces the ebpf cluster mode. This mode is using
    an extended BPF function that is loaded into the kernel and
    provide the load balancing.
    
    An example of cluster function is provided in the ebpf
    subdirectory and provide ippair load balancing function.
    This is a function which uses the same method as
    the one used in autofp ippair to provide a symetrical
    load balancing based on IP addresses.
    
    A simple filter example allowing to drop IPv6 is added to the
    source.
    
    This patch also prepares the infrastructure to be able to load
    and use map inside eBPF files. This will be used later for flow
    bypass.

[33mcommit d2121945c93ea7db0454a2865c8696b940df477a[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Thu Jan 25 08:58:01 2018 +0100

    doc: update file_data description

[33mcommit 884e05167101c680b892ababcae0caa9d503a261[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Fri Jul 14 14:32:25 2017 +0200

    detect-engine-hsbd: decompress swf files
    
    This checks if a buffer is a swf file and try
    to decompress it, if decompression is enabled.

[33mcommit 7b23d305423ecc6eeb6508f9f9309dcdd0bc2b23[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Thu Jul 23 10:39:35 2015 +0200

    util-file-decompression: add swf decompression API
    
    This adds a new module that permits to decompress
    swf file compressed with zlib or lzma algorithms.
    
    The API that performs decompression will take a compressed
    buffer and build a new decompressed buffer following the
    FWS format which represents an uncompressed file.
    
    The maximum buffer that can be created is up to 50mb.

[33mcommit 822faa08f8ef1365b6f1f9557cd27e93d5996403[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Fri Jul 14 00:22:13 2017 +0200

    detect: set events in inspection phase
    
    During the inspection phase actually is not possible to catch
    an error if it occurs.
    This patch permits to store events in the detection engine
    such that we can match on events and catch them.

[33mcommit d0f92e2a569cf437d11132be49706d941a484f09[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Thu Jul 13 21:37:39 2017 +0200

    app-layer-htp: add swf decompression settings
    
    This adds some settings needed to do swf file decompression
    under libhtp section in suricata.yaml

[33mcommit b60065caec8298e8c42984a37197536a66741e51[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Thu Jul 13 21:09:38 2017 +0200

    configure: check for zlib and liblzma
    
    This checks if zlib and libzma are installed on the system
    in order to decompress swf files.

[33mcommit 8354f62b19ddef4aa49d980f614f1147ebf13a7e[m
Author: Maurizio Abba <mabba@lastline.com>
Date:   Wed Jan 24 12:09:11 2018 +0000

    signal: enable SIGUSR2 after Reload when delayed-detect
    
    Enable SIGUSR2 Handler after the first rule reload when delayed-detect
    is enabled

[33mcommit 3c68a220929bc708cd00ad9c8b9c1691ab540157[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Dec 2 17:37:23 2014 +0100

    suricatasc: implement autoreconnect
    
    Implement a basic autoreconnect support. It tries to reconnect once
    when connection has been lost. If it fails, it discards the command
    and try again to connect at next command.

[33mcommit 3d0ba36ba843937f7cc1d2de4cd3b0e20e7d6b9f[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Mar 20 14:23:12 2015 +0100

    unix socket: protocol v0.2
    
    This patch updates the unix socket protocol. Messages send from
    the server and the client have now a '\n' at the end. This allows
    both sides to detect easily the end of a command.
    
    As a side effect, this fixes the problem of long answer in
    suricatasc. There is now a limit at the arbitrary value of 65536.
    
    Backward compatility is preserved as a client with the older
    version of the protocol can still connect to a Suricata with
    version 2 of the protocol.

[33mcommit 3fd7256af517185f166894ca437a8cdf6c8f3557[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Jan 30 12:27:38 2018 -0600

    setup-app-layer-detect: update for changes in detect

[33mcommit 74e036d09f0dcd81b14bc59bbadc665d3da4e8fc[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Jan 30 15:09:17 2018 -0600

    doc: update eve/alert/metadata configuration

[33mcommit 45a38c043154f1d6c145c4efc05727e9c2aea13f[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Jan 30 15:40:26 2018 -0600

    eve/alert: new metadata configuration (sane defaults)
    
    Under eve/alert, introduce a new metadata configuration
    section. If no provided, or simply yes defaults will be used.
    Otherwise this a map with fields that can be toggled on and
    off. The defaults are:
    
    outputs:
      - eve-log:
          types:
            - alert:
                metadata:
                  app-layer: true
                  flow: true
                  rule:
                    raw: false
                    metadata: true
    
    To enable something that is disabled by default, or to disable
    something that is enabled by default, only that key need to
    be changed, everything else will keep its default value.

[33mcommit 472cc8ea6142e17aff92bda3fd59d55512f5bd97[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Jan 30 15:22:10 2018 -0600

    conf: new function: ConfNodeHasChildren
    
    Test if a configuration node has any children, indicating
    that it is a non-empty map or sequence.

[33mcommit fe9cac58706d05c8b0dd4a27e0df400da18ffceb[m
Author: Martin Natano <martin.natano@radarservices.com>
Date:   Fri Aug 11 18:11:09 2017 +0200

    eve/alert: include rule text in alert output
    
    For SIEM analysis it is often useful to refer to the actual rules to
    find out why a specific alert has been triggered when the signature
    message does not convey enough information.
    
    Turn on the new rule flag to include the rule text in eve alert output.
    The feature is turned off by default.
    
    With a rule like this:
    
        alert dns $HOME_NET any -> 8.8.8.8 any (msg:"Google DNS server contacted"; sid:42;)
    
    The eve alert output might look something like this (pretty-printed for
    readability):
    
        {
          "timestamp": "2017-08-14T12:35:05.830812+0200",
          "flow_id": 1919856770919772,
          "in_iface": "eth0",
          "event_type": "alert",
          "src_ip": "10.20.30.40",
          "src_port": 50968,
          "dest_ip": "8.8.8.8",
          "dest_port": 53,
          "proto": "UDP",
          "alert": {
            "action": "allowed",
            "gid": 1,
            "signature_id": 42,
            "rev": 0,
            "signature": "Google DNS server contacted",
            "category": "",
            "severity": 3,
            "rule": "alert dns $HOME_NET any -> 8.8.8.8 any (msg:\"Google DNS server contacted\"; sid:43;)"
          },
          "app_proto": "dns",
          "flow": {
            "pkts_toserver": 1,
            "pkts_toclient": 0,
            "bytes_toserver": 81,
            "bytes_toclient": 0,
            "start": "2017-08-14T12:35:05.830812+0200"
          }
        }
    
    Feature #2020

[33mcommit 72c8cd67d5414e919de03693a116f027b82fb66f[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Oct 26 10:31:46 2017 +0200

    doc: documentation update on metadata

[33mcommit 9864552484bdf1c258248567033247f088a904d6[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Nov 4 11:10:15 2017 -0400

    detect-metadata: add a string storage to de_ctx
    
    To avoid to have a lot of string allocations, we use a hash table
    stored in de_ctx to point to existing string instead of duplicating
    them.

[33mcommit 3a2431a2fb2813cf5aeb13f5ec1807d4e7d66012[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Nov 4 11:06:16 2017 -0400

    suricata: init output before detection
    
    As we need to know if we should parse the signature metadata, we
    have to parse the output configuration before initializing the
    detection engine.

[33mcommit 6bf00ab2893f415d8cbca645cea8aef0ed5a2f66[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Apr 21 19:42:04 2017 +0200

    output-json-alert: conditionaly output metadata
    
    Metadata of the signature can now conditionaly put in the alert
    events. This will allow user to get more context about the events
    generated by the alert.
    
    detect-metadata: conditional parsing
    
    Only parses metadata if an output module will use the information.
    Patch also adds a unittest to check metadata is not parsed if not
    asked to.
    
    output-json-alert: optional output keys as array
    
    Update rule metadata configuration to have an option to output
    value as array. Also adds an option to log only a series of keys
    as array. This is useful in the case of some ruleset where from
    instance the `tag` key is used multiple time.
    
    (Jason Ish) rule metadata: always log as lists
    
    After review of rule metadata, we can't make assumptions
    on what should be a list or not. So log everything as a list.

[33mcommit 1bd6d1c2094ad1a147b58fab3cb28cc3ff035b3b[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Oct 25 21:46:05 2017 +0200

    detect-metadata: add unit test

[33mcommit 474fc60671d90c2fe6f960cef7e9ef50848071df[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Dec 14 17:59:23 2016 +0100

    detect-metadata: store metadata key value pairs
    
    This patch updates the Signature structure so it contains the
    metadata under a key value form.
    Later patch will make that dictionary available in the events.

[33mcommit d0ea1472639a77b4e243f7a14507eb45b5e24e9c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 30 17:28:47 2018 +0100

    travis/rust: update rust minimum to 1.21
    
    Ubuntu LTS and CentOS7/EPEL has upgraded to 1.21.
    
    Update highest known working version to 1.23.

[33mcommit 6f7e24d3f25ef767aea9d32a002647c6183e0bec[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 30 12:20:42 2018 +0100

    autogen/rust: remove Cargo.lock
    
    Remove Cargo.lock to avoid issues when updating Cargo.toml

[33mcommit 6e82df274dcbc43e6473e5e259ae6df255f0a113[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 29 15:02:13 2018 +0100

    rust: update dependencies

[33mcommit dfae3297a5852c014ec439278f513903b044713a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 29 14:16:01 2018 +0100

    rust: don't gen C headers if Rust isn't enabled

[33mcommit ab939f4aaa04adc32a5feb12d07c32afe7238046[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Jan 25 16:20:32 2018 -0600

    doc: breakout eve-log section to a partial file
    
    Both the suricata.yaml and eve configuration sections
    included the eve-log section from suricata.yaml. First,
    sync these up with the actual suricata.yaml then break
    it out into its own file, so only one file needs to
    be kept in sync with the actual configuration file.

[33mcommit 93b056d89e857c6270d4eeeea48c49aa82363aa0[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Jan 25 15:33:31 2018 -0600

    eve/alert: log metadata be default
    
    By default log metadata.
    
    Remove toggles for individual protocol types and just use a
    single toggle to control including the app-layer with the
    alert.
    
    The metadata (currently app-layer and flow) can be disabled
    by setting metadata to a falsey value, but its removed
    from the default configuration (but wil be in docs)

[33mcommit b659222ea02a2047b861bcb263f21063b442740c[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Jan 25 14:55:55 2018 -0600

    eve/metadata: log flowvars as a list of k/v pairs
    
    To match the pktvars output.

[33mcommit 1f47f77bd5381838bbf64d2767f9e62d84d2397d[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Jan 25 14:49:38 2018 -0600

    eve/metadata: special handling for traffic-id labels
    
    Give traffic/id and traffic/label flowbits special handling
    in the eve output. Instead of just logging them as flowbits,
    give them their own top level object.
    
    {
      "traffic": {
        "id": ["id0", "id1"],
        "label": ["label0", "label1"]
      }
    }

[33mcommit 0e02684634f82b76b3425b84d80fb376b94b30a4[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Jan 25 08:52:47 2018 -0600

    doc: update eve-log section for metadata

[33mcommit 572a62f35a15d3a2e519e67c83ca4078b408bdc8[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Jan 24 16:40:11 2018 -0600

    output-json-vars: rename to metadata
    
    No functional change, just rename of files and functions
    to reflect the metadata event type now used.

[33mcommit 34811cf69e243567afe23266b59f437283db1d15[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Jan 24 14:51:03 2018 -0600

    json-vars: rename to metadata and use new metadata format

[33mcommit a23d54ce3ed40bae2e9c531a5c30f8fdcba348ec[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Dec 11 15:50:54 2017 -0600

    eve: netflow: global metadata config

[33mcommit 3eaca7c239fb62b3c98cebc735f1626910cb545e[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Dec 11 15:50:42 2017 -0600

    eve: http: global metadata config

[33mcommit 790ce3743ba7edb9686bc0906b3075640d26331b[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Dec 11 15:50:36 2017 -0600

    eve: flow: global metadata config

[33mcommit 23bbbc5818649dc20e7a69e585a27a6552bfbbbf[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Dec 11 15:50:30 2017 -0600

    eve: dns: global metadata config

[33mcommit 4a05160353a744be68037e12b557ac0d58f07ba1[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Dec 11 15:50:25 2017 -0600

    eve: alert: global metadata config
    
    Also, remove vars as a subtype. Adding the top level metadata
    field is an eve lebel parameter, not alert now.

[33mcommit 5da5fc1f7deff03c3dd31ad654ede33c2f4c0bd2[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Dec 11 15:50:18 2017 -0600

    eve: drop: global metadata config

[33mcommit 2247b9aad2dcaab54014ff1ae6d2cd35381b28d5[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Dec 11 15:50:07 2017 -0600

    eve: email: respect global metadata config

[33mcommit 885452fc22a37b91f99cb4713e9a9401f925a4a8[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Dec 11 15:49:57 2017 -0600

    eve: nfs: respect global metadata config

[33mcommit b577f4a0c99e6ec6a2287f34e13fe97bd8a8287a[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Dec 11 15:49:51 2017 -0600

    eve: smtp: respect global metadata config

[33mcommit 7f5439a3004da75179a3c02a68607753ffc0e0ec[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Dec 11 15:49:45 2017 -0600

    eve: dnp3: respect global metadata config

[33mcommit 32da579239082efe41d63c837c9a5da5380d59ba[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Dec 11 15:49:40 2017 -0600

    eve: ssh: respect global metadata config

[33mcommit 88ac0f2b1a8606ed5c5de8388970800227d2a6ab[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Dec 11 15:49:34 2017 -0600

    eve: tls: respect global metadata config

[33mcommit dd988d9934286535897e3c5e9215d85ff7b1523f[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Dec 11 15:48:14 2017 -0600

    eve: metadata setting to enable/disable metadata
    
    This is a top level metadata object containing flowbits,
    flowints, pktvars and flowvars.
    
    Enabling it at the top level enables it for all log types.

[33mcommit 5138f99c580e75d38e0e6cf38253d16e84a374d9[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Dec 11 10:16:47 2017 -0600

    eve: top level metadata object
    
    Contains:
    - flowbits (as array)
    - flowints (map)
    - flowvars (map)
    - pktvars (map)

[33mcommit 6f339abdf01f972d213d1c9e76ff3d427e1eb183[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 29 16:45:33 2018 +0100

    htp: minor debug addition

[33mcommit e86be22737c93870841c053f20baaad29f33cd95[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 26 12:05:35 2018 +0100

    htp: remove unused field from tx state

[33mcommit c63b1ce2c676218132b625eb28df995a3d47768a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 26 12:00:15 2018 +0100

    htp: remove used body operation field

[33mcommit 07cbbfb0d124e11b99087a40de5056dac7533e5a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 26 11:53:27 2018 +0100

    htp: code cleanups

[33mcommit 9ca71beb031c9d4c76a62449426d9ac91651ce61[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 26 11:48:55 2018 +0100

    htp: remove usused file flags

[33mcommit daeba48f779443e03383ab00809114b819e0b60a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 26 11:41:03 2018 +0100

    htp: remove usused flags

[33mcommit c0d26de665345caa69bcdf1a0a2fcec33fcaa971[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 26 09:14:16 2018 +0100

    stream: improve overlap detection
    
    Improve detection of overlapping different data. Keep some data around
    even if it was already ACK'd to check if packets have overlap.

[33mcommit e64941144eb57df2fc7ab866f8d26c6b95c8e69f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 12 09:16:17 2017 +0100

    htp: allow HTTP pickup of response data
    
    Now that libhtp can pick up sessions that start with a response
    we can enable support for it as well.

[33mcommit 49927024c6735e85c6a49246ec70324fe5d9e4fb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 12 09:15:33 2017 +0100

    http: add tests for malformed response lines

[33mcommit ca67408e791eefbab70ea48546b004647c35c43f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 24 16:37:27 2018 +0100

    stream: set event for suspected data injection during 3whs
    
    This rule will match on the STREAM_3WHS_ACK_DATA_INJECT, that is
    set if we're:
    - in IPS mode
    - get a data packet from the server
    - that matches the exact SEQ/ACK expectations for the 3whs
    
    The action of the rule is set to drop as the stream engine will drop.
    So the rule action is actually not needed, but for consistency it
    is drop.

[33mcommit d1adf5f7e96a66482da0f21f9d8f9233e0f94ea5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 24 15:59:57 2018 +0100

    stream: handle data on incomplete 3whs
    
    If we have only seen the SYN and SYN/ACK of the 3whs, accept from
    server data if it perfectly matches the SEQ/ACK expectations. This
    might happen in 2 scenarios:
    
    1. packet loss: if we lost the final ACK, we may get data that fits
       this pattern (e.g. a SMTP EHLO message).
    
    2. MOTS/MITM packet injection: an attacker can send a data packet
       together with its SYN/ACK packet. The client due to timing almost
       certainly gets the SYN/ACK before considering the data packet,
       and will respond with the final ACK before processing the data
       packet.
    
    In IDS mode we will accept the data packet and rely on the reassembly
    engine to warn us if the packet was indeed injected.
    
    In IPS mode we will drop the packet. In the packet loss case we will
    rely on retransmissions to get the session back up and running. For
    the injection case we blocked this injection attempt.

[33mcommit e1ef57c848bbe4e567d5d4b66d346a742e3f77a1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 24 15:59:14 2018 +0100

    stream: still inspect packets dropped by stream
    
    The detect engine would bypass packets that are set as dropped. This
    seems sane, as these packets are going to be dropped anyway.
    
    However, it lead to the following corner case: stream events that
    triggered the drop could not be matched on the rules. The packet
    with the event wouldn't make it to the detect engine due to the bypass.
    
    This patch changes the logic to not bypass DROP packets anymore.
    Packets that are dropped by the stream engine will set the no payload
    inspection flag, so avoid needless cost.

[33mcommit 700781c53b847eb73e35742a3b44b934d4fda9e6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 21 10:31:58 2017 +0100

    enip: support gaps
    
    Due to a bug in the GAP handling the TCP layer the parser would already
    get data after GAPs before.

[33mcommit 89dc05d4a6ee05aab03ae6baa6c56be01056f33a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 10 23:03:16 2017 +0100

    stream/app-layer: fix GAP handling issue
    
    Fix case where data after GAP was processed as in order data by app-layer.
    This happened even if protocol parser did not register to accept GAPs.

[33mcommit 251156e2539396655eea2852182565a3a68b640f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 29 11:26:01 2018 +0100

    pcre: don't leak memory in data extraction

[33mcommit 80f2fbac6ebc1b9114175068647d6d1c44b46776[m
Author: Pascal Delalande <pdl35@free.fr>
Date:   Tue Jan 23 21:18:41 2018 +0100

    rust/tftp: eve logging with rust

[33mcommit b9cf49e933d8216e31136ec4b64fc46653d6d729[m
Author: Clement Galland <clement.galland@epita.fr>
Date:   Fri Oct 20 07:42:37 2017 +0000

    rust/tftp: add tftp parsing and logging
    
    TFTP parsing and logging written in Rust.
    Log on eve.json the type of request (read or write), the name of the file and
    the mode.
    
    Example of output:
        "tftp":{"packet":"read","file":"rfc1350.txt","mode":"octet"}

[33mcommit 0ff60f65ec4cf4d71d68a28da4c5d5c161da2176[m
Author: Pascal Delalande <pdl35@free.fr>
Date:   Fri Jan 26 22:11:33 2018 +0100

    doc: update filestore for file hash extraction
    
    Update for extraction based on md5, sha1 and sha256

[33mcommit e8939335eaccd9cf20141f299e8781c210af863b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 25 17:55:17 2018 +0100

    rust/nfs: explicitly handle GAPs from C
    
    It seems that Rust optimizes this code in such a way that it
    passes the null ptr along as real data.
    
        if buf.as_ptr().is_null() && input_len > 0 {

[33mcommit 2c3c8f8b85a0abd8bc12b546fcc9a77d084d6c0b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 25 15:31:35 2018 +0100

    rust/filetracker: if file API return error, trunc file

[33mcommit d27ed5957faf709b900bf5a4393f4968dc31f961[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 25 14:56:05 2018 +0100

    rust/nfs: fix read reply handling
    
    READ replies with large data chunks are processed partially to avoid
    queuing too much data. When the final chunk was received however, the
    start of the chunk would already tag the transaction as 'done'. The
    more aggressive tx freeing that was recently merged would cause this
    tx to be freed before the rest of the in-progress chunk was done.
    
    This patch delays the tagging of the tx until the final data has been
    received.

[33mcommit d75d9d0b45027c8ab9a57be57855c57e03e53bbb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 25 11:02:33 2018 +0100

    file: minor cleanups

[33mcommit ce08a43bdaf5fc5ea81e76d6c5cd30b459bdaba7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 25 10:32:13 2018 +0100

    file: use enum for state
    
    Makes debugging easier.

[33mcommit 3a2e4614d074ac66df1f7b5a3ec15d9da9c78660[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 25 10:05:55 2018 +0100

    rust/file: handle file open errors

[33mcommit 45c5030ff070c2ba08409fcd7b6c5a48f0a34f22[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 25 09:56:37 2018 +0100

    rust/file: change return type for FileOpenFileWithId
    
    Make it int so we can easily check it in Rust. No consumer used the
    File pointer that was returned before anyway.

[33mcommit 288ddc95acf148837729233f7ca1f870f835b9b8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 25 09:47:02 2018 +0100

    rust/core: comment cleanup

[33mcommit 4a89d939fcb1a0718916f7b3ffce138be50e7138[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Jan 25 16:19:57 2018 -0600

    .gitignore: only ignore *.yaml in root directory

[33mcommit cba41207b3f2d8251f7e0f7944683134d9cf8233[m
Author: Alexander Gozman <a.gozman@securitycode.ru>
Date:   Thu Jan 18 09:05:15 2018 +0000

    af_packet: bug #2422.
    
    This commit fixes a leak of mmap'ed ring buffer that was not
    unmaped when a socket was closed. In addition, the leak could
    break an inline channel on certain configurations.
    
    Also slightly changed AFPCreateSocket():
    1. If an interface is not up, it does not try to apply any
       settings to a socket. This reduces a number of error messages
       while an interface is down.
    2. Interface is considered active if both IFF_UP and IFF_RUNNING
       are present.

[33mcommit 790ef2701a0752a8928bc57ce2bddd4e2b61a206[m
Author: Danny Browning <danny.browning@protectwise.com>
Date:   Sat Jan 13 08:51:20 2018 -0700

    runmode-unix-socket: interrupt as commanded (2413)
    
    https://redmine.openinfosecfoundation.org/issues/2413
    
    Once interrupt occurs, reset the interrupt flag so that future runs are
    not immediately interrupted.

[33mcommit 63b9b9e9aacb6e0a6d7f605713cb9df1a1eb8e27[m
Author: Pascal Delalande <pdl35@free.fr>
Date:   Tue Dec 5 22:42:57 2017 +0100

    unix-socket: socket permission update
    
    So far, the suricata socket suricata-command.socket has the rights
     rw-r----- suricata:user.
    When suricata is used with restricted access, an other application
    (suricatasc like) that needs to access to the command socket also
    with restricted access can not write to the socket since it is not
    the owner (e.g suricata within container, with an hardened value
    for umask and hardened rights for users).
    
    The socket should be set as rw-rw----. Use chmod instead of fchmod
    and set it after the socket creation.

[33mcommit 0813f080754378d544b2b2a344952d7a32744f08[m
Author: Danny Browning <danny.browning@protectwise.com>
Date:   Sat Jan 13 08:08:11 2018 -0700

    suricatasc: pcap-file-continuous (2412)
    
    https://redmine.openinfosecfoundation.org/issues/2412
    
    Suricatasc is not supporting pcap-file processing in continuous mode.
    Register a new command pcap-file-continuous in the unix manager to work
    with suricatasc. Add defaulted arguments for pcap-file to support
    backwards compatibility.

[33mcommit 18f64e0d21d56a364679eaab7c7fee862290e4b0[m
Author: Martin Natano <martin.natano@radarservices.com>
Date:   Mon Oct 30 16:03:25 2017 +0100

    app-layer-htp, stream-tcp: prevent modulo bias in RandomGetWrap()
    
    RAND_MAX is not guaranteed to be a divisor of ULONG_MAX, so take the
    necessary precautions to get unbiased random numbers. Although the
    bias might be negligible, it's not advisable to rely on it.

[33mcommit 2e4305f504ae115092320db2cef721b49ada1fe8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 23 08:55:37 2018 +0100

    detect: minor cleanup

[33mcommit 1bdf325a9a872c401cf967aa9d2e7da53aea347d[m
Author: Maurizio Abba <mabba@lastline.com>
Date:   Tue Jan 16 18:12:28 2018 +0000

    signal: use centralized pthread_sigmask for signals
    
    according to its man page, sigprocmask has undefined behavior in
    multithreaded environments. Instead of explictly blocking the handling
    of SIGUSR2 in every thread, direct block handling SIGUSR2 before
    creating the threads and enable again the handling of this signal
    afterwards. In this way, only the main thread will be able to manage
    this signal properly.

[33mcommit 990e53222e4ced822ea3383c6146a3e21051ec0e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 23 08:44:46 2018 +0100

    threshold: minor cleanups

[33mcommit fb87d21ec747871afa50114b5e78944d982bf935[m
Author: Ruslan Usmanov <ruslan.usmanov@threattrack.com>
Date:   Tue Dec 12 13:10:07 2017 -0500

    rate_filter: by_rule fixed triggering algorithm
    
    Fixes issue #2258
    
    Program was triggering rate_filter by_rule earlier than needed
    and generally behaved like a threshold.

[33mcommit d5882372357e957fd38c658f012b5d5943c9923e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 19 16:14:33 2017 +0100

    detect/content: implement endswith

[33mcommit 07738af8682d55c985a55fefcaaa6c4110b4601f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 16 11:44:18 2017 +0100

    detect/content: introduce startswith modifier
    
    Add startswith modifier to simplify matching patterns at the start
    of a buffer.
    
    Instead of:
        content:"abc"; depth:3;
    This enables:
        content:"abc"; startswith;
    
    Especially with longer patterns this makes the intention of the rule
    more clear and eases writing the rules.
    
    Internally it's simply a shorthand for 'depth:<pattern len>;'.
    
    Ticket https://redmine.openinfosecfoundation.org/issues/742

[33mcommit 5e65d79be0473e303af9924ec50dac624dca6904[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 2 12:44:29 2017 +0100

    detect: bypass merge sort call if possible

[33mcommit 11cb84ad35a45748b2192c7a47d5a4797807dcec[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 1 17:38:22 2017 +0100

    detect: profiling update for new detect code

[33mcommit cf2feeecf430bd7b5f3d2ec1fcf4d7e98981d692[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 31 17:48:18 2017 +0100

    detect/prefilter: redo profiling

[33mcommit 31648913e6c6763ba13f1aa0c50684f8dc06cbdc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 23 10:48:56 2017 +0200

    detect/profiling: postpone setup
    
    Do this to allow for including of runtime buffer registrations.

[33mcommit 91827568918a6ad84b808d4c3f63100bfab50b4d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 23 12:29:55 2017 +0200

    detect/fast-pattern: use registered buffers for check

[33mcommit fdbcf948c1ecac6b4f4c63a7996dcd14f537f6bc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 12 08:49:20 2018 +0100

    output/filedata: call loggers on both directions

[33mcommit f75df19c35b6a36c00083ebaf7d06ecf4efac70e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 11 20:42:54 2018 +0100

    output/file: run file loggers in both directions
    
    This avoids the wait for injected packets when file is already ready
    to be logged.

[33mcommit 2b8f34a1b5e7ac7b9b756d5abf1fdbbe518a84dc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 11 13:50:59 2018 +0100

    detect/state: clean up old code

[33mcommit 1df00749df6b250db79e9ad3760dea1a2b99cfb9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 10 19:17:33 2018 +0100

    detect: fix multiple files per tx inspect
    
    Fix the inspection of multiple files in a single TX, where new files
    may be added to the TX after inspection started.
    
    Assign the hard coded id DE_STATE_FLAG_FILE_INSPECT to the file
    inspect engine.
    
    Make sure that sigs that do file inspection and don't match on the
    current file always store a detailed state. This state will include
    the DE_STATE_FLAG_FILE_INSPECT flag.
    
    When the app-layer indicates a new file is available, for each sig
    that has the DE_STATE_FLAG_FILE_INSPECT flag set, reset part of the
    state so that the sig is evaluated again.

[33mcommit 7a96d18f36817ec8280546b248ef0d0afe16f88a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 11 19:02:43 2017 +0200

    app-layer: improve async and out of order txs
    
    Free txs that are done out of order if we can. Some protocol
    implementations have transactions running in parallel, where it is
    possible that a tx that started later finishes earlier than other
    transactions. Support freeing those.
    
    Also improve handling on asynchronious transactions. If transactions
    are unreplied, e.g. in the dns flood case, the parser may at some
    point free transactions on it's own. Handle this case in
    the app-layer engine so that the various tracking id's (inspect, log,
    and 'min') are updated accordingly.
    
    Next, free txs much more aggressively. Instead of freeing old txs
    at the app-layer parsing stage, free all complete txs at the end
    of the flow-worker. This frees txs much sooner in many cases.

[33mcommit 3d9ade9c351c736e24e2fb4b67cbe63756c04cd8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 10 12:40:03 2017 +0200

    detect/prefilter: show prefilter engine id space

[33mcommit 5f890296b53afacd729e5d77f09aed9f27540aa5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 10 11:54:35 2017 +0200

    app-layer: warn that MpmIDs API is no longer used
    
    Remove implementation.

[33mcommit 4be73fac5e88da9aa14bddc829db2e4410c4b1fa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 9 17:52:19 2018 +0100

    detect/flowbits: apply state knowledge
    
    When stateless rules are depending on a flowbit being set by a stateful
    rule, the inspection order is almost certainly wrong.
    
    Switch stateless rules depending on stateful rules to being stateful.
    This is used to turn 'TCP stream' inspecting rules (which are stateless
    unless mixed with stateful keywords) into stateful rules.

[33mcommit af51e0f5a12865a1d805f7010ee02e8b7444aa38[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 8 11:42:30 2017 +0200

    detect: rewrite of the detect engine
    
    Use per tx detect_flags to track prefilter. Detect flags are used for 2
    things:
    1. marking tx as fully inspected
    2. tracking already run prefilter (incl mpm) engines
    
    This supercedes the MpmIDs API for directionless tracking
    of the prefilter engines.
    
    When we have no SGH we have to flag the txs that are 'complete'
    as inspected as well.
    
    Special handling for the stream engine:
    
    If a rule mixes TX inspection and STREAM inspection, we can encounter
    the case where the rule is evaluated against multiple transactions
    during a single inspection run. As the stream data is exactly the same
    for each of those runs, it's wasteful to rerun inspection of the stream
    portion of the rule.
    
    This patch enables caching of the stream 'inspect engine' result in
    the local 'RuleMatchCandidateTx' array. This is valid only during the
    live of a single inspection run.
    
    Remove stateful inspection from 'mask' (SignatureMask). The mask wasn't
    used in most cases for those rules anyway, as there we rely on the
    prefilter. Add a alproto check to catch the remaining cases.
    
    When building the active non-mpm/non-prefilter list check not just
    the mask, but also the alproto. This especially helps stateful rules
    with negated mpm.
    
    Simplify AppLayerParserHasDecoderEvents usage in detection to only
    return true if protocol detection events are set. Other detection is done
    in inspect engines.
    
    Move rule group lookup and handling into it's own function. Handle
    'post lookup' tasks immediately, instead of after the first detect
    run. The tasks were independent of the initial detection.
    
    Many cleanups and much refactoring.

[33mcommit 8cda2a43510d3465a8134e2263973919ca990223[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 16 15:30:28 2017 +0200

    rust/nfs: add support for detect_flags API

[33mcommit edb9c59526ffd562a31747568855cb224f714d7f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 17 15:13:55 2018 +0100

    dns: support detect flags

[33mcommit 98eca55241fe80a9ffc400269e828890a1c9b233[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 13 08:12:21 2017 +0200

    rust/dns: implement detect_flags API

[33mcommit 00b0a41b55dc6f876c313a228c470ab2fbdd25a7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 10 11:54:02 2017 +0200

    http: move from MpmIDs to DetectFlags API

[33mcommit d0f19891b4078cd696b28ddb77361b1fbbc9d626[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 17 10:19:41 2017 +0200

    ssl/tls: use DetectFlags API

[33mcommit 73b59bda532a6bb232deddf79b5287b6ae0bb20f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 16 15:56:53 2017 +0200

    smtp: implement DetectFlags API

[33mcommit 1bed6e9caecad5b661874d1166901217609f80dd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 16 15:48:05 2017 +0200

    ssh: implement DetectFlags API

[33mcommit daeb8fd34306fb7a6e661ba884509fdc42776737[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 10 11:17:52 2017 +0200

    app-layer: detect flags API calls
    
    Add API meant to replace the MpmIDs API. It uses a u64 for each direction
    in a tx to keep track of 2 things:
    
    1. is inspection done?
    2. which prefilter engines (like mpm) are already completed

[33mcommit 51d429b3b16863996686da7ad43353182ad6011e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 13 11:01:38 2017 +0200

    flowbits: analyze and dump to json
    
    Analyze flowbits to find which bits are only checked.
    
    Track whether they are set and checked on the same level of 'statefulness'
    for later used.
    
    Dump flowbits to json including the sids that set/check etc the bit.

[33mcommit d05355db3d6e2752ae0582a7ea8c1a0f08bde91c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 18 17:38:09 2018 +0100

    filestore: minor cleanups and warning fixes

[33mcommit 46d754044ed39e3f90543bedd7b64e966d44c521[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Jan 18 06:42:19 2018 -0600

    suricatasc: don't use find -delete
    
    For when -delete isn't supported by find. Instead use
    -print0 with xargs -0.

[33mcommit 5420c0ab062627782591c1801089536edffe644f[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Jan 17 07:51:38 2018 -0600

    doc: document file-store v2

[33mcommit aa0760a8d5527510a16d1a30c4fae609870da6f2[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Jan 12 14:46:31 2018 -0600

    filestore: only allow one filestore to be enabled
    
    There is probably not too much bad about enabling both, but
    open file counts can get messy with both enabled. And v1
    should be schedule for deprecation soon enough.

[33mcommit cc35a5b81ffde8cdb15d2ada7aea96587a853462[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Jan 12 14:43:01 2018 -0600

    filestore (old): register global stat in init func
    
    This doesn't need to be registered from suricata.c. And moving
    it to the init function makes sure its only registered if
    the logger is actually enabled.

[33mcommit 9b1d26807151075de14f45a41c010dd183cfa662[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Jan 12 13:35:51 2018 -0600

    filestore2: warn once for file errors
    
    Track each type of error warning and only log it once. Also create
    a new stat, file_store.fs_errors to count each file system type
    error (open, rename, unlink).
    
    Also remove exit stats, they are of limited value.

[33mcommit 9456a3164db2a165a864ca2bd09edd7930c5a105[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Jan 12 12:56:42 2018 -0600

    util-error: define SC_ERR_MAX

[33mcommit 50b5a3a56d3b4623d2cf193c2e796fb345385dac[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Jan 9 07:51:26 2018 -0600

    suricatactl: a new python script for misc. tasks
    
    Use a new directory, Python to host the Suricata python modules.
    One entry point is suricatactl, a control script for
    miscalleneous tasks. Currently onl filestore pruning
    is implemented.

[33mcommit f7c3f3018664838d8c70c643c74a1a98f1a83972[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Jan 8 14:09:01 2018 -0600

    filestore v2: use fileinfo records as metadata
    
    As fileinfo records are logged to the main eve log, disable
    metadata by default. But when enabled, just use the fileinfo
    record.
    
    Metadata is stored in a file named:
      <sha256>.<seconds>.<file_id>.json
    
    where the sha256 is the same as the file logged, the seconds
    is the unix timestamp in seconds for the fileinfo record,
    and the file_id is an atomically incremented integer per
    Suricata instance.
    
    This should allow for each occurrence of the same file to have
    its own metadata file. But a collision is expected when running
    Suricata repeatedly over the same pcap, as that would be the
    exact same occurrence of a file.

[33mcommit f631e8cd906d26a9c9ecdc3f5c9e0c3f8d1f05dd[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Jan 8 13:39:56 2018 -0600

    file extract: force sha256 even if truncated
    
    Even if a file is truncated, force the SHA256 if force sha256
    is set to yes.
    
    The new file store requires the sha256 regardless of the file
    state if it is to be logged, as the filename is based on the
    sha256.

[33mcommit 4a9731505717cab8a0fbc68f6a649dfb005c0120[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Jan 4 14:28:29 2018 -0600

    filestore v2 - initial version
    
    Filestore v2 is starts as a copy of log-filestore with the
    following changes.
    
    - NSS is required as file names as based on the SHA256.
    - Work/tmp files are stored in a temp. directory, then
      moved into a directory tree where the directory names
      are the first 2 characters of the hex SHA256.
    - Removes the need for a waldo file or pid in the filenames.

[33mcommit dbdac73784c7420488ea2e83bb5bf2c8c60d5c20[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Jan 8 15:11:54 2018 -0600

    configure: check for utime.h and utime()

[33mcommit ccbe7401b6ad171cc95c37486f826a2aa2d877b5[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Jan 18 06:17:00 2018 -0600

    output-json-file: let caller decide if file is stored
    
    Mainly for the filestore module, which may have its own
    knowledge of the file being stored before others.

[33mcommit 59bb98afccee9f8af8f73841bc4e2cf829f5b5cd[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Jan 8 13:41:34 2018 -0600

    eve/fileinfo: split record creation from writing
    
    Split the building of the fileinfo record from the writing
    of the record so the building can be called from other code.
    Specifically the new filestore output which uses fileinfo
    records as the metadata.

[33mcommit c8b6212a975d05a57edee70c8eb5cbb577e9e21a[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Jan 4 11:14:42 2018 -0600

    util-error: new error: SC_ERR_CREATE_DIRECTORY
    
    For logging directory create errors.

[33mcommit 38bbdb51d5c102a8f376df943d2f6b5f5de81ab6[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Jan 4 11:11:06 2018 -0600

    SCPathExists - function to see if a path exists
    
    Returns true if path exists, otherwise false.

[33mcommit c0ffe4055a579e895ab50b9e06db4ef18d84bb6e[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Jan 4 11:07:50 2018 -0600

    create directory: final arg to control full path or prefix
    
    Give SCCreateDirectoryTree a new argument, final. If true the
    full path will be created as a directory. If false, the last
    component will not be created as a directory (current
    behaviour).

[33mcommit 0d558ddc27a4f74b8754b7bd0df7bc9f67c8b94c[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Jan 4 11:04:52 2018 -0600

    create directory: fix strlcpy usage
    
    The final character was being cut off.

[33mcommit de2fffca5e5d3aece0176418fff3a253eaab4aed[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Jan 4 10:06:31 2018 -0600

    util: move SCCreateDirectoryTree to util-path
    
    Renames SCLogCreateDirectoryTree to SCCreateDirectoryTree
    and move into a util module for re-use.
    
    Also moves SCMkDir from suricata-common.h to the more
    appropriately names util-path.h.
    
    I would have prefered to use util-file for file related options
    but that is already used by file store utilities. util-path
    is close enough for file related operations.

[33mcommit 00e6cd4ced0197c580ebea8855c13889409bab71[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Jan 11 16:34:33 2018 -0600

    output: introduce init return type
    
    The new OutputInitResult is a struct return type that allows
    logger init functions to return a NULL context without
    raising error.
    
    Instead of returning NULL to signal error, the "ok" field will
    be set to false. If ok, but the ctx is NULL, then silently
    move on to the next logger.
    
    Use case: multiple versions of a specific logger, and one
    implementation decides the configuration is not for that
    implemenation. It can return NULL, ok.

[33mcommit 50a762bfd164e27c55624c7e4f7e3c2e064ca788[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 16 11:54:39 2018 +0100

    thresholds: fix issues with host based thresholds
    
    The flow manager thread (that also runs the host cleanup code) would
    sometimes free a host before it's thresholds are timed out. This would
    lead to misdetection or too many alerts.
    
    This was mostly (only?) visible on slower systems. And was caused by a
    mismatch between time concepts of the async flow manager thread and the
    packet threads, resulting in the flow manager using a timestamp that
    was before the threshold entry creation ts. This would lead to an
    integer underflow in the timeout check, leading to a incorrect conclusion
    that the threshold entry was timed out.
    
    To address this,  check if the 'check' timestamp is not before the creation
    timestamp.

[33mcommit 4b24d965b8081c86759ef80080c50787d66f4727[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 17 13:04:54 2018 +0100

    stream/midstream: be more liberal with window
    
    Use the wscale setting when updating the window, even if it's very
    high.

[33mcommit 38e6901c34119f49903fa92130afe292aa948f13[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 15 18:16:47 2018 +0100

    threads: don't crash in slow shutdown
    
    If TmThreadDrainPacketThreads would take more than 60 seconds, the wait
    loop that follows it would reach 'timeout' condition immediately. This
    would lead to a null ptr deref of 'tv'.
    
    Fix by not counting the TmThreadDrainPacketThreads and also not doing
    the null ptr deref in any case.

[33mcommit 62ac13523ac818fc70f862b11fadfe6813608cb1[m
Author: Maurizio Abba <mabba@lastline.com>
Date:   Thu Jan 11 14:34:37 2018 +0000

    time: Force init cached_minute_start array
    
    In offline mode, if the starting timestamp is 0 suricata will never
    initialize cached_minute_start array. This cause the timestamp to be
    ignored when needed (e.g., in fast.log).
    
    This commit will force the initialization of this array.

[33mcommit 4b6555588f60ba2c6819a859e53b3b2263749592[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Sat Jan 13 16:09:26 2018 +0100

    NTP: ensure parser name is not freed after registration

[33mcommit aae50f8a7e7103be8ea9618edd470e797e4333d6[m
Author: Danny Browning <danny.browning@protectwise.com>
Date:   Sat Jan 13 07:45:25 2018 -0700

    util-time: Add function to convert timespec to epoch millis

[33mcommit e41acd3d05858b75c1a2b4b1698e2b7d99771570[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 10 16:24:08 2018 +0100

    destate: test cleanups

[33mcommit 56b1df1b4d4f2dfc5a80dd4099e373cf1fb5126f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 10 12:59:52 2018 +0100

    http: clean up & improve unittests

[33mcommit ba0899a77f3ec04fdef34ff9a8d71b97c6c0ad59[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Jan 6 10:01:55 2018 +0100

    conf: add function to get child with default

[33mcommit 4bfa3aeaf9b66c6bf0d79a4d261302a425d53200[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jan 5 22:32:34 2018 +0100

    af-packet: synchronize flags sizes
    
    They are passed from config to threads so they need to be of the
    same size.

[33mcommit 7266c12b4fefa68782e46437ac58206c5c5c40f2[m
Author: Maurizio Abba <mabba@lastline.com>
Date:   Thu Jan 11 15:21:06 2018 +0000

    print: Escape backslash in PrintRawUriFp
    
    PrintRawUriFp does not properly escape backslash. This causes confusion
    between a \ character and an hex-encoded character. PrintRawUriBuffer,
    instead, correctly does backslash-encoding.
    Adding proper escaping of backslash to PrintRawUriFp.

[33mcommit ec62eedc87b13f3f5dbcd845c46b601daed3ca93[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Thu Jan 11 18:54:28 2018 +0100

    Rust: remove deprecated functions LoggerFlags::get_logged/set_logged

[33mcommit 5c6868b327dda74b4f0bb7934923a4a93a2910c7[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Thu Jan 11 08:17:23 2018 +0100

    NTP: update logger to use new API

[33mcommit 044e7b8e209713f0bf381940258852356cbbe60c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 8 20:37:28 2018 +0100

    output: add missing dnp3 profiling labels

[33mcommit d634140fa238db3938a8dc1a409e0aa71329c26c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 8 19:46:06 2018 +0100

    logging: unique id's per log direction
    
    For loggers that register once per direction, use unique id's per
    direction.
    
    Reshuffle id's to keep tx log id's low so we can use u32 for tracking
    logged loggers.

[33mcommit bca0cd71ae1f9fec3ddaecceb9078ea738ddce15[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 6 00:20:44 2017 +0200

    app-layer: use logger bits to avoid looping
    
    Avoid looping in transaction output.
    
    Update app-layer API to store the bits in one step
    and retrieve the bits in a single step as well.
    
    Update users of the API.

[33mcommit 01724f04fab479b208534bc9e5fc9ea8b957f29b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 5 21:07:41 2017 +0200

    app-layer: register per proto logger bits
    
    Create a bitmap of the loggers per protocol. This is done at runtime
    based on the loggers that are enabled. Take the logger_id for each
    logger and store it as a bitmap in the app-layer protcol storage.
    
    Goal is to be able to use it as an expectation later.

[33mcommit 40986b1f61d26e9093cf6475e00809619c83d317[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 7 15:01:27 2017 +0200

    detect: put inspect code for MATCH-list into func
    
    Introduce DetectRunInspectRulePacketMatches to inspect the signatures
    match list.

[33mcommit 70597066e0046abc6104190386e9ade3decb9796[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 7 12:17:39 2017 +0200

    detect: move detect cleanup into util func

[33mcommit 01f9d0076c1fde879877dabd679ba517bda522a9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 7 12:15:03 2017 +0200

    detect: move packet hdr inspect into util func

[33mcommit 9ecd60c7a267a3c784922b9446ff553ca2fab80c[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jan 5 16:58:18 2018 +0100

    detect-ftpdata: register keyword
    
    Keyword registration was missing so the keyword was not existing.

[33mcommit 204474de39b48c38f24a6215ac4a03ac4753ce4f[m
Author: Maurizio Abba <mabba@lastline.com>
Date:   Fri Jan 5 18:03:42 2018 +0000

    runmodes: fix single runmode bug with pcap
    
    Fix crash for suricata running with pcap option and single runmode.
    
    Ticket: https://redmine.openinfosecfoundation.org/issues/2403

[33mcommit e1e9ada9df197e39a6c1228fd5d4b5df6bc43658[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 17 10:19:00 2017 +0200

    rust/nfs: improve file close handling

[33mcommit 350b5d99ce48ded517ac21ae8421ebda39f3201b[m
Author: Nick Price <nick@spun.io>
Date:   Thu Dec 28 11:11:17 2017 -0500

    rust/nfs: don't panic on malformed NFS traffic
    
    Instead set events.

[33mcommit ce59ec5d13cda6bebbb706e14789ac1cc4dcc755[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 1 19:03:24 2018 +0100

    af-packet: free ring buffer at exit

[33mcommit 485663583aedd548eae74bc6523e950193d14d4d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 21 16:25:13 2017 +0100

    rust/mingw: fix linker issues on mingw

[33mcommit 746638b2206400058eba4f4d30130bb8d61140c4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 30 14:55:26 2017 +0100

    cuda: remove
    
    Remove CUDA support as it has been broken for a long time.
    
    Ticket #2382.

[33mcommit 282dad79caed8b64cc2be8b0c20911642bcacd02[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 21 12:07:46 2017 +0100

    scan-build: fix memleak warning in port parsing

[33mcommit f342b11277b1b3cf62c00e6a0d7fe62b7a08e930[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 21 12:02:33 2017 +0100

    detect/tos: minor cleanups

[33mcommit 0c36ea64c28d6cb64729cc1d942b84d35c189bdc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 21 12:00:28 2017 +0100

    detect/tos: fix memleak in error path

[33mcommit 2a4b5adce88a5ee265ac545e2f7bdb5bc70ef7c3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 21 11:10:52 2017 +0100

    scan-build: simplify FatalErrorOnInit macro

[33mcommit 8aab6016cb00b5adc0b711a1df7ef28c60b6eb89[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 21 11:01:12 2017 +0100

    scan-build: don't use memory wrappers

[33mcommit c563c1fcabb00ec49b6cbe64d3d09af0d1ccc729[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 21 11:00:28 2017 +0100

    scan-build: fix warning in radix tree

[33mcommit 50a5b2e4581e3c831a6e248b9b66332c1600d16f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 21 10:59:03 2017 +0100

    scan-build: fix warning in streaming buffer

[33mcommit f2cacca9f82abf7303931b1f01807c3083be58f4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 21 10:47:52 2017 +0100

    threads: avoid NULL-ptr deref in thread init wait
    
    ** CID 1426745:  Null pointer dereferences  (FORWARD_NULL)
    /src/tm-threads.c: 2135 in TmThreadWaitOnThreadInit()
    
    ________________________________________________________________________________________________________
    *** CID 1426745:  Null pointer dereferences  (FORWARD_NULL)
    /src/tm-threads.c: 2135 in TmThreadWaitOnThreadInit()
    2129         struct timeval cur_ts;
    2130         gettimeofday(&start_ts, NULL);
    2131
    2132     again:
    2133         gettimeofday(&cur_ts, NULL);
    2134         if ((cur_ts.tv_sec - start_ts.tv_sec) > 120) {
    >>>     CID 1426745:  Null pointer dereferences  (FORWARD_NULL)
    >>>     Dereferencing null pointer "tv".
    2135             SCLogError(SC_ERR_THREAD_INIT, "thread \"%s\" failed to "
    2136                     "initialize in time: flags %04x", tv->name,
    2137                     SC_ATOMIC_GET(tv->flags));
    2138             return TM_ECODE_FAILED;
    2139         }
    2140

[33mcommit f5b27ae76746f438387c2f99706b5d5cb34507b0[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Wed Nov 29 12:07:44 2017 +0100

    Rust: fix probing function prototype: change sign and add Flow

[33mcommit 28ddf48899fad28bd21f7f187c0eb305ae105b8a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 11 18:18:28 2017 +0100

    mingw: improve ipaddress parsing

[33mcommit d62a212fa2b81baee7d34cf8f33b910728de3042[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 11 13:32:47 2017 +0100

    mingw: fix issues in pcap directory code
    
    Fix issues with 'stat' and explicitly skip . and ..

[33mcommit 6c7d485bf89e06730b3ae0274498f2d8f7027ccb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 27 14:31:45 2017 +0100

    mingw: wrapper for usleep in threads
    
    usleep on MinGW doesn't behave as expected. Added replacement
    wrapper around 'Sleep(msec)'. As that has msec resolution and
    not a usec resolution, change the various thread init and stop
    functions to test for the actual time waited instead of counting
    the usecs passed to usleep.

[33mcommit 1261d30df0fd1d9139c3d3a8ee371fdd3032b7fb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 27 09:06:03 2017 +0100

    mingw/cygwin: explicitly disable unix socket

[33mcommit 6b75162194d86d71dbcbb4a4c6bfdca7ca4228e0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 27 08:51:35 2017 +0100

    mingw: use c:\Program Files\Suricata for w64

[33mcommit 650e6b316dadefa7270d91f08abe1f09374875ae[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 26 11:17:57 2017 +0100

    ipv6: add string validation function

[33mcommit 13477d60ee3913b84298039b2d42c7832c655775[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 26 11:09:19 2017 +0100

    ipv4: add string validation function

[33mcommit aa2eddfb98090d41cbe7aa2b897b2d3b8976399f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 26 09:58:03 2017 +0100

    decode/mime: improve ip address validation
    
    inet_pton on Windows/MinGW is very liberal, so do manual validation
    of IP address formatting.

[33mcommit d6a7f6b53f97b6b76f35c659e40d25110aebb697[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 25 14:23:35 2017 +0100

    mingw: work around mingw more liberal ip parsing

[33mcommit 269cd03a431cac480e14560eb757a1c2a2fbd6d3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 25 10:34:34 2017 +0100

    console: no color for native windows build

[33mcommit 275eb839d1087c6f5cec18d17c6b67f9f529d429[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 17 16:20:22 2017 +0200

    mingw: disable pid checking from pidfile
    
    kill() call is not supported in MinGW

[33mcommit 3fc73addae250818e93376f891184fb919af609f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 17 16:19:32 2017 +0200

    mingw: fix 'struct tm' compilation issue

[33mcommit 46cb00ec6c0ee4a9c5d5c2c3f2565d577ac998cf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 17 15:26:43 2017 +0200

    strptime: add implementation from NetBSD
    
    As MinGW doesn't come with strptime take the BSD licensed
    implementation from NetBSD. More specifically, the one from
    
    https://github.com/Alexpux/MINGW-packages/blob/master/mingw-w64-libkml/strptime.c
    
    It's slightly modified to get rid on 'uint'.

[33mcommit 11be9bd971a84d934319c50443b662d216a95a70[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 17 13:45:44 2017 +0200

    mingw: add SCNtohl and SCNtohs macro's
    
    On MinGW the result of ntohl needs to be casted to uint32_t and
    the result of ntohs to uint16_t. To avoid doing this everywhere
    add SCNtohl and SCNtohs macros.

[33mcommit 895df9a6f6ad2dd26908f238f31e9946d60938ad[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 17 13:22:58 2017 +0200

    mingw: fix use of undefined USR2 signal

[33mcommit e113fa96e9a45d8c20ba4d71b732ca4ade747ce0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 17 11:02:47 2017 +0200

    mingw: fix compilation of signals code

[33mcommit d8ddd3b5bccdffd99ee5bf2ba3ebd09bede3f18c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jul 15 09:40:11 2017 +0200

    mingw: work around mingw mkdir
    
    mingw doesn't come with a posix compliant mkdir as it only takes
    a single argument.

[33mcommit 223d9a1e3ad223987c56801101223ab179e74931[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Dec 11 15:31:58 2017 -0600

    eve: remove json format option - was not used

[33mcommit 1587772b90e3f70589179513d13ab0cc6cc1751f[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Dec 19 16:50:25 2017 -0600

    eve.flow: removed unused http parameters

[33mcommit c4d30ddaf98e4f52878f165a8bfdf58e2b7c3bbd[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Dec 19 15:49:27 2017 -0600

    eve: fix context datatype used in init functions
    
    Many were using AlertJsonThread instead of OutputJsonCtx,
    but as the datatypes were similar enough no harm was done.
    
    Now that they are using their proper datatype, removed
    AlertJsonThread from output.h as its no longer used.

[33mcommit b005cceb0a017a306f142b9f3a41e79e22569d17[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Dec 19 15:46:31 2017 -0600

    eve.dnp3: removed unsed context field

[33mcommit ecf9eda3402943f3927a39b952e93244f1f964e2[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Dec 19 15:44:17 2017 -0600

    eve.flow: remove "hi" log message

[33mcommit 07ab338145ff697b78e684036ed2a2c8fca43514[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Dec 19 15:43:50 2017 -0600

    eve.netflow: remove "hi" log message

[33mcommit 6c251b857604e70626adfc10dddd3ddb8d039fa2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 20 14:14:34 2017 +0100

    rust: add --enable-rust-debug
    
    Add option to put Rust code in non-'--release' mode, preserving
    debug symbols.
    
    Until now Suricata would have to be compiled with --enable-debug for
    this.

[33mcommit 979f964260a11e938ec240dba7f52d9772a8972a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 14 23:14:31 2017 +0200

    hostbits: fix test setup

[33mcommit a9ac6db0dd4372e35ec6e9f2f05adc602ac90a07[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 14 10:09:57 2017 +0200

    file_data: move tests into tests/

[33mcommit 6e65cf138ba8c4d1f65efe8564ce554efb53a132[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 12 18:19:23 2017 +0200

    file_data: unify inspect engines
    
    Call HTTP from the generic file_data engine.

[33mcommit ac0ae2dcd1ec207e95ef4801c3469c17c392d2a6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 29 23:09:15 2017 +0200

    file_data: smtp file_data to generic file_data
    
    Generalize the SMTP file_data inspection into a 'files'
    file_data inspection that can be used for any protocol
    that uses the File API.

[33mcommit ccf202a4f0acb2b46e4d2921129f22f66e329003[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 8 18:28:30 2017 +0200

    detect: minor cleanup

[33mcommit 948dee9a981c53f5dc5f36fd671626a8364f43b0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 8 18:23:22 2017 +0200

    app-layer: use bool for 'HasDecoderEvents'

[33mcommit aac15854b41c7db199e6c88ded3b1029341c6b33[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 7 11:28:01 2017 +0100

    detect: no tcp flags in mask for pseudo packets

[33mcommit 0b97fbbc137fa4e077019b7c690b6723129d6a40[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Dec 17 20:08:12 2017 +0100

    detect/mpm: micro optimization in setup

[33mcommit 4438e34ed906b562247d26de6169d3ac5fb7f035[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 8 14:28:19 2017 +0200

    detect: remove old simd references

[33mcommit bc46d9a72f82f6eb4d903d60ff5701f985410469[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 20 09:30:42 2017 +0100

    decode/vlan: don't consider ARP 'unknown'

[33mcommit a8b0825c1847b4f680afc0a05046f665df9c8aea[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 20 09:03:33 2017 +0100

    pfring: minor code cleanups

[33mcommit 553cd0dc98770ac495a49048a72bf109075d94a7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 20 08:57:29 2017 +0100

    pfring: add warning for stripped vlan header case
    
    According to PF_RING upstream the vlan header should never be stripped
    from the packet PF_RING feeds to Suricata. But upstream also indicated
    keeping the check would be a good "safety check".
    
    So in addition to the check, add a warning that warns once (per thread
    for implementation simplicity) if the vlan hdr does appear to be stripped
    after all.

[33mcommit 189b521239a2be4da2da833f9fd5b2474e4a9464[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 19 20:17:39 2017 +0100

    pfring: fix vlan handling issues
    
    When Suricata was monitoring traffic with a single vlan layer, the stats
    and output instead showed 2. This was caused by the raw packets PF_RING
    feeds Suricata would hold the vlan header, but the code assumed that
    the header was stripped and the vlan_id passed to Suricata through
    PF_RING's extended_hdr.parsed_pkt.
    
    This patch adds the following logic: Check vlan id from the parser packet
    PF_RING prepared. PF_RING sets the vlan_id based on its own parsing or
    based on the hardware offload. It gives no indication on where the vlan_id
    came from, so we rely on the vlan_offset field. If it's 0, we assume the
    PF_RING parser did not see the vlan header and got it from the hardware
    offload. In this case we will use this information directly, as we won't
    get a raw vlan header later. If PF_RING did set the offset, we do the
    parsing in the Suricata decoder so that we have full control.
    
    PF_RING *should* put back the vlan header in all cases, and also set the
    vlan_offset field, but as a extra precaution keep the check described
    above.
    
    Bug #2355.

[33mcommit 711b6fb389d36f10afc72450cc2ae0b81d4f6935[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Nov 24 16:59:34 2017 +0100

    app-layer-ftp: add memcap for ftp
    
    Add a memory cap for the FTP protocol.

[33mcommit 24f745553c501064f4df2405454aec367236f74c[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Nov 19 20:27:17 2017 +0100

    doc: update file extraction document
    
    Define the list of protocol parsers supporting extraction in one
    single place following Andreas Herz' suggestion.

[33mcommit f5ba4c231de27e7b0d9f66177877725c7979294a[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Nov 19 20:22:46 2017 +0100

    doc: update following ftp-data changes

[33mcommit cbce2c78bd779daeafc541bd6f182941c14eeae0[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Nov 19 20:21:08 2017 +0100

    detect-ftpdata: match on ftp-data operation
    
    This keyword mathes on ftp operation STOR and RETR. It will allow
    rules writer to select if the alert has to be on a put or a fetch
    operation.
    
    It is now possible to write a signature like:
    
      alert ftp-data any any -> any any (msg:"FTP data get firwmare"; ftdata_command:retr; sid:2; rev:1;)
    
    to alert when a file is retrieved from a FTP server.

[33mcommit b0a6934431fc961fcf500400003a719462afe980[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Sep 13 15:48:29 2017 +0100

    app-layer-ftp: add ftp-data support
    
    Use expectation to be able to identify connections that are
    ftp data. It parses the PASV response, STOR message and the
    RETR message to provide extraction of files.
    
    Implementation in Rust of FTP messages parsing is available.
    
    Also this patch changes some var name prefixed by ssh to ftp.

[33mcommit 140f8baed99498b734d42254175e141ea8cb784a[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Sep 12 14:11:01 2017 +0100

    app-layer-expectation: expectation system
    
    This patch provides a working expectation system. This will allow
    suricata to have a way to identify parallel connections opened by
    a protocol such as FTP.
    
    Expectation are a chained list and there is a cleaning by timeout
    of the entries.
    
    This patch also defined a counter of expectations that is also
    used to check if we need to query IPPairs. This way we only query
    the IPPairs store if we have an expectation.

[33mcommit 31a0783865cd0d4c4c8d4b5020620c534ea2e135[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Sep 12 16:43:41 2017 +0100

    app-layer: add Flow to probing parser functions

[33mcommit 2d68050e609f12f7f40078de366125f3777efd06[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Sep 16 13:28:22 2017 +0100

    flow: add parent_id field
    
    This patch adds a parent_id field to the Flow structure that
    contain the flow ID of the parent connection for protocol with
    dynamic parallel connection opening like FTP.

[33mcommit 5be5e7c879b0c095335e5f521e901dceffeb55a5[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Sep 15 14:33:33 2017 +0100

    detect: increase signature mask length

[33mcommit 7f9f130ec320913d4276ca4607c1d19d8bae55d8[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Sep 12 22:53:51 2017 +0100

    suricata: storage early to get it everywhere

[33mcommit 70695201f6eb6099da2f5cc18656573024146702[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Fri Dec 1 14:48:54 2017 +0100

    doc: add memcap commands in unix-socket section

[33mcommit 16ddba61d6d69c2b948e516a9024e66f9bbc61e2[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Mon Nov 20 15:22:54 2017 +0100

    suricatasc: add commands for memcap handling

[33mcommit 3668ea25224a2a7a50c2694e500fae74205b7a87[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Mon Nov 20 15:19:45 2017 +0100

    runmode-unix-socket: add commands for memcap handling
    
    This permits to handle memcap values through
    unix socket for:
    - stream
    - stream-reassembly
    - flow
    - applayer-proto-http
    - defrag
    - ippair
    - host
    
    It will be possible to show or change a memcap value
    for a specified configuration and list all memcap values
    available.
    
    The following commands are registered for unix-socket:
    - memcap-set
    - memcap-show
    - memcap-list
    
    Output:
    >>> memcap-show flow
    Success:
    {
        "value": "64mb"
    }
    
    >>> memcap-set flow 64mb
    Success:
    "memcap value for 'flow' updated: 67108864"
    
    Command with invalid memcap key:
    >>> memcap-set udp 32mb
    Error:
    "Available config: stream stream-reassembly flow applayer-proto-http defrag ippair host"
    
    Command with an invalid memcap value:
    >>> memcap-set http 32mmb
    Error:
    "error parsing memcap specified, value not changed"

[33mcommit bba8cfb6267e576d4dfac4e06269896e71b671dd[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Mon Nov 20 15:13:00 2017 +0100

    host: get/set memcap value
    
    This adds new functions that will be called
    through unix-socket and permit to update
    and show memcap value.
    
    The memcap value needs to be handled in a
    thread safe way, so for this reason it is
    declared as atomic var.
    
    Another function is added to gets
    the memuse value since it will be shown
    through unix-socket.

[33mcommit e4a18bb9420d23fd3016c5966884d33b00740f2e[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Mon Nov 20 15:11:15 2017 +0100

    ippair: get/set memcap value
    
    This adds new functions that will be called
    through unix-socket and permit to update
    and show memcap value.
    
    The memcap value needs to be handled in a
    thread safe way, so for this reason it is
    declared as atomic var.
    
    Another function is added to gets
    the memuse value since it will be shown
    through unix-socket.

[33mcommit 0839d0651433d55f3d18facbc16d3471e28895c8[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Mon Nov 20 15:09:17 2017 +0100

    defrag: get/set memcap value
    
    This adds new functions that will be called
    through unix-socket and permit to update
    and show memcap value.
    
    The memcap value needs to be handled in a
    thread safe way, so for this reason it is
    declared as atomic var.
    
    Another function is added to gets
    the memuse value since it will be shown
    through unix-socket.

[33mcommit 7addc24566919feea6bc47eef8ae7ee7bdb963ab[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Mon Dec 11 09:42:56 2017 +0100

    htp: destroy atomic vars
    
    Atomic vars declared in app-layer-htp-mem.c were not
    destroyed when suricata is shutdown.

[33mcommit 85ddeb3afa8328989ca0e5179421c277a086da03[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Mon Nov 20 15:06:54 2017 +0100

    htp: get/set memcap value
    
    This adds new functions that will be called
    through unix-socket and permit to update
    and show memcap value.
    
    The memcap value needs to be handled in a
    thread safe way, so for this reason it is
    declared as atomic var.

[33mcommit 6fdad7d9e58bb07f085c262c998d2cc3f741c3a0[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Mon Nov 20 15:02:32 2017 +0100

    flow: get/set memcap value
    
    This adds new functions that will be called
    through unix-socket and permit to update
    and show memcap value.
    
    The memcap value needs to be handled in a
    thread safe way, so for this reason it is
    declared as atomic var.
    
    FlowGetMemuse() function is made as public
    because the memuse value will be shown
    through unix-socket.

[33mcommit 80bf728bfe80eec5b9df5c47b14daba318952fc6[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Mon Nov 20 14:39:22 2017 +0100

    stream-tcp: get/set memcap value
    
    This adds new functions that will be called
    through unix-socket and permit to update
    and show memcap value.
    
    The memcap value needs to be handled in a
    thread safe way, so for this reason it is
    declared as atomic var.

[33mcommit 4a75eaf40590bfd5bf276482abea710b117a55da[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Wed Dec 13 12:26:35 2017 +0100

    stream-tcp-reassemble: declare 'size' as uint64_t
    
    According to all checking memcap functions,
    the size passed as argument is declared as uint64_t
    except for StreamTcpReassembleCheckMemcap where it's
    defined as uint32_t.

[33mcommit 802bdb26951b15f992508dd0e81084d673a402e3[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Mon Mar 17 18:59:35 2014 +0100

    Hash table: free bucker in case of insertion error
    
    This fixes a warning raised by cppcheck.

[33mcommit bf166420fa5b7ecb56b82edeee19a1614a5922ae[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Fri Mar 14 18:59:11 2014 +0100

    Hash table: check hash array size when inserting element
    
    If the hash function returns an index greater than the array size of the
    hash table, the index is not checked. Even if this is the responsibility
    of the caller, add a safety check to avoid errors.

[33mcommit 3bf098e52f19086c53f5246c474db8fb0bd6dc84[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Dec 12 12:48:42 2017 +0100

    doc: document log reopen unix socket command

[33mcommit 3205a8789b418dc601e85bc90b92d0091834fd7c[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Nov 27 11:23:24 2017 +0100

    unix-socket: add logs reopen command
    
    We did had a race condition with running logrotate with multiple
    EVE Json files. Consequence was one of the file not being reopen
    by suricata that did continue to write to the rotated one.
    
    Trying fix on signal handler did fail so this patch implements
    log rotation support by adding a dedicated command to unix socket
    to reopen the log files.

[33mcommit cf8d770caad3b049d67143d3e84f6fb56c28d6b9[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Dec 18 06:58:18 2017 -0600

    dns-log: don't register if HAVE_RUST
    
    Log just one notice message when attempting to register
    this logger with HAVE_RUST, instead of logging on
    every attempt to output a DNS record.
    
    Issue:
    https://redmine.openinfosecfoundation.org/issues/2365

[33mcommit 5a8537fe4a7b0a3288e14e2d9c510417c9353f1d[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Dec 18 06:46:17 2017 -0600

    rust/dns - convert more type values to text
    
    Issue:
    https://redmine.openinfosecfoundation.org/issues/2364
    
    Convert more record type and errr code values to text.
    Remove duplicate type declarations.

[33mcommit 9d1f07c021da8ebc01054773ca45444af5a11bb4[m
Author: Wolfgang Hotwagner <code@feedyourhead.at>
Date:   Mon Dec 18 14:49:38 2017 +0000

    Conf: Multipe NULL-pointer dereferences in PostConfLoadedSetup
    
    Multiple NULL-pointer dereferences after ConfGet in PostConfLoadedSetup can cause suricata to terminate with segfaults. The ASAN-output:
    
    ASAN:DEADLYSIGNAL =================================================================
    5734ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f1a9a3967cc bp 0x7ffdff033ad0 sp 0x7ffdff033250 T0)
     0 0x7f1a9a3967cb (/usr/lib/x86_64-linux-gnu/libasan.so.3+0x447cb)
     1 0x55ba65f66f27 in PostConfLoadedSetup /root/suricata-1/src/suricata.c:2652
     2 0x55ba65f6870e in main /root/suricata-1/src/suricata.c:2898
     3 0x7f1a96aeb2b0 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x202b0)
     4 0x55ba65af9039 in _start (/usr/local/bin/suricata+0xc8039)
    
    AddressSanitizer can not provide additional info.
    SUMMARY: AddressSanitizer: SEGV (/usr/lib/x86_64-linux-gnu/libasan.so.3+0x447cb)
    
    This commit fixes Bug #2370 by replacing ConfGet by ConfGetValue

[33mcommit a463910ff2be7122d8995eb9624856bfce2d0276[m
Author: Wolfgang Hotwagner <code@feedyourhead.at>
Date:   Sun Dec 17 22:15:27 2017 +0000

    Conf: Multipe NULL-pointer dereferences after ConfGetBool in StreamTcpInitConfig
    
    There are multiple NULL-pointer dereferences after calling ConfGetBool in StreamTcpInitConfig. ConfGetBool calls ConfGet which doesn't check the vptr-argument. This is a sample ASAN-output:
    
    1453ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f2969b83a28 bp 0x7ffdbf613a90 sp 0x7ffdbf613210 T0)
     0 0x7f2969b83a27 in strcasecmp (/usr/lib/x86_64-linux-gnu/libasan.so.3+0x51a27)
     1 0x564185accefd in ConfValIsTrue /root/suricata-1/src/conf.c:559
     2 0x564185accb4f in ConfGetBool /root/suricata-1/src/conf.c:512
     3 0x564185dcbe05 in StreamTcpInitConfig /root/suricata-1/src/stream-tcp.c:381
     4 0x564185e21a88 in PreRunInit /root/suricata-1/src/suricata.c:2264
     5 0x564185e24d2c in PostConfLoadedSetup /root/suricata-1/src/suricata.c:2763
     6 0x564185e2570e in main /root/suricata-1/src/suricata.c:2898
     7 0x7f29662cb2b0 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x202b0)
     8 0x5641859b6039 in _start (/usr/local/bin/suricata+0xc8039)
    
    AddressSanitizer can not provide additional info.
    SUMMARY: AddressSanitizer: SEGV (/usr/lib/x86_64-linux-gnu/libasan.so.3+0x51a27) in strcasecmp
    1453ABORTING
    
    This commit replaces ConfGet by ConfGetValue in ConfGetBool. This does not only fix Bug #2368 but might also fix others too.

[33mcommit ed041239f388e572f7eb30cf1c7f51df755b7eb6[m
Author: Wolfgang Hotwagner <code@feedyourhead.at>
Date:   Sun Dec 17 21:54:15 2017 +0000

    Conf: Multipe NULL-pointer dereferences in HostInitConfig
    
    Multiple NULL-pointer dereferences after ConfGet in HostInitConfig can cause suricata to terminate with segfaults. The ASAN-output:
    
    ==29747==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7ff937904646 bp
        0 0x7ff937904645 in strlen (/lib/x86_64-linux-gnu/libc.so.6+0x80645)
        1 0x7ff93b146eec  (/usr/lib/x86_64-linux-gnu/libasan.so.3+0x3beec)
        2 0x5618387c86a3 in HostInitConfig /root/suricata-1/src/host.c:174
        3 0x56183893eccb in PostConfLoadedSetup /root/suricata-1/src/suricata.c:2752
        4 0x56183893f70e in main /root/suricata-1/src/suricata.c:2898
        5 0x7ff9378a42b0 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x202b0)
        6 0x5618384d0039 in _start (/usr/local/bin/suricata+0xc8039)
    
    AddressSanitizer can not provide additional info.
    SUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x80645) in strlen
    
    This commit fixes Bug #2367

[33mcommit 17e77346de7cc3c7bc16066d25935ee787b2abef[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 15 09:44:12 2017 +0100

    content: fix depth/within, offset/distance mix

[33mcommit 84f09d5124643c6be7fc9b9604f24609a6bfb1c4[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Dec 13 16:18:40 2017 -0600

    template scripts: fixup detect setup scripts
    
    Update scripts to reflect recent changes in the detection files.

[33mcommit d6c3a36113fadd579fd3fe1cde6bac80d439a7c4[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Thu Dec 14 01:10:33 2017 +0100

    detect-engine: add missing mutex unlock

[33mcommit 77e548ed1c3cfaa384b498e054e52d054e0e2b40[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Thu Dec 14 00:59:30 2017 +0100

    rule-reload: fix possible hangup with SIGUSR2
    
    In some cases the rule reload could hang. The pending USR2 signals will
    be recognized even with the <2 check. Also the SCLogWarning shouldn't be
    used in the handler (see Warning about SCLog* API above in the code).

[33mcommit be9ec3958ebf4eb2dc73a41f8668c57b1623b577[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 6 22:54:31 2017 +0100

    doc: initial suricata-update page

[33mcommit 0f50dc1488fe65b2ed5444dde67e653eddaa3833[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 13 13:05:23 2017 +0100

    pcap-directory: fix double free in error path

[33mcommit 367cec62928bf39172b19c0746207bdc1425a1a6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 13 10:28:19 2017 +0100

    app-layer/counters: check counter id
    
    Check counter id before updating a counter. In case of a disabled
    parser with the protocol detection enable, the id can be 0. In
    debug mode this would lead to a BUG_ON.

[33mcommit e2043668cb33ce86ff31ad1c03563d6139eed1c3[m
Author: Danny Browning <danny.browning@protectwise.com>
Date:   Tue Dec 12 18:07:09 2017 -0700

    source-pcap-file: Fix coverity findings (Bug #2356)
    
    https://redmine.openinfosecfoundation.org/issues/2356
    
    Address issues found by coverity for resource leaks and use after free.

[33mcommit 75d7fdb6937d4dae8ea2643fe985bd6599512983[m
Author: Danny Browning <danny.browning@protectwise.com>
Date:   Tue Dec 12 13:07:42 2017 -0700

    suricata: pcap-file-continuous ignores other options (Bug #2253)
    
    https://redmine.openinfosecfoundation.org/issues/2353
    
    Command line option pcap-file-continuous was ignoring command line options
    passed after its usage. Fixed bug, fixed formatting of help command
    regarding pcap-file-continuous.

[33mcommit 91f95ace2278a6562b345b679acecaa6ddc53ad6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 5 15:36:22 2017 +0100

    qa: add more drmemory suppressions for hyperscan

[33mcommit 611a2aca9fe273ee8d0cc3701fdfbe04daa8db11[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 12 21:05:34 2017 +0100

    prefilter/profile: validate end > start
    
    Seen underflow issues on profiling on arm (gettimeofday based.

[33mcommit 08971f1841c0204cca3ca94f905f74a7cba969d6[m
Author: Wolfgang Hotwagner <code@feedyourhead.at>
Date:   Mon Dec 11 20:20:00 2017 +0000

    conf: multiple NULL-pointer dereferences in StreamTcpInitConfig
    
    There are several NULL-pointer derefs in StreamTCPInitConfig. All of them happen because ConfGet returns 1 even if the value is NULL(due to misconfiguration for example).
    This commit introduces a new function "ConfGetValue". It adds return values for NULL-pointer to ConfGet and could be used as a replacement for ConfGet.
    
    Note: Simply modify ConfGet might not be a good idea, because there are some places where ConfGet should return 1 even if "value" is NULL. For example if ConfGet should get a Config-Leave in the yaml-hierarchy.
    
    Bug: 2354

[33mcommit 7236e65d64ee32de5a19cbff632dc4765c3e4b7a[m
Author: Wolfgang Hotwagner <code@feedyourhead.at>
Date:   Sat Dec 9 13:18:49 2017 +0000

    conf: multiple NULL-pointer dereferences in FlowInitConfig
    
    This commit fixes multiple NULL-pointer dereferences in FlowInitConfig after reading in config-values(flow.hash-size, flow.prealloc and flow.memcap) for flow. Here is a sample ASAN-output:
    
    =================================================================
    ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fea73456646 bp 0x7fffd70e1ba0 sp 0x7fffd70e1328 T0)
    0 0x7fea73456645 in strlen (/lib/x86_64-linux-gnu/libc.so.6+0x80645)
    1 0x7fea76c98eec (/usr/lib/x86_64-linux-gnu/libasan.so.3+0x3beec)
    2 0x5643efb4c205 in FlowInitConfig /root/suricata-1/src/flow.c:455
    3 0x5643efcd1751 in PreRunInit /root/suricata-1/src/suricata.c:2247
    4 0x5643efcd49f4 in PostConfLoadedSetup /root/suricata-1/src/suricata.c:2748
    5 0x5643efcd5402 in main /root/suricata-1/src/suricata.c:2884
    6 0x7fea733f62b0 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x202b0)
    7 0x5643ef8761a9 in _start (/usr/local/bin/suricata+0xc51a9)
    
    Ticketno: Bug #2349

[33mcommit 5370eb49aede37113897cb99f91e08358f68247b[m
Author: Wolfgang Hotwagner <code@feedyourhead.at>
Date:   Fri Dec 8 22:01:38 2017 +0000

    conf: use of NULL-pointer in DetectLoadCompleteSigPath
    
    The "sig_file" argument of DetectLoadCompleteSigPath() is not checked for NULL-values. If this argument is NULL a SEGV occurs because of a dereferenced NULL-pointer in strlen in PathIsAbsolute. This commit fixes bug #2347. Here is the ASAN-output:
    
    ==17170==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd1afa00646 bp 0x7ffe8398e6d0 sp 0x7ffe8398de58 T0)
        0 0x7fd1afa00645 in strlen (/lib/x86_64-linux-gnu/libc.so.6+0x80645)
        1 0x7fd1b3242eec  (/usr/lib/x86_64-linux-gnu/libasan.so.3+0x3beec)
        2 0x5561c8cddf7f in PathIsAbsolute /root/suricata-1/src/util-path.c:40
        3 0x5561c8cddfea in PathIsRelative /root/suricata-1/src/util-path.c:65
        4 0x5561c89275e4 in DetectLoadCompleteSigPath /root/suricata-1/src/detect.c:264
        5 0x5561c8929e75 in SigLoadSignatures /root/suricata-1/src/detect.c:486
        6 0x5561c8c0f2b3 in LoadSignatures /root/suricata-1/src/suricata.c:2419
        7 0x5561c8c1051d in PostConfLoadedDetectSetup /root/suricata-1/src/suricata.c:2550
        8 0x5561c8c12424 in main /root/suricata-1/src/suricata.c:2887
        9 0x7fd1af9a02b0 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x202b0)
        10 0x5561c87b31a9 in _start (/usr/local/bin/suricata+0xc51a9)
    
    AddressSanitizer can not provide additional info.
    SUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x80645) in strlen

[33mcommit c5c31886c8917bb52b5902e8dc5c7d4ccabd799f[m
Author: Wolfgang Hotwagner <code@feedyourhead.at>
Date:   Fri Dec 8 21:39:11 2017 +0000

    conf: NULL-pointer dereference in ConfUnixSocketIsEnable
    
    The value for the configuration-option "unix-command.enabled" is not properly checked in ConfUnixSocketIsEnable. This causes a NULL-pointer dereference in strcmp. This commit fixes bug #2346. The ASAN-output looks like:
    
    ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f03b69737cc bp 0x7ffcef322c10 sp 0x7ffcef322390 T0)
    0 0x7f03b69737cb (/usr/lib/x86_64-linux-gnu/libasan.so.3+0x447cb)
    1 0x5617a76d3f55 in ConfUnixSocketIsEnable /root/suricata-1/src/util-conf.c:104
    2 0x5617a741b6e7 in DetectEngineMultiTenantSetup /root/suricata-1/src/detect-engine.c:2447
    3 0x5617a769e0c3 in PostConfLoadedDetectSetup /root/suricata-1/src/suricata.c:2527
    4 0x5617a76a0424 in main /root/suricata-1/src/suricata.c:2887
    5 0x7f03b30c82b0 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x202b0)
    6 0x5617a72411a9 in _start (/usr/local/bin/suricata+0xc51a9)
    
    AddressSanitizer can not provide additional info.
    SUMMARY: AddressSanitizer: SEGV (/usr/lib/x86_64-linux-gnu/libasan.so.3+0x447cb

[33mcommit cfd56f5ef7587284be17b45a635524a82f46e8ac[m
Author: Wolfgang Hotwagner <code@feedyourhead.at>
Date:   Fri Dec 8 21:05:29 2017 +0000

    conf: Memory-leak in DetectAddressTestConfVars
    
    There is a memory-leak in DetectAddressTestConfVars. If the programm takes the "goto error"-path, the pointers gh and ghn will not be freed. This commit fixes bug #2345. Here is the ASAN-output:
    
    =================================================================
    ERROR: LeakSanitizer: detected memory leaks
    
    Direct leak of 24 byte(s) in 1 object(s) allocated from:
    0 0x7f4347cb1d28 in malloc (/usr/lib/x86_64-linux-gnu/libasan.so.3+0xc1d28)
    1 0x55fe1fc8dcfc in DetectAddressHeadInit /root/suricata-1/src/detect-engine-address.c:1534
    2 0x55fe1fc8c50a in DetectAddressTestConfVars /root/suricata-1/src/detect-engine-address.c:1306
    3 0x55fe1ff356bd in PostConfLoadedSetup /root/suricata-1/src/suricata.c:2696
    4 0x55fe1ff365eb in main /root/suricata-1/src/suricata.c:2884
    5 0x7f43443892b0 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x202b0)
    
    Direct leak of 24 byte(s) in 1 object(s) allocated from:
    0 0x7f4347cb1d28 in malloc (/usr/lib/x86_64-linux-gnu/libasan.so.3+0xc1d28)
    1 0x55fe1fc8dcfc in DetectAddressHeadInit /root/suricata-1/src/detect-engine-address.c:1534
    2 0x55fe1fc8c524 in DetectAddressTestConfVars /root/suricata-1/src/detect-engine-address.c:1310
    3 0x55fe1ff356bd in PostConfLoadedSetup /root/suricata-1/src/suricata.c:2696
    4 0x55fe1ff365eb in main /root/suricata-1/src/suricata.c:2884
    5 0x7f43443892b0 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x202b0)
    
    SUMMARY: AddressSanitizer: 48 byte(s) leaked in 2 allocation(s).

[33mcommit 99bf99c529474a979d1e094ce5b80a9a9adae7dd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 7 17:47:03 2017 +0100

    output: don't deadlock on log reopen failure
    
    If output log reopen fails, don't try to output the error. This would
    lead to a deadlock as reopen was called from a SCLogMessage call. This
    call already held the output lock.
    
    Bug #2306.

[33mcommit 56d93f426c64b5788db9e4c9215a6bc82f109f0f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 11 17:58:20 2017 +0100

    configure: style fixup

[33mcommit 8b8f9116004ab4bc6325207a320184ca47dac483[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 8 13:52:12 2017 +0200

    detect: move rule loading into loader files

[33mcommit c37432491602bc76ba340b7ba29a34a507b74420[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 8 12:37:41 2017 +0200

    detect: move keyword registration into own file

[33mcommit 90569d5fd6a9e100abbca85632f1c4b5089dd670[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 8 12:17:33 2017 +0200

    detect: move grouping/building code into own file
    
    Clean up main detect.c file by moving things related to rule
    grouping out.

[33mcommit 622d60b74d1638871a6078747797f992b805bea7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 8 11:55:55 2017 +0200

    detect: move unittests into tests/

[33mcommit facde3fe165afb4da57cb40464bfff60c5cb13b1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 6 14:41:39 2017 +0100

    mpm/ac-ks: apply offset/depth

[33mcommit 531b57947b84ef8d2ac1a835e3b5b20b86f8d16d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 6 14:29:15 2017 +0100

    mpm/ac-ks: coding style fixes

[33mcommit c2729fe931c4abcb66bd830c49bb722585dd055a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 4 11:12:23 2017 +0100

    mpm/ac: add depth/offset support

[33mcommit 553c8ff485cecf3f9e56c83ee5c689812204e311[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 4 11:11:54 2017 +0100

    mpm: add depth/offset support

[33mcommit 9e37e266b69c2ccb7c23c5ead895ad7e51ea9def[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 5 11:37:48 2017 +0100

    detect: content limits propagation
    
    Propagate inspection limits from anchered keywords to the rest of
    a rule.
    
    Examples:
    
    content:"A"; depth:1; is anchored, it can only match in the first byte
    
    content:"A"; depth:1; content:"BC"; distance:0; within:2;
    "BC" can only be in the 2nd and 3rd byte of the payload. So effectively
    it has an implicite offset of 1 and an implicit depth of 3.
    
    content:"A"; depth:1; content:"BC"; distance:0; can assume offset:1; for
    the 2nd content.
    
    content:"A"; depth:1; pcre:"/B/R"; content:"C"; distance:0; can assume
    at least offset:1; for content "C". We can't analyzer the pcre pattern
    (yet), so we assume it matches with 0 bytes.
    
    Add lots of test cases.

[33mcommit 6f0794c16f6adaa3e8a79553a8fcc81aadeed9c7[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Sat Aug 5 01:06:22 2017 +0200

    keyword-filesize: add units

[33mcommit 3ab9120821e2b5cbc5925470bcfa5bcfb53f246b[m
Author: Dana Helwig <dana.helwig@protectwise.com>
Date:   Thu Apr 27 11:17:16 2017 -0600

    source-pcap-file: Pcap Directory Mode (Feature #2222)
    
    https://redmine.openinfosecfoundation.org/issues/2222
    
    Pcap file mode that when passed a directory will process all files in
    that directory. If --pcap-file-continuous or continuous option is passed
    in json, the directory will be monitored  until the directory is
    moved/deleted, suricata is interrupted, or the pcap-interrupt command
    is used with unix command socket. Existing file implementation and new
    directory implementation has moved from source-pcap-file into
    pcap-file-helper and pcap-directory-helper.
    
    Engine state will not reset between files.
    
    Also satisfies:
     * https://redmine.openinfosecfoundation.org/issues/2299
     * https://redmine.openinfosecfoundation.org/issues/724
     * https://redmine.openinfosecfoundation.org/issues/1476
    
    Co-Authors: Dana Helwig <dana.helwig@protectwise.com> and
    Danny Browning <danny.browning@protectwise.com>

[33mcommit 94e9d1379152504a7359b6fcbf5cc9822fad404f[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Sep 29 23:23:21 2016 +0200

    doc: add ruleset commands available in unix socket

[33mcommit e7392a0780ac960f49d48c0272af4cd74fdc9ec6[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Tue Aug 2 16:09:41 2016 +0200

    unix-manager: block live reload when -s/-S is specified
    
    Currently, when live reload is executed through
    unix-socket, suri prints in the console the following
    error message:
    "Live rule reload not possible if -s or -S option used at runtime."
    
    Instead, prints "done" in unix socket,
    when the live reload is not executed.

[33mcommit f1d372a505a47f642e0b196a3ff343ea3aa7d9f9[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Tue Aug 2 15:11:07 2016 +0200

    unix-manager: add "ruleset-reload-rules" command
    
    This add a new command the new naming convention.
    
    The (old) command "reload-rules" is kept for
    backward compatibility

[33mcommit 9131afbe71266c1b2ea80d7f664df8169c071b06[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Mon Oct 19 15:06:17 2015 +0200

    unix-manager: print failed rules
    
    This permits to print the invalid rules through
    unix socket.
    
    An example output is the following:
    
    >>> show-failed-rules
    Success:
    [
        {
            "filename": "/home/eric/git/oisf/benches/tls-store.rules",
            "line": 2,
            "rule": "alert ts any any -> any 334 (msg:\"Store TLS\"; tls.store; sid:2; rev:1;)"
        },
        {
            "filename": "/home/eric/git/oisf/benches/tls-store.rules",
            "line": 3,
            "rule": "alert ls any any -> any 334 (msg:\"Store TLS\"; tls.store; sid:3; rev:1;)"
        }
    ]
    
    The dump is limited to 20 entries to avoid to send a too big
    message to the client that don't support it by default.

[33mcommit 1328ecb8f6e981f6ce47704b17d7884f21d1d4cc[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Mon Oct 19 15:02:13 2015 +0200

    detect: save invalid rules
    
    This keeps the invalid rules in string format into a list,
    added in DetectEngineCtx.

[33mcommit e17b9616ab4f0817139b5e3f62cf5b920d792198[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Oct 16 16:19:03 2015 +0200

    unix-socket: add ruleset-reload-nonblocking command
    
    Add a non blocking function to reload rules. It will be useful
    for remote system management to avoid to block them waiting the
    reload. And as we now have a last-reload command we can get the
    status of the current reload.

[33mcommit 1567f84cd246b5d97e99df34e5cec361ac1cf011[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Wed May 4 17:13:39 2016 +0200

    detect-engine: remove DONE state
    
    Remove the DONE state to fix a problem with state not being
    changed correctly when multiple reload were done. As DONE was
    not really useful, we can remove it.

[33mcommit 89c629a79d754ab6d423d5d5cdd258e9d102dfe1[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Fri Oct 9 09:27:08 2015 +0200

    unix-socket: add commands to print engine stats
    
    This permits to print engine stats through
    unix socket.

[33mcommit 720cfcfcca6b2355b3d977a2d018f9e3bc068e6e[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Fri Oct 9 09:16:40 2015 +0200

    json-stats: print engine stats
    
    This adds the engine stats in stats event.
    If multi-tenancy is enabled, it will add
    stats for each tenant
    
    The following is a snippet of the generated EVE entry:
    
    "detect":{"engines":[{"last_reload":"2015-10-13T09:59:48.044996+0200","rules_loaded":17184,"rules_failed":0}],"alert":28}
    
    Multi-tenancy enabled:
    
    "detect":{"engines":[{"id":1,"last_reload":"2015-10-13T09:56:46.447153+0200","rules_loaded":17084,"rules_failed":0},
                         {"id":2,"last_reload":"2015-10-13T09:56:36.504877+0200","rules_loaded":3268,"rules_failed":0}],
                         "alert":28}

[33mcommit 56000acefb7b4f50926f6fb9ecada12e4710c1ac[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Fri Oct 9 08:59:48 2015 +0200

    detect-engine: add reload time/rules stats
    
    This patch adds the following stats for
    the detect engine:
    - time of the last reload
    - number of rules loaded
    - number of rules failed

[33mcommit 0c99338e071612775bd895f64800d01e865f900b[m
Author: Pascal Delalande <pdl35@free.fr>
Date:   Fri Dec 8 11:37:54 2017 +0100

    doc: update docs for DNS flags logging

[33mcommit d474c9534931bac45bd9cc8032da1741acf4920b[m
Author: Pascal Delalande <pdl35@free.fr>
Date:   Fri Dec 8 11:37:36 2017 +0100

    dns: store flags for logging for TCP

[33mcommit 3396747cd657daa76f09a8744461c80589662460[m
Author: Clément Galland <clement.galland@epita.fr>
Date:   Thu Oct 19 13:47:03 2017 +0000

    Dns logger display flags information

[33mcommit 44bf785ecf11596080da88e0aabd7c24774cccc8[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Tue Dec 20 15:33:09 2016 +0100

    dns: log flags field
    
    This adds dns header's flags in eve
    log.
    
    Signed-off-by: Eric Leblond <eric@regit.org>

[33mcommit f6938933d95da7d705999ebce482de7c7615cc7a[m
Author: Ralph Broenink <ralph@ralphbroenink.net>
Date:   Sun Dec 3 16:13:38 2017 +0100

    doc: Amend the list of accepted protocols
    
    Based on the list in suricata.yaml

[33mcommit d830177b7b69614fd0ca9e8519388b04f7348789[m
Author: Ralph Broenink <ralph@ralphbroenink.net>
Date:   Sat Oct 14 12:34:28 2017 +0200

    doc: Add my own name to the acknowledgements

[33mcommit 98a1ec490f5eab2af39e83944a8a3f5e4d29a26c[m
Author: Ralph Broenink <ralph@ralphbroenink.net>
Date:   Sat Oct 14 12:29:05 2017 +0200

    doc: Move IP reputation keyword to rules section

[33mcommit 722cff1862c54cb3555478af2c02868ca6470284[m
Author: Ralph Broenink <ralph@ralphbroenink.net>
Date:   Sat Oct 14 12:19:33 2017 +0200

    doc: Restructure ToC
    
    * All sections up to 2 levels deep are now shown regardless of whether they are a separate page
    * Rename Xbits and Thresholding for more consistent naming
    * Minor adjustment in the Payload Keywords section

[33mcommit 196ba1da702fef7c23d19d269b3369b2722b6a48[m
Author: Ralph Broenink <ralph@ralphbroenink.net>
Date:   Sat Oct 14 12:15:44 2017 +0200

    doc: Make the header keywords section separate sections in ToC

[33mcommit a55a6cdb628b1badbf71b9a73ff04221ac2e0582[m
Author: Ralph Broenink <ralph@ralphbroenink.net>
Date:   Sat Oct 14 12:13:17 2017 +0200

    doc: Move flowint as integral part of flow keywords

[33mcommit f6c766112c9be5191c4872dea54cbcebaeb6a56e[m
Author: Ralph Broenink <ralph@ralphbroenink.net>
Date:   Sat Oct 14 12:09:31 2017 +0200

    doc: Minor changes in structuring of HTTP Keywords / Snort differences

[33mcommit e9b25988badf57433d6826c6be5262fb5019016f[m
Author: Ralph Broenink <ralph@ralphbroenink.net>
Date:   Sat Oct 14 12:06:53 2017 +0200

    doc: Move pcre entirely to Payload Keywords section
    
    (plus remove lingering screenshot of a rule)

[33mcommit bb1bf2643d7e545777fef28b8cc6fe8134947a0d[m
Author: Ralph Broenink <ralph@ralphbroenink.net>
Date:   Sat Oct 14 12:02:55 2017 +0200

    doc: Move fast_pattern and prefilter to dedicated page

[33mcommit fea037fda88d6548136f28a071f9c878a56634bc[m
Author: Ralph Broenink <ralph@ralphbroenink.net>
Date:   Sat Oct 14 11:57:00 2017 +0200

    doc: Moved explanation of normalized buffers to rules introduction

[33mcommit 11990c71173f24f9c20f568b71f3c80592fe912b[m
Author: Ralph Broenink <ralph@ralphbroenink.net>
Date:   Sat Oct 14 11:52:13 2017 +0200

    doc: Move the definition of modifier keywords to the introduction

[33mcommit dfae19247d26b0059b633108daf3bff608656621[m
Author: Ralph Broenink <ralph@ralphbroenink.net>
Date:   Sat Oct 14 11:49:43 2017 +0200

    doc: Completely rewrite the rules introduction for more clearity

[33mcommit 274c36eb2f398d42031b407afcb879e899a6ace5[m
Author: Ralph Broenink <ralph@ralphbroenink.net>
Date:   Sat Oct 14 11:47:38 2017 +0200

    doc: Meta-settings -> Meta Keywords plus some textual changes
    
    Most importantly, conventions are now placed in tip boxes

[33mcommit 3413793768ee5a12019f12609b9460c26bb0d52f[m
Author: Ralph Broenink <ralph@ralphbroenink.net>
Date:   Sat Oct 14 11:43:58 2017 +0200

    doc: Use lowercased keyword names as section titles

[33mcommit a52aacb4ea71415ab82cdaadc823c9e4652e0e0c[m
Author: Ralph Broenink <ralph@ralphbroenink.net>
Date:   Sat Oct 14 11:37:42 2017 +0200

    doc: Replace images of tables and rules with text in rules docs
    
    In some chapters of the rules documentation, many sections used examples of rules, but these were inserted into images. These have been replaced by text and HTML emphasis.
    
    Additionally, some tables embedded into images were also replaced by reST tables.

[33mcommit 44926e23691b3d08d87d8c295bd505e079906b1f[m
Author: Ralph Broenink <ralph@ralphbroenink.net>
Date:   Sat Oct 14 11:17:19 2017 +0200

    doc: Add suricata.css to allow for some custom styling

[33mcommit 5335d8b877b1fed49efa9bf7a48aee06d3f0a9a8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 24 15:49:26 2017 +0100

    detect/uri: apply urilen contents as depth

[33mcommit 606eab937c95eda298d145594d6eda57efa1dec5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 24 15:48:26 2017 +0100

    detect/http_uri: remove broken tests

[33mcommit c16509a8b611314b5760a8b7d0e4330ac6f50ffc[m
Author: Wolfgang Hotwagner <code@feedyourhead.at>
Date:   Wed Dec 6 11:12:42 2017 +0000

    conf: stack-based buffer-overflow in ParseFilename
    
    There is a stack-based buffer-overflow in ParseFilename. Since the length of "outputs.pcap-log.filename" is not checked and the destination buffer "str" has a fixed length of 512 bytes, a buffer overflow happens with long filenames. An attacker could exploit this for code execution if the configuration-file is not protected properly. This commit fixes ticket #2335
    
    This is what the asan-output looks like:
    
    ~/suricata-1/src# suricata -T -c ./suricata.yaml
    [27871] 3/12/2017 -- 20:48:13 - (suricata.c:1876) <Info> (ParseCommandLine) -- Running suricata under test mode
    [27871] 3/12/2017 -- 20:48:13 - (suricata.c:1109) <Notice> (LogVersion) -- This is Suricata version 4.0.0-dev (rev f3fea60b)
    =================================================================
    ==27871==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fffbe9d75e0 at pc 0x55897b5f935f bp 0x7fffbe9d72b0 sp 0x7fffbe9d72a8
    WRITE of size 1 at 0x7fffbe9d75e0 thread T0 (Suricata-Main)
        0 0x55897b5f935e in ParseFilename /root/suricata-1/src/log-pcap.c:895
        1 0x55897b5fb173 in PcapLogInitCtx /root/suricata-1/src/log-pcap.c:985
        2 0x55897b6af103 in RunModeInitializeOutputs /root/suricata-1/src/runmodes.c:752
        3 0x55897b72c6b5 in PreRunPostPrivsDropInit /root/suricata-1/src/suricata.c:2263
        4 0x55897b730416 in main /root/suricata-1/src/suricata.c:2898
        5 0x7f947f6db2b0 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x202b0)
        6 0x55897b2d4c19 in _start (/usr/local/bin/suricata+0xc4c19)
    
    Address 0x7fffbe9d75e0 is located in stack of thread T0 (Suricata-Main) at offset 672 in frame
        0 0x55897b5f7fcc in ParseFilename /root/suricata-1/src/log-pcap.c:836
    
      This frame has 3 object(s):
        [32, 104) 'toks'
        [160, 672) 'str' <== Memory access at offset 672 overflows this variable
        [704, 2752) '_sc_log_msg'
    HINT: this may be a false positive if your program uses some custom stack unwind mechanism or swapcontext
          (longjmp and C++ exceptions *are* supported)
    SUMMARY: AddressSanitizer: stack-buffer-overflow /root/suricata-1/src/log-pcap.c:895 in ParseFilename
    Shadow bytes around the buggy address:
      0x100077d32e60: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 00 00 00 00
      0x100077d32e70: 00 00 00 00 00 f4 f4 f4 f2 f2 f2 f2 00 00 00 00
      0x100077d32e80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      0x100077d32e90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      0x100077d32ea0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    =>0x100077d32eb0: 00 00 00 00 00 00 00 00 00 00 00 00[f2]f2 f2 f2
      0x100077d32ec0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      0x100077d32ed0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      0x100077d32ee0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      0x100077d32ef0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      0x100077d32f00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    Shadow byte legend (one shadow byte represents 8 application bytes):
      Addressable:           00
      Partially addressable: 01 02 03 04 05 06 07
      Heap left redzone:       fa
      Heap right redzone:      fb
      Freed heap region:       fd
      Stack left redzone:      f1
      Stack mid redzone:       f2
      Stack right redzone:     f3
      Stack partial redzone:   f4
      Stack after return:      f5
      Stack use after scope:   f8
      Global redzone:          f9
      Global init order:       f6
      Poisoned by user:        f7
      Container overflow:      fc
      Array cookie:            ac
      Intra object redzone:    bb
      ASan internal:           fe
      Left alloca redzone:     ca
      Right alloca redzone:    cb
    ==27871==ABORTING

[33mcommit 1090ee9d8d739eb014540ad834509a23f96e0712[m
Author: Ruslan Usmanov <ruslan.usmanov@threattrack.com>
Date:   Fri Oct 27 12:50:32 2017 -0400

    rate_filter by_both through IPPair storage
    
    Ticket https://redmine.openinfosecfoundation.org/issues/2127

[33mcommit 84b66b7aaa908fa5dc3dfacf0237662c54fbc690[m
Author: Danny Browning <danny.browning@protectwise.com>
Date:   Fri Dec 1 11:23:30 2017 -0700

    enum: don't printf on util-enum errors
    
    When util-enum encounters an error around enum value it should log the error
    rather than losing it to console with printf.
    
    Bug #2268

[33mcommit 999b50476ba90ade696d10ac4e0c748f50e60a97[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 1 23:34:32 2017 +0100

    detect/http_host: add sid to nocase warning

[33mcommit f68067be94e49e87b5874875c034e21363ad6562[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Dec 3 22:10:37 2017 +0100

    hosts: release packet references to hosts

[33mcommit 637a7c8e55e005edc2644a9b5774771926dd3f29[m
Author: Gaurav Singh <gauravjs@google.com>
Date:   Mon Oct 16 18:01:53 2017 -0700

    Adds options to mark when a file is final.
    
    This takes the form of an option to add the pid of the process to file
    names. Additionally, it adds a suffix to the file name to indicate it is
    not finalized.
    
    Adding the pid to the file name reduces the likelihood that a file is
    overwritten when suricata is unexpectedly killed. The number in the
    waldo file is only written out during a clean shutdown. In the event
    of an improper shutdown, extracted files will be written using the old
    number and existing files with the same name will be overwritten.
    
    Writes extracted files and their metadata to a temporary file suffixed
    with '.tmp'. Renames the files when they are completely done being
    written. As-is there is no way to know that a file on disk is still
    being written to by suricata.

[33mcommit a1f8cf40e233fdf7a604ad6f4b28cc489324aecb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 1 09:23:29 2017 +0100

    detect/http_start: check if 'line' is valid
    
    In certain conditions like low memory the line can be NULL.
    
    Bug #2307.

[33mcommit 9abac08cc7eabdda4900d3ee330acc1b429e627d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 30 08:04:48 2017 +0100

    detect/flowint: harden code
    
    Make sure packet has a flow.
    
    Related to bug #2288.

[33mcommit 40a819d5a613c88502ca22649affea288a8e4c0b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 30 07:53:31 2017 +0100

    detect/flowint: only check if packet has flow
    
    Fixed bug #2288.

[33mcommit db24fee16e1198106a4f70d9dd655eab57a28397[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 30 09:07:40 2017 +0100

    detect/flowint: improve unittests
    
    In preparation of fixing bug #2288, make sure the unittests setup
    the flow in the packet properly.

[33mcommit 7394ee17eccbbd600af60ee15353ea99a772a801[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 30 09:07:20 2017 +0100

    unittest/helpers: add helper to assign flow to packet

[33mcommit 83f220a6b088e5e8e539d2cbfdb41ff66f7bdd66[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 28 10:28:07 2017 +0100

    detect/depth: reject rules with depth smaller than content

[33mcommit d0846cc561910ecc14404e0a17b80fa61f45fe79[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Nov 21 14:01:21 2017 -0600

    detect-parse: string copy not required
    
    Without using pcre, copies of the strings are no longer
    required.

[33mcommit 73d1e4bc84d535298fe888309ad5a35b20cba6ae[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Sep 13 11:03:06 2016 -0600

    detect-parse: don't use pcre for rule parsing
    
    Don't use pcre for the high level rule parsing, instead
    using a tokenizing parser for breaking out the rule
    into keywords and options.
    
    Much faster, especially on older CPUs. Should also allow
    us to provide better context where a rule parse error
    occurs.

[33mcommit 93b120e70d807780c1c33320f5c3ba919050e197[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 27 17:36:38 2017 +0100

    runmodes: config test is offline

[33mcommit 71c3141ec64a69e9645a68770e31330608114afd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 27 15:57:16 2017 +0100

    afl: enable afl dumps by envvar
    
    If SC_AFL_DUMP_FILES is set the inputs are stored to disk.

[33mcommit f1da18ec1a15eda070493134c3d6853d47cd5808[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 27 10:03:46 2017 +0100

    http: allow shinking in HTPRealloc

[33mcommit 5748df3eed4d02b3048c1208e8c2b15ebd5fb6fa[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Fri Nov 24 08:15:33 2017 +0100

    Add support for PCAP LINKTYPE_IPV4

[33mcommit 223a38aeeeb74dc2b939378981aec26317611223[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 26 21:29:46 2017 +0100

    mingw: service init compile warning fix

[33mcommit 81408df0cf5d5ae1d2f5068b9f3b0ec87a69e203[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 26 11:36:19 2017 +0100

    output: clean up log API unittests
    
    Disable for MinGW as the setenv/getenv implementations seems to
    be undeterministic.

[33mcommit 7ed1debc968ce17d874640f0c106c39af6119a0e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 26 10:30:47 2017 +0100

    flow: optimize Flow structure layout
    
    Shrink structure with 8 bytes by moving new ttl fields into an
    existing 'gap'.
    
    Also fixes a strange ASAN issue in GCC 5.4.0 in unittests.

[33mcommit 17c4623975138535f819229a643be43805f3bbae[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 25 14:30:58 2017 +0100

    thresholds: simplify config parsing

[33mcommit 2a237bdfcacb81d9d3b0fe173577f79b41db1813[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 17 11:19:20 2017 +0200

    detect: make glob.h optional
    
    glob.h is not available on MinGW.
    
    Simply use the input on the rule list as a literal pattern.

[33mcommit e1d1a7f2acc8642789bc51d0f8681cab361ef53e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 8 15:27:00 2017 +0200

    detect: fix flow bypass flag handling

[33mcommit ddd3c0b1dfd60c989121877ead6266d3231cc7dc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 3 08:05:35 2017 +0100

    detect/analyzer: formatting fixup

[33mcommit e86c3f0a40a75ee934c4213436f0694af13ac319[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 9 09:06:47 2017 +0200

    detect: constify rule group lookup

[33mcommit a9ee041984836c20b4c7e6dad98689adb18c09b5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 8 18:20:18 2017 +0200

    detect: minor profiling cleanup

[33mcommit 26abf5337c687e42b544fcfb9322500c4c00f9c5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 6 14:07:51 2017 +0200

    detect/mpm: minor cleanup: remove unused function arg

[33mcommit 03274051cfd1d7cba1605558ccb6872dea7b40c1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 6 12:24:15 2017 +0200

    detect-state: minor cleanups

[33mcommit c79b9cb317cf08d40b153598135c19ec83608d65[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 7 12:18:20 2017 +0200

    detect: constify address match functions

[33mcommit 63291d0f0175e4a9e59512f5781a637ac96bc996[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 11 18:14:16 2017 +0200

    detect: style cleanup

[33mcommit 64aec6aaea142ba06f794574ec2af158e1899867[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 11 18:13:58 2017 +0200

    app-layer: minor cleanup

[33mcommit 66530c6179d83376a67bcaa3dfa3f76a80178f4e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 5 18:50:22 2017 +0200

    app-layer: cleanup: use true bool type for 'logger'

[33mcommit 3fc875955eaba884da3f9466f796989fdea59cb9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 5 18:02:58 2017 +0200

    app-layer: minor cleanups and optimizations
    
    Use flow protomap instead of dynamically converting the ip proto in
    each call.
    
    Use const for vars where possible.

[33mcommit 6bea6edec13a3cb9cafbbb42ed4209a741b1d5eb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 13 11:33:26 2017 +0200

    stream: minor debug addition

[33mcommit ecfdd57ef8c5e815e3c4984d5a75ae2b4fd36119[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 8 13:15:12 2017 +0200

    detect: minor cleanups

[33mcommit 1b08615a1ebee6c05a4eae2c8ab2d592cc8a8bf1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 23 11:46:18 2017 +0200

    detect: minor comment cleanup

[33mcommit ac57bd814968023595381a53a59e86ff3448a701[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 5 22:25:11 2017 +0100

    detect: run buffer setup callback before validate

[33mcommit bb65a48edd981cde55adcfa8ece89cfd509dc04b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 22 15:40:49 2017 +0100

    rust: require at least libc 0.2.33
    
    Required to be higher than 0.2.24 for IPPROTO_UDP. Upgraded to latest
    version.

[33mcommit 83808bbdad172de77904d6acb54c38d63afd8fa8[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Thu Oct 26 08:05:41 2017 +0200

    rust/ntp: convert parser to new registration method
    
    Converting the NTP parser to the new registration method is a simple,
    3-steps process:
    - change the extern functions to use generic input parameters (functions
      in all parsers must share common types to be generic) and cast them
    - declare the Parser structure
    - remove the C code and call the registration function

[33mcommit 0b07bdf5d944721a774621dd30d8f26d0666c9db[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Thu Oct 26 08:18:46 2017 +0200

    rust: generate declaration for extern unsafe funcs

[33mcommit e7c0a53cbf36c2342ebdde747be34b004c736f43[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Thu Oct 26 07:57:03 2017 +0200

    rust/applayer: add registration iface for parsers
    
    Add Rust support for the common interface to declare and register all
    parsers.
    
    Add a common structure definition to contain all required elements
    required for registering a parser, similar to the C interface.
    This also reduces the risk of incorrectly registering a parser: the
    compiler prevents omitting required functions from the structure, and
    functions (even if external) are type-checked. Optional functions are
    explicitly marked.

[33mcommit 3edc76533ccce9496dca2b5e8d5c569dcfe47ec0[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Fri Oct 27 13:10:04 2017 +0200

    applayer: add registration interface for parsers
    
    Add a common structure definition to contain all required elements
    required for registering a parser.
    This also reduces the risk of incorrectly registering a parser: the
    compiler will type-check functions.
    
    The registration function allows factorization of the code. It can be
    used to register parsers, but is not mandatory.
    
    If extra registration code (for functions not in the structure)
    it is still possible by calling the C functions after the registration.

[33mcommit 862abd2fe4685f90db05a7742c196e1bc2646d0d[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Thu Oct 26 07:53:12 2017 +0200

    applayer: add StringToAppProto
    
    Add StringToAppProto to map a protocol name to a AppProto.
    
    Exposing this function is required to let parsers discover their
    AppProto identifier constant dynamically.
    For example, a parser can request this value, and use it for
    registration without knowing the value.

[33mcommit 7c8bdfd3dd6a1cb93f26f87ac0a512119bfdb9ff[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Fri Oct 27 13:07:29 2017 +0200

    applayer: add typedef for Parsing functions

[33mcommit 6ce45bcf38b5eb17fc4dd721037408ffb8ff78ef[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 21 18:22:12 2017 +0100

    pfring: various build issues
    
    pfring.h brings a different version of likely/unlikely that gives
    warnings. So make sure we include our own before.
    
    Make sure pfring.h isn't included globally due to apparent redefinition
    of pthread_rwlock_t.

[33mcommit b6baafb3e3be5bef3dc6e027a5e64f8b73c33dc5[m
Author: Alfredo Cardigliano <cardigliano@ntop.org>
Date:   Tue Nov 7 11:49:47 2017 +0100

    pfring: hw bypass support
    
    This patch adds support for hw bypass by enabling flow offload in the network
    card (when supported) and implementing the BypassPacketsFlow callback.
    Hw bypass support is disabled by default, and can be enabled by setting
    "bypass: yes" in the pfring interface configuration section in suricata.yaml.

[33mcommit ac18ef01c297c25e3a897273105aa432644b09d3[m
Author: Pascal Delalande <pdl35@free.fr>
Date:   Wed Oct 18 21:42:37 2017 +0200

    NSM: add TTL fields for netflow log

[33mcommit 7ac6e0afb38470823355446eeb65f31df2ddb7bc[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri May 5 16:53:38 2017 +0200

    netflow: fix ttl logic
    
    Use a per direction TTL min and max so we can log different values
    seen in the two half flows.
    
    Signed-off-by: Eric Leblond <eric@regit.org>

[33mcommit 2e5422df8e39099e76939175a61cd7cf256711c6[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Thu Dec 15 17:28:21 2016 +0100

    netflow: log ttl fields
    
    Netflow entry collects the minimum and maximum
    time to live during the life of the incoming flow.
    
    This adds those field to a netflow event.
    
    Signed-off-by: Eric Leblond <eric@regit.org>

[33mcommit 9556d4fef32ee42c1faeb4d955cb6f32868090a6[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed Mar 15 08:02:08 2017 +0100

    doc: add documentation for tls_cert_fingerprint keyword

[33mcommit 5e6b8c47dfeaeb33cd03526e4c186d667e814e57[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed Mar 15 07:55:31 2017 +0100

    detect: add (mpm) keyword tls_cert_fingerprint
    
    Reimplement keyword to match on SHA-1 fingerprint of TLS
    certificate as a mpm keyword.
    
    alert tls any any -> any (msg:"TLS cert fingerprint test";
           tls_cert_fingerprint;
           content:"4a:a3:66:76:82:cb:6b:23:bb:c3:58:47:23:a4:63:a7:78:a4:a1:18";
           sid:12345;)

[33mcommit 6ab5d42c92ab55a6ea59d442d6c6a01e8282bbc6[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Mon Aug 7 09:53:25 2017 +0200

    unittests: initialize NSS in unittests runmode
    
    Initialize NSS in unittests runmode when Suricata is compiled with
    libnss. Otherwise, calculating SHA-1 sums for TLS fingerprints
    will fail.

[33mcommit e60bfc78c1e5cdd58cf8bc97acf5b28cd1a98576[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 21 17:31:36 2017 +0100

    Open 4.1 development branch

[33mcommit 89b656d8eed0c8ebddc960a06f0434819abdc673[m
Author: Danny Browning <danny.browning@protectwise.com>
Date:   Mon Nov 6 16:10:02 2017 -0700

    unix socket: don't loose events when offline
    
    https://redmine.openinfosecfoundation.org/issues/2215
    
    Fixes issue with events being dropped since socket was non-blocking for
    offline run modes.
    
    Add a method for determining offline from run mode. Make sure SCInstance
    offline is set correctly. Use current run mode to set socket flags.

[33mcommit 63e1371c8bd26f684a3e9afe3849e1d737435194[m
Author: Alexander Gozman <a.gozman@securitycode.ru>
Date:   Thu Nov 9 11:55:47 2017 +0000

    syslog: treat SC_LOG_PERF messages as LOG_DEBUG
    
    SCLogMapLogLevelToSyslogLevel(): treat SC_LOG_PERF messages as LOG_DEBUG
    
    Previously, when logging to syslog, perf events had a default EMERG priority,
    which could be a bit confusing.

[33mcommit cb70d85c692df3e96495fa427429782add092d4d[m
Author: Wolfgang Hotwagner <code@feedyourhead.at>
Date:   Sun Nov 19 14:05:04 2017 +0000

    conf: fix NULL-pointer dereference in CoredumpLoadConfig
    
    An empty value for coredump.max-dump in the config-file leads to a segfault because of a NULL-pointer dereference in CoredumpLoadConfig().
    
    Here is a configuration example:
    
    coredump.max-dump: []
    
    This lets suricata crash with a segfault:
    
    ASAN-output:
    ==9412==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f22e851aa28 bp 0x7ffd90006fc0 sp 0x7ffd90006740 T0)
        0 0x7f22e851aa27 in strcasecmp (/usr/lib/x86_64-linux-gnu/libasan.so.3+0x51a27)
        1 0x5608a7ec0108 in CoredumpLoadConfig /root/suricata-1/src/util-coredump-config.c:52
        2 0x5608a7e8bb22 in PostConfLoadedSetup /root/suricata-1/src/suricata.c:2752
        3 0x5608a7e8c577 in main /root/suricata-1/src/suricata.c:2892
        4 0x7f22e4c622b0 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x202b0)
        5 0x5608a7a30c59 in _start (/usr/local/bin/suricata+0xc4c59)
    
    Bug #2276

[33mcommit 094632730ee2230ad3b2b690ea1daa528a421d8f[m
Author: Wolfgang Hotwagner <code@feedyourhead.at>
Date:   Fri Nov 17 23:25:08 2017 +0000

    conf: fix NULL-pointer dereference in ConfGetInt
    
    If there are empty values in the config-file where integer values are expected, strtoimax in the ConfGetInt-function will segfault because of NULL-pointer dereference.
    
    Here is a configuration example:
    
    pcre.match-limit: []
    
    This will let suricata crash with a segfault.
    ASAN-output:
    
    ASAN:DEADLYSIGNAL =================================================================
    16951ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fa690e3ccc5 bp 0x000000000000 sp 0x7ffd0d770ad0 T0)
    0 0x7fa690e3ccc4 (/lib/x86_64-linux-gnu/libc.so.6+0x36cc4)
    1 0x7fa6946a6534 in strtoimax (/usr/lib/x86_64-linux-gnu/libasan.so.3+0x44534)
    2 0x55e0aeba6499 in ConfGetInt /root/suricata-1/src/conf.c:390
    3 0x55e0aed2545d in DetectPcreRegister /root/suricata-1/src/detect-pcre.c:99
    4 0x55e0aec1b4ce in SigTableSetup /root/suricata-1/src/detect.c:3783
    5 0x55e0aeeed58d in PostConfLoadedSetup /root/suricata-1/src/suricata.c:2690
    6 0x55e0aeeee4f2 in main /root/suricata-1/src/suricata.c:2892
    7 0x7fa690e262b0 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x202b0)
    8 0x55e0aea92d39 in _start (/usr/local/bin/suricata+0xc7d39)
    
    AddressSanitizer can not provide additional info.
    SUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x36cc4)
    
    This commit fixes Ticket #2275

[33mcommit 2e27a5df6b6cee7a3fdd4b6e0709a38f925ac4ad[m
Author: Wolfgang Hotwagner <code@feedyourhead.at>
Date:   Fri Nov 17 17:47:41 2017 +0000

    conf: fix NULL-pointer dereference in ParseSizeString
    
    If someone accidently writes invalid characters in some parts of the suricata.yaml-configfile, the size-parameter of the ParseSizeString-function becomes NULL and gets dereferenced. Suricata crashes with SEGV. This commit fixes Ticket #2274
    
    The following config value leads to a Segfault:
    app-layer.protocols.smtp.inspected-tracker.content-inspect-window: *4096

[33mcommit f3fea60bae3e61f27870ccc7b7f00591b8f6a188[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Thu Nov 2 08:33:54 2017 -0400

    updated links to suricata.readthedocs.io
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit 664f826f8d63912028f64cffb04ad017ed780156[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 7 17:18:30 2017 +0100

    detect/dns: fix misdetection on dns_query on udp
    
    If 'raw' content patterns were used in a dns_query rule, the raw
    patterns would only be evaluated for TCP, but not for UDP.
    
    This patch adds the inspection for UDP as well.
    
    Bug #2263.

[33mcommit 7d032e26f11681363b050eac73528bebdaeacf7c[m
Author: Peter Manev <pmanev@stamus-networks.com>
Date:   Wed Nov 1 13:19:21 2017 +0100

    valgrind: suppressions for NIC offloading calls

[33mcommit ceec247db1622a404492b6869fc8fe430d41f593[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 1 10:16:15 2017 +0100

    detect/profile: minor fixes

[33mcommit 8fc82408b785a119a14934c5013f66092177d8ff[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 29 08:38:43 2017 +0100

    install: use up to date url for 'make install-full'

[33mcommit 749fa014d13d46a1a3f9882744c650321e209a23[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Oct 24 16:34:00 2017 -0600

    travis: allow rust-stable build to fail

[33mcommit 303238586c29eb58eaedf034bef72ff858dd89dd[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Oct 24 08:25:59 2017 -0600

    travis: rust 1.21.0 build

[33mcommit 288d2ce3e9ad286923c671a3e501821d332c28bd[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Oct 24 06:52:25 2017 -0600

    travis: do make distcheck on Rust 1.15.0 build

[33mcommit 0f65257a5077ca385d043167e758babd7712b4b2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 24 08:56:48 2017 +0200

    detect: don't register http_*_line twice

[33mcommit 65ac1f822482aa64637740880813910440f7eb01[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 21 10:17:07 2017 +0200

    detect: test for byte_extract/isdataat large values

[33mcommit 77c39b20f8f44adfd0a4ed68e49094016ab6c012[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 21 10:16:30 2017 +0200

    detect: handle very large byte_extract'ed values in isdataat

[33mcommit 2413b81d10f2a2d46e03f7e79a45800ce0f874e8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 21 10:01:20 2017 +0200

    detect: add unittest for byte_extract/isdataat

[33mcommit 68ddea0b26dd018a847c8be80d00c1998051946d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 21 10:00:47 2017 +0200

    detect: implement byte_extract support for isdataat

[33mcommit 862780c7c36e02dffb31342b90d61170952b7bfb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 21 10:00:08 2017 +0200

    detect: add debug statements for byte_extract/isdataat

[33mcommit fbf097bbe4a7f072fb9744f4b55c05f7c2fa6b81[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 20 10:04:25 2017 +0200

    detect-asn1: fix memory leak in error path

[33mcommit 1729ab7d946771db645f7bffb552e60278b066b7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 20 09:50:59 2017 +0200

    detect: fix port parsing memory leak
    
    Leak in error path as seen by scan-build:
    
      CC       detect-engine-port.o
    detect-engine-port.c:1083:13: warning: Potential leak of memory pointed to by 'temp_rule_var_port'
        return -1;
                ^

[33mcommit 319a6f48ffbfe722f71e7dfd774519503dba34ad[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 20 09:24:23 2017 +0200

    detect-id: clean up to suppress minor coverity warning

[33mcommit 97cb5d39731850c972caaac5a9b7872a6840b985[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 20 09:17:30 2017 +0200

    redis: suppress minor coverity warning

[33mcommit d5f7acd860f5cbc06f3168e88e2efea86671ae70[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 19 13:47:35 2017 +0200

    decoder: implement IEEE802.1AH

[33mcommit 7fb58e67831b8dfb5d1ca391c8e99c4f3150142a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 24 12:04:43 2017 +0200

    random: fix random logic with getrandom
    
    The older random functions returned random values in the range of
    0 - RAND_MAX. This is what the http randomize code was expecting.
    
    Newer methods, based on getrandom (or probably Windows too), return
    a much large range of values, including negative values and >RAND_MAX.
    
    This patch adds a wrapper to turn the returned value into the expected
    range before using it in the http code.
    
    The same is true for the stream engine.

[33mcommit 9b94679fce041bcbbc85904d3bc56addb9ccedc5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 19 09:51:18 2017 +0200

    random: support getrandom(2) if available
    
    Ticket: #2193

[33mcommit cf0a28bc6af96f5cba1da347eedf1f9430edaa73[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 19 09:03:13 2017 +0200

    napatech: fix minor memleak in error path

[33mcommit 72dd663e00dfcea37d1c2d5dbc3ee99a2cd8e7d1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 19 08:59:36 2017 +0200

    yaml: print errors if integers are invalid

[33mcommit b56c0b524bf337edb93eefed07b3d15d85e59a62[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 19 08:41:09 2017 +0200

    detect: error out on invalid detect.profile option
    
    Bug #891.

[33mcommit 3e868188e6b1a2c9333d27aa47f96a1f50856b59[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 19 08:24:47 2017 +0200

    yaml: add 'append' to stats-log entry
    
    Bug #798

[33mcommit 207595396e90673286e6f9592792bff2f16e812c[m[33m ([m[1;33mtag: suricata-4.0.1[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 18 10:33:47 2017 +0200

    changelog: update for 4.0.1 release

[33mcommit 7eead7dfbccc597b03f261f1a185d15e965742c0[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Oct 18 14:53:03 2017 +0200

    autotools: fix distcheck with rust enabled

[33mcommit d9c7f9bb17ca4f6f5c92026fed21b9f9fe6fc24c[m
Author: Sascha Steinbiss <satta@debian.org>
Date:   Sat Sep 16 07:29:35 2017 +0100

    stats: use unshortened interface names in counters

[33mcommit 4d25593b4aa129be9194dfbc73165cd6da186902[m
Author: Sascha Steinbiss <satta@debian.org>
Date:   Fri Sep 1 16:24:56 2017 +0200

    json: skip over double dots in output tokenizing
    
    Interface name shortening introduces double periods ('..') as spacers,
    which cause issues during JSON stats serialization as there '.'
    characters are also used as separators to define nesting of the JSON
    output. This commit makes sure that '..' are skipped during tokenizing.
    Fixes Redmine bug #2208.

[33mcommit d9e5dfa1f0e5170b7d493b89c1c95592a6fe82cb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 2 18:34:08 2017 +0200

    rust/file: improve truncation handling

[33mcommit ce0fb39219db82cef286c997a1163dcca10185ef[m
Author: qiangbei <1137465774@qq.com>
Date:   Sun Oct 8 20:49:05 2017 +0800

    detect/state: fix offset mask logic
    
    changed 0xef to 0x7f

[33mcommit 78486b19797638a2c82bac6fa3126fe0eecfdb7c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 13 09:22:49 2017 +0200

    runmodes: fix 'threads' option parsing
    
    Don't cast int to uint8_t for no reason. Add warning that upper
    limit for threads is 1024.
    
    Small code cleanups.
    
    Bug: #2228

[33mcommit 3f6fbf94db0d8f9852ac5c1abc5d4706c8742f79[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 15 21:25:07 2017 +0200

    output: harden output deinit
    
    If thread setup fails allow output deinit code to be called with
    NULL data without crashing.

[33mcommit 2577a64e4404c95ca3cc80b7f32a84b90e624207[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 13 09:05:02 2017 +0200

    stream: improve error handling of ssn/segment pools
    
    With large number of threads the default memcaps lead to pool setup
    failures. Make sure these are reported properly so that the user
    knows what is going on.
    
    Bug: #2226

[33mcommit e023ce9aad8fda293440fce1aeff31dcc72b5425[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 15 21:18:22 2017 +0200

    rust/dns: fix new warning in rustc 1.21

[33mcommit fd38e5e82b1a0e3edcca227b3f1736e34c492ced[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 15 21:16:56 2017 +0200

    rust/nfs: fix new warnings in rustc 1.21

[33mcommit 11806875741d317c6f85f3d74b1f5bfb2d82f25b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 5 11:11:13 2017 +0200

    doc/file_data: add note on negated matching
    
    Explain issue #2216 and how to avoid it.

[33mcommit 456af8faa8092be71d471b398f50d857fdb7164d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 5 11:11:00 2017 +0200

    doc/napatech: formatting fixes

[33mcommit e7428b321dc5f63964a0c1d0a78fcde48f70595b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Sep 24 13:55:34 2017 +0200

    profiling: fix app-layer profiling and csv output

[33mcommit 62b8431fdd9806360d2c0189deabf7397950b42a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 3 10:31:39 2017 +0200

    debug: free pcre memory used for output filtering

[33mcommit c0d8def0e5febfa4a618f5bb56a730ffcc168e86[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 29 19:10:46 2017 +0200

    tls: don't set event on small input data
    
    On very small data the max loop count could be 0. Make sure
    it's always at least 1.

[33mcommit 7ee989a3abfddb1ae873a6c0d96bd7aa6c1272d1[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Sep 30 12:35:14 2017 +0200

    prscript: update urls to use OISF repo

[33mcommit eb5193c5b48410aa62090f5f473ccb4fd1f277a3[m
Author: Jason Ish <ish@unx.ca>
Date:   Sun Oct 1 11:28:47 2017 +0100

    travis: hook check-setup.sh into the build
    
    Only do it for one build, for now use the one that also
    enables Rust.

[33mcommit 40a1a972d6567b29ae2c3f8d24b261e3a97a783b[m
Author: Jason Ish <ish@unx.ca>
Date:   Sun Oct 1 11:28:07 2017 +0100

    template: script to check the setup scripts
    
    This script applies the setup scripts one by one followed
    by a make distcheck.

[33mcommit d1ac839333edbfd5de3975a4f64b2168960c0296[m
Author: Jason Ish <ish@unx.ca>
Date:   Sun Oct 1 10:41:29 2017 +0100

    template scripts: allow to be called from top or src
    
    Allow the template setup script to be called from the top source
    directory or from ./src to unify where they can be executed
    from.

[33mcommit ea2ef1b51aaf3d2830bd9e076c23e97155de50d2[m
Author: Jason Ish <ish@unx.ca>
Date:   Sun Oct 1 09:54:13 2017 +0100

    templates: rename scripts to use - instead of _
    
    Use "-" consistently instead of a mix of - and _.
    
    setup_decoder.sh -> setup-decoder.sh
    setup_simple_detect.sh -> setup-simple-detect.sh

[33mcommit 21231fd1980fbae41bba3540be0e5cea6db60868[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 30 16:50:47 2017 +0200

    github: codeowners syntax fixes

[33mcommit cfed351149325120f0969633f6fade3efa14c884[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 30 13:13:58 2017 +0200

    github: add codeowners file
    
    Initial version.
    
    See https://help.github.com/articles/about-codeowners/

[33mcommit 499afaba4bc4624afa9e7d7e7648f9070ea5d37d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 6 14:56:06 2017 +0200

    template: fix decoder setup script

[33mcommit 7783847467dee6c0a8bb34d555fac2cbac5141d4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 4 21:03:56 2017 +0200

    template: fix setup detect script

[33mcommit 05d3a4db90c423a21bbd7b7410189c545db2ad4c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 4 14:54:24 2017 +0200

    template: minor updates
    
    Merge inspect engine into keyword

[33mcommit d9a7a6d3e503b97d8f8e08aadf90c39bd32965c7[m
Author: Derek <derekmkingsbury@gmail.com>
Date:   Wed Sep 6 20:23:25 2017 -0700

    dns: fix last timestamp handling
    
    Fixes incorrect variable in ticket #2207
    
    In app-layer-dns-tcp.c in the DNSTCPResponseParse function
    a variable is set to last_req when it should be last_resp.
    This makes it consistent with UDP DNS response parsing.

[33mcommit 8fa6e065bc7292d3cb93298f72f9af7264a273bc[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Sep 18 20:30:20 2017 +0200

    af-packet: free bpf program
    
    This fixes a small memory leak when Suricata is running with a
    BPF filter.

[33mcommit 7127ae2b44702a085a6c0623b4cda440b0c87795[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Sep 18 20:24:29 2017 +0200

    af-packet: call thread deinit function

[33mcommit 620f2540c68b38e84706130a0a7a6ddce728d8e1[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Sep 9 11:13:29 2017 +0200

    prscript: update docker code
    
    Update docker code to latest docker python API. This patch
    preserves backwrd compatibility with older versions.

[33mcommit c048ee6505a4ed21bf46af09a75bc0052181c997[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Sat Sep 9 23:22:06 2017 +0200

    doc: reflect most recent cpu affinity settings
    
    Some settings like output-cpu-set never been used and detect got renamed
    to worker. This reflects those changes already present in the yaml also
    within the documentation.

[33mcommit d363a165c151beb2fce2d3cf28de4ccc9c72f910[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed Aug 9 21:07:03 2017 +0200

    app-layer-ssl: fix bug with >255 records in one stream

[33mcommit a59390e8dee9a13c89e1791a20b15e2a480b62e7[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Fri Aug 11 23:53:55 2017 +0200

    rule-parser: bump sids within siggroup test

[33mcommit a0ec5fe9b7ae9508c3ba2baab66fae694eecb16b[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Fri Aug 11 23:25:44 2017 +0200

    rule-parser: detect duplicate rev keyword

[33mcommit ea025419136033a0763ff73f2735b96ef86fb0ad[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Fri Aug 11 23:24:22 2017 +0200

    rule-parser: detect duplicate sid keyword

[33mcommit 0210d70550bd006e01e9cc5e42b01ffe44ccb2c4[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Fri Aug 11 23:11:46 2017 +0200

    rule-parser: detect duplicate classtype keyword

[33mcommit f47df5a671c96cd3bcbbd49c688877a90e267b7a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 29 12:57:53 2017 +0200

    afpacket: free ring mem on error

[33mcommit 39807b47cb2d3b355857e3e3ffa63fbb42e348d1[m
Author: Alexander Gozman <goal81@gmail.com>
Date:   Sun Aug 20 15:22:34 2017 +0300

    Bug #2201: af_packet - treat BPF filter error as fatal
    
    There is no need to try to set erroneous BPF filter again and again. Such attempts
    lead to constant mmap() calls without corresponding munmap() when 'use-mmap' is enabled.

[33mcommit f27b4fc8fe64f524d3ca7c35214c40ee0d3bfe2f[m
Author: Julian <julian@net23.de>
Date:   Fri Jun 2 17:34:44 2017 +0200

    redis: support for rpush in list mode
    
    This adds a new redis mode rpush. Also more consistent config keywords orientated at the redis command: lpush and publish.
    Keeping list and channel config keywords for backwards compatibility

[33mcommit 23f8cc4a03bbb6cfb2722ad2789708bf0ca2448b[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed Aug 2 14:49:43 2017 +0200

    app-layer-tls: don't decode client certificates
    
    Decoding client certificate overwrites the validity dates from the
    server certificate, so we therefore don't decode it, since we don't
    do anything with it (right now) anyway.
    
    Fixes Bug #2050

[33mcommit e4129c15684a351e0203cd27f236a16b41831992[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Wed Aug 2 10:00:07 2017 +0200

    Rust/Lua: cast value to arch-dependant type (fix build on x86, #2197)

[33mcommit 17d9616fde7f06257920ad4de6ba09f030a34d1f[m
Author: Phil Young <py@napatech.com>
Date:   Mon Jul 17 10:59:00 2017 -0400

    napatech: Implementation of packet counters
    
    added util-napatech module which contains implementation threads
    for processing statistics.  And modified source-napatech and
    runmode-napatech to instantiate the threads.
    
    napatech: Implementation of packet counters
    
    napatech: implementation of statistics counters
    
    napatech: Implementation of packet counters.
    
    napatech: added util-napatech module
    
    napatech: added utils-napatech module.
    
    added include declaration and napatech specific structure when HAVE_NAPATECH
    is defined.
    
    Added util-napatech module to project.

[33mcommit 01801c6d7c07dbe9f3203308573471a86edfdaf0[m
Author: Phil Young <py@napatech.com>
Date:   Mon Jul 17 10:11:26 2017 -0400

    napatech: configuration changes.
    
    Added comments describing parameter usage.
    Changed example to use range formatting of streams.

[33mcommit 5f613e6e7deb0efc7c4b13a982402ef9126a4a27[m
Author: Phil Young <py@napatech.com>
Date:   Mon Jul 17 10:08:02 2017 -0400

    napatech: Added section describing packet counters.

[33mcommit f6838f9085b10380196aa8500fb861e3aefec079[m
Author: Phil Young <py@napatech.com>
Date:   Mon Jul 17 10:03:44 2017 -0400

    napatech: Added description of hba usage.

[33mcommit ac12c04f114962eb7250730d810d96fc6575efb8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 1 10:13:10 2017 +0200

    detect-msg: cleanup error message

[33mcommit 88a3ba52d62020d023a4fe0084d340c20a63b6e1[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Sun Jul 30 00:14:50 2017 +0200

    rule-parser: ignore duplicated msg keyword

[33mcommit 0f41172cc69083366e4d84702a3356d9f1774f24[m
Author: jason taylor <jtfas90@gmail.com>
Date:   Mon Jul 31 11:41:19 2017 -0400

    updated fedora libevent package names
    
    Signed-off-by: jason taylor <jtfas90@gmail.com>

[33mcommit b8428378ac6fb2365337ae765e19dfc0f4548e4a[m[33m ([m[1;33mtag: suricata-4.0.0[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 27 09:02:12 2017 +0200

    changelog: update for 4.0.0

[33mcommit fc229430f821d8809b90577beb1a6ace14d2b84b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 26 16:08:05 2017 +0200

    doc: add rust and update version in install

[33mcommit 00d4ba5c9cfcfbcc1499f9c2dc4148eb3098d372[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 24 10:11:20 2017 +0200

    dcerpc: improve stub buffer handling
    
    Stub data buffer could grow without limit depending on traffic.
    
    This patch improves the handling. It honors the 'last frag' setting
    and implements a hard limit of 1MB per buffer.
    
    Bug #2186

[33mcommit cd0fb1ab1adefc682bbfa62287812671bdf5fafa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 21 13:18:21 2017 +0200

    dcerpc: cleanup, remove unused field

[33mcommit 31daf435794c93a3908079ef9fcb099e62afe18c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 21 12:38:49 2017 +0200

    afl: add dcerpc entry points
    
    Add for requests and mix of request/responses.
    
    Implement storing the files to disk and rereading them.

[33mcommit e5eb0bbe32ad18ea6c1f8c0dd575a338858cdb8e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 24 18:48:23 2017 +0200

    stream/bypass: more liberal policy if no detection
    
    The reason the stream engine can't easily decide to bypass streams
    is that there can be non-stream dependent rules that wouldn't match
    if bypassing is done too aggressively.
    
    However, if there is no detection engine, there is no reason to hold
    back. In this case we can bypass as soon as the stream engine is done
    with a session.

[33mcommit cc82ef065c8bf22352a62d4e9b578fafc936fc83[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jun 30 15:00:40 2017 +0200

    af-packet: optimize BPF
    
    This patch turn on code optimization on BPF filter building by
    libpcap. This allow to reduce the size of the BPF bytecode and
    thus increase the size of BPF filter supported by Suricata.
    
    Reported-by: Martijn van Oosterhout

[33mcommit 2979a0a2e1198be101408fbc88e64ea46cd3d002[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jul 20 10:19:01 2017 +0200

    app-layer-ssh: trigger bypass when done
    
    Trigger bypass when application layer will not inspect anymore.

[33mcommit 6cfabb78630f3c7290f1f180f7513255fff2d12e[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Jul 24 10:40:53 2017 -0600

    autogen: cleanup rust strict warning

[33mcommit 7cc0067be0d402da6395c722348094e9c60a825a[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Jul 20 14:53:09 2017 -0600

    Sample systemd unit file for Suricata.
    
    Create a sample systemd unit file based on the build time
    configuration.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/2138

[33mcommit ddf6bce5d86d20a5db47840e42f4967e98d5625b[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Jul 24 09:14:17 2017 -0600

    Sample logrotate configuration file.
    
    Create a sample logrotate configuration file with filenames
    set for the configuration.

[33mcommit dbd2d7c05805e2033018abb7412275cfa815b109[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 19 12:45:39 2017 +0200

    detect: more gracefully handle mpm prepare failure
    
    Exit with error instead of using the detection engine in a broken state.
    
    Bug #2187

[33mcommit e087d938833bbf4665fc90ddb66c6913e570a895[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 19 12:16:48 2017 +0200

    detect: reject dsize rules that can't match
    
    Rules can contain conflicting statements and lead to a unmatchable rule.
    
    2 examples are rejected by this patch:
    
    1. dsize < content
    2. dsize < content@offset
    
    Bug #2187

[33mcommit d32ba60b517b16e1cc823edb1c4f1320baf60166[m
Author: Sebastian Garcia <eldraco@gmail.com>
Date:   Fri Jul 14 16:30:48 2017 +0200

    Update public-data-sets.rst with stratosphere project
    
    Add the datasets of the Stratosphere project to the list.

[33mcommit c02739e535e6b6cf5311f78b7c9d8c88f1760a5a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jul 15 10:00:57 2017 +0200

    mingw: don't try to build unix socket

[33mcommit d1e839eabcc64827fcb4df42ddec339d7931bc84[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jul 15 09:48:40 2017 +0200

    windows: use wpcap instead of pcap
    
    Windows pcap libraries such as winpcap all use a library name of
    wpcap instead of just pcap. Support this in configure.

[33mcommit 8c31cd4beae952238398a5889b6d6d01d922854b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 17 10:09:01 2017 +0200

    win32: minor compile warning fixes

[33mcommit d1b6be99def9d4ae71628b28889107999dbc998f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 14 21:12:50 2017 +0200

    mingw: fix random function

[33mcommit 5ea58fe3c4e21707edca95a4e373a30284850395[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 14 21:06:37 2017 +0200

    cocci: add test to check for uint use
    
    uint is non-standard and not supported by MinGW. So ban it's use.
    
    spatch file by Eric Leblond.

[33mcommit afed6fe4a2240860ee2801e0c89811af0182493f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 14 21:03:04 2017 +0200

    cleanup: remove all uint use

[33mcommit 90e612d3e4c07440089512e9c7f6cacc47e7686a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 14 21:30:36 2017 +0200

    cocci: ban memmem

[33mcommit 83c385a98fd631e5102e210c559d4ec9adddbdf5[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Jul 14 13:31:10 2017 -0600

    dnp3: use BasicSearch instead of memmem
    
    Mingw doesn't support memmem.

[33mcommit fd025ba3f5f8a01cc35cc817b376ff04aabe2cd7[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Jul 14 09:09:33 2017 -0600

    rust: require jansson for rust build

[33mcommit 16921b6b99acc5467b04dc992765c057cf1875a3[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Jul 14 08:28:44 2017 -0600

    travis: enable strict rust; use rust 1.15.0
    
    Adds --enable-rust-strict to fail on warnings. Also update
    the minimum Rust version from 1.7.0 to 1.15.0.

[33mcommit 6a4cefb7c58cb4442fb1b3bf55c892e6e8d1d867[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Jul 14 08:26:30 2017 -0600

    rust: --enable-rust-strict to turn warnings into errors

[33mcommit f715b0ae6b4ad512936007372e56b7ab2c76b006[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Jul 17 15:07:27 2017 -0600

    doc: add pid-file section to suricata.yaml doc
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/2104

[33mcommit 95a781d4b208ea8d82b9e0e21038f0fd6e0f1345[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Jul 17 14:58:57 2017 -0600

    suricata.yaml: better comment on pid-file option
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/2104

[33mcommit 59d69666ea4a0872447f8232dd31500544978ef0[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Jul 17 14:55:20 2017 -0600

    doc: add more details to log rotation doc

[33mcommit 92f15b7ffbcf0836b770fda78969c36cf16d4d35[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Jul 17 11:42:18 2017 -0600

    doc: move log rotation to output section

[33mcommit 3063851d85528c05991cfa6678a39079a24e56ea[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Jul 13 10:28:48 2017 -0600

    rust/dns/tcp - probe even if payload is short
    
    As the DNS probe just uses the query portion of a response, don't
    require there to be as many bytes as specified in the TCP DNS
    header. This can occur in large responses where probe is called
    without all the data.
    
    Fixes the cases where the app proto is recorded as failed.
    
    Fixes issue:
    https://redmine.openinfosecfoundation.org/issues/2169

[33mcommit 74f4f6dd633e53e7507399b715d07c264d96261f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 14 11:05:51 2017 +0200

    gcc7: format-truncation fix for lua

[33mcommit 57791bd670d0f9e4e254aa6df2757d4660827a1b[m[33m ([m[1;33mtag: suricata-4.0.0-rc2[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 12 16:45:41 2017 +0200

    changelog: update for 4.0.0-rc2 release

[33mcommit df3a3c785734792da484d3f5547bdfcd20cc4f26[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 10 10:15:54 2017 +0200

    der/asn1: limit recursion
    
    Limit the number of recursive calls in the DER/ASN.1 decoder to avoid
    stack overflows.
    
    Found using AFL.

[33mcommit a306ccfd34e7e2ccb12c41ae13e9dbffcfdcb3f1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 12 10:56:56 2017 +0200

    rust/nfs: implement events
    
    Remove lots of panic statements in favor of setting non-fatal events.
    
    Bug #2175.

[33mcommit 3e9b583d479ffd619fa25a42a0ca550a7e95691b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 13 10:04:47 2017 +0200

    radix: fix risky malloc call
    
    GCC7 said:
      CC       util-radix-tree.o
    In file included from util-debug-filters.h:29:0,
                     from util-debug.h:34,
                     from suricata-common.h:421,
                     from util-radix-tree.c:26:
    util-radix-tree.c: In function ‘SCRadixAddKey’:
    util-mem.h:177:12: error: argument 1 range [18446744071562067968, 18446744073709551615] exceeds maximum object size 9223372036854775807 [-Werror=alloc-size-larger-than=]
         ptrmem = malloc((a)); \
         ~~~~~~~^~~~~~~~~~~~~
    util-radix-tree.c:749:42: note: in expansion of macro ‘SCMalloc’
                 if ( (inter_node->netmasks = SCMalloc((node->netmask_cnt - i) *
                                              ^~~~~~~~
    In file included from suricata-common.h:69:0,
                     from util-radix-tree.c:26:
    /usr/include/stdlib.h:443:14: note: in a call to allocation function ‘malloc’ declared here
     extern void *malloc (size_t __size) __THROW __attribute_malloc__ __wur;
                  ^~~~~~
    
    scan-build said:
    util-radix-tree.c:749:42: warning: Call to 'malloc' has an allocation size of 0 bytes
                if ( (inter_node->netmasks = SCMalloc((node->netmask_cnt - i) *
                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ./util-mem.h:177:14: note: expanded from macro 'SCMalloc'
        ptrmem = malloc((a)); \
                 ^~~~~~~~~~~
    1 warning generated.

[33mcommit 5b84c01cd3567ac531413c0f4bec9bd59223b011[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 13 09:57:40 2017 +0200

    gcc7: fix format-truncation warnings in runmodes
    
    Example:
    
    util-runmodes.c: In function ‘RunModeSetIPSAutoFp’:
    util-runmodes.c:496:40: error: ‘snprintf’ output may be truncated before the last format character [-Werror=format-truncation=]
             snprintf(qname, sizeof(qname), "pickup%d", thread+1);
                                            ^~~~~~~~~~
    util-runmodes.c:496:9: note: ‘snprintf’ output between 8 and 17 bytes into a destination of size16
             snprintf(qname, sizeof(qname), "pickup%d", thread+1);
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    Solved by reducing 'thread' to a uint16_t and limiting the max
    thread count to 1024.

[33mcommit 7e72553ff8b5b205f2f15b7937e1e756219464e9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 13 09:06:39 2017 +0200

    gcc7: fix format truncation warning
    
    detect-rpc.c: In function ‘DetectRpcParse’:
    detect-rpc.c:225:50: error: ‘%s’ directive argument is null [-Werror=format-truncation=]
                     SCLogError(SC_ERR_INVALID_VALUE, "invalid rpc option %s",args[i]);
                                                      ^
    util-debug.h:239:77: note: in definition of macro ‘SCLogErr’
                 int _sc_log_ret = snprintf(_sc_log_msg, SC_LOG_MAX_LOG_MSG_LEN, __VA_ARGS__);   \
                                                                                 ^~~~~~~~~~~
    detect-rpc.c:225:17: note: in expansion of macro ‘SCLogError’
                     SCLogError(SC_ERR_INVALID_VALUE, "invalid rpc option %s",args[i]);
                     ^~~~~~~~~~

[33mcommit 16845d8c922184edd1a08638401ac2e3ed15e0ec[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 13 08:51:30 2017 +0200

    pcap-log: fix path construct check

[33mcommit 96b2e8afc02ba47e638eb6e8cc729c97f2437ec3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 12 18:44:33 2017 +0200

    gcc7: fixes for format string warnings
    
    GCC 7.1.1 on Fedora gave several warnings with -Wimplicit-fallthrough
    and -Wformat-truncation
    
    This patch addresses the warnings.

[33mcommit 82bd732f4e7f553f07061dbcc49bb549cad58431[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 10 11:51:43 2017 +0200

    rust/nfs: improve proto detect

[33mcommit 6b4a04510a37c17267d2bd58ff195cf7bbce5146[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 10 10:26:38 2017 +0200

    rust/nfs: remove debug rec_size check
    
    Records larger than 40k are perfectly valid.
    
    Bug #2162.

[33mcommit 1236578a7cbd95c8fe9c75f06cfba065042716dd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 11 11:06:51 2017 +0200

    proto detect: improve 'failed' handling
    
    Don't try to call parser for 'failed'. Also don't set one direction
    warning if TS is failed and our direction is unknown/complete so failed
    as well.

[33mcommit 8dd077943c58943af9a52c3f14c64fcdb325aca9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 11 11:06:21 2017 +0200

    ssl: minor code reformatting

[33mcommit 091290dd1c0e6b35f4295bebe0b29fe2ffb5fd1a[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun May 14 20:40:51 2017 +0200

    app-layer: increment flow counter if one sided
    
    In the case of protocol like SMTP, we detect application layer on
    only one side.  Consequence was a missed increment in the flow
    counter.

[33mcommit 5afe1a981472b4807d14924be465c33ea8937b16[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 10 14:33:09 2017 +0200

    stream: don't reset state on syn/ack resend
    
    Bug #1958.
    
    The reset was originally created for issue #523, but that works
    well without the reset as well.

[33mcommit 62b6f9fe25d59061eee5314cb793f2c08ac6a5aa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 7 16:32:50 2017 +0200

    decode: add config option to disable teredo
    
    Ticket #744.

[33mcommit 52b39a41e0fb5e61d3a16fe34881e13529946111[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 7 13:34:21 2017 +0200

    stats: print alert count at shutdown
    
    Bug #1855.

[33mcommit 3c05379cbd430a06714537632ddba9f033cd87f1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 7 12:18:28 2017 +0200

    detect: fix mix of pass and noalert
    
    Noalert rules did not apply pass logic to the flow.
    
    Bug #1888.

[33mcommit d459d0b352ed8b33ebf51d8a4abd00d33d4e7a03[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 7 11:14:04 2017 +0200

    lua/alert: expose transaction if available
    
    Bug #1748.

[33mcommit 5781c8fc780f182c10d7c0fd3d4f4cfc7ed63faa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 7 10:57:47 2017 +0200

    pcre: fix \xHH issue for http_host
    
    The http_host keyword checks if the regex contains uppercase characters.
    This check was rejecting valid syntax in the following format:
    
        content:"|2E|suricata"; http_host; pcre:"/\x2Esuricata$/W";
    
    This patch addresses this case.
    
    Bug #1957.

[33mcommit c18e950d7d6a167bd2d936d3bb16bdbf18d87114[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 7 10:50:01 2017 +0200

    isdataat: fix mem leak

[33mcommit 320b032a8849724f0d47b3725648b8130a4d51c0[m
Author: Abbed <Abdu.ada@gmail.com>
Date:   Sun Jul 2 01:40:00 2017 +0300

    doc: small typo under '4.3.1.5' section

[33mcommit 5e3d8b15ec03aded50ea7821b991efda1eb30452[m[33m ([m[1;33mtag: suricata-4.0.0-rc1[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 28 12:43:44 2017 +0200

    Update Changelog for 4.0.0-rc1 release

[33mcommit b763c7ec1163e6026c4c3000e4258c991cb59a62[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jun 28 13:56:43 2017 +0200

    doc: document http-body logging

[33mcommit e9323810ad6e50b6bdc23f330dd3a20ed9708f96[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jun 26 18:19:39 2017 +0200

    output-json-alert: fix error handling
    
    MemBuffer was not freed in case of allocation error.

[33mcommit 33d7f7d5391459460bb52a71e86447125b43fa67[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jun 26 18:17:47 2017 +0200

    output-json-alert: log http body
    
    Add support for HTTP body logging as printable or as base64.

[33mcommit fff5f7f1f979673ab22f1d90df84785ddaa45179[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Thu Apr 14 14:26:58 2016 +0200

    output-json-http: add functions to log http body
    
    This patch adds two functions that permits to log the http body
    in printable or base64 format.

[33mcommit 08e4908dbefca24a0d640ec97cd08c5f54b15dd7[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Sun Oct 23 17:20:25 2016 +0200

    Add NULL-terminator to app-layer template (fix #1930)

[33mcommit 67b97c7948d80b401e129f16583c47ce783258bb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 28 09:23:42 2017 +0200

    log: destroy file mutex

[33mcommit fa742d1d14198c3931ee1bfba6ff8d02f2eeb41f[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Jun 26 11:04:46 2017 -0600

    log: wrap rotation and write in lock
    
    The application log is subject to rotation, so the check for
    rotation, the actual rotation and write needs to be done under
    lock to ensure the file pointer is in a consisten state
    at the time of write().
    
    Fixes issue:
    https://redmine.openinfosecfoundation.org/issues/2155

[33mcommit 40991cab8222f40b6d0ad85312c021fb459dc2e5[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Jun 27 16:47:23 2017 -0600

    rust/dns: handle multiple txt strings
    
    Fix handling of TXT records when there are multiple strings
    in a single TXT record. For now, conform to the C implementation
    where an answer record is created for each string in a single
    txt record.
    
    Also removes the data_len field from the answer entry. In Rust,
    the length is available from actual data, which after decoding
    may actually be different than the encoded data length, so just
    use the length from the actual data.

[33mcommit 9dab3ec71e04081686c3632d0b0d28c953048a36[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 27 21:51:00 2017 +0200

    rust: enable/disable yaml settings
    
    Based on compile time settings, enable/disable app-layers
    and loggers.

[33mcommit 87dbda1d1e24d97bf99d50aee3cf3e5460c249c0[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Tue Jun 20 16:11:58 2017 +0200

    Add NTP event rules (commented) to the default config

[33mcommit 79ed8c2dd38ab7ba244ab8106796f672d95ca373[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Tue Jun 20 13:57:46 2017 +0200

    Add event rules for NTP events

[33mcommit 8a0549c42e9b6b70c53bd3b01b57ba25c95a4953[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Mon Jun 19 13:40:42 2017 +0200

    NTP: change parse function to return the number of parsed messages

[33mcommit efe11dc37e7f5be575981eefa50cb2891b62bb67[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Mon Jun 19 13:19:23 2017 +0200

    Add NTP parser (rust-experimental)

[33mcommit 4f677fd157baacd41383761f4bb8c33636a5f3f7[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Mon Jun 19 13:20:07 2017 +0200

    Rust gen-c-headers: keep 'const' attribute

[33mcommit 4fe9292ed86ea8ad9f81cb88b63d9161ff884de0[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Mon Jun 19 13:17:20 2017 +0200

    Autotools: add switch to build experimental Rust parsers

[33mcommit fee0fdc5951e5e0f03c841a6e3c6a5497b9366f4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 27 15:07:40 2017 +0200

    pcap: fix linktype raw issues
    
    On OpenBSD 6.0 and 6.1 the following pcap gets a datalink type of
    101 instead of our defined DLT_RAW.
    
        File type:           Wireshark/tcpdump/... - pcap
        File encapsulation:  Raw IP
        File timestamp precision:  microseconds (6)
        Packet size limit:   file hdr: 262144 bytes
        Number of packets:   23
        File size:           11 kB
        Data size:           11 kB
        Capture duration:    7,424945 seconds
        First packet time:   2017-05-25 21:59:31,957953
        Last packet time:    2017-05-25 21:59:39,382898
        Data byte rate:      1536 bytes/s
        Data bit rate:       12 kbps
        Average packet size: 496,00 bytes
        Average packet rate: 3 packets/s
        SHA1:                120cff9878b93ac74b68fb9216027bef3b3c018f
        RIPEMD160:           35fa287bf30d8be8b8654abfe26e8d3883262e8e
        MD5:                 13fe4bc50fe09bdd38f07739bd1ff0f0
        Strict time order:   True
        Number of interfaces in file: 1
        Interface #0 info:
                             Encapsulation = Raw IP (7/101 - rawip)
                             Capture length = 262144
                             Time precision = microseconds (6)
                             Time ticks per second = 1000000
                             Number of stat entries = 0
                             Number of packets = 23
    
    On Linux it is 12.
    
    On the tcpdump/libpcap site the DLT_RAW is defined as 101:
    http://www.tcpdump.org/linktypes.html
    
    Strangely, on OpenBSD the DLT_RAW macro is defined as 14 as expected.
    So for some reason, libpcap on OpenBSD uses 101 which seems to match
    the tcpdump/libpcap documentation.
    
    So this patch adds support for datalink 101 as RAW.

[33mcommit 885b8cefec83b63bbde1279f59d7ff1e40ba320c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 27 09:59:48 2017 +0200

    detect: fix crash when stream inspect runs on UDP
    
    Certain rules can apply to both TCP and UDP. For example 'alert dns'
    rules are inspected against both TCP and UDP. This lead to the
    stream inspect engine being called on a UDP packet.
    
    This patch fixes the issue by exiting early from the stream inspect
    engine if a) proto is not TCP or b) ssn is not available
    
    Bug #2158.

[33mcommit 6226338d5b830c20397bc41d02ed8937c1ff43e6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 26 13:53:22 2017 +0200

    eve/alert: redo option parsing
    
    Clean up option parsing. Allow options to be disabled as well as
    enabled.
    
    E.g.
        metadata: true
        flow: false
    
    The metadata setting will enable all. Then flow is disabled.

[33mcommit 9e581436a7d47043ec9264fdfe76ee19a4766b53[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jun 22 09:20:05 2017 +0200

    doc: info about new config for alert events in EVE

[33mcommit 66da9d0ba68dade5decae23349b8f564b5616c3a[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jun 26 10:41:11 2017 +0200

    output-json-alert: rename applayer to metadata

[33mcommit ef88689f1e82d3ae6ce41efa047dd82496ee055d[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jun 22 09:15:00 2017 +0200

    doc: add app_proto to alert event

[33mcommit da9005c404f281badd3bb4ccee675560fae2d359[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jun 21 19:50:11 2017 +0200

    output-json-alert: add app_proto or flow to events
    
    This patch adds a partial flow entry in the alert event
    (if applayer or flow is selected) or simply app_proto if
    it is not.
    
    app_proto is useful as filter and aggregation field. And
    the partial flow entry contains more information about the
    proto as well as some volumetry info.

[33mcommit 61d9f4bb0a947d39d409fd0ebbb3aa1d8374a51a[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Jun 21 12:44:37 2017 -0600

    rust: make distcheck fixes

[33mcommit f5a90e26a91d030e641900c60372629a057008e4[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Jun 21 09:06:22 2017 -0600

    rust: for sclog*, strip nul bytes before logging

[33mcommit 717b826d256a021bfd52991e1ec654779f05c3e5[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Jun 20 12:47:34 2017 -0600

    rust: safe string handling in logging
    
    In logging (SCLog*), safely convert strings to cstrings instead
    of blindly unwrapping them.
    
    Also implement a simple rust logger if the Suricata C context
    is not available.

[33mcommit 1ebad6bd718815ffab239fb50773c82c8ef4df23[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Jun 20 10:30:35 2017 -0600

    rust/dns: cargo unit test prototype
    
    Do remove compiler warning when building without unit tests.

[33mcommit 14951e3f0079df212444d82bdc5ebb27cb88f01d[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Jun 20 10:17:54 2017 -0600

    rust: save cargo and CARGO_HOME to variables
    
    During configure, substitute the path of cargo, as well as the
    value of CARGO_HOME as variables. This fixes the case where a
    user might do:
      make
      sudo make install
    Which will cause the cargo bits to be rebuilt, including
    re-downloading external crates.
    
    By saving these to variables we can be sure that the same
    values are used during make install as were used during
    make which prevents the Rust artifacts from being rebuild
    during "sudo make install".

[33mcommit 4be031394be3f6a2e0f0462e2dcb39a84bc2d32b[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jun 22 17:48:00 2017 +0200

    output-json-alert: fallback to payload if stream is void
    
    If stream logging results in no data then we fallback to payload
    data to get somethingi that could be interesting  instead of
    nothing.

[33mcommit c3806ebd2a95f60cefea4d329020fc3016a0695a[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jun 20 19:00:22 2017 +0200

    suricata.yaml: add some port variables
    
    These variables are used by Talos ruleset and defining them allow
    to get almost all rules of ruleset loaded.

[33mcommit eb70b1e1957ddd84eefc557ca661309dac2dd1ba[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jun 19 22:54:17 2017 +0200

    detect-asn1: fix memory leak

[33mcommit 170591a0b156bcd4a8687e3e039ba6b7f7b54d6b[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jun 19 20:16:01 2017 +0200

    util-print: add 0 at end of buffer
    
    Add a 0 at the end of the printed buffer to be sure we terminate
    with a 0 to avoid problem when calling strlen().

[33mcommit d61fa0c43c3dce72c10e58462544bf5d6443128c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 20 12:13:14 2017 +0200

    tunnel: refactor tunnel verdict handling
    
    Observed:
    
    STARTTLS creates 2 pseudo packets which are tied to a real packet.
    TPR (tunnel packet ref) counter increased to 2.
    
    Pseudo 1: goes through 'verdict', increments 'ready to verdict' to 1.
    Packet pool return code frees this packet and decrements TPR in root
    to 1. RTV counter not changed. So both are now 1.
    
    Pseudo 2: verdict code sees RTV == TPR, so verdict is set based on
    pseudo packet. This is too soon. Packet pool return code frees this
    packet and decrements TPR in root to 0.
    
    Real packet: TRP is 0 so set verdict on this packet. As verdict was
    already set, NFQ reports an issue.
    
    The decrementing of TPR doesn't seem to make sense as RTV is not
    updated.
    
    Solution:
    
    This patch refactors the ref count and verdict count logic. The beef
    is now handled in the generic function TmqhOutputPacketpool(). NFQ
    and IPFW call a utility function VerdictTunnelPacket to see if they
    need to verdict a packet.
    
    Remove some unused macro's for managing these counters.

[33mcommit 7c119cc595bd1dc29dfc54665ee76a5caf604c82[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 19 09:52:16 2017 +0200

    nfs: log number of chunks that xfer'd a file

[33mcommit ed706583e961a8191aeb1274f823e82c4360cb05[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jun 17 10:39:24 2017 +0200

    nfs: add nfs to alerts
    
    Also add a single 'applayer' option for alert augmentation that
    applies to all app-layers.

[33mcommit e8dae2e0938b8d657083c54d2bf574e8130b2c52[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 16 20:35:33 2017 +0200

    nfs: add to fileinfo events

[33mcommit db2d9281517f86b4283d714db81b0fd198999cf9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 16 16:09:18 2017 +0200

    rust/nfs: add (file)handle to log as crc32

[33mcommit 671e39642c319a44866d00c0aa7cce77d035dead[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Jun 16 08:54:38 2017 -0600

    travis: set dist to trusty (Ubuntu 14.04).
    
    The default is still 12.04 which is EOL.

[33mcommit 829155b9d58d465cf29b08dbe7905aaaf7a8a70a[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Jun 15 23:40:50 2017 -0600

    rust/dns: pass byte arrays directly to rust/json
    
    Using the json.set_string_from_bytes which will
    safely convert the bytes printable ascii string
    before logging.

[33mcommit 96cc5030263ac66037c9bb98cd0e5b57c54a0ddc[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Jun 15 23:39:26 2017 -0600

    rust/lua: use lua_pushlstring for strings
    
    Lua strings can contain NULLs, and Rust strings are UTF8 which
    can also contain NULLs. Use pushlstring so a NULL containing
    string can be pushed.

[33mcommit 6dbc5be4beaeb7fed9b2c4dc39ff999ec3eb2f04[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Jun 15 23:38:04 2017 -0600

    rust/json: only output printable characters
    
    Rust strings are UTF8 and we cannot yet rely on jansson
    having json_stringn on all supported OS distributions yet
    so sanitize strings to ascii before printing.
    
    Also add set_string_from_bytes which is like set_string, but
    accepts a byte array as input.

[33mcommit becf1a2dfe2f93798792190c0fda32be6c7eb8b5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 16 12:02:14 2017 +0200

    rust/nfs: fix style warning

[33mcommit e0c6565e682dd61a4a1b1363e7efb1ea59f8b04c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 16 10:25:18 2017 +0200

    nfs: nfs_version keyword
    
    Store nfs version in tx and add keyword to match on it.

[33mcommit aff576b524a08cc4f77dc2662309614f56d708d1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 16 08:09:48 2017 +0200

    eve/nfs: log nfs version

[33mcommit 0d79181d78f02209bf682e52250c92aed39c25fb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 15 15:00:12 2017 +0200

    nfs: rename nfs3 to nfs
    
    Since the parser now also does nfs2, the name nfs3 became confusing.
    As it's still in beta, we can rename so this patch renames all 'nfs3'
    logic to simply 'nfs'.

[33mcommit 28cdf7b628123ca95c06eaf47fe9dfccc08a59b7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 14 16:34:00 2017 +0200

    nfs3: create file tx for read on request
    
    This is done so that we can add creds to it.

[33mcommit 7e0d9619acc24f4e1041b60aac847e61cded1902[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 14 14:17:58 2017 +0200

    nfs3: add readdirplus path

[33mcommit 41376da03c72550e8972f4b870856c2b7cf7dc20[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 14 12:41:49 2017 +0200

    nfs: log more rpc

[33mcommit 9edbb6f235c6fd9e8b14a4c3cc0f128d03473341[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 14 10:22:08 2017 +0200

    nfs: split record parsers into different files

[33mcommit 25edac76661acc9a128a23271f763c425b3ff8f1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 13 08:39:16 2017 +0200

    nfs3: fill bytes corner case

[33mcommit 2a29f79960b8153234074fee64b1aad45ae76e4f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 12 23:15:42 2017 +0200

    nfs: fix rust data type declaration

[33mcommit 5153271b87ef41e22c43c6e50645ef5859c88bea[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 12 09:41:31 2017 +0200

    nfs2: basic record parsing and tracking

[33mcommit c7e10c73f92575c0d0ef4fd79fcb298615ec0c14[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jun 10 23:19:29 2017 +0200

    nfs3: support NFS over UDP

[33mcommit d9f87cec3d3dce6a3471ab69c7a441de962aa70f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jun 10 22:31:40 2017 +0200

    nfs3: probing parsers in both directions

[33mcommit 8fe32f943b8e45ed973e6d2e43d9d60a682bd28d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jun 10 14:58:06 2017 +0200

    nfs3: search for next record if needed after GAP

[33mcommit 58af39131f3b693df7293efcb208e21d21ed7683[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 8 15:13:49 2017 +0200

    rust/nfs: handle GAPs
    
    In normal records it will try to continue parsing.
    
    GAP 'data' will be passed to file api as '0's. New call is used
    so that the file API does know it is dealing with a GAP. Such
    files are flagged as truncated at the end of the file and no
    checksums are calculated.

[33mcommit a116c160194274fe604f504f6ba31d14d2e816e1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 11 11:27:31 2017 +0200

    nfs3: parse mkdir and rmdir request records

[33mcommit 1a2985ed76927db6d0b79c84a1ab1341d30dbb20[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 15 11:41:12 2017 +0200

    app-layer: remove checks
    
    Now that app-layer parser registrations are validated at startup,
    a number of runtime checks are no longer necessary. So remove them.

[33mcommit e930513125f7cbdb739c63940b052f48e18fbfb5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 15 11:34:25 2017 +0200

    app-layer: detect state registrations are mandatory

[33mcommit ed172985ca74760102ba8d5edf3b28062354cc03[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 15 11:32:13 2017 +0200

    app-layer: validate registration

[33mcommit d090cd2edf0ce1adb9e9a7e827c9c465168c1432[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 15 11:29:55 2017 +0200

    dcerpc/udp: add missing tx support

[33mcommit 6bddc4d3e04bf2c9302d7719fdb95f0116f79b4b[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Jun 14 22:59:39 2017 -0600

    python: use python path found during configure
    
    Also look for Python under more names. For example, on OpenBSD
    if you just install Python 2, you will only get a python2.7
    executable.

[33mcommit 5162b5826062e83a61f81e852b02ecd3e12f5dc8[m
Author: Selivanov Pavel <selivan5@yandex.ru>
Date:   Tue Jun 6 15:28:11 2017 +0300

    Fixed small typo: double sudo

[33mcommit 30be9f0b5d5870a7e65e6ea429aed3d5b4ca1f4b[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Jun 12 07:04:56 2017 -0600

    stream: don't do protocol detection on gap
    
    A gap notification has no data.
    
    Also, break out the gap handling into its own code block to
    simplify the conditional statements.

[33mcommit b582cdef317d760f7fc223173b06abd9b28b81a7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 13 14:35:34 2017 +0200

    hyperscan: unittests compiler warning fixes

[33mcommit c473c56eedba38a52fa0d99f6fc7365c5d9f5f97[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Jun 14 13:28:12 2017 -0600

    rust/dns: fix panic on rrnames with bad chars
    
    Check for erros in the UTF-8 conversion, on error, print the
    the printable chars as chars, and print non printable chars
    as \xHEX.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/2148

[33mcommit ecc63481c6e76d228097d466ff46666beec21233[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Jun 14 10:42:26 2017 -0600

    rust/dns: fix tcp message length verification
    
    And add Rust unit tests to check length validation.
    
    Redmine issue 2144:
    https://redmine.openinfosecfoundation.org/issues/2144

[33mcommit 26eb49d72130b95a1991484168d263a336c5b19d[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jun 13 22:32:50 2017 +0200

    bypass: add explicit flag in stream engine
    
    TCP reassembly is now deactivated more frequently and triggering a
    bypass on it is resulting in missing some alerts due forgetting
    about packet based signature.
    
    So this patch is introducing a dedicated flag that can be set in
    the app layer and transmitted in the streaming to trigger bypass.
    
    It is currently used by the SSL app layer to trigger bypass when
    the stream becomes encrypted.

[33mcommit 70808a4f1d87c036b89172a06f5dbc222308ada9[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Jun 9 11:12:19 2017 -0600

    rust/dns: support gaps in TCP DNS

[33mcommit f1ba406d39e4b18a0128f28203449124e10329d0[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Jun 8 13:32:40 2017 -0600

    travis: add rust 1.7.0 build
    
    One build with Rust 1.7.0, our oldest that we'll support as its
    whats bundled with Ubuntu 16.04. Create another build that will use
    the latest stable.

[33mcommit 4bdb722371987aa15f2d707c2aadc07eac12b605[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Jun 8 13:59:09 2017 -0600

    rust/dns: fix unit tests on Rust 1.7.0

[33mcommit 2aebfbce946104716d97549802b2b05e356fd761[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Jun 8 13:26:37 2017 -0600

    rust/dns: support txt records

[33mcommit 26914cd59af44ccf81a483636c490da2f8584a29[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Jun 7 14:06:44 2017 -0600

    rust/dns: copy over dns unit tests
    
    Only the tests that make sense were copied over, those testing
    correlation of responses to requests were not.
    
    Also, remove compiler warning when not built with
    unit tests.

[33mcommit fafa75035f213b9a1d946f9d4a3b101639c9d7d3[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Jun 7 13:25:16 2017 -0600

    rust: don't fail distcheck if cargo-vendor not found
    
    Allow distcheck to pass if cargo vendor is not found by not
    failing out. It is not required to successfully build a dist
    tarball, the Rust sources will just not be vendored in.
    
    Also don't fail out make dist if Python is not installed. A build
    will still be successful is Python is available on the end
    build system.

[33mcommit 5be44eb50019a908d4621c8dce1c138dd3437289[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jun 12 14:04:38 2017 +0200

    output-json-alert: don't decref used object
    
    In the unlikely case of a allocation error we will still use the
    existing object so it should not be decref and freed.

[33mcommit f4374ffd0bfce53abb04b6f415ea7d55f84eba70[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jun 6 18:45:52 2017 +0200

    doc: some more info about alert format

[33mcommit f5ad6a209527ba6df554f6c3334f2392afcaed04[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jun 6 18:35:48 2017 +0200

    doc: document target keyword

[33mcommit 0c3a3101b16763dfc99c24be9e50f26c03e74876[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Dec 25 23:04:31 2016 +0100

    alert-prelude: correctly set Source and Target
    
    IDMEF alert contains two entities named Source and Target that are
    defined using common language:
    * "The Source class contains information about the possible source(s) of
       the event(s) that generated an alert."
    * "The Target class contains information about the possible target(s) of
       the event(s) that generated an alert."
    
    Previous alerts event were not following that so we can updated the code
    when we know the direction thanks to the metadata field.

[33mcommit f0e8062b2bbb51699404932400fdd889d3893443[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Apr 23 10:24:05 2017 +0200

    alert-prelude: fix warnings on callback type

[33mcommit 6af529d0c66407beac142a74ad437e62f1274ef5[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Dec 17 10:40:11 2016 +0100

    output-json-alert: output source and target
    
    Use metadata provided information to output the Source and Target
    in the definition of IDMEF.
    
    The output is now the following:
    
      "alert": {
        "action": "allowed",
        "gid": 1,
        "signature_id": 1,
        "rev": 1,
        "signature": "connection to home",
        "category": "",
        "severity": 3,
        "source": {
          "ip": "2001:31d0:000a:f68a:0000:0000:0000:0001",
          "port": 80
        },
        "target": {
          "ip": "2a01:0e34:ee97:b130:c685:08ff:dab3:c9c8",
          "port": 48390
        }

[33mcommit 97b89c0a5492417efad8374c4bfb9515e4a5887c[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Dec 16 19:26:58 2016 +0100

    detect-target: introduce new keyword
    
    The target keyword allows rules writer to specify information about
    target of the attack. Using this keyword in a signature causes
    some fields to be added in the EVE output. It also fixes ambiguity
    in the Prelude output.

[33mcommit 43db4697a3a599f0a0cb069bf25a987f896c345b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 12 18:45:36 2017 +0200

    github: add pull request template

[33mcommit e91473b1519c4b69f4b36ac2345cdbd26d2b084b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 12 18:38:42 2017 +0200

    github: add contributing doc

[33mcommit 8ea9a5a7d6619057ea7c51676743b02692dad7b5[m[33m ([m[1;33mtag: suricata-4.0.0-beta1[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 7 17:01:44 2017 +0200

    common: sync PROG_VER version with configure.ac

[33mcommit b970e1b89bef6cbda04f03d8e683c2479ad784be[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 7 16:43:27 2017 +0200

    changelog: update for 4.0.0-beta1

[33mcommit 33e09a000281a8c58472adedaac9b576cde5132e[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Jun 6 17:02:14 2017 -0600

    rust dns: fixup for nom 3.0

[33mcommit ee83f7a0dbe98afb17f36750d91d1fa0fa1f340e[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Jun 6 17:19:02 2017 -0600

    rust: build fixes and nom update
    
    Update nom to ~3.0.
    
    Prefix dependencies with ~, which will allow for newer patch
    versions only. Minor version updates should get a test before
    using.
    
    Remove Cargo.lock from the repo, but still generate as part
    of the vendoring process for release builds. This will ensure
    that all users of a particular distribution tarball will be
    linking against the same Rust dependencies.

[33mcommit 889a6de926c02c96e2d86f3a0cf9d551c4f13f3a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 6 21:31:23 2017 +0200

    rust: add to features

[33mcommit d00b914ddbfefdbb282d36409c3e56d9146df8dc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 6 21:29:57 2017 +0200

    rust: make clear it's experimental

[33mcommit efdbc91687a34ca35ea0bc3960b12ea50009ccdb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 6 19:09:18 2017 +0200

    log: fix mem leak in error path (CID1404888)

[33mcommit a3f07ec02e732ec3533c8760cd8b8caa043ff0bc[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jun 5 16:41:47 2017 +0200

    doc: document drop-invalid option.

[33mcommit 91d2809bca82f23472a07f55158b8ebff4304c87[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jun 5 13:46:08 2017 +0200

    qa: update struct-flags coccinelle test

[33mcommit 7a17b4acf5029573013336435720d50346bb5243[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri May 12 20:22:35 2017 +0200

    stream-tcp: use flags field to store inline info

[33mcommit 85dab65414064776c6d20539146ec8559cd7dc7d[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri May 12 19:53:49 2017 +0200

    stream-tcp: use flags field to store bypass info

[33mcommit 050d8f788b1b9f62f0bc46a245c506e39a42621a[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 9 23:35:03 2017 +0200

    af-packet: warn when tpacket_v3 is used in IPS
    
    Update yaml and add an error message.

[33mcommit ea9b9b50630facc65de81052453d5ae2f0907a8a[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Apr 24 15:00:20 2017 +0200

    stream-tcp: add option to accept invalid packets
    
    Suricata was inconditionaly dropping packets that are invalid with
    respect to the streaming engine. In some corner case like asymetric
    trafic capture, this was leading to dropping some legitimate trafic.
    
    The async-oneside option did help but this was not perfect in some
    real life case. So this patch introduces an option that allow the
    user to tell Suricata not to drop packet that are invalid with
    respect to streaming.

[33mcommit e933eb849a628ad94cb631d8e86743b32296b946[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jun 5 16:06:04 2017 +0200

    doc: document filestore update

[33mcommit 775e67459cdcb8723feb2b58feeba7500f212c6b[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed May 31 18:14:29 2017 +0200

    filestore: avoid open write close sequence
    
    Current file storing approach is using a open file, write data,
    close file logic. If this technic is fixing the problem of getting
    too much open files in Suricata it is not optimal.
    
    Test on a loop shows that open, write, close on a single file is
    two time slower than a single open, loop of write, close.
    
    This patch updates the logic by storing the fd in the File structure.
    This is done for a certain number of files. If this amount is exceeded
    then the previous logic is used.
    
    This patch also adds two counters. First is the number of
    currently open files. The second one is the number of time
    the open, write, close sequence has been used due to too much
    open files.
    
    In EVE, the entries are:
     stats {file_store: {"open_files_max_hit":0,"open_files":5}}

[33mcommit 54718b306ece5418ec441617e114a38b641e863d[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jun 1 13:21:13 2017 +0200

    filestore: add option to disable meta file writing
    
    As the fileinfo entry is containing the file_id it is enough to
    have this entry to link the extracted file with metadata.

[33mcommit 098aced714e2648956d19bf91daaf1d0bea3775c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 23 11:26:56 2017 +0200

    rust/nfs/files: no longer Option/Box

[33mcommit 75a6a13790fba274061f6fbb8650a12499776e2a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 23 11:20:16 2017 +0200

    rust/nfs: move files into tx type data

[33mcommit de7e0614fad242154d62ed1259afcd60093b88e3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 23 10:10:57 2017 +0200

    rust/nfs: add more record types

[33mcommit d6592211d0f8373b52ede7d0d5dbfe4a3345678f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 22 22:10:20 2017 +0200

    rust/nfs: NFSv3 parser, logger and detection

[33mcommit 69bf219b3930ff5647a47360b99f51c7257a03a5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 22 21:55:32 2017 +0200

    rust: bindings: improve generator script

[33mcommit 71ddc43d49f4419f3df43ddbbda0008ee8e3f1d1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 22 21:56:14 2017 +0200

    rust/core: add file tx API call

[33mcommit 9a1fa5f1f4512018474dfeeada49d8847fcb4b52[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 11 17:47:43 2017 +0200

    rust: filetracker API
    
    Initial version of a filetracker API that depends on the filecontainer
    and wraps around the Suricata File API in C.
    
    The API expects chunk based transfers where chunks can be out of order.

[33mcommit a809f090d3ae2f87d438a6a9ef59f54cd1d45f0d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 11 16:58:55 2017 +0200

    rust: filecontainer API
    
    Wrapper around Suricata's File and FileContainer API. Built around
    assumption that a rust owned structure will have a
    'SuricataFileContainer' member that is managed by the C-side of
    things.

[33mcommit f47fd2c2436a08127b77cc889412bb48a9cfdb9b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 15 13:06:54 2017 +0200

    rust/json: expose json_boolean

[33mcommit ba1a67e2cb11016a617e1074bc5789a66a15309e[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed May 10 07:24:02 2017 -0600

    rust: dns: add log filtering on rrtype
    
    While the filtering is still configured in C, the filtering
    flags are passed into Rust so it can determine if a record
    should be logged or not.

[33mcommit c54fc7f98f4a5901c22e8c3446088bfe20e5b0d8[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue May 9 11:08:14 2017 -0600

    rust: use LoggerFlags type to track logged state

[33mcommit b588b497793feeb481a02ba2816fee4219fb049b[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon May 1 17:14:08 2017 -0600

    rust: lua support for DNS based Rust
    
    Uses Rust wrappers around Lua to populate Lua
    data structures.

[33mcommit 9d687025e2cc6bde469096f13d8efd32b568b776[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon May 1 17:13:20 2017 -0600

    rust: lua wrapper
    
    Rust wrapper for working with lua state.

[33mcommit 73388042b21e2431639d7329cc9f00186567ef2b[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Apr 26 16:35:10 2017 -0600

    rust: DNS app-layer.
    
    A DNS application layer in Rust. This is different than the
    C based one, as it is partially stateless by not matching
    up responses to replies.

[33mcommit 9449739dd50a38150e43edeac888afa7d7178fe6[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Apr 20 16:46:34 2017 -0600

    rust: dns: nom DNS parsers

[33mcommit 94032d3ada84e1d5a78ab96f02a411d33253c3b9[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Apr 26 16:33:47 2017 -0600

    rust: wrapper around C logging, and "context"
    
    Where the context is a struct passed from C with pointers
    to all the functions that may be called.
    
    Instead of referencing C functions directly, wrap them
    in function pointers so pure Rust unit tests can still run.

[33mcommit 9231b0ae92339934f46548eaa5fd4b0503f41e0e[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu May 11 13:30:27 2017 -0600

    rust: generate headers as part of build

[33mcommit d0880d75ffff3152f3c60b2bab7ad89d525b5814[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Apr 26 16:24:06 2017 -0600

    rust: c header generator

[33mcommit e739fa1477bc0d9ad45484adfb5ef75567641d07[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Apr 26 16:12:51 2017 -0600

    rust: add libjansson wrapper for rust

[33mcommit f6f126d53df45be95412b342df68b16447a995b7[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Apr 3 15:33:14 2017 -0600

    rust: example of how an app-layer may be initialized
    
    Also shows basic usage of the configuration API from Rust.

[33mcommit 949b358b80695a53eb48578407f132b6dc4dd146[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Apr 3 15:31:49 2017 -0600

    rust: stub out configuration access functions

[33mcommit de5bb1f953ec4ea201f935fe760a72832dbf7c74[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Apr 3 15:30:17 2017 -0600

    rust: stub out logging from rust

[33mcommit d6d635869177c9753d42e5cdeb78a2375c27a197[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Mar 16 15:38:14 2017 -0600

    travis: enable a rust build

[33mcommit 8f81792da580d4d205c2cb7d9d3cbae3683fe975[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Mar 16 15:32:46 2017 -0600

    rust: hook rust into the build
    
    Rust is currently optional, use the --enable-rust configure
    argument to enable Rust.
    
    By default Rust will be built in release mode. If debug is enabled
    then it will be built in debug mode.
    
    On make dist, "cargo vendor" will be run to make a local copy
    of Rust dependencies for the distribution archive file.
    
    Add autoconf checks to test for the vendored source, and if it
    exists setup the build to use the vendored code instead of
    fetching it from the network.
    
    Also, as Cargo requires semantic versioning, the Suricata version
    had to change from 4.0dev to 4.0.0-dev.

[33mcommit cf0b9dd45f302a6d49e2a1f8ef91556cb9a13a56[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Mar 16 14:44:21 2017 -0600

    rust: add rust skeleton tree

[33mcommit b332551dbb3274c69eb6303e87f07f717fd3e20e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 5 10:14:12 2017 +0200

    stream: suppress GAP notice message

[33mcommit fae822d82e94bf22fb2d75413e1e9582aa364f0e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 5 10:10:57 2017 +0200

    netmap: minor output cleanup

[33mcommit 1fef8569a5f42a3f72112474f321d2733002ae2e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 5 10:10:44 2017 +0200

    stream: minor output cleanup

[33mcommit f702e6c33d2200bc6b06ac5f41d90d93a055bb25[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 7 22:00:21 2017 +0200

    flow-hash: optimize to avoid branch misses
    
    Profiling showed a lot of branch misses in flow hashing. Restructure
    code to avoid branching.

[33mcommit c8ac479f90947e7b99d88e43669d4287a6019d83[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon May 8 13:46:00 2017 -0600

    dns: accept gaps in TCP DNS
    
    On gap notification a flag is set, on the next call the input
    data is reprobed to make sure it can be processed.

[33mcommit c862bbdc4b3a5ce1287ab0bc6d35c94a0a8e5756[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon May 8 13:43:42 2017 -0600

    app-layer: notify parsers of gaps if enabled
    
    A parser can now set a flag that will tell the application
    layer that it is capable of handling gaps. If enabled, and a
    gap occurs, the app-layer needs to be prepared to accept
    input that is NULL with a length, where the length is the
    number of bytes lost. It is up to the app-layer to
    determine if it can sync up with the input data again.

[33mcommit dfff228f75d8b657cb75044b421c35a5a5937f38[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 1 15:20:17 2017 +0200

    stream/async: more liberal RST acceptance

[33mcommit 5ea1d3bd53befc7ebb0566aa17d28ff17d02f602[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 30 11:26:38 2017 +0200

    stream/async: improvements for IPS
    
    Initialize midstream with async if enabled. Unset async on seeing
    bidirectional traffic.
    
    If only async-oneside is enabled, set ASYNC flag on session creation
    when receiving a SYN packet.
    
    Let last_ack stay in sync with next_seq so that various checks work
    better.

[33mcommit b767f1d3062413f138c8483ef96315bad20f6f7f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 2 17:43:22 2017 +0200

    output/streaming: fixes and redo tcp logging
    
    Fix HTTP body logging.
    
    Redo TCP data logging based on the streaming API.

[33mcommit f4c4ef12c025b0107ec4d0de4705608b0757412c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 2 17:15:37 2017 +0200

    stream: introduce optional 'log' progress tracker
    
    For logging streaming TCP data so far the individual segments where
    used. However since the last big stream changes, the segments are
    no longer the proper place for this. Segments can now have overlaps
    etc.
    
    This patch introduces a new tracker. Next to the existing 'app' and
    'raw' trackers, the new tracker is 'log'. When the TCP logging is
    used, a flag in the config is set and the log tracker is used to
    determine how much of the stream window can be moved.

[33mcommit 5b1d8c7e94ef613107870d4d9d9cdde76d4c3438[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 2 10:01:47 2017 +0200

    streaming/lua: add direction indication to streamer
    
    Call SCStreamingBuffer as follows:
    
        data, sb_open, sb_close, sb_ts, sb_tc = SCStreamingBuffer()
    
    sb_ts and sb_tc are bools indicating the direction of the data.

[33mcommit 35edc5264d62d20186c435826c224fbd674a4dc9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 1 23:49:28 2017 +0200

    luajit: cleanup states before return to pool

[33mcommit 888ed9db0d1f79930991662adc92b1f13e9c5b76[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 1 23:16:39 2017 +0200

    streaming: small code cleanup

[33mcommit 30a8b2def0b54c6bfcb179f704dd9811dd06492e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 1 23:15:43 2017 +0200

    lua/streaming: fix http body logging

[33mcommit 0f4a9d740e044cfb7bea2d005a9753fc6d6fa210[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 1 15:26:55 2017 +0200

    flow-worker: improve no-flow case

[33mcommit 922a27ed977ec1921a8effe9123b4d48d92949cd[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Apr 28 14:55:14 2017 -0600

    detect-dns-query: use unit test macros

[33mcommit a636d96b150fc09ebce198424c58a7fd0761a5e7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 22 22:38:52 2017 +0200

    detect/file: cleanups
    
    TX id is enfored in the engine, so the keywords don't need to.
    
    Unify detect file engines.

[33mcommit 2aad2d605d62d8babdff666dddfc4318693ed3d0[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Wed May 31 23:15:41 2017 +0200

    rules: add missing classtypes for event.rules

[33mcommit 9492a43060749a3b5701d59160785b12ec587015[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 31 13:33:27 2017 +0200

    output-tx: small cleanups and scan-build suppression

[33mcommit bb10bd7fca2c6cd4b92a8b091247d6fe7e3fc443[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed May 31 06:04:07 2017 -0600

    profiling: fix const compiler warnings

[33mcommit 43b0bc8c8e343aadad2b8c4bd96fe74b8a5fa3df[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 24 21:30:48 2017 +0200

    unix socket: improve runmode handling
    
    Improve output of unix mode in --list-runmodes
    
    Honor the runmode commandline setting. Supported are 'single'
    and 'autofp', with the latter still the default.

[33mcommit 75edfcc2cdda33f1f866b83ceead24f2f99a885b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 31 11:28:50 2017 +0200

    unix-socket: fix minor memleak

[33mcommit 1655a676546cbbf699c567811c904c3f3debd3e3[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri May 19 11:34:38 2017 +0200

    log-tlsstore: fix error handling
    
    In case of realloc error, the length of the encoding buffer was not
    reset and this could result in trying to write to NULL pointer.

[33mcommit bf1a8d08daba098e1350bf4bd084e5fdde953192[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Tue May 30 22:46:47 2017 +0200

    doc: rephrase nocase placement explanation

[33mcommit 41e6c6dc368ca0dbb583e634b256bf14cc3799db[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 31 10:19:49 2017 +0200

    flow: enforce 51 bits id globally

[33mcommit 71c6df165525e246c0123c7d52ceaa1f97a0e8f6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 19 20:40:05 2017 +0200

    lua: add SCFlowId for getting the flow id

[33mcommit 8127730f0095d42fe353a6ab714f86f2e8dbfdf6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 16 19:00:32 2017 +0200

    bug 2113: fix live modes

[33mcommit c7ddbbc586c7966c2b268113a78f4007ffd2aa56[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue May 9 17:40:56 2017 -0600

    dns: fix log filtering
    
    Previously only a subset of the records could be selected
    in custom. Now allow any to be selected.

[33mcommit 4217c6839addff0ac6e84e2e3900363948ffce7f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 8 19:46:33 2017 +0200

    stream: single GAP check
    
    Move all GAP checks into CheckGap. Remove seg_list based check.
    Also remove seg_list == NULL check to make sure the Gap check is
    done on an empty list as well.
    
    Improve next_seq < last_ack check, but add data beyond gap check.

[33mcommit 39183f7a8eb60cdbe03ddfffbad30ba0eb8b3fcd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 10 10:24:57 2017 +0200

    doc: fix doc links for http keywords

[33mcommit 4697330b7372d0bc86b133d6f192ea276e1c899f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 10 09:55:46 2017 +0200

    doc: flowints formatting cleanup

[33mcommit 0af562d4c8c3903a1688e505ebbb37bce8ecc5b6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 10 09:04:17 2017 +0200

    doc: move parts out of snort difference doc
    
    Move generic keyword descriptions to the keyword documentation.

[33mcommit a8d0ae460c4bce9c3f9bd7929d99a0b98d43690d[m
Author: David Wharton <dwharton@secureworks.com>
Date:   Fri Mar 3 15:51:54 2017 -0500

    doc: removing (replaced) snort-compatibility.rst
    
    snort-compatibility.rst replaced by differences-from-snort.rst

[33mcommit 8a53d49e81618dd61355cc9af606c00beb958752[m
Author: David Wharton <dwharton@secureworks.com>
Date:   Fri Mar 3 15:49:27 2017 -0500

    doc: replacing snort-compatibility link
    
    The snort-compatibility.rst document is being replaced by
    differences-from-snort.rst. This commit updates the link.

[33mcommit 6bc7c64794c376c47c225dd8647256854d05175a[m
Author: David Wharton <dwharton@secureworks.com>
Date:   Fri Mar 3 15:43:01 2017 -0500

    doc: overhaul of the snort-compatibility document
    
    This is intended to replace the existing 'snort-compatibility.rst'
    document.
    Based on "The Suricata Rule Writing Guide for The Snort Expert"
    2016 SuriCon talk.

[33mcommit c513896786bbe2a4b9bbb8b4cd3cf5a10bc6c8f1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 16 09:39:02 2017 +0200

    bug 2113: unix-socket start up race

[33mcommit 5b56d324c4e75587c3f79589612733af913a4b6c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat May 13 01:10:20 2017 +0200

    app-layer: optimize many-tx case

[33mcommit 4459b8878277c8f8b7a67485d010fb0cb47435d2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 11 21:43:30 2017 +0100

    output: tx logging optimizations

[33mcommit 5c01b409312791caa56554e6eb9f0d5d29531700[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 11 19:08:58 2017 +0100

    tests: update tests for app-layer changes

[33mcommit 3148ff34b6d76970d1770d819442d9a259b68d06[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 11 13:02:53 2017 +0100

    app-layer API optimizations and cleanups

[33mcommit cd97fa80f19b58234766963569c414601901f4af[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun May 14 10:00:35 2017 +0200

    file: fix pruning for parallel files
    
    Allow pruning of random files, not just list head.

[33mcommit afedd5c6df608c5bbc930e0433b4f99706f9786e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 12 13:00:27 2017 +0200

    file: fix storing parallel files
    
    When looping available files 'flags' misuse would lead to all files
    being closed after the first close.
    
    This patch separates per file and per call flags.

[33mcommit ae99e08396fcc8e856783a978bac4b3afa353c93[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 6 09:46:08 2017 +0100

    file: update loops to account for parallel files

[33mcommit c4c93872f8d0ad9a50594ac25d408e08524020f0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 6 09:41:17 2017 +0100

    file: introduce per file 'track id'
    
    Some protocols transfer multiple files in parallel. To support this add
    a 'track id' to the API. This track id is set by the protocol parser. It
    will use this id to indicate what file in the FileContainer it wants to
    act on.

[33mcommit 1062a9213b8702fcf829b7347d9e80544e27bfc2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Feb 5 22:57:00 2017 +0100

    file-store: small cleanup

[33mcommit 944ab48b203fe37d47a9e8303da03251f6788e5e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Feb 5 22:01:59 2017 +0100

    file: clarify file store id name

[33mcommit f18c976a8ed13e3d193baad720762f42ac89b6f7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 5 15:24:45 2017 +0200

    flow: counters for total number of flows
    
    flow.tcp
    flow.udp
    flow.icmpv4
    flow.icmpv6

[33mcommit ac7cf48a98989661b35ff7c1e7681b657dce3d74[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed May 3 08:55:38 2017 -0600

    dnp3: in template, include files own headers
    
    To deal with -Wmissing-prototypes as added in
    ab1200fbd7fd4d3e0fe097fab3b3bcfefaba7e2e
    
    Note: Change was already applied to source files, this just
    updates the generation.

[33mcommit 312ad9e3ad354519105469af22b023d033e6a582[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 8 14:47:58 2017 +0200

    pfring: compiler warning fixes

[33mcommit f6e3755b5c43c81e65a5b79e924ec28872be494e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 5 11:22:44 2017 +0200

    lua: extend SCFlowAppLayerProto
    
    Change SCFlowAppLayerProto to return 5 values:
    <alproto> <alproto_ts> <alproto_tc> <alproto_orig> <alproto_expect>:
    
    alproto: detected protocol
    alproto_ts: detected protocol in toserver direction
    alproto_tc: detected protocol in toclient direction
    alproto_orig: pre-change/upgrade protocol
    alproto_expected: expected protocol in change/upgrade
    
    Orig and expect are used when changing and upgrading protocols. In a
    SMTP STARTTLS case, orig would normally be set to "smtp" and expect
    to "tls".

[33mcommit 9c071d1724797466853da1d8f27481e9dd42a2c4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 5 10:54:06 2017 +0200

    eve.flow: log original and expected app_protocols
    
    Log protocols if they are available.

[33mcommit 88177694fdf74cd577710f90ac687be8289b1230[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 8 13:26:13 2017 +0200

    nfq: don't try to verdict detect/log flush pkts

[33mcommit d9908216d8d5a9c8795dc27225d2e1749f36fecc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 17 11:44:27 2017 +0100

    connect/starttls: handle detection corner cases
    
    When switching protocol from http to tls the following corner case
    was observed:
    
     pkt 6, TC "200 connection established"
     pkt 7, TS acks pkt 6 + adds "client hello"
     pkt 8 TC, acks pkt 7
     pkt 8 is where normally the detect on the 200 connection established
           would run however before detection runs the app-layer is called
           and it resets the state
    
    So the issue is missed detection on the last data in the original
    protocol before the switch.
    
    Another case was:
    
    TS ->    STARTTLS
    TC ->    Ack "STARTTLS data"
             220
    TS ->    Ack "220 data"
             Client Hello
    
    In IDS mode, this made a rule that wanted to look at content:"STARTTLS"
    in combination with the protocol SMTP 'alert smtp ... content:"STARTTLS";'
    impossible. By the time the content would match, the protocol was already
    switched.
    
    This patch fixes this case by creating a 'Detect/Log Flush' packet in
    both directions. This will force final inspection and logging of the
    pre-upgrade protocol (SMTP in this example) before doing the final
    switch.

[33mcommit 6f42ae91c7f3a92788801e024362d061a90ecaeb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 17 11:41:02 2017 +0100

    app-layer: protocol change API
    
    Add API calls to upgrade to TLS or to request a protocol change
    without a specific protocol expectation.
    
    If the HTTP CONNECT session includes a port on the url, use that to
    look up the probing parser during protocol detection. Solves a
    missed detection of a SSLv2 session that upgrades to TLSv1. SSLv2
    relies on the probing parser which is limited to certain ports.
    
    In case of STARTTLS in SMTP and FTP, the port is hardcoded to 443.
    
    A new event APPLAYER_UNEXPECTED_PROTOCOL is set if there was a
    mismatch.

[33mcommit 72c757433aab3bab836eb41bc8dc5a2cb3d04116[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed Feb 15 07:06:15 2017 +0100

    app-layer: add decoder event for missing TLS after STARTTLS

[33mcommit 11b9e6fdab8a273d262d4cf68f5b85528feb20d9[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed Feb 1 12:56:39 2017 +0100

    app-layer-ftp: add STARTTLS support

[33mcommit 8125f78f5f40a5969c681a55f84bf1ee09a9ea65[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed Feb 1 10:24:52 2017 +0100

    app-layer-ftp: detect FTP alproto when using AUTH TLS
    
    Try to detect FTP using the patterns '220 (' and 'FEAT', since 'USER '
    and 'PASS ' are not sent in cleartext when using AUTH TLS.

[33mcommit 74aa65073b01d72e027e6abe696b3298c3f7ac2b[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Jan 31 15:02:21 2017 +0100

    output-json-tls: log 'from_proto' field
    
    Log the original application level protocol when protocol have been
    changed because of STARTTLS, HTTP CONNECT or similar.

[33mcommit e8800b1893b440b2fe56736f45e0d5222ea4f60b[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Jan 31 14:58:20 2017 +0100

    app-layer-smtp: add STARTTLS support

[33mcommit b6c2b7052b189a9076ab4d119201a6cff39b5091[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Jan 31 14:45:25 2017 +0100

    app-layer-htp: add HTTP CONNECT support

[33mcommit 893f868b4282e8eaeda35d81b8e0f40ec2f374e5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 17 11:43:02 2017 +0100

    proto-detect: add debug output

[33mcommit b8d13f354b0b17fbd6fff5db5b1b81d3e10c4dea[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Jan 31 14:34:30 2017 +0100

    app-layer: support changing flow alproto
    
    Support changing the application level protocol for a flow. This is
    needed by STARTTLS and HTTP CONNECT to switch from the original
    alproto to tls.
    
    This commit allows a flag to be set 'FLOW_CHANGE_PROTO', which
    triggers a new protocol detection on the next packet for a flow.

[33mcommit 9b1f74409bcb88e3801aa26bb1520bb728d49d0c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat May 6 10:49:43 2017 +0200

    magic: fix compile warnings

[33mcommit 3ff5dc3653fef0d0aac0b312c53e47766819dc55[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 2 17:28:15 2017 +0200

    nfq: remove obsolete and broken netfilterforwin support

[33mcommit ea99099c646cca2a9519d55207af767228872ecd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 2 17:22:24 2017 +0200

    isdataat: add test for leading space

[33mcommit 6142e88ed55884c1988c9f6b73900caa9c8b6354[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 2 14:48:21 2017 +0200

    nflog: compiler warning fix

[33mcommit ab1200fbd7fd4d3e0fe097fab3b3bcfefaba7e2e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 2 09:11:16 2017 +0200

    compiler: more strict compiler warnings
    
    Set flags by default:
    
        -Wmissing-prototypes
        -Wmissing-declarations
        -Wstrict-prototypes
        -Wwrite-strings
        -Wcast-align
        -Wbad-function-cast
        -Wformat-security
        -Wno-format-nonliteral
        -Wmissing-format-attribute
        -funsigned-char
    
    Fix minor compiler warnings for these new flags on gcc and clang.

[33mcommit 342059835fe7ec0079ac91a152a0abab516b184f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 1 20:34:07 2017 +0200

    detect-parse: improve common parser
    
    In preparation of turning input to keyword parsers to const add
    options to the common rule parser to enforce and strip double
    quotes and parse negation support.
    
    At registration, the keyword can register 3 extra flags:
    
        SIGMATCH_QUOTES_MANDATORY: value to keyword must be quoted
    
        SIGMATCH_QUOTES_OPTIONAL: value to keyword may be quoted
    
        SIGMATCH_HANDLE_NEGATION: leading ! is parsed
    
    In all cases leading spaces are removed. If the 'quote' flags are
    set, the quotes are removed from the input as well.

[33mcommit 842dfbc3f86cee39d19ae394d39f87be2e1eea94[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 6 16:41:05 2017 +0100

    detect: enforce isdataat:!1,relative earlier
    
    The expression 'isdataat:!1,relative' is used to make sure a match
    is at the end of a buffer quite often. This patch optimizes this case
    for 'content' followed by the expression. It enforces it by setting
    and 'ends with' flag on the content and then taking that flag into
    account while doing the pattern match.

[33mcommit c0275c2b29d405e60782da7c1cc975d854a4be64[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 6 11:17:12 2017 +0100

    detect: more content inspection tests

[33mcommit 7eda6beade1b9227a5ad36c50610858c67155530[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 4 13:40:39 2017 +0100

    detect: don't rescan when just distance is used
    
    Content inspection optimization: when just distance is used without
    within we don't need to search recursively.
    
    E.g. content:"a"; content:"b"; distance:1; will scan the buffer for
    'a' and when it finds 'a' it will scan the remainder for 'b'. Until
    now, the failure to find 'b' would lead to looking for the next 'a'
    and then for 'b' after that. However, we already inspected the
    entire buffer for 'b', so we know this will fail.

[33mcommit 84b97ca15519ebffded1a475d9eda058620b1931[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 4 10:15:39 2017 +0100

    detect: content-inspection tests
    
    Add tests for the content inspection engine that count the number
    of steps it takes to eval a rule.

[33mcommit b9579fbe7dd408200ef03cbe20efddb624b73885[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 3 15:38:43 2017 +0100

    detect: avoid needless recursive scanning
    
    Don't recursively inspect a detect list if the recursion
    doesn't increase chance of success.

[33mcommit bc7c01ecbc816618aa8a4a3be133d16a2728fc07[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 4 13:05:37 2017 +0100

    detect: use BIT_U32 macro for content flags

[33mcommit c65a119cc043075851af26fbb2866585e8b66c80[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 1 10:38:22 2017 +0200

    debug: suppress notice message

[33mcommit 276125c1ef322363b49ae22f8b4b6a9303825fbe[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 28 09:23:09 2017 +0200

    cleanup: remove unused ringbuffer code

[33mcommit cda6e0291f561fac715c470a195ad01026b17918[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 28 09:44:37 2017 +0200

    cleanup: remove libpcap < 1 support

[33mcommit 119115d3b6d10fcd1b1db5cd02f92bec033baa54[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 28 09:50:59 2017 +0200

    configure: remove CentOS5 pkg-config fix

[33mcommit 0516b5d7044d3361d4ea2fa16f562bbb0f946c23[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 28 09:48:09 2017 +0200

    cleanup: from AS_VERSION_COMPARE CentOS5 workaround

[33mcommit d31cb083e910d779279e47ffbb32d5da096220fe[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 19 15:57:31 2017 +0200

    detect: update tests that mix state/stream inspect

[33mcommit eb5857b68aecbe27beee4703b7a39c8aece734b3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 19 15:57:08 2017 +0200

    unittests: add/improve helpers for stream/flow

[33mcommit 15dcac92f267a013dbaecb82bab6fa98b7320b37[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 20 11:48:06 2017 +0200

    http_header: enable trailer prefilter engines
    
    Now that the mpm engines run only for the proper 'progress'
    value, the trailing headers need their own engine registration.

[33mcommit cf7f819888afd1cefa9a4965b81c1a1f2837123c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 18 09:38:22 2017 +0200

    state: check progress before calling engine
    
    Make sure progress of an inspect engine is available.

[33mcommit 1bbf5553186c7d38b678f93db24773bd14ff84cf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 11 15:24:49 2017 +0200

    detect: improve stateful detection
    
    Now that MPM runs when the TX progress is right, stateful detection
    operates differently.
    
    Changes:
    
    1. raw stream inspection is now also an inspect engine
    
       Since this engine doesn't take the transactions into account, it
       could potentially run multiple times on the same data. To avoid
       this, basic result caching is in place.
    
    2. the engines are sorted by progress, but the 'MPM' engine is first
       even if the progress is higher
    
       If MPM flags a rule to be inspected, the inspect engine for that
       buffer runs first. If this step fails, the rule is no longer
       evaluated. No state is stored.

[33mcommit d1b7a8390581f0ed7a4f221e6a2af86a6df954a5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 11 18:15:16 2017 +0200

    detect: change mask logic
    
    Previously the MPM/Prefilter engines would suggest the same rule
    candidates multiple times.
    
    For example, while processing the request body, the http headers
    would be inspected by MPM multiple times.
    
    The mask check was one way to quickly decide which rules could be
    skipped.
    
    Now that the MPM engines normally return a rule just once, this
    mask check no longer makes sense. If the rule meets the ip/port/
    direction based conditions, it needs to be evaluated if the MPM
    said so. Even if not all conditions are yet true.
    
    WIP disable mask as it no longer makes sense
    
    WIP redo mask match

[33mcommit a0fad6bb7fd57080f35ac500cf623cc21bcb2f92[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 10 20:42:25 2017 +0200

    mpm: run engines as few times as possible
    
    In various scenarios buffers would be checked my MPM more than
    once. This was because the buffers would be inspected for a
    certain progress value or higher.
    
    For example, for each packet in a file upload, the engine would
    not just rerun the 'http client body' MPM on the new data, it
    would also rerun the method, uri, headers, cookie, etc MPMs.
    
    This was obviously inefficent, so this patch changes the logic.
    
    The patch only runs the MPM engines when the progress is exactly
    the intended progress. If the progress is beyond the desired
    value, it is run once. A tracker is added to the app layer API,
    where the completed MPMs are tracked.
    
    Implemented for HTTP, TLS and SSH.

[33mcommit d304be5bc3fff43ef27eddec56569ab6b512689a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 17 10:59:32 2017 +0200

    detect: register progress in inspect engines
    
    Register required progress so we can stop inspecting as soon
    as the progress isn't far enough yet.

[33mcommit bc1698cfbe347ad0f5c714c96756b3dd1f9e8922[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 18 09:38:48 2017 +0200

    detect-state: don't use casts to uint

[33mcommit 53b21e5ee16a9478b8952df4bfee4f042f5c20b4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 20 16:15:51 2017 +0200

    http_uri: unittest cleanup

[33mcommit 8d2f3b46e6e6888ba493292fe3e594cf997c0569[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 20 13:03:42 2017 +0200

    http_header: add another trailer test

[33mcommit 8d18be1fdb38f6988603b03217ffd26f2eaa6e7f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 20 11:30:01 2017 +0200

    http_header (trailer) test cleanup

[33mcommit 1c46af477e948d185f32cd7da5fd46eb3b7e9860[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 20 16:07:01 2017 +0200

    ssh: fix test

[33mcommit a744d00f459508dbeecae8eb43c8cce0bc8b50c8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 20 16:04:34 2017 +0200

    ssh: fix banner state setting

[33mcommit e3bd5f371dc77a8d8ab9a2d29a8e2ad996be1aaf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 17 09:53:50 2017 +0200

    detect: more detailed state profiling

[33mcommit 6d562f3b5ee71dc782dd28af1ebe25aaf05fffa3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 12 14:31:25 2017 +0200

    app-layer: set stream-depth after stream init

[33mcommit 358e41b935a7921c829abaf230e0e4c08eec799c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 11 09:58:40 2017 +0200

    detect: clean up stateful detect

[33mcommit 9f4884a1323580f97f145fd69817e39714c0d9d4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 19 15:47:09 2017 +0200

    stream: reduce scope of new ssn func

[33mcommit 5c31f22e09f241d1ca16722a07318295620d985d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 4 16:16:17 2017 +0200

    autotools: add src/tests to extra dist

[33mcommit 5a210984d50c2630ea8e64e9efb8eb763e01782d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 8 23:28:51 2017 +0100

    stream: move inline tests

[33mcommit bea2b2c00cde2130f104edfbbede0a03187b4cd9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 8 23:20:44 2017 +0100

    stream: list management cleanups

[33mcommit 34f7cb2b553bd06bb04f383c44f3ba055c917124[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 8 12:52:56 2017 +0100

    stream: debug improvements

[33mcommit aba9cd7d0285f63874b6e66f314fc99ab26555d5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 8 12:52:34 2017 +0100

    stream inspection: add debug counters

[33mcommit 2b433fab53298e2e4d652ecc991863cefd1a9aef[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 7 22:41:23 2017 +0100

    stream: pack config struct

[33mcommit 606f515fe923c6dfd2ff8365898f782f5b2a111f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 3 09:54:56 2017 +0100

    stream: enforce gap earlier in app reassembly

[33mcommit 314516ffe23fedf2cb05f9e8ed53038fd7a687af[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 3 09:54:16 2017 +0100

    stream: don't call app reassembly if disable flag set

[33mcommit 89af036336a0443f3793e2dbd7a824dbde4b8a15[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 3 09:53:54 2017 +0100

    stream: app-layer micro optimizations

[33mcommit 2f77302eeb39503881b1588052e08f02cd3b0b21[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 3 00:12:38 2017 +0100

    stream: raw reassembly explicit disable raw handling

[33mcommit d6d7f65050ae081aa1207fda2d9d62a83f82181e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 3 00:12:12 2017 +0100

    stream: mpm inspect micro optimizations

[33mcommit 7bddd0e168ef6efef7caec5874c1b179295ece61[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 1 16:51:22 2017 +0100

    stream: improve --disable-detection GAP handling

[33mcommit 6fefe7019629f62e97d2fa71a02318c4633ad234[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 1 15:34:14 2017 +0100

    stream: remove unused StreamTcpGetStreamSize function

[33mcommit 422095668e94cee289825ec9cfbf9cb05bc5008a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 1 14:50:20 2017 +0100

    stream: optimize session pruning

[33mcommit 79389558ac2c7b3386d514b5f2601d5159f90d82[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 1 14:04:29 2017 +0100

    doc: update for stream changes

[33mcommit a995734b3a394b3b46c3810b595c22b64d9cb7ed[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 1 11:24:13 2017 +0100

    yaml: sync with new stream engine

[33mcommit ee00a6f2ec9d91d343a15f7de487dd58a03edbd4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 28 23:13:00 2017 +0100

    stream: validate code

[33mcommit e1aba7d6c2525b720fd8bdc9c189ef328aaf2113[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 27 23:28:46 2017 +0100

    detect: only do flow dependent cleanup if a flow is present

[33mcommit 61c35d3c3971f1f2f236fc8e942944706b1d2815[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 27 23:26:37 2017 +0100

    detect: make SigMatchSignatures void
    
    None of the callers cared for it's retval, so get rid of it.

[33mcommit f49150ddb9abc70f210bd183027034855050d740[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 27 23:14:39 2017 +0100

    detect: turn single detect flag into bool

[33mcommit 6f76cbb870495507f02d91bde4603b45c691367b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 27 23:12:09 2017 +0100

    detect: remove unused detect flag

[33mcommit 04b24cf24e670df92f3d24501aa90e79fc258e30[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 28 12:44:02 2017 +0100

    stream: improve needs reassembly code

[33mcommit 55e19bfb89d9a5d55367a4535c470fd25a7a407a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 28 11:23:27 2017 +0100

    stream: more aggressive StreamReassembleRawHasDataReady

[33mcommit bf3f3ce6b27ee4210e09e93072c119d4caf71725[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Feb 26 14:19:43 2017 +0100

    app-layer: change logic of setting 'no reassembly'
    
    Instead of killing all reassembly instantly do things slightly more
    gracefully:
    1. disable app-layer reassembly immediately
    2. flag raw reassembly not to accept new data
    
    This will allow the current data to be inspected still.
    
    After detect as run the raw reassembly will be fully disabled and
    thus all reassembly will be as well.

[33mcommit de4f4e23a08498004f8b1474b5d2e80e7d3df7d7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Feb 26 14:06:05 2017 +0100

    stream: new depth / disable raw logic
    
    Depth reach sets NOREASSEMBLY after detect.
    
    No new raw sets NORAW after detect.

[33mcommit 7c56c9ada0a9db67c6ca0fc8736a1cc46cbf52d5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 25 13:33:40 2017 +0100

    stream: allow raw reassembly catch up
    
    If raw reassembly falls behind, for example because no raw mpm is
    active, then we need to sync up to the app progress if that is
    available, or to the generic tcp tracking otherwise.

[33mcommit 89d0267df2ea50ed23432795ad6eee43ee08aad7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 25 13:33:15 2017 +0100

    stream: detect stream GAP also during reassembly

[33mcommit 0c1ec17c923d852c90cf495d4ed55135aad26efa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 24 21:05:43 2017 +0100

    debug-validation: add stream checks

[33mcommit 69519bda48f24b84b7d621f759d0d3045660225b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 23 13:09:46 2017 +0100

    stream: StreamTcpReassembleRawCheckLimit cleanup

[33mcommit b099008b943c1c95cbc1a0db60ea35037609c72a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 22 11:14:02 2017 +0100

    stream: handle no stream scanning case
    
    Now that detect moves the raw progress forward, it's important
    to deal with the case where detect don't consider raw inspection.
    
    If no 'stream' rules are active, disable raw. For this the disable
    raw flag is now per stream.

[33mcommit 0ef46a8fd2a87d31c3f3439451df8a0b4173c3fa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 20 11:04:29 2017 +0100

    stream: raw content inspection inline mode
    
    Implement the inline mode for raw content inspection. Packets
    are leading, and when a packet's payload has been added to the
    stream, the packet is inspected in the context of the stream.
    
    Reassembly will return a buffer with the packet data with older
    data in front of it and after it, if available.

[33mcommit 149e3240602e070d88c833088a5bf045d3b349a3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Feb 19 12:32:23 2017 +0100

    flow/stream: reduce/disable pseudo packet injections
    
    At flow timeout, we no longer need to first run reassembly in
    one dir, then inspection in the other. We can do both in single
    packet now.
    
    Disable pseudo packets when receiving stream end packets. Instead
    call the app-layer parser in the packet direction for stream end
    packets and flow end packets.
    
    These changes in handling of those stream end packets make the
    pseudo packets unnecessary.

[33mcommit 2d223b69cd74f5afbed24c309cb355a4de65ba97[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Feb 19 00:54:45 2017 +0100

    stream: set 'trigger raw' per direction

[33mcommit 971ab18b95fad189f863ef7f201c458e43540139[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 17 17:59:43 2017 +0100

    detect / stream: new 'raw' stream inspection
    
    Remove the 'StreamMsg' approach from the engine. In this approach the
    stream engine would create a list of chunks for inspection by the
    detection engine. There were several issues:
    
    1. the messages had a fixed size, so blocks of data bigger than ~4k
       would be cut into multiple messages
    
    2. it lead to lots of data copying and unnecessary memory use
    
    3. the StreamMsgs used a central pool
    
    The Stream engine switched over to the streaming buffer API, which
    means that the reassembled data is always available. This made the
    StreamMsg approach even clunkier.
    
    The new approach exposes the streaming buffer data to the detection
    engine. It has to pay attention to an important issue though: packet
    loss. The data may have gaps. The streaming buffer API tracks the
    blocks of continuous data.
    
    To access the data for inspection a callback approach is used. The
    'StreamReassembleRaw' function is called with a callback and data.
    This way it runs the MPM and individual rule inspection code. At
    the end of each detection run the stream engine is notified that it
    can move forward it's 'progress'.

[33mcommit 564c0bd2c1100c1bded16f62c44a1f4059a342e9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 8 13:26:54 2017 +0100

    stream: constify StreamTcpReassembleRawCheckLimit

[33mcommit 0bff0de516dd029e0baf304b7600a8aeae5b1c25[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat May 7 17:24:32 2016 +0200

    unittests: fail if TCP memory still in use
    
    abort() so test can be analyzed.

[33mcommit 807312320f46fb1c5d7c86e927063d2cc223598d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 6 19:45:30 2016 +0200

    stream-tcp: implement thread pool for segments
    
    Config option:
    
    stream:
      reassembly:
        segment-prealloc: 2048

[33mcommit bd821f57f2c147e078126d83bd4998c971d3fbee[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 6 17:12:42 2016 +0200

    stream: implement memory handling functions

[33mcommit c2a5b9c393168272a6759b94ef9fc111dd0af919[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 28 17:21:28 2016 +0200

    stream: use static instead of dynamic streaming buffer structure

[33mcommit dd2b8bb2986b78892282a4c36ba4025966f7ca16[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 28 17:20:11 2016 +0200

    stream: test cleanups and fixes

[33mcommit 8924653cd4cc1f1f8aa51d7ecf1d0f702d83c1b8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 8 12:50:32 2017 +0100

    stream: add insert failure counters

[33mcommit 91f57200c7c4d5f32961aa497ed436163a8f8e41[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 28 11:48:30 2016 +0200

    stream: add stream.reassembly.check-overlap-different-data option

[33mcommit f02dc377efd7f5b1aa8a961f18cbe0ef49bc395e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 28 10:53:49 2016 +0200

    stream: add tcp.overlap and tcp.overlap_diff_data counters

[33mcommit 8c36e52d9315e120f41e10439aad03cc5dd41f40[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 25 10:20:51 2017 +0100

    stream: improve no app and no raw case

[33mcommit 5ee36a0c8bb205ae5d8f169af875fbb5ca0db80e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 28 09:53:24 2016 +0200

    stream: make raw_progress relative to STREAM_BASE_OFFSET

[33mcommit fa2a832022829f64424418b9305c8123b5468c8e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 28 08:44:10 2016 +0200

    stream: make app_progress relative to STREAM_BASE_OFFSET

[33mcommit 187e2381c89f887a7a16f24d0c28204dcb55f6a0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 27 22:13:27 2016 +0200

    stream: reduce space used for progress tracking
    
    Instead of the explicit base_seq_offset, use a macro instead. The
    macro points to the stream buffer offset. The two were always
    in sync.

[33mcommit 9bd11bcda5079fbb34727605c2f23ce605ebbbce[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 27 21:47:10 2016 +0200

    stream: small cleanups

[33mcommit b3e9d397719a972d16b4a4eb2c6fa4a456a4d281[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 27 21:37:28 2016 +0200

    stream: remove unused zero copy setting

[33mcommit bbb0df14d2697960c531ea400737665438bee081[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 8 23:24:59 2017 +0100

    stream: safety check in overlap handling

[33mcommit 8c9f521707715110c8ffe9fe0c82102a49314ec0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 22 10:26:04 2015 +0100

    tcp: streaming implementation
    
    Make stream engine use the streaming buffer API for it's data storage.
    
    This means that the data is stored in a single reassembled sliding
    buffer. The subleties of the reassembly, e.g. overlap handling, are
    taken care of at segment insertion.
    
    The TcpSegments now have a StreamingBufferSegment that contains an
    offset and a length. Using this the segment data can be retrieved
    per segment.
    
    Redo segment insertion. The insertion code is moved to it's own file
    and is simplified a lot.
    
    A major difference with the previous implementation is that the segment
    list now contains overlapping segments if the traffic is that way.
    Previously there could be more and smaller segments in the memory list
    than what was seen on the wire.
    
    Due to the matching of in memory segments and on the wire segments,
    the overlap with different data detection (potential mots attacks)
    is much more accurate.
    
    Raw and App reassembly progress is no longer tracked per segment using
    flags, but there is now a progress tracker in the TcpStream for each.
    
    When pruning we make sure we don't slide beyond in-use segments. When
    both app-layer and raw inspection are beyond the start of the segment
    list, the segments might not be freed even though the data in the
    streaming buffer is already gone. This is caused by the 'in-use' status
    that the segments can implicitly have. This patch accounts for that
    when calculating the 'left_edge' of the streaming window.
    
    Raw reassembly still sets up 'StreamMsg' objects for content
    inspection. They are set up based on either the full StreamingBuffer,
    or based on the StreamingBufferBlocks if there are gaps in the data.
    
    Reworked 'stream needs work' logic. When a flow times out the flow
    engine checks whether a TCP flow still needs work. The
    StreamNeedsReassembly function is used to test if a stream still has
    unreassembled segments or uninspected stream chunks.
    
    This patch updates the function to consider the app and/or raw
    progress. It also cleans the function up and adds more meaningful
    debug messages. Finally it makes it non-inline.
    
    Unittests have been overhauled, and partly moved into their own files.
    
    Remove lots of dead code.

[33mcommit 3fa2e8689cb86d7d6aae94aead2da7c3ffbd3194[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 6 19:45:11 2016 +0200

    streaming: remove BUG_ON and other improvements
    
    Can be triggered by memory limits.

[33mcommit d789dc7e6de057d756b992c562b7f1583cc70c05[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 19 22:31:22 2016 -0500

    streaming: add blocklist
    
    Add list of 'blocks'. This list contains offsets and lengths to
    continuous data blocks. This is useful for TCP tracking where we
    can have data gaps.
    
    The blocks don't contain any data themselves, instead they contain
    lenght and offsets. This way no extra copying is needed.
    
    On inserting new data, existing blocks are expanded instead of
    having multiple neighbouring blocks.

[33mcommit 9e1470d81c79677b689a0fc4b570d20232953dad[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 17 10:08:00 2016 +0100

    stream-tcp: StreamTcpUTAddPayload unittest helper

[33mcommit 3411697106296da912601005ff8cb963f6cdea66[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 3 09:08:23 2017 +0100

    profile: account flow-worker tcp-prune step

[33mcommit 245a89b7e74cfa4d60ab4f93d9708dd1af7d803f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 5 10:33:23 2017 +0200

    doc: http keywords update

[33mcommit 595f6d1f266650f9f7a16e740b90a08c6d7a79cf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 1 23:58:51 2017 +0200

    detect: implement http_content_len sticky buffer
    
    This implements inspection of the Content-Length buffer as a content
    sticky buffer.

[33mcommit d96cbddbe45a01cc1a0c534551c46735cf2b9d05[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 1 23:28:12 2017 +0200

    detect: implement http_content_type sticky buffer

[33mcommit 46febef7cd1ceda05b9ab1bf0dbc94e50bc4ce17[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 1 12:38:46 2017 +0200

    detect: implement http_accept_enc sticky buffer
    
    Inspects Accept-Encoding header.

[33mcommit 9d5bbc3af6009697848268b6a6221ffadf037a8f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 1 12:33:49 2017 +0200

    detect: implement http_accept_lang sticky buffer
    
    Inspects Accept-Language header

[33mcommit 1d1176b0d549e7f13e3b873eb6b396e9f845358b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 1 12:23:05 2017 +0200

    detect: implement http_connection sticky buffer

[33mcommit 5714129e32f4dd26a309c08826037a53dd7a84cc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 1 12:13:17 2017 +0200

    detect: implement http referer sticky buffer

[33mcommit 88cfb99910f3b70ea565fcf9635f86afdaf46f1e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 1 11:49:20 2017 +0200

    detect: http_accept sticky buffer + common code
    
    Implement common code to easily add more per HTTP header detection
    keywords.
    
    Implement http_accept sticky buffer. It operates on the HTTP Accept
    header.

[33mcommit 753997310919cc041ac2b4058a7a46037bc2d613[m
Author: Ray Ruvinskiy <ray.ruvinskiy@arcticwolf.com>
Date:   Thu Nov 24 12:16:09 2016 -0500

    tls: logging for session resumption
    
    We assume session resumption has occurred if the Client Hello message
    included a session id, we have not seen the server certificate, but
    we have seen a Change Cipher Spec message from the server.
    
    Previously, these transactions were not logged at all because the
    server cert was never seen.
    
    Ticket: https://redmine.openinfosecfoundation.org/issues/1969

[33mcommit 0dc57c937e3a01dfe3022bd64e4db64caea1a019[m
Author: Ray Ruvinskiy <ray.ruvinskiy@arcticwolf.com>
Date:   Wed Apr 19 11:27:26 2017 -0400

    device: fix warning about NULL device
    
    Fix '[ERRCODE: SC_ERR_INVALID_VALUE(130)] - Name of device should not be null'
    warning on start-up with pfring.
    
    Ticket: https://redmine.openinfosecfoundation.org/issues/2097

[33mcommit 29c8125758133ad99971fa4d8f40ea2b931d8620[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 20 09:32:01 2017 +0200

    redis: use SCCalloc to reduce risk of unitialized vars

[33mcommit a64e5e77c788b4fb05c1d67ed004cc67a725f117[m
Author: fooinha <fooinha@gmail.com>
Date:   Thu Feb 23 22:42:05 2017 +0000

    eve: async mode for redis output
    
    eve: detects libevent for async redis at configure
    eve: moves redis output code to new file - util-log-redis.{c,h}
    eve: redis ECHO and QUIT commands for async mode
    eve: redis output defaults if conf is missing

[33mcommit 36667ab8a1c36dbc55e5f85e7aabe1f861292a25[m
Author: fooinha <fooinha@gmail.com>
Date:   Thu Feb 23 22:42:51 2017 +0000

    doc: async mode for redis eve output
    
    async: true ## if redis replies are read asynchronously

[33mcommit c3b4dd5a7d742ddf0ce051466f96e6fb09b6d4da[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 15 18:58:31 2017 +0200

    qa: add --no-random commandline option

[33mcommit ba612654032bdc496f1613169f4c898a69fd441e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 15 23:34:18 2017 +0200

    qa: add rand/rand_r to banned functions

[33mcommit 535d9e35298299b1815fbf6d6755739259495118[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 15 23:29:48 2017 +0200

    random: convert stream and htp to new call

[33mcommit dd70b3fda07b1beb00bf0a82f743389338a70c2a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 15 23:20:48 2017 +0200

    random: improve random logic
    
    Improve random logic for hash tables.
    
    Implement Windows random API if it is available.

[33mcommit ec964ebf8406220593898aaf01252d26bba0ec17[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 13 16:55:34 2017 +0200

    mingw: don't use uint type as mingw doesn't have it

[33mcommit 8f15e30a58e2f619555f2bd5ab7eaee7b42e88e2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 10 09:39:23 2017 +0200

    common: improve byte order and wordsize detection

[33mcommit a4dce241516badad534c98a1833ec963914c912a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 10 09:38:59 2017 +0200

    core dumps: check for sys/resource.h

[33mcommit 618f351210495a38d5d406e4a966f811942ee46c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Apr 9 21:04:14 2017 +0200

    cleanup: get rid of %llu format specifiers
    
    Use more explicit types instead.

[33mcommit 1223de42089a9747cef084cf7dd13d18c9b2c044[m
Author: psanders240 <pas@napatech.com>
Date:   Thu Mar 16 15:41:16 2017 -0400

    doc: Napatech docs improvement
    
    Fix errors and simplify filters.

[33mcommit e69ce30d87f3504b9ddbf1e0c1ea6fe4c7ed6733[m
Author: Jason Ish <ish@unx.ca>
Date:   Sun Apr 9 22:12:12 2017 -0600

    template script: typo in app-layer setup script
    
    Check for ed was failing, as it was actually looking for edx.

[33mcommit cee5c9fa605a478db1bcd23493f54938ad614bb2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 13 09:58:36 2017 +0200

    pcre: on ppc64 disable only for specific versions
    
    Disable jit only for libpcre 8.39 and 8.40 as those were the buggy
    versions.
    
    Thanks to Zoltán Herczeg.

[33mcommit aca27ff383d74f0eaf78f48d89f88f97f1285dd1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 13 09:25:11 2017 +0200

    doc: expand on bpf

[33mcommit 9ff8882cbdaf4ab2dc9f736fdd8ea56dcbe84fb1[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Mar 15 10:52:57 2017 -0600

    detect: don't consider an empty rule file an error

[33mcommit 8436a892f95efbe1b01e81d657a52d2210a4f955[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Apr 4 22:44:21 2017 -0600

    logging: only do non-blocking writes if live
    
    If running against a pcap there is no reason to drop events,
    a blocking socket is fine here. So only do non-blocking writes
    when running off a live device.

[33mcommit 673549e5cf34188a08d7934b1cafa36f2e3bdeb6[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Apr 4 22:21:37 2017 -0600

    eve: log number of events dropped at exit

[33mcommit 59b98649de2fad5594756983b3a86c940a3575c7[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Feb 23 16:22:42 2017 -0600

    logging: don't block on socket writes
    
    Writing to a unix socket can cause Suricata to block in the
    packet path. This could happen if the read-endpoint of the
    unix socket stays connected, but stops reading, or simply
    can't read fast enough as part of its event processing.
    
    To choose packets over events, do non-blocking socket
    writes and drop the event if the write would block and
    update a dropped counter.

[33mcommit 8b9f84bff2d8bd95030e8d2d4a586a3cd3d2c649[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Feb 14 10:59:41 2017 +0100

    doc: add documentation for date modifiers in eve-log

[33mcommit 37a12fe799252bde8cc37c187126ca6a2bfae018[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Feb 14 10:53:34 2017 +0100

    doc: add documentation for eve-log file rotation

[33mcommit ffbf8cec162c9f6c77663d4df22e17bd5f8b5a01[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Feb 14 10:32:33 2017 +0100

    logging: create log directories when needed
    
    Recursively create new log directories when needed. This makes it
    possible to use date modifiers in the file path to create
    directories based on date, e.g.:
    
      /var/log/suricata/2017/02/14/

[33mcommit 47a5b493d748e899c478ec7f75c4858fee4552ee[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Feb 14 08:41:40 2017 +0100

    output-json: rotate log file based on time
    
    Rotate log file based on time. Support both rotating based on a timer (XXs,
    XXm, XXd, XXw) and rotating based on a absolute time, like each minute,
    hour or day.

[33mcommit db6c80fd8e4232d963553def0451f191a9c81888[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Feb 14 08:29:44 2017 +0100

    logging: support date modifiers in log filenames
    
    Allow log filenames to contain date modifiers, e.g.:
    
      - eve-log:
        filename: eve-%Y-%m-%d-%H:%M:%S.json

[33mcommit bc480fa8c3fe47f3fe1fea182904f2c17beb4fe3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 6 13:05:35 2017 +0200

    pcre: disable jit on powerpc64
    
    It appears that both using gcc and clang something gets misoptimised
    around pcre's jit. So disable jit for now.

[33mcommit 845e18f25ac840955f2bcc71292d33c3f78107dd[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Mar 6 14:38:04 2017 -0600

    defrag: (windows) detect more overlaps

[33mcommit 7922f9be1bb96654a2b3928bc9a7fa2047490a12[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Mar 6 11:23:48 2017 -0600

    defrag: (linux) fix an error in overlapping fragments
    
    If a subsequent fragment has a lower offset than a previous
    one and overlaps, trim off the beginning of the previous
    fragment.
    
    Based on an issue reported privately.

[33mcommit ca92be896eb51634d1165be30de5e7b6aa5ef4ff[m
Author: Jason Ish <ish@unx.ca>
Date:   Sun Mar 5 21:17:47 2017 -0600

    defrag: use new unit test macros
    
    Also reformat unit test functions to Suricata style.

[33mcommit 00cd47b2bf16625346a5681e527cb02a5a752df4[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Mar 29 14:09:32 2017 -0600

    travis: use new container build infrastructure
    
    Migrate to the new Travis container build system. This build system does
    not allow use of sudo, so required packages must be done declaratively
    which required reworking how we install packages that are conditional
    based on the build being done.
    
    Mac builds are still done with sudo=true.

[33mcommit ff30d924db83734e395c946b84289e30f1e03d49[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Apr 4 07:51:19 2017 -0600

    unix-socket: return failure on failure
    
    UnixManagerThreadInit needs to return a failure code if the socket
    fails to initialize to avoid entering the UnixManager loop which
    will continuously fail on the call to bind, as no listening
    socket was setup.
    
    This can occur when the socket fails to initialize due to a
    permissions error and fatal init errors is not on.

[33mcommit 20d4d400518347407a9c8e05cbda42734300cfb0[m
Author: fooinha <fooinha@gmail.com>
Date:   Sat Dec 3 19:26:16 2016 +0000

    log: tls custom format log

[33mcommit af174c82bb127481055e7f84bf661e3b6d186ff6[m
Author: fooinha <fooinha@gmail.com>
Date:   Sat Dec 3 12:22:26 2016 +0000

    log: common custom format output

[33mcommit d5a0eb4b2cbfd5e93796e975be25e6304c7a14db[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 6 08:59:34 2017 +0200

    geoip: fix compiler warning
    
    detect-geoip.c:78:40: error: incompatible pointer types assigning to 'int (*)(ThreadVars *, DetectEngineThreadCtx *, Packet *, const Signature *, const SigMatchCtx *)' from 'int (ThreadVars *, DetectEngineThreadCtx *, Packet *, Signature *, const SigMatchCtx *)' [-Werror,-Wincompatible-pointer-types]
        sigmatch_table[DETECT_GEOIP].Match = DetectGeoipMatch;
                                           ^ ~~~~~~~~~~~~~~~~
    1 error generated.
    
    Bug #2045

[33mcommit b134dfcce71ae6a5ae45bf1ce2e47d024e0d3a7a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 5 15:19:33 2017 -0400

    modbus: fix compiler warnings about alignment
    
    app-layer-modbus.c:1226:39: warning: taking address of packed member 'transactionId' of class or structure 'ModbusHeader_' may result in an unaligned pointer value [-Waddress-of-packed-member]
        if (ModbusExtractUint16(modbus, &(header->transactionId), input, input_len, &offset)    ||
                                          ^~~~~~~~~~~~~~~~~~~~~
    app-layer-modbus.c:1228:39: warning: taking address of packed member 'protocolId' of class or structure 'ModbusHeader_' may result in an unaligned pointer value [-Waddress-of-packed-member]
            ModbusExtractUint16(modbus, &(header->protocolId), input, input_len, &offset)       ||
                                          ^~~~~~~~~~~~~~~~~~
    app-layer-modbus.c:1230:39: warning: taking address of packed member 'length' of class or structure 'ModbusHeader_' may result in an unaligned pointer value [-Waddress-of-packed-member]
            ModbusExtractUint16(modbus, &(header->length), input, input_len, &offset)           ||
                                          ^~~~~~~~~~~~~~
    3 warnings generated.
    
    Bug #2088

[33mcommit e1bf48c0ee89d16b2fc0867b4958dbad814b55ec[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 5 15:13:17 2017 +0200

    pool: fix compiler warning
    
    clang-4.0 reported:
    
    util-pool.c:242:13: warning: logical not is only applied to the left hand side of this bitwise operator [-Wlogical-not-parentheses]
            if (! pb->flags & POOL_BUCKET_PREALLOCATED) {
                ^           ~
    util-pool.c:242:13: note: add parentheses after the '!' to evaluate the bitwise operator first
            if (! pb->flags & POOL_BUCKET_PREALLOCATED) {
                ^
                  (                                   )
    util-pool.c:242:13: note: add parentheses around left hand side expression to silence this warning
            if (! pb->flags & POOL_BUCKET_PREALLOCATED) {
                ^
                (          )
    util-pool.c:261:13: warning: logical not is only applied to the left hand side of this bitwise operator [-Wlogical-not-parentheses]
            if (! pb->flags & POOL_BUCKET_PREALLOCATED) {
                ^           ~
    util-pool.c:261:13: note: add parentheses after the '!' to evaluate the bitwise operator first
            if (! pb->flags & POOL_BUCKET_PREALLOCATED) {
                ^
                  (                                   )
    util-pool.c:261:13: note: add parentheses around left hand side expression to silence this warning
            if (! pb->flags & POOL_BUCKET_PREALLOCATED) {
                ^
                (          )
    2 warnings generated.

[33mcommit 6227d0955f568a79a457b55c59635d97ad34007f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 3 16:09:18 2017 +0200

    af-packet: fix cppcheck false positive
    
    [src/source-af-packet.c:1903]: (error) Resource leak: fd

[33mcommit 3726fd66bee905fcca279d18ffabe2a06659eac7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 29 11:15:51 2017 +0200

    http: fix body tracking corner case
    
    In some cases, observed with inspect limits 0, the body tracking could
    get confused. When all chunks were already freed, a new chunk would
    be considered to be the start of the body. This would overwrite the
    bodies 'content_len_so_far' tracker, instead of adding to it. This in
    turn could lead to a assertion abort in the inspection code.
    
    This patch redoes the append code to always add the current lenght. It
    cleans up the code to remove redundant logic.
    
    Issue: https://redmine.openinfosecfoundation.org/issues/2078
    Reported-By: Jørgen Bøhnsdalen

[33mcommit 3ca1a29bbd6cfe05f20a9d9717be7b98214a3591[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Mar 20 10:54:51 2017 -0600

    defrag: fix argument used in macro to match signature
    
    "p" was being used in the macro but was not an argument to
    the macro, but it worked due to the context of the macro.
    
    Use the actual macro argument, d2, instead of p.
    
    Results in no change to generated code.

[33mcommit 7b1dae625121a2bbfb72054e8bc1aba102356e69[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Mar 10 07:23:30 2017 +0100

    doc: add documentation for Lua SCFlowTimestamps

[33mcommit 365aa1f3e5a149e74ef4cd18f3c755dea68f9a92[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Mar 10 07:07:09 2017 +0100

    lua: add SCFlowTimestamps function
    
    Add SCFlowTimestamps() to return startts and lastts as seconds and
    microseconds from flow.
    
    Examples:
    
      startts, lastts = SCFlowTimestamps()
      startts_s, lastts_s, startts_us, lastts_us = SCFlowTimestamps()

[33mcommit 3b233876640afa8efa9a2a2798535f256d63ed4d[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed Feb 22 07:54:26 2017 +0100

    doc: add documentation for eve-log file permissions

[33mcommit 005a700e543b65db510243814d85f432cc0912d6[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Feb 21 10:41:57 2017 +0100

    logging: support custom file permissions
    
    Support setting file permissions per logger using 'filemode', e.g.:
    
      outputs:
        - eve-log:
            enabled: yes
            filetype: regular
            filename: eve.json
            filemode: 660

[33mcommit 63078909d5d279bdff465a98a6ab0a52e6467694[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Feb 21 13:42:50 2017 -0600

    ipv4: update checksum function to be like tcp/udp
    
    Update the IPv4 checksum function to be like the
    changed TCP/UDP checksum functions for consistency.

[33mcommit b79a18ea153a8255c4823c4af189154cc5bcccc6[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Feb 21 13:31:41 2017 -0600

    tcp/udp: rename checksum functions for better meaning
    
    The TCP/UDP checksum functions no longer just calculate
    the checksum, they can validate as well as calculate so
    use a more generic name.

[33mcommit f56428d996542f27b66ba1cda2477af2a24c50e9[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Feb 17 16:04:23 2017 -0600

    tcp/udp: fix checksum validation when 0xffff
    
    Issue:
    https://redmine.openinfosecfoundation.org/issues/2041
    
    One approach to fixing this issue to just validate the
    checksum instead of regenerating it and comparing it. This
    method is used in some kernels and other network tools.
    
    When validating, the current checksum is passed in as an
    initial argument which will cause the final checksum to be 0
    if OK. If generating a checksum, 0 is passed and the result
    is the generated checksum.

[33mcommit ce8a65a58e11c1a3371a12226b56e6b9400a6e5f[m
Author: Jon Zeolla <zeolla@gmail.com>
Date:   Mon Mar 13 12:51:44 2017 -0400

    docs: fix statement about flow:to_server

[33mcommit 1589a154955f2f74044eb9dda758b6adc10d9c3b[m
Author: Jon Zeolla <zeolla@gmail.com>
Date:   Mon Mar 13 12:49:04 2017 -0400

    docs: clarify how iprep works

[33mcommit 1a7c5a01a1a6b2023e14d153f4d787e9e5ad68ee[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Mar 24 13:59:39 2017 -0600

    travis: macos: unlink all deps, then relink
    
    Kind of ugly, but first unlink all dependencies then install.
    The deps that don't get an upgrade will remain unlinked, so
    relink all dependencies as relinking an already linked dep
    does not error out.

[33mcommit b58127edcba10aee00f13e0bb570341b1aad85cd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 13 13:53:52 2017 +0100

    print: constify input

[33mcommit 44bab885d685b6d63269116e686e25ea2c44be04[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 9 12:57:40 2017 +0100

    detect: fix ssl_state test

[33mcommit 4f8eacdc692c3ae9e2f03b18a39391c1a038157c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 1 23:32:21 2017 +0100

    disable-detect: fix needless file hashing
    
    When detection is running flags are set on flows to indicate if file
    hashing is needed. This is based on global output settings and rules.
    
    In the case of --disable-detection this was not happening, so all
    files where hashed with all methods. This has a significant
    performance impact.
    
    This patch adds logic to set the flow flags in --disable-detect mode.

[33mcommit e24eb0f2b17cfa4e96b32ad9f0ff274d639bb685[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 28 09:38:00 2017 +0100

    app-layer: remove version logic

[33mcommit a56b4817ef49803d36ca5e14c6ab795c5de8d172[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 27 23:51:31 2017 +0100

    flow: remove unused alversion fields

[33mcommit c066f043a5d039318be1f0148d3b34f2cd9aa2e0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 27 23:44:00 2017 +0100

    detect: remove unused alversion logic

[33mcommit 6c6802b9576df68a0d5de7b84339a72918484af5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 27 23:39:41 2017 +0100

    detect: simplify state detect code: remove unused params

[33mcommit c961da2dceefd6a82168eadabdcfc624ea8d799a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 28 00:28:10 2017 +0100

    detect: clean up test

[33mcommit 3626ecb4748f7c68fd56d13de1c2e0476f17f892[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 6 10:54:57 2017 +0100

    bytejump: don't print errors when matching
    
    When bytejump was told to convert some payload data to int from a
    string it would print an error to the screen if the conversion
    failed. This is unwanted as the payload is controlled by an attacker
    and printing is expensive.

[33mcommit 15d26f14e16150f3dcc3d238c76eb1eb490e1faa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 1 23:23:04 2017 +0100

    file-store: fix force store

[33mcommit dbbf18517378a326e0bd2f72f7ce7d5c2232493a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Feb 26 19:56:38 2017 +0100

    app-layer: fix gap handling in protocol detection
    
    A GAP during protocol detection would lead to all reassembly
    getting disabled, so also the raw reassembly. In addition, it
    could prevent the opposing side from doing protocol detection.
    
    This patch remove the 'disable reassembly' logic. Stream engine
    will take the stream with GAP and app-layer will make the proto
    detection as complete.

[33mcommit f1e19b5dd40683a0144642b181298ae94d249b06[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 10 19:12:32 2017 +0100

    file store: store multiple files if available

[33mcommit 7c0a3b558229274cb12fdd080c132c3f2049f31f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 23 16:45:32 2017 +0100

    app-layer: fix memleak on bad traffic
    
    If state was alloc'd after protocol detection, but then the direction
    turned out to be wrong, the state would not be freed.

[33mcommit 132e0e21f0599a4b38df24e544882681b0e8d33f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 27 20:38:41 2017 +0100

    ippair: fix xbits unset memleak

[33mcommit 4c597bb9e1695078b09faa120954982c83f7aaa1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 27 18:32:22 2017 +0100

    ippair: use both addresses in hash

[33mcommit 1de1413863d06f9409d756af64a98f5370fef51b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 27 12:27:11 2017 +0100

    stream: validate SACK right edge to be in window

[33mcommit daf39b422bcb1395475f632e8a75a56c5079322b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Feb 26 18:32:27 2017 +0100

    stream: remove unused stream config member

[33mcommit 75129496707434bf3032fed586d47dc7e3619901[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Apr 24 09:33:54 2016 +0200

    stream: make data pointer in StreamSegmentCallback const

[33mcommit 2a5b9eb5fa61dfc83547c53e63c8e6b9da36e70e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 17 16:00:42 2017 +0100

    stream: remove unused variable

[33mcommit a86b7b704217c2772e43c4aacb64bfa807bd0a0e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 22 16:34:37 2017 +0100

    app-layer: minor debug improvement

[33mcommit 25bd3e28f7f63af1834b72e2045498d82be66182[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 24 10:15:09 2017 +0100

    qa/appveyor: install libiconv-devel

[33mcommit 205975009ab4dba0130b3a11e927156d5cac8439[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 24 12:40:18 2017 +0100

    travis: fix pkg-config in mac builds
    
    Unlink pkg-config before installing.

[33mcommit db5708f6ad2a9cf622b30feecaa5030554ec1d38[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Mar 17 11:11:07 2017 -0600

    travis: fix libpcre in mac builds
    
    It looks like Travis changed their Mac image and pcre is now
    installed by default. In case it gets removed again, just unlink
    it before re-installing so it doesn't fail on install.

[33mcommit 6585ac4a9faee41663f707fab8d463337ba06629[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Feb 20 12:00:15 2017 -0600

    logging: remove unused print stats callbacks
    
    Remove the ThreadExitPrintStats callback from logging modules
    that weren't doing anything with it.

[33mcommit 0c3f1e2974180f4382ed6c551f1de4a6d2650e56[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Feb 20 11:52:34 2017 -0600

    logging: move lock into write function
    
    All loggers were wrapping just the write in a lock with some
    updating a counter.  This moves the lock into the write function.
    
    The log_ctx alerts counter was also removed as many modules have
    stopped using this and the alert count is available elsewhere.
    
    Should satisfy Coverity CID 1400798:
    
    CID 1400798 (#1 of 1): Data race condition (MISSING_LOCK) 2.
    missing_lock: Accessing log_ctx->rotation_flag without holding lock
    LogFileCtx_.fp_mutex. Elsewhere, "LogFileCtx_.rotation_flag" is accessed
    with LogFileCtx_.fp_mutex held 4 out of 5 times.
    
    Which appears to be a false positive as all calls to SCLogFileWrite
    were done under lock, but this will make it more explicit.

[33mcommit ddf1bf6518fd2a87a143652944b129f1075766b9[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Feb 17 11:22:23 2017 -0600

    unified2: unlock using same dereference as lock
    
    Addresses Coverity CIDs:
        1400797
        1400796
    
    Note that the mutex was actually being unlocked, but
    from a different variable pointing to the same mutex.

[33mcommit 285b5662050c6a33513f74489226d0c218e73cab[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Jan 17 09:53:23 2017 +0100

    doc: add documentation for TlsGetCertSerial Lua function

[33mcommit ee9f822b8e14c27f1b0f19fdf64febaa1740c8d3[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Mon Feb 20 08:33:49 2017 +0100

    doc: add documentation for tls_cert_serial keyword

[33mcommit d6508e640a2330722011e4cfc39a36f60f735796[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Mon Feb 20 08:27:23 2017 +0100

    detect: add (mpm) keyword tls_cert_serial
    
    Match on TLS certificate serial number using tls_cert_serial
    keyword, e.g.:
    
    alert tls any any -> any any (msg:"TLS cert serial test";
            tls_cert_serial; content:"5C:19:B7:B1:32:3B:1C:A1";
            sid:12345;)

[33mcommit 95864375f2a510b122909923bd0ba0f8c0558d74[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Jan 17 09:23:30 2017 +0100

    lua: add function to print certificate serial number
    
    Add function LuaGetCertSerial to print serial number from TLS
    certificate.
    
    Example:
    
    function log (args)
        serial = TlsGetCertSerial()
    
        if serial then
            file:write(serial .. "\n");
            file:flush()
        end
    end

[33mcommit 2e339aa7911b090c11ecef5869df43faa633e2d2[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Jan 17 09:22:10 2017 +0100

    tls-log: log certificate serial number

[33mcommit 2b460b8d06390fa12415d23891098d8a9184c0dc[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Jan 17 09:21:30 2017 +0100

    output-json-lua: log certificate serial number

[33mcommit 2c1a36dd6e56a84bc2894a7e544b1e83651b85bf[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Jan 17 09:20:25 2017 +0100

    app-layer-tls: decode certificate serial number

[33mcommit 310b27a196a93b46ea719a51323fd3d4a83bea64[m
Author: Alexander Gozman <a.gozman@securitycode.ru>
Date:   Mon Feb 20 16:47:31 2017 +0300

    af-packet: fix parsing packet in TPACKET_V3 mode
    
    AFPParsePacketV3() saved tpacket_block_desc structure
    instead of tpacket3_hdr. As a result, reconstructed
    packets were wrong.
    
    Bug #2044.

[33mcommit e41a9d637bf0b420d548c2bec0fb26c79c1f5ccf[m
Author: Alexander Gozman <a.gozman@securitycode.ru>
Date:   Mon Feb 20 16:43:10 2017 +0300

    af-packet: get VLAN info for packets in TPACKET_V3 mode

[33mcommit ee7e689b5423295d17f1560e2a3b1a1491cdf314[m
Author: Alexander Gozman <a.gozman@securitycode.ru>
Date:   Mon Feb 20 16:41:18 2017 +0300

    af-packet: write VLAN info for both TPACKET_V2 and V3

[33mcommit 92db12c3492d1931e346869695351ca1788869e2[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Feb 17 10:46:43 2017 -0600

    pidfile: fail if the pid file exists
    
    Changes the pidfile check function to fail just on the
    existence of the file to address issue
    https://redmine.openinfosecfoundation.org/issues/1335
    but log a message if the pid file appears to be stale.

[33mcommit 1bf7ded224bacace8b7779d76a738c8976e55f58[m
Author: David Wharton <dwharton@secureworks.com>
Date:   Mon Feb 20 08:29:59 2017 -0500

    doc: specify buffers that can be used for fast_pattern
    
    Updated notes on the following buffers indicating that they can
    be used for fast_pattern:
    tls_cert_subject
    tls_cert_issuer
    tls_sni

[33mcommit b1ad770b36ba2595f77a94e67b0ae86c22d4217c[m
Author: David Wharton <dwharton@secureworks.com>
Date:   Mon Feb 20 08:27:05 2017 -0500

    doc: removed references to older Suricata versions
    
    docs are versioned; references to older Suricata versions undesired.

[33mcommit e91bb09c9138d6087eec2c09fc648cc06c08ca71[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Jan 17 12:45:21 2017 +0100

    doc: add documentation for TLS eve-log

[33mcommit bbd32c141957579119a1e5cd898048a3bb5d733c[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Jan 13 13:07:59 2017 +0100

    output-json-tls: code cleanup

[33mcommit 115b3138cc4723090774f68ac5a43fb91bd971ab[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Jan 13 12:20:34 2017 +0100

    output-json-tls: log certificate and chain
    
    Log entire certificate and certificate chain Base64 encoded.

[33mcommit 0716199acb3894ca71fce777ac9614c5f81a7e9d[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu Dec 22 11:36:19 2016 +0100

    output-json-tls: custom tls logging

[33mcommit 89ba5816dc303d54741bdfd0a3896c7c1ce50d91[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Jan 17 00:33:17 2017 -0600

    doc: update unified2 section
    
    Remove documentation on older unified formats that have
    been removed.

[33mcommit 82f61031499c40b09afd9469a6a042a1c3ce482d[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Jan 16 16:25:56 2017 -0600

    unified2: nostamp and file rotation
    
    Give unified2 a nostamp option which will create the file
    without the timestamp suffix (like Snort's nostamp option).
    
    Also register for rotation notification on SIGHUP so the file
    will be recreated if it is removed by an external rotation
    program (only when nostamp is used).

[33mcommit 2c01985e731d97eafb4b644cd78641197093f859[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Jan 16 16:02:43 2017 -0600

    autoconf - look for stdbool.h

[33mcommit d8e9e1fd77b1ab47a2a455cc88ea38d74876f76c[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Jan 16 14:45:32 2017 -0600

    unified2: minor cleanups
    
    - remove unused arguments and make static

[33mcommit c810748a60295dab22fa504bf151984244a0ffd7[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Feb 16 13:02:58 2017 -0600

    Makefile: fix race condition in make install-full
    
    Use recursive make for the install process so it
    is executed in a predictable order.
    
    Addresses issue:
    https://redmine.openinfosecfoundation.org/issues/1470
    which triggered on OSX/macOS.

[33mcommit 234a3a890bb16141d5fb67b12e239ad52c7edf4c[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Jan 27 12:50:08 2017 +0100

    output-json-alert: print 'tunnel' JSON object if tunnel
    
    Log src_ip, dst_ip and proto for root packet (p->root) if the
    packet that triggered is inside a tunnel, as JSON object
    'tunnel'. Also log recursion depth to indicate the depth of
    the tunnel.

[33mcommit 7293286f2fab12cd674d29d0a5559de03954aa09[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Jan 27 12:42:08 2017 +0100

    output-json: move code to get 5-tuple to own function
    
    Move code to get 5-tuple in JSON object to own function 'JsonFiveTuple'.
    This enables this code to be reused when printing 'parent' JSON object in
    output-json-alert.

[33mcommit 8c8db1cf0f8dccf0119300addfd2d6a51367e166[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Jan 27 10:19:01 2017 +0100

    output-json-alert: fix wrongful comments

[33mcommit 6a382259f8093a5ed1b7c0377f7190db4cea2d9e[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed Jan 25 14:11:49 2017 +0100

    doc: documentation for custom JSON flags in eve-log

[33mcommit 65317ba865bc498ca01c8a146d89b4504c75663d[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu Jan 19 07:15:00 2017 +0100

    output-json: make JSON flags in eve-log user configurable

[33mcommit d445b4b5fa5b00382138804eb86fe262d61a0eee[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 17 12:50:30 2017 +0100

    dce: remove commented out code

[33mcommit 9da7be81f072bd5ec4e25682595bf7ebab38e9b9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 16 16:41:06 2017 +0100

    flow-worker: clean up thread init

[33mcommit c859d39f4f6948c6cc4282aeb0382b08adf53956[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 16 15:52:49 2017 +0100

    coverity: suppress CID 1400648

[33mcommit 955c22712708301f17d128889d7f8629037bb20b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 16 15:38:26 2017 +0100

    detect-ssh: cleanup duplicate code

[33mcommit 2f30adb08aecdb0ad16f13cec2c2f80df58ea007[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 16 15:36:16 2017 +0100

    detect-lua: setup cleanup, fixing a potential int issue

[33mcommit 511e8049157bb8cc6f313b32da5cf98031437b1e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 16 15:27:09 2017 +0100

    detect: fix missing unlock in error path

[33mcommit f74eff9eacbbe5b1d20369528123b8680fee92cd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 12 10:19:27 2017 +0100

    threads: address sleep under lock issue

[33mcommit f38087105723f9fc52df24a66858bb4e51109b92[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 15:36:29 2016 +0100

    threads: don't sleep under lock

[33mcommit cc4010343dd495df44d0791f4aadadb63656982e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 24 10:43:36 2016 +0100

    detect: add and use util func for alproto sets

[33mcommit c477c4370e1e2b56b1aebf272bc28bdb0680956f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 21 11:39:58 2016 +0100

    doc: update for unix socket hostbits

[33mcommit 4a49260897d05d219673e2282ba96ee37c09e9a8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 15 17:40:28 2016 +0100

    flowvar: shrink flowvar type by using padded space

[33mcommit 99517cbd53a378a22f2e14063a5ceb00e095d4b9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 6 16:43:41 2016 -0500

    lua: support key/value flowvars in lua

[33mcommit f0af133c5f7c75b5c9abcc397527c45b2e032dad[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 15 17:09:46 2016 +0100

    flowvar: remove unused DETECT_VAR_TYPE_ALWAYS

[33mcommit 71607c905ae67d6e74e52ae2a5e420ae4162bd45[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 15 15:10:30 2016 +0100

    doc: update unix socket

[33mcommit 8fde6f967ff2dda8056a69418aa804e6149d79e7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 15 14:49:40 2016 +0100

    suricatasc: add/list/remove hostbit commands
    
    Syntax:
        add-hostbit <ip> <bit name> <expire>
    Example:
        add-hostbit 1.2.3.4 blacklist 3600
    
    Syntax:
        remove-hostbit <ip> <bit name>
    Example:
        remove-hostbit 1.2.3.4 blacklist
    
    Syntax:
        list-hostbit <ip>
    Example:
        list-hostbit 1.2.3.4

[33mcommit 88888c3d8bc2b791e199073f618557a1fe403106[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 15 14:49:17 2016 +0100

    unix-socket: add/list/remove hostbit commands
    
    add-hostbit adds a named hostbit with an expire time in seconds.
    remove-hostbit removes hostbit by name.
    
    add-hostbit, remove-hostbit return success or failure.
    
    list-hostbit returns a json array of hostbits with their name and
    expire time:
    
        {
            "message": {
                "count": 1,
                "hostbits":
                    [{
                        "expire": 3222,
                        "name": "firefox-users"
                    }]
            },
            "return": "OK"
        }

[33mcommit b6e4276792b3b48c8db639e98d3de54416e77cf4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 21 11:16:41 2016 +0100

    hostbits: add list API

[33mcommit 996112edf5712f593c87dc8741c59ce65b73e07f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 5 09:02:39 2016 -0400

    pktvars: same name pktvars, key-value vars

[33mcommit 5ca4a2e6fe5df41673009d89f2f1e0173b55097c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 28 23:12:43 2016 +0200

    outputs: vars log
    
    EVE addition called 'vars' that logs pkt/flow vars for each packet/flow.

[33mcommit 1a2ad059a12910120cd997e76ea75e688747ff7d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 21 12:55:32 2016 +0200

    eve: log pktvars/flowvars/bits/ints
    
    Optionally logs 'vars' into alerts

[33mcommit 1ba8c2fe3a7cea32f3045d137ee2f4571f3e8ccc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 28 12:27:35 2016 +0200

    pcre: new way of specifying var names
    
    Until now the way to specify a var name in pcre substring capture
    into pkt and flow vars was to use the pcre named substring support:
    e.g. /(?P<pkt_somename>.*)/
    
    This had 2 drawbacks:
    
    1. limitations of the name. The name could be max 32 chars, only have
       alphanumeric and the underscore characters. This imposed limitations
       that are not present in flowbits/ints.
    
    2. we didn't actually use the named substrings in pcre through the
       API. We parsed the names separately. So putting the names in pcre
       would actually be wasteful.
    
    This patch introduces a new way of mapping captures with names:
    
      pcre:"/(.*)/, pkt:somename";
      pcre:"/([A-z]+) ([0-9]+)/, pkt:somename,flow:anothername";
    
    The order of the captures and the order of the names are mapped 1 on 1.
    This method is no longer limited by the pcre API's naming limits. The
    'flow:' and 'pkt:' prefixes indicate what the type of variable is. It's
    mandatory to specify one.
    
    The old method is still supported as well.

[33mcommit 0f708d427bbee9708601a8a0557af247a4942f9a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 27 17:41:38 2016 +0200

    pkt-var: abuse flowvar postmatch logic for pktvars
    
    Flowvars were already using a temporary store in the detect thread
    ctx.
    
    Use the same facility for pktvars. The reasons are:
    
    1. packet is not always available, e.g. when running pcre on http
       buffers.
    
    2. setting of vars should be done post match. Until now it was also
       possible that it is done on a partial match.

[33mcommit 5e39486399457b494ea323b71b34ef8dcde47438[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 27 15:41:10 2016 +0200

    pkt-var: use id instead of name pointer

[33mcommit a0bd15a1c47f64b34604fa3a4b8bd143af0bc1d6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 26 16:55:34 2016 +0200

    pcre: support multiple captures
    
    Support up to 8 substring captures into pkt or flow vars.

[33mcommit 017b16d42174f3f7597a41088f1b00e830c2ecbd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 26 14:35:26 2016 +0200

    detect-pcre: small cleanups

[33mcommit ac42a44280b81e161934419492b4551d42f8a9ab[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 21 18:47:48 2016 +0200

    alert-debug: print flowvar/int names

[33mcommit e95a0c13447a2241a7f4e34c0c080bc6c421b02c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 21 18:19:14 2016 +0200

    alert-debug: print flowbit names from VarNameStore

[33mcommit 22f3205664f28fb382b979f9ddff5695b8ea66e4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 20 14:38:33 2016 +0200

    var-names: expose outside of detect engine
    
    Until now variable names, such as flowbit names, were local to a detect
    engine. This made sense as they were only ever used in that context.
    
    For the purpose of logging these names, this needs a different approach.
    The loggers live outside of the detect engine. Also, in the case of
    reloads and multi-tenancy, there are even multiple detect engines, so
    it would be even more tricky to access them from the outside.
    
    This patch brings a new approach. A any time, there is a single active
    hash table mapping the variable names and their id's. For multiple
    tenants the table is shared between tenants.
    
    The table is set up in a 'staging' area, where locking makes sure that
    multiple loading threads don't mess things up. Then when the preparing
    of a detection engine is ready, but before the detect threads are made
    aware of the new detect engine, the active varname hash is swapped with
    the staging instance.
    
    For this to work, all the mappings from the 'current' or active mapping
    are added to the staging table.
    
    After the threads have reloaded and the new detection engine is active,
    the old table can be freed.
    
    For multi tenancy things are similar. The staging area is used for
    setting up until the new detection engines / tenants are applied to
    the system.
    
    This patch also changes the variable 'id'/'idx' field to uint32_t. Due
    to data structure padding and alignment, this should have no practical
    drawback while allowing for a lot more vars.

[33mcommit 43cc06eabeca8d1bdf8456e98e61d004bf226367[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 26 13:44:53 2016 +0200

    detect: use engine version instead of id
    
    Use engine version based on global detect engine master. This is
    incremented between reloads.

[33mcommit 920709fe6f14d094dac9513b5c4346657c4effb7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 23 17:18:10 2016 +0100

    detect: ssh_software sticky buffer

[33mcommit f1ab6a615378f27000247144652cec9501849eb1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 23 17:10:18 2016 +0100

    detect: ssh_proto stickybuffer

[33mcommit dfac5276b8a0a3089a43dbeb52d85d75ab4a7494[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 23 16:03:08 2016 +0100

    detect: remove unused SIGMATCH_PAYLOAD flag

[33mcommit 14ced15e3662b5b49a1d1325d7997884f3fe37f7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 23 15:17:19 2016 +0100

    detect: remove unused state file flag

[33mcommit fa1ef158b21f97472d4006c3e1dcc851cc3b9a0a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 23 14:45:08 2016 +0100

    detect: small API cleanup

[33mcommit 073fcbeb7fb70fbf576eda841c07a4ba0fe0c4cc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 23 13:59:25 2016 +0100

    detect: move file hash common code

[33mcommit 5bafc64c089daaa1d642d8765da5e1eada14641e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 23 13:57:12 2016 +0100

    detect: unify FileMatch API with other calls

[33mcommit fe415ae5185e4a985a1c70cf937a949ac4baf9fb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 22 23:56:48 2016 +0100

    detect: remove DMATCH list

[33mcommit 1c02cf454297df4d7f57e02f5f1bd9c3b636c45a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 22 20:49:32 2016 +0100

    flow: remove unused Flow::de_state

[33mcommit ad238121e34f78c0a8c6a5eced5edcb4ecb75715[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 22 20:31:38 2016 +0100

    detect: remove the AMATCH list

[33mcommit 775e182531e7e744e1bad63916e87400a8a7867b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 22 20:17:49 2016 +0100

    detect: remove AppLayerMatch API call

[33mcommit f018ae94b0b0a5be16115ea598002124ae0b197a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 22 20:05:17 2016 +0100

    dce: dynamic lists

[33mcommit 84ba9cf9df9b0693d02dd9f8199e8e71899c881c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 22 19:03:44 2016 +0100

    smb/dcerpc: use tx api

[33mcommit d318bfc934da5d28bf1b71c159416869c9e7202a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 22 16:55:43 2016 +0100

    dcerpc: simplify common detect code

[33mcommit 402eb645a00ca0063b95eb7558a981ae8a5f12c9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 22 15:21:32 2016 +0100

    ftp: parser and ftpbounce update
    
    Convert parser to TX API.
    
    Convert ftpbounce keyword to use that.

[33mcommit d9a300cd8c002d1cdfca1d5868cfe06bc2be1179[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 22 14:48:53 2016 +0100

    detect: move lua smtp support to dynamic list

[33mcommit 96b8100a511b7abeca5a2b801ba26e8a7daef892[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 22 13:29:07 2016 +0100

    lua: convert lua output to be tx aware

[33mcommit a10b2fdecfee1a92fdbaa170cc1d53730a1ade3d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 22 13:07:06 2016 +0100

    detect: make ssh detection use dynamic list

[33mcommit c412352474e64b6e5ea4eb3d9d413ab54e44ae26[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 22 12:48:59 2016 +0100

    ssh: remove single logger limit

[33mcommit 3ee4989ba7c10531d80e17e95bfa2d13951afc20[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 22 12:45:17 2016 +0100

    ssh: convert app-layer parser to be tx aware
    
    Like with SSL, there is only a single 'tx'.

[33mcommit 4ae4fd08024e2a5369cf785e8597a2afbd9a6bc2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 22 10:35:44 2016 +0100

    lua: use tls_generic list for ssl/tls

[33mcommit a8975c68e0354a51bfa44e30845e14619224c9dc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 22 10:32:00 2016 +0100

    detect ssl/tls: use dynamic lists

[33mcommit 1cacba435b57b704d640acbe6f480d432b52088b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 22 10:09:34 2016 +0100

    ssl/tls: clean up keywords

[33mcommit 6ef4712cd684bd2c9725eb0237eaf196e34b5f79[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 21 21:27:56 2016 +0100

    detect: convert old tls keywords to dynamic list

[33mcommit ef149bed7b0d25358582859798d3c2a57129b815[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 21 19:53:00 2016 +0100

    tls.store: convert to postmatch

[33mcommit 8b3a71a2859c125a8b461b88cf620d48d9c479ca[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 21 19:43:25 2016 +0100

    tls.store: cleanup

[33mcommit 8eac1156c658a501993f3965e6df1402dd7f6c0f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 21 17:58:26 2016 +0100

    app-layer-events: remove unused API options

[33mcommit 1087495d6dccea7211e0a454ef9d994d7b05a7b5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 20 14:04:55 2016 +0100

    detect: http_start sticky buffer
    
    Matches on the start of a HTTP request or response.
    
    Uses a buffer constructed from the request line and normalized request
    headers, including the Cookie header.
    
    Or for the response side, it uses the response line plus the
    normalized response headers, including the Set-Cookie header.
    
    Both buffers are terminated by an extra \r\n.

[33mcommit 36535efa04b68fb687d0f60424aa00471ed3bf94[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 19 23:41:40 2016 +0100

    detect: add http_protocol sticky buffer
    
    Matches on protocol field in HTTP.

[33mcommit f2fc5a255f09c5287e9a6baf4cbeadab6f35a82b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 19 17:06:11 2016 +0100

    http_header: convert to use common code

[33mcommit 6279ec399e132c9e0389213fd97b7a7394ec137c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 19 15:45:12 2016 +0100

    http_header: common detection code

[33mcommit 5ee68ca2b2e293c4711a5bcf6d6d278a09722796[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 19 14:43:59 2016 +0100

    http_header: remove old files

[33mcommit 2bb0cae05afdd7211f2529525f4f2684ec05d91f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 19 14:38:27 2016 +0100

    http_header: move all code into keyword files

[33mcommit aaeeae0722ffdd91221518a6a2b7ef903cc7ef10[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 19 11:25:58 2016 +0100

    detect: http_header_names sticky buffer keyword
    
    A sticky buffer that allows content inspection on a contructed buffer
    of HTTP header names. The buffer starts with \r\n, the names are
    separated by \r\n and the end of the buffer contains an extra \r\n.
    
    E.g. \r\nHost\r\nUser-Agent\r\n\r\n
    
    The leading \r\n is to make sure one can match on a full name in all
    cases.

[33mcommit cf9678d926f4e09d962ac1dee1cd808786ccf8cb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 19 11:25:27 2016 +0100

    detect: global registery for keyword thread data
    
    Some keywords need a scratch space where they can do store the results
    of expensive operations that remain valid for the time of a packets
    journey through the detection engine.
    
    An example is the reconstructed 'http_header' field, that is needed
    in MPM, and then for each rule that manually inspects it. Storing this
    data in the flow is a waste, and reconstructing multiple times on
    demand as well.
    
    This API allows for registering a keyword with an init and free function.
    
    It it mean to be used an initialization time, when the keyword is
    registered.

[33mcommit 75907fce0662b500b280a0493524daf06523aaae[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 15 11:18:44 2016 +0100

    profiling: output all sort options for rules
    
    Limit the default number of sids to 10.

[33mcommit 7d8a5a75ef42640c78203f8d57e2d45c3f8edf03[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 15 11:17:13 2016 +0100

    profiling: honor limit in json rule output

[33mcommit a9a228a2897c2f9fcf5ef78593f9b58c0ae5d1f9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 15 10:12:21 2016 +0100

    profiling: fix keyword profiling

[33mcommit a1465bc4fa608180c972659341d31a667eb7c0dc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 14 13:08:39 2016 +0100

    detect-engine-mpm: api cleanup

[33mcommit 8bd14229486b60d5bd3fea4f92b47c515600d86c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 12 20:00:26 2016 +0100

    detect: detect engine registration cleanup

[33mcommit 49fbd28ceb4299d5baa26f9423df95bc94fe5a71[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 12 12:20:46 2016 +0100

    detect: cleanup built-in list id's

[33mcommit 40851eecf02e02bdb4d8e2731daa999ba711558c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 12 12:03:46 2016 +0100

    template: dynamic buffer

[33mcommit 815120896ba2e361173020f647a9bfd44d2789a2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Dec 11 09:59:31 2016 +0100

    app-layer-events: dynamic list

[33mcommit b68343e372fe817e943cec048a6a504a235b4911[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 10 22:03:46 2016 +0100

    files: use dynamic list

[33mcommit e4bfdd53c2a8593fd4ec8aa78c249de7c9aee846[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 10 21:55:51 2016 +0100

    cip/enip: dynamic buffer

[33mcommit f2393c1ae084a592de43efe0ba1e7620aac734f1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 10 14:36:06 2016 +0100

    modbus: dynamic buffer

[33mcommit cfdd934aba2ccda93afa95345b97a9aeb0dd29f2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 10 14:04:50 2016 +0100

    dnp3: dynamic buffers/lists

[33mcommit 9ba386a141431354e63a18261cfe3ae6a3a9e04b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 10 11:36:06 2016 +0100

    tls: dynamic buffers

[33mcommit d9b3ae6cd6da2d8939618a763aa513a774a36b92[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 10 10:49:51 2016 +0100

    dns: use dynamic buffers

[33mcommit d2f77978ecafc512b3b2ce597a29f18f4383d7d5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 9 19:01:01 2016 +0100

    detect-parse: content modifier cleanup

[33mcommit 6f867c3c737dc510d671aaae4e86057a7c72f3f1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 9 18:29:44 2016 +0100

    http_raw_uri: dynamic buffer

[33mcommit ee55aefa1cac7f57b498ae50fe66397cb4cf4278[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 9 18:09:48 2016 +0100

    http_client_body: dynamic buffer

[33mcommit e7d5e845c799595faa6b3a25e59218a689144046[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 9 15:27:51 2016 +0100

    http_header / http_raw_header: dynamic buffers

[33mcommit b694d96e2240920fa12f095b21114a866226f33b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 9 14:46:05 2016 +0100

    http_stat_msg: dynamic buffer

[33mcommit 7e3ab4f5eab75fa83bb501b925003ed233ba89b5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 9 14:00:48 2016 +0100

    http_stat_code: dynamic buffer

[33mcommit 128b59d4f63389159b40cca8ca32975b4c19811a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 9 13:47:14 2016 +0100

    http_raw_host: dynamic buffer

[33mcommit 296c275e23a6110216178cba6a67057a495a9aca[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 9 12:07:03 2016 +0100

    http_host: dynamic buffer

[33mcommit 67b7d9734e1c17eecaebd71ca3efc6b262bd1b95[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 8 11:40:08 2016 +0100

    http_cookie: dynamic buffer

[33mcommit 54604c7bf29cad212283157250bdd5e4723d492d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 8 11:05:51 2016 +0100

    http_user_agent: dynamic buffer

[33mcommit 9262fa3dcfb54a0c47b69bcea642a3daab7635ff[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 8 10:33:15 2016 +0100

    http_response_line: dynamic buffer

[33mcommit 6346a074a7b828952e094b2efd54dc12a6149b2d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 8 09:19:34 2016 +0100

    http_uri: dynamic buffer
    
    Clean up tests

[33mcommit e34102d67aa53ab786987709a9a22b7c6a2a7c09[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 7 18:02:37 2016 +0100

    http_method: make list dynamic

[33mcommit 6bd37611eebe68574d5a29d04d333740a276b928[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 14 11:42:58 2016 +0100

    file_data: dynamic buffer

[33mcommit 7052f9b9338e80956dd0043117796e6473b5168f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 18 00:50:26 2016 +0200

    http_request_line: dynamic buffer

[33mcommit 779d40cedf6657ab7e0ba63f660fdc68f85e0b4f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 14 12:39:13 2016 +0100

    detect: remove hardcoded sm_list logic from setup
    
    Introduce utility functions to aid this.

[33mcommit 04592efb7655eb95a1067f92f9256e9b11a4f9bc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 14 12:38:58 2016 +0100

    detect: buffer type API
    
    To replace the hardcoded SigMatch list id's, use this API to register
    and query lists by name.
    
    Also allow for registering descriptions and whether mpm is supported.
    
    Registration is only allowed at startup.

[33mcommit 58e1180efea18adb28e5abd64877cfc3221c6268[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 18 00:42:26 2016 +0200

    detect: inspect engine setup cleanup

[33mcommit debc1a6334bdd9f37ccd043b6e3fe57b9c549d5d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 16 11:02:50 2016 +0200

    detect: dce test fixes and improvements

[33mcommit a2b521b7fae12fcd491010bf1c4fee2f4815c870[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 16 10:44:33 2016 +0200

    detect-csum: redo tests

[33mcommit f370e881354e50d978db709d7e0f00f6a0cb5af2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 17 16:54:40 2016 +0200

    detect: move init only Signature members to init_data

[33mcommit 0a5ae415b89d322cf8d7cf71e45bd97c2166bece[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 17 16:08:02 2016 +0200

    detect: shrink Signature::sm_arrays
    
    Signature::sm_arrays now only contains 'built-in' lists, and so is
    sized appropriately.

[33mcommit 4978a7a13366fab069fbc6b5135778e7d88cc6f8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 17 14:17:55 2016 +0200

    detect: reorganize id's in prep of dynamic lists

[33mcommit 59303d1fbb02e33e839145a32cacb6d7cf81c546[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 16 21:12:32 2016 +0200

    threshold: fix and redo tests

[33mcommit 6f7e4adbe85e634b01f1cb480fbaee0b9238672d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 16 21:29:34 2016 +0200

    detect: improve memory handling & comments

[33mcommit 8edc954e828a4a4ed89a6debba86c0225712151a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 16 15:30:22 2016 +0200

    detect: get rid of Signature::sm_lists
    
    Instead use the lists in init_data during setup and the SigMatchData
    arrays during runtime.

[33mcommit f281481b679b13f0c776a64e168c3ab8717dfbf5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 16 00:07:48 2016 +0200

    detect: use detect list passed to generic funcs
    
    Until now the GenericList users used hardcoded list id's.

[33mcommit bd456076a85edd28d997ac50db785e0aab746156[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 15 22:37:07 2016 +0200

    detect: pass SigMatchData to inspect functions

[33mcommit a0fe67a3c0c980fe409ec4fb206fc24a5caf059b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 15 19:26:48 2016 +0200

    detect: template list in engine

[33mcommit da7c816c7cc1b314f3c600827ec8270b7247e206[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 15 19:24:35 2016 +0200

    detect: enip/cip list in engine

[33mcommit e94a7bddb3ef0311fd0c457af68bc4cd1d212b6b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 15 19:20:31 2016 +0200

    detect: modbus list in engine

[33mcommit 7f7d4296da7f103b96ba2fe0513846f004ff69e8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 15 19:11:18 2016 +0200

    detect: file list in engine

[33mcommit f5adccba1d8afb40e0f8cbbece6dcd805f47b9aa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 15 18:54:02 2016 +0200

    detect: app-event list in engine

[33mcommit 747dbf92ce78783bf93cf7ce65b9dfd174bf8943[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 15 18:47:42 2016 +0200

    detect: dns & tls lists in engine

[33mcommit 5a2e5683858ddd152697db740c97dcd81fe5a74a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 15 14:57:39 2016 +0200

    detect: http lists in engine

[33mcommit 1ee32da2ca21a931b5e183fa7e43d8fc80bf5b83[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 15 18:15:17 2016 +0200

    detect-engine: memory handling of sm_lists
    
    For lists that are registered multiple times, like http_header and
    http_cookie, making the engines owner of the lists is complicated.
    Multiple engines in a sig may be pointing to the same list. To
    address this the 'free' code needs to be extra careful about not
    double freeing, so it takes an approach to first fill an array
    of the to-free pointers before freeing them.

[33mcommit f81b90dacd7fb11b3f34342285ee197352838ea4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 15 16:26:37 2016 +0200

    detect: when freeing sig also see sm in inspect engine

[33mcommit 2f87c975d479e2894c35c56fb6c1bcbce4a3fb11[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 15 14:10:23 2016 +0200

    detect: add SigMatch arg to inspect functions

[33mcommit cf42fbf51f25d7466ea304963d3319e5eccb7391[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 15 12:09:47 2016 +0200

    detect: use InspectEngineFuncPtr in inspect engines
    
    Replace explicit function pointer use by InspectEngineFuncPtr typedef

[33mcommit 5f7e096be487739b46940ae7330a2c5f0ec104c8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 15 11:54:34 2016 +0200

    detect: shrink inspect engine by using 'id' as state flag

[33mcommit 715ff60087af4a09d36ac5e1656d9f25f61eff25[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 17 17:30:23 2016 +0200

    detect: remove unused SIG_FLAG_INIT_PAYLOAD init_flag

[33mcommit 859cb89c7e573722c745acebf23dceb3240c9ece[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 16 11:29:23 2016 +0200

    detect alert/threshold/tag: sm_list -> sm_array

[33mcommit 99580487e56c18bf4ceda73d8a115d88f8b7dd9d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 7 11:33:50 2016 +0100

    detect: fix file_data / http_server_body tests

[33mcommit faadec0d7fd47515996bffb41008cacbdda69ae1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 7 11:33:10 2016 +0100

    detect file_data: improve error messages

[33mcommit e2c6e1be33deb4a61351d2532628fd21a47be39e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 7 11:14:20 2016 +0100

    detect-parse: set ipprotos earlier
    
    A high level proto like HTTP implies TCP. However this wasn't set
    until after all the parsing was complete which means that keywords
    couldn't test if the ipproto matched.
    
    This patch populates the ipprotos right when the higher level proto
    is parsed.

[33mcommit 5e0b0eea4b477d91dd73f57045f4c137b590e4f5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 6 12:58:19 2016 +0200

    detect: remove unused flags

[33mcommit 39613778cd37bcb7a070ba66a4ef61e34b1bccaa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 6 12:17:04 2016 +0200

    detect: make setup/free/match funcs static where possible

[33mcommit bfd4bc82333a5d0990a5acd81283758e2c9e425c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 6 10:49:14 2016 +0200

    detect: constify Signature/SigMatch use at runtime

[33mcommit a44da9f5cb0be1c1c85ce847a86d4addaf2868d8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 18 00:41:17 2016 +0200

    detect: simplify SIG_FLAG_STATE_MATCH set logic

[33mcommit be3ee5330fdb40a4d7ee128eff43a136aabf3f6d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 23 14:24:44 2016 +0100

    detect: remove alproto from keyword registration
    
    It was already marked as depricated and no longer in use anywhere.

[33mcommit 113a238e9045f14edd17e049da7c17aa2c453fea[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 16 10:35:19 2017 +0100

    Open 4.0 development branch

[33mcommit e072a10f64cd509d09e0349050b92b02fea4df9c[m[33m ([m[1;33mtag: suricata-3.2.1[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 15 08:49:07 2017 +0100

    changelog: update for 3.2.1 release

[33mcommit 71710f088e5568621b323c253b154052e3161658[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 13 10:39:26 2017 +0100

    dns: fix outputs with 0-len A/AAAA records

[33mcommit 20990f7a7eb7939946a275dfc9a95426b0080a19[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 9 15:40:30 2017 +0100

    dns: fix out of bounds read
    
    On a zero size A or AAAA record, 4 or 16 bytes would still be
    read.
    
    Found with AFL+ASAN.

[33mcommit 4a04f814b15762eb446a5ead4d69d021512df6f8[m
Author: Jason Ish <ish@unx.ca>
Date:   Sun Feb 5 07:57:54 2017 -0600

    defrag - take protocol into account during re-assembly
    
    The IP protocol was not being used to match fragments with
    their packets allowing a carefully constructed packet
    with a different protocol to be matched, allowing re-assembly
    to complete, creating a packet that would not be re-assembled
    by the destination host.

[33mcommit 292baf0872abfebf2762e08e613565703595db6c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Feb 12 07:52:04 2017 +0100

    afl: add ethernet and erspan entry points

[33mcommit 49c41fc79e869290b1db5179b2bb92682a95f68c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 11 10:47:38 2017 +0100

    afl: clean up commandline parsing

[33mcommit b56b04f84c08ef7c7ba7f1aae7c624cc3fcaae6e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 10 19:58:27 2017 +0100

    afl: pass a packet queue to decoder calls

[33mcommit 35488eefdab64e074d33d414d8a8298ba4eb69c3[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Feb 10 11:21:57 2017 -0600

    afl: set the packet data so pktlen gets set

[33mcommit 322c260749c4ce74e912dd15572daaa344473599[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 9 19:10:02 2017 +0100

    afl: minimalistic script to start AFL fuzzers
    
    in suricata source dir:
    
    mkdir afl
    cd afl
    bash ../scripts/afl/runafl.sh decoder-ipv4

[33mcommit 6bd265258e67873e9ccaa6a84ae2d8e3170793ba[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 9 18:34:20 2017 +0100

    afl: util script to list crashed series

[33mcommit fbd69729aaa1c6089ad9037b83990704bddcbd93[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 9 18:22:18 2017 +0100

    afl: improve packet fuzz testing
    
    Due to the use of AFL_LOOP and initialization/deinit outside of it,
    part of the fuzzing relied on the global 'state' in flow and defrag.
    Because of this crashes that were found could not be reproduced. The
    saved crash input was only the last in the series.
    
    This patch addresses that. It requires a new output directory 'dump'
    where the packet fuzzers will store all their input. If the AFL_LOOP
    fails the files will not be removed and this 'serie' can be read
    again for reproducing the issue.
    
    e.g.: AFL would work with:
    --afl-decoder-ppp=@@
    
    and after a crash is found the produced serie can be read with:
    --afl-decoder-ppp-serie=1486656919-514163
    
    The series have a timestamp as name and a suffix that controls the
    order in which the files will be 'replayed' in Suricata.

[33mcommit 923d93f314ac10dd17bbb8b2cbf443bb6680614e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 9 09:45:54 2017 +0100

    afl: add decoder ipv4 option

[33mcommit 5e969779839585dbeae7b103e9e7c9016140159b[m
Author: Sascha Steinbiss <sascha@steinbiss.name>
Date:   Wed Feb 8 12:39:06 2017 +0100

    mpm-ac: fix integer overflow on allocation
    
    The size of a memory buffer to be allocated was kept in a signed int
    instead of a size_t, leading to an overflow when large lists of long
    and diverse patterns cause the amount of AC states to blow up (>2GB).
    Fixes Redmine issues #1827 and #1843.
    
    Signed-off-by: Sascha Steinbiss <sascha@steinbiss.name>

[33mcommit b25b067d9333bd1160cae643b47467cb02914446[m
Author: Sascha Steinbiss <sascha@steinbiss.name>
Date:   Wed Feb 8 12:40:00 2017 +0100

    alert: silence compiler type warning
    
    The `ts_ecr' and `ts_val' struct fields are integer types, not
    pointers. This leads GCC 6.3.0 to complain about comparisons to
    NULL.
    
    Signed-off-by: Sascha Steinbiss <sascha@steinbiss.name>

[33mcommit 86222428dd51adf2b6ff562a49e0e1ed22e0da76[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 8 13:55:34 2017 +0100

    detect: don't run IP inspection on non-IP packets
    
    The code to get the rule group (sgh) would return the group for
    IP proto 0 instead of nothing. This lead to certain types of rules
    unintentionally matching (False Positive).
    
    Since the packets weren't actually IP, the logged alert records
    were missing the IP header.
    
    Bug #2017.

[33mcommit 4683b0e662aa1349168c9706440aaeab1bef0e47[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 8 09:20:54 2017 +0100

    afl: fix ENIP, switch DNS to UDP and add --afl-dnstcp*

[33mcommit c89ce17017ae91dce20a701974e902a3947e14be[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 8 08:40:46 2017 +0100

    afl: with -Wshadow issues

[33mcommit ecf59be413f2c51960614efc4063fee6777943f2[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Nov 1 22:09:31 2016 +0100

    af-packet: add VLAN header when needed in IPS mode
    
    When packet is coming from a real ethernet card, the kernel is
    stripping the vlan header and delivering a modified packet so
    we need to insert the VLAN header back before sending the packet
    on the wire.
    
    To do so, we pass an option to the raw socket to add a reserve
    before the packet data. It will get Suricata some head room to
    to move the ethernet addresses before there actual place and
    and insert the VLAN header in the correct place.
    
    We get VLAN info from the ring buffer as the call of AFPWrite is
    always done in the release function so we still have access to the
    memory.

[33mcommit f407d77016dcf037bc533c68495b38bd36884974[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 30 20:25:41 2017 +0100

    detect-tls-sni: add link to documentation

[33mcommit c357dafed9561a50d1284f86441af3cf0b2c1c68[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 30 20:24:10 2017 +0100

    doc: document the tls_sni keyword

[33mcommit 1af713d67d215b46c665e0fa213cd603068aba2d[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 30 20:13:04 2017 +0100

    detect-tls: add url field pointing to doc

[33mcommit 0695ad4bf070a8a9ff4b1b82c6ca4d9c9c78527d[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 30 19:18:37 2017 +0100

    detect-xbits: set documentation URL

[33mcommit 21bbac56482a5c76ce153723f4daf03398bb7ea8[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Jan 31 12:32:18 2017 -0600

    dns-log: log requests even when there is no response
    
    The JSON logger had already been updated to handle
    transactions without a response. Apply the same logic
    to the older dns-log where a logger is registered
    for each direction.
    
    Fixes issue 2012.

[33mcommit d8b5bf9bc60f1e70de7611730ebd4a9fe0b954bb[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Tue Nov 29 22:10:56 2016 +0100

    app-layer-parsing: detect malformed input
    
    If the app-layer-parsing has a very long content it exceeds the maximum
    defined in "alproto_name". This adds a check for the too long content
    before it will be passed to "strlcpy" and logs an error.

[33mcommit f91d490d25ef03b86aaa26622afaa5f6fa210257[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 23 14:59:11 2016 +0100

    detect: remove unused flow_locked hint

[33mcommit 31a96d5a79c91fca3cae88351ab04d87fe30ce9c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 23 11:58:30 2016 +0100

    detect: make tenant loading less verbose

[33mcommit addf64f1f784bb152a54b43cca86e3ecdf6851a6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 23 11:08:11 2016 +0100

    profiling: fix memory leaks

[33mcommit 6e876182d7b95ddb1d91b3a86beb152fe395ba6e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 21 20:13:28 2016 +0100

    detect: use TLS_STATE_CERT_READY in cert inspect

[33mcommit 473dae75b52f37aaad3358a790652ed01b98bd7e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 21 20:10:57 2016 +0100

    tls: introduce 'cert ready' state

[33mcommit 15accc86c9e5e7457d99d2fbfab7a50302b5ff0c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 23 15:17:01 2016 +0100

    common: add BIT_U8 macro

[33mcommit e6044aaf1c572b7ef1655bdb8b122db9d8295bf1[m
Author: Sascha Steinbiss <sascha@steinbiss.name>
Date:   Fri Jan 20 15:28:41 2017 +0100

    mpm/spm: check for SSSE3 and enable/disable HS
    
    The new Hyperscan 4.4 API provides a function to check for SSSE3
    presence at runtime. This allows us to fall back to non-Hyperscan
    matchers on systems without SSSE3 even when the suricata executable
    is built with Hyperscan support. Addresses Redmine issue #2010.
    
    Signed-off-by: Sascha Steinbiss <sascha@steinbiss.name>
    Tested-by: Arturo Borrero Gonzalez <arturo@debian.org>

[33mcommit a0580d8805cfd74b8a216d9f8d3906ebe7e41cf0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 26 18:05:11 2017 +0100

    stream: initialize stream segment pool from mtu
    
    If segments section in the yaml is ommitted (default) or when the
    pool size is set to 'from_mtu', the size of the pool will be MTU
    minus 40. If the MTU couldn't be determined, it's assumed to be
    1500, so the segment size for the bool will be 1460.

[33mcommit 1ba15d3721343a670436ea7363b050702bb2f043[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 27 10:03:39 2017 +0100

    mtu: track max mtu for capture devices

[33mcommit 7ca466c5989f92ed2f54c5c4d7809ef05104777c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 27 10:15:59 2017 +0100

    shutdown: remove pid file last

[33mcommit 816dd7b30109d78b0044c6d71772223bb080812f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 25 10:13:46 2017 +0100

    startup: clean up main loop

[33mcommit 2eec07cc3abb1cf10ece854db501d3e82725eef0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 25 09:51:15 2017 +0100

    unittests: clean up registration and startup

[33mcommit f452df761ac0b0c0625a37c5748b8bc4c9330a29[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 25 09:34:57 2017 +0100

    shutdown: move global shutdown steps into func

[33mcommit babe8a299e92a0b4b4d0055c2b21deb53371be95[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 24 12:27:35 2017 +0100

    startup/shutdown: cleanup and unify with unix mode

[33mcommit 3c64cfb384dd82372644fc3ff1e6e5d0c7b82043[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 26 10:16:53 2017 +0100

    threads: fix missed logging at shutdown
    
    At shutdown, all flows that still need work are handled by the flow
    force reassembly logic. This means one or more flow end pseudo packets
    are generated and pushed through the engine for final detection and
    logging.
    
    In some cases this would not work correctly. This was caused by the
    flow timeout logic kicking in before all the 'live' packets were
    processed. Before the flow timeout handling runs the receive threads
    are disabled, however the engine did not wait for the in-flight
    packets to be fully processed. In autofp mode, packets could still
    be in the queue between receive thread(s) and flow worker(s).
    
    This patch adds a new function that 'drains' all the packet threads
    of any in-progress packets before moving on the flow timeout logic.
    
    Bug #1946.

[33mcommit f73806211a93f40873d08d865c51fba3e3d11ce9[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Jan 19 09:28:45 2017 -0600

    template script: use bash and require ed
    
    For now these scripts only work in bash, and the "ed" program
    is required.

[33mcommit 1abaf1c96d7e2a49f7d3645e48f9ab83868547c7[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Nov 18 10:53:25 2016 -0600

    templates: require the protocol name to start with a capital
    
    When running ./setup-app-layer.sh require the protocol name to
    start with a capital letter so it looks somewhat like a proper
    name. This will help give better function names.
    
    For example:
    
       ./setup-app-layer.sh IRC
       ./setup-app-layer.sh Irc
    
    will create function names starting with IRC or Irc. But we do
    not want function names to start with "irc".

[33mcommit a18af7325f7d64f983cb9a2110f87e0c937b050a[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Thu Jan 19 23:48:59 2017 +0100

    configure: prevent combination of unittests and debug-validation

[33mcommit edbb035160a2090dd0e3e8fbba55449609bbae9f[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Jan 13 11:50:35 2017 +0100

    doc: add documentation for Lua SCFlowHasAlerts

[33mcommit a2659ed7ec648ae2fe269335a76766852e915076[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Jan 13 11:46:59 2017 +0100

    output-json-flow: add has_alerts field
    
    Add has_alerts field to flow eve-log to indicate if a flow has
    any alerts or not.

[33mcommit c531e8f77cfcbe91b353ece306143439613f27cf[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Jan 13 11:08:55 2017 +0100

    lua: add SCFlowHasAlerts function
    
    Add SCFlowHasAlerts() to check if a flow has alerts. Returns true
    on alerts, false otherwise.
    
    Example:
    
      has_alerts = SCFlowHasAlerts()
      if has_alerts then
        -- do something
      end

[33mcommit d9b87e502d78497fd0e311724aff78c5bfa45d31[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Jan 13 11:03:55 2017 +0100

    flow: set flag to indicate that a flow has alerts
    
    Set FLOW_HAS_ALERTS flag on the flow on alerts. Add FlowHasAlerts(..)
    and FlowSetHasAlertsFlag(..) to check and set this flag.

[33mcommit 569cc5d238639c27a88a94069bf28d8f60809f03[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jan 19 10:52:41 2017 -0800

    util-file: introduce new functions for file size
    
    This patch introduces the FileDataSize and FileTrackedSize functions.
    The first one is just a renaming of the initial FilSize function
    whereas the other one is using the newly introduced size field as
    value.

[33mcommit a098896b285bde587db122baf0a3f6256f89d0a8[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jan 18 11:09:29 2017 -0800

    output-json-file: use size instead of FileSize
    
    FileSize is not returning the actual value when file store is not
    used.

[33mcommit fbc2dbac288f42f1c68e8fb4d9de15541568d9d7[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jan 18 11:08:21 2017 -0800

    util-file: change file size computation
    
    The file size returned by FileSize is invalid if file store is not
    used so we introduce a new size field in File structure that is used
    to store the size.

[33mcommit 187a6f392c51eb8e07a1d997fff53adabe30f6d7[m
Author: Alexander Gozman <a.gozman@securitycode.ru>
Date:   Thu Jan 19 13:31:38 2017 +0300

    Bug #2009: added CAP_NET_ADMIN for PCAP and af-packet modes.
    
    Without this capability suricata is unable to get network
    interface's settings.

[33mcommit 19e578a740057a69118149812ed2b240293a9a8e[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Jan 18 23:23:11 2017 -0600

    pcap-log: fix pcre_study error check
    
    Code was failing on a NULL return value which can be returned
    when there was nothing todo instead of an error. Instead
    check the errbuf for a non-NULL value to determine error.

[33mcommit a2d31b5e04674b9b33fb0288cddb9f0c22859d26[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 17 16:28:49 2017 +0100

    doc: napatech formatting fixes

[33mcommit b7b9b5b682aebae0faa5dfc2f141e89d0194040e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 17 16:07:37 2017 +0100

    doc: add napatech to userguide

[33mcommit 28c1516be758f835a3ae8d42cb73806667cbd0a3[m
Author: Peter Sanders <pas@napatech.com>
Date:   Fri Dec 9 15:18:47 2016 -0500

    doc: initial Napatech documentation

[33mcommit 5c553736794fdef710b34a9c9dfee06762d95bca[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Jan 18 09:32:23 2017 -0600

    app-layer-detect-proto.c: fix indent
    
    A recent commit was outdented by 1 column.

[33mcommit ec44585dcad0118036f23486a371ecfc2f1a7912[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Jan 18 09:30:48 2017 -0600

    app-layer - fix secondary probing parser logic
    
    Apply the same logic to pe2 as pe1 for determining which
    probe to call. Missed in previous commit.

[33mcommit cb36dee47783b2a7c91fd0b0138dee8bd37354b9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 18 15:13:40 2017 +0100

    hyperscan: fix minor coverity issue in error path
    
    *** CID 1398951:  API usage errors  (LOCK)
    /src/util-mpm-hs.c: 722 in SCHSPreparePatterns()
    716         SCMutexUnlock(&g_db_table_mutex);
    717
    718         SCHSFreeCompileData(cd);
    719         return 0;
    720
    721     error:
    >>>     CID 1398951:  API usage errors  (LOCK)
    >>>     "pthread_mutex_unlock" unlocks "g_db_table_mutex" while it is unlocked.
    722         SCMutexUnlock(&g_db_table_mutex);
    723         if (pd) {
    724             PatternDatabaseFree(pd);
    725         }
    726         if (cd) {

[33mcommit 15f4144edac75c831d0f1ff69c01df3a6f6d9529[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 18 11:37:25 2017 +0100

    smb: add tcp/445 to proto detect fallback

[33mcommit fa8cbd87417a58c314a48208cc6986acd56177e7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 18 11:36:33 2017 +0100

    smb: detect protocol in both directions

[33mcommit e9fccfa67c0badc26649593cd8f30a5f8c2e7055[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Jan 9 16:11:08 2017 -0600

    tx logging: only update logged tx id if all loggers logged
    
    Prevents the case where the logged id is incremented if a newer
    transaction is complete and an older one is still outstanding.
    
    For example, dns request0, unsolicited dns response, dns response0
    
    would result in the valid response0 never being logged.
    
    Similarily this could happen for:
      request0, request1, response1, response0
    
    which would end up having request0, request1 and response1 logged,
    but response0 would not be logged.

[33mcommit 0d5fd0f6580682b30628b9f1abf02e478b1eda94[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jan 17 12:59:51 2017 -0800

    util-file: fix error logic in hash computation
    
    This patch fixes an issue with hash computation resulting in the
    invalidity of at least one hash when at least two different hashes
    functions were used.
    
    Impact was setting as `force-hash: [md5, sha256]` not to be valid.
    Also it could lead to false negative if too different hash functions
    had to be used on a single file due to signatures.

[33mcommit 20111cab23a5281c08d5982df9195ba47ca1c202[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Jan 17 15:48:33 2017 -0600

    unix-socket: fix shadowed variable
    
    ret does not need to be redefined here, the existing
    declaration of ret can be used.

[33mcommit 3e70d7befc198a5c55944bc7ef0899f31f1a3d1f[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Jan 17 15:39:15 2017 -0600

    travis: export CFLAGS on linux

[33mcommit f180ed8715aed4db725053156fc2ee53a948a0b0[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Jan 17 15:31:25 2017 -0600

    travis: add a build with -DNDEBUG

[33mcommit f964cdbc937df5e2864eaea319a0b2f8038d112f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 11 15:36:15 2017 +0100

    address parsing: fix memory leak in error path

[33mcommit a6fccd952e39a220454c057b77f90b9abc08ffa6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 11 15:32:45 2017 +0100

    ssl: suppress scan-build warnings

[33mcommit 61b72c6981fd578a00b2bf9e1c8a10f2b741e4b5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 11 15:20:25 2017 +0100

    output: clean up output function
    
    Don't allocate memory per call.

[33mcommit 709d20f8c62e03c308279004c1fa93a0ba007b72[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 11 14:55:34 2017 +0100

    smb/dcerpc: suppress scan-build warnings

[33mcommit 618ab4e177b054e9b8e227d8cf78f8b0a7454050[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 11 14:55:13 2017 +0100

    ac-bs: fix scan-build warnings

[33mcommit bbc02205fb8c398f2d9890254c209e52aea831fd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 11 14:34:41 2017 +0100

    queue: add debug assertions to TAILQ
    
    To avoid scan-build fp's add assertions that are only active if
    built with scan-build.

[33mcommit f08cc1f3db1cae44274c15855d1e4fce6141ff31[m
Author: Travis Green <travis@travisgreen.net>
Date:   Wed Dec 21 08:56:15 2016 -0700

    yaml: update commented rule files
    
    Disabled scada.rules, added commented rule file names to help
    administrators find informational rule files.

[33mcommit 03ad9d4ec01c9915dea60787147ecad56d7536c9[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu Dec 22 08:38:46 2016 +0100

    tls-store: fix bug that causes Suricata to crash
    
    Fix bug that causes Suricata to crash when the tls.store keyword is used.
    
    *** Error in `/usr/bin/suricata': free(): invalid next size (fast):
    0x00007fd4b4373180 ***

[33mcommit 87b5bf9541acc5bb3b64bf667a31b90f9fd6e075[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Jan 16 10:44:19 2017 -0600

    proto detect - fix coverity CID 1204325
    
    CID 1204325 (#1 of 1): Logically dead code (DEADCODE)
    dead_error_line: Execution cannot reach this statement: mask = 0U;.
    433        mask = 0;
    
    additionally, mask is initialized to 0

[33mcommit d09cd16c8c0be79c02422ffc86297709e150421a[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Jan 16 10:38:08 2017 -0600

    template logger - fix coverity CID 1324964
    
    null: At condition templatejs != NULL, the value of templatejs must be
    NULL.
    dead_error_condition: The condition templatejs != NULL cannot be true.
    113    if (templatejs != NULL) {
    CID 1324964 (#1 of 1): Logically dead code (DEADCODE)
    dead_error_line: Execution cannot reach this statement:
    json_decref(templatejs);.
    114        json_decref(templatejs);
    115    }

[33mcommit a10a9220cf8f9072b6c3ad771525a333ab990f8c[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Jan 16 10:34:19 2017 -0600

    dns (tcp) - fix coverity CIDs 1374306, 1374305
    
    CID 1374306 (#1 of 1): Dereference before null check (REVERSE_INULL)
    check_after_deref: Null-checking dns_state suggests that it may be null,
    but it has already been dereferenced on all paths leading to the check.
    585    if (dns_state != NULL && f != NULL) {
    586        dns_state->last_req = f->lastts;
    587    }
    
    CID 1374305 (#1 of 1): Dereference before null check (REVERSE_INULL)
    check_after_deref: Null-checking dns_state suggests that it may be null,
    but it has already been dereferenced on all paths leading to the check.
    366    if (dns_state != NULL && f != NULL) {
    367        dns_state->last_req = f->lastts;
    368    }

[33mcommit dfbfb50f6409a4c380f233706402ded243155392[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Jan 16 10:31:01 2017 -0600

    dns (tcp) - fix coverity cid 1374307
    
    CID 1374307 (#1 of 1): Dereference before null check (REVERSE_INULL)
    check_after_deref: Null-checking dns_state suggests that it may be null,
    but it has already been dereferenced on all paths leading to the check.
    317    if (dns_state != NULL && f != NULL) {
    318        dns_state->last_resp = f->lastts;
    319    }

[33mcommit 5b1de57d732f1c938cd3b781059d79ca974f2e0c[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jan 10 14:46:48 2017 -0800

    detect-parse: simplify port prefiltering
    
    Regular expression was not matching some authorized setting like
    "![1234, 1235]". This patch simplify the regexp to match on
    possible character and let the port parsing code handle the
    complete verification.

[33mcommit b0de5ad1a848e75ee4c3245c124ccef2343fde7e[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Jan 9 15:13:16 2017 -0600

    dns: increment tx id when allocated during response

[33mcommit fe4e119278a09185076fa25f22f7ad6ed5d0c3ea[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 16 16:00:25 2017 +0100

    common: improve BUG_ON
    
    When BUG_ON is a wrapper for assert(), we risk getting rid of certain
    code lines. Assert is a no-op when NDEBUG is defined.
    
    This patch defines an alternate path for BUG_ON that exits after
    printing an error.
    
    Bug #2003.

[33mcommit 98e8b13bf085ee7aed42cf938de07e6f3c4bccbe[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Fri Jan 13 23:44:57 2017 +0100

    decode-icmpv6: add missing types
    
    There have been some ICMPv6 types missing within the DecodeICMPV6 that
    are added by this commit and the code check is adjusted to always use
    the DEFINE.

[33mcommit bcdbd12839859910c7876104fcdd15abd4e84175[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Dec 20 15:37:33 2016 -0600

    dns (tcp): register a to_client (response) probing parser
    
    Just a minimal parser to make sure the data contains at
    least a header.

[33mcommit c35c18a7975e13412a19d76e4c907c15fd95951c[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Dec 20 14:50:58 2016 -0600

    app-layer: support to server and to client probing parsers
    
    When registering a probing parser allow to_server and
    to_client parsers to be registered. Previously the
    probing parser may be called for both directions which
    in some cases works OK, but in others can cause
    the to_client side to be detected as failed.

[33mcommit 586774203f69131baad05bb57c5627b239e9a9d6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 22 21:46:20 2016 +0100

    redis: support for all output types

[33mcommit 2820ed332e4fa09e1e60e9733cdb3aeb3780893c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 22 18:04:29 2016 +0100

    redis: use 'binary' notation for output

[33mcommit df28c1ac6eb318c6ccb29062052e4c99f84217e4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 15 16:17:33 2016 +0100

    common: add WARN_UNUSED macro

[33mcommit 8c65d45d55cc4945346f98dd3417ef2fbd2943ca[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 14 14:24:44 2016 +0100

    detect: remove dead code

[33mcommit 63a3b8412753c78414ef28a8f0d3cdb6670dfcee[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Dec 20 10:43:07 2016 +0100

    util-magic: fix build when magic is not available
    
    If HAVE_MAGIC is not defined then we don't have the test functions
    so we can't register them.

[33mcommit bc38cd593224405c1bb55284524533200b6a944f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 14 17:29:54 2016 +0200

    doc: initial xbits documentation

[33mcommit cb08f02140c0097734853977abb5db642f5b3d9d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 13 12:42:17 2016 +0200

    xbits: clean up parsing and tests

[33mcommit 27ec81118715bacc9ec50a75ac6b5efdb1e489e7[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Dec 19 09:11:48 2016 -0600

    pcap-log: fix memory leak during initialization of ring buffer
    
    A free was missing when files are removed during initialization
    of the ring buffer.
    
    Redmine issue:
    https://redmine.openinfosecfoundation.org/issues/1985

[33mcommit 9f6b58747b6939ec1c04019ea03aadf8432b3f5a[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Dec 14 18:01:09 2016 +0100

    smtp: commands and replies are not case sensitive
    
    RFC states that "Commands and replies are not case sensitive" and
    patterns were registered to be case sensitive. So this patch fixes
    a trivial evasion of SMTP signatures.

[33mcommit ffcb4ad232da6250199477d413ae13fee6d2a945[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Dec 16 14:43:43 2016 +0100

    tls: fix tls_cert_subject prefilter bug
    
    If check in prefilter was checking that issuer was non-NULL, when
    it in fact should be checking subject.

[33mcommit 10c93221faf841e0819c4d84604ced63500fd1e1[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Dec 16 13:04:03 2016 +0100

    tls: increase max number of tls records per packet
    
    Tls packets may contain several records. This increase the number
    of allowed records per packet from 30 to 255, and adds a new and
    more informative decoder event when this limit is reached.

[33mcommit 554065189c6734c52467d107aac30f7e77441fa4[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Dec 13 14:56:26 2016 +0100

    tls: don't trigger decoder event on no extensions in CLIENT_HELLO
    
    No extensions are allowed in <TLSv.1.2, so don't trigger SURICATA
    TLS handshake invalid length decoder event when no extensions are
    specified in CLIENT HELLO.

[33mcommit 810e43f373480662c5092aa3d3de81479711abe7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 13 08:36:25 2016 -0500

    magic: make optional
    
    Make libmagic optional. If installed it will be enabled by default in
    configure. Use --disable-libmagic to disable.

[33mcommit 79a3c6c7b1f1b2a99191ff8df4deb43f12c9c547[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Dec 15 12:36:25 2016 -0600

    log-pcap: use a snaplen of 262144 instead of -1.
    
    Newer versions of libpcap will not open pcap files with a
    snaplen of -1, instead use the current maximum value of
    262144.
    
    Issue:
    https://redmine.openinfosecfoundation.org/issues/1987

[33mcommit 41074a87a02daae8a225316672bd536d1e428400[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Dec 4 11:10:18 2016 +0100

    doc: DNP3 support is now available

[33mcommit a44b612a4172885dea288ec7a55d07ba088b7728[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 16 12:11:18 2016 +0100

    hostbits/xbits: free hostbit
    
    Fix memory leak. Hostbits were not actually freed.
    
    Bug #1975.

[33mcommit 579d6d3ff77af42d3d7d1b85a68a1f55c704fbf3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 13 10:23:21 2016 +0100

    http: allow lower/mixed case in proto detect
    
    In HTTP detection registered patterns were upper case only. Since the
    detection is based on both sides this would still work for sessions
    where one of the talkers misbehaved. If both sides misbehave this
    would fail however, so this patch introduces case insensive matching.

[33mcommit 94bc7e5f5f4756e0a4495227ee6dde2c7bba85ef[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Nov 29 11:03:03 2016 -0600

    travis: use a build matrix and add additional builds
    
    The following builds were added:
    - linux, clang with -Wshadow
    - linux w/ profiling
    - linux w/ debug
    - linux w/ no-json support
    
    Removes the extra OS X build.
    
    Travis file was reworked signficantly for readabilty.

[33mcommit 92885d6960135b5f5f0c6a0e18ee796031b7f752[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Nov 29 10:45:02 2016 -0600

    profiling: fix shadow error
    
    Local variable store was shadowing variable in function
    definition.

[33mcommit abbc0f76eb4cd5005312f3b0f2eabd0f473c40a5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 2 10:10:20 2016 +0100

    unix-socket: clean up path handling
    
    Create/check socket path in a single place. Don't use dynamic
    memory allocation.

[33mcommit c5e550b10d4b61fb5be4b117679bd2cab00420e5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 1 15:19:35 2016 +0100

    unix-socket: create socket directory if possible
    
    Create the socket directory in the default case.
    
    Since we're doing stat+mkdir indicate to Coverity not to worry about
    the toctou case.

[33mcommit 3f741e450bbcf96cf13f3f8697f51e4717fe1779[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 1 15:06:57 2016 +0100

    unix-socket: be more specific about problems

[33mcommit 93680136452e0fb534ab57e9ab6eba0ccbe830a5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 1 14:54:04 2016 +0100

    unix-socket: don't error out on unix socket failure
    
    If --init-errors-fatal is specified do error out.
    
    Bug https://redmine.openinfosecfoundation.org/issues/1973

[33mcommit 7db3172479cce5b76c76bf5725c6f46b6078ce77[m[33m ([m[1;33mtag: suricata-3.2[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 29 18:15:42 2016 +0100

    Update Changelog for 3.2 release

[33mcommit 2ce95babd6d83d503f15b0e383087c16f4537528[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Nov 29 07:57:02 2016 -0600

    dnp3: use _ in keyword names instead of "."
    
    dnp3.ind -> dnp3_ind
    dnp3.func -> dnp3_func
    dnp3.obj -> dnp3_obj
    
    The variations with a "." are now aliases.

[33mcommit ab8faefd3751b8db6009e4a4df62bb5236da0ec4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 7 13:49:40 2016 +0200

    af-packet: fix fanout support on Debian Jessie
    
    Debian Jessie with kernel 3.16 would not accept the 'id' of 99 used
    in the test. Id 1 does work.

[33mcommit e492f0dc8908ef64acb844e94f5d71b15baa0ada[m
Author: Alexander Gozman <a.gozman@securitycode.ru>
Date:   Wed Oct 12 11:12:34 2016 +0300

    Fix port parsing in config file, added one more corresponding test.
    
    Some examples from wiki caused parsing errors.
    For example, "[1:80,![2,4]]" was treated as a mistake.
    
    Also fixed loop detection in variables declaration. For example,
    'A: "HOME_NET, !$HOME_NET"' resulted in parsing error.

[33mcommit 8b8426934fed76c0d01e86999f592b9076ec528f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 29 09:29:17 2016 +0100

    qa: only run cocci tests on one linux builder

[33mcommit 51f5ce6563e9d9f085154b2fc36e005564d72dfd[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Nov 28 10:23:34 2016 -0600

    travis: macos support

[33mcommit ba6a1aa73ebbb5fb9eb3bb03c7e33cad9a0d68db[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Nov 28 12:19:52 2016 -0600

    unittest-helper: fix format string compiler warnings

[33mcommit 4aceaf9fcd2c0a9fca174a38d0e754d0028c2a3a[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Nov 28 12:19:13 2016 -0600

    detect-stream_size: fix format string compiler warnings

[33mcommit c0377a98708f897805f980ff1b87581bf785a555[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Nov 28 12:18:47 2016 -0600

    stream-tcp: fix format string compiler warnings

[33mcommit 5c80a3edf794929b48df75e9dde2ee3c187300bd[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Nov 28 12:18:23 2016 -0600

    modbus: fix format string compiler warnings

[33mcommit 53a8c75385100cf14b1c0dc6d7d6084b78e0ef49[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Nov 28 10:07:41 2016 -0600

    dnp3: rename "index" variables to "point_index"
    
    Gcc 4.6 will warning with -Wshadow for a local variable
    named "index" as <strings.h> has a function named "index".
    
    Newer versions of gcc handle this case.

[33mcommit 2a0bb108d02755aec142c9523b99f87f956eea7a[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Nov 28 10:06:14 2016 -0600

    dnp3-gen: rename index variable to point_index
    
    Gcc 4.6 will warning with -Wshadow for a local variable
    named "index" as <strings.h> has a function named "index".
    
    Newer versions of gcc handle this case.

[33mcommit 4d8e9ae6656e4d420ba4fcf1a8d9b5d581bd277d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 14:40:20 2016 +0100

    qa: add -Wshadow to appveyor builds

[33mcommit b4ac048b41a60c2a705125d83b397ac4a269b6d0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 13:03:34 2016 +0100

    proto detect: fix -Wshadow warning

[33mcommit 07e1e3e02a46a1173171b9fee0c3fe68e016f270[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 12:54:16 2016 +0100

    dcerpc: fix -Wshadow warnings

[33mcommit 783d2991e5c0bfb2eaa317e3cfd626410ffbada2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 12:51:52 2016 +0100

    commandline: fix -Wshadow warnings

[33mcommit 66c213f30c5d0eb85e09a7917324303f0f0cd15d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 12:36:41 2016 +0100

    detect-address: fix -Wshadow warnings

[33mcommit 9a20335b6de9876d7c0b18350645d007f0ab6eea[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 12:36:26 2016 +0100

    asn1: fix -Wshadow warnings

[33mcommit dab51144af030982d96f71a5cfde9091c43babfd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 12:24:35 2016 +0100

    asn1: modernize test

[33mcommit 613174e9ceff45b28b511c6ee4e06cbbf4318e1e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 12:24:19 2016 +0100

    yaml: fix tests for -Wshadow

[33mcommit 968813b6559586d6ccb47bf4c8fba51c04036c81[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 12:24:03 2016 +0100

    dnp3: fix test for -Wshadow

[33mcommit bb2d8a713382984b90b20d425230f32ce4106b3e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 10:29:25 2016 +0100

    runmodes: fix -Wshadow warnings

[33mcommit 8c1d157cd22b14ec1d6c4ae2cb4de22865f89f0b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 10:27:34 2016 +0100

    mpm ac-bs: fix -Wshadow warnings

[33mcommit 0d6d8e01c82cf31ec6e09137d350e0b0e692bab2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 10:27:18 2016 +0100

    threads: fix -Wshadow warnings

[33mcommit cd04da673b626676128ba2c7459de8ecee279f2e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 10:21:53 2016 +0100

    commandline: fix -Wshadow warnings

[33mcommit 69ee2f0eb94b62d1971836cb6abc8b2027ef2dba[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 10:18:03 2016 +0100

    nfq: fix -Wshadow warnings
    
    Rename globals to make sure it's clear they are globals.

[33mcommit 65d2443ccdb37e3203ef6178cde061cf3728ed31[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 10:11:44 2016 +0100

    reputation: fix -Wshadow warnings

[33mcommit d893bc55e0fa19c2ae1bc3d71494c7a713029c8f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 10:10:40 2016 +0100

    eve-flow: fix -Wshadow warning

[33mcommit 9477fd46287f8285f555e8b15a4542d6d4a3dfe9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 10:09:16 2016 +0100

    eve-file: fix -Wshadow warnings

[33mcommit ed0918bc35aea78599e3bd879607ab9f4d0f6b16[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 10:07:39 2016 +0100

    ippair: fix -Wshadow warning

[33mcommit 5f786b5cd7cd345c020bbe2e6eba78283def80aa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 10:07:25 2016 +0100

    host: fix -Wshadow warning

[33mcommit 0c3b89356e77c8a6dc7cccfd5b3f3164b4c07189[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 10:07:09 2016 +0100

    flow: fix -Wshadow warning

[33mcommit 70452f67a4bae237fb9012e94ab1aa1cc80ae979[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 10:06:42 2016 +0100

    within: fix -Wshadow warning

[33mcommit 47c4a8cd28facb3f172a4dd2fc86a082a398bfb6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 10:05:51 2016 +0100

    prefilter: fix -Wshadow warnings

[33mcommit f2f0f84ccab2ef060864233d1e908c8c99fb4ed4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 10:04:25 2016 +0100

    detect: fix -Wshadow warning

[33mcommit 070a6caaf322f04dee60c18e61295f1496af7770[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 10:03:11 2016 +0100

    app engines: fix -Wshadow warning

[33mcommit 691fae6520b3d2abe165fe9e51fa7c4d94ff1587[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 10:01:52 2016 +0100

    address: fix -Wshadow warning

[33mcommit 34b030b45fd68608e7086d93cb451615cf6d797d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 10:00:35 2016 +0100

    distance: fix -Wshadow warning

[33mcommit d50b4b84711daf23a2e5c3ea650368677edc4123[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 09:59:05 2016 +0100

    content: fix -Wshadow warning

[33mcommit 02df79f67b297d82a21cf1ca09da4154012f0d0d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 09:58:44 2016 +0100

    mem: fix SCStrdup -Wshadow warning

[33mcommit f97e857c02fbee2e39c23b853169cc006587aa0e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 09:55:17 2016 +0100

    dns: fix -Wshadow warnings

[33mcommit 6a971a5a0278ed7ee1c2e7b9a2e5920ed5f8c59b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 09:48:22 2016 +0100

    app-layer-proto-detect: fix -Wshadow warning

[33mcommit 287fd837960e39f425fcb438cf4af94ce978717b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 09:44:23 2016 +0100

    dnp3: fix coverity CID 1374300

[33mcommit 8915f2de386064856554cd1501bd0f2132fe7127[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 13:53:57 2016 +0100

    flow: suppress coverity CID 400600

[33mcommit edcc8e7ec9652465724ef09f0a46d80d12b0a6e0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 09:39:02 2016 +0100

    stat: suppress CID 1293508 and 1312013

[33mcommit 7021959689d46eb2d9c859456162165b0b5869d7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 09:34:43 2016 +0100

    nfq: suppress CID 1374302 and 1374303

[33mcommit da6bf0c1b688a3787808f17e11de684295f5d910[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 09:20:01 2016 +0100

    host-info: coverity 1298890

[33mcommit 9904b3f3480d08ccf4396912c0bf83f804633a12[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 09:16:05 2016 +0100

    ttl: coverity 400560 + minor cleanups

[33mcommit d30f7f6b4850e52562e144afae2b15cef7d3d1de[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 09:12:23 2016 +0100

    tos: coverity 400559

[33mcommit ad8f9f93346fed7c5ab9cd85d2a71560014ff541[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 09:11:42 2016 +0100

    ssl-state: coverity 400558

[33mcommit c91974e24adefc44a6a321b037cc8ef9713d178e[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Nov 24 11:21:48 2016 -0600

    issue 1961: depth: fail if numeric value has trailing text
    
    Catches the case where the depth is not terminated with a
    semicolon (eg: "depth:17 classtype:trojan-activity") which
    is usually a sign the rule has a missing semi-colon.

[33mcommit a1eca40611e4526bc921ca6461dbb330f82ed575[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Nov 24 10:59:15 2016 -0600

    log-pcap.c: cleanup scan-build warning
    
    Don't initialize value to a value that is never used.

[33mcommit 553f7ec290441dccffec5f63e5f1033bc79c0683[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Nov 24 10:36:27 2016 -0600

    log-pcap.c: fix resource leak found by coverity
    
    Goto the failure label instead of returning which will allow the open
    directory to get cleaned up.
    
    Fixes:
    
    *** CID 1394675:  Resource leaks  (RESOURCE_LEAK)
    /src/log-pcap.c: 615 in PcapLogInitRingBuffer()
    609                  * failure as the file might just not be a pcap log file. */
    610                 continue;
    611             }
    612
    613             PcapFileName *pf = SCCalloc(sizeof(*pf), 1);
    614             if (unlikely(pf == NULL)) {
    >>>     CID 1394675:  Resource leaks  (RESOURCE_LEAK)
    >>>     Variable "dir" going out of scope leaks the storage it points to.
    615                 return TM_ECODE_FAILED;
    616             }
    617             char path[PATH_MAX];
    618             snprintf(path, PATH_MAX - 1, "%s/%s", pattern, entry->d_name);
    619             if ((pf->filename = SCStrdup(path)) == NULL) {
    620                 goto fail;
    
    This also means that pf can be NULL which should clear up CID
    1394676 (REVERSE_INULL).

[33mcommit 0c6c9784a2cf633cd0cc468d8ff9bb01d7312f0b[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Nov 23 15:59:28 2016 -0600

    doc: document that that ;, \, " need to be escaped in rules

[33mcommit a67c31d4e164b04c1ec5766b692bf984790cdad5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 23 15:27:28 2016 +0100

    qa: appveyor support

[33mcommit e6ed0d815c02db335383fa40e2391e07ea3234af[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 24 13:31:05 2016 +0100

    qa: update url in libhtp script

[33mcommit bbb93e487e6a4c206b158335128f108c8b08f909[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Sep 23 20:46:06 2016 -0600

    pcap-log: seed ring buffer on start up
    
    On start, look for existing pcap log files and add them to
    the ring buffer. This makes pcap-log self maintaining over
    restarts removing the need for external tools to clear
    orphaned files.

[33mcommit a2e2f50fb933d9d6a0c15b23d28a71b5fc80ff13[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Nov 9 14:08:07 2016 -0500

    documentation: fix list keywords URLs
    
    Update URLs in keyword definition to point to sphinx documentation.

[33mcommit fffdc6e3fdbf9e3912ec5e5faf731554f1dcc90f[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Nov 8 12:02:23 2016 -0500

    logging: hook the application log file into rotation

[33mcommit 73a1d047790dac5ef3d336d996be517cc205a5c0[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Nov 8 10:13:01 2016 -0500

    logging: open application log file in append mode
    
    It was being open in read/write mode, which was likely
    a mistake with append mode being the intention.

[33mcommit 666fecc5795d57c5bf7c8b619ff5159a4954a95f[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Nov 7 10:46:45 2016 -0500

    dns: accept a data length of 0 without marking as malformed
    
    Addresses issue:
    https://redmine.openinfosecfoundation.org/issues/1924

[33mcommit b9ba792279a8bab2255cba960e977e2cc549596c[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Nov 7 10:02:18 2016 -0500

    dns-events: fix direction of malformed events + typo

[33mcommit d5eca41a715640d9af3b8229a8dec50fbad3fb22[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Nov 21 10:24:17 2016 -0600

    ipfw: disable more code to suppress compiler warnings
    
    Disabled code lead to unused variable warnings, so disable the
    variable code as well.

[33mcommit 2b874abada529288fb54e7274b458e980cfb186c[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Nov 21 10:16:14 2016 -0600

    compiler warnings: fix compiler warnings in format strings

[33mcommit 3f8ee2afd3b861486ae6380d80dfd1966c6b61b1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 18 11:18:57 2016 +0100

    detect-lua: unify on using 'lua' name vs 'luajit'

[33mcommit 0366d47608eeb00bb69ff93d2b8cef354c3435ec[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 18 11:18:33 2016 +0100

    luajit: remove unused instance counter

[33mcommit 3012edae1cc3989d6b461366b06672e3c7776d5c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 17 14:27:41 2016 +0100

    luajit: update default yaml and doc for 'states'

[33mcommit 3da7dad514fff3469d14f8eb9993062cabaee523[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 17 08:54:44 2016 +0100

    lua: luajit improvements
    
    Luajit has a strange memory requirement, it's 'states' need to be in the
    first 2G of the process' memory.
    
    This patch improves the pool approach by moving it to the front of the
    start up.
    
    A new config option 'luajit.states' is added to control how many states
    are preallocated. It defaults to 128.
    
    Add a warning when more states are used then preallocated. This may fail
    if flow/stream/detect engines use a lot of memory. Add hint at exit that
    gives the max states in use if it's higher than the default.

[33mcommit 0792f80909ad86506a95954348a007301e951bba[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Nov 18 11:50:02 2016 -0600

    doc: only build pdf on dist if pdflatex is installed

[33mcommit ee16b86900c50364078f5a43e2e18bd4d352bb55[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Nov 18 11:41:11 2016 -0600

    doc: fix build pdf on non gnu make platforms
    
    The Makefile generated by sphinx-build is GNU Make specific
    causing the PDF phase to fail. Instead call pdflatex directly
    based on how the generated Makefile was doing it.

[33mcommit 064c070db7127d8670bbf7da84a36988bbf1214b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 23 10:35:42 2016 +0100

    pcap-file: minor cleanup

[33mcommit f9f5e8a348e8c042bf0798aa5a1d1797ff2c04be[m[33m ([m[1;33mtag: suricata-3.2RC1[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 1 13:11:18 2016 +0100

    changelog: update for 3.2RC1 release

[33mcommit 397336316496d89beda4bbd28a58be76c49c5a0d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 31 14:11:57 2016 +0100

    yaml: group ICS protocols together

[33mcommit b2315589576c1c7f81f803030b96b03e31126943[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 31 14:10:53 2016 +0100

    ENIP: add default ports to yaml

[33mcommit 238163bc8d3c3b7a60ba677b10c9089638fe7f8f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 31 13:41:46 2016 +0100

    ENIP: disable parser if no config found

[33mcommit 080a2f0cfb159eb0c8ea12bd333a61b3238b93e3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 31 13:40:19 2016 +0100

    DNP3: disable in case of no dnp3 config

[33mcommit 12849fa9278298f7347abb5a078cb6f2cac2c609[m
Author: Priit Laes <priit.laes@icefire.ee>
Date:   Thu Oct 27 14:41:00 2016 +0300

    readme: Fix markdown header levels

[33mcommit 6d9733a72b122c5478c10c2de88bc85379863b8b[m
Author: Priit Laes <priit.laes@icefire.ee>
Date:   Thu Oct 27 14:38:28 2016 +0300

    readme: reformat some key points about possible security issues

[33mcommit d709bf49e8e494c89ade36a6c743e79b10836e64[m
Author: Priit Laes <priit.laes@icefire.ee>
Date:   Thu Oct 27 14:37:56 2016 +0300

    readme: Add link to up-to-date user guide and mark wiki as deprecated.

[33mcommit 65bf06975c8efdde3b542f44403e2d253e88d91d[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Oct 27 11:19:05 2016 -0600

    dnp3: fix coverity checks; return value not checked

[33mcommit 1f670837acd702159ce4edb4aac0abd4265758a9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 31 11:30:26 2016 +0100

    detect: add missing break (CID 1374301)

[33mcommit c0f25bddaf3a5b05d8fc963b37472878eeeb175f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 31 11:14:41 2016 +0100

    eve: make payload printing in alerts more robust

[33mcommit 39a23d8d1b2240ba826dad464e45a1d5b0f2adc5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 28 12:23:23 2016 +0200

    flowint: allow / in name

[33mcommit 56ff853e733235ac0e02284c1843c7bdcc6d45f1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 25 21:15:44 2016 +0200

    hostbits: test fixes

[33mcommit 8831e5b375797c07992758c5d7f3c5167c1c4f72[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 27 14:56:21 2016 +0200

    pkt-var: const name

[33mcommit 5dc9c1b8748fea884bf83dc376972fac00f4c007[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 27 11:55:28 2016 +0200

    DNP3: minor cleanup

[33mcommit 7cf231c7ecfa96df408825c87dc363a1e3c83bf6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 27 11:55:17 2016 +0200

    DNP3: don't leak memory on dnp3_obj parsing

[33mcommit f0de1d04a9a9eca4eabf74fba0cf9f60f35fbc1f[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Jul 13 09:04:15 2016 -0600

    DNP3: Use directional logging.
    
    Instead of waiting for a transaction complete, log the
    request as soon as it is completes which will give it a
    more accurate timestamp.

[33mcommit f70badeb0e9a3c9f55023a57abefc9857d2f729f[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Apr 15 16:49:28 2016 -0600

    DNP3: --afl-dnp3 entry point

[33mcommit a59f31a99fc775d8962ad11fbfb4cc3413710ffd[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Dec 10 11:59:48 2015 -0600

    DNP3: Lua detect support.
    
    Adds support for access the DNP3 transaction in Lua rules.

[33mcommit 44a69f63556a99317162aceabed2e95606c89047[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Sep 28 16:33:48 2015 -0600

    DNP3: Log DNP3 info with DNP3 alert.

[33mcommit 1c3f37354383884075e69397abdc2820d95d1fe2[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu May 7 11:53:39 2015 -0600

    DNP3: Log DNP3 transactions.

[33mcommit 1a31bded4a18311b4bbe78db2574ae8546cae711[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Apr 10 10:22:25 2015 -0600

    DNP3: dnp3_data, dnp3_func, dnp3_ind, dnp3_obj rule keywords

[33mcommit bbaa79b80e4faea321593eb4aa552f976357ac86[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Apr 10 09:33:20 2015 -0600

    DNP3: Application layer decoder.
    
    Decodes TCP DNP3 and raises some DNP3 decoder alerts.

[33mcommit 240d789c40b51c475da56c2c4a7a67ab2f508809[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Feb 8 15:16:01 2016 -0600

    DNP3: dnp3-gen: code generator for repetitive DNP3 code

[33mcommit da40714cb12b7e2642e42be253b4f33b8bf79ecb[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Apr 25 00:17:58 2016 -0600

    common: define json_boolean when not defined
    
    Older versions of jansson in current use don't have this
    macro defined.

[33mcommit f6c0abaae7fb91e9b2f867c519b97662260f9934[m
Author: fooinha <fooinha@gmail.com>
Date:   Mon Oct 24 15:52:06 2016 +0000

    eve: check redis reply in non pipeline mode
    
    We may lose the reply if disconnection happens.
    Reconnection is needed.

[33mcommit 2758f825151925c8fce8cb618cd43fac14ab6d38[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 26 16:19:13 2016 +0200

    flowvar: cleanups

[33mcommit 9d271e9a71140d7cfa48922d249f40f670193cba[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Oct 26 15:34:43 2016 -0600

    fast-pattern: fix tls_sni
    
    Use all 38 arguments in call to SigMatchGetLastSMFromLists
    
    Was preventing fast_pattern from being applied to tls_sni:
    https://redmine.openinfosecfoundation.org/issues/1936

[33mcommit 7d734edca84c0fd1ba03cf2f89ccfdd4ab58a605[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Oct 25 14:56:09 2016 -0600

    dns: use new unittest macros

[33mcommit a8f6fb0f78448c4cd757d99361a2ee83fcb84ed1[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Oct 25 00:13:07 2016 -0600

    dns: support back to back requests without a response
    
    Address the issue where a DNS response would not be logged when
    the traffic is like:
    - Request 1
    - Request 2
    - Response 1
    - Response 2
    which can happen on dual stack machines where the request for A
    and AAAA are sent out at the same time on the same UDP "session".
    
    A "window" is used to set the maximum number of outstanding
    responses before considering the olders lost.

[33mcommit 64cc91a569fd78550fe64d7dc3fe0985945d0eb2[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Oct 26 09:48:42 2016 -0600

    tcp dns: unit test for multi-request buffer

[33mcommit 2d4df19401968a56754b8f1acfd9613792003feb[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Oct 25 14:13:31 2016 -0600

    tcp dns: fix advancement to next request in buffer
    
    The advancement through the buffer was not taking into account
    the size of the length field resulting in the second request
    being detected as bad data.

[33mcommit db1c47cb6e5cea4db5828fac9fa5396d85df6e8a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 26 10:33:55 2016 +0200

    multi-tenant: make less verbose

[33mcommit 51bb1f0d7774351d00c6c1257cc20603ae18391c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 25 20:58:53 2016 +0200

    multi-tenants: fix minor memleak

[33mcommit 059b25b56474ffe3cc0f1811056a99ef321c75cb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 26 10:34:28 2016 +0200

    detect: suppress debug message for reloads

[33mcommit 321fb6463e0e8e6cf20c53dfdc28f83fc1b7e7de[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 20 14:21:53 2016 +0200

    vars: small cleanups

[33mcommit e4b2729399d2fbd1499983006f75017e74dfc131[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 25 14:31:41 2016 +0200

    nfq: support bypass for rebuilt fragment packets

[33mcommit 629fa3034587ef8010e4f559ffa03dcfaa4b626d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 25 14:25:55 2016 +0200

    nfq_set_mask: set mark on root pkt for tunnels

[33mcommit d8acf3542dec7265f4da7d33e22f3de2c3a39596[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Oct 19 22:05:25 2016 +0200

    source-nfq: document bypass function

[33mcommit e0000eb58da21eb04c9e85a3f942c642e579b9da[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Oct 12 22:18:12 2016 +0200

    source-nfq: fix tunnel mark callback algorithm
    
    In case of a tunnel packet, adding a mark to the root packet will have
    for consequence to bypass all the flows that are hosted in this tunnel.
    This is not the attended behavior and as initial fix let's simply warn
    suricata that bypass for NFQ is not possible for this kind of packets.
    
    This patch also fixes a segfault. The root packet was accessed even if it is
    NULL causing a NULL dereference:
    
    ASAN:SIGSEGV
    =================================================================
    ==24408==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000060 (pc 0x00000076f948 bp 0x7f435c000240 sp 0x7f435c000220 T5)
    ASAN:SIGSEGV
    ==24408==AddressSanitizer: while reporting a bug found another one. Ignoring.
        #0 0x76f947 in NFQBypassCallback /home/victor/dev/suricata/src/source-nfq.c:510
        #1 0x4d0f02 in PacketBypassCallback /home/victor/dev/suricata/src/decode.c:395
        #2 0x7b8a95 in StreamTcpPacket /home/victor/dev/suricata/src/stream-tcp.c:4661
        #3 0x7b9ddd in StreamTcp /home/victor/dev/suricata/src/stream-tcp.c:4913
        #4 0x68fa50 in FlowWorker /home/victor/dev/suricata/src/flow-worker.c:194
        #5 0x7f0abd in TmThreadsSlotVarRun /home/victor/dev/suricata/src/tm-threads.c:128
        #6 0x7f2958 in TmThreadsSlotVar /home/victor/dev/suricata/src/tm-threads.c:585
        #7 0x7f436368e6f9 in start_thread (/lib/x86_64-linux-gnu/libpthread.so.0+0x76f9)
        #8 0x7f4362802b5c in clone (/lib/x86_64-linux-gnu/libc.so.6+0x106b5c)
    
    AddressSanitizer can not provide additional info.
    SUMMARY: AddressSanitizer: SEGV /home/victor/dev/suricata/src/source-nfq.c:510 NFQBypassCallback
    Thread T5 (W#04) created by T0 (Suricata-Main) here:
        #0 0x7f4364ff2253 in pthread_create (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x36253)
        #1 0x7f9c48 in TmThreadSpawn /home/victor/dev/suricata/src/tm-threads.c:1843
        #2 0x8da7c0 in RunModeSetIPSAutoFp /home/victor/dev/suricata/src/util-runmodes.c:519
        #3 0x73e3ff in RunModeIpsNFQAutoFp /home/victor/dev/suricata/src/runmode-nfq.c:74
        #4 0x7503fa in RunModeDispatch /home/victor/dev/suricata/src/runmodes.c:382
        #5 0x7e5cb3 in main /home/victor/dev/suricata/src/suricata.c:2547
        #6 0x7f436271c82f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)

[33mcommit 0d4b93cafde51332bf2b36fb9ab98e9bf181a954[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 25 08:58:32 2016 +0200

    tls-rules: install on 'make install-full'

[33mcommit 397c541c09aa8dd6c221fa215ce922b70ab73ab1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 22 22:14:10 2016 +0200

    detect: fix multi-tenant loaders

[33mcommit 7e54ee7d0e7dac51c7436724961fdba78af85561[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 19 12:52:46 2016 +0200

    flow-timeout: fix memory errors on flow bypass
    
    For flow bypass, the flow timeout handling is triggered which may
    create up to 3 pseudo packets that hold a reference to the flow.
    However, in the bypass case the code signaled to the timeout logic
    that the flow can be freed unconditionally by returning 1. This
    lead to packets going through the engine with a pointer to a now
    freed/recycled flow.
    
    This patch fixes the logic by removing the special bypass case,
    which seemed redundant anyway. Effectively reverts 68d9677.
    
    Bug #1928.

[33mcommit d1d618a668df1337cf1be268c640f5687f93fc6f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 19 12:50:47 2016 +0200

    flow-manager: cleanups and comment improvements

[33mcommit 368d5d931c702e3606d139e08dea0fd4d82aa5b4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 19 11:11:10 2016 +0200

    flow-timeout: don't leak flow reference in error path

[33mcommit 1aa70fb39e5581956cef99cc4ac3daef80e0454e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 18 18:33:11 2016 +0200

    doc: add rate_filter

[33mcommit e072e70ea6b2be7ae335a08c835b6cb61f6ae2ef[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 18 18:09:39 2016 +0200

    alert: fix rate_filter issues
    
    Fix rate_filter issues: if action was modified it wouldn't be logged
    in EVE. To address this pass the PacketAlert structure to the threshold
    code so it can flag the PacketAlert as modified. Use this in logging.
    
    Update API to use const where possible. Fix a timout issue that this
    uncovered.

[33mcommit dcdf160ab2c99185ae605d93db6207bc648a4dfa[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Oct 17 12:56:35 2016 -0600

    conf: cleanup compiler warning (unintialized vars)

[33mcommit 1a724ba851b8c63c2d66232046b68da47a8de6fa[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Oct 13 13:53:27 2016 -0600

    doc: flow: update and add new keywords

[33mcommit 8f56c234683551f9418377cd250c434938c08ddc[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Oct 13 11:31:21 2016 -0600

    detect-flow: no_frag and only_frag keyword support
    
    Support flow:no_frag and flow:only_frag keywords from Snort.

[33mcommit f81619a13efeb08c4a744238a07a75dc7af7cd71[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Oct 13 12:08:40 2016 -0600

    defrag: set flag on packets reassembled from fragments
    
    Set the PKT_REBUILT_FRAGMENT on packets that are re-assembled
    from fragments.

[33mcommit 571f56cfcf8fdd541b2a6d4d594afe749b55e2e9[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Oct 11 11:11:26 2016 -0600

    detect-flow: support flow:not_established

[33mcommit dc762cd44d08d0b682c62b64c52c9ed592fce1d6[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Oct 11 10:43:34 2016 -0600

    detect-flow: use new unit test macros

[33mcommit 6948b2332abeb1531212594f117976c54470f119[m
Author: Duarte Silva <development@serializing.me>
Date:   Sat Oct 15 16:53:03 2016 +0200

    file-hashing: Fixed line parsing code

[33mcommit 56ffba9fd82bb30858a661f6406a05148e187e07[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 14 17:28:34 2016 +0200

    doc: initial app-layer keywords
    
    Document app-layer-protocol and make a start with app-layer-event.

[33mcommit 449c93e062c4b575ca537d887c8f35250604dce8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 14 10:23:44 2016 +0200

    detect-app-layer-protocol: improve rule validation
    
    Also add tests for PD-only conditions

[33mcommit 0ed119068d09842361195a905f1bce73b262b99a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 14 10:11:56 2016 +0200

    detect-app-layer-protocol: implement prefilter
    
    Introduce 'Protocol detection'-only rules. These rules will only be
    fully evaluated when the protocol detection completed. To allow
    mixing of the app-layer-protocol keyword with other types of matches
    the keyword can also inspect the flow's app-protos per packet.
    
    Implement prefilter for the 'PD-only' rules.

[33mcommit 8094b2b12e89a1329fbf96cb8e39487a00e18ec3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 13 23:33:06 2016 +0200

    detect-app-layer-protocol: convert to pkt match

[33mcommit c28d9d053861ad0ee396f2a4d2ce6368022c1a1b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 8 23:08:04 2016 +0200

    eve: print app_proto_ts/app_proto_tc

[33mcommit dbb3a12b32e8c841e8721e8c4126755027182c74[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 8 23:07:32 2016 +0200

    logging: return string for ALPROTO_FAILED

[33mcommit 93298e91c77ac86c2098e7f0a53a830957271063[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 8 22:54:19 2016 +0200

    app-layer counters: count failed protocol detect

[33mcommit 3b98feef011571e9b90804be4e673419a2b1f5eb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 10 12:06:48 2016 +0200

    proto-detect: clean up UDP handling
    
    Set FAILED instead of using a flow flag. Flag packets in both
    sides when detection is done. Detection is only done in one
    direction.

[33mcommit 90bf2b5a32f6ea0aeb46ded8fed40df3bca075af[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 9 23:49:09 2016 +0200

    proto detect: improve error case handling
    
    Improve flags logic, update tests.

[33mcommit e955cf3366ca87745fc85b9f49cae5ce5388df9e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 9 11:23:49 2016 +0200

    detect-app-layer-protocol: improve error handling
    
    Redo tests.

[33mcommit 9560e8b5b2ce7a0e4ea62e0d3b5dc908695f142b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 8 18:00:37 2016 +0200

    proto-detect: update mismatch handling
    
    Improve protocol mismatch handling. Preserve both protos. Use otherdir
    if already sent to parser, use toclient otherwise.

[33mcommit 7d7ec78cc3e80ce47888684f65034cac6f69bc47[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 8 19:31:38 2016 +0200

    app-layer-protocol: improve detection
    
    Add negated matches to match list instead of amatch.
    
    Allow matching on 'failed'.
    
    Introduce per packet flags for proto detection. Flags are used to
    only inspect once per direction. Flag packet on PD-failure too.

[33mcommit ac2cf526f1c925c138ea5cfa4021bc11bc9f3134[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 8 12:02:25 2016 +0200

    proto detect: remove flow data tracking
    
    The Flow::data_al_so_far was used for tracking data already
    parsed when protocol for the current direction wasn't known yet. As
    this behaviour has changed the tracking can be removed.

[33mcommit d7c828bcb0f9737d92128ec379ddc9d1e93bc582[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 8 11:47:35 2016 +0200

    proto detect: update behavior on partial detection
    
    When the current direction doesn't get a protocol detection, but the
    opposing direction did, previously we would send the current data to
    the parser. Then when we'd be invoked again (until the protocol
    detection finally failed) we'd get the same data + the new data. To
    make sure we'd not send the same data to the parser again, the flow
    kept track of how much was already sent to the app-layer using
    data_al_so_far.
    
    This patch changes the behaviour. Instead of sending the data for
    the current direction right away, we only do this when protocol
    detection is complete. This way we won't have to track anything.

[33mcommit 6022fa44a50520883a4769e1a1ab5ddbb354afd7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 8 10:22:35 2016 +0200

    proto detect: TCP cleanup
    
    Split function into multiple smaller ones.

[33mcommit 8347aa01fa9d32c364b8b72163e921f32ce01cbc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 10 11:18:06 2016 +0200

    app-layer: clean up counters registration

[33mcommit c6134e007e0785bc9a3ef5b524fd03adf7fa2c09[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 12 12:30:19 2016 +0200

    doc: app-layer tls including no-reassemble

[33mcommit b789d2ae3d13cdb0d0bf6a5e40eafa96b82ced04[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 12 11:21:28 2016 +0200

    tls: change 'no-reassemble' option to default off
    
    This option was broken so there should be no visible change to
    actual deployments.

[33mcommit c17402fdcb95be613e23c4e0c7cf3e77a5832155[m
Author: Thomas Andrejak <thomas.andrejak@gmail.com>
Date:   Mon May 16 12:56:50 2016 +0200

    prelude: add IPv6 support

[33mcommit dcce2251023a6bf404217623ab264ef6d95b3157[m
Author: Thomas Andrejak <thomas.andrejak@gmail.com>
Date:   Mon May 16 12:56:12 2016 +0200

    prelude: add missing TCP header to additional data

[33mcommit 671320aab8c2151a63a9e4f052f7e800c8ad6acc[m
Author: Thomas ANDREJAK <thomas.andrejak@c-s.fr>
Date:   Thu Apr 7 22:54:56 2016 +0200

    prelude: update URL

[33mcommit e33060cee097f57f20614cc907c53ce178d384d2[m
Author: Thomas Andrejak <thomas.andrejak@gmail.com>
Date:   Mon May 16 12:55:32 2016 +0200

    prelude: coding style, it's better to use macro

[33mcommit b1c1699699298b91386c9d47cbe7291bcda75e78[m
Author: Thomas Andrejak <thomas.andrejak@gmail.com>
Date:   Mon May 16 12:36:29 2016 +0200

    prelude: Add other actions than just ACTION_DROP when packet drop

[33mcommit 4d4a3d0b8f2ab729be8fbd65ff40c3cd0cf77077[m
Author: Thomas Andrejak <thomas.andrejak@gmail.com>
Date:   Mon May 16 12:35:17 2016 +0200

    prelude: Add log when failed to create assessment or impact object

[33mcommit 18c9312380e04d4233862b772078211b25c1fb8d[m
Author: Thomas Andrejak <thomas.andrejak@gmail.com>
Date:   Mon May 16 12:37:38 2016 +0200

    Add macro for TCP and UDP header access

[33mcommit 4eca40ac34debc8584b5d08180b7521bd8d737c1[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Oct 7 16:51:22 2016 +0900

    app-layer-tls: stop detection if no reassembly
    
    It no-reassembly is asked in TLS conf then we can stop inspection
    after handshake and cause bypass to be triggered on the flow.

[33mcommit 69e1ff7ba7834585bb9f97d3d02d553856af0f6a[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Oct 6 14:10:13 2016 +0900

    stream-tcp: bypass encrypted when both side ready
    
    Suricata should not completely bypass a flow before both end of it
    have reached the stream depth or have reached a certain state.
    Justification is that suricata need the ACK to treat the other side
    so we can't really decide to cut only one side.

[33mcommit 3750c1563219d271155eab217335f25ec1efd09a[m
Author: Nicolas Thill <ntl@p1sec.com>
Date:   Tue Oct 11 17:16:33 2016 +0200

    doc: add SCPacketTimestamp Lua function
    
    Signed-off-by: Nicolas Thill <ntl@p1sec.com>

[33mcommit e95e6ccded36789ebcf73bb1a5a51cf21037cd75[m
Author: Nicolas Thill <ntl@p1sec.com>
Date:   Fri Feb 5 11:40:08 2016 +0100

    lua: add an SCPacketTimestamp function
    
    The SCPacketTimestamp function returns packet timestamps as 2 real
    numbers (seconds & microseconds).
    
    Example:
    
      local sec, usec = SCPacketTimestamp()
    
    Signed-off-by: Nicolas Thill <ntl@p1sec.com>

[33mcommit f4b165de945beaa9b03981c0b84880845ac587c3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 7 19:02:32 2016 +0200

    file: register filedata loggers before file
    
    This fixes the issue that 'stored' remained false even if the file
    was stored.
    
    Reported-by: Chris Wakelin

[33mcommit 4126fd82a05038ef8aed18fe42b1570dee398f12[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 7 17:45:12 2016 +0200

    doc: small eve update: add dns

[33mcommit e3b2d951002da4fd275a2f34dedcc5b7fca38f93[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 7 17:36:01 2016 +0200

    doc: add recent tls keywords

[33mcommit 08b875c03b973e28c423ad2ff42b7bea8b62ecea[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 7 17:15:32 2016 +0200

    doc: clean up fast_pattern

[33mcommit f1046db113cda5aa3c2e092b8462beb5e0e5009c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 7 17:09:43 2016 +0200

    doc: fix header keywords layout

[33mcommit 43aed70976762a9e80c0938603c5ccdf4974abde[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 5 10:19:01 2016 +0200

    detect: during detection sgh is read only so turn into const

[33mcommit 0e3112460959811d5e2e8a890d8f74e27bd0ebbd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 5 10:12:27 2016 +0200

    detect: add util func for post-inspect tasks on first sgh

[33mcommit d3fb4de1b54fe63f2e72d2d43736729900a44928[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 5 09:44:41 2016 +0200

    detect: move file flags update into it's own function

[33mcommit 664f9aa9068dccfde49c64ca8dd2d1bc049262a6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 5 09:25:19 2016 +0200

    flow: use BIT_U32 for flags

[33mcommit c81aaeda7bbfa92cef5ad7a6f577ba607b528a1e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 5 09:16:25 2016 +0200

    flow: move file flags into their own variable
    
    Move FLOW_FILE_* flags into Flow::file_flags. Rename them to
    FLOWFILE_* so non updated code will break.

[33mcommit 3fab684f974e6f13c3bf217029501e2cd1e4fe67[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Oct 6 09:59:13 2016 -0600

    logging: don't log that json is disabled in each logger
    
    A warning log is already emitted if eve-log is enabled in the
    configuration but json support is not built so the logger
    registration functions can be silent.

[33mcommit 0bce4b5534d4a3bc5181216d1f5b3e8e81a99cf8[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Oct 6 11:08:40 2016 -0600

    macOS: thread return value affects newer macOS as well
    
    ALl OS X/macOS versions since 10.10 return EDEADLK here instead
    of EBUSY. Assume they will moving forward as well.

[33mcommit d80914d350fcc943b24b78e8eca94cc6892e483c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 7 10:10:30 2016 +0200

    doc: move rule reload and adding rules into rule-management

[33mcommit e24c3937b3e4da44a746896e897739ed464018cf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 7 10:06:05 2016 +0200

    doc: add rule-management chapter

[33mcommit 80bd59ae86e25962cd7a318b670d9bd8176aa7e6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 7 09:58:10 2016 +0200

    doc: improve install doc, configure

[33mcommit 48274218df6ceac0c7fb864e93e8ad30ed2aa049[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 7 09:57:44 2016 +0200

    doc: multi-tenancy is not work in progress

[33mcommit f64decf5e2b0d366b3f0b98dfc094246f8d92050[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 7 09:57:02 2016 +0200

    doc: clean up log rotation

[33mcommit 729fd2e406acddcdff9785032833992a9eb17813[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 7 09:56:22 2016 +0200

    doc: update libcap-ng doc

[33mcommit e5ee665f2482367ab2d023be075c5593973e2031[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 7 09:55:50 2016 +0200

    doc: rewrite rule reload doc

[33mcommit f867bb61e669a00ff9417efbee23a6bc45b3409e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 6 19:23:32 2016 +0200

    http: fix memory leak in error path

[33mcommit 40af9aad025217b3ea70450f690e668e3c7240cc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 6 17:49:21 2016 +0200

    streaming: improve error handling
    
    When memory allocations happened in HTTP body and general file
    tracking, malloc/realloc errors (most likely in the form of memcap
    reached conditions) could lead to an endless loop in the buffer
    grow logic.
    
    This patch implements proper error handling for all Append/Insert
    functions for the streaming API, and it explicitly enables compiler
    warnings if the results are ignored.

[33mcommit 6a831f8125c256009946688a9bf7a1e1ae789d7c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 6 13:16:53 2016 +0200

    doc: add simple install guide

[33mcommit 2c60e9b4deadb2c330fe37f754f75cebf8006284[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Oct 5 12:06:19 2016 -0600

    doc: remove userguide.pdf on clean instead of suricata.pdf
    
    As the pdf is a built artifact, it needs to be removed to
    satisfy distcheck.

[33mcommit afead7e5652bc715ac228b14095dd31037830ed2[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Oct 5 12:02:59 2016 -0600

    doc: add missing docs to EXTRA_DIST

[33mcommit dbde356053f5b994f29577db3c7b1475cd9d3346[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Oct 4 08:56:16 2016 -0600

    doc: exclude docs in partials/ from reference errors
    
    These docs are already included with the include statement,
    but older versions of Sphinx still complain that they
    are not in a table of contents.

[33mcommit aaf0fe4d29e5c9d0319732c07c17bd3c1df381ea[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 4 12:51:53 2016 +0200

    doc: eve update

[33mcommit a35bea28f364e43287f31430f4012e1c580f8aa4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 4 12:51:39 2016 +0200

    doc: rules-meta typo

[33mcommit 879c3d8ad7a29aac6dd1581bfa1b59ca98a10d97[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 4 09:16:24 2016 +0200

    detect: fix scan-build 0-size alloc warnings

[33mcommit 76b55214f025b9ba32f3bbb64f17cec7e0cd4fa7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 3 18:44:53 2016 +0200

    doc: rules-meta small cleanup

[33mcommit 3cf1b1206174eb3ae7c2030dafe6b0862b165390[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 3 18:18:02 2016 +0200

    doc: http sticky vs modifier

[33mcommit 0d155932585a76e16b6da89e3f9f10009b0cd796[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 3 18:02:07 2016 +0200

    doc: move urilen to other uri keywords

[33mcommit 34bfacdee050a9c2791a1cd0691203b099ba856d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 3 17:58:20 2016 +0200

    doc: add minimal http request/response line sections

[33mcommit adb6c75e2eec71e2a53af6fd61d1f1ff2c218631[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 4 07:19:23 2016 +0200

    doc: only make sphinx warnings fatal on html/pdf

[33mcommit 82a6bfd599cd47a9ffa81aaacea4e0546eec8960[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Oct 3 14:22:07 2016 -0600

    doc: manpage: add bugs and notes section

[33mcommit a4450b768eeb56eb095805c62cc793173ec129b1[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Oct 3 14:13:16 2016 -0600

    doc: manpage: add signals section

[33mcommit 5c78fdbc9cff1e71c1d696d12861ea439f2383ca[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Oct 3 12:05:32 2016 -0600

    doc: break out command line options into a common doc
    
    The command line options can now be consumed by the man page
    and the user guide.
    
    Some attempt was made to order the options from common/basic
    progressing to advanced with some notion of options
    grouped together.

[33mcommit cd4c9e73f8f69bd667ef2d560cfd6c00e9eb8878[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Oct 3 11:16:13 2016 -0600

    doc: fix sphinx warnings
    
    This involved removing documents that were intentionally
    not referenced as they are not good candidates for the
    user guide.

[33mcommit 3df7f97a33a0897cfd1738d6385c3459ae8645a8[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Oct 3 11:15:50 2016 -0600

    doc: fail on sphinx warnings

[33mcommit 79d21e9eee4dafcfefcae3588ee35188c42430b7[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Oct 3 10:21:39 2016 -0600

    docs: include userguide.pdf in dist

[33mcommit 790ac8d417d451358a2aca6db81a4cc5363fad33[m[33m ([m[1;33mtag: suricata-3.2beta1[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 3 14:56:41 2016 +0200

    changelog: update for 3.2beta1

[33mcommit d4c7c2c2c706f3ab604fd0f4f459cb2c5807a9da[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 3 09:53:13 2016 +0200

    cygwin: leave magic-file commented out in yaml

[33mcommit 09c3e1dd8ad8d695c6c1b4916382b4202d60c7bd[m
Author: Jason Ish <ish@unx.ca>
Date:   Sat Sep 24 08:01:02 2016 -0600

    pcap-log: cleanup allocations at exit
    
    Particularly in multi-mode, allocations made for each thread were
    not being cleaned.
    
    ASAN reports no leaks now on exit.

[33mcommit a6854147be6103d5c33e2c20411cc316c20d13f6[m
Author: Jason Ish <ish@unx.ca>
Date:   Sun Sep 25 19:28:23 2016 -0600

    pcap-log config: sguil-base-dir -> dir and update comment
    
    The code already looks for "dir" first instead of
    "squil-base-dir", and already respects this configuration
    parameter in other modes than the "sguil" mode.
    
    Coda will still access "sguil-base-dir".

[33mcommit 214e97814ccb1a617acbbebcd1848f3ec229a658[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Sep 29 14:25:43 2016 -0600

    doc: bring in unix socket interaction from wiki

[33mcommit bec128bbf949b17838908c694c2fa00d65f9ad86[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Sep 28 15:25:48 2016 -0600

    doc: attempt to parse version if not in environment
    
    Should fix the version displayed on readthedocs.

[33mcommit f80ce51ddfaf8bd96c12106e60b19525c75074cb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 3 08:33:11 2016 +0200

    unix-socket: don't try to change permissions on BSD
    
    On BSD using fchmod on a socket is not supported and will result
    in EINVAL.

[33mcommit 96c28b2995e9681cb6e5ca15b891415c8501369b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 2 23:29:38 2016 +0200

    bug 1353: don't cut off last char of unix path

[33mcommit 4a190e07a608633dc7c8e58ce6beab717399d677[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 2 22:49:32 2016 +0200

    pcre: disable JIT if RWX pages not supported

[33mcommit 46f5f4cff81411c1d40997b2e393ab20df219f88[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 2 22:39:29 2016 +0200

    util: add facility to check for RWX page support
    
    Some code won't work well when the OS doesn't allow RWX pages. This
    page introduces a check for runtime evaluation of the OS' policy on
    this.
    
    Thanks to Shawn Webb from HardenedBSD for suggesting this solution.

[33mcommit a3a175747213f38b19af28af262b5c6b80344650[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 30 16:26:40 2016 +0200

    flow-mgr: fix bypass counter registration

[33mcommit 595c20ddf4e21d6f2251a037dea9b8ba5c13ee77[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 30 14:06:32 2016 +0200

    der: fix asan/valgrind errors in time parsing

[33mcommit 7e4df3a1d17ad7d7279601a395b2e9329ad8ee43[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 30 12:33:49 2016 +0200

    tls-validity: fix memory handling

[33mcommit 10d827639e279d9fab977bd32ac9503f9b44c841[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Sep 27 17:56:22 2016 +0200

    detect-tls-cert-validity: clean up unit tests
    
    Remove locks, unnecessary function calls and conditional statements.

[33mcommit 1fea52dd8aaab9e0f4da57981f8a581ea347f036[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Sep 27 14:19:03 2016 +0200

    detect: add keyword tls_cert_valid
    
    Add keyword to check if TLS certificate is valid.

[33mcommit f7e0083269df2ce7a6c1001123314c92ec690fbe[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Sep 27 13:41:38 2016 +0200

    detect-cert-validity: fix typos

[33mcommit f22c9d9781cd6f8a6feaa5256a4c7ff37a5b094b[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Sep 27 13:39:43 2016 +0200

    detect: add keyword tls_cert_expired
    
    Add keyword to check if TLS certificate is expired.

[33mcommit 07d2312d96cb1798d58e9f3ff23775b7b87c99e7[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Sep 27 08:56:28 2016 +0200

    detect-tls-validity: use flags for modes
    
    Use flags for modes to support using multiple modes at the same time.

[33mcommit e6cf7ae8fa0ce5fdb10e36b53ec2181b9f149ecd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 30 12:04:40 2016 +0200

    yaml: improve stream-depth comments

[33mcommit 3f214b506a66e390ecf7821a8ac51cd1c0916ca5[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Tue Dec 1 11:21:24 2015 +0100

    file-store: add depth setting
    
    When a rules match and fired filestore we may want
    to increase the stream reassembly depth for this specific.
    
    This add the 'depth' setting in file-store config,
    which permits to specify how much data we want to reassemble
    into a stream.

[33mcommit 4751677e2490bf18649ce51d146bf3e38c707806[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Mon Aug 29 11:46:33 2016 +0200

    app-layer: use StreamTcpSetReassemblyDepth
    
    This calls StreamTcpSetReassemblyDepth to set the stream depth
    specified for the protocol.

[33mcommit 9ab1194f68d55f32bb958b7da437e2381665a6de[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Mon Aug 1 16:30:03 2016 +0200

    modbus: set stream depth
    
    Some protocol like modbus requires
    a infinite stream depth because session
    are kept open and we want to analyze everything.
    
    Since we have a stream reassembly depth per stream,
    we can also set a stream reassembly depth per proto.

[33mcommit b160c49e9eab730791b06a224a72fe68246aacd5[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Tue Dec 1 15:50:02 2015 +0100

    app-layer-parser: add stream depth
    
    This permits to set a stream depth value for each
    app-layer.
    
    By default, the stream depth specified for tcp is set,
    then it's possible to specify a own value into the app-layer
    module with a proper API.

[33mcommit a63c6b320eaebcf130c94ce80368277d3ea8d7db[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Nov 24 21:52:06 2015 +0100

    stream: per TcpStream reassembly depth

[33mcommit 960ebb2822d1f2e7b75cac91912106f7353083fa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 30 10:34:39 2016 +0200

    enip: fix scan-build warnings
    
    detect-cipservice.c:161:29: warning: Assigned value is garbage or undefined
        cipserviced->cipservice = input[0];
                                ^ ~~~~~~~~
    detect-cipservice.c:162:27: warning: Assigned value is garbage or undefined
        cipserviced->cipclass = input[1];
                              ^ ~~~~~~~~
    detect-cipservice.c:163:31: warning: Assigned value is garbage or undefined
        cipserviced->cipattribute = input[2];
                                  ^ ~~~~~~~~
    3 warnings generated.

[33mcommit 80c3aedbfcff676f709907637809d398a7293417[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 30 08:54:27 2016 +0200

    enip: parsing and tests cleanup

[33mcommit 72b5da43137f4194251373c09a190960954ba210[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 30 08:23:39 2016 +0200

    enip/cip: improve output & style
    
    Remove printf, remove \n from SCLogDebug. Add SCLogError for
    rule parsing issues.
    
    Fix various style issues

[33mcommit 92b393ee9ad9b73d46d5d59e66ab6cc0371b8d02[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 30 08:18:22 2016 +0200

    doc: include enip page

[33mcommit a2d8cfb5d39c979932b666a8090b9dc5be8201ec[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 30 08:15:12 2016 +0200

    doc: reorder rule docs

[33mcommit 050f36eaa5b8de1f63997654446f0ec1dd0eb445[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 30 08:14:00 2016 +0200

    enip: improve yaml

[33mcommit 6b1c21b115d1fb144d912c3a236e2f4de74dfa1f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 30 08:10:18 2016 +0200

    enip/cip: register inspect engines

[33mcommit a3ffebd8354c5c207f0a31b929dd2464aac53e22[m
Author: kwong <kwong@solananetworks.com>
Date:   Thu Sep 29 13:15:54 2016 -0400

    Adding SCADA EtherNet/IP and CIP protocol support
    
    Add support for the ENIP/CIP Industrial protocol
    
    This is an app layer implementation which uses the "enip" protocol
    and "cip_service" and "enip_command" keywords
    
    Implements AFL entry points

[33mcommit 5bd906ae9f6cea9db02583786d26afcc6cfb86c1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 29 14:17:22 2016 +0200

    doc: prefilter keyword and config

[33mcommit d9811e58b6b4ef4fd5d4c96001ca4114a09813ab[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 28 08:46:27 2016 +0200

    http_header: don't separately inspect trailer yet
    
    Currently the regular 'Header' inspection code will run each time
    after the HTTP progress moved beyond 'headers'. This will include
    the trailers if there are any.
    
    Leave the code in place as this model will change in the not too
    distant future.

[33mcommit 358eacf14f4ccc7e5fb1633b7d4e284e92e69bb8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 27 17:24:02 2016 +0200

    http_header: only run trailer mpm if we have trailers

[33mcommit 44022743f263712e99ee06b151b2e70c0f91579f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 27 17:16:38 2016 +0200

    http: track if request/response have trailers

[33mcommit 798ba010ca956310fd17f2b6ecda3c6f383c3818[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 27 13:46:08 2016 +0200

    prefilter: use array of engines per sgh
    
    Instead of the linked list of engines setup an array
    with the engines. This should provide better locality.
    
    Also shrink the engine structure so that we can fit
    2 on a cacheline.
    
    Remove the FreeFunc from the runtime engines. Engines
    now have a 'gid' (global id) that can be used to look
    up the registered Free function.

[33mcommit 8321f04ef32f12be82b8e2d4afd835a18da69ba2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 27 11:56:58 2016 +0200

    prefilter: clean up setup code

[33mcommit d36c0c15eabfc4145affd66295738a4e1e9ce125[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 23 11:25:38 2016 +0200

    detect: reshuffle keyword registration order
    
    The order of keyword registration currently affects inspect engine
    registration order and ultimately the order of inspect engines per
    rule. Which in turn affects state keeping.
    
    This patch makes sure the ordering is the same as with older
    releases.

[33mcommit 58ac4027ef7c3dc6603b21ae1a6d85ee857f372a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 23 10:01:02 2016 +0200

    detect: clean up inspect engine registration

[33mcommit a24870f29f4d8d1677db8594c1d8fd1468a44851[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 23 09:56:23 2016 +0200

    detect app-layer-event: clean up registration
    
    Move engine and registration into the keyword file.
    
    Register as 'ALPROTO_UNKNOWN' instead of per alproto. The
    registration will only apply it to those rules that have
    events set.

[33mcommit 9e35fa7f417e68fc7a20d829900b83b77a961235[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 23 09:37:54 2016 +0200

    detect: remove empty app registration table

[33mcommit 8a0bea872c8d73e4fa2ae4bd3c7e123fbb15c5ef[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 23 09:35:53 2016 +0200

    template_buffer: register inspect engine from keyword

[33mcommit 6f253e1ea7d02469d471ee5a0bb37cc7c1a08e48[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 23 09:21:07 2016 +0200

    file detect: register inspect engines from keyword

[33mcommit 08d0fe0916c5bdbbe973e816a032c6f29a5e1e44[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 23 09:11:33 2016 +0200

    modbus detect: register inspect engine from keyword

[33mcommit 2db094ab7ae86787602f3a9723dbdb21642f6c8d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 23 09:02:38 2016 +0200

    dns detect: register inspect engine from keyword

[33mcommit c9bb762f643587996864e8d343a7847fdd4fe7f6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 23 08:47:00 2016 +0200

    tls_cert_issuer: register inspect engine from keyword

[33mcommit e28e98bcaaf42b50a4cf71584eb332c1d7ce1e88[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 23 08:45:29 2016 +0200

    tls_cert_subject: register inspect engine from keyword

[33mcommit a87c196b607779912ce9d89d2cfd90a392870c0f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 23 08:43:25 2016 +0200

    tls_sni: register inspect engine from keyword

[33mcommit 200a4c159352bf8f20f4094671c82ede93a0ffe0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 23 08:38:37 2016 +0200

    http_stat_code: register inspect engine from keyword

[33mcommit cd705752db5bb55c03db0f1af35c7dc139d94ffb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 23 08:30:57 2016 +0200

    http_stat_msg: register inspect engine from keyword

[33mcommit 20e93ba419bafbbfa2a096199c766ffbba2b71a2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 23 08:20:51 2016 +0200

    file_data: register inspect engine from keyword

[33mcommit 0496b3f6a55a1f72c46c570737e871cc7ebf7289[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 22 18:05:52 2016 +0200

    http_raw_host: register inspect engine from keyword

[33mcommit a00629ab555ce666b4a0e08e0bc96b8523c8d6fd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 22 17:51:25 2016 +0200

    http_host: register inspect engine from keyword

[33mcommit edb293699872d0180a1c447f9b84fe20d471efdf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 22 17:47:54 2016 +0200

    http_user_agent: register inspect engine from keyword

[33mcommit fc857c5455d097419adb758134486fe9eebafd8d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 22 17:39:06 2016 +0200

    http_raw_uri: register inspect engine from keyword

[33mcommit b1adea6eee3a99a5eb1acb8e37a436a0825d007d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 22 17:35:59 2016 +0200

    http_cookie: register inspect engine from keyword

[33mcommit cd8b1b0b4c448810a59dc2917352f765249e9ce0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 22 17:33:20 2016 +0200

    http_method: register inspect engine from keyword

[33mcommit b3148296142942d6ebed789d819c9010abce8b1e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 22 17:27:57 2016 +0200

    http_raw_header: register inspect engine from keyword

[33mcommit eb19eb3fe4f761ee876aff0b9a58a70844e73d17[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 22 17:22:20 2016 +0200

    http_header: register inspect engine from keyword

[33mcommit 4096f76b1be228e9a1c8f6d94565aa84cbb9ff6a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 22 17:19:05 2016 +0200

    http_client_body: register inspect engine from keyword

[33mcommit b96c2c5db566114d2ea2bad83e96441cf0164551[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 22 17:13:03 2016 +0200

    http_uri: register inspect engine from keyword

[33mcommit cc96fedb90eac286144f7efa6b3a2662d66d8301[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 22 17:06:43 2016 +0200

    http_response_line: register inspect engine from keyword

[33mcommit 0feeb8d538c0c4515db48d787d2dd2ae18bb3acd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 22 17:02:39 2016 +0200

    http_request_line: register inspect engine from keyword

[33mcommit 5bde86b0e865bea1acf7e5be6121cb5db877369a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 22 17:00:29 2016 +0200

    detect-engine: new registration call
    
    Make it more in line with MPM registration.

[33mcommit 9a0bbd623997305b505a59ca9bf3a18fa19e9d91[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 22 09:09:11 2016 +0200

    detect mpm: small optimization

[33mcommit ad3c97f47077adee0a7cf2adcb9404e32e138f05[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 21 22:50:13 2016 +0200

    detect-mpm: cleanup

[33mcommit 5f994756e684457d81000530f57d7243b4e099c9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 21 17:43:41 2016 +0200

    detect-engine: improved inspect engines
    
    Inspect engines are called per signature per sigmatch list. Most
    wrap around DetectEngineContentInspection, but it's more generic.
    
    Until now, the inspect engines were setup in a large per ipproto,
    per alproto, per direction table. For stateful inspection each
    engine needed a global flag.
    
    This approach had a number of issues:
    1. inefficient: each inspection round walked the table and then
       checked if the inspect engine was even needed for the current
       rule.
    2. clumsy registration with global flag registration.
    3. global flag space was approaching the need for 64 bits
    4. duplicate registration for alprotos supporting both TCP and
       TCP (DNS).
    
    This patch introduces a new approach.
    
    First, it does away with the per ipproto engines. This wasn't used.
    
    Second, it adds a per signature list of inspect engine containing
    only those engines that actually apply to the rule.
    
    Third, it gets rid of the global flags and replaces it with flags
    assigned per rule per engine.

[33mcommit bac37fc9ae5e3469652fda2ef268de617de485dd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 21 16:17:20 2016 +0200

    detect state: reorganize flags
    
    List the common non-buffer specific flags on top.

[33mcommit f1e38405160d5d56c0f92354c17938ba5caa3fd5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 8 15:19:40 2016 +0200

    http_response_body: implement keyword with mpm
    
    Implemented as 'stickybuffer'.

[33mcommit 4c98b6cef3dc36e212d24efd335875888292f571[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 8 12:35:44 2016 +0200

    http_request_line: implement keyword and mpm
    
    Implemented as 'stickybuffer'.
    
    Move all logic into the keyword file and remove bad tests that tested
    URI instead of request line.

[33mcommit 960461f4db37fb3dcdc167933261c2d0222f98f7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 17 14:44:09 2016 +0200

    fast_pattern: register app layer mpms automatically
    
    Allow for duplicate registrations for the same list. After the first
    registration new calls will be ignored.

[33mcommit 6dd4dff7b288f9446568c91c5ae5c70fa5ba5ba6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 17 13:08:16 2016 +0200

    mpm: remove empty app_mpms table

[33mcommit e68b2214e559327bc9bc2bfa9e223ec69f89e945[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 17 13:06:32 2016 +0200

    tls: register mpm from keywords

[33mcommit 57ae3c43e53d35a3b43ee61d4100b988804adacc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 17 13:05:18 2016 +0200

    dns_query: register mpm from keyword

[33mcommit a1a2187a0c8f7750ff4a2d5d911db0dd339689c9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 17 13:03:39 2016 +0200

    http_cookie: register mpm from keyword

[33mcommit 74661449e0b7019cabe851fed80759673fc083d9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 17 13:01:32 2016 +0200

    http_raw_host: register mpm from keyword

[33mcommit b5cd4889aed4a126e92dd35d7cb8931a869a3f43[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 17 12:26:17 2016 +0200

    http_host: register mpm from keyword

[33mcommit 91695c81aacca8db1b9035be73b3b7d0e4f5353b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 17 12:22:59 2016 +0200

    http_client_body: register mpm from keyword

[33mcommit 644d4dc61b466e28319c53af177878b4175b5241[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 17 12:21:22 2016 +0200

    http_stat_code: register mpm from keyword

[33mcommit cf96db095aeb46b4652eb8b383f4bd46fb779329[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 17 11:49:17 2016 +0200

    http_stat_msg: register mpm from keyword

[33mcommit 43b281a510afb3a6a304d05aa135dd2d4f497d2b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 17 11:47:29 2016 +0200

    file_data: register mpm from keyword

[33mcommit 6d0632a9c64f0a11acc9ed62f42581eddfbef315[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 17 11:43:08 2016 +0200

    http_method: register mpm from keyword

[33mcommit e4ea38a8deb22f7cfdacea4e335968dee22bc5c3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 17 11:41:35 2016 +0200

    http_raw_header: register mpm from keyword

[33mcommit 7813a834d0eff25fbce58d11c8e6eb7f721f1175[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 17 11:39:46 2016 +0200

    http_user_agent: register mpm from keyword

[33mcommit 7b98c0073f9d29353674751891873188fd6595af[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 17 11:37:30 2016 +0200

    http_header: register mpm from keyword

[33mcommit 38e018e2d3530e33bb29f01ff6a5c7116d19e151[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 17 11:33:16 2016 +0200

    http_raw_uri: register mpm from keyword

[33mcommit 7289d12f1bc3e122bb90a43ca0981da7ff472524[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 17 11:28:25 2016 +0200

    http_uri: register mpm from keyword

[33mcommit 5b2e36a1b00e9ef0144551c4318cbed5c957d42c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 16 18:52:59 2016 +0200

    mpm: add App Layer MPM registery
    
    Register keywords globally at start up.
    
    Create a map of the registery per detection engine. This we need because
    the sgh_mpm_context value is set per detect engine.
    
    Remove APP_MPMS_MAX.

[33mcommit ae5846b4deed24cd3150d87465f088503ead29b7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 14 23:12:08 2016 +0200

    detect: simplify content inspection types
    
    Instead of a type per buffer type, pass just 3 possible types:
    packet, stream, state.
    
    The individual types weren't used. State is just there to be
    not packet and not stream.

[33mcommit e1eb4816478ed27f05082c371136ec9035d95364[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 26 18:49:17 2016 +0200

    prefilter: cleanup and optimization

[33mcommit dba14b676cee6fe104fc7085409277b29774eb5a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 25 18:36:26 2016 +0200

    profiling: more prefilter profiling

[33mcommit 125603871bf80149d593099741c8b695e316acb7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 26 16:10:59 2016 +0200

    detect: config opt to enable keyword prefilters

[33mcommit 36f713c8d4accc90aab5039f78a3929687fb9dab[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 26 14:24:16 2016 +0200

    prefilter: in profiling print totals

[33mcommit 2e878c202468ea7866de136048191d4d82771589[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 26 12:45:47 2016 +0200

    prefilter: alloc CLS aligned memory

[33mcommit 732921922a7eed53bc929c4ecf022ad9861fd9ed[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 26 10:14:06 2016 +0200

    detect mpm: consider sgh direction when adding rules

[33mcommit 9bb12ccb270fdb54cd76ed4db1e794aa2812a161[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 25 17:55:33 2016 +0200

    prefilter: move payload engines into separate list

[33mcommit e3b98d5bbf6f8677c0adf345cfe063c7f5ea6c98[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 25 15:13:25 2016 +0200

    detect-ack: extra match support

[33mcommit a41bf2ae142428a6badfcbf3f6ded32706e2c82c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 25 15:13:16 2016 +0200

    detect-seq: extra match support

[33mcommit a1accbbaf0465eabcd5743f9d20c631a79f8c09d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 25 15:12:59 2016 +0200

    detect-ttl: extra match support

[33mcommit a270dfa008f2d5c19f8c571fd4a4139ffc3df7ad[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 25 15:12:51 2016 +0200

    detect-id: extra match support

[33mcommit fbb0490c31fc62b60240e3fde4a1462555105f9b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 25 15:12:39 2016 +0200

    detect-dsize: extra match support

[33mcommit 34e3484dad3af5be0ad916fa9130fc93b430b056[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 25 13:04:25 2016 +0200

    detect-flags: prefilter extra match support

[33mcommit ace8f9f5df3ea7ca87d2fdae934dd29ca70c1a2c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 25 13:04:15 2016 +0200

    detect-flow: prefilter extra match support

[33mcommit e2eb9f8ede2a8b6a5ebd34b8565a4ac5f2c519c3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 25 12:59:33 2016 +0200

    prefilter: add 'extra match' logic to packet engines
    
    Many of the packet engines are very generic. Rules are generally more
    limited.
    
    A rule like 'alert tcp any any -> any 888 (flags:S; sid:1;)' would still
    be inspected against every SYN packet in most cases (it depends a bit on
    rule grouping though).
    
    This extra match logic adds an additional check to these packet engines.
    It can add a check based on alproto, source port and dest port. It uses
    only one of these 3. Priority order is src port > alproto > dst port.
    
    For the ports only 'single' ports are used at this time.

[33mcommit 9187c20782884a1ac2f9ccc3ef5462f7b43738e4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 23 16:47:35 2016 +0200

    detect mpm: negated setup fix

[33mcommit 5537e25f384bd7e27f8fa871cd739dc65b1a29c4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 22 18:44:08 2016 +0200

    detect-icmp-id: prefilter

[33mcommit fbe7e0aaebcb2b9d2503ba2f26702e4745e28138[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 22 18:44:00 2016 +0200

    detect-icmp-seq: prefilter

[33mcommit 3a86aeac65bedb5a002fa929940dde2c55ba60ce[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 22 16:29:48 2016 +0200

    detect-icode: implement as u8 hash prefilter

[33mcommit 6a3917b375a8c4298a02105d6f52359770bc76b9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 22 15:21:55 2016 +0200

    detect-itype: implement as u8 hash prefilter

[33mcommit f5d2166e23e693b0133651e3f272ff58a804f3e3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Aug 20 17:02:13 2016 +0200

    detect-id: implement prefilter

[33mcommit d5e5c11bd1582704606ced7d95c168fd2a5b01ef[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Aug 20 16:26:37 2016 +0200

    detect-icode: implement prefilter

[33mcommit 10f8e636d61e6aca87c5eac2749746f00ab43e72[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Aug 20 15:59:22 2016 +0200

    detect-itype: implement prefilter

[33mcommit b88c0a56b99644693b5bef8ce0d552ca5ae2b55c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Aug 20 13:25:37 2016 +0200

    detect-ttl: implement prefilter

[33mcommit 9ce300620e899ec189bcd22d9736076002a334dc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Aug 20 13:11:01 2016 +0200

    detect-seq: implement prefilter

[33mcommit 822e034753130234b6713f28f355adc2d004d606[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Aug 20 13:05:09 2016 +0200

    detect-flow: implement prefilter

[33mcommit 14b0537f9502ecbbdbc36f9120a064ee0f25c322[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Aug 20 13:04:22 2016 +0200

    prefilter: implement basic prefilter priority order

[33mcommit 4104f8c066bd8bff3c6796746921ab0b4023ad66[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Aug 20 11:00:43 2016 +0200

    detect-fragoffset: implement prefilter

[33mcommit 9195708d58cea902423f761d45ca070ec1d980e6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 19 17:04:51 2016 +0200

    detect analyzer: give minimal prefilter info

[33mcommit 065d9bceaebd7427cde8461ec0fcc58a62e08e17[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 19 16:34:38 2016 +0200

    detect-dsize: enable prefilter support
    
    Enable prefilter support for the dsize keyword.

[33mcommit 9ccd0c0f9081bad82921e50daad129705b91fda4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 18 14:20:41 2016 +0200

    prefilter: implement fragbits

[33mcommit 3b4aa06377461773240ae5a3e68fbf1d3b100b21[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 15 15:34:06 2016 +0200

    prefilter: engine for ack rules
    
    Rules for the 'ack' keyword are uncommon, but if used inspected
    against almost every packet.

[33mcommit 31ad0a133b9bb7d3e2384467fb3befd552ec803a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 14 17:17:31 2016 +0200

    prefilter: engine for tcp flags keyword
    
    If there are many rules for TCP flags these rules would be inspected
    against each TCP packet. Even though the flags check is not expensive,
    the combined cost of inspecting multiple rules against each and every
    packet is high.
    
    This patch implements a prefilter engine for flags. If a rule group
    has rules looking for specific flags and engine for that flag or
    flags combination is set up. This way those rules are only inspected
    if the flag is actually present in the packet.

[33mcommit 8798bf48b210123617a10c9b8046f2fe4ce701a5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Aug 20 14:54:37 2016 +0200

    profiling: support prefilter engines

[33mcommit ea26ee906f4c9b54fa1c4f6b974373a1a23f94e7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 22 15:21:19 2016 +0200

    prefilter: intro common engine for u8 matches

[33mcommit 99b9896bd75399993d2ece2bd1dc39629f5dd8b3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 19 10:03:21 2016 +0200

    prefilter: common funcs for packet header prefilters

[33mcommit f80623fd73e7d6df56bbc33f19218b4bc1e1e581[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 1 15:07:31 2016 +0200

    prefilter: show prefilter capability in --list-keywords

[33mcommit 56239690d041a55ae9c74f6d925d1ae25d48b526[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 14 17:10:00 2016 +0200

    prefilter: implement prefilter keyword
    
    Introduce prefilter keyword to force a keyword to be used as prefilter.
    
    e.g.
    alert tcp any any -> any any (content:"A"; flags:R; prefilter; sid:1;)
    alert tcp any any -> any any (content:"A"; flags:R; sid:2;)
    alert tcp any any -> any any (content:"A"; dsize:1; prefilter; sid:3;)
    alert tcp any any -> any any (content:"A"; dsize:1; sid:4;)
    
    In sid 2 and 4 the content keyword is used in the MPM engine.
    In sid 1 and 3 the flags and dsize keywords will be used.

[33mcommit 85cb749e8b62f0a665aeec29d534f7727d4bfb20[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jul 10 11:33:27 2016 +0200

    detect cleanup: remove sgh mpm_ctx pointers

[33mcommit 82d3c0b5209f85e5e5e63877cea8abb33345ee0e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jul 9 09:16:24 2016 +0200

    sgh: remove unused flags

[33mcommit 08407b6d47606f625bf4f0c502df254659fa9843[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jul 9 09:05:58 2016 +0200

    tls: mpm prefilter engines

[33mcommit 7acdc660613918e6279318f45e8d966beb35b0d3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jul 9 08:47:45 2016 +0200

    smtp file_data: mpm prefilter engine

[33mcommit 0019a7bd9f36916ccb699793d5af4893ee88dcda[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jul 9 08:27:56 2016 +0200

    http_raw_header: mpm prefilter engine
    
    Register for both regular headers and trailer.

[33mcommit cef12ed80f8bf9db3c9a12d8f3bcbb031f27efd9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jul 9 08:11:31 2016 +0200

    http_server_body / file_data: mpm prefilter engine

[33mcommit 5646dd9ecf8b0032c2389a8ef2bcdacf693e208d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jul 9 07:59:29 2016 +0200

    http_client_body: mpm prefilter engine

[33mcommit 9b6fd6bb48d1d8284e253e8bc44eb7d1c2834280[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jul 9 07:16:58 2016 +0200

    http_headers: mpm prefilter engines
    
    Register for both regular headers and trailers.

[33mcommit 9cab3ea2cdf78e815714febcf364317fb7072f60[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 8 19:35:13 2016 +0200

    http_stat_code: mpm prefilter engine

[33mcommit 4d57b2fc6380d45b737c3adc619cef0fbc4c52ab[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 8 19:28:46 2016 +0200

    http_stat_msg: mpm prefilter engine

[33mcommit 86d303e32ba1cc7a4dba4a989b74387ab30b3d03[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 8 18:48:54 2016 +0200

    http_raw_host: mpm prefilter engine

[33mcommit 521884921300cedca9c8ba8034d47c4c4d104bba[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 8 18:38:33 2016 +0200

    http_host: mpm prefilter engine

[33mcommit 61c3748fc479510cf525dbee090dcb2d3c622750[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 8 18:27:36 2016 +0200

    http_user_agent: mpm prefilter engine

[33mcommit a43a69305ddaf543daeef8f86317f74506287465[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 8 17:01:48 2016 +0200

    http_cookie: mpm prefilter engine

[33mcommit 7a46364e429eb15c3420de8f5e1ec5c4e19c65b1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 8 13:07:52 2016 +0200

    http_raw_uri: mpm prefilter engine

[33mcommit 746a169127b2939f05f92d62543a47d20a2d7b49[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 8 10:15:20 2016 +0200

    dns_query: mpm prefilter engine

[33mcommit 9ff5703c4972effbb9a93dcbaefb18917c0a566b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 7 19:25:10 2016 +0200

    packet/stream: mpm prefilter engine

[33mcommit 72f2a78b1f5cf22766a26b5f9c1e41886284954c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 7 18:56:20 2016 +0200

    http_method: mpm prefilter engine

[33mcommit b62c4cc359c223eacceec3e095cd3172aca03564[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 7 13:22:20 2016 +0200

    http_uri: mpm prefilter engine
    
    Inspect partial request line as well.

[33mcommit 5bcdbe39221d5da8b63b9e44b834102c07cb49dd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 6 21:45:47 2016 +0200

    prefilter: introduce prefilter engines
    
    Introduce abstraction layer for prefilter engines.

[33mcommit 3dad824fb2b5501bfac34513c6a9d26cf0265a49[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 14 15:02:43 2016 +0200

    detect: rename SignatureNonMpmStore
    
    New name is SignatureNonPrefilterStore to reflect that it's not just
    about MPM anymore.

[33mcommit 17bc0299fe1eb4305d0bcea05399eccaa5b13b6d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 14 13:37:34 2016 +0200

    detect: rename non_mpm lists/vars to non_pf
    
    Rename to non_pf: non prefilter.

[33mcommit bb0cd0e883c90e551110e79638b8bd017eac1a66[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 14 13:15:31 2016 +0200

    prefilter: rename PatternMatcherQueue datatype
    
    In preparation of the introduction of more general purpose prefilter
    engines, rename PatternMatcherQueue to PrefilterRuleStore. The new
    engines will fill this structure a similar way to the current mpm
    prefilters.

[33mcommit 4c0ab681f20b804d2eae174698579f7043a38974[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jul 10 11:40:19 2016 +0200

    mpm: remove Cleanup API call
    
    It's unused by all of the implementations.

[33mcommit 7c4701691309305ef294cde729542f22ebe9aaa2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 15 16:09:03 2016 +0200

    detect-fragoffset: minor cleanup

[33mcommit a41695f29f06e7ed692e25851a9f5298de34c8c3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 7 10:48:04 2016 +0200

    uricontent: remove left over func decl

[33mcommit ff70e0cca0a57011d2073d3fe05a2006b7ffb868[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 7 10:33:28 2016 +0200

    mpm tls: remove unused function args

[33mcommit ad3a55d9381c82ee7164fa89143fa77064654d9f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 7 10:30:47 2016 +0200

    mpm dns query: remove unused function args

[33mcommit d647db17751837fe15e157992b9b3890359403a5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 7 10:25:52 2016 +0200

    mpm stat code: remove unused function args

[33mcommit bd03307921a76ac0df01b176fd24f20a9ba251c9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 7 10:24:19 2016 +0200

    mpm stat msg: remove unused function args

[33mcommit 6d54b70db4b14d4b55115fd1c5dde347029cac28[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 7 09:45:19 2016 +0200

    mpm ua: remove unused function args

[33mcommit 704afeb078343baaa41abe66cc4bbeca1d2cf623[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 7 09:42:52 2016 +0200

    mpm cookie: remove unused function args

[33mcommit 4229e603f0b47469e1ada05248824dbed91928eb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 7 09:37:30 2016 +0200

    mpm raw host: remove unused function args

[33mcommit 1380853ee859e589e43ba5e2e2790d2b32785c0a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 7 09:34:43 2016 +0200

    mpm host: remove unused function args

[33mcommit b40ecb73563ca4acb034ae69aefeea08aa48b467[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 7 09:29:36 2016 +0200

    mpm method: remove unused function args

[33mcommit 3d5807ba448c874a69565e690f10718cdc2c1a7c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 7 09:25:48 2016 +0200

    mpm raw uri: remove unused function args

[33mcommit d461c7888ad3c08e8ea0c5abca418ecdd46640cd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 7 09:24:00 2016 +0200

    mpm uri: remove unused function args

[33mcommit c4dcb205225097dc7c672b4c8435506465ac8b44[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 18 09:59:22 2016 +0200

    detect-parse: add new func to get last sigmatch
    
    Add SigMatchGetLastSM which simply returns the very last SM added
    to the signature.
    
    Minor cleanups.

[33mcommit 3ab405dc502222e4263234ccb5f0953293744b2a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 28 21:11:14 2016 +0200

    doc: reorganize hyperscan guide

[33mcommit 99d5bf4e68adf640b4dbd14aea64acfb1d374002[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 28 21:01:58 2016 +0200

    doc: improve tuning/perf docs

[33mcommit c7c8de7d59333d1da1c8b8a524bd9468e06d2aa7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 28 20:44:30 2016 +0200

    doc: fix ET example URL

[33mcommit 485544d88559239efb83223babb5b1e66ccf106d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 28 20:44:17 2016 +0200

    doc: improve commandline options

[33mcommit 3ca663d7ffe98e9c77f18bc0efff3bad5753f24c[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Sep 28 13:50:01 2016 +0200

    output-json-flow: display bypass method
    
    In the case of a bypassed flow we add a 'bypass' key that can
    be 'local' or 'capture'. This will allow the user to know if
    capture bypass method is failing by looking at the 'bypass' key.

[33mcommit e6bac998d9acfc9eac1f08ff255e8b72ff5c3364[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Mon Sep 26 16:45:15 2016 +0200

    flow: add timeout for local bypass
    
    This adds a new timeout value for local bypassed state. For user
    simplication it is called only `bypassed`. The patch also adds
    a emergency value so we can clean bypassed flows a bit faster.

[33mcommit 51bfe4960a1b55a7108ab0f6c6219d9d3fe2c7e5[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Sep 26 13:35:44 2016 +0200

    flow: discard packets belonging to bypassed flows

[33mcommit 724069626d036adf2bff532b3275d501ea926409[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Sep 26 13:22:34 2016 +0200

    flow: downgrade to local bypass if we see packets
    
    If we see packets for a capture bypassed flow after some times, it
    means that the capture method is not handling correctly the bypass
    so it is better to switch to local bypass method.

[33mcommit 4cf887b4f7bbc68f814925e04d8e2fc6dc781ef2[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Sep 26 13:17:01 2016 +0200

    flow: update lastts in FlowHandlePacketUpdate
    
    This allows to make it conditional to the state of packet and
    then trigger modified behavior.

[33mcommit 5b71b5834f8a319702685ef791c8b62ed6420c83[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Mon Feb 8 13:21:54 2016 +0100

    filestore: avoid conflict with bypass keyword
    
    If a packet triggers a rule which contains both
    bypass and filestore keywords,
    it won't be stored since it's not inspected.
    
    To avoid that, when a rule containing filestore keyword
    we make sure that also bypass keyword is present.

[33mcommit 07564c4e41cfcfdbcaaecf20d52d89159acc23f4[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Tue Feb 2 11:37:23 2016 +0100

    detect: add bypass keyword
    
    This adds a new keyword which permits to call the
    bypass callback when a sig is matched.
    
    The callback must be called when the match of the sig
    is complete.

[33mcommit c19cd12620b8d5ce90f37f8c6b52681bb06eb3d3[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jan 28 21:41:24 2016 +0100

    flow: bypass encrypted and after stream depth flow
    
    This patch activates bypass for encrypted flow and for flow
    that have reached stream depth on both side.
    
    For encrypted flow , suricata is stopping the inspection so
    we can just get it out via bypass. The same logic apply
    for flow that have reached the stream depth.
    
    For a basic test of feature, use the following ruleset:
    
    ```
    table ip filter {
            chain output {
                    type filter hook output priority 0; policy accept;
                    ct mark 0x1 counter accept
                    oif lo counter queue num 0
            }
    
            chain connmark_save {
                    type filter hook output priority 1; policy accept;
                    mark 0x1 ct mark set mark counter
                    ct mark 0x1 counter
            }
    }
    ```
    
    And use bypass mark and mask of 1 in nfq configuration. Then you
    can test the system by scp big file to 127.0.0.1. You can also
    use iperf to measure the performance on localhost. It is recommended
    to lower the MTU to 1500 to get something more realistic by increasing
    the number of packets..

[33mcommit 177df305d429079642f31c5aaa14b17899b22a24[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Mon May 23 09:53:08 2016 +0200

    stream-tcp: enable bypass setting
    
    This permits to enable/disable in suricata.yaml
    and the bypass function will be called
    when stream.depth is reached.

[33mcommit 97783f81428049dec040f53207b2bd9743e266dc[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Mon May 23 09:31:12 2016 +0200

    nfq: introduce bypass function

[33mcommit 285b4dd981c3d62997477f94fe267ccc7e525fc6[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Sep 19 16:21:55 2016 +0200

    decode: implement bypass function
    
    Call the packet bypass callback if necessary and update the flow
    state. In case of failure we switch to local bypassed state and set
    capture bypassed state if the callback is successful.

[33mcommit 68d9677eea1fce8553223c49e7d808d0deee200c[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Sep 26 01:25:52 2016 +0200

    flow: force reassembly for bypassed flows
    
    As capture method like nfq will cut both side of the flow instantly
    we will not get the hack for most data which have been received. So
    it is better to force reassembly to be sure to get the timeout of
    the entry.

[33mcommit 39c8786a8ef2f146cfaff04929d3a19617933bfc[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Sep 26 01:25:32 2016 +0200

    flow: get bypass info in get used flow function

[33mcommit 07ef451c2b89f6785047b4855003895e002b9fcb[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Sep 24 12:12:09 2016 +0200

    flow: add pruned bypassed flow counter

[33mcommit 745dad9809bde03c6e3560e969b255321a241556[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Sep 16 00:49:35 2016 +0200

    flow: display info about bypass in log

[33mcommit e88555caf96feb0a78552f02c48a4a5f294cf196[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Sep 17 10:18:08 2016 +0200

    flow: add bypassed states
    
    This patch adds two new states to the flow:
    * local bypass: for suricata only bypass, packets belonging to
    a flow in this state will be discard fast
    * capture bypass: capture method is handling the bypass and suricata
    will discard packets that are currently queued
    
    A bypassed state to flow that will be set on flow when a bypass
    decision is taken. In the case of capture bypass this will allow
    to remove faster the flow entry from the flow table instead of
    waiting for the "established" timeout.

[33mcommit 616782aa986be1a5da6db405413cf9cda8d4645e[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Wed Jul 20 11:46:00 2016 +0200

    packet: add API for bypass

[33mcommit 7011d8f34cc235eaeac2787c787041a07f1afcc7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 28 15:14:00 2016 +0200

    doc: remove/cleanup 'guides'

[33mcommit 73b355e24a3dd9d4ec4b7cbe8870083dc243bf2a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 28 14:47:23 2016 +0200

    doc: fix lua keyword name

[33mcommit 43c2db0a557352e9f73d097f314269f48484a76a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 28 14:10:56 2016 +0200

    doc: update what is suricata section

[33mcommit 1f2f1d70634221c637685b43fe50541ca7d52267[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 28 13:45:55 2016 +0200

    doc: commandline improvements

[33mcommit 879ab41ade086a05a4eacb3d3e0fe83f69b805e5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 28 13:33:46 2016 +0200

    doc: move drop privs into configuration

[33mcommit 7fa390de39b155b7e39f811bc6478d5856fab2e2[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Sep 20 21:16:05 2016 -0600

    doc: bundle pre-built man page in distribution

[33mcommit f511f863986db86d5b060bc1a92da1077cd6e3fb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 21 07:39:09 2016 +0200

    doc: rename to 'Suricata User Guide'

[33mcommit 7ad667f282aaa5b7dd580da317fa3fdda05b5401[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 21 07:38:45 2016 +0200

    doc: move snort compat to rule chapter

[33mcommit 614e2f1d432ba5ba8eeeada3170a489f1b1b7002[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Sep 20 17:07:15 2016 -0600

    doc: make target for pdf, and suricata.1 shortcut

[33mcommit 6149b014ec3ec8e3bec380212488761371a8b075[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Sep 20 10:48:14 2016 -0600

    doc: shorten some paths to satisfy distcheck
    
    Long paths were being dropped from the source package.

[33mcommit 2e78bf0ba81bcb8cebc25bd49f717daf301d8658[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Sep 20 10:37:51 2016 -0600

    doc: list files/directories in EXTRA_DIST
    
    So files get included in the distribution and pass
    make distcheck.

[33mcommit b1ced40ee437a964218fdb4eee4fd58c954e15f4[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Sep 20 09:57:36 2016 -0600

    doc: get Suricata version from autoconf vars

[33mcommit ab93eb97b9a61079afdfd66a52b1fe80b00040eb[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Sep 20 09:29:17 2016 -0600

    doc: use - instead of _ in filenames for consistency

[33mcommit b8521a52f38e1ccc5607a9b13ba8fe6ce6043940[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Sep 20 09:28:09 2016 -0600

    doc: link up hyperscan and packet capture

[33mcommit b9a7335ec4605ba41f257059541efb964669cb36[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Mar 7 13:11:01 2016 -0600

    doc: expose variables for substition in docs

[33mcommit 15d2a7a49d07796007c4b9639b5cf5130e265a16[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Feb 26 17:30:15 2016 -0600

    doc: minimal man page: suricata.1

[33mcommit 6eedd0068b9af4f1480558aa3f6b1aef4ae6be21[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Feb 18 15:50:13 2016 -0600

    doc: hook sphinx into build

[33mcommit 5e76a54714d41aac12818d4a535001a313689b3e[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Sep 20 08:59:26 2016 -0600

    doc: packet capture: sync up with wiki

[33mcommit 7f5ffeebada67d09a1dfa8e4f002510593e0d83d[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Sep 20 08:59:10 2016 -0600

    doc: dns: sync up with wiki

[33mcommit ba4931ddb64713bcadb7523dad83aa829783e073[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Aug 19 10:20:49 2016 -0600

    doc: flow:not_established not supported

[33mcommit 7806ae8f57155b94c95065b2002c3e7b21eecdd4[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Wed Jul 13 22:51:05 2016 +0200

    docs: sync up to recent redmine

[33mcommit 0e63c9ca41ea13d12d630687dc8eb28326227b13[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Mar 30 10:52:19 2016 -0600

    doc: add GPL and CC licenses

[33mcommit 7e3591e3ce1e3a59cd90882a3593f6a42e13528c[m
Author: brandonlattin <latt0050@umn.edu>
Date:   Wed Feb 24 11:55:46 2016 -0600

    doc: performance: Replace 'medium' with 'custom'
    
    I assume the intent was to use the custom-values that are being defined.

[33mcommit 8e655cf107db515d6bcc601ccf9c45481cc56a09[m
Author: Andi <andi@geekosphere.org>
Date:   Fri Feb 26 23:56:30 2016 +0100

    eve-json-format: add newest version from the wiki
    
    This was added by pevma in the wiki, so should go into the sphinx doc as well.

[33mcommit a96225527a461b0809a68cbb94bac4bc08a6c89c[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Feb 22 11:53:48 2016 -0600

    doc: update url to modbus paper as advised by David Diallo.

[33mcommit 2751baae4641b4d3c9b0d53b7de40a8cbcea923a[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Feb 18 14:46:21 2016 -0600

    doc: rename from "sphinx" to "userguide"

[33mcommit 16f6fab502a7d177dbdbfc516d9a744275a803f6[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Sep 20 15:57:31 2016 -0600

    doc: user .. option:: for command line option formatting

[33mcommit 8d47c13d2a7d3f6d1d26062132a43ad650a201e7[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Feb 4 10:18:20 2016 -0600

    doc: new global threshold examples from Peter Manev.

[33mcommit 11eb8640ddb32e44019089559c00851f0d07fc0d[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Jan 27 14:50:37 2016 -0600

    doc: acknowledge doc/wiki authors

[33mcommit c0aacec9b77bdd59f0d928ca84abf4e3e081d44e[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Tue Jan 5 20:55:12 2016 +0100

    doc: reorder duplicates

[33mcommit 347e3b49726e0ad6e32c96f9779438855dc4900c[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Tue Jan 5 20:47:50 2016 +0100

    doc: fixed remaining FIXME

[33mcommit 715485a42ba8ad07782f72ed34d792de584ffad4[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Tue Jan 5 20:19:10 2016 +0100

    doc: finished remaining conversion for output

[33mcommit 5a542a9934b0923140471a6b3d34fdef4ca3409c[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Tue Jan 5 03:23:54 2016 +0100

    doc: minor fixes in configuration causing errors/warnings

[33mcommit 398151ac765283e517da29c74e68d5b86a70f7ee[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Tue Jan 5 03:16:13 2016 +0100

    doc: added output section (some fixes still to do)

[33mcommit 2fa4547197d584f36808184d2c696ab172df32ce[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Jan 4 11:50:09 2016 -0600

    doc: reference fixups

[33mcommit 4b306fed14b3dee05ba9b7bf9282cf6aa0f064bf[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Jan 4 11:38:06 2016 -0600

    doc: fixup references

[33mcommit b252b0d84c95d884bdcba27a794f31f8085e65ad[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Jan 4 11:10:12 2016 -0600

    doc: add configuration

[33mcommit 253886b99f096d27d076e66598736807611ecc52[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Sun Jan 3 23:38:20 2016 +0100

    doc: added file-extraction

[33mcommit 1089ec1cd891067d3bda0646dfd50f0d28c95887[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Sun Jan 3 23:02:33 2016 +0100

    doc: added capture hardware except for napatech with file

[33mcommit 7f1e0d82fc1c3195501a0eb7653d8723c80833ca[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Sun Jan 3 23:02:26 2016 +0100

    doc: added public data sets with file

[33mcommit a65b585cd53797fff0840bbdc639a1084c2435d5[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Sun Jan 3 23:01:39 2016 +0100

    doc: added capture hardware except for napatech

[33mcommit 8618d824082d6579075d3b728948aace64f8e9a2[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Sun Jan 3 22:51:06 2016 +0100

    doc: added public data sets

[33mcommit 504a7607997251f9b09532899cdf363847be4461[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Sun Jan 3 22:48:50 2016 +0100

    doc: update gitignore to ignore node_modules

[33mcommit c8e5271c29d2d8c7e8bf367c857da6808c2d9ca2[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Sun Jan 3 22:48:16 2016 +0100

    doc: added setting up ips inline

[33mcommit d881f000f963904bd28a6590c7994cc6ed1c1138[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Sun Jan 3 01:22:42 2016 +0100

    doc: add index for reputation to match wiki

[33mcommit ae6c0af4921aeac953bd7cee165eb12c226ef266[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Sun Jan 3 01:05:13 2016 +0100

    doc: added initscripts

[33mcommit c04a60aaa0db8343e8bb863e1c9c2d47609c3d97[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Sun Jan 3 01:04:29 2016 +0100

    doc: added ip reputation

[33mcommit 630f3d3bc8c5dab83a83d6a94c5032114435c893[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Sun Jan 3 01:04:11 2016 +0100

    doc: added ip reputation

[33mcommit ba27602babb9ffbf1e305789ee48eb37e8967fd6[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Sun Jan 3 00:46:13 2016 +0100

    doc: fixed underline too short error

[33mcommit 07dac046d9578c0664ce6b8ea019e1a382dd570f[m
Author: Andi <andi@geekosphere.org>
Date:   Thu Dec 31 22:12:42 2015 +0100

    doc: Add ssl_state doc
    
    See https://redmine.openinfosecfoundation.org/issues/589

[33mcommit 733f1a5842aa2f3244f7c54319e72c10d99a8539[m
Author: Andi <andi@geekosphere.org>
Date:   Thu Dec 31 21:58:22 2015 +0100

    doc: Document http_host and http_raw_host
    
    Added doc for http_host and http_raw_host as mentioned in https://redmine.openinfosecfoundation.org/issues/756

[33mcommit aa6a975f1c2f5ff5006e071f13f8ac5c1172df4e[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Dec 17 11:25:08 2015 -0600

    doc: ignoring traffic

[33mcommit f27e85e346dfa2c8a2c7b46f872827b282672bb7[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Dec 17 11:19:34 2015 -0600

    doc: tcmalloc

[33mcommit f97c045bf11d4c579e44eed2a36bf533fc57c86a[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Dec 17 11:18:04 2015 -0600

    doc: runmodes

[33mcommit 38bf0df6f0c40c7e2d5529656ff23a0123a3c8ae[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Dec 17 11:14:15 2015 -0600

    doc: rule profiling

[33mcommit fc9d6219219fd0af89dbc71e666078cb1d139957[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Dec 17 11:12:00 2015 -0600

    doc: packet profiling

[33mcommit 7b8aa62463b4694d259bae8947ec3f55c20fdbd5[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Dec 17 11:10:16 2015 -0600

    doc: statistics

[33mcommit 2574415a2d39aff73827d6f1f1d308c8f9f73dc3[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Dec 17 11:07:21 2015 -0600

    doc: tuning considerations

[33mcommit 235498717127c369d349c8d2303cee1c53f8c3a9[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Dec 17 11:05:57 2015 -0600

    doc: high performance config

[33mcommit ab69c93a28968d9e322d209090cf8cf9fc31d363[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Dec 17 10:53:59 2015 -0600

    doc: making sense of alerts

[33mcommit 6136ec583f105fc95913b443a5ef2d8001acaba6[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Dec 17 10:38:48 2015 -0600

    doc: oinkmaster

[33mcommit 5e0c39be57fc4e69c6e25d3a54cd1657fde86bbf[m
Author: Jason Ish <ish@unx.ca>
Date:   Sat Dec 5 11:38:56 2015 -0600

    doc: snort compatibility

[33mcommit 4f9f9c09ec96fb9d295aeabe7726431385fd1d44[m
Author: Jason Ish <ish@unx.ca>
Date:   Sat Dec 5 09:09:52 2015 -0600

    doc: command line options

[33mcommit 80e6830dece8b76cde55cfc84f34b8a1ab3c90d1[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Dec 4 12:04:46 2015 -0600

    doc: restructure directory layout

[33mcommit b0c2d6c8ee0e693157652fefc1131e54d4c37f9e[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Dec 4 11:50:35 2015 -0600

    doc: restructure the rules section a little

[33mcommit 7c9475e94debffc0d1da3327887c21be40e57c35[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Dec 4 11:45:41 2015 -0600

    doc: add fixme to broken images

[33mcommit b1bc0038aeecce4184e6c1ad7e51dfee43d1698d[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Dec 4 10:26:53 2015 -0600

    doc: finish off the rules section

[33mcommit 98f56f991673196340ffbd66dce9f5e7a5c6868b[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Dec 4 10:01:32 2015 -0600

    doc: dnp3 keywords

[33mcommit 9dea001c7da76813d9090288437ebbd520dcda8e[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Dec 4 09:58:11 2015 -0600

    doc: modbus keyword

[33mcommit 082758deae945b296e7dc1faeb718bdeb703de10[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Dec 4 09:55:09 2015 -0600

    doc: rule profiling

[33mcommit 30f3ecf22309df76efaecbb07aad31563ba151e0[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Dec 4 09:53:19 2015 -0600

    doc: normalized buffers

[33mcommit 75662a16da053cbcf89774812728c33eb3eeaac8[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Dec 4 09:52:02 2015 -0600

    doc: tls keywords

[33mcommit 58691fbb48774aff719a781228948347d1f68457[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Dec 4 09:40:47 2015 -0600

    doc: live rule swap

[33mcommit 107c12afd6ed180e529f8be5c164559d4f5fcf2d[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Dec 4 09:38:16 2015 -0600

    doc: adding your own rules

[33mcommit 3366571eebc70183325f173c324ad24872c0b173[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Dec 4 09:22:52 2015 -0600

    doc: rule lua scripting

[33mcommit 1e6df87ecb92d068ae72d28950ac0f2191f159cc[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Dec 4 09:11:52 2015 -0600

    doc: rule lua scripting

[33mcommit 62e0f6a3e3864cc0ec89dbbc37e2fc83f71e22fd[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Dec 4 09:07:37 2015 -0600

    doc: thresholding

[33mcommit b3b5e333e4a1c206242c9bb130d0f3a1e43ff243[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Dec 4 09:01:18 2015 -0600

    doc: file-keywords

[33mcommit 5537c0f63cca56e1a38a055f821ff7b0e2f9e1bd[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Dec 2 15:59:28 2015 -0600

    doc: flowint

[33mcommit 5f9d265fdf509ee339dac37170d4dc7bbb5bd37c[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Dec 2 15:55:17 2015 -0600

    doc: flow-keywords

[33mcommit 0c602c5f19d69b3a9e14557b0a0d0878d49c2b35[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Dec 2 15:24:12 2015 -0600

    doc: pcre

[33mcommit 7c36361aacb3ca6fb602a2d410c4f0105c1afe11[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Dec 2 15:23:52 2015 -0600

    doc: helper tool to convert from wiki to sphinx

[33mcommit 3f2b1277d12f58c394b0f419631e5135875005eb[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Dec 2 07:22:20 2015 -0600

    doc: header-keywords

[33mcommit 33e96c508768b6d4b7c519d1ed9925c23efe4d96[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Dec 2 07:12:02 2015 -0600

    doc: fast-pattern

[33mcommit a4645732307177970ceea6380fa87d2e2d3f01f5[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Dec 2 06:34:18 2015 -0600

    doc: payload-keywords

[33mcommit 6d7c0e827441ea1bb18c4b7d25fa8a3881d61a17[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Nov 6 19:01:15 2015 +0100

    docs: sample of sphinx docs

[33mcommit 1f4725fcaba4ecd2e68f032a5056377d538a0519[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Sep 27 09:38:42 2016 -0600

    detect-tls: make check on fingerprint directional

[33mcommit 44c846f2f8558094344344142d04e71d72b7466c[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Sep 27 09:07:10 2016 -0600

    tls-json: make tls events direction sensitive
    
    Previously the src/dest ips in TLS events would differ between
    IDS and IPS modes. Make the header creation direction sensitive
    so they are identical in both modes.

[33mcommit c0f93503b76b4b567b64fe7c8d7220a85a0f1770[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Mon Sep 26 15:53:48 2016 +0200

    util-decode-der-get: fix coverity warning
    
    *** CID 1373380:  Control flow issues  (DEADCODE)
    /src/util-decode-der-get.c: 126 in UtctimeToTime()
    120         year = strtol(yy, NULL, 10);
    121         if (year >= 50)
    122             snprintf(buf, sizeof(buf), "%i%s", 19, utctime);
    123         else if (year < 50)
    124             snprintf(buf, sizeof(buf), "%i%s", 20, utctime);
    125         else
    >>>     CID 1373380:  Control flow issues  (DEADCODE)
    >>>     Execution cannot reach this statement: "goto error;".
    126             goto error;
    127
    128         time = GentimeToTime(buf);
    129         if (time == -1)
    130             goto error;
    131

[33mcommit d6f051cdf94a060139580377074982e85506aba3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 27 17:10:16 2016 +0200

    http: removed unused flags

[33mcommit a194dfbd5b1ac6b2b2db594267cf3caac7686618[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu May 26 23:11:34 2016 +0200

    app-layer: tx counter implementation
    
    This patch adds a transaction counter for application layers
    supporting it. Analysis is done after the parsing by the
    different application layers.
    
    This result in new data in the stats output, that looks like:
    ```
        "app-layer": {
          "tx": {
            "dns_udp": 21433,
            "http": 12766,
            "smtp": 0,
            "dns_tcp": 0
          }
        },
    ```

[33mcommit 675fa564972b5a5336a31fe36f7ff1313ec4c7f3[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Mon Sep 26 14:55:16 2016 +0200

    app-layer: add ThreadVars to AppLayerParserParse
    
    To be able to add a transaction counter we will need a ThreadVars
    in the AppLayerParserParse function.
    This function is massively used in unittests
    and this result in an long commit.

[33mcommit 5908dd080475bccd689bf2d5309b92530f33801c[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Tue Apr 26 14:58:59 2016 +0200

    app-layer: add flow counters
    
    This adds per flow counters for all
    supported protocols.
    
    This results in new data in stats output that looks like:
    ```
        "app-layer": {
          "flow": {
            "http": 9310,
            "ftp": 0,
            "smtp": 0,
            "tls": 71,
            "ssh": 0,
            "imap": 0,
            "msn": 0,
            "smb": 170,
            "dcerpc_udp": 0,
            "dns_udp": 870,
            "dcerpc_tcp": 2,
            "dns_tcp": 0
          },
        },
    ```

[33mcommit 398489e6df179e621563ac966e47a6a376c4e3de[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Feb 2 23:44:24 2016 +0100

    stream: fix depth reached detection
    
    When a segment only partially fit in streaming depth, the stream
    depth reached flag was not set resulting in a continuous
    inspection of the rest of the session.
    
    By setting the stream depth reached flag when the segment partially
    fit we avoid to reenter the code and we don't take anymore a code
    path resulting in the flag not to be set.

[33mcommit dc8e0b3cf2a3b8ffc20f8c40832e31219d9fd4da[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed Sep 21 12:40:12 2016 +0200

    detect: add detect engine for tls validity keywords
    
    Add detect engine for tls validity keywords (tls_cert_notbefore and
    tls_cert_notafter).

[33mcommit d91664d67aea0b0d63939e6af319e3dac1d81592[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu Sep 22 12:19:41 2016 +0200

    detect-dns: move DetectEngineInspectGenericList to detect-engine.c
    
    Move DetectEngineInspectGenericList from detect-engine-dns.c to
    detect-engine.c to enable it to be used other places as well.

[33mcommit cad638697d5ba22b5a5903c8dcf22b8f35a1409c[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Oct 20 16:03:04 2015 +0200

    lua: add lua functions for certificate validity dates
    
    Add functions TlsGetCertNotBefore and TLSGetCertNotAfter to get notBefore
    and notAfter fields from TLS certificate in lua scripts.

[33mcommit 67ea82152179c604daf2ac9dae0d09dc16e961e1[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Oct 20 15:59:48 2015 +0200

    util-lua: add (wrapper) function to push integer to lua scripts

[33mcommit ee2494906528e29ebbc4afc9fd4f23b155c92ba4[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Oct 20 15:08:31 2015 +0200

    log-tls: add notBefore and notAfter fields to extended output
    
    Add notBefore and NotAfter fields from TLS certificate to extended tls
    log output.

[33mcommit 5b230bbce50e5c979221969bfdae3d42f8e558b8[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Oct 20 14:58:05 2015 +0200

    output-json-tls: add notBefore and notAfter fields to extended output
    
    Add notBefore and notAfter fields from TLS certificate to extended JSON
    output.

[33mcommit ac4e308140468fe2ee2ae32aa79392645fdbf7db[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Mon Mar 14 10:31:16 2016 +0100

    util-time: add function to create a UTC time string
    
    Add function CreateUtcIsoTimeString to create a UTC time string.

[33mcommit ea5696812fd392af1ed680b9c9f16c890491e877[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Oct 20 14:16:13 2015 +0200

    detect: add tls_cert_notbefore and tls_cert_notafter keywords
    
    Detection plugin for TLS certificate fields notBefore and notAfter.
    
    Supports equal to, less than, greater than, and range operations
    for both keywords. Dates can be represented as either ISO 8601 or
    epoch (Unix time).
    
    Examples:
    alert tls [...] tls_cert_notafter:1445852105; [...]
    alert tls [...] tls_cert_notbefore:<2015-10-22T23:59:59; [...]
    alert tls [...] tls_cert_notbefore:>2015-10-22; [...]
    alert tls [...] tls_cert_notafter:2000-10-22<>2020-05-15; [...]

[33mcommit c49cb053992f5a4675782c81e585bdcea773427e[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Oct 23 12:55:34 2015 +0200

    util-time: add function to parse a date string based on patterns
    
    Add function SCStringPatternToTime to parse a date string based on an
    array of pattern strings.

[33mcommit bfd16dc74eecb52ce3eb2bb13348a2861e77c21d[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Mon Oct 19 10:54:40 2015 +0200

    app-layer-ssl: add validity dates from certificate
    
    Parsing of certificate validity dates to get notBefore and notAfter
    fields.

[33mcommit 6c1c53b5a115ccd2859691a29dade9c6b8d981bc[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Oct 30 09:14:54 2015 +0100

    util-time: add function to convert tm to time_t
    
    Add function SCMkTimeUtc to convert broken-down time to Unix epoch in UTC.

[33mcommit 03cda74b953258e10d0f2780e8f2d2d45d2f7f90[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Mon Oct 19 10:19:20 2015 +0200

    util-decode-der: decode GeneralizedTime
    
    Decode ASN.1 element type GeneralizedTime in DER-encoded
    structures.

[33mcommit b91486169221fdc2dfdeb3933bcd57de4b9a023f[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Sep 23 13:52:28 2016 +0200

    app-layer-ssl: use new unit test macros

[33mcommit 12356d1fca6d0cea345c614b5f918c840292e0a3[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Sep 23 12:55:26 2016 +0200

    detect-ssl-version: use new unit test macros

[33mcommit 1503ac97a6234aa455a935039fa8c214f42ac8d6[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Sep 23 12:33:59 2016 +0200

    detect-tls-version: use new unit test macros

[33mcommit d9e2cde585d623cc47dc7fa98c1ccc3280a98282[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Sep 23 12:13:29 2016 +0200

    detect-tls-sni: use new unit test macros

[33mcommit 8e77d0c312bc66d8125aa8476dc88836bf15736d[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Mon May 23 14:32:41 2016 +0200

    detect: fix faulty tls_sni unittests

[33mcommit 9d23ad9d2512ffd9b6c59dea93a1102c57782591[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Mon May 23 13:34:43 2016 +0200

    tls: fix faulty unittests

[33mcommit b74f3fd9786cbaf9287c50f46a50583c2af64924[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed May 18 15:36:25 2016 +0200

    coverty: fix CID 1361873

[33mcommit 7c36b11a8405f912456bcbef84d93cdc4e3cbf76[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed May 18 15:34:32 2016 +0200

    rules: add rule for HANDSHAKE_INVALID_LENGTH event

[33mcommit c36595eb35a8fddfde037c42df638fdf09777d07[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed May 18 15:30:49 2016 +0200

    tls: set event if input buffer overflows
    
    Set HANDSHAKE_INVALID_LENGTH event if input buffer overflows while
    decoding client_hello/server_hello.

[33mcommit 1f7b813080b8595435bf4b8b97a9c0df49a67f05[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Mon May 23 13:38:01 2016 +0200

    app-layer-tls: add name to authors

[33mcommit 12da0e8681fea7b3ac781c9cfff403d9373a1461[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed May 18 15:12:48 2016 +0200

    tls: add function for decoding client_hello
    
    Add function TLSDecodeHandshakeHello() to enable using the same code
    for decoding both client_hello and server_hello.

[33mcommit 04da43d65d4ba812a0595f6018d48344d1f155ef[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Sep 19 10:43:00 2016 -0600

    rule parsing: check for balanced double quotes
    
    If a rule option value starts with a double quote, ensure it
    ends with a double quote, exclusive of white space which gets
    trimmed anyways.
    
    Catches errors like 'filemagic:"picture" sid:5555555;' reporting
    that a missing semicolon may be the error.

[33mcommit 48b3cb04924f7d5e9d456c4e6a8151f3267e4577[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 24 09:22:39 2016 +0200

    unittests: fix tests

[33mcommit 6530c3d0d820d3aea02360dbd31f7c90c3881efe[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 24 08:40:33 2016 +0200

    unittests: replace SCMutex* calls by FLOWLOCK_*

[33mcommit 682459d640318f4d3f991e52a04cab5c71140c39[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 23 13:15:48 2016 +0200

    file: remove dead code

[33mcommit 70c16f50e733f6f7cc40c1bc3465eb966e3be517[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat May 14 08:56:49 2016 +0200

    flow-manager: optimize hash walking
    
    Until now the flow manager would walk the entire flow hash table on an
    interval. It would thus touch all flows, leading to a lot of memory
    and cache pressure. In scenario's where the number of tracked flows run
    into the hundreds on thousands, and the memory used can run into many
    hundreds of megabytes or even gigabytes, this would lead to serious
    performance degradation.
    
    This patch introduces a new approach. A timestamp per flow bucket
    (hash row) is maintained by the flow manager. It holds the timestamp
    of the earliest possible timeout of a flow in the list. The hash walk
    skips rows with timestamps beyond the current time.
    
    As the timestamp depends on the flows in the hash row's list, and on
    the 'state' of each flow in the list, any addition of a flow or
    changing of a flow's state invalidates the timestamp. The flow manager
    then has to walk the list again to set a new timestamp.
    
    A utility function FlowUpdateState is introduced to change Flow states,
    taking care of the bucket timestamp invalidation while at it.
    
    Empty flow buckets use a special value so that we don't have to take
    the flow bucket lock to find out the bucket is empty.
    
    This patch also adds more performance counters:
    
    flow_mgr.flows_checked         | Total    | 929
    flow_mgr.flows_notimeout       | Total    | 391
    flow_mgr.flows_timeout         | Total    | 538
    flow_mgr.flows_removed         | Total    | 277
    flow_mgr.flows_timeout_inuse   | Total    | 261
    flow_mgr.rows_checked          | Total    | 1000000
    flow_mgr.rows_skipped          | Total    | 998835
    flow_mgr.rows_empty            | Total    | 290
    flow_mgr.rows_maxlen           | Total    | 2
    
    flow_mgr.flows_checked: number of flows checked for timeout in the
                            last pass
    flow_mgr.flows_notimeout: number of flows out of flow_mgr.flows_checked
                            that didn't time out
    flow_mgr.flows_timeout: number of out of flow_mgr.flows_checked that
                            did reach the time out
    flow_mgr.flows_removed: number of flows out of flow_mgr.flows_timeout
                            that were really removed
    flow_mgr.flows_timeout_inuse: number of flows out of flow_mgr.flows_timeout
                            that were still in use or needed work
    
    flow_mgr.rows_checked: hash table rows checked
    flow_mgr.rows_skipped: hash table rows skipped because non of the flows
                            would time out anyway
    
    The counters below are only relating to rows that were not skipped.
    
    flow_mgr.rows_empty:   empty hash rows
    flow_mgr.rows_maxlen:  max number of flows per hash row. Best to keep low,
                            so increase hash-size if needed.
    flow_mgr.rows_busy:    row skipped because it was locked by another thread

[33mcommit aee1f0bb99b82bb2cfc6553ecae602ea81acaa05[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 13 23:04:30 2016 +0200

    flow: simplify timeout logic
    
    Instead of a single big FlowProto array containing timeouts separately
    for normal and emergency cases, plus the 'Free' pointer for the
    protoctx, split up these arrays.
    
    An array made of FlowProtoTimeout for just the normal timeouts and an
    mirror of that for emergency timeouts are used through a pointer that
    will be set at init and by swapped by the emergency logic. It's swapped
    back when the emergency is over.
    
    The free funcs are moved to their own array.
    
    This simplifies the timeout lookup code and shrinks the data that is
    commonly used.

[33mcommit 96427cf371da885fe2cec0106d77853025947a0d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 13 22:13:59 2016 +0200

    flow: remove dead code

[33mcommit da8f3c987b0071555e5df79397985f87b52d7b87[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 22 12:38:54 2016 +0200

    offloading: make disabling offloading configurable
    
    Add a generic 'capture' section to the YAML:
    
      # general settings affecting packet capture
      capture:
        # disable NIC offloading. It's restored when Suricata exists.
        # Enabled by default
        #disable-offloading: false
        #
        # disable checksum validation. Same as setting '-k none' on the
        # commandline
        #checksum-validation: none

[33mcommit 5e3b61cc65b688a31b2bb25cbf674b77f4e92085[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 21 10:05:40 2016 +0200

    offloading: reduce verbosity to 'perf'

[33mcommit 2b2984dae9d418d869952dde01642e56bf617f1e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 21 07:59:51 2016 +0200

    offloading: implement restoring settings for BSD

[33mcommit 499e27de14c2d960eae60c1fc7f050c4422ca712[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 21 09:35:33 2016 +0200

    offloading: restore settings on exit

[33mcommit 9d48720f9a2590ce2d51d37433358bfda21c8579[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 20 23:02:02 2016 +0200

    af-packet: optionally disable offloading

[33mcommit 98092f63b531bae3f585016a700c92cb0c56eac7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 20 23:00:38 2016 +0200

    offloading: Linux ethtool offloading support

[33mcommit bc370606fc031743d42455b0be28547138ee2115[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 20 20:18:43 2016 +0200

    pcap: optionally disable offloading

[33mcommit 723a14c0fe4b1cb33c970988acef174d4d8d0492[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 20 20:17:30 2016 +0200

    netmap: optionally disable offloading

[33mcommit 2780fba1d120a69ecc7286441f79a6dc65d3c60e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 20 20:15:37 2016 +0200

    device: add global flag for disabling offloading
    
    Add global flag to disable offloading or just warn on it.

[33mcommit 7004987670f1e810fcb4558db7d581c106b7d533[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 20 20:11:55 2016 +0200

    offloading: preparation for disabling offload on BSD
    
    Add functions for setting IFCAP flags.

[33mcommit 30c853a3040966f3541017e0451480879eeec3b4[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Sep 21 14:19:55 2016 -0600

    detect-ssl-state: use new unit test macros

[33mcommit 487cdda93d1836acc33323c3b57135c1844a8f41[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Tue Sep 30 16:20:56 2014 -0600

    ssl: issue 1231 - support ssl state negation
    
    Snort compatible SSL state negation. Adds "," as a state
    separator, but keeps "|" for compatibility with existing
    Suricata rules.

[33mcommit afc796a0998e3e8b14d89cc2bd108d651fe1b818[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Wed Oct 1 23:27:39 2014 -0600

    ssl: store current state separately from cumulative state
    
    The ssl_state keyword needs the current state, not the cumulative state
    in order be compatible with Snort's implementation.

[33mcommit 7ce196e3bfd74898353d598b9b968ffdd844cc6a[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Sep 21 09:43:42 2016 -0600

    detect-pcre: use new unit test macros

[33mcommit 4cdcada397aa4fe2d3d3a37f1268c409205b2134[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Sep 19 10:45:05 2016 -0600

    pcre: fix missing quote in pcre unit test

[33mcommit f7481c407820430669d89e2b7a36b96e08d796a2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 22 10:45:29 2016 +0200

    file-hashing: restore 'force-md5'
    
    We don't want to break existing setups.
    
    Do issue a warning that a new option is available.

[33mcommit 4426f3ff5522c60a32dc1e900b0a478ef70f5146[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 22 10:26:56 2016 +0200

    file: introduce common flags handling function

[33mcommit 2f5663dfe9bb9e8f6c85869b0aa1e76f0efede72[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 22 10:26:12 2016 +0200

    common: introduce BIT_U16

[33mcommit 53ebe4c5380781c740106e445e7782e3cbfee0a5[m
Author: Duarte Silva <development@serializing.me>
Date:   Tue May 24 19:58:13 2016 +0200

    file-hashing: added configuration options and common parsing code

[33mcommit 89eb935f733c6b7d1521d140226ae1b2c251853a[m
Author: Duarte Silva <development@serializing.me>
Date:   Fri Apr 29 22:23:55 2016 +0200

    file-hashing: added support for SHA-256 file hashing

[33mcommit a6d928e269db561c223a31e5677f298708541009[m
Author: Duarte Silva <development@serializing.me>
Date:   Fri Apr 29 21:51:12 2016 +0200

    file-hashing: added support for SHA-1 file hashing

[33mcommit 188b382c46a13f266843b9546c3b9daf03b9dc02[m
Author: Duarte Silva <development@serializing.me>
Date:   Fri Apr 29 21:23:12 2016 +0200

    file-hashing: common code added
    
    Moved and adapted code from detect-filemd5 to util-detect-file-hash,
    generalised code to work with SHA-1 and SHA-256 and added necessary
    flags and other constants.

[33mcommit f1b550d9732ee41fc81288cc2e89ca1ebda3a096[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Mon Aug 8 10:04:17 2016 +0200

    tls: add unit tests for tls_cert_issuer

[33mcommit 20b41567d99003a1c9b07c4d61dd6aec06270408[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Mon Aug 8 09:52:51 2016 +0200

    tls: add unit tests for tls_cert_subject

[33mcommit 4172c4c8acbb94a9f2e4ca6614cd03aef77a7b67[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu Jul 21 10:28:33 2016 +0200

    tls: add (mpm) keyword tls_cert_subject
    
    This keyword is a replacement for tls.subject.

[33mcommit 9b2717799cc4eaa86e1c8d81be451e009961d822[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu Jul 21 09:24:40 2016 +0200

    tls: add (mpm) keyword tls_cert_issuer
    
    This keyword is a replacement for tls.issuerdn.

[33mcommit f1117ba2dcdf5ef4a8fcd6ec010b6ea1bb98622f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 10 15:49:21 2016 +0200

    iponly: fix unittests

[33mcommit 215d0d54c7771fdc735bf05302716ebf041e678b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 10 12:32:25 2016 +0200

    detect: optimize rule address parsing
    
    Many rules have the same address vars, so instead of parsing them
    each time use a hash to store the string and the parsed result.
    
    Rules now reference the stored result in the hash table.

[33mcommit 04faf1a93a80248c6f58268428eb16797a0776e1[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Fri Sep 16 05:24:50 2016 -0700

    util-decode-mime: remove quote from boundary= string.
    
    remove quote from the end of the boundary= string.  This was throwing off
    the mime parser so that it wouldn't always catch mime boundaries causing
    things like missed attachments.

[33mcommit f2d1e93e653c9498d810b189d5c106f25f4e08c9[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 31 15:02:12 2016 +0200

    unix-socket: add auto mode
    
    When running in live mode, the new default 'auto' value of
    unix-command.enabled causes unix-command to be activated. This
    will allow users of live capture to benefit from the feature and
    result in no side effect for user running in offline capture.

[33mcommit f6c3845397df717ebf2d0adf6ab917119371b822[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 31 14:47:58 2016 +0200

    util-time: new function to know if live or offline

[33mcommit 15766ce2c4e04b71511a47d8ef9c0368228bb1a8[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Sun Jun 12 20:55:16 2016 +0200

    configure: set correct cppflags for enabled nfqueue
    
    This change sets the correct CPPFLAGS received by PKG_CHECK to resolve
    building issues with some systems like OpenSuse.

[33mcommit 7d54d8c590971a9b126d0baf2343f508b1ec09e6[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Sat Jul 23 21:59:12 2016 +0200

    rule-reload: remember pending USR2 signals
    
    We did ignore additional USR2 signals while a rule-reload was running.
    This changes the counter to be incremented with every additional USR2
    signal so we don't ignore them anymore but it's still limited to prevent
    huge overload or even overflow.

[33mcommit b454aa46c6ecaddb382eae401e34c929f8f50887[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Sep 19 07:47:24 2016 -0600

    defrag: use frag_pkt_too_large instead of frag_too_large
    
    The rules were using the wrong decoder event type, which was
    only set in the unlikely event of a complete overlap, which
    really had nothing to do with being too large.
    
    Remove FRAG_TOO_LARGE as its no longer being used, an overlap
    event is already set in the case where this event would be set.

[33mcommit 00313b21408c3c0ac6d128412a88a0616788b081[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 12 18:15:01 2016 +0200

    decoder-event: BUG_ON on table mismatches
    
    Abort when the event enum and the name<>event table are not matching.

[33mcommit bbbc5ab1fcd7cb8b38a3ccb698c92f1439f8cbea[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Sep 12 10:39:14 2016 -0600

    setup-app-layer-logger.sh: update for logging changes

[33mcommit 108d37a52defb8c1298f1bfdf8c3d2c4d8eeef2e[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Aug 24 08:39:39 2016 -0600

    logging: proper failure on memory allocation error
    
    unwinds all previous logger allocations

[33mcommit a1de7e6dae450923eef68e23e61596eae3e6a795[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Jul 15 08:14:03 2016 -0600

    flow-vars: remove flow locks
    
    Code is now entered under flow lock.

[33mcommit 5a783e6854caf308eed9adfa516135101a0539d6[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Jul 15 08:13:16 2016 -0600

    flow-bits: remove flow locks
    
    Code is now entered under flow lock.

[33mcommit 8865009fcaf0dfeed3423d184482b1a94a4eee4f[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Jul 14 09:53:59 2016 -0600

    lua: remove flow locking from the lua layer

[33mcommit 688e8dbe7f4e085ae72cb140bb0192fd0742bd5c[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Jul 13 17:07:45 2016 -0600

    stream: remove lock from StreamTcpSegmentForEach
    
    This is only entered from logging functions which are already
    called with a locked flow.

[33mcommit 55f2704a25876a1a9886a72f3057f7b5cf3ab8d7[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Jul 13 10:48:14 2016 -0600

    logging: remove the packetqueue's from the logging path
    
    They are not referenced by any loggers, and they probably
    shouldn't be either.

[33mcommit 00b6e628d17f16789bfba1c4e8ca3029cef4f021[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Jun 20 09:52:28 2016 -0600

    logging: hook into flow worker thread

[33mcommit f8c2c3653bcfaecaaf0e9d7d20b0fd066ac3f9e4[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Jun 8 13:56:35 2016 -0600

    output-streaming: free thread store on deinit

[33mcommit 1b4ba4496c9dc08b61e26d169c6a05dd0df47a0b[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Jun 7 17:20:23 2016 -0600

    logging: rename registration functions to not have tmm
    
    As the logging modules are no longer threading modules, rename
    them so they don't look like they are being registered as
    threading modules.
    
    Also, move the registration to the output.c which will handle
    registration of the loggers.

[33mcommit 04a44a077d06567b68381ee8e62e45237b958fec[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Jun 7 14:56:17 2016 -0600

    logging: convert pcap log to non-thread module

[33mcommit a093580527cf6cfa448be02f27681f561520492c[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Jun 7 14:55:18 2016 -0600

    logging: just return if no tx loggers

[33mcommit fc35a78ba14c04c528adf198f8f10b97521e8012[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Jun 6 13:58:37 2016 -0600

    logging: use a single entry point for all loggers
    
    Introduces a new thread module, TMM_LOGGER, which is the
    root most logger.
    
    Only handles loggers in the packet path, stats and flow
    logging are not included.
    
    The loggers are made up of a hierarchy of loggers. At the top we
    have the root logger which is the main entry point to
    logging. Under the root there exists parent loggers that are the
    entry point for specific types of loggers such as packet logger,
    transaction loggers, etc. Each parent logger may have 0 or more
    loggers that actual handle the job of producing output to something
    like a file.

[33mcommit d2c17ce9a04cf8ce445afbcaf8c801c627abc9cb[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Jun 6 14:38:56 2016 -0600

    logging: remove output priorities: not used

[33mcommit 9489d5b9e36e4f0fbcffc157a330aad3e8a96563[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Jun 3 15:38:02 2016 -0600

    logging: remove dead code from output-json
    
    The "parent" json logger was setup like a real logger, but
    some of that code was never being called.

[33mcommit 8b38b9d728d9b909b8ed5e663823f8410b42364c[m
Author: Jason Ish <ish@unx.ca>
Date:   Sun May 29 00:11:03 2016 -0600

    output.[ch]: consistent style
    
    - Clean up function declaration.
    - Consistenly use typedefs for function points.
    
    No functional changes.

[33mcommit fa27a7646255ad684264b6d21e035344ff069d89[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri May 27 18:57:06 2016 -0600

    logging: add profiling back for non-tmm loggers
    
    The loggers moved away from a TMM required a new
    profiling support.

[33mcommit 42b8f302727ee416e010273669f5da573017074a[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue May 31 10:23:34 2016 -0600

    logging: convert lua output to non-thread module

[33mcommit 7a0737b9a9ce074693f3452f8200d0708936f47c[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Jun 3 10:48:10 2016 -0600

    logging: convert tls log to non-thread module

[33mcommit 7cb16bc90d9fadc5ea821c1b426539944ac3e2fd[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri May 27 13:16:22 2016 -0600

    logging: convert alert debug log to non-thread module

[33mcommit 7a8e8343e52b2d6226c61447400727904a54604e[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri May 27 13:12:06 2016 -0600

    logging: convert tcp data logging to non-thread module

[33mcommit 4d8b8ca0461fe80fb7d4f370f9639b3cf9bd8e38[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri May 27 13:03:58 2016 -0600

    logging: convert tls store logging to non-thread module

[33mcommit 60b6ccc3c40696cae23ae3a49bd2aa46b6ac565e[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri May 27 12:55:50 2016 -0600

    logging: convert file data logging to non-thread module

[33mcommit f9bb9029c543d376a81ad59a824d470026caacba[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri May 27 11:59:13 2016 -0600

    logging: convert file logging to non-thread module

[33mcommit 669827ae169c22ca5de14d8e19d8337f17402202[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri May 27 10:45:11 2016 -0600

    logging: convert unified2 to non-thread module

[33mcommit b580016c805d05a0d57964d914504ed7a9105c9f[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri May 27 10:39:50 2016 -0600

    logging: convert stats loggers to non-thread module

[33mcommit 9475c8371380f37ee83aecf8e30f47e6dbe128aa[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri May 27 10:21:19 2016 -0600

    logging: convert http log to non-thread module

[33mcommit e00dcd52a0b3da1e39ba4d8d5d6043c0a97e03cc[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri May 27 10:17:21 2016 -0600

    logging: convert alert syslog to non-thread module

[33mcommit 869d2eb701daa6660692c0344eb0951a24d0db07[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri May 27 10:10:02 2016 -0600

    logging: convert drop output to non-thread module

[33mcommit 5bbb4fd1341e9b204786b262743c94bb85f14a59[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri May 27 10:05:44 2016 -0600

    logging: convert json template output to non-thread module

[33mcommit b605984f34aa3150afd4852bc9ff9f278a5a500a[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri May 27 10:01:54 2016 -0600

    tests: setup unit test framework earlier
    
    Allows tests to be registered early, in support of moving
    outputs away from thread modules.

[33mcommit bac65f09e8aa810c9768e0f814e0e3d9c841b564[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri May 27 02:05:30 2016 -0600

    logging: convert json drop output to non-thread module

[33mcommit 38354479b7b18ddde3d905c106eb33097aa841c0[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri May 27 02:01:52 2016 -0600

    logging: convert json smtp output to non-thread module

[33mcommit 3fea12d7b32e8c5ce4d8052d3886cd9ff6f6d676[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri May 27 02:00:24 2016 -0600

    logging: convert json ssh output to non-thread module

[33mcommit 01cc50825718171f2adf92d406d9d6d5482f55fb[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri May 27 01:54:36 2016 -0600

    logging: convert json netflow output to non-thread module

[33mcommit 983a619ff075888b645d3dba4c72a078960f0cf3[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri May 27 01:52:01 2016 -0600

    logging: convert json flow output to non-thread module

[33mcommit ad15ac829761f0f1b429fd3f3c8f43dae18eaee9[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri May 27 01:33:10 2016 -0600

    logging: convert json alert output to non-thread module

[33mcommit aaa65f3d16174bf149ccffa98f23569de6c91039[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri May 27 01:18:22 2016 -0600

    logging: convert json tls output to non-thread module

[33mcommit 31663f1627e1e574b1c84c9a58ce048a657e9e24[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri May 27 01:07:10 2016 -0600

    logging: convert prelude output to non-thread module

[33mcommit dedda33f01a180214c2355a85f18e344c959a11f[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri May 27 01:03:13 2016 -0600

    logging: convert eve http to non-thread module

[33mcommit 687602c0ca2517f6e1c74f3d1b36aa494f085dce[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu May 26 22:26:04 2016 -0600

    logging: convert eve dns logging to non-thread module

[33mcommit b1200dba54053cf9faccf080ff2f3e759acc9cc1[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu May 26 10:45:55 2016 -0600

    logging: convert fast log to a non-thread module

[33mcommit 637aa346109eefdc96131585cdb0a986336ab870[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed May 25 23:32:48 2016 -0600

    logging: convert dns log to a non-thread module

[33mcommit 99dce740ef3ab5bdeb0d5fc1c2fa6499a230132b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 16 18:29:18 2016 +0200

    detect: mark alproto in keyword reg deprecated
    
    No existing code uses it, and it had been useless for some time.

[33mcommit e173016ded711e0bc26dee0dd013c8cb8a447a9a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 16 18:27:47 2016 +0200

    gitignore: update to hide more local files

[33mcommit 9030e89c946819a4b4850bdb95ffab27d9279c8c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 16 18:24:29 2016 +0200

    detect: don't set alproto while registering keyword
    
    The field is not used except for some printing, and is wrong for
    many keywords.

[33mcommit c957c62824bff022f4633fcf24345828c02b04ad[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 16 15:13:33 2016 +0200

    detect file: enable HTTP inspection from validate func

[33mcommit 621860f5b2d188a99ea2c04bdfa791f9892febc0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 16 14:40:35 2016 +0200

    detect file: enforce protocol in single place
    
    Instead of trying to enforce the app layer protocol in each file
    function, enforce it in the generic validation function.

[33mcommit bcfa484bce226cda03c88edaadd82752156b95ee[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 16 14:39:56 2016 +0200

    app-layer: add function to check if app-layer supports files

[33mcommit 85db260eed58c006ecac17277ccb016c5499f926[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 14 10:36:54 2016 +0200

    threads: remove EngineKill & SURICATA_KILL
    
    EngineStop and EngineKill were effectively doing the same, so
    removed the kill variant.

[33mcommit 045c10db43ca97fe0c2ebf70e8af6c874f3cad71[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 14 09:49:21 2016 +0200

    threads: failed thread is a fatal error now

[33mcommit fb655d5f152bcd04d049631a15831142fc478fb5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 13 21:07:11 2016 +0200

    threading: remove thread restart logic
    
    Thread restarts never worked well and the rest of the engine was
    never really expecting errors to lead to thread restarts. Either
    and error is recoverable in the thread, or not at all.
    
    So this patch removes the functionality completely.

[33mcommit 54503ef31012fe779b9abfd08911fa1b61d80234[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 19 12:37:12 2016 +0200

    Open Suricata 3.2 development branch

[33mcommit 471b61a0e1f7f27977d16cdb6081e783c3a4a50c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 19 09:12:28 2016 +0200

    magic: fix broken tests after CentOS6 update

[33mcommit 82282a9e6840a34b4aece83456a548fadbfad7c0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 12 18:10:51 2016 +0200

    mpls: add missing event type + rule

[33mcommit 71c8d1f46c6adeafa31f46f105f875a96e94b938[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 8 10:39:51 2016 +0200

    bpf: fix file parsing memory handling
    
    Fix improper fread string handling. Improve error handling.
    
    Skip trailing spaces for slightly more pretty printing.
    
    Coverity CID 400763.
    
    Thanks to Steve Grubb for helping address this issue.

[33mcommit 519b2970ec5618ef7e86748a7f762e2a9669f2ab[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 1 15:06:11 2016 +0200

    detect: don't print (null) in --list-keywords=all

[33mcommit ed90a16e8986d46686efbc608b2c9611db90034d[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Sep 16 13:34:09 2016 +0200

    detect: fix setup for some keywords
    
    Fix problems found by siginit.cocci.

[33mcommit 4324805478dabb699a1650490c89023c0a695b70[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Sep 16 11:47:20 2016 +0200

    coccinelle: add siginit test
    
    Add a test that check an inversion during keyword setup where
    we add a sigmatch to a signature and then do error handling on it.
    This was causing a double free of some elements and ultimately a
    segfault.
    
    Proposed-by: Victor Julien <victor@inliniac.net>

[33mcommit 17e70483c568a4b5b14d17542b9a7f4ea07e7ddf[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Sep 15 11:19:12 2016 -0600

    detect-flowbits: more unittest macro usage
    
    Also cleanup some tests by removing extra code after a test was
    determined to fail.

[33mcommit 3c5d8e65d4060494a3e74702e795b0301c0024c3[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Sep 15 10:40:22 2016 -0600

    hostbits: use new unittest macros

[33mcommit c4945607e3de78a32c83b8a45cb2c10639d29754[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Sep 13 17:09:58 2016 -0600

    hostbits: fail parse on unexpected trailing data
    
    Address issue https://redmine.openinfosecfoundation.org/issues/1889
    for hostbits. This involves updating the regular expresssion
    to capture any trailing data as the regex already keeps
    spaces out of the name.
    
    A unit test was converted to new macros to find out which
    line it was failing at after updating regex.

[33mcommit 24f2387b238e4d82ea0a9a1ec5eb12b8238b022e[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Sep 13 10:57:09 2016 -0600

    flowbits: validate that there are no spaces in the name
    
    Fixes issue: https://redmine.openinfosecfoundation.org/issues/1889
    
    To catch the issue where the ';' is missing we have to expand the
    regex to capture the whole name string, not just the leading
    valid stuff. Then verify that there are no spaces in the name
    (Snort has the same restriction) and fail if there is.

[33mcommit 1cdd062dc64768c3fec04a1c14837481813fde3b[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Sep 14 15:09:47 2016 +0200

    unix-manager: fix output of version command
    
    Make it consistent with the output of version command line flag.

[33mcommit 65fd09a39939c303f0e6e3ae7f9f46857f555232[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Wed Sep 7 22:17:01 2016 +0200

    rule-parsing: reject unescaped double quote within content section

[33mcommit ae116871ad13bd132df9ff69a27a32b7484edae7[m[33m ([m[1;33mtag: suricata-3.1.2[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 6 17:52:45 2016 +0200

    Update Changelog for 3.1.2

[33mcommit 2997d086bea41349d05fcff176afd15ebd1d09ef[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 6 11:29:09 2016 +0200

    eve-drop: allow logging all drops
    
    - drop:
        alerts: yes      # log alerts that caused drops
        flows: all       # start or all: 'start' logs only a single drop
                         # per flow direction. All logs each dropped pkt.

[33mcommit 1cc5f9825de1b866b3e153ac1cf8028308e8cdb0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 6 10:29:57 2016 +0200

    dns: use nonnull attr for log functions

[33mcommit bbcc22d2ad8e99e377a4d713de251d08a4cf15b2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 6 10:20:38 2016 +0200

    dns: fix coverity warning
    
    ** CID 1372324:  Null pointer dereferences  (FORWARD_NULL)
    /src/output-json-dns.c: 532 in OutputAnswer()
    
    ________________________________________________________________________________________________________
    *** CID 1372324:  Null pointer dereferences  (FORWARD_NULL)
    /src/output-json-dns.c: 532 in OutputAnswer()
    526             }
    527         }
    528
    529         /* reset */
    530         MemBufferReset(aft->buffer);
    531         json_object_set_new(djs, "dns", js);
    >>>     CID 1372324:  Null pointer dereferences  (FORWARD_NULL)
    >>>     Dereferencing null pointer "entry".
    532         if (likely(DNSRRTypeEnabled(entry->type, aft->dnslog_ctx->flags))) {
    533             OutputJSONBuffer(djs, aft->dnslog_ctx->file_ctx, &aft->buffer);
    534         }
    535         json_object_del(djs, "dns");
    536
    537         return;
    
    Move checks to the top of the functions. Should be more efficient too.

[33mcommit b4565004c7f7585e69e29d5e11b5d28bb66125fa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 2 12:47:11 2016 +0200

    detect-template: modernize

[33mcommit e878dd2231f4d29f7e3792dc496eed0cf9209051[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Aug 31 08:24:08 2016 -0600

    app-layer templates: cleanups
    
    - cleanup file headers
    - add todo section
    - convert unit tests to new macros
    - add markers to remove disabled by default behaviour

[33mcommit 3cf8b4629f2cf523c3f82604d93b8fd4a0888109[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Sep 5 08:15:46 2016 -0600

    decode-icmpv6: use FAIL macros in tests

[33mcommit 2a42e8be0362d5aaab8f42e382ef678a54e74a33[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Sep 5 08:15:26 2016 -0600

    unittest: FAIL macro to unconditionally fail a test

[33mcommit af4085b77b56cbb41496956e5b23184b4528a094[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Sep 5 07:41:33 2016 -0600

    icmpv6: fix checksum verification if fcs present
    
    Calculate the length of the ICMPv6 packet from decoded information
    instead of off the wire length. This will provide the correct
    length if trailing data like an FCS is present.
    
    Fixes issue:
    https://redmine.openinfosecfoundation.org/issues/1849

[33mcommit 120f59386b526a883a08c3ff5fe16bb7b7453092[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 5 10:17:40 2016 +0200

    affinity: fix compilation on SunOS

[33mcommit a2c9b86cdfaa8b2fdf54bf828a0f959e120ba326[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 5 10:17:16 2016 +0200

    byteswap: fix compilation on SunOS

[33mcommit 7847c4f8eeee65b81ada71d7245005ac6319b157[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 5 10:16:30 2016 +0200

    configure: detect SunOS and link against required libs

[33mcommit ef1acdfaeec1941f513d5f98fd54bda3c8388a7d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 5 10:15:52 2016 +0200

    threads: provide SCGetThreadIdLong for SunOS

[33mcommit 4271d571579725586a943ef78900750cbe688c94[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 5 10:15:23 2016 +0200

    decode: declare IPPROTO_IPIP if OS doesn't have it

[33mcommit 6956c1c749fd97d48a989e3a98f3550b026ab0dc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 5 10:14:52 2016 +0200

    decode: fix int types

[33mcommit ec871233396282c61beff7e0ccdba3c222450edc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 5 10:14:04 2016 +0200

    configure: check for strings.h: used by SunOS

[33mcommit 8600872e02f3b160338e830a50ca96395dae2125[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 5 10:12:54 2016 +0200

    logfile: resolve name clash on SunOS

[33mcommit b81ea0d7dbcfd3c997b6d02806e79214fb45244d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 1 20:34:26 2016 +0200

    eve: reduce flow_id to 51 bits
    
    Evebox & ELK couldn't handle the large integers. It looks like (partly)
    a javascript limitation that doesn't treat 64bit ints as real ints.

[33mcommit 5db322045e21e880efed96b07aaac4eb6e7abbe9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 1 11:13:48 2016 +0200

    configure: fix Ubuntu lua pkg suggestion

[33mcommit 9ca34fa5c98b6028b0f05fe3f709cc36df7dca66[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 31 15:08:58 2016 +0200

    eve: output more unique flow_id

[33mcommit 78b4db8a954f5937d07ec494e7113e292228e189[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 31 15:04:58 2016 +0200

    flow: introduce function to generate flow id
    
    The flow id itself is not stored in the flow, but generated based on
    properties that do not change during the lifetime of the flow.
    
    As it's meant for use with the json output, it is limited to a signed
    64 bit integer (int64_t) because that is the time json_integer_t uses.

[33mcommit 666bba8121155292c5fcab97b0630af5d537c2c7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 30 21:44:44 2016 +0200

    detect: implement continue detect for dcepayload
    
    Also fix a corner case in start detection.
    
    Bug 1853.

[33mcommit ecf4a2862c474145d435018e1cd999d35ca1d43a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 30 20:54:35 2016 +0200

    detect: cleanup

[33mcommit 6b078e4f51800ac4cba3660dedfe210474491bc6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 30 19:35:18 2016 +0200

    detect: fix ICMP error handling issue
    
    The first packet in both directions of a flow looks up the rule group
    (sgh) and stores it in the flow. This makes sure the lookup doesn't
    have to be performed for each packet.
    
    ICMPv4 error messages are connected to the TCP or UDP flow they apply
    to. In the case of such an ICMP error being the first packet in a
    flow's direction, this would lead to an issue.
    
    The packet would look up the rule group based on the ICMP protocol,
    not based on the embedded TCP/UDP. This makes sense, as the ICMP
    packet is inspected as ICMP packet. The consequence however, was that
    this rule group pointer (sgh) would be stored in the flow. This is
    wrong, as TCP/UDP packets that follow the ICMP packet would have no sgh
    or the wrong sgh.
    
    In normal traffic this shouldn't normally happen, but it could be
    used to evade Suricata's inspection.

[33mcommit 2eb941f9d9296c6812761c0645b4174a41e806d1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 29 13:17:31 2016 +0200

    output dns: fix bit declarations

[33mcommit 5c6ffe5653db6a6f423a29891c25fe65397fab24[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 29 13:14:51 2016 +0200

    common: introduce macro for bit declarations

[33mcommit 0f6c8806a0800974a5680c891ea146fb8e1180d2[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Thu Feb 4 12:19:14 2016 -0800

    output-json-dns: dns output filtering.

[33mcommit 1691c1068166ad351ebb8417bb6fb848ea63ba6d[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Aug 23 11:37:42 2016 -0600

    eve: make logging of tagged packets optional
    
    But it is enabled in the default configuration.

[33mcommit 040660556eb1b4260c4998407baa48409e6f06df[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Aug 1 14:01:49 2016 -0600

    eve: log tag packets as packet events
    
    Create a new eve event type, "packet" for logging packets that
    are tagged as part of an event. The packet is still at the top
    level to keep it consistent with alert event types.
    
    In addition to the packet being logged, a packet_info object
    is created to hold the linktype and any future meta data
    we may want to add about the packet.

[33mcommit 305b1b90fd11b8684dbf85c44da5171abf6c3035[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 14 12:11:02 2016 +0200

    detect: minor cleanup

[33mcommit ec0217f52cb060b2b74725cd8fbb7aa03e84342f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 19 13:58:07 2016 +0200

    detect: minor style fixes

[33mcommit 7d11af16ef4b007bbd440e8f8446d32dd8b0e988[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 19 12:58:33 2016 +0200

    detect: minor debug output cleanup

[33mcommit 0e2ea4e63ba4eb773fb94f16c13df69d2b8b983e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 18 09:39:48 2016 +0200

    detect: remove unused debug code

[33mcommit b79d9cda3a062cf2ac36e15435c0b03a7659ff69[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 18 10:50:29 2016 +0200

    detect: minor cleanups

[33mcommit 199bb3bae3cc40ebb87fb0c8cc21bd7b951be678[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 6 19:44:54 2016 +0200

    stream-tcp: fix ssn returning to wrong thread pool

[33mcommit cf61472619044a0e961a517c37360d24c047a5e4[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Aug 24 10:14:11 2016 -0600

    app-layer-dcerpc-udp: style cleanups
    
    - consistent 4 space indent
    - cleanup file header

[33mcommit e55334fb370629603c8c08a540e2f83e756fc863[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Aug 24 10:15:55 2016 -0600

    detect-flowbits: fix misleading indentation
    
    detect-flowbits.c: In function ‘FlowBitsTestSig02’:
    detect-flowbits.c:475:4: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
        if(error_count == 5)
        ^~
    detect-flowbits.c:478:5: note: ...this statement, but the latter is misleadingly indented as if it is guarded by the ‘if’
         SigGroupBuild(de_ctx);
         ^~~~~~~~~~~~~

[33mcommit a975fdcfeb3816f5dccaea9a2cef212935cf6029[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Aug 24 10:06:26 2016 -0600

    app-layer-dcerpc-udp: fix missleading indentation
    
    app-layer-dcerpc-udp.c: In function ‘DCERPCUDPParserTest01’:
    app-layer-dcerpc-udp.c:1105:5: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
         if (alp_tctx != NULL)
         ^~
    app-layer-dcerpc-udp.c:1107:2: note: ...this statement, but the latter is misleadingly indented as if it is guarded by the ‘if’
      StreamTcpFreeConfig(TRUE);
      ^~~~~~~~~~~~~~~~~~~

[33mcommit 95015a3f6d0a4a21100e586a1fb19cb9f3206be7[m
Author: Jason Ish <ish@unx.ca>
Date:   Sun Aug 14 12:44:51 2016 -0600

    decode: support Cisco Fabric Path / DCE
    
    Cisco Fabric Path is ethernet wrapped in an ethernet like header
    with 2 extra bytes.  The ethernet type is in the same location
    so the ethernet decoder can be used with some validation
    for the extra length.

[33mcommit a8da6bbd7137fb5a41cb20c1fc8a230c78b646e4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 24 09:50:06 2016 +0200

    output: use safer logic for fingerprint printing

[33mcommit d3c0135eec796e1f934348dc96df3fe6c4d2f8ce[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Aug 23 10:53:49 2016 -0600

    app-layer-tls: accomodate trailing \0 in hash output

[33mcommit 73a04510702bfa4cec535cfe83a373d62fd7ec3e[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Aug 23 10:00:54 2016 -0600

    output-json-dns: allocate correct size hexstring buffer
    
    The buffer allocated for the hexstring was not large enough
    for a ':' separated hex string.

[33mcommit b3b78d4326ccb1eac84348290ec9ae1c62d3b4be[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 17 16:31:05 2016 +0200

    detect: log earlier that rule reload is happening

[33mcommit 731d4a70492ae6ca37c9274f117905691c66aac9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 17 13:12:40 2016 +0200

    dns: fix OOB read on malformed TXT record

[33mcommit 7e6ce016004249bf048241bddb8cab5eea9c6368[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Aug 16 13:39:48 2016 -0600

    unified2: fix logging of tagged packets
    
    The structure for create the alert preceding each tagged packet
    was not being initialized, preventing tagged packets from being
    logged.
    
    Note: Snort unified2 does not precede tagged packets with an
    alert like is done here, so this just fixes what the code
    intended to do, it does not make it Snort unified2
    compatible.
    
    Address issue:
    https://redmine.openinfosecfoundation.org/issues/1854

[33mcommit 26e67400ba7bfac5b1e900979f0d12144302241b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 16 15:54:43 2016 +0200

    dns: fix name parsing issue leading to events

[33mcommit 884fddf035c3bbd509f532d158e1cf58b88e1d36[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 16 13:54:30 2016 +0200

    packet: remove empty and unused UDPVars struct

[33mcommit c9756caeefab7961c981201e540d9f38e9d15168[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 16 13:34:38 2016 +0200

    packet: make tcp/udp/icmp vars union non-anonymous
    
    Clean the whole thing after use.

[33mcommit 79388df8878623f0a323fd5c825c39c9f99a1a13[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 15 11:06:27 2016 +0200

    commandline: fix strlcpy usage

[33mcommit 2403af5177859241c62d77a2f9b3b351bb3bfe37[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Jul 29 10:47:23 2016 -0600

    pcap: don't fail with --pcap with no device present
    
    Issue: 1856.
    
    A device with the name of "" (empty string) was being added
    with LiveRegisterDevice which failed to initialize causing
    Suricata to fail.

[33mcommit ec602089a064d68d2ec97a23d269dff5b36e303b[m[33m ([m[1;33mtag: suricata-3.1.1[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 13 09:48:54 2016 +0200

    Update Changelog for 3.1.1

[33mcommit 2856dfd1199cd1827f800f41e0e4a22723bf00ba[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 12 17:07:25 2016 +0200

    output lua: improve debugging output

[33mcommit a26e59cb6d0e9052a7383efa47eb639ea9a36238[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 12 17:07:10 2016 +0200

    output lua: set proper logging progress values

[33mcommit 7188c2630fc529e6bcd262b620b27b3bebe0e0f1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 12 08:49:48 2016 +0200

    outputs: small code cleanup

[33mcommit f397e7bfc23f632fde4c4ded5e0dfec5022bea5e[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Jul 11 11:35:51 2016 -0600

    dns: directional logging
    
    Register loggers for to server and to client so requests
    and responses can be logged independently of each other.
    
    This results in the request log having the actual timestamp of
    the request instead of the reply.

[33mcommit fcad270d9656c9b9d498f884989838faaed4ee79[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Jul 11 11:34:45 2016 -0600

    logging: setup all registered loggers for a name
    
    When setting up a configured logger, do so for all registered
    loggers of that name instead of just the first registered one.
    
    This allows a logger to register itself more than once, which
    can allow for independent logging of requests and replies without
    touching the core transaction handling logic.
    
    We do this so just having "dns" in the eve-log can configured
    multiple "dns" loggers instead of having something like "dns-tc"
    and "dns-ts" in the configuration file.

[33mcommit 9d01ef58fcb4519608a4533496a8478a1be15f7b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 11 09:30:26 2016 +0200

    lua smtp: fix SMTPGetMimeField arg checking
    
    Properly check argument before passing it on: CID 1363385: (NULL_RETURNS)

[33mcommit 37b10c13c104d2b21d964378860d8c6ff299810d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 8 11:26:24 2016 +0200

    configure: require libhtp 0.5.20
    
    Ticket #1839

[33mcommit 2b10b8374c970426dac6c9aaea37dd0bf3e92afd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 8 11:24:27 2016 +0200

    cmdline: fix --list-keywords and --list-app-layer-protos
    
    Ticket #1840

[33mcommit ed483b4e13c441abac7b1c1ad363e27bcaff3fa7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 6 16:33:20 2016 +0200

    output: don't register loggers for disabled protocols

[33mcommit 01913f6a566f2b60d47f6cee59fa3b323f604a8a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 6 16:21:33 2016 +0200

    app-layer: add AppLayerParserIsTxAware
    
    This function globally checks if the protocol is registered and
    enabled by testing for the per alproto callback:
    StateGetProgressCompletionStatus
    
    This check is to be used before enabling Tx-aware code, like loggers.

[33mcommit f302a6cf8656cd889f6a8dbae342af27a1e9e8ce[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 6 16:08:55 2016 +0200

    output: fix debug messages

[33mcommit b73098e990ccc48e8473157ed65c9e1e03cd01f6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 6 13:48:14 2016 +0200

    smb: style fix in log message

[33mcommit 3bb408940fc130caa36d79dd803320b30d439a0b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 1 16:03:53 2016 +0200

    af-packet: improve threads selection logic
    
    Only use RSS queue count when cluster_qm is used. Only use core count
    when cluster_flow is used.
    
    Use a local variable to simplify the check so that we don't have to deal
    with the extra flags.

[33mcommit da8f9c1896adfd6146c5a20fb09a315c847e80df[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 6 13:08:02 2016 +0200

    lua: add smtp for detection

[33mcommit 928cb1eba9cd6ee2cef801d1c5c09e5a094e8305[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 6 12:58:37 2016 +0200

    lua output: expose smtp functions to output scripts

[33mcommit 7501bf744f74ea3072f056d83872c0ca9e492d3c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 6 12:57:22 2016 +0200

    lua: SMTPGetRcptList use position as key, not value

[33mcommit 7581f5129ffea93979fc9cd51c3ac2d07a41f285[m
Author: tobiass1 <130472@hig.no>
Date:   Tue Jun 14 22:28:50 2016 -0400

    Lua: SMTP support; Addresses feature ticket #1775; v5

[33mcommit ff3baeee90f7f2ea778d06be62bd236f85ed99eb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 5 16:09:32 2016 +0200

    lua: support smtp tx logging

[33mcommit 5e4d071b76f6b2d6397015dc091359ab105e04b9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 5 16:00:31 2016 +0200

    lua-output: don't crash on script setup error

[33mcommit 3c59d60049aa7f9a6624d77870558ceed9b8df4e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 14 14:08:34 2016 +0200

    cuda: make sure we don't use cuda in proto detect

[33mcommit 4111331ab067c8e6038cf131eb31b2c8350b3ead[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 21 17:07:15 2016 +0200

    af-packet: minor cleanups

[33mcommit 402bdf9b2b76ac56f33d87e6f6a4d51a30ec57c7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 21 16:43:53 2016 +0200

    af-packet: test if fanout is supported before use
    
    Older system may pretend they can support FANOUT but then fail to
    work at runtime. CentOS6 is an example of this. It would fail to
    start up with the default configuration with errors like:
    
    [15770] 21/6/2016 -- 16:00:13 - (tm-threads.c:2168) <Notice> (TmThreadWaitOnThreadInit) -- all 4 packet processing threads, 4 management threads initialized, engine started.
    [15785] 21/6/2016 -- 16:00:13 - (source-af-packet.c:1907) <Error> (AFPCreateSocket) -- [ERRCODE: SC_ERR_AFP_CREATE(190)] - Coudn't set fanout mode, error Protocol not available
    [15785] 21/6/2016 -- 16:00:13 - (source-af-packet.c:1337) <Error> (ReceiveAFPLoop) -- [ERRCODE: SC_ERR_AFP_CREATE(190)] - Couldn't init AF_PACKET socket, fatal error
    [15770] 21/6/2016 -- 16:00:13 - (suricata.c:2664) <Notice> (main) -- Signal Received.  Stopping engine.
    [15787] 21/6/2016 -- 16:00:13 - (source-af-packet.c:1907) <Error> (AFPCreateSocket) -- [ERRCODE: SC_ERR_AFP_CREATE(190)] - Coudn't set fanout mode, error Protocol not available
    [15788] 21/6/2016 -- 16:00:13 - (source-af-packet.c:1907) <Error> (AFPCreateSocket) -- [ERRCODE: SC_ERR_AFP_CREATE(190)] - Coudn't set fanout mode, error Protocol not available
    [15786] 21/6/2016 -- 16:00:13 - (source-af-packet.c:1907) <Error> (AFPCreateSocket) -- [ERRCODE: SC_ERR_AFP_CREATE(190)] - Coudn't set fanout mode, error Protocol not available
    [15789] 21/6/2016 -- 16:00:13 - (flow-manager.c:693) <Perf> (FlowManager) -- 0 new flows, 0 established flows were timed out, 0 flows in closed state
    [15787] 21/6/2016 -- 16:00:13 - (source-af-packet.c:1337) <Error> (ReceiveAFPLoop) -- [ERRCODE: SC_ERR_AFP_CREATE(190)] - Couldn't init AF_PACKET socket, fatal error
    [15788] 21/6/2016 -- 16:00:13 - (source-af-packet.c:1337) <Error> (ReceiveAFPLoop) -- [ERRCODE: SC_ERR_AFP_CREATE(190)] - Couldn't init AF_PACKET socket, fatal error
    [15786] 21/6/2016 -- 16:00:13 - (source-af-packet.c:1337) <Error> (ReceiveAFPLoop) -- [ERRCODE: SC_ERR_AFP_CREATE(190)] - Couldn't init AF_PACKET socket, fatal error
    
    This patch adds a test that if run before the number of threads
    is determined. If the test fails, only 1 thread is created.

[33mcommit ab65b6f83b55e12fb05aafcaf51ad9b369b82de5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 21 13:21:54 2016 +0200

    netmap: fix coverity warning 1362789
    
    ** CID 1362789:  Null pointer dereferences  (FORWARD_NULL)
    /src/runmode-netmap.c: 247 in ParseNetmapConfig()
    
    ________________________________________________________________________________________________________
    *** CID 1362789:  Null pointer dereferences  (FORWARD_NULL)
    /src/runmode-netmap.c: 247 in ParseNetmapConfig()
    241         strlcpy(aconf->iface_name, iface_name, sizeof(aconf->iface_name));
    242         SC_ATOMIC_INIT(aconf->ref);
    243         (void) SC_ATOMIC_ADD(aconf->ref, 1);
    244
    245         /* Find initial node */
    246         netmap_node = ConfGetNode("netmap");
    >>>     CID 1362789:  Null pointer dereferences  (FORWARD_NULL)
    >>>     Comparing "netmap_node" to null implies that "netmap_node" might be null.
    247         if (netmap_node == NULL) {
    248             SCLogInfo("Unable to find netmap config using default value");
    249         } else {
    250             if_root = ConfFindDeviceConfig(netmap_node, aconf->iface_name);
    251             if_default = ConfFindDeviceConfig(netmap_node, "default");
    252         }

[33mcommit e9a2a341ceda1f1c23918949f483508144a22aea[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Tue Jun 14 23:14:40 2016 +0200

    util-threshold-config: parse suppress rules with spaces in ip list
    
    This modified regex allows spaces witihn the ip list for supress rules
    like [10.0.0.1, 10.0.0.2]

[33mcommit f0e22c91cb23415d3c095b016040d7bb7542c4a7[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Jun 13 12:44:28 2016 -0600

    privs: add capability CAP_SYS_NICE.
    
    Allows the setting of thread priorities after dropping privileges.

[33mcommit 604542081221a95c8904dcdde9d599b30c87c55a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 10 09:56:23 2016 +0200

    detect: reduce verbosity, don't warn on empty files

[33mcommit 46ac5ed7b74a971ced9efc7a41b09b2b1c6331b6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 10 09:31:30 2016 +0200

    pfring: move output to 'Perf' level

[33mcommit 18de4c9654aff7d48904511946d34964f74caab7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 13 13:32:28 2016 +0200

    offloading: work around missing TOE support

[33mcommit 9b80c21d787b5e7b4c221c91b71619e6e8eb11f0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 13 12:55:29 2016 +0200

    offloading: distinguish between csum and the rest
    
    As AF_PACKET handles csum offloading don't check for this type of
    offloading. Other methods like pcap and netmap do require it to be
    turned off.
    
    Improve disable command suggestion wording.

[33mcommit 03d46f13691d67494c6923bfd24a688ce1cc428d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 13 12:36:27 2016 +0200

    offloading: reduce verbosity

[33mcommit 507027845d6afac10236eb14b671ae189146e5c1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 13 12:33:51 2016 +0200

    afpacket: update offloading warning

[33mcommit 45fa25eb0ca96612298389aa1041d58599bb5c86[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 13 10:16:33 2016 +0200

    offloading: improve checks on FreeBSD
    
    Move FreeBSD specific (but not netmap specific) checks from the netmap
    code to the general ioctl wrapper code.
    
    Warn from the check functions now, so callers no longer need to.

[33mcommit 33f876900124d45dd033f148ee0f013bd3467d00[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 13 08:59:26 2016 +0200

    offloading: move linux specific into their own func

[33mcommit 54bc4718108b85d8b06a95845f4590a883421849[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 12 10:37:28 2016 +0200

    offloading: check for more offloading on Linux

[33mcommit b1d191b478bf6d90ae4971fd30fbe14a63dd036a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jun 11 16:12:26 2016 +0200

    netmap: fix enabling promisc mode on FreeBSD
    
    In FreeBSD setting the IFF_PROMISC flag has no effect. Instead we
    need to set the IFF_PPROMISC flag.

[33mcommit 6c7bf006b747bfc3edaedb489e65cdbf06e0b7e2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jun 11 11:30:16 2016 +0000

    netmap: redo config parsing
    
    Normally we parse the config per interface only. But to properly
    setup the bridge, netmap also needs the config of it's peering
    interface. Instead of using a complicated peering scheme like in
    afpacket, simply parse the peers config too.

[33mcommit 0e9134930d4840de49295d65a5a2e7c81dd103ee[m[33m ([m[1;33mtag: suricata-3.1[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 17 15:51:07 2016 +0200

    changelog: update for 3.1 and add missing 3.1rc1 tickets

[33mcommit d0baa83d2b80127b314ca13b03ccd5222707afc1[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Wed Jun 15 23:44:34 2016 +0200

    util-runmode: pass initdata to runmode workers for nfqueue
    
    The VerdictNFQ was missing the initdata which results in a segfault
    within CaptureStatsSetup. This commit adds the passing of the initdata.

[33mcommit f7124b1149760c44673cf87e89c148ffccf8410b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 17 09:32:16 2016 +0200

    afpacket: disable tpacket-v3 by default
    
    It's still considered experimental at this point.

[33mcommit 66346e463211044d82bd80e943bd0cfc5b8c7bd2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 8 16:58:55 2016 +0200

    libnet: work around older libnet type difference
    
    Older libnet 1.1.x have a non-const type for libnet_init's dev
    argument.

[33mcommit 9119007d007de07a61075f4d466926b1698e25cf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 8 13:52:34 2016 +0200

    pfring: no longer link against rt and numa libs

[33mcommit a88359dcf099b16c2085f11c0159160c6835e88a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 8 08:57:29 2016 +0200

    detect: get proper legacy custom values. Issue #1804

[33mcommit 5c974f92a8aafb2d4c447e54259c400c14bec037[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 8 08:17:13 2016 +0200

    livedev: shorten devname at registration

[33mcommit b673e1441110a4624c708cb40f94004f6071c0ae[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 7 18:29:42 2016 +0200

    afl: fix various --afl-* options

[33mcommit d4f84455640a3af9fd86c325627ad5aef305a269[m[33m ([m[1;33mtag: suricata-3.1RC1[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 7 14:56:13 2016 +0200

    Update Changelog for 3.1RC1

[33mcommit e76b334f8dc855c021ba0e567229adf242c615b6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 30 14:55:34 2016 +0200

    http body: fix compression tests

[33mcommit 5ec885e451860ed5cfeaa3a696cd8a26ba62e703[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 9 16:47:25 2015 +0200

    http: set of response body decompress limit
    
    This is a per personality setting.

[33mcommit ed7dc0c6b3eb2967ff46913f5662654adc2d3885[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 8 13:43:59 2015 +0200

    unittest: minor cleanup

[33mcommit b313f8ca7b98f8739f5f4f6113070a26a4406f1f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 26 14:00:00 2016 +0100

    http: update compression mismatch test

[33mcommit 439b62fe69e3651083902151ccfc6a7b97acc4bc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 31 21:12:57 2016 +0200

    configure: cleanup configure output
    
    Don't present missing spatch as a warning. Remove verbose libnet
    warnings as well.

[33mcommit 36e4126227f6ca0695ec8b9553961e536d1dc816[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Sun Jun 5 00:48:38 2016 +0200

    detect-filemagic: fix heap-use-after-free
    
    This fixes the heap-use-after-free issue with sm being freed without
    being removed from the signature (s) list. Move the protocol check for
    rules with filemagic before the alloc and make the error log more
    precise.

[33mcommit a3095987217356d3175874477c0c80c007c8fd4c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 3 12:38:08 2016 +0200

    netmap: work around mtu error on iface+ settings

[33mcommit 648a69759bdf0ce2ac9809a700ce74ab7935ca82[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 3 12:28:09 2016 +0200

    netmap: don't set more than 1 thread on sw ring

[33mcommit 86d44cea96826c07fdaa9c48027c8bf4835ab445[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 3 12:27:47 2016 +0200

    netmap: code cleanup

[33mcommit ffba26d04a84c7342c0cbdbaee099136eb5990f6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 3 12:25:14 2016 +0200

    configure: don't set -march=native for powerpc

[33mcommit 0b6171854dcf6fc431860c80d2e99dd69f6df60c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 3 10:53:46 2016 +0200

    yaml: improve affinity defaults

[33mcommit b5633b9bfdd87413dc22bd6ff97c631e3d08b4d4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 3 10:49:53 2016 +0200

    affinity: small cleanups to output & code

[33mcommit 5f9de1e7346d45567edfcb3b2e597a89f7c75fad[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 3 10:37:59 2016 +0200

    affinity: rename detect -> worker set internall

[33mcommit 723e90a174fd6f4df6677eff348fa46c25e36f65[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 3 10:32:43 2016 +0200

    affinity: rename detect-cpu-set to worker-cpu-set
    
    Add fallback for existing configs.

[33mcommit 45b72d61c98277196c4233e64dcaa1451bbcebf5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 3 10:24:03 2016 +0200

    affinity: improve suricata.yaml doc

[33mcommit 570b9d06e0ae34aa880beaf7013b4b23c9b05b19[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 3 10:01:28 2016 +0200

    affinity: remove unused settings
    
    These were never referenced to in the code so they can be removed.
    
    Add bypass to config parser in case the settings are still in old
    yamls.

[33mcommit bdc2c6e9ce69a05e9ac517d732f4422cb2aed5dd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 3 09:55:44 2016 +0200

    affinity: type cleanup

[33mcommit 2aac437927010dd5ccdd4a2f07ada0744c21a113[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 3 09:45:23 2016 +0200

    output: reduce verbosity on info level

[33mcommit 4c663bb1432c50a0628ad72a976354fed6b346df[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 3 09:33:12 2016 +0200

    netmap: don't check for offloading twice

[33mcommit 2beb39469b94ccf033e5e936ba6453fe4650c579[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 3 09:32:37 2016 +0200

    netmap: output cleanup

[33mcommit b3bf7a57297a24be569f7d7bcff140ffbb908b91[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jul 11 23:14:14 2015 +0200

    output: introduce config and perf output levels
    
    Goal is to reduce info output

[33mcommit cc2ed783c5ccb1b84f6f99d46661fb4ac0f177e3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jul 11 23:22:37 2015 +0200

    output: improve notice and warning/error color handling

[33mcommit 1c0f20f0e568ab0864f5b8184ab92e0c949cf27d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 2 10:06:38 2016 +0200

    yaml: profiling 'json' depend on jansson availability

[33mcommit e11753e3f2e3a1260dda0eb9d538509d383e2d47[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 2 08:06:07 2016 +0200

    profiling: fix minor compiler warning

[33mcommit 4369161b9265ab3586a4cf762d46a1d7ecab9b6c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 2 10:49:35 2016 +0200

    netmap: get offloading settings and warn if needed
    
    Add FreeBSD lookup function and use the existing code on Linux.

[33mcommit a8a918545bddf8bbdb449b99cedc73629bdb8294[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 2 11:01:29 2016 +0200

    netmap: get correct RSS queues on Linux as well

[33mcommit d861bf100bf8bd249f40c90d13781762ca214b91[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 2 08:09:12 2016 +0200

    netmap: reduce verbosity at startup

[33mcommit d58d02fed5e674011cca50d3e3ab203d9b93e335[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 2 06:53:32 2016 +0200

    netmap: handle missing config with better defaults
    
    Default to 'threads: auto' which uses RSS RX count when no config
    has been created for a interface.

[33mcommit f4465774126add54f42746a86fbdbe1b55e70847[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 2 06:41:50 2016 +0200

    netmap: implement 'threads: auto'
    
    Add until function for retrieving RSS RX count from netmap. Use the
    RSS count to create the threads.

[33mcommit d39e5754e646111bc6d23a736e9e8dbaf87c7201[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 1 20:08:47 2016 +0200

    instance: use enum for runmode

[33mcommit 2412681eff5cde57e80f4d756430dc951f104869[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 1 20:08:20 2016 +0200

    instance: memset to 0 before use

[33mcommit 4defc5acc21e92b53d6993e6133871e3636a9193[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 31 15:55:31 2016 +0200

    util-ioctcl: increase header size
    
    Headers can contain VLAN or Qing so we need to increase the value
    returned by GetIfaceMaxHWHeaderLength.

[33mcommit ed561c73a5a8d41f70be4af61adbd6de90a19b91[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Tue May 31 23:18:06 2016 +0200

    suricata: fix double packet processing threads
    
    With the additional ParseInterfacesList the packet processing threads
    were doubled since the Interface was included twice unless the device
    was passed via the commandline with af-packet=IF.
    The additonal ParseInterfacesList isn't necessary so remove it again

[33mcommit 371113e21e808b74cfbb0878ed14e08a3b926d5c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 31 16:58:29 2016 +0200

    ac-ks: don't allow use on big-endian

[33mcommit 181f67ff97338c78a8bb19821d36859b60df8ff3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 30 18:01:02 2016 +0200

    flow-worker: small cleanups

[33mcommit 72d3ea65525725a9f57c9d8a425a812eb24e9f5f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 30 17:55:27 2016 +0200

    detect: make pattern matcher messages less verbose

[33mcommit be9cd0fd843f1e412bceb3a86b0ad4e5cb7b0782[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 30 17:52:43 2016 +0200

    yaml: replace ac-tile by ac-ks

[33mcommit 36535cbc6107f4b1393df8b6a06c71702028c7a6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 31 16:21:50 2016 +0200

    yaml: remove conf_filename global
    
    conf_filename was a global pointer to the filename of the yaml.
    
    Move into SCInstance. This reduces it's scope and cleans up the code.

[33mcommit 4b9a62d1fe571cf9a3b63382e5751b2e97f17b4c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 31 14:41:31 2016 +0200

    profiling: fix compilation if libjansson is missing

[33mcommit 661d7c1d092df6fef31185ddfefe2d0f71080259[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 31 14:22:00 2016 +0200

    pfring: cleanup

[33mcommit 6f7740807dd6719c9b17403dd64db463a3bee26a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 31 14:18:04 2016 +0200

    pfring: improve profiling
    
    Reset packet profiling after pfring_recv. The packet was taken from
    the packet pool before this call. The packet will already have it's
    start ticks initialized. To avoid including ticks while pfring_recv
    waits for traffic, reset the ticks right after it.

[33mcommit c9159892c72f5b4782862c3bfcc5deacccbbd0c6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 31 14:17:35 2016 +0200

    profiling: allow packet profiling to be reset

[33mcommit 291af719c60a198f6875a33bc993a8d8b63451f5[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 31 11:21:31 2016 +0200

    coverity: fix CID 1362014
    
    Error handling was not correct regarding ring buffer memory
    handling.

[33mcommit 9f7ba07153268fb72b99b219940859ba24bd770f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 31 13:44:16 2016 +0200

    af-packet: use better defaults if config is missing

[33mcommit f55dbca57beea9d2aa4dd423da458903ed186685[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 31 08:57:07 2016 +0200

    yaml: make eve log in yaml depend on libjansson

[33mcommit df6f9269ec0b769e4b11649821e64f044f386726[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 31 08:51:57 2016 +0200

    yaml: improve capture comments

[33mcommit 766bc95e3cb16f1c776f9f099b882ddfbfe847fc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 31 08:51:15 2016 +0200

    yaml: move classification etc below the rules

[33mcommit 1b4e1ea389c3f96eb620d62227cb932edaf61dcf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 31 08:50:45 2016 +0200

    yaml: new defaults for outputs
    
    Enable eve.flow, disable plain http.log.

[33mcommit 4d056912d3858fe919bc6e06f9c0ff01f8b8172b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 30 21:32:17 2016 +0200

    yaml: file logging at info level

[33mcommit cb47c2f682e04611d526aea50704827be5d4111b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 30 21:30:25 2016 +0200

    yaml: improved defaults and misc cleanups

[33mcommit ea7923cc8116b5993ce1c105f40b08a06d2f0211[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 30 21:21:20 2016 +0200

    yaml: add performance tuning section

[33mcommit 6d7b4c81e3e2dd79bbb933f21c16b7f0d8a660c5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 30 21:10:44 2016 +0200

    yaml: more reshuffling

[33mcommit a6a69f00993d157c73ff01708be753a752010570[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 30 19:38:46 2016 +0200

    yaml: create advancted sections
    
    Sections for advancted detection settings and traffic tracking and
    reconstruction.

[33mcommit d79c95ddedf670cf8bcf10c1a1a12e584b154253[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 30 19:33:00 2016 +0200

    yaml: add hw accel section, move cuda there

[33mcommit 8fae138d3b9cc36b26b32940825c1cf4ab267e26[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 30 19:30:33 2016 +0200

    yaml: add netfilter section

[33mcommit 056f88b4582d16eabb49801580fc7400bebd6e34[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 30 19:28:34 2016 +0200

    yaml: move outputs to the logging step

[33mcommit 11e6809d554b01897e5f2498a623f3645bdcb6e7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 30 19:19:56 2016 +0200

    yaml: introduce 'advanced settings'

[33mcommit c5ca642a28659ba59de41b318f77ffdb2d61a277[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 30 19:15:41 2016 +0200

    yaml: move app layer up

[33mcommit c160f7875874ae18303b3134ee1690f6c783d666[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 30 19:10:31 2016 +0200

    yaml: move afpacket, pcap, pcap-file up

[33mcommit d48098f1896e8d89b794fa1e6eef0d99dabcf6f8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 30 19:02:17 2016 +0200

    yaml: move logging up

[33mcommit c949668863ebd9110c8ae977325d4a98f2df1f15[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 30 18:57:20 2016 +0200

    yaml: move rules up in the file
    
    Also disable decoder and stream events by default, as they are too noisy
    in a untuned environment.

[33mcommit a9cea53e62b1abf0fadbc04501710ba0213e0741[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 30 18:53:52 2016 +0200

    yaml: move vars to the top

[33mcommit 093ecf4798b3fb93e75d81462cec1ec62487d9b2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 31 04:22:47 2016 +0200

    logging: clean up at shutdown

[33mcommit c1f679d3f3564fd3a2ab3b157880e22e1b936a7a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun May 29 11:29:30 2016 +0200

    flow worker: move UDP app-layer into main function
    
    This way it's more clean what happens and we can profile it.

[33mcommit e09643c396d6aa7ce35089ff45b5c4ce49c1d036[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun May 29 10:40:46 2016 +0200

    flow worker: profiling
    
    Previously the detect and stream code lived in their own thread
    modules. This meant profiling showed their cost as part of the
    thread module profiling logic. Now that only the flow worker is
    a thread module this no longer works.
    
    This patch introduces profiling for the 3 current flow worker
    steps: flow, stream, detect.

[33mcommit 48771c1acf2f9c87507fd3ce5559b02b4573c025[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat May 28 09:21:05 2016 +0200

    debug: fix compiler warnings

[33mcommit 7dfdcdc770e4a99fc953c990d6a54ea7ea2112ca[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 27 16:46:03 2016 +0200

    thread modules: remove unused id's

[33mcommit a8f257e05f1227771078ad797bc9b72313d70476[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 27 16:39:14 2016 +0200

    detect: no longer a thread module
    
    Like stream, detect is now invoked directly by the FlowWorker.

[33mcommit 4a96820320e5ba8ef183d65d2802040cb8dea1d9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 27 16:10:59 2016 +0200

    stream-tcp: more cleanups

[33mcommit 8b06badbcfc3f3145f6d186b628010bbd7a42027[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 27 16:02:06 2016 +0200

    stream-tcp: no longer register as a thread module
    
    Now that the FlowWorker handles the TCP Stream directly, having
    the TCP engine as a thread module is no longer needed.
    
    This patch removes the registration.

[33mcommit 333f2cb3107fc05859cafff7a3d1127795fbc541[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 27 14:54:36 2016 +0200

    drmemory: broader suppressions for hyperscan

[33mcommit eec66c7b4f7d8d3272d8229c9164f0b4c4955426[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 27 12:14:16 2016 +0200

    smtp: improve thread data use
    
    The SMTP app layer used a thread local data structure for the mpm in
    reply parsing, but it only used a pmq. The MpmThreadCtx was actually
    global. Until now this wasn't really noticed because non of the mpm's
    used the thread ctx.
    
    Hyperscan does use it however.
    
    This patch creates a new structure SMTPThreadCtx, which contains both
    the pmq and the mpm thread ctx. It's passed directly to the reply
    parsing function instead of storing a pointer to it in the SMTPState.
    
    Additionally fix a small memory leak warning wrt the smtp global mpm
    state.

[33mcommit 7a0dbc6f9f39d4527f4f927347196c9a757917dc[m
Author: Justin Viiret <justin.viiret@intel.com>
Date:   Wed May 25 11:47:24 2016 +1000

    app-layer-smtp: free mpm contexts on shutdown
    
    Adds a cleanup function for the SMTP parser that destroys the MPM
    context and MPM thread context it uses.
    
    Also marks smtp_mpm_thread_ctx static.

[33mcommit d807bf4e8a837db07830c6932d162f9758c5ad81[m
Author: Justin Viiret <justin.viiret@intel.com>
Date:   Mon May 23 14:22:30 2016 +1000

    detect-engine: log MPM/SPM matchers being used

[33mcommit c9d0d6f69855c3aba2ee148a092618e7d5453096[m
Author: Justin Viiret <justin.viiret@intel.com>
Date:   Mon May 23 10:46:53 2016 +1000

    mpm: add "auto" default for mpm-algo
    
    Setting mpm-algo to "auto" will use "hs" if Suricata was built against
    Hyperscan, and "ac" otherwise (or "ac-tile" on Tilera platforms).

[33mcommit 8c6deecc55117d5685e26283661640e02e7005fa[m
Author: Justin Viiret <justin.viiret@intel.com>
Date:   Mon May 23 13:46:24 2016 +1000

    app-layer-detect-proto: use mpm-algo
    
    Use the matcher configured by the user rather than hard-coding MPM_AC.

[33mcommit 88b50d2c34f49eb8bb21a7b4556808f52a8f2c97[m
Author: Justin Viiret <justin.viiret@intel.com>
Date:   Mon May 23 13:42:05 2016 +1000

    app-layer-detect-proto: pass mpm_ctx to DestroyCtx
    
    The MPM DestroyCtx function accepts the MpmCtx, not the ctx pointer
    inside it.

[33mcommit 31d8d4b0a1cf686d1271c8781c160a7e69bb932e[m
Author: Justin Viiret <justin.viiret@intel.com>
Date:   Mon May 23 11:58:01 2016 +1000

    detect-engine: adjust unit tests for hs mpm
    
    The Hyperscan MPM does match deduplication internally (using
    HS_FLAG_SINGLEMATCH) and only returns the number of unique matches,
    unlike AC.

[33mcommit 68ddcdccde5d4d6435d405d6ebaa64041fe54583[m
Author: Justin Viiret <justin.viiret@intel.com>
Date:   Mon May 23 11:06:39 2016 +1000

    app-layer-smtp: init mpm thread ctx after prepare
    
    This allows the Hyperscan MPM to correctly allocate scratch.

[33mcommit 24a1488591e67c52db7ef0ebc2c0fd020bcf9db6[m
Author: Justin Viiret <justin.viiret@intel.com>
Date:   Mon May 23 13:57:50 2016 +1000

    mpm-hs: make errors from hs_scan() fatal
    
    Hyperscan will only return an error at scan time if the database or
    scratch region are corrupted, which should provoke a fatal error.

[33mcommit a765cfde191aaa37b797d8579d523a45a9fe5895[m
Author: Justin Viiret <justin.viiret@intel.com>
Date:   Mon May 23 14:06:00 2016 +1000

    mpm-hs,spm-hs: don't call hs_scan() for zero bytes

[33mcommit 2a5f487a16ac2390805459efad63bb556a8c0d84[m
Author: Aleksey Katargin <gureedo@gmail.com>
Date:   Wed May 25 09:45:07 2016 +0500

    netmap: close sw ring before hw rings
    Fix issue #1714

[33mcommit b23d74ac883293a65a78477becc070aa2c1baf0e[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu May 26 11:44:19 2016 -0600

    tls-json-log: register module as tls-json-log, not dns-json-log
    
    Fixes issue:
    https://redmine.openinfosecfoundation.org/issues/1792
    where dns-json-log would not log any data.

[33mcommit bfa90a64d565065d01d37438357f751c2998d252[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri May 27 09:16:02 2016 +0200

    prscript: fix error handling
    
    Last result was used as global result.

[33mcommit 5e7f617b7b453dce80e84059f97ba100a83baf1d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 24 16:57:16 2016 +0200

    isdataat: remove unused code

[33mcommit 221cb93024bd922084cec32b9be54f7ba120cdbb[m
Author: Arturo Borrero Gonzalez <arturo.borrero.glez@gmail.com>
Date:   Mon May 23 12:32:34 2016 +0200

    src/: fix typo: receieved vs received
    
    Reported by Debian's lintian tool.
    
    Signed-off-by: Arturo Borrero Gonzalez <arturo.borrero.glez@gmail.com>

[33mcommit ea23b857765ffdf188a7bf097817f2fac7b7fc76[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat May 21 14:22:13 2016 +0200

    flow worker: set up decoder thread vars

[33mcommit 6286e7055521875a150c7c7c5ff0a715ede27a36[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 22 12:57:41 2016 +0200

    ac: allow use of 31bits of pid space instead of 16

[33mcommit 133485937952d8ed106eae840f517edf53024e19[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 23 16:34:40 2015 +0200

    dns: add support for sshfp records
    
    Update parser to process the records.
    
    Update json output to log it.

[33mcommit 1df5acb001dfb85f61d7a530a748a641a4055903[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 20 18:45:16 2016 +0200

    coverity: CID 1362011: Control flow issues (DEADCODE)

[33mcommit 213f041c977c23710b986926433dfdf545e54814[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 20 18:42:46 2016 +0200

    coverity: CID 1362012: Incorrect expression (EVALUATION_ORDER)

[33mcommit 3ffd19bdf51f14d99d7f988d327e20426dd6db8b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 20 18:40:45 2016 +0200

    coverity CID 1362013: Control flow issues (NESTING_INDENT_MISMATCH)

[33mcommit f947539d7971d83f9b4cef0aeeb473ff3946a21d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 20 10:41:45 2016 +0200

    af-packet: CentOS6 build fixes

[33mcommit 49612128f3b24b4224d58842cff1540fc9a42b08[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Apr 26 19:55:51 2016 +0200

    af-packet: use time() instead of GetTime()
    
    As we only use the second we don't need GetTime() which is slower
    and get us milliseconds.

[33mcommit 88f5d7d16605d43afb44d134facf26239af48b45[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Apr 26 19:46:19 2016 +0200

    af-packet: print errno on mmap error

[33mcommit ff05fb760b76d2ad3ea7b407af394ad6d13aa0dd[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Apr 22 19:50:10 2016 +0200

    af-packet: fix some typos in yaml

[33mcommit a40f08a21335e25d8b7aa1fe5182ec2687954b7d[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Apr 23 00:30:39 2016 +0200

    af-packet: ask for hardware timestamp

[33mcommit 8035d834678cfe82de597b9b0bc72a7f87b23df3[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Apr 18 14:24:08 2016 +0200

    af-packet: make mmap options parsing conditional
    
    Only parse them if mmap is activated.

[33mcommit 7fea0ec6f9c704a27db0c78c039bfd191f79d906[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Apr 12 11:46:43 2016 +0200

    af-packet: reset stats at start of capture
    
    We can loose packets during setup because we are reading nothing.
    So it is logical to discard the counter at start of capture to
    start from a clean state. This means we don't need to account the
    drop at start. But the stats call that will reset the drop counts
    will also return and reset the packets count. So we need to know
    how many packets we really have. This is in fact the number of
    packets coming from the stats call minus the number of discarded
    packets and the drop count. All the other packets will have to be
    read.

[33mcommit 876b356bbe335a50aec1c9e1222fa9584fba51b4[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Apr 1 14:01:09 2016 +0200

    af-packet: use mmap capture by default
    
    Update the code to use mmap capture by default even in unset in
    configuration file. mmap capture is now be turned off by using
    explicitely 'use-mmap: no' in configuration.

[33mcommit c2d0d93806c6a684ced8492e86157a4f28e36bf4[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Apr 9 16:07:23 2016 +0200

    af-packet: detect availability of tpacket_v3
    
    If TPACKET_V3 is not defined then it is not available and we should
    not build anything related to tpacket_v3. This will allow us to
    activate it dy default and fallback to v2 if not available.

[33mcommit f5c20191672de24d55852eb48dcd6a33524de4b7[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Apr 8 17:05:55 2016 +0200

    af-packet: add option to use memory locked mmap

[33mcommit 234aefdff9c87623ac2f1a7f60436c79ac03561b[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Apr 8 15:29:18 2016 +0200

    af-packet: configurable tpacket_v3 block timeout
    
    Block timeout defines the maximum filling duration of a block.

[33mcommit fa902abedf92e82768519c72ce3e180ace0784da[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Apr 8 10:03:52 2016 +0200

    af-packet: configurable tpacket_v3 block size
    
    It is used to set the block size in tpacket_v3. It will allow user
    to tune the capture depending on his bandwidth.
    
    Default block size value has been updated to a bigger value to
    allow more efficient wlak on block.

[33mcommit c7bde9dff66bd9722b7d4e8c80abd4b29fc5571b[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Apr 7 21:58:48 2016 +0200

    af-packet: put ring setup in a separate function

[33mcommit 7fa963718fa630320cb426702304c4bf8cdab5a8[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Apr 1 22:52:37 2016 +0200

    af-packet: pack AFPPeer structure

[33mcommit 5f84b55d98ca36b199d1c6b84dc89a5461687df8[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Apr 22 22:15:53 2016 +0200

    af-packet: AFPWalkBlock error handling
    
    Error handling was not done. The implementation is making the
    choice to consider we must detroy the socket in case of parsing
    error. The same was done for tpacket_v2.

[33mcommit b797fd926c0aa080c6ace55f25a7f0dff12b4bb7[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Apr 1 22:33:22 2016 +0200

    af-packet: continuing cleaning and hole hunting
    
    Suppress useless fields in AFPThreadVars. This patch also get rid
    of bytes counter as it was only used to display a message at exit.
    Information on livedev and on packet counters are enough.

[33mcommit 9500d12c9f8be4edef896decab896b69be88a3ea[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Apr 1 19:46:41 2016 +0200

    af-packet: cleaning and hole hunting
    
    Reorder fields in AFPThreadVars and suppress some that were not
    used elsewhere than in the initialization.

[33mcommit bae1b03cf5ccab79c0d8af896c7c2200688edc00[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Oct 28 17:19:31 2013 +0100

    af-packet: tpacket_v3 implementation
    
    This patch adds a basic implementation of AF_PACKET tpacket v3. It
    is basic in the way it is only working for 'workers' runnning mode.
    If not in 'workers' mode there is a fallback to tpacket_v2. Feature
    is activated via tpacket-v3 option in the af-packet section of
    Suricata YAML.

[33mcommit d094039600ac832325bacb014583cca6a6eaa2f4[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Apr 1 13:52:24 2016 +0200

    af-packet: remove useless code
    
    No need for cooked header in the case of mmap capture.

[33mcommit 27adbfa86828d21d06ff9fc3a999270da7bed00e[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Apr 1 08:48:31 2016 +0200

    af-packet: micro optimization

[33mcommit 5f400785c850887b9e2856f2afbf89dfba7b53e2[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jan 3 20:29:54 2013 +0100

    af-packet: avoid test for each packet

[33mcommit f77bc5195cb7c81214a57f3c0e06993923f82b3a[m
Author: Justin Viiret <justin.viiret@intel.com>
Date:   Fri May 20 13:31:05 2016 +1000

    spm: handle null ptrs in destroy funcs gracefully
    
    This will handle minimal DetectEngineCtx structures (used in delayed
    detect mode) safely, since they don't get SPM global contexts allocated.
    
    Also added BUG_ON checks for valid spm_table entries.

[33mcommit e43ce0a9ecc32fa1e574fc3c9e1bfc246a45bc01[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 30 21:21:50 2015 +0100

    file: switch to streaming buffer API
    
    Make the file storage use the streaming buffer API.
    
    As the individual file chunks were not needed by themselves, this
    approach uses a chunkless implementation.

[33mcommit e836a750c8d333c5d14b70e9621c8b69b39ad32c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 16 10:05:56 2015 +0100

    http: improve body inspection
    
    Enforce inspect window also in IDS mode. Try always to get at least
    'inspect win' worth of data. In case there is more new data, take
    some of the old data as well to make sure there is always some overlap.
    
    This unifies IDS and IPS modes, the only difference left is the start
    of inspection. IDS waits until min_size is available, IPS starts right
    away.

[33mcommit feafc838db4cac7002580d8f72e9cf4f742db03c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 15 13:21:59 2015 +0100

    http: make htpstate cfg ptr const

[33mcommit 24a2f51569e59b5e9506fe746cb263a5e0e1a460[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 15 13:20:14 2015 +0100

    http: move body settings into per dir struct

[33mcommit 6fb808fc1aebc1ce4b2d7f601f529395f6d98fe6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 14 00:14:02 2015 +0100

    http: add per direction config for body parsing
    
    The HTPCfgDir structure is meant to contain config for per direction
    body parsing parameters.
    
    This patch stores the streaming API config.

[33mcommit 46e55f1e346101ed1998ad45681e288a857a7766[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 12 00:19:52 2015 +0100

    http body handling: use streaming buffer API
    
    Convert HTTP body handling to use the Streaming Buffer API. This means
    the HtpBodyChunks no longer maintain their own data segments, but
    instead add their data to the StreamingBuffer instance in the HtpBody
    structure.
    
    In case the HtpBodyChunk needs to access it's data it can do so still
    through the Streaming Buffer API.
    
    Updates & simplifies the various users of the reassembled bodies:
    multipart parsing and the detection engine.

[33mcommit 81b2984c4e4b244afd87502bec94209a3d0d8094[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 8 18:30:05 2015 +0100

    streaming: buffer API
    
    Add a new API to store data from streaming sources, like HTTP body
    processing or TCP data.
    
    Currently most of the code uses a pattern of list of data chunks
    (e.g. TcpSegment) that is reassembled into a large buffer on-demand.
    
    The Streaming Buffer API changes the logic to store the data in
    reassembled form from the start, with the segments/chunks pointing
    to the reassembled data.
    
    The main buffer storing the data slides forward, automatically or
    manually. The *NoTrack calls allows for a segmentless mode of
    operation.
    
    This approach has two main advantages:
    
    1. accessing the reassembled data is virtually cost-free
    2. reduction of allocations and memory management

[33mcommit 78ecfe8780ca3d06bba9318c42775f51e132e45f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 17 18:34:55 2016 +0200

    autofp: update queue handlers
    
    Now that the flow lookup is done in the worker threads the flow
    queue handlers running after the capture thread(s) no longer have
    access to the flow. This limits the options of how flow balancing
    can be done.
    
    This patch removes all code that is now useless. The only 2 methods
    that still make sense are 'hash' and 'ippair'.

[33mcommit 61ce05e7ed8a8ef7b02ff57f2e7c6281003ef62c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 17 18:05:26 2016 +0200

    flow: remove dead code

[33mcommit 52d500c670a343a1503dc959c2b087979eb8346f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 19 18:06:32 2016 +0200

    flowworker: initial support
    
    Initial version of the 'FlowWorker' thread module. This module
    combines Flow handling, TCP handling, App layer handling and
    Detection in a single module. It does all flow related processing
    under a single flow lock.

[33mcommit 408948815f4cc4a6b7a9fbcbc7bc9bbe073a30f3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 16 23:06:33 2016 +0200

    detect: simplify flow locking
    
    To simplify locking, move all locking out of the individual detect
    code. Instead at the start of detection lock the flow, and at the
    end of detection unlock it.
    
    The lua code can be called without a lock still (from the output
    code paths), so still pass around a lock hint to take care of this.

[33mcommit 6f560144c1b97906ad41f621cadc08f4c99dff89[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 18 15:09:13 2016 +0200

    time: improve offline time handling
    
    When we run on live traffic, time handling is simple. Packets have a
    timestamp set by the capture method. Management threads can simply
    use 'gettimeofday' to know the current time. There should never be
    any serious gap between the two or major differnces between the
    threads.
    
    In offline mode, things are dramatically different. Here we try to keep
    the time from the pcap, which means that if the packets are recorded in
    2011 the log output should also reflect this. Multiple issues:
    
     1. merged pcaps might have huge time jumps or time going backward
     2. slowly recorded pcaps may be processed much faster than their
        'realtime'
     3. management threads need a concept of what the 'current' time is for
        enforcing timeouts
     4. due to (1) individual threads may have very different views on what
        the current time is. E.g. T1 processed packet 1 with TS X, while T2
        at the very same time processes packet 2 with TS X+100000s.
    
    The changes in flow handling make the problems worse. The capture thread
    no longer handles the flow lookup, while it did set the global 'time'.
    This meant that a thread may be working on Packet 1 with TS 1, while the
    capture thread already saw packet 2 with TS 10000. Management threads
    would take TS 10000 as the 'current time', considering a flow created by
    the first thread as timed out immediately.
    
    This was less of a problem before the flow changes as the capture thread
    would also create a flow reference for a packet, meaning the flow
    couldn't time out as easily. Packets in the queues between capture
    thread and workers would all hold such references.
    
    The patch updates the time handling to be as follows.
    
    In offline mode we keep the timestamp per thread. If a management thread
    needs current time, it will get the minimum of the threads' values. This
    is to avoid the problem that T2s time value might already trigger a flow
    timeout as the flow lastts + 100000s is almost certainly meaning the
    flow would be considered timed out.

[33mcommit 2f0e0f17dbb4f289f045ab38cf13dc2ef209a148[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 15 17:08:50 2016 +0200

    flow: move flow handling into worker threads
    
    Instead of handling the packet update during flow lookup, handle
    it in the stream/detect threads. This lowers the load of the
    capture thread(s) in autofp mode.
    
    The decoders now set a flag in the packet if the packet needs a
    flow lookup. Then the workers will take care of this. The decoders
    also already calculate the raw flow hash value. This is so that
    this value can be used in flow balancing in autofp.
    
    Because the flow lookup/creation is now done in the worker threads,
    the flow balancing can no longer use the flow. It's not yet
    available. Autofp load balancing uses raw hash values instead.
    
    In the same line, move UDP AppLayer out of the DecodeUDP module,
    and also into the stream/detect threads.
    
    Handle TCP session reuse inside the flow engine itself. If a looked up
    flow matches the packet, but is a TCP stream starter, check if the
    ssn needs to be reused. If that is the case handle it within the
    lookup function. Simplies the locking and removes potential race
    conditions.

[33mcommit ae7aae81dc25271f30d4c26f0588f65ad8f44c09[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 17 12:48:14 2015 +0100

    flow: get flow reference during lookup
    
    Update Flow lookup functions to get a flow reference during lookup.
    
    This reference is set under the FlowBucket lock.
    
    This paves the way to not getting a flow lock during lookups.

[33mcommit a81766c046ef463c3a1c527770702552765f9843[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 16 21:30:32 2016 +0200

    detect: split detect entry into flow/noflow
    
    This is a preparation for flow locking updates.

[33mcommit a13df67864d05ba56a9751e7310001296f7c6d59[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed May 18 13:49:47 2016 +0200

    detect: add (mpm) keyword for tls_sni
    
    Match on server name indication (SNI) extension in TLS using tls_sni
    keyword, e.g:
    
    alert tls any any -> any any (msg:"SNI test"; tls_sni;
            content:"example.com"; sid:12345;)

[33mcommit 3da79610afda76f9f32aad13c1bae202f9d803f6[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue May 17 13:40:43 2016 -0600

    typo: SURCATA -> SURICATA

[33mcommit baf528e751ba8a7fada47aca4ebd2cba2d2ed4a1[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue May 17 13:40:01 2016 -0600

    typos: surictsc -> suricatasc
    
    Reported by Markus Lude on the mailing list.

[33mcommit b77d30727235e9195e581dfc15fca05a2dac9be6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 16 14:11:56 2016 +0200

    ipv6: simplify ext hdr parsing

[33mcommit abb0a31aed88f0f6f48ffa3bb5129e10afbd20dc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun May 15 20:05:44 2016 +0200

    defrag: work around packet creation issues
    
    Defrag tests set up packets but don't call Decode on them. Work
    around failing IPv6 tests.

[33mcommit 68c7fae79fdcf70e817a76022c989f77b176b3fe[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun May 15 13:35:10 2016 +0200

    ipv6: simplify ext hdr parsing and storage
    
    This reduces size of the IPV6ExtHdr structure part of every packet
    significantly.
    
    Clean up macro's in the ipv6 header.

[33mcommit 64405ae194d8ab4fa73de223d35a8e521c66b23d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 16 12:31:07 2016 +0200

    detect-ipopts: optimize matching

[33mcommit 3ab7dfd98813a19754f01db7f081f7d7419cac3f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 16 12:26:22 2016 +0200

    detect-ipopts: cleanup

[33mcommit 6ea0db2f603791d46d95749a43a48341454a11aa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 16 12:17:38 2016 +0200

    ipv4: removed unused variables

[33mcommit 8c37906cf9e2f79431a1a1babadc438e79aeed75[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 16 12:15:42 2016 +0200

    ipv4: store ipopts as flags, not bools

[33mcommit be5a5df1f7bf14d0f81122c6d1bd75e95d9588b7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun May 15 18:29:25 2016 +0200

    ipv4: shrink per packet ipopts storage

[33mcommit 8dc63f625f9a8a890d231e1d7dc7c38a30a95168[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 13 10:50:51 2016 +0200

    qa: update drmemory suppressions for hyperscan spm matching

[33mcommit 91011b30a6409296e6c7fe29cc643bc83a006123[m
Author: Justin Viiret <justin.viiret@intel.com>
Date:   Mon May 16 14:15:45 2016 +1000

    spm: add "spm-algo: auto" setting
    
    This will default to Hyperscan when Suricata is built with Hyperscan
    support. Otherwise, Boyer-Moore is used by default.

[33mcommit 6a6d0192454962fc936b62e548de008e5b6649cb[m
Author: Justin Viiret <justin.viiret@intel.com>
Date:   Thu Apr 28 12:48:38 2016 +1000

    spm: add Hyperscan implementation

[33mcommit cce2d114e8a8175240c65aba572666b5faa05709[m
Author: Justin Viiret <justin.viiret@intel.com>
Date:   Wed May 11 14:10:27 2016 +1000

    spm: add and use new SPM API
    
    This new API allows for different SPM implementations, using a function
    pointer table like that used for MPM.
    
    This change also switches over the paths that make use of
    DetectContentData (which previously used BoyerMoore directly) to the new
    API.

[33mcommit 7ba9dbe36ac055a2bb99197f68afd9b0eecbb5b2[m
Author: Justin Viiret <justin.viiret@intel.com>
Date:   Thu May 12 13:08:30 2016 +1000

    suricata.yaml: document spm-algo option

[33mcommit ce408c4d107342c6c078a9fc8e7d047f8abac398[m
Author: Justin Viiret <justin.viiret@intel.com>
Date:   Thu Apr 28 15:23:05 2016 +1000

    spm: add SinglePatternMatchDefaultMatcher
    
    Allows selecting SPM algorithm with the 'spm-algo' value in the YAML
    config file.

[33mcommit d84dc02bd706694a97f99775239e5af67e6c6104[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat May 7 17:22:22 2016 +0200

    tcp sack: improve tests

[33mcommit fbf0a7aa45254405e2432a73cfa9935b5d181fba[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat May 7 17:21:04 2016 +0200

    detect app-layer-event: fix tests

[33mcommit 80716f860e72758cd032dec91376d056fb80743f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat May 7 17:20:12 2016 +0200

    app-layer: test fixes

[33mcommit 90414472eda57134ca58cb9f338df2d169520896[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 13 18:35:26 2016 +0200

    thread storage: fix memset 0 after realloc
    
    Thread storage expansion would not properly memset 0 the new part
    of the memory.

[33mcommit 667e4e68bf01e0cc19d0cac501ae6d4df80095e9[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon May 16 01:21:33 2016 -0600

    configure.ac: escape $srcdir when used in a variable
    
    $srcdir needs to be escaped for proper expansion when used
    as part of a Makefile variable.

[33mcommit 45342078e4032deb0916b0f7fb11f1471bf05ee7[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri May 13 08:00:19 2016 +0200

    tlsstore: fix memleak
    
    Bug #1771.
    
    Direct leak of 1834 byte(s) in 1 object(s) allocated from:
        #0 0x4e2e65 in realloc ??:?
        #1 0xcec27b in LogTlsLogPem /home/mats/suricata/src/log-tlsstore.c:130
        #2 0xcea4f5 in LogTlsStoreLogger /home/mats/suricata/src/log-tlsstore.c:303
        #3 0xd8b99c in OutputPacketLog /home/mats/suricata/src/output-packet.c:104

[33mcommit ed33f5f14859b6bbe2b290ee5351e9a445e1a9aa[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu May 12 08:14:52 2016 +0200

    tlsstore: use TxLogger

[33mcommit 77cc03505b3e59c73e359c71ffa9f696bb3eb8d9[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu May 12 08:11:53 2016 +0200

    output: add new tx logger to log at certain condition
    
    Some loggers needs certain conditions to be met before logging.
    This enables us to use conditions on the tx logger.

[33mcommit 663273a31e0903ad6f58849d4e1b4ac0052277a5[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed Apr 27 10:17:15 2016 +0200

    tls: change flag checking in SSLParserTest23
    
    Change flag checking in SSLParserTest23 to check each flag individually
    to enable adding more flags without the test failing.

[33mcommit 47a4daeeb88729af0efd56ce574ab81297c11117[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Apr 15 09:19:36 2016 +0200

    output: allow more than one TLS logger

[33mcommit e9074bc829d1ef9932b5fdf420bd610775d8fb91[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Apr 15 09:07:09 2016 +0200

    jsontls: use TxLogger

[33mcommit c6a61e009b65b19dbe745d23022fad518a24c369[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu Apr 14 09:51:18 2016 +0200

    tlslog: use TxLogger

[33mcommit 88bf866381f295cfde3805eab0a4cb1b0630f853[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed Apr 13 08:43:54 2016 +0200

    output-lua: use LuaTxLogger for TLS

[33mcommit fa6257b66ab4415ad51a0ca09a24cb6c65bd36ef[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed Apr 27 14:13:44 2016 +0200

    output: add new logger to log at specified state
    
    Sometimes we want to log when we reach a specified state instead of
    waiting for the session to end. E.g for TLS we want to log as soon
    as the handshake is done.
    
    To do this, a new logger is added, where it is possible to specify
    a custom "ProgressCompletionStatus".

[33mcommit 4166ec306414230d1b69fb28710824ba27c3af0d[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed May 4 13:37:04 2016 +0200

    template: register logger functions

[33mcommit 593f81527ac902f320136a6080a85a21648d55a6[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed May 4 13:25:03 2016 +0200

    modbus: register logger functions

[33mcommit c52fe9a5fa1761f3d8f334fbd13315f3ce921c70[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed May 4 13:16:03 2016 +0200

    http: register logger functions

[33mcommit d484812d05669b10e82a5f782666d7e57fe43955[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed May 4 12:53:55 2016 +0200

    smtp: register logger functions

[33mcommit dacb860d24f221fd7ad5a3fc775ad35f556717e0[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed May 4 12:35:06 2016 +0200

    dns: register logger functions

[33mcommit 1f98915ebe072e7af1c7c93a223d901f91f71c09[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed May 4 12:14:13 2016 +0200

    tls: register logger functions

[33mcommit f3599323e4ff649fa9e5a033df87361e05dc643b[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed May 4 11:03:57 2016 +0200

    tx: add functions for logging
    
    Add function AppLayerParserRegisterLoggerFuncs for registering
    a callback function for checking if a specific logger has logged
    a transaction, and a callback function for specifying that it has.
    
    Also add functions AppLayerParserGetTxLogged and
    AppLayerParserSetTxLogged to invoke these callback functions.

[33mcommit c4b918b6c4acfde858cf9662631df105daf37efb[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed May 4 10:00:26 2016 +0200

    tx: do not store ProgressCompletionStatus per ipproto
    
    Change AppLayerParserRegisterGetStateProgressCompletionStatus to
    only store one ProgressCompletionStatus callback function for each
    alproto, instead of storing one for each ipproto.
    
    This enables us to use AppLayerParserGetStateProgressCompletionStatus
    in functions where we do not know the ipproto used.

[33mcommit e4f03b18bacb7e4bfe295672d393d6a00912010d[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed Apr 13 08:28:16 2016 +0200

    tls: make TX aware

[33mcommit a422ae9f3c0cc029f7d4982652f8cb08a9c2d8ab[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu May 12 11:54:05 2016 +0200

    tls-sni: fix alignment issues

[33mcommit 8dc477f85aead004447effaad6de8e9411bc1cc7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 10 08:50:37 2016 +0200

    sources: fix netmap compilation and pcap setup

[33mcommit be714a2f0218ad501a86f0a3b7dd029cccd9bc39[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 18 11:24:26 2015 +0100

    flow queue handler: use int16_t
    
    Use int16_t instead of int to store the autofp queue id. We should
    not easily get to 32k threads so 2 bytes per flow is sufficient.

[33mcommit ba64069b3562a656490e03a302e914dd3229b1b5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 18 16:26:18 2016 +0200

    flow: remove unused debug code

[33mcommit 2c7cd1c22a6618dbc5207e927f3f99636c7fa204[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 19 11:38:25 2016 +0200

    flowint: redo tests

[33mcommit 3a36dea358cef2996ae366da53f245f9048039c1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 19 12:03:35 2016 +0200

    detect: add missing sigorder case

[33mcommit 271bd045396b618cd52079be17ca083c4931f87e[m
Author: DIALLO David <david.diallo@ssi.gouv.fr>
Date:   Wed May 4 09:58:01 2016 +0200

    modbus: fix AddressSanitizer error (segmentation fault)
    
    In case of Mask Write register or Write single register request with
    no data (malformed packet), app-layer-modbus checks response content
    (data) with the none stored request content. That causes the segmentation
    fault.
    
    Before accessing to request content, app-layer-modbus checks now if
    content has been previously stored. 4 unitests have been adding, 2 of them
    to test the management of Mask Write register and Write single register requests,
    and the 2 others to check invalid Mask Write register and Write single register
    requests.

[33mcommit 79c1904ab24ccd8dd34c5847d4302431034633a4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 6 15:18:57 2016 +0200

    ipv6: fix alignment issue in address to string code

[33mcommit 3979cb0e579f901158322f96e8a5931a036932f4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 6 15:13:21 2016 +0200

    ac-ks: fix integer handling issue

[33mcommit 8db7b70e93f34aa86bd69a7d9fe73ebc9cd89b95[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 6 15:12:29 2016 +0200

    unittests: don't call memcpy on NULL-ptr

[33mcommit 4875040dcac2e0f4837765268742bafad4c00ff1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 6 15:10:42 2016 +0200

    pcre: initialize var before use

[33mcommit e13f9561006e58724d4b3e52ad34cb596b06138f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 6 15:09:52 2016 +0200

    yaml: minor cleanup

[33mcommit 542492d6c21c678e726ea34ba4f58c3b4641a277[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 6 15:09:36 2016 +0200

    yaml: initialize var to prevent uninitialized read

[33mcommit d79208d93ba9a2171a586c6b4692c32c80d02d60[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 6 15:04:07 2016 +0200

    tcp sack: fix alignment issues

[33mcommit 055f8bea105bf0472dd448f93e67db9c80a25c11[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 6 15:00:10 2016 +0200

    smb: improve integer handling

[33mcommit ed5a01e8ddb5d83abed8cf04f0e794279758f91f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 6 14:57:55 2016 +0200

    dcerpc: improve integer handling

[33mcommit 9235dd498f6e4a14d09dc63f2b0b721636788498[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 6 13:06:15 2016 +0200

    detect port: fix integer handling in hashing

[33mcommit 001e87310d8e2b366934abc7d57b8248f323f2cc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 6 12:54:37 2016 +0200

    decode: don't call memcpy on NULL-ptr on pseudo packets

[33mcommit 35d081a797a1eaff6351eefb072b0741e8241471[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 6 12:50:15 2016 +0200

    ippair: fix alignment issues

[33mcommit 31b632a17df9e650f3dc9c9ea48774757488d972[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 6 12:50:01 2016 +0200

    host: fix alignment issues

[33mcommit b112af817dd5ee518fd8ec595ea64c9a00ece080[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 6 12:49:33 2016 +0200

    flow: fix alignment issues

[33mcommit 76c8c077c59e4f83e5f0558d23639649612322e7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 6 12:43:11 2016 +0200

    tcp: fix alignment issues with tcp timestamps

[33mcommit c64815e4a892a78cc4cc1a0bfe1b25f6b1a24216[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 6 11:04:29 2016 +0200

    decode-mime: don't call memcpy on NULL pointer

[33mcommit aa8e747e4d39fb32349ea6638649f5653e2519b6[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu May 5 09:41:45 2016 -0600

    sources: allow interface definitions to be reordered
    
    For af-packet, pf-ring, netmap, and pcap use a generic
    lookup function to find the configuration node for an
    interface.
    
    The new lookup function does not depend on the ordering
    of the items inside the device configuration.

[33mcommit e29e9056cb83de896d5b06fcf4d049169750901e[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon May 9 00:06:57 2016 +0200

    config-test: fix memory leak detect by ASAN
    
    NSS library was not deinit at exit resulting in memory leak. As
    it is useless for a config test, the patch updates the code so it
    is not initialized.
    
    Patch also calls MagicDeinit to free memory used by libmagic.

[33mcommit bf551ace4ef2e5a116184f0e77d17e6b10b0535c[m
Author: maxtors <moe.andreas@gmail.com>
Date:   Thu May 5 11:12:22 2016 +0200

    Use ConfValIsTrue for parseing util-logfile append value.

[33mcommit 3c15c1f8d5699ff3a2642d4e2770d10b758ab47d[m
Author: maxtors <moe.andreas@gmail.com>
Date:   Thu May 5 11:06:57 2016 +0200

    Use ConfValIsTrue for parsing TILE PCIE logging append value.

[33mcommit a81796654f5becc59e4793cd9ff50b77e51f4d9a[m
Author: maxtors <moe.andreas@gmail.com>
Date:   Thu May 5 10:58:24 2016 +0200

    Use ConfValIs* for parsing pf-ring.checksum-checks.

[33mcommit 70b864d06b7b35958adda92c2ad2725cb11dbbcd[m
Author: maxtors <moe.andreas@gmail.com>
Date:   Thu May 5 10:53:41 2016 +0200

    Use ConfValIs* for parsing pcap.checksum-checks.

[33mcommit b28ebae088324af35d1ff87e115f9442d1ca3f9f[m
Author: maxtors <moe.andreas@gmail.com>
Date:   Thu May 5 10:51:57 2016 +0200

    Use ConfValIs* for parsing netmap.checksum-checks.

[33mcommit d18e2f6e9a5a9a6f944bf54dbb648473d9e49fa5[m
Author: maxtors <moe.andreas@gmail.com>
Date:   Thu May 5 10:50:21 2016 +0200

    Use ConfValIs* for parsing af-packet.checksum-checks.

[33mcommit 3d4cdd11175469e99b8ef4f9d76f71fb6398e976[m
Author: maxtors <moe.andreas@gmail.com>
Date:   Thu May 5 10:44:06 2016 +0200

    Use ConfValIs* for parseing mpipe.checksum-checks.

[33mcommit 524c6271948129f04d393220026628b21627fdc8[m
Author: maxtors <moe.andreas@gmail.com>
Date:   Thu May 5 10:41:42 2016 +0200

    Use ConfValIs* for parsing pcap-file.checksum-checks.

[33mcommit c742a818d558216512290c1602ffdd3bce3a1325[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 3 11:48:56 2016 +0200

    profiling: suppress inferior version of UtilCpuGetTicks warning

[33mcommit db4ec46f1864dd7ab6333e47c1294b0c4a41cc8c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 3 10:29:05 2016 +0200

    coverty: fix dead code warning

[33mcommit dd86ac07f71d593f16244710ebd8fec3b4e48277[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Apr 28 15:09:18 2016 -0600

    smb: check that there is enough input data
    
    Conditional was checking the word count, but indexing
    much further into the input data.

[33mcommit 0e5bbe8564dbb916e4dae3a3edbe3ac4fe09c692[m
Author: maxtors <moe.andreas@gmail.com>
Date:   Thu Apr 28 15:11:06 2016 +0200

    Reordering of RRTYPE switch case for performance.

[33mcommit 387919e203a8f5405b37754666d59bb6d9437bea[m
Author: maxtors <moe.andreas@gmail.com>
Date:   Thu Apr 28 12:59:23 2016 +0200

    Added more DNS Resource Record Types.

[33mcommit 16e4c92b69da3274e294dd80aed2dce3cdb955db[m
Author: maxtors <moe.andreas@gmail.com>
Date:   Tue Apr 26 13:53:42 2016 +0200

    Changed "enabled" parsing to use ConfValIs(true|false)

[33mcommit 2b80da424baab58478ba90b4ce3d7ec23d55f871[m
Author: maxtors <moe.andreas@gmail.com>
Date:   Mon Apr 25 18:08:28 2016 +0200

    Update ASN1_MAX_FRAMES to reflect default in suricata.yaml.in

[33mcommit 98185573690895122f0c040ec16b5e498b82cffa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 2 14:30:35 2016 +0200

    stats: fix stats.log ignoring null-values for threads

[33mcommit d9639fba60a0f81e9d8c3181e5577243a7bffd2b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 2 11:59:47 2016 +0200

    cppcheck: fix harmless warnings
    
    [src/detect-engine-loader.c:272]: (error) Buffer is accessed out of bounds.
    [src/flow-manager.c:742]: (error) Buffer is accessed out of bounds.
    [src/flow-manager.c:906]: (error) Buffer is accessed out of bounds.

[33mcommit dbbca37a942f8122929cd2a4af1dd9ae425c9c56[m
Author: Zachary Rasmor <zachary.r.rasmor@lmco.com>
Date:   Wed Apr 27 00:51:54 2016 -0400

    Remove free operation on thread name field.
    
    Name field is now  a pre-allocated array - free is no longer necessary.
    Fix issue leading to segfault during interface shortening in Single runmode.

[33mcommit 71018cd2cecabe69c381e8b9a78ecbe9cbc86a4a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 24 18:57:47 2015 +0100

    runmodes: constify names

[33mcommit f211fa48f46b23e34dc396667cc9c53152a38f8f[m
Author: Zachary Rasmor <zachary.r.rasmor@lmco.com>
Date:   Sun Dec 6 11:36:26 2015 -0500

    Update unit test to account for 'name' type change.

[33mcommit 68cfa009a0105ff2ae3f116d587f41ed92d5ef3e[m
Author: Zachary Rasmor <zachary.r.rasmor@lmco.com>
Date:   Sat Dec 5 19:52:20 2015 -0500

    Update thread creation and threads to use global thread names.
    
    Thread name is now stored as a static string buffer,
    string duplication and alloc/de-alloc is no longer required.

[33mcommit 10d3d90f06117e3740d9915e7df9a9ba80e608c5[m
Author: Zachary Rasmor <zachary.r.rasmor@lmco.com>
Date:   Sat Dec 5 19:56:55 2015 -0500

    Change thread name from pointer to buffer. Remove pointer free.

[33mcommit 885747218bfb23b8e880f2444f23228cf3bff527[m
Author: Zachary Rasmor <zachary.r.rasmor@lmco.com>
Date:   Wed Nov 4 22:55:13 2015 -0500

    Update shortening algorithm to account for addition of #.

[33mcommit 8c8759c189cd3f55d6630aac54112681cf833780[m
Author: Zachary Rasmor <zachary.r.rasmor@lmco.com>
Date:   Thu Nov 5 00:30:31 2015 -0500

    Add global threadnames.
    
    Update thread naming convention to follow: W#01-eth0.
    Add interface name where applicable, add #.

[33mcommit f8a40dd9068298214a065237bdf76449a06858c7[m
Author: Zachary Rasmor <zachary.r.rasmor@lmco.com>
Date:   Wed Nov 4 23:43:31 2015 -0500

    Update pcap-file runmode to adhere to new thread standard.

[33mcommit 41c768ce2837355e6556a13d076dd5bdd81d6c82[m
Author: Zachary Rasmor <zachary.r.rasmor@lmco.com>
Date:   Wed Nov 4 22:47:04 2015 -0500

    Update threads to use global thread names.
    
    Update FlowManager/Recycler to use global name.
    Also add # into thread number.
    Update af-packet to use global threadnames.
    Update pcap to use global threadnames.
    Update pfring to use global threadnames.
    Update erf-dag to use global threadnames.
    Update nflog to use global threadnames.
    Update netmap to use global threadnames.
    Update napatech to use global threadnames.

[33mcommit 1bfebae8c414df1499211ae7a0aca7a69e05d4f1[m
Author: Zachary Rasmor <zachary.r.rasmor@lmco.com>
Date:   Sun Sep 20 21:58:46 2015 -0400

    Update IPS thread names to new name standard.

[33mcommit 19bc6c1f9f8ab7d8b969d724d081ff754f662ead[m
Author: Zachary Rasmor <zachary.r.rasmor@lmco.com>
Date:   Fri Sep 18 23:15:54 2015 -0400

    Update thread naming convention for all IDS modes.
    
    - Change 'Detect' to 'W'
    - Enforce 2 digit numbering in thread names with leading zero
    - Add 01 after W for single mode: W01

[33mcommit a6adb5dbbf9cf4ac634f9f85d551a4c777676813[m
Author: maxtors <moe.andreas@gmail.com>
Date:   Thu May 7 14:09:04 2015 +0200

    Changed naming of flowmanager/recycler.
    
    - Changed FlowManagerThread to FM-
    - Changed FlowRecyclerThread to FR-
    - Changed use of strcasecmp to strncasecmp. This was used in the
      killing and disabling of FM/FR Threads.

[33mcommit a17ac21077a9b3264020793e7a67518b339a3680[m
Author: maxtors <moe.andreas@gmail.com>
Date:   Thu Apr 16 22:22:54 2015 +0200

    Reworked how shortening should be performed.
    
    The shortening of the interfacenames is now dependent on the
    size of the destination buffer, so that this can be easily
    changed in the future. The process uses snprintf and strlcat.
    
    Also changed the buffer sizes in the util-runmodes to 12
    so that they can hold 11 chars + null terminator.

[33mcommit 88a6e7960799370b9e9f56a94a3be630043e3c3d[m
Author: maxtors <moe.andreas@gmail.com>
Date:   Wed Apr 15 16:38:58 2015 +0200

    Fixed string copy and cat functions and made shortening safer.
    
    Changed out strcpy, strncpy to strlcat and strlcpy. Also added
    checks to see if the shortening did work or if it would fail in
    advance. Fixed code in util-device and util-runmodes.

[33mcommit 10d1450e4995630834736bcb5ed192a463d87659[m
Author: maxtors <moe.andreas@gmail.com>
Date:   Wed Apr 15 15:21:24 2015 +0200

    Added shortening of listening interface in util-runmodes
    
    Added function LiveSafeDeviceName in util-device that shortens an
    NIC device name if the name is over a given length and turns
    it in to Ex: longi...eeth1

[33mcommit 63937cd9039f7b5205ba732209b850396d07ede8[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Apr 29 19:49:11 2016 +0200

    detect-msg: fix option parsing
    
    Code removing the space before the double quote at msg option start
    was not working correctly for option starting with a space.

[33mcommit 7f700a137cd54497c16d99a0c4418f1296a87aaa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 21 16:51:54 2016 +0200

    smtp: fix test

[33mcommit c4a9580fce91bafc5e2cfcf366dd50a3ec16eaaa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 21 13:17:33 2016 +0200

    detect file: improve multi file handling
    
    When multiple files were in a tx, the first one(s) closed/complete
    and a new open one as well, a match in the former could lead to not
    inspecting the latter.
    
    This patch adds a workaround for this case, by allowing the file
    inspection code to return a special code for 'match, but more files
    available in tx'.
    
    The stateful detection engine will then not make this match final for
    the tx. It relies on the file pruning to kick in to make sure the
    already complete files are removed from the tx before the next time
    the detection engine is called on the tx.

[33mcommit 8cd4405c213bc5f4344f2d5d37cf7a3dacbeeec5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 21 10:08:06 2016 +0200

    detect file: cleanups

[33mcommit ea0067add8006f125bb0fa185d89f9228dad5a5e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 20 17:47:31 2016 +0200

    debug: add various detect engine debug statements

[33mcommit 83e0529b2b7cf953c83a6fbf5c59279f02574caf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 20 18:42:01 2016 +0200

    http: flag destate about new files
    
    The stateful detection engine needs some assistance when inspecting
    transactions with multiple files. This patch flags the detect state
    (if any) about the availability of new files in http. For http it
    should only apply to multipart bodies although the flag is set for
    all files.

[33mcommit aa4ad9d25b042fc7f6cb9f0d704a3c7420fd6d32[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 20 17:27:41 2016 +0200

    smtp: flag detect state that new files are available
    
    The stateful detection engine needs some assistance when inspecting
    transactions with multiple files. This patch flags the detect state
    (if any) about the availability of new files in smtp.

[33mcommit 807fe4ac9fc49f9bbdfbab14aef77e70fe331627[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 22 08:53:19 2016 +0200

    detect state: fix issues with multiple files per tx
    
    Make sure multiple files in a single tx are inspected correctly. This
    requires resetting part of the stored state on new files.

[33mcommit 19d112ba077cae4d79beb5f4944ec78a0a69f8fd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 21 15:14:45 2016 +0200

    smtp/mime: allow unquoted name/filename fields
    
    Don't enforce that name/filename fields are quoted.
    
    Reported-By: Blair Steven

[33mcommit 5c514c904ffee373b8d872ee13ff3eda7d1fec9c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 21 14:37:43 2016 +0200

    smtp: fix file logging and matching
    
    When no rules with 'file content' keywords like filemd5 or filestore
    were used, and non of the file outputs would force 'output' like
    'force-md5' and 'force-magic', the file would not be tracked at all.
    
    This meant that logging wouldn't work and neither would filename and
    fileext inspection.
    
    This patch removes the tracking bypass from the SMTP code and leaves
    decisions to the file API.

[33mcommit 9d3fd828490a3f116947bb8f35ff745d1ebe8578[m
Author: maxtors <moe.andreas@gmail.com>
Date:   Sun Apr 24 16:19:39 2016 +0200

    Removed duplicate include statements.

[33mcommit 06d74b5775a92579372dd767c38584586b373e11[m
Author: maxtors <moe.andreas@gmail.com>
Date:   Sun Apr 24 11:18:50 2016 +0200

    Module specific error code for init ctx error.

[33mcommit 69863f7b1c34fadf6148066dbc099e17812cabee[m
Author: maxtors <moe.andreas@gmail.com>
Date:   Sun Apr 24 11:04:59 2016 +0200

    Corrected and unified debugmessages for init data errors in *ThreadInit.

[33mcommit 7f2f7cc48de7d842ce6b7dc3dae2a1d5c52aa3f9[m
Author: maxtors <moe.andreas@gmail.com>
Date:   Fri Apr 22 20:15:21 2016 +0200

    Added parsing and utilization of yaml defined payload buffer value.

[33mcommit c6bbd89251432af2c458a7a6f5114bcf54667f5d[m
Author: maxtors <moe.andreas@gmail.com>
Date:   Fri Apr 22 19:18:40 2016 +0200

    Added payload-buffer-size option to yaml configuration

[33mcommit 554080cced6f01f364e6d794acb6a7e8be582a1c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 11 18:10:00 2016 +0100

    lua: print lua script func/line/file in SCLog* funcs
    
    Instead of printing the func/line/file of the C code SCLog* wrappers,
    print them from inside the lua script. They are not always available.

[33mcommit 1c8775b340579de2c26398a8611071c6e7dbd0ff[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 15 07:47:55 2016 +0200

    QA: --afl-rules for faster rule fuzzing

[33mcommit c3efc4e0721e6548faed1174445c734d61ba643d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 15 12:26:40 2016 +0200

    pcap: small cleanups

[33mcommit 3f16ebe4762775e4d11c2d63d0153643016e4012[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 14 09:46:56 2016 +0200

    dns: don't read uninitialized memory in name parsing
    
    AFL+ASAN found that with certain input we used an uninitialized byte
    in the length calculation. Probably harmless as the length was still
    validated afterwards.

[33mcommit c4575d141946e5200d84047bfa8b78c7d05fa551[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 13 10:14:35 2016 +0200

    stream-tcp: improve test function cleanup

[33mcommit 3aea0bd4f38ff5ad6b220a2c4ee0b9e65a8b166e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 13 10:13:50 2016 +0200

    stream-tcp: introduce stream cleanup function

[33mcommit 93fa2919222cafc5436945f7bfcc6096882c8eee[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 13 09:46:18 2016 +0200

    stream-tcp: unify ssn clean up functions
    
    There were 2 separate function doing ssn cleanup. To prevent issues
    common with code duplication, unify them.

[33mcommit 9b08cdae7488303bc4893257ace5f0a4390aaf50[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 12 12:30:20 2016 +0200

    capture: only check for faster methods on -i
    
    Also, since we now default to AF_PACKET for -i if available, only check
    for PF_RING and NETMAP.

[33mcommit 053b96458f9a759b44d7e9559db466e2970de8ba[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 7 23:50:17 2015 +0100

    commandline: add -i arg check

[33mcommit f8852f4415c5b6c1485e1979bfb8a2e490277fdd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 8 10:02:31 2015 +0100

    commandline: use afpacket for -i if available

[33mcommit a3a7d9b2990fe80e76522eb25f3daf643e353d7a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 8 10:02:11 2015 +0100

    pcap: unify -i and --pcap parsing

[33mcommit b50111a5a77785801f52053de53675c68d22afca[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 7 19:28:49 2015 +0100

    commandline: move afpacket parsing into util func

[33mcommit 1fe09a38e0e73ecff5aab4f7509a08b4400b53d0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 7 19:03:48 2015 +0100

    commandline: move pcap parsing into util func

[33mcommit 7ac7f9cd55fa3d3562aea439c19c05e29eef617a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 7 19:07:40 2015 +0100

    instance: add progname as ptr to argv[0]

[33mcommit 65a3ff81ef2f50ac773394eb48dd8f896c16ef9b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 12 18:54:06 2016 +0200

    readme: initial readme for github

[33mcommit faad6bd335274a244771177c036dcb59fca83d48[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 13 09:08:59 2016 +0200

    configure: don't use AC_DISABLE_SHARED as it breaks OSX

[33mcommit 45d87d66c031307dc70c25734f4fc508143d50eb[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Apr 12 12:07:43 2016 +0200

    afl: add support for AFL PERSISTANT_MODE
    
    Add support for AFL PERSISTANT_MODE when Suricata is compiled with
    a supported compiler (only afl-clang-fast for now).
    
    This gives a ~10x performance boost when fuzzing.

[33mcommit 8111eb934fa8d874dae9b0cee2726b9d9b96ed35[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Sun Apr 10 13:41:02 2016 +0200

    QA: add --afl-der=<file>
    
    Expose SSL/TLS certificate decoding (DER) to commandline
    using --afl-der=<file>.

[33mcommit d16590639798ffed6a6b078aecc074c97ee1b694[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 29 18:18:20 2016 +0200

    QA: add --afl-decoder-ppp=<file>

[33mcommit bdaba1d8156a948934686f4f4aa25303a238b1f6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 25 14:25:22 2016 +0100

    QA: expose Mime decoding API to commandline using --afl-mime=<file>

[33mcommit 077ac81688c335724532ed97796cce0322f31253[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 11 12:00:22 2016 +0100

    QA: direct access from commandline to AppLayer API
    
    This patch introduces a new set of commandline options meant for
    assisting in fuzz testing the app layer implementations.
    
    Per protocol, 2 commandline options are added:
    
    --afl-http-request=<filename>
    --afl-http=<filename>
    
    In the former case, the contents of the file are passed directly to
    the HTTP parser as request data.
    
    In the latter case, the data is devided between request and responses.
    First 64 bytes are request, then next 64 are response, next 64 are
    request, etc, etc.

[33mcommit ca81c33e14219adbf90af3894e05f69bb85774c8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 8 16:32:47 2016 +0100

    afl: add --enable-afl configure option

[33mcommit 09242fb4a8a04c2ed9486cf973862d6a89269397[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 8 19:55:40 2015 +0100

    afl: optionally exit right after afl single runmode
    
    Exit right away if afl.exit_after_pcap is set to true. Safes time
    as fuzzing the shutdown code may not be as interesting.

[33mcommit d46183751180a87b7ab3461334db4044fad5864c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 8 10:42:03 2015 +0100

    afl: add --afl-parse-rules to return 0 on any rule
    
    When fuzzing, AFL will create lots of malformed rules. We don't want
    to error out on those. As we're fuzzing the parser any non-crash
    should return 0. Crashes (ASAN or not) will return a non-0 code.

[33mcommit e824a8be763135d70e134f94ac04d7c45b6e7917[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 5 14:48:05 2015 +0100

    afl: special 'single' runmode
    
    To avoid threading, this 'single' mode doesn't run in it's own thread
    but instead runs in the main thread.

[33mcommit a42251d459833c061358687cc16da34d53045feb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 5 14:29:14 2015 +0100

    afl: add define to disable mgt threads
    
    The inherent non-deterministic nature of the management threads
    creates variable test cases.

[33mcommit b2695600bab7abf86e652b18c7a6d6f22f1c0503[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 5 14:14:58 2015 +0100

    afl: add define to disable rand_r use
    
    The randomness affects AFL. It creates variable test cases, which
    we need to avoid.

[33mcommit 4c1c13d1100feb6dc44d0f72f62f9e7b793928b9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 12 08:21:13 2016 +0200

    detect reload: improve signal logic

[33mcommit c0294521dd3124bd0795bdb009f6eef1892017d1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 29 14:41:44 2015 +0200

    startup: move more into PostConfLoadedSetup

[33mcommit 0ab83288acf824b7295a15a09ec6e582665939c1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 29 14:00:40 2015 +0200

    startup: move RunUnittests to StartInternalRunMode

[33mcommit e67ae0f174f81bc85b49b9ea106c4a4b798e1925[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 29 12:49:19 2016 +0100

    detect keywords: use parse regex util func

[33mcommit 4a2e816bea7b58765742012a925cb96a77063a6b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 29 12:46:22 2016 +0100

    detect parser: add parse regex util function
    
    Add regex setup and free util functions. Keywords often use a regex
    to parse rule input. Introduce a common function to do this setup.
    
    Also create a list of registered regexes to free at engine shutdown.

[33mcommit 167d94efff23075db331bf9205f5c4366677dea0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 26 00:43:40 2016 +0100

    dns: improve handling of tx pick up on response

[33mcommit c2f0f82bb4aadf5eaf7bc72f4c990dd875d91731[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Sun Apr 10 14:57:19 2016 +0200

    util-decode-der: fix hang detected by AFL
    
    Fix hang that occurs when child->length is zero, resulting in an
    endless loop.

[33mcommit 18f88a6344e3d981da4966d59662d029b2713065[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Sat Apr 2 13:44:43 2016 +0200

    util-decode-der-get: code cleanup

[33mcommit a985b450e347b84ea7f53a4fbdd37c2da80a5d1c[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Sat Apr 2 12:09:55 2016 +0200

    util-decode-der: code cleanup

[33mcommit e117461d4bc02bc7e0e84850e9309629c1f3c07c[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Apr 1 19:27:37 2016 +0200

    app-layer-ssl: code cleanup

[33mcommit 550823455ed62a1d213c125f013af6ea3ad17631[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Apr 1 11:48:44 2016 +0200

    app-layer-tls-handshake: code cleanup

[33mcommit 434b09563abe5c159b3605415d65b54880431b36[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Apr 1 09:40:56 2016 +0200

    app-layer-tls-handshake: remove duplicate include

[33mcommit 365015c2d54f484b9547f60f4851c2a5a979dc24[m
Author: Alexander Gozman <a.gozman@securitycode.ru>
Date:   Thu Apr 7 10:31:25 2016 +0300

    Support sending rejects via libnet when running under non-root.
    
    Since version 1.1.6 libnet handles capabilities correctly.
    So changing libnet's version checking a little bit should do the trick.

[33mcommit e27ad81a43c9780f0756ffba4eb5c2ed97d0bfb0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 11 14:08:39 2016 +0200

    autotools: add AS_VERSION_COMPARE stub for CentOS 5

[33mcommit fdff9e97e466d9b442cecd826f0074f8adc6b861[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Apr 7 10:57:54 2016 -0600

    doxygen: define UNITTESTS to generate test framework docs

[33mcommit 52f6d214631199fcf5371f55e1dfb0fff3a6afe4[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Apr 7 10:57:45 2016 -0600

    flowbits: use some of the new test macros

[33mcommit da1dec6d65f1c9913ececb0e1c86a8c8260ed0cc[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Apr 7 10:57:27 2016 -0600

    counters: use some of the new macros in tests

[33mcommit d7d05b007cffd92003a50f5b3861010a6b30505f[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Apr 6 16:51:43 2016 -0600

    conf: use new testing macros
    
    Also don't bother with cleanup on failure.

[33mcommit 13cf2f829e7ed3acbd8555bd6c2d652ffaa1b770[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Apr 6 16:50:08 2016 -0600

    testing: new test macros, new testing documentation group.
    
    Unit testing support macros for failing on expressions,
    as well as passing tests on expressions.
    
    If fatal unittests are enabled BUG_ON will be triggered for
    an assertion providing the line number of the failure, otherwise
    the test will simply fail.
    
    Moved the fatal flag to a global var instead of a configuration
    parameter for ease of access from a macro.

[33mcommit 796dd5223bf17083a48c2a8a8a2944d1dc9b7033[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Apr 6 15:58:40 2016 -0600

    tests: no longer necessary to provide successful return code
    
    1 pass, 0 is fail.

[33mcommit 52983bf314dc7f84c6295141fa5ed6c5f0b9a88f[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Apr 6 15:35:13 2016 -0600

    tests: convert all test to return 0 on failure, 1 on success

[33mcommit 50b33ad5082e4947f8e5996c15b57958b2417b1b[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Mar 31 10:22:11 2016 +0200

    prscript: update logic of sync with master test
    
    Code now get master sha on github and check if it is in current
    branch with a git command. It also sync first that the current
    local branch is in sync with github corresponding branch.
    
    Signed-off-by: Eric Leblond <eric@regit.org>

[33mcommit 38f67d88ea996e6af00398deb8facb5e7c2b4a05[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 16 13:10:05 2015 +0100

    tcp: reduce TCP options storage in packets
    
    Until now, the TCP options would all be stored in the Packet structure.
    The commonly used ones (wscale, ts, sack, sackok and mss*) then had a
    pointer to the position in the option array. Overall this option array
    was large. About 360 bytes on 64bit systems. Since no part of the engine
    would every access this array other than through the common short cuts,
    this was actually just wasteful.
    
    This patch changes the approach. It stores just the common ones in the
    packet. The rest is gone. This shrinks the packet structure with almost
    300 bytes.
    
    * even though mss wasn't actually used

[33mcommit 7ef8558e79d1a2b2c9155599676d16a2db7f632b[m
Author: Torgeir Natvig <torgeir.natvig@gmail.com>
Date:   Wed Apr 6 16:08:39 2016 +0200

    lua_close() segfaults on null pointers

[33mcommit d085362e610f1a64e08132d40890c791757c28e5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 5 13:14:03 2016 +0200

    detect: fix error handling in mpm setup
    
    *** CID 1358124:  Null pointer dereferences  (REVERSE_INULL)
    /src/detect-engine-mpm.c: 940 in MpmStoreSetup()
    934                     PopulateMpmHelperAddPatternToPktCtx(ms->mpm_ctx,
    935                             cd, s, 0, (cd->flags & DETECT_CONTENT_FAST_PATTERN_CHOP));
    936                 }
    937             }
    938         }
    939
    >>>     CID 1358124:  Null pointer dereferences  (REVERSE_INULL)
    >>>     Null-checking "ms->mpm_ctx" suggests that it may be null, but it has already been dereferenced on all paths leading to the check.
    940         if (ms->mpm_ctx != NULL) {
    941             if (ms->mpm_ctx->pattern_cnt == 0) {
    942                 MpmFactoryReClaimMpmCtx(de_ctx, ms->mpm_ctx);
    943                 ms->mpm_ctx = NULL;
    944             } else {
    945                 if (ms->sgh_mpm_context == MPM_CTX_FACTORY_UNIQUE_CONTEXT) {

[33mcommit dc008206e346ea339af8a2e3c600eafe98ac187f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 5 13:05:08 2016 +0200

    detect: fix scan-build warning
    
    detect-engine-siggroup.c:700:38: warning: Call to 'malloc' has an allocation size of 0 bytes
        sgh->non_mpm_other_store_array = SCMalloc(non_mpm * sizeof(SignatureNonMpmStore));
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ./util-mem.h:177:14: note: expanded from macro 'SCMalloc'
        ptrmem = malloc((a)); \
                 ^~~~~~~~~~~
    1 warning generated.

[33mcommit 2ee3e726a9f4f5b68213a68dda82599d8523db22[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 5 12:59:54 2016 +0200

    detect: don't set unused variable
    
    detect.c:3801:13: warning: Value stored to 'tmplist2_tail' is never read
                tmplist2_tail = joingr;
                ^               ~~~~~~
    detect.c:3804:13: warning: Value stored to 'tmplist2_tail' is never read
                tmplist2_tail = joingr;
                ^               ~~~~~~
    2 warnings generated.

[33mcommit 9b6e292a28ac862684056f8dee912f0629590cbf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 25 13:11:04 2016 +0100

    mpm: remove unused max pattern len field

[33mcommit f1ee1258107945f6ab8316093e5e7241462f95b5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 25 12:58:55 2016 +0100

    detect-flowvar: shrink mem structure by 8 bytes

[33mcommit e2789a87c2a7d3a575fc197cae49a399085e30f7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 25 12:55:23 2016 +0100

    detect: shrink IPOnlyCIDRItem with 8 bytes

[33mcommit adc453eec6e61db7520bb3fe0dd8ad4a249486a6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 25 12:48:08 2016 +0100

    detect-port: improve comment about sgh pointer

[33mcommit ef6f347f84f556dace8acce4a8fcc39d2c263aba[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 25 12:32:49 2016 +0100

    detect-address: remove sgh pointer as it's unused

[33mcommit d5c6d08bc816321172992c17e83edb0575adf724[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 25 12:28:33 2016 +0100

    detect-port: remove debug mem counters

[33mcommit 9bd8197009ff36ffb7dbf8f6362f6f8570b0bd2b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 25 12:27:11 2016 +0100

    detect-address: remove debug mem counters

[33mcommit e0111fbb904524de93a03cb72b2cb4066887e66f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 25 12:00:52 2016 +0100

    detect grouping: remove debug mem counters

[33mcommit 5f676167a357a7cf679b6481d6c17c4c56dc44a9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 2 16:38:02 2016 +0100

    detect grouping: make json dump configurable
    
    Make the rule grouping dump to rule_group.json configurable.
    
    detect:
      profiling:
        grouping:
          dump-to-disk: false
          include-rules: false      # very verbose
          include-mpm-stats: false

[33mcommit d6ba01b1b73dfccc6ee009f5ce3d0880cbc2b6d1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 2 13:37:14 2016 +0100

    detect: make port whitelisting configurable
    
    Make the port grouping whitelisting configurable. A whitelisted port
    ends up in it's own port group.
    
    detect:
      grouping:
        tcp-whitelist: 80, 443
        udp-whitelist: 53, 5060
    
    No portranges are allowed at this point.

[33mcommit 5b1d75f0bd67175415ed355eb477392d1a0d166f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 25 17:27:56 2015 +0100

    detect: suppress output

[33mcommit 725d6c37395f21e62c93da34530a383500c07e67[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 23 19:03:47 2015 +0100

    yaml: convert detect-engine to just detect
    
    Instead of detect-engine which used a list for no good reason, use a
    simple map now.
    
    detect:
      profile: medium
      custom-values:
        toclient-groups: 3
        toserver-groups: 25
      sgh-mpm-context: auto
      inspection-recursion-limit: 3000
      # If set to yes, the loading of signatures will be made after the capture
      # is started. This will limit the downtime in IPS mode.
      #delayed-detect: yes

[33mcommit ac2c206359922a2296b5d019be0355ba23ae430b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 28 21:47:37 2015 +0100

    mpm: clean up builtin mpm setup, enable single/full

[33mcommit 1dd135d512bb536287d92895cdd6cf33e2ecc573[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 28 20:52:00 2015 +0100

    mpm: always cleanup factory

[33mcommit 6ef27c9f92fd68f7b0a389957e451a73e7274e9f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 28 17:02:40 2015 +0100

    mpm: allow app buffer shared/unique
    
    Allow setting of shared or unique setting per app buffer type:
    e.g. detect.mpm.http_uri.shared=true

[33mcommit 79a96b2b9096e5850f276d98ba621439d892e7ff[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 28 09:17:45 2015 +0100

    mpm: refactor 'single' setup handling

[33mcommit 157ca89dd7e25b88a25eb64143b8335663817d69[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 28 08:37:28 2015 +0100

    mpm: remove useless flag from factory

[33mcommit fdd05e8fb40887a02dc138cbc0aaa1dfdefd6003[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 28 08:32:29 2015 +0100

    mpm: remove unused app proto factory

[33mcommit 4e91f6b1e65a6a46fbb88dcc411508790a97a801[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 28 08:07:28 2015 +0100

    mpm: in factory register, consider name const

[33mcommit 2b84387ea4571775d1b3dd64b3170610ae13f072[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 27 21:49:00 2015 +0100

    detect: work around cocci limitation

[33mcommit 0311f01b970d7ca9d4e5786f6f3a3e3782429cb4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 26 17:26:49 2015 +0100

    rule grouping: speed up port based grouping
    
    Create a hash table of unique DetectPort objects before trying to
    create a unique list of these objects. This safes a lot of cycles
    in the creation of the list.

[33mcommit a2223bb066955c76848760bd76f3a29bd7994153[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 26 17:04:47 2015 +0100

    mpm: consify packet/stream search

[33mcommit 87f3adbe4c25a3047acf40670eba151af49cbd78[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 26 14:18:37 2015 +0100

    detect/mpm: unify packet/stream mpm_ctx pointers
    
    SGH's for tcp and udp are now always only per proto and per direction.
    This means we can simply reuse the packet and stream mpm pointers.
    
    The SGH's for the other protocols already used a directionless catch
    all mpm pointer.

[33mcommit 30755265ee4bbb424ce221e06dcb586ece0f8846[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 21 08:59:04 2015 +0200

    http_raw_header: improve mpm progress handling

[33mcommit af3bf3dc7a6580b6cdca273201eb82998715d94f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 21 08:35:24 2015 +0200

    detect: optimize sgh layout

[33mcommit de273d88ccaf30bcf32e86b392e72534ddc6189c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 21 08:32:00 2015 +0200

    detect: remove unused content minlen tracking

[33mcommit e43c4f3ea2b9d72a58df6e4c4ada9057bcf01101[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 21 08:19:21 2015 +0200

    mpm: optimize calls
    
    For all mpm wrapper functions, check minlen vs the input buffer to see
    if we can bypass the mpm search.
    
    Next to this, make all the function inline. Also constify the input and
    do other minor cleanups.

[33mcommit 58576605682c5f0863fb8e2150db498e17fbf5b3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 21 07:36:48 2015 +0200

    http_uri: mpm cleanup. Use mpm_ctx's minlen

[33mcommit 6bb2b001a33e542f840dfef0e1b0d01db86f0d15[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 20 17:49:32 2015 +0200

    mpm: cleanup: move mpm funcs into buffer specific files

[33mcommit e57e7d1b961e77f5d8cec28adfcbb24ebf8ec50c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 20 10:55:41 2015 +0200

    mpm: cleanup, remove unused structs and prototypes

[33mcommit eb19fc4c7bbcc00e781dd5fe2ed1f74f13bd9671[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 20 10:49:10 2015 +0200

    mpm: remove unused structure

[33mcommit caea596ce5682fadcb113a6a7c8ab4a2bc15a1b2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 19 17:39:57 2015 +0200

    profiling: output post-prefilter matches
    
    Dump a json record containing all sigs that need to be inspected after
    prefilter. Part of profiling. Only dump if threshold is met, which is
    currently set by:
    
     --set detect.profiling.inspect-logging-threshold=200
    
    A file called packet_inspected_rules.json is created in the default
    log dir.

[33mcommit 92c571b26d4518ad630117a06990d80f92dfb4f6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 1 17:42:40 2016 +0100

    detect: move sm_list to string funcs to parser code

[33mcommit 722e2dbf7cb916845fc50d5408000dcc6da9eabc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 17 00:21:00 2015 +0200

    profiling: initial rulegroup tracking
    
    Per rule group tracking of checks, use of lists, mpm matches,
    post filter counts.
    
    Logs SGH id so it can be compared with the rule_group.json output.
    
    Implemented both in a human readable text format and a JSON format.

[33mcommit e310a033be69d40026cb6ae9f605da78699d37c8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 27 13:34:55 2015 +0100

    detect: assign id to sgh

[33mcommit c880b79f45b0ddc269e5710a45549b23da748743[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 15 15:22:44 2015 +0200

    detect: shrink sgh
    
    Turn list of mpm_ctx pointers into a union so that we don't waste
    space. The sgh's for tcp and udp are in one direction only, so the
    ts and tc ones are now in the union.

[33mcommit c804102a9a2cf3b53bc45fb912cfa462dc52f5b3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 15 14:52:01 2015 +0200

    detect: move app_mpms array to init data

[33mcommit 9b3d4f7e2483f907698d6e16aca99a2f4fd5b9ce[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 15 10:31:05 2015 +0200

    mpm: unify & localize mpm pattern (id) handling
    
    So far, the patterns as passed to the mpm's would use global id's that
    were shared among all buffers, directions. This would lead to a fairly
    large pattern id space. As the mpm algo's use the pattern id's to
    prevent duplicate matching through a pattern id based bitarray,
    shrinking this space will optimize performance.
    
    This patch implements this. It sets a flag before adding the pattern
    to the mpm ctx, instructing the mpm to ignore the provided pid and
    handle pids management itself. This leads to a shrinking of the
    bitarray size.
    
    This is made possible by the previous work that removes the pid logic
    from the code.
    
    Next to this, this patch moves the pattern setup stage to common util
    functions. This avoids code duplication.
    
    Update ac, ac-bs and ac-ks to use this.

[33mcommit ba9d43cce56932ea98603084648614e6a4523064[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 1 13:11:44 2015 +0200

    mpm: improve negated mpm
    
    The idea is: if mpm is negated, it's both on mpm and nonmpm sid lists
    and we can kick it out in that case during the merge sort.
    
    It only works for patterns that are 'independent'. This means that the
    rule doesn't need to only match if the negated mpm pattern is limited
    to the first 10 bytes for example.
    
    Or more generally, an negated mpm pattern that has depth, offset,
    distance or within settings can't be handled this way. These patterns
    are not added to the mpm at all, but just to to non-mpm list. This
    makes sense as they will *always* need manual inspection.
    
    Similarly, a pattern that is 'chopped' always needs validation. This
    is because in this case we only inspect a part of the final pattern.

[33mcommit 9e71ef4c3bc878f018cdd8fadfab5e33ada17fb6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 13 14:56:01 2015 +0200

    detect: remove signature pattern id reference

[33mcommit 46734ec41be6eb7121c3e1a5b71e2ae245ce8640[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 13 10:39:54 2015 +0200

    mpm: remove unused pmq merge function

[33mcommit c1ad08d11e70f02b6f913c51ec59a6748ce177c5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 13 10:27:26 2015 +0200

    detect: remove stream pmq array

[33mcommit 4e8e5917153d8bf1b06c7a3f56457f540034a8d1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 13 08:49:23 2015 +0200

    detect mpm: mpm store cleanup
    
    Move all rule modification to the fast_pattern assigment.

[33mcommit c87fcb29ffb95feace6c1c8decc668d84c198ac7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 13 08:33:27 2015 +0200

    detect mpm: fast_pattern assignment cleanup

[33mcommit 7c94077892cea1b1153c8a814c126b13eb81c08c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 13 08:44:45 2015 +0200

    detect mpm: remove unused mpm flags

[33mcommit a7d126738a3f4c82b4b71c5787cae48cabc12bff[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 12 21:54:32 2015 +0200

    detect address: remove unused features

[33mcommit cbf80de6fe6de423344a40597aca1891b192fed2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 12 21:48:41 2015 +0200

    detect-port: cleanup

[33mcommit a96fa0fc2fca9763ad007fd692abd88b8d003315[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 12 21:33:44 2015 +0200

    detect: remove unused dport sgh hash

[33mcommit e6248b0dbe849274871a7291019ad337fba90e02[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 12 20:05:42 2015 +0200

    detect: clean up sgh's at detect engine free

[33mcommit 1f7e33a4b002167045e98d4878b45b73d6401194[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 12 18:39:57 2015 +0200

    detect: remove unused flag

[33mcommit e8c95980354bc1e0ce2dfdc039b2684095d626d5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 12 18:21:42 2015 +0200

    detect sgh: remove unused field

[33mcommit 2ab20d0b9bfa8af1688c886869938192e18f2f26[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 12 17:49:25 2015 +0200

    detect: free lookup structures

[33mcommit 4ba1ac55f063d488f6f3b0b513b0f93317c753f0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 30 09:59:05 2015 +0200

    detect: output sgh stats
    
    Output stats for the rule groups into a json format.

[33mcommit 810d2d3ec692053d860009271a9cb2d3827c7fc0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 9 10:12:11 2015 +0200

    detect: add list id to string funcs

[33mcommit fa885e1d85f7522283c77eb4f6c9921006eb1bc5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 12 10:15:16 2015 +0200

    mpm: remove pattern id logic

[33mcommit 69d38a3222415dc2c7fc2ea2686f4c1c9b0dd2d4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 12 10:41:57 2015 +0200

    mpm: ac-bs use internal pattern id tracking

[33mcommit 4edb03ab9d6ede0afb539687a36829913691f1b2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 12 10:39:16 2015 +0200

    mpm: ac use internal pattern id tracking

[33mcommit cd8283bb729c4437f6a532b80c0b62d75ee8b76e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 12 10:14:25 2015 +0200

    smtp: use rule_id mpm support instead of pattern id

[33mcommit b2fcb17859f02dcf6d69c4d2836d44b16a3c73dc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 10 17:10:13 2015 +0200

    proto detect: in mpm switch to rule id
    
    Use the rule id API instead of pattern id API.

[33mcommit a34be2300251b0e0bdc4baaf31751e30f3ba786e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 10 14:36:45 2015 +0200

    detect: simplify negated mpm handling

[33mcommit b84d6d402f7d73a892a819ba038b67ee2e5a946c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 1 15:33:42 2015 +0200

    detect grouping: multiple whitelist conditions
    
    Instead of the binary yes/no whitelisting used so far, use different
    values for different sorts of whitelist reasons. The port list will
    be sorted by whitelist value first, then by rule count.
    
    The goal is to whitelist groups that have weak sigs:
    
     - 1 byte pattern groups
    
     - SYN sigs
    
        Rules that check for SYN packets are mostly scan detection rules.
        They will be checked often as SYN packets are very common.
    
        e.g. alert tcp any any -> any 22 (flags:S,12; sid:123;)
    
        This patch adds whitelisting for SYN-sigs, so that the sigs end up
        in as unique groups as possible.
    
     - negated mpm sigs
    
        Currently negated mpm sigs are inspected often, so they are quite
        expensive. For this reason, try to whitelist them.
    
    These values are set during 'stage 1', rule preprocessing.

[33mcommit 3c184c19cd56be39974463b3d4f2e43ceee9a837[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 30 18:26:00 2015 +0200

    detect grouping: port based group whitelisting
    
    Whitelist some ports in grouping to make sure they get their own group.

[33mcommit 5772f526dcd235f80d3c9f65bb9fb5a7c1d8c0de[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 7 07:08:02 2015 +0200

    detect grouping: warn on and fix up bad sigs
    
    Only inspect directionless SYN scan sigs toserver. Issue a warning for
    those rules.

[33mcommit 2ce03fbabb3468c72cf7d4c27fa64f557c97d10c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 1 19:29:45 2015 +0200

    detect: split non-mpm list into syn/nosyn
    
    Since SYN inspecting rules are expensive, this patch splits the
    'non-mpm' list (i.e. the rules that are always considered) into
    a 'syn' and 'non-syn' list. The SYN list is only inspected if the
    packet has the SYN flag set, otherwise the non-syn list is used.
    
    The syn-list contains _all_ rules. The non-syn list contains all
    minus the rules requiring the SYN bit in a packet.

[33mcommit e48d745ed71d6a14bfca1b13d088c041a70c9174[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 7 06:48:44 2015 +0200

    mpm: constify search func args

[33mcommit 26517b8b61d69ac21ef2d48ee8301639be005ec2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 6 15:04:33 2015 +0200

    detect: mpm store frees mpm_ctx' it owns

[33mcommit 102a82fc7bc47b7cf3c4c20bfbbd5da8363f987e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 5 19:15:58 2015 +0200

    detect: use mpm store for app layer mpms
    
    Rework app-layer mpm setup and registration to make this possible.

[33mcommit fac2cc056077c44ed826219bf51004b253dc1e56[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 5 10:25:03 2015 +0200

    detect: mpm deduplication
    
    Create hash for mpm's that we can reuse. Have packet/stream mpms
    use this.

[33mcommit f0ba00e51dfdb0f3fd0df78cd065183e8f94ed22[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 3 17:02:30 2015 +0200

    detect: remove old unused code

[33mcommit 10b049304f36f55536b28ffb30c818f6ae795ce1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 2 20:29:55 2015 +0200

    detect: set new defaults for grouping

[33mcommit 2ee9bf2aef46856d74d4b1a3dcc1b0ff7f5fd23c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 2 20:23:50 2015 +0200

    detect: rename groupings vars

[33mcommit 1f70ccfc23cc64baee66f48d9540bc1c84da5abf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 2 20:16:25 2015 +0200

    detect: remove unused grouping settings

[33mcommit ae80ed596408ebe0cae58d73537d295ecd9de3b7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 30 12:41:42 2015 +0200

    detect: make port grouping use config limits

[33mcommit df529b13ce7d851ac5ba08c81afeb3e94c3fa212[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 30 11:56:42 2015 +0200

    detect: change port grouping
    
    Update port grouping logic. Previously it would create one consistent
    list w/o overlap. It largely still does this, except for the 'catch
    all' port group at the end of the list. This port group contains all
    the sigs that didn't fit into the other groups.

[33mcommit a3928123029217099dd04dc1ea2d4fbf3ad6632e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 29 18:42:16 2015 +0200

    detect: sort/group port sigs

[33mcommit e570b10abe72b00c1768f3385cc52ae522a17de1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 29 17:40:59 2015 +0200

    detect: display unique sgh count

[33mcommit eda9552e9531471b0ad5890698ee2d28ad424a6e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 29 16:46:21 2015 +0200

    detect: group proto sghs

[33mcommit d82df4eb8b50064d5e6e5da6b1fe684eb190b08d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 28 16:03:48 2015 +0200

    detect-mpm: make sgh setup proto aware
    
    Allow multi-proto, multi-direction sgh's.

[33mcommit 4223ce9aba0b8303e7b11092ce7e490ac026610a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 29 13:20:20 2015 +0200

    detect: remove obsolete grouping code

[33mcommit 9ae4cb9e0234ca7f64c73a30b97598a00ca41a11[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 28 23:20:03 2015 +0200

    detect: debug output

[33mcommit fd5a06017d84dfe8d8042cd6e19bd315a959cb7c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 7 23:14:26 2014 +0100

    detect: per port and proto rule grouping
    
    Replace tree based approach for rule grouping with a per port (tcp/udp)
    and per protocol approach.
    
    Grouping now looks like:
    
                   +----+
                   |icmp+--->
                   +----+
                   |gre +--->
                   +----+
                   |esp +--->
                   +----+
              other|... |
            +----->-----+
            |      |N   +--->
            |      +----+
            |
            | tcp  +----+   +----+
            +----->+ 80 +-->+ 139+-->
            |      +----+   +----+
            |
            | udp  +----+   +----+
        +---+----->+ 53 +-->+ 135+-->
        |          +----+   +----+
        |toserver
    +--->
        |toclient
        |
        +--->
    
    So the first 'split' in the rules is the direction: toserver or toclient.
    Rules that don't have a direction, are in both branches.
    
    Then the split is between tcp/udp and the other protocols. For tcp and
    udp port lists are used. For the other protocols, grouping is simply per
    protocol.
    
    The ports used are the destination ports for toserver sigs and source
    ports for toclient sigs.

[33mcommit 27e63a1e1134812b414e189caa90e53d8266ed86[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 28 10:10:58 2015 +0200

    detect: track direction and ipproto of sgh
    
    Each SGH has a unique ipproto and direction.

[33mcommit e75a93b1256e604d2528baff76b9c236057dba64[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 28 10:00:36 2015 +0200

    detect: pass ipproto to rule grouping funcs

[33mcommit c71c991669d52c28bd2619489d39462206980559[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 28 16:02:15 2015 +0200

    detect: delay sgh cleanup

[33mcommit bb662a65f8630723cd4fef361b7d7313fed74e77[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 28 10:17:34 2015 +0200

    detect: delay sgh mpm setup

[33mcommit 18dd54dfa77eddecc8a94da0a1e30041abfccddf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 7 23:43:45 2014 +0100

    Start rule inspect with mask check

[33mcommit bfe49b60f7a0fdad8ded686b0291d04fde997d8a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Sep 27 10:33:48 2015 +0200

    rule analyzer: add no/both direction warning

[33mcommit b7d81fc3b024412ba0975e9bb691ea6f74924319[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 7 15:38:58 2015 +0200

    detect: SYN flags
    
    Add funcs to see if a rule needs a SYN flag in the packet.

[33mcommit f720dfd21e72596e0dde9ad6dbe575e4949ad66d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 9 11:18:36 2015 +0200

    detect: validate http_method pattern
    
    Leading and trailing spaces and tabs are invalid as these are not part
    of the buffer as returned by libhtp.

[33mcommit 66b3dba676c50bfdc9f83a5d4ae94e6c6dc907e9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 5 19:00:24 2015 +0200

    detect: remove dead code

[33mcommit b3dcdb10bedb8044ac8e1cad65498df9abcd422b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 5 12:40:57 2015 +0200

    detect mpm: remove dead code

[33mcommit 14d9ce7b2ec6379187d88d651c0d5231d75a5755[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 3 17:57:27 2015 +0200

    detect/mpm: remove unused max_id param from API

[33mcommit 0d3f671b55d918d3e9c44222162c081df5c666b8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 28 11:15:09 2015 +0200

    detect: constify mpm/detect funcs

[33mcommit 4f8e1f59a6c3d76f49863ddaafb97e04bfecc092[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 20 10:19:40 2015 +0200

    mpm: remove obsolete mpm algos
    
    Remove: ac-gfbs, wumanber, b2g, b3g.

[33mcommit 262abbb49f579073ff5288dca104a5c3dab486f2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 12 12:49:06 2015 +0200

    mpm: fix ac-ks compilation on cygwin

[33mcommit 58e533858bff2146ac07a2491314ef36e899961f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Sep 20 10:17:17 2015 +0200

    detect mpm: ac-tile/ac-ks default to single
    
    Use sgh-mpm-context single is it is set to 'auto' when ac-ks is used.

[33mcommit 0987fd16dce9a05d7f2b0fc61df4ad687368dc60[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 12 08:47:37 2015 +0200

    ac-ks: 32bit fixes

[33mcommit 9c2e374a3d5115bc392164fd567b3afd9b5502d0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 9 16:21:17 2015 +0200

    ac-ks: fix mem leaks

[33mcommit 887ddf1ed89f6d22080bce7b9a99c2c7deeb554e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 19 22:59:03 2015 +0200

    mpm: introduce ac-ks
    
    Introduce 'ac-ks' or the Kenneth Steele AC implementation. It's
    actually 'ac-tile' written by Ken for the Tilera platform. This
    patch adds support for it on other architectures as well.
    
    Enable ac-tile for other archs as 'ac-ks'.
    
    Fix a bunch of OOB reads in the loops that triggered ASAN.

[33mcommit 3781b00dbcc4d8694886e82fef07b24e0e9567b7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 4 18:04:32 2016 +0200

    Open Suricata 3.1 development branch

[33mcommit 71a3c4caac22b475c09ee2f082f11d443dc02cc0[m[33m ([m[1;33mtag: suricata-3.0.1[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 4 12:15:12 2016 +0200

    Update Changelog for 3.0.1

[33mcommit f9ac42b36f0dab7cf9325202425f20ef4ca0ebfe[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu Mar 31 16:15:26 2016 +0200

    util-decode-der: fix NULL dereference bug
    
    Make sure that the length is not longer than the size of the buffer
    provided.

[33mcommit c0dd91159103e0be75cb53b2562acad992171ded[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu Mar 31 14:28:24 2016 +0200

    util-decode-der: fix heap-buffer-overflow

[33mcommit d07c495ed1a3f7d427ae0db604771ce935a1ccaf[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu Mar 31 14:21:21 2016 +0200

    app-layer-tls-handshake: fix heap-buffer overflow
    
    Fix heap-buffer overflow that occurs when we are given repeatedly
    certificates with the length of zero.

[33mcommit ba035e601e6f5d56a9ce2c5bbb4bb2c2c80d2eca[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 31 10:07:01 2016 +0200

    hyperscan: fix minor coverity warning 1358023
    
    *** CID 1358023:  Null pointer dereferences  (REVERSE_INULL)
    /src/util-mpm-hs.c: 860 in SCHSDestroyThreadCtx()
    854         if (thr_ctx->scratch != NULL) {
    855             hs_free_scratch(thr_ctx->scratch);
    856             mpm_thread_ctx->memory_cnt--;
    857             mpm_thread_ctx->memory_size -= thr_ctx->scratch_size;
    858         }
    859
    >>>     CID 1358023:  Null pointer dereferences  (REVERSE_INULL)
    >>>     Null-checking "mpm_thread_ctx->ctx" suggests that it may be null, but it has already been dereferenced on all paths leading to the check.
    860         if (mpm_thread_ctx->ctx != NULL) {
    861             SCFree(mpm_thread_ctx->ctx);
    862             mpm_thread_ctx->ctx = NULL;
    863             mpm_thread_ctx->memory_cnt--;
    864             mpm_thread_ctx->memory_size -= sizeof(SCHSThreadCtx);
    865         }

[33mcommit 2ccf028eac9ed88fe16a6f7d473ae97c4062732a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 31 10:04:44 2016 +0200

    hyperscan: fix minor coverity warning 1358024
    
    *** CID 1358024:  Null pointer dereferences  (REVERSE_INULL)
    /src/util-mpm-hs.c: 1043 in SCHSPrintInfo()
    1037         printf("  SCHSPattern    %" PRIuMAX "\n", (uintmax_t)sizeof(SCHSPattern));
    1038         printf("Unique Patterns: %" PRIu32 "\n", mpm_ctx->pattern_cnt);
    1039         printf("Smallest:        %" PRIu32 "\n", mpm_ctx->minlen);
    1040         printf("Largest:         %" PRIu32 "\n", mpm_ctx->maxlen);
    1041         printf("\n");
    1042
    >>>     CID 1358024:  Null pointer dereferences  (REVERSE_INULL)
    >>>     Null-checking "ctx" suggests that it may be null, but it has already been dereferenced on all paths leading to the check.
    1043         if (ctx) {
    1044             char *db_info = NULL;
    1045             if (hs_database_info(pd->hs_db, &db_info) == HS_SUCCESS) {
    1046                 printf("HS Database Info: %s\n", db_info);
    1047                 SCFree(db_info);
    1048             }

[33mcommit 070a35fd3b2aad730f70331ddbd338440af675d6[m
Author: browner87 <browner87@users.noreply.github.com>
Date:   Thu Mar 24 12:55:34 2016 -0400

    source-pcap-file: fix stats not being reset
    
    Fix for redmine #1737. Clears stats between each scanned PCAP instead of just
    on load in Unix socket mode.

[33mcommit d05883af9bae17e5fe915e1491ebe486c030dbc2[m
Author: browner87 <browner87@users.noreply.github.com>
Date:   Wed Mar 23 11:05:05 2016 -0400

    Fix for redmine bug 1737
    
    PCAP stats not reset between files in Unix socket mode. Added a memset to the Global Init function to clear these stats.

[33mcommit 06dcaec335cf6b07d4759ca086915997b9b56c81[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Mar 30 08:46:30 2016 -0600

    byte-extract: for string, default to base "dec" if not provided
    
    For Snort compatibility, as Snort defaults to "dec" if not provided.
    
    Fixed issue 1697:
    https://redmine.openinfosecfoundation.org/issues/1697

[33mcommit ffb5498228a731ef1775408dfc0a5c1676777a66[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 30 19:53:04 2016 +0200

    detect: fix potential deadlock during reload
    
    If interrupted during the BreakLoop stage during reload, a deadlock
    could happen.

[33mcommit f836256e20de1ede8d8fbb85e331278b8eb78eb1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 30 09:39:46 2016 +0200

    detect: fix small mem leak on duplicate sigs
    
    Direct leak of 80 byte(s) in 5 object(s) allocated from:
        #0 0x4c673b in __interceptor_malloc (/home/victor/dev/suricata/src/suricata+0x4c673b)
        #1 0xb7a425 in DetectEngineSignatureIsDuplicate /home/victor/dev/suricata/src/detect-parse.c:1715:10
        #2 0xb79390 in DetectEngineAppendSig /home/victor/dev/suricata/src/detect-parse.c:1836:19
        #3 0x86fe56 in DetectLoadSigFile /home/victor/dev/suricata/src/detect.c:357:15
        #4 0x815fee in ProcessSigFiles /home/victor/dev/suricata/src/detect.c:419:13
        #5 0x8139a8 in SigLoadSignatures /home/victor/dev/suricata/src/detect.c:499:15
        #6 0xfe435d in LoadSignatures /home/victor/dev/suricata/src/suricata.c:1979:9
        #7 0xfcd87e in main /home/victor/dev/suricata/src/suricata.c:2345:17
        #8 0x7fb66bf7cec4 in __libc_start_main /build/eglibc-3GlaMS/eglibc-2.19/csu/libc-start.c:287

[33mcommit 31ed7042b55ddd85c3790346de8ab73055b0c47d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 29 11:44:00 2016 +0200

    hyperscan: add DrMemory suppressions

[33mcommit 13b87f5affa886d008caae4c54bce910f1c3c03d[m
Author: Justin Viiret <justin.viiret@intel.com>
Date:   Tue Mar 15 12:40:24 2016 +1100

    mpm: add Hyperscan integration
    
    This adds an MPM implementation that uses the Hyperscan regex engine
    library from Intel, accessible as the "hs" mpm-algo.

[33mcommit c37195c95fa57d8a9ce1b3bcf9c5e185b37fd5a3[m
Author: Justin Viiret <justin.viiret@intel.com>
Date:   Tue Mar 15 12:38:23 2016 +1100

    mpm: pass offset, depth args to add functions
    
    MpmAddPatternCI and MpmAddPatternCS had arguments for offset and depth,
    but these were not being passed in by the caller.

[33mcommit c8e01a3d62c116ee5cad4d4a86c300d55d3781e9[m
Author: Justin Viiret <justin.viiret@intel.com>
Date:   Tue Mar 29 09:32:26 2016 +1100

    util-hash-lookup3: Add hashlittle_safe() variant
    
    By default, hashlittle() will read off the end of the key, up to the
    next four-byte boundary, although the data beyond the end of the key
    doesn't affect the hash. This read causes uninitialized read warnings
    from Valgrind and Address Sanitizer.
    
    Here we add hashlittle_safe(), which avoids reading off the end of the
    buffer (using the code inside the VALGRIND-guarded block in the original
    hashlittle() implementation).

[33mcommit 30410e6900449a7f6d5798d5ac7bb86b7bd2b58d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 25 16:16:30 2014 +0200

    capture: warn -i user if faster options are available
    
    If af-packet, netmap or pfring are available, users should use those
    for best performance.

[33mcommit cae3ce9e1c141f47a31221c40a7f552af9fd6613[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 26 19:56:00 2016 +0100

    netmap: implement capture inject packet flag

[33mcommit 11099cfa42db2d122cee47e0131ffa558048ec14[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 23 17:05:14 2016 +0100

    detect reload: generic packet injection for capture
    
    Capture methods that are non blocking will still not generate packets
    that go through the system if there is no traffic. Some maintenance
    tasks, like rule reloads rely on packets to complete.
    
    This patch introduces a new thread flag, THV_CAPTURE_INJECT_PKT, that
    instructs the capture thread to create a fake packet.
    
    The capture implementations can call the TmThreadsCaptureInjectPacket
    utility function either with the packet they already got from the pool
    or without a packet. In this case the util func will get it's own
    packet.
    
    Implementations for pcap, AF_PACKET and PF_RING.

[33mcommit eafd212661afbb57e07d237e7207ced2a44b5eee[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 23 16:16:41 2016 +0100

    detect reload: call 'breakloop' on capture method
    
    Split wait loop into three steps:
    - first insert pseudo packets
    - 2nd nudge all capture threads to break out of their loop
    - third, wait for the detection thread contexts to be used
    
    Interupt capture more than once if needed
    
    Move packet injection into util func

[33mcommit dd98bc353ea81c1626c4ab827a962140c42b7061[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 24 11:51:49 2016 +0100

    signals: cleanup signal handling
    
    Simplify handling of USR2 signal. The SCLogInfo usage could lead to
    dead locks as the SCLog API can do many complicated things including
    memory allocations, syslog calls, libjansson message construction.
    
    If an existing malloc call was interupted, it could lead to the
    following dead lock:
    
     0  __lll_lock_wait_private () at ../nptl/sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:97
     1  0x0000003140c7d2df in _L_lock_10176 () from /lib64/libc.so.6
     2  0x0000003140c7ab83 in __libc_malloc (bytes=211543457408) at malloc.c:3655
     3  0x0000003140c80ec2 in __strdup (s=0x259ca40 "[%i] %t - (%f:%l) <%d> (%n) -- ") at strdup.c:43
     4  0x000000000059dd4a in SCLogMessageGetBuffer (tval=0x7fff52b47360, color=1, type=SC_LOG_OP_TYPE_REGULAR, buffer=0x7fff52b47370 "", buffer_size=2048,
        log_format=0x259ca40 "[%i] %t - (%f:%l) <%d> (%n) -- ", log_level=SC_LOG_INFO, file=0x63dd00 "suricata.c", line=287, function=0x640f50 "SignalHandlerSigusr2StartingUp", error_code=SC_OK,
        message=0x7fff52b47bb0 "Live rule reload only possible after engine completely started.") at util-debug.c:307
     5  0x000000000059e940 in SCLogMessage (log_level=SC_LOG_INFO, file=0x63dd00 "suricata.c", line=287, function=0x640f50 "SignalHandlerSigusr2StartingUp", error_code=SC_OK,
        message=0x7fff52b47bb0 "Live rule reload only possible after engine completely started.") at util-debug.c:549
     6  0x000000000057e374 in SignalHandlerSigusr2StartingUp (sig=12) at suricata.c:287
     7  <signal handler called>
     8  _int_malloc (av=0x3140f8fe80, bytes=<value optimized out>) at malloc.c:4751
     9  0x0000003140c7ab1c in __libc_malloc (bytes=296) at malloc.c:3657
     10 0x0000000000504d55 in FlowAlloc () at flow-util.c:60
     11 0x00000000004fd909 in FlowInitConfig (quiet=0 '\000') at flow.c:454
     12 0x0000000000584c8e in main (argc=6, argv=0x7fff52b4a3b8) at suricata.c:2300
    
    This patch simply sets a variable and lets the main loop act on that.

[33mcommit f78e990915803893c83dadb75b83d89cc12701e4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 24 10:21:11 2016 +0100

    signals: handle INT/TERM signals in the main loop

[33mcommit dc7d0c736b9f34dc008490578e63e125f0e8ece8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 24 09:31:19 2016 +0100

    pfring: use likely for fast path

[33mcommit 9c5ee76455361feaac3fc7207ef40175c485f7d7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 26 12:05:50 2016 +0100

    tcp: fix unlikely NULL-ptr dereference
    
    If a TCP packet could not get a flow (flow engine out of flows/memory)
    and there were *only* TCP inspecting rules with the direction
    explicitly set to 'to_server', a NULL pointer deref could happen.
    
    PacketPatternSearchWithStreamCtx would fall through to the 'to_client'
    case which was not initialized.

[33mcommit f005310ddfcaf742c2ba8bb294c06014ac857abf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 28 12:12:37 2015 +0200

    detect: add corner case mpm test

[33mcommit a866d5d915bf472df535ed592218178ef5db0bc2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 17 10:34:17 2015 +0100

    tx logging: fix potential missed logging issue
    
    Wrong scope of proto_logged variable could potentially lead to
    incrementing logged tx id w/o actually being logged.
    
    Reported-By: Jason Ish

[33mcommit 400fa5b9e5fab1bad4e78ab72e9ba8cda6ccd7e8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 26 11:28:30 2016 +0100

    stats-log: fix layout issue due to decoder stats

[33mcommit 1e0b5eb529bda9a2d978a1242016e222f5e6f5c3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 26 10:59:52 2016 +0100

    autofp: print packet scheduler info only on autofp
    
    To avoid confusion about what runmode is active, only print autofp
    related scheduler information if autofp is the actual runmode.

[33mcommit 2e9279dd42840f5e2ba4e6ca969871f9f7b18ede[m
Author: cdwakelin <cwakelin@emergingthreats.net>
Date:   Wed Mar 23 17:13:55 2016 +0000

    autofp: add "ippair" scheduler
    
    Add "ippair" autofp scheduler to split traffic based on source and
    destination IP only (not ports).
    
    - This is useful when using the "xbits" feature to track events
      that occur between the same hosts but not necessarily the same
      flow (such as exploit kit landings/expoits/payloads)
    - The disadvantage is that traffic may be balanced very unevenly
      between threads if some host pairs are much more frequently seen
      than others, so it may be only practicable for sandbox or pcap
      analysis
    - not tested for IPv6
    
    See https://redmine.openinfosecfoundation.org/issues/1661

[33mcommit 0ac27e28abc735faded0ac71c0c48f9407cc3a5d[m[33m ([m[1;33mtag: suricata-3.0.1RC1[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 23 11:42:05 2016 +0100

    changelog: update for 3.0.1RC1

[33mcommit 8edbc20a07e2fe5692889db1f7fbcd7cc87127b9[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Mar 10 14:32:06 2016 -0600

    flow: record the flow hash for use as the output flow id
    
    Provides a consistent hash for a flow, as well as a better
    distribution than using a memory address.

[33mcommit 1b1cde68379a3e777ddd8632d748f302b479e6a7[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Mar 21 15:27:55 2016 +0100

    output-json-email: fix memleak
    
    This patch fixes some error handling in code generating JSON output for
    email event.
    
    This fixes:
    
    Indirect leak of 128 byte(s) in 1 object(s) allocated from:
        #0 0x50c142 in malloc (/home/eric/git/oisf/src/.libs/lt-suricata+0x50c142)
        #1 0x7ff92394771c  (/usr/lib/x86_64-linux-gnu/libjansson.so.4+0x371c)
        #2 0x1bd3309 in JsonEmailLogJson /home/eric/git/oisf/src/output-json-email-common.c:376:19
        #3 0x1bfe774 in JsonSmtpLogger /home/eric/git/oisf/src/output-json-smtp.c:103:9
        #4 0x1c378ff in OutputTxLog /home/eric/git/oisf/src/output-tx.c:165:17
        #5 0x1f94ef3 in TmThreadsSlotVarRun /home/eric/git/oisf/src/tm-threads.c:134:17
        #6 0x1d33478 in TmThreadsSlotProcessPkt /home/eric/git/oisf/src/./tm-threads.h:150:9
        #7 0x1d32dd4 in PcapFileCallbackLoop /home/eric/git/oisf/src/source-pcap-file.c:184:9
        #8 0x7ff924199013  (/usr/lib/x86_64-linux-gnu/libpcap.so.0.8+0x1f013)
    
    Indirect leak of 96 byte(s) in 3 object(s) allocated from:
        #0 0x50c142 in malloc (/home/eric/git/oisf/src/.libs/lt-suricata+0x50c142)
        #1 0x7ff92394bc7b  (/usr/lib/x86_64-linux-gnu/libjansson.so.4+0x7c7b)
    
    Indirect leak of 82 byte(s) in 3 object(s) allocated from:
        #0 0x50c142 in malloc (/home/eric/git/oisf/src/.libs/lt-suricata+0x50c142)
        #1 0x7ff923949924  (/usr/lib/x86_64-linux-gnu/libjansson.so.4+0x5924)
    
    Indirect leak of 72 byte(s) in 1 object(s) allocated from:
        #0 0x50c142 in malloc (/home/eric/git/oisf/src/.libs/lt-suricata+0x50c142)
        #1 0x7ff92394bcda in json_object (/usr/lib/x86_64-linux-gnu/libjansson.so.4+0x7cda)
        #2 0x1bd3309 in JsonEmailLogJson /home/eric/git/oisf/src/output-json-email-common.c:376:19
        #3 0x1bfe774 in JsonSmtpLogger /home/eric/git/oisf/src/output-json-smtp.c:103:9
        #4 0x1c378ff in OutputTxLog /home/eric/git/oisf/src/output-tx.c:165:17
        #5 0x1f94ef3 in TmThreadsSlotVarRun /home/eric/git/oisf/src/tm-threads.c:134:17
        #6 0x1d33478 in TmThreadsSlotProcessPkt /home/eric/git/oisf/src/./tm-threads.h:150:9
        #7 0x1d32dd4 in PcapFileCallbackLoop /home/eric/git/oisf/src/source-pcap-file.c:184:9
        #8 0x7ff924199013  (/usr/lib/x86_64-linux-gnu/libpcap.so.0.8+0x1f013)
    
    Indirect leak of 64 byte(s) in 1 object(s) allocated from:
        #0 0x50c142 in malloc (/home/eric/git/oisf/src/.libs/lt-suricata+0x50c142)
        #1 0x7ff92394bf5a in json_array (/usr/lib/x86_64-linux-gnu/libjansson.so.4+0x7f5a)
        #2 0x1bd04b5 in JsonEmailLogJsonData /home/eric/git/oisf/src/output-json-email-common.c:296:27
        #3 0x1bd3309 in JsonEmailLogJson /home/eric/git/oisf/src/output-json-email-common.c:376:19
        #4 0x1bfe774 in JsonSmtpLogger /home/eric/git/oisf/src/output-json-smtp.c:103:9
        #5 0x1c378ff in OutputTxLog /home/eric/git/oisf/src/output-tx.c:165:17
        #6 0x1f94ef3 in TmThreadsSlotVarRun /home/eric/git/oisf/src/tm-threads.c:134:17
        #7 0x1d33478 in TmThreadsSlotProcessPkt /home/eric/git/oisf/src/./tm-threads.h:150:9
        #8 0x1d32dd4 in PcapFileCallbackLoop /home/eric/git/oisf/src/source-pcap-file.c:184:9
        #9 0x7ff924199013  (/usr/lib/x86_64-linux-gnu/libpcap.so.0.8+0x1f013)
    
    Indirect leak of 48 byte(s) in 1 object(s) allocated from:
        #0 0x50c142 in malloc (/home/eric/git/oisf/src/.libs/lt-suricata+0x50c142)
        #1 0x7ff92394bf2a in json_array (/usr/lib/x86_64-linux-gnu/libjansson.so.4+0x7f2a)
        #2 0x1bd04b5 in JsonEmailLogJsonData /home/eric/git/oisf/src/output-json-email-common.c:296:27
        #3 0x1bd3309 in JsonEmailLogJson /home/eric/git/oisf/src/output-json-email-common.c:376:19
        #4 0x1bfe774 in JsonSmtpLogger /home/eric/git/oisf/src/output-json-smtp.c:103:9
        #5 0x1c378ff in OutputTxLog /home/eric/git/oisf/src/output-tx.c:165:17
        #6 0x1f94ef3 in TmThreadsSlotVarRun /home/eric/git/oisf/src/tm-threads.c:134:17
        #7 0x1d33478 in TmThreadsSlotProcessPkt /home/eric/git/oisf/src/./tm-threads.h:150:9
        #8 0x1d32dd4 in PcapFileCallbackLoop /home/eric/git/oisf/src/source-pcap-file.c:184:9
        #9 0x7ff924199013  (/usr/lib/x86_64-linux-gnu/libpcap.so.0.8+0x1f013)

[33mcommit a05cdbdf2810ded5116622ffb8dc49fa53780a42[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Mar 18 09:53:21 2016 +0100

    output-json-email: fix memleak
    
    This possibly fix:
    
    ndirect leak of 64 byte(s) in 1 object(s) allocated from:
        #0 0x4c264b in malloc (/home/victor/qa/buildbot/donkey/z600fuzz/Private/src/.libs/lt-suricata+0x4c264b)
        #1 0x7fb09c1e8aaa in json_array (/usr/lib/x86_64-linux-gnu/libjansson.so.4+0x6aaa)
        #2 0xd67553 in JsonEmailLogJsonData /home/victor/qa/buildbot/donkey/z600fuzz/Private/src/output-json-email-common.c:290:27
        #3 0xd6a272 in JsonEmailLogJson /home/victor/qa/buildbot/donkey/z600fuzz/Private/src/output-json-email-common.c:370:19
        #4 0xd956b9 in JsonSmtpLogger /home/victor/qa/buildbot/donkey/z600fuzz/Private/src/output-json-smtp.c:103:9
        #5 0xdcedac in OutputTxLog /home/victor/qa/buildbot/donkey/z600fuzz/Private/src/output-tx.c:165:17
        #6 0xff6669 in TmThreadsSlotVarRun /home/victor/qa/buildbot/donkey/z600fuzz/Private/src/tm-threads.c:132:17
        #7 0xffecc1 in TmThreadsSlotVar /home/victor/qa/buildbot/donkey/z600fuzz/Private/src/tm-threads.c:474:17
        #8 0x7fb09bfcc181 in start_thread /build/eglibc-3GlaMS/eglibc-2.19/nptl/pthread_create.c:312

[33mcommit 9dec6d933fb36a939288873e68dd09d2d72e19d7[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Mar 18 09:28:58 2016 +0100

    output-json-email: fix memleak in error path
    
    In JsonEmailLogJsonData function, an invalid state was leading to
    early exit without a proper freeing of resources.
    
    This should fix:
    
    Indirect leak of 72 byte(s) in 1 object(s) allocated from:
        #0 0x4c264b in malloc (/home/victor/qa/buildbot/donkey/z600fuzz/Private/src/.libs/lt-suricata+0x4c264b)
        #1 0x7fb09c1e886a in json_object (/usr/lib/x86_64-linux-gnu/libjansson.so.4+0x686a)
        #2 0xd6a272 in JsonEmailLogJson /home/victor/qa/buildbot/donkey/z600fuzz/Private/src/output-json-email-common.c:370:19
        #3 0xd956b9 in JsonSmtpLogger /home/victor/qa/buildbot/donkey/z600fuzz/Private/src/output-json-smtp.c:103:9
        #4 0xdcedac in OutputTxLog /home/victor/qa/buildbot/donkey/z600fuzz/Private/src/output-tx.c:165:17
        #5 0xff6669 in TmThreadsSlotVarRun /home/victor/qa/buildbot/donkey/z600fuzz/Private/src/tm-threads.c:132:17
        #6 0xffecc1 in TmThreadsSlotVar /home/victor/qa/buildbot/donkey/z600fuzz/Private/src/tm-threads.c:474:17
        #7 0x7fb09bfcc181 in start_thread /build/eglibc-3GlaMS/eglibc-2.19/nptl/pthread_create.c:312

[33mcommit 92ad63abb78fc51b88d2c511f6c85a975509b8f9[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Mar 18 09:23:31 2016 +0100

    output-json-email: fix error code
    
    Returning early if first function call fail could avoid some issue.

[33mcommit b5972eeea282bf033fead106a6c69db459487348[m
Author: JonZeolla <Zeolla@gmail.com>
Date:   Wed Mar 16 09:28:02 2016 -0400

    Fix typos in an error message
    
    Fix two minor typos in a SC_ERR_INVALID_ARGUMENT error message.

[33mcommit e4443fac53969f810a1713a0cd7dc73e71eaaf23[m
Author: gureedo <gureedo@intersvyaz.net>
Date:   Mon Mar 21 15:14:34 2016 +0500

    netmap: fix issue 1717
    Use packet pool only without packet allocation.
    Wait for N packets available in packet pool before netmap ring fetching.

[33mcommit 02d4e729c4aba5b215fbaa64f709c2a101a1ba09[m
Author: gureedo <gureedo@intersvyaz.net>
Date:   Mon Mar 21 14:41:42 2016 +0500

    netmap: fix log typo

[33mcommit f891aadefc910354362144870d3f10387274e967[m
Author: gureedo <gureedo@intersvyaz.net>
Date:   Mon Mar 21 14:38:53 2016 +0500

    netmap: remove workers zero copy mode restriction between interfaces
    Rationale: https://github.com/luigirizzo/netmap/issues/126

[33mcommit eb39487f48fd2daa16a8e131351aaebd42768eef[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Thu Mar 17 11:56:52 2016 +0100

    app-layer-ssl: fix out of bounds memory read
    
    Added several checks to avoid out of bounds memory read caused
    by malformed traffic.

[33mcommit ef4c71705281f38f7972b3a980bfb03d1d04d662[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 16 12:37:25 2016 +0100

    ip parsing: fix cppcheck negative shift warning
    
    [src/util-ip.c:104]: (error) Shifting a negative value is undefined behaviour
    [src/util-radix-tree.c:1160]: (error) Shifting a negative value is undefined behaviour
    [src/util-radix-tree.c:1357]: (error) Shifting a negative value is undefined behaviour
    [src/util-radix-tree.c:1380]: (error) Shifting a negative value is undefined behaviour
    [src/util-radix-tree.c:1438]: (error) Shifting a negative value is undefined behaviour

[33mcommit a70ff19911b2be650c1b115eae7681480851f2e9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 16 12:20:17 2016 +0100

    stats: fix unix socket crash
    
    Reset counters_global_id at ctx destruction. In the unix socket
    runmode the lack of this reset would cause the id's to increase with
    each pcap, leading to an ever larger stats array.

[33mcommit 3c3fe4b47d1f9bc23113d8b8c2ea98c5096e4e8f[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Jan 26 23:22:27 2016 -0600

    detect: denote the max detection list; fix issue 1674.
    
    Denotes the max detection list so that rule validation can
    allow post-detection lists to come after base64_data, but
    disallow detection lists to come after it.

[33mcommit 9afaf14ba4137f535aa6414982fdf488f0f3cce8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 9 20:44:26 2016 +0100

    smtp: use detection file tracking
    
    As SMTP file_data detection uses the file API, the file's inspect
    tracker should be considered when pruning files.
    
    This patch sets the FILE_USE_DETECT flag on files tracked by smtp.
    
    It also adds logic to move inspected tracker ahead if detection
    doesn't do it, like when no rules are matching or detection engine
    is disabled.

[33mcommit 77358a4113e4fab82464a257e95484f8dcb25d21[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 9 20:43:54 2016 +0100

    file: optionally use detect tracking in pruning
    
    When the file API is used to do content inspection (currently only
    smtp does this), the detection should be considered while pruning
    the file chunks.
    
    This patch introduces a new flag for the file API: FILE_USE_DETECT
    
    When it is used, 'FilePrune' will not remove chunks that are (partly)
    beyond the File::content_inspected tracker.
    
    When using this flag, it's important to realize that when the detect
    engine is disabled or rules are not matching, content_inspected
    might not get updated.

[33mcommit 5aee386fa99c643602d311a986a9c09ca98cb0ed[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 9 17:24:51 2016 +0100

    smtp: add file_data debug code

[33mcommit c19412243a7f1c9cf3d07de0999c026bba313c69[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 10 09:56:15 2016 +0100

    file logging: fix bad end of file check
    
    File storage could end file storing when the logger was invoked
    while no new data chunks were available.

[33mcommit 4526aed2b1029fe3f909ea4ca12045e4cf209e08[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 15 10:13:48 2015 +0100

    smtp: fix config parsing and config defaults

[33mcommit 32bf68aef83aa3df393877860c249dde2b9f37fc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 14 18:34:38 2015 +0100

    smtp: consider file state in file_data inspection limits

[33mcommit 4783d5107f1058f1473169824f80530596c5f089[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 15 18:01:06 2016 +0100

    pfring: strip prio from vlan id

[33mcommit 01a8cc4ec9466ff4d35c75f17f5ef5d0f4193b7c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 15 18:00:54 2016 +0100

    afpacket: strip prio from vlan id

[33mcommit 8394b38941492b7264e26c14b8fa435c859d2497[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 7 16:55:09 2016 +0100

    cppcheck: work around snprintf warning
    
    Cppcheck 1.72 gives a warning on the following code pattern:
    
        char blah[32] = "";
        snprintf(blah, sizeof(blah), "something");
    
    The warning is:
    
        (error) Buffer is accessed out of bounds.
    
    While this appears to be a FP, in most cases the initialization to ""
    was unnecessary as the snprintf statement immediately follows the
    variable declaration.

[33mcommit 33fd710367f492f80fc5f8a532a9f3afc7ab63bd[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Mar 15 08:08:07 2016 +0100

    rules: add rules for TLS SNI app layer events

[33mcommit 7602f650b1ba3a7e043d80e7ac8dd1df5469b5ea[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Mar 11 12:55:38 2016 +0100

    app-layer-ssl: fix memleak
    
    Avoid that the SNI extension code is executed twice sometimes, causing
    memory leaks.

[33mcommit f17ef5e46b5fbcebf0027604a5b8f5fb8e5f2219[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 11 09:49:57 2016 +0100

    daemon: suppress coverity resource leak warning (CID 400725)

[33mcommit ed93e9394d4ded1c34d19dc6beb2e1f5ef644a47[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 11 09:46:38 2016 +0100

    coverity: suppress CID 1038112

[33mcommit 444c4b546ea68d9a6adb25332ccdf757c89d9a60[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 11 09:39:20 2016 +0100

    htp: optimize multipart parsing
    
    Store boundary in a single stack buffer instead of 2 heap allocated
    buffers.

[33mcommit 665cafbe3bb07683700bad68ba7f2c85a47da1c4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 11 09:29:20 2016 +0100

    htp: fix boundry error handling (CID 1153934)

[33mcommit bfc4be230c150ab3a1e1c8df2fdb4605a95a372b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 11 09:25:23 2016 +0100

    htp: fix dead code warning (CID 1153933)

[33mcommit b4912f3bf984740b2288b080c785ae4d1b4bccb9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 11 09:23:07 2016 +0100

    unified2: fix unused value warning (CID 1247404)

[33mcommit a46c4da33886021c7847ce445634ab8f1b1be8ef[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 11 07:14:39 2016 +0100

    lua: fix unlikely null-deref during setup (CID 1351209)

[33mcommit c858bfea4a2e2cdd3d8d38b3223056d73afaf249[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 11 07:07:07 2016 +0100

    base64_decode: fix potential keyword parsing issue (CID 1340064)

[33mcommit 2a7f06843814d3216e4f623c58e80ef4d19638c6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 11 07:01:06 2016 +0100

    ioctl: fix NULL check after dereference (CID 1204326)

[33mcommit dff9f65ce738094d1881053e1a41ddcfb9b032c7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 11 06:56:35 2016 +0100

    lua: fix minor coverity issues
    
    Remove checks that can never be false. CID 1232076, 1312012

[33mcommit 339f066533e94ca4be3a1c03cee476a377ac9ed0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 11 06:54:03 2016 +0100

    afpacket: suppress harmless Coverity warning (1192960)

[33mcommit e91b9bf22b5768f4919bde1606fdc93ab75951fd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 12 10:32:54 2016 +0100

    Fix compilation on systems with Musl

[33mcommit c91546022dc9a2161180ec6efcc62c108eb4f9d4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 9 17:02:06 2016 +0100

    smtp: clean up thread local memory

[33mcommit 12d7c86efca06986b75c61865dd861115a05d571[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 22 10:09:49 2015 +0100

    stream-tcp: improve function doc

[33mcommit 81878c1998759741baf511ca97149c5612369ffb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 7 15:56:01 2015 +0200

    Add global MAX macro.

[33mcommit 44a7c12ad0afb6a6187090e485ed1268d49619a3[m
Author: Maurizio Abba <mabba@lastline.com>
Date:   Thu Mar 10 13:58:21 2016 +0000

    decode-events: counters for decode events errors
    
    We want to add counters in order to track the number of times we hit a
    decode event. A decode event is related to an error in the protocol
    decoding over a certain packet.
    
    This patch fist modifies the decode-event list, reordering it in order
    to separate single packet events from stream-related events and adding
    the prefix "decoder" to decode events.
    The counters are created during the decode setup and the relative event
    counter is increased every time a packet with the flag PKT_IS_INVALID is
    finalized in the decode phase

[33mcommit b7bf299e3bc285e751fa3c396292d35cd37c0cc1[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Mar 9 14:29:19 2016 +0100

    af-packet: don't check GRO LRO on non ethernet
    
    This way we avoid an error message when sniffing on a non Ethernet
    device.

[33mcommit 11eb1d7c1d2b77d0706d7fd1632d9deeb7937a04[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Mar 9 14:10:26 2016 +0100

    af-packet: handle raw link
    
    If no link layer header is reported then it is a raw header.

[33mcommit 994bc15c2a42230cc4493f6a9df33db13764c32b[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Mar 9 16:57:29 2016 +0100

    af-packet: disable most code when not built in
    
    When af-packet is not build we can avoid to build a large amount
    of code.

[33mcommit e4059fb541202964a54d56a38f261591e9d79a7f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 9 13:21:45 2016 +0100

    stream: fix stream.inline default
    
    If stream.inline setting was missing it would default to IDS.
    
    This patch changes the default to 'auto', meaning that in IPS mode
    the stream engine also uses IPS mode and in IDS mode it's still in
    IDS mode.
    
    Bug #1570

[33mcommit bda9869af7d5db3f05eabc0716fd672a9cb2aa7c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 3 13:06:19 2015 +0100

    dns: turn debug BUG_ON's into events

[33mcommit c0b16fa2bb624291274a8f05cc2b56cc2d44df9e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 8 20:29:09 2016 +0100

    detect: allow for more than 64k mpm rules

[33mcommit 8f4eff5f5030ae921d3e68cd6b6a40ee7bd52215[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 8 16:15:45 2016 +0100

    defrag: fix bad packet error handling
    
    When defrag creates a new reassembled IP packet, it then passes this
    packet to the IP decoder. If this decoder returns an error the packet
    is returned back to the packet pool with a call to TmqhOutputPacketpool
    
    This lead to the first problem. The returned packet had it's p->root
    pointer set, and it's PKT_TUNNEL flag set. This could cause problems
    in TmqhOutputPacketpool, as this may reference the packet referenced
    in p->root.
    
    The second and more glaring problem is that the packet that was
    returned to the packetpool, was still returned by the Defrag function
    and processed further. It would then at the end of it's processing
    be returned to the packet pool, which at this point already had a
    reference to this packet.
    
    This patch fixes both issues by unsetting the tunnel references and
    returning NULL from Defrag in this case.

[33mcommit 4e90b54666956785fdb05fe3fd43138f63d50cfa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 8 15:21:03 2016 +0100

    packet pool: make sure packet next ptr is always set

[33mcommit 3ac1468c1bf8d9c062e63fcc5e71d15f6ed8e5eb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 8 15:13:03 2016 +0100

    packet pool: turn bad check into BUG_ON

[33mcommit c8399e8c51916d307dd7815999672617f2e4d7be[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Mon Mar 7 21:33:14 2016 +0100

    configure: bypass libpcre 8.35 check
    
    When --with-libpcre-libraries is used we skip the libpcre 8.35 check
    since pkg-config might still point to the 8.35 version installed
    although newer version was passed with --with-libpcre-libraries.

[33mcommit f001c10ac4239bef5492fead14bcb4f830458028[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Mar 7 09:16:41 2016 +0100

    util-radix-tree: fix memleak
    
    Logic used when adding a new prefix to a node was not correct
    as we were allocating a prefix that could be at the end unused.
    This patch is updating the code to have a complete creation to
    be done if and only if we are needing the complete object. In
    the other cases, it was enough to use the function input values.
    
    This fixes:
    
    104 (48 direct, 56 indirect) bytes in 2 blocks are definitely lost in loss record 184 of 327
       at 0x4C29C0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
       by 0x9C2DAD: SCRadixCreatePrefix (util-radix-tree.c:144)
       by 0x9AFA5B: SCRadixAddKey (util-radix-tree.c:522)
       by 0x9B1A4D: SCRadixAddKeyIPV4Netblock (util-radix-tree.c:897)
       by 0x67C824: IPOnlyPrepare (detect-engine-iponly.c:1197)
       by 0x55172B: SigAddressPrepareStage2 (detect.c:3534)
       by 0x5486F4: SigGroupBuild (detect.c:4671)
       by 0x547C87: SigLoadSignatures (detect.c:538)
       by 0x8FB5D0: LoadSignatures (suricata.c:1976)
       by 0x8F3B32: main (suricata.c:2342)

[33mcommit 9c7e18dc89922e0e669529673efa9df75e8e1af7[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Mar 6 21:40:26 2016 +0100

    detect-ssl-state: fix memleak

[33mcommit fe81bdc213a95a5e0f2253f01938350c1dd64352[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Mar 6 21:40:18 2016 +0100

    detect-ssl-version: simplify code and fix memlea

[33mcommit 50ea76a88b2ebcdcfeb6aa5a2a37975a99140fbd[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Mar 6 21:07:46 2016 +0100

    detect-tls: fix memleaks

[33mcommit a53aef9c57a4f7855805bc41e8dd32d1b50ad32a[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Mar 4 19:52:08 2016 +0100

    tm-threads: unify thread names handling
    
    TmThreadCreate copy string provided as name for threads to
    avoid any issue is a non allocated string is used.
    
    This patch also introduce TmThreadSetGroupName function. This
    function is used to be sure we have an allocation when
    assigning the thread group name. This way we can free allocated
    memory at exit.
    
    Both code changes have required some fixes in different parts of
    the code to be in sync with the new API.
    
    Good point about these changes is that it fixes an inconsistency
    were some names were not allocated and some were.

[33mcommit d3677506333e47323093fadc7c24621ae98699a8[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Mar 4 20:52:45 2016 +0100

    defrag: free defrag tree at exit
    
    This fixes:
    
    72 bytes in 3 blocks are definitely lost in loss record 153 of 316
       at 0x4C29C0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
       by 0x9AF041: SCRadixCreateRadixTree (util-radix-tree.c:430)
       by 0x50FF5D: DefragPolicyLoadFromConfig (defrag-config.c:138)
       by 0x5129F5: DefragInit (defrag.c:962)
       by 0x87ECFD: UnixSocketPcapFilesCheck (runmode-unix-socket.c:386)
       by 0x90FEC0: UnixCommandBackgroundTasks (unix-manager.c:430)
       by 0x913C6D: UnixManager (unix-manager.c:980)
       by 0x9072F3: TmThreadsManagement (tm-threads.c:602)
       by 0x68DE283: start_thread (pthread_create.c:333)
       by 0x80A6A4C: clone (in /lib/x86_64-linux-gnu/libc-2.21.so)

[33mcommit 55a8f3ce1dca0b2074d65d520e5a6b087e7403d3[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Mar 4 19:36:43 2016 +0100

    output-stats: fix memleak
    
    This fixes:
    
    16 bytes in 2 blocks are definitely lost in loss record 69 of 319
       at 0x4C29C0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
       by 0x85955D: OutputStatsLogThreadInit (output-stats.c:118)
       by 0x4CAE13: StatsMgmtThread (counters.c:352)
       by 0x68DE283: start_thread (pthread_create.c:333)
       by 0x80A6A4C: clone (in /lib/x86_64-linux-gnu/libc-2.21.so)

[33mcommit c2e2174942d562bcf86777576b821381c3ef3bc7[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Mar 4 19:33:25 2016 +0100

    tmqh-flow: fix memleak in TmqhFlowCtx cleaning
    
    This fixes:
    
    96 bytes in 4 blocks are definitely lost in loss record 178 of 320
       at 0x4C29C0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
       by 0x8FF88C: TmqhOutputFlowSetupCtx (tmqh-flow.c:163)
       by 0x908D5F: TmThreadCreate (tm-threads.c:1097)
       by 0x909A62: TmThreadCreatePacketHandler (tm-threads.c:1156)
       by 0x8790CF: RunModeFilePcapAutoFp (runmode-pcap-file.c:188)
       by 0x8837CB: RunModeDispatch (runmodes.c:372)
       by 0x87F2A5: UnixSocketPcapFilesCheck (runmode-unix-socket.c:393)
       by 0x910460: UnixCommandBackgroundTasks (unix-manager.c:430)
       by 0x91420D: UnixManager (unix-manager.c:980)
       by 0x907853: TmThreadsManagement (tm-threads.c:602)
       by 0x68DE283: start_thread (pthread_create.c:333)
       by 0x80A6A4C: clone (in /lib/x86_64-linux-gnu/libc-2.21.so)

[33mcommit 41e540f2f19df61c480d8bd30e761a8cff2c242e[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Mar 4 19:22:46 2016 +0100

    tm-threads: fix memleak
    
    Fix cleaning of threads where mutex and condition where not freed.
    
    This fixes:
    
    352 (192 direct, 160 indirect) bytes in 4 blocks are definitely lost in loss record 301 of 327
       at 0x4C29C0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
       by 0x909404: TmThreadInitMC (tm-threads.c:1764)
       by 0x908DE7: TmThreadCreate (tm-threads.c:1120)
       by 0x90A326: TmThreadCreateMgmtThread (tm-threads.c:1183)
       by 0x4CA0AD: StatsSpawnThreads (counters.c:856)
       by 0x87F254: UnixSocketPcapFilesCheck (runmode-unix-socket.c:396)
       by 0x910330: UnixCommandBackgroundTasks (unix-manager.c:430)
       by 0x9140DD: UnixManager (unix-manager.c:980)
       by 0x9077F3: TmThreadsManagement (tm-threads.c:600)
       by 0x68DE283: start_thread (pthread_create.c:333)
       by 0x80A6A4C: clone (in /lib/x86_64-linux-gnu/libc-2.21.so)

[33mcommit de6a37f17bf6be9628564486c1625a7aa55c22ca[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Mar 4 19:13:43 2016 +0100

    tm-queue: unify queue name handling
    
    Queue name was sometimes allocated and sometimes not. This
    patch updates the behavior of creation function so it is
    always allocated. This way we can free it at exit and fix
    memory leak.
    
    This fixes:
    
    900 bytes in 110 blocks are definitely lost in loss record 322 of 329
       at 0x4C29C0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
       by 0x803E0A9: strdup (in /lib/x86_64-linux-gnu/libc-2.21.so)
       by 0x90090E: StoreQueueId (tmqh-flow.c:112)
       by 0x8FFEA8: TmqhOutputFlowSetupCtx (tmqh-flow.c:180)
       by 0x908C7F: TmThreadCreate (tm-threads.c:1095)
       by 0x909982: TmThreadCreatePacketHandler (tm-threads.c:1154)
       by 0x87906F: RunModeFilePcapAutoFp (runmode-pcap-file.c:188)
       by 0x88376B: RunModeDispatch (runmodes.c:372)
       by 0x87F245: UnixSocketPcapFilesCheck (runmode-unix-socket.c:393)
       by 0x9102B0: UnixCommandBackgroundTasks (unix-manager.c:430)
       by 0x91405D: UnixManager (unix-manager.c:980)
       by 0x907773: TmThreadsManagement (tm-threads.c:600)
    
    tm-queue: fix logic WIP

[33mcommit f34fe85cfedc68e5c5c06a0d699d99b1e9616197[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Mar 4 18:36:00 2016 +0100

    unix-manager: fix memleak at exit
    
    Buffer allocated for UnixClient was not correctly freed.

[33mcommit f1f2f0d4782103b8aaaed656d5185a5d77a0e161[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Mar 4 18:25:43 2016 +0100

    util-host-info: fix memleaks
    
    This fixes pcre related memory leak in SCKernelVersionIsAtLeast
    function.

[33mcommit 606ac17c5786c98953e8bf1f60d9c3546cd5b6cc[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Mar 4 18:04:31 2016 +0100

    util: get rid of json_array_append
    
    This function is causing a memleak because it is necessary to clean
    up after usage.
    
    This fixes at least:
    
    37 (32 direct, 5 indirect) bytes in 1 blocks are definitely lost in loss record 104 of 394
       at 0x4C29C0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
       by 0x66D0C7B: ??? (in /usr/lib/x86_64-linux-gnu/libjansson.so.4.7.0)
       by 0x943584: LiveDeviceIfaceList (util-device.c:264)
       by 0x910889: UnixCommandExecute (unix-manager.c:486)
       by 0x910D7E: UnixCommandRun (unix-manager.c:545)
       by 0x911193: UnixMain (unix-manager.c:593)
       by 0x913CC7: UnixManager (unix-manager.c:961)
       by 0x907753: TmThreadsManagement (tm-threads.c:600)
       by 0x68DE283: start_thread (pthread_create.c:333)
       by 0x80A6A4C: clone (in /lib/x86_64-linux-gnu/libc-2.21.so)

[33mcommit cc942b4fb8bc9feaf8e7772674028147ebd17ea2[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Mar 4 18:03:54 2016 +0100

    runmodes: fix memleak
    
    active_runmode value was leaking in unix socket mode.

[33mcommit b1f907a58f764931b39818d8c72c7d41970552fd[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Mar 4 17:59:45 2016 +0100

    unix-manager: fix memleak
    
    This fixes:
    
    2,595 (1,824 direct, 771 indirect) bytes in 57 blocks are definitely lost in loss record 328 of 332
       at 0x4C29C0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
       by 0x66D0C7B: ??? (in /usr/lib/x86_64-linux-gnu/libjansson.so.4.7.0)
       by 0x911A27: UnixManagerListCommand (unix-manager.c:766)
       by 0x9108A9: UnixCommandExecute (unix-manager.c:486)
       by 0x910D9E: UnixCommandRun (unix-manager.c:545)
       by 0x9111B3: UnixMain (unix-manager.c:593)
       by 0x913D27: UnixManager (unix-manager.c:961)
       by 0x907773: TmThreadsManagement (tm-threads.c:600)
       by 0x68DE283: start_thread (pthread_create.c:333)
       by 0x80A6A4C: clone (in /lib/x86_64-linux-gnu/libc-2.21.so)

[33mcommit 2c755b5fc7b2d0148344db2c6d09eb67f537cb9b[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Mar 4 13:50:26 2016 +0100

    output-tx: fix memleak
    
    This fixes:
    
    Direct leak of 31752 byte(s) in 3969 object(s) allocated from:
        #0 0x4c396b in malloc (/opt/suricata-asan/bin/suricata+0x4c396b)
        #1 0xe385b9 in OutputTxLogThreadInit /home/pmanev/sandnet-qa/stage/oisf/src/output-tx.c:193:34
        #2 0x106c255 in TmThreadsSlotPktAcqLoop /home/pmanev/sandnet-qa/stage/oisf/src/tm-threads.c:295:17
        #3 0x7fbc9fcb3181 in start_thread /build/eglibc-3GlaMS/eglibc-2.19/nptl/pthread_create.c:312

[33mcommit 2866f87c6d4569b474ec0eb2a6d2a728782f3f4d[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Mar 4 13:47:50 2016 +0100

    output-filedata: fix memleak
    
    This fixes:
    
    Direct leak of 31792 byte(s) in 3974 object(s) allocated from:
        #0 0x4c396b in malloc (/opt/suricata-asan/bin/suricata+0x4c396b)
        #1 0xd86ce2 in OutputFiledataLogThreadInit /home/pmanev/sandnet-qa/stage/oisf/src/output-filedata.c:308:34
        #2 0x106c255 in TmThreadsSlotPktAcqLoop /home/pmanev/sandnet-qa/stage/oisf/src/tm-threads.c:295:17
        #3 0x7fbc9fcb3181 in start_thread /build/eglibc-3GlaMS/eglibc-2.19/nptl/pthread_create.c:312

[33mcommit d0ebe04c8b376b1c6ff537023a480a4ea2619ef6[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Mar 4 13:43:07 2016 +0100

    output-packet: fix memleak
    
    This fixes:
    
    Direct leak of 31832 byte(s) in 3979 object(s) allocated from:
        #0 0x4c396b in malloc (/opt/suricata-asan/bin/suricata+0x4c396b)
        #1 0xe22129 in OutputPacketLogThreadInit /home/pmanev/sandnet-qa/stage/oisf/src/output-packet.c:123:34
        #2 0x106c255 in TmThreadsSlotPktAcqLoop /home/pmanev/sandnet-qa/stage/oisf/src/tm-threads.c:295:17
        #3 0x7fbc9fcb3181 in start_thread /build/eglibc-3GlaMS/eglibc-2.19/nptl/pthread_create.c:312

[33mcommit 24e4edd118c697adb6a0839cfecd18868379dfb9[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Mar 4 13:38:54 2016 +0100

    output-file: fix memleak
    
    This fixes:
    
    Direct leak of 31856 byte(s) in 3982 object(s) allocated from:
        #0 0x4c396b in malloc (/opt/suricata-asan/bin/suricata+0x4c396b)
        #1 0xd7ff39 in OutputFileLogThreadInit /home/pmanev/sandnet-qa/stage/oisf/src/output-file.c:182:34
        #2 0x106c255 in TmThreadsSlotPktAcqLoop /home/pmanev/sandnet-qa/stage/oisf/src/tm-threads.c:295:17
        #3 0x7fbc9fcb3181 in start_thread /build/eglibc-3GlaMS/eglibc-2.19/nptl/pthread_create.c:312

[33mcommit c49145a79aab1cf010a1e1766d6329555881a231[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Mar 4 13:33:16 2016 +0100

    log-filestore: suppress unused code
    
    Code was unused and was leaking memory.
    
    This fixes:
    
    Direct leak of 614240 byte(s) in 3839 object(s) allocated from:
        #0 0x4c396b in malloc (/opt/suricata-asan/bin/suricata+0x4c396b)
        #1 0x11bc12e in LogFileNewCtx /home/pmanev/sandnet-qa/stage/oisf/src/util-logopenfile.c:474:27
        #2 0xcf7ef2 in LogFilestoreLogInitCtx /home/pmanev/sandnet-qa/stage/oisf/src/log-filestore.c:430:31
        #3 0xec3275 in RunModeInitializeOutputs /home/pmanev/sandnet-qa/stage/oisf/src/runmodes.c:763:26
        #4 0xeae17f in UnixSocketPcapFilesCheck /home/pmanev/sandnet-qa/stage/oisf/src/runmode-unix-socket.c:391:9
        #5 0x109bc37 in UnixCommandBackgroundTasks /home/pmanev/sandnet-qa/stage/oisf/src/unix-manager.c:430:20
        #6 0x10a9be2 in UnixManager /home/pmanev/sandnet-qa/stage/oisf/src/unix-manager.c:977:9
        #7 0x1075643 in TmThreadsManagement /home/pmanev/sandnet-qa/stage/oisf/src/tm-threads.c:600:9
        #8 0x7fbc9fcb3181 in start_thread /build/eglibc-3GlaMS/eglibc-2.19/nptl/pthread_create.c:312

[33mcommit ab3aed7d251f5abec3b11bbf8af61f3815e33409[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Mar 3 10:35:19 2016 +0100

    decode: update icmpv6 message handling
    
    This patch adds two new events relative to icmpv6. One for packets
    using unassigned icmpv6 type. The second one for packets using
    private experimentation type.
    
    Icmpv6 type table taken from http://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml#icmpv6-parameters-2

[33mcommit 27b02402e70700c46ec6272b70ae6962fb42d867[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 20 00:33:58 2016 +0100

    gre: support transparent ethernet bridge decoding

[33mcommit 219762b7d9e8fbe0ca4b8e339140ffef603996cc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 3 11:44:42 2016 +0100

    pfring: small cleanup

[33mcommit 57e0bd39e91f4edb72fb7be78d5c40682a188475[m
Author: cardigliano <cardigliano@ntop.org>
Date:   Tue Oct 20 18:24:25 2015 +0200

    pkt acq: introduce break loop API
    
    This patch adds a new callback PktAcqBreakLoop() in TmModule to let
    packet acquisition modules define "break-loop" functions to terminate
    the capture loop. This is useful in case of blocking functions that
    need special actions to take place in order to stop the execution.
    
    Implement this for PF_RING

[33mcommit 5d34ac071d049d5b467fe472d7ddf1be6bd6bf9f[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Fri Mar 4 22:29:02 2016 +0100

    rule-parsing: remove unnecessary code
    
    Those lines were included former to prevent possible null pointer
    dereference but that won't happen anymore with the rest of the rework
    done in the code. The code even results in a control flow issue reported
    by coverity scan, so just remove it.

[33mcommit 69785f186c227c44a958d3684500b5da5e1a6749[m
Author: Alexander Gozman <a.gozman@securitycode.ru>
Date:   Fri Mar 4 16:18:46 2016 +0300

    BUG #1689: fix stack overflow when parsing variables
    
    Suricata crashed when variable (either address or port)
    referred to itself or if one created a looped chain of
    variables. For instance:
    
    HOME_NET:     "!$EXTERNAL_NET"
    EXTERNAL_NET: "!$HOME_NET"
    
    Or:
    
    Var1: "$Var2"
    Var2: "$Var3"
    Var3: "$Var1"

[33mcommit 53704ea46842d850d6236495b1f448df0f483f58[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 1 17:31:33 2016 +0100

    output-json: constify API

[33mcommit 160122205638127eddd8673d2bab46d297d62f4e[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Mar 2 09:54:07 2016 -0600

    alert-debuglog: trigger rotation on non-decoder events as well
    
    The write handling was missed for non-decoder events that
    would trigger rotation after a HUP.

[33mcommit 75cd1f0bf59ac057c4afcf94f562bd740a2999a7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 3 09:57:46 2016 +0100

    gccprotect: fix SECLDFLAGS not getting used

[33mcommit 5dbedbfa5bacf8a02459b2389596b63ec7822aa0[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Mar 1 14:59:13 2016 +0100

    app-layer-smtp: fix memory leak
    
    This patch fixes the following leak:
    
    Direct leak of 9982880 byte(s) in 2902 object(s) allocated from:
        #0 0x4c253b in malloc ??:?
        #1 0x10c39ac in MimeDecInitParser /home/victor/qa/buildbot/donkey/z600fuzz/Private/src/util-decode-mime.c:2379
        #2 0x6a0f91 in SMTPProcessRequest /home/victor/qa/buildbot/donkey/z600fuzz/Private/src/app-layer-smtp.c:1085
        #3 0x697658 in SMTPParse /home/victor/qa/buildbot/donkey/z600fuzz/Private/src/app-layer-smtp.c:1185
        #4 0x68fa7a in SMTPParseClientRecord /home/victor/qa/buildbot/donkey/z600fuzz/Private/src/app-layer-smtp.c:1208
        #5 0x6561c5 in AppLayerParserParse /home/victor/qa/buildbot/donkey/z600fuzz/Private/src/app-layer-parser.c:908
        #6 0x53dc2e in AppLayerHandleTCPData /home/victor/qa/buildbot/donkey/z600fuzz/Private/src/app-layer.c:444
        #7 0xf8e0af in DoReassemble /home/victor/qa/buildbot/donkey/z600fuzz/Private/src/stream-tcp-reassemble.c:2635
        #8 0xf8c3f8 in StreamTcpReassembleAppLayer /home/victor/qa/buildbot/donkey/z600fuzz/Private/src/stream-tcp-reassemble.c:3028
        #9 0xf94267 in StreamTcpReassembleHandleSegmentUpdateACK /home/victor/qa/buildbot/donkey/z600fuzz/Private/src/stream-tcp-reassemble.c:3404
        #10 0xf9643d in StreamTcpReassembleHandleSegment /home/victor/qa/buildbot/donkey/z600fuzz/Private/src/stream-tcp-reassemble.c:3432
        #11 0xf578b4 in HandleEstablishedPacketToClient /home/victor/qa/buildbot/donkey/z600fuzz/Private/src/stream-tcp.c:2245
        #12 0xeea3c7 in StreamTcpPacketStateEstablished /home/victor/qa/buildbot/donkey/z600fuzz/Private/src/stream-tcp.c:2489
        #13 0xec1d38 in StreamTcpPacket /home/victor/qa/buildbot/donkey/z600fuzz/Private/src/stream-tcp.c:4568
        #14 0xeb0e16 in StreamTcp /home/victor/qa/buildbot/donkey/z600fuzz/Private/src/stream-tcp.c:5064
        #15 0xff52a4 in TmThreadsSlotVarRun /home/victor/qa/buildbot/donkey/z600fuzz/Private/src/tm-threads.c:130
        #16 0xffdad1 in TmThreadsSlotVar /home/victor/qa/buildbot/donkey/z600fuzz/Private/src/tm-threads.c:474
        #17 0x7f7cd678d181 in start_thread /build/buildd/eglibc-2.19/nptl/pthread_create.c:312 (discriminator 2)
    
    We come to this case when a SMTP session contains at least 2 mails
    and then the ending of the first is not correctly detected. In that
    case, switching to a new tx seems a good solution. This way we still
    have partial logging.

[33mcommit 10e2e2a8b6e5ffabcbc85708c57627dc0be7e087[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Mar 1 15:44:27 2016 +0100

    app-layer-smtp: fix mem leak and add new alert
    
    If SMTP session is weird then we may reach a state where a field
    like MAIL FROM is seen as duplicated.
    
    Valgrind output is:
    
    30 bytes in 1 blocks are definitely lost in loss record 96 of 399
       at 0x4C29C0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
       by 0x4A5803: SMTPParseCommandWithParam (app-layer-smtp.c:996)
       by 0x4A4DCE: SMTPParseCommandMAILFROM (app-layer-smtp.c:1016)
       by 0x4A3F55: SMTPProcessRequest (app-layer-smtp.c:1127)
       by 0x4A1F8C: SMTPParse (app-layer-smtp.c:1191)
       by 0x493AD7: SMTPParseClientRecord (app-layer-smtp.c:1214)
       by 0x4878A6: AppLayerParserParse (app-layer-parser.c:908)
       by 0x42384E: AppLayerHandleTCPData (app-layer.c:444)
       by 0x8D7EAD: DoReassemble (stream-tcp-reassemble.c:2635)
       by 0x8D795F: StreamTcpReassembleAppLayer (stream-tcp-reassemble.c:3028)
       by 0x8D8BE0: StreamTcpReassembleHandleSegmentUpdateACK (stream-tcp-reassemble.c:3404)
       by 0x8D8F6E: StreamTcpReassembleHandleSegment (stream-tcp-reassemble.c:3432)

[33mcommit 50ad1ce3071a4bfd428db4992f4f5e5a92ec9424[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Mar 1 09:12:53 2016 +0100

    build: install app-layer-events.rules

[33mcommit a2ceb98064ad4486334b6bd85a7da9abcfaf0730[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 14 18:27:09 2015 +0100

    file: fix flags type in API

[33mcommit 83f400dd60d7701aabee2336046e845f553f848d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 13 23:26:07 2015 +0100

    http: remove unused param from HtpBodyAppendChunk

[33mcommit 6e3514a4449f3c274f82aa08b5a4e0e5272fa55e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 13 07:55:44 2015 +0100

    spm: constify search args

[33mcommit 914f7fa73384f74b0207284052d5bf130724d6f9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 13 10:33:21 2015 +0100

    file: shrink data structure

[33mcommit 6b942b6734639d249185433541d76c8141779aa7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 13 07:58:15 2015 +0100

    htp file: constify name/data args

[33mcommit e3703ee1262f327f2f25afdfb6538095a734c189[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 13 07:56:36 2015 +0100

    file: constify data/name args

[33mcommit 8631b73852b675048ef4b54f7a47d8792610c9e9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 13 22:53:55 2015 +0100

    http body: use HTPCalloc

[33mcommit 77f67062dedf40b66773a9a9d7d679536c6e1c6c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 13 17:11:08 2015 +0100

    htp: add HTPCalloc wrapper

[33mcommit a1a0acf8a8437cbc8c397cbea871f360ec5e9237[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 30 21:20:59 2015 +0100

    magic: make data arg const

[33mcommit dddd2d06f6ada5fd2edd689673ed217c833df516[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Mar 1 15:08:14 2016 -0600

    dcerpc: cleanup list handling

[33mcommit 1efcaf217904b3b2238684a6437d2afb0dec08bf[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Mar 1 14:36:17 2016 -0600

    dcerpc: fix memory leak when called from smb
    
    When DCERPC was wrapped in SMB it wasn't being initialized or
    cleaned up properly. To fix, expose DCERPC initialization and
    cleanup functions for use by the SMB application layer.
    
    Redmine ticket:
    https://redmine.openinfosecfoundation.org/issues/1708

[33mcommit 27f6620874b418d7cd5ba43b9852ce0b023435b9[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Mon Feb 29 22:37:24 2016 +0100

    rule-parsing: quick fix for rules with wrong double quotes
    
    The stripping of leading and trailing "s has issues with rules like the
    ones described in issue 1638 thus resulted in crashing the rule parser.
    So for now this is a quick fix which approaches this issue directly by
    stripping those "s correctly and handling error cases. It also adds the
    skip for leading spaces at the msg keyword and worksaround a possible
    null pointer dereference (that should never occur though).
    A more general approach should be done in the future.

[33mcommit 881fc5500d4f467b55000c4dbd0384ec66e62847[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 1 12:53:02 2016 +0100

    lua output: clean up memory at shutdown
    
    Lua module and submodules we're completely freed at exit, and nor
    was the lua_State.
    
    This patch does all the cleanup.

[33mcommit ecb79391a0b7af9d462b8fc5de6ceb026cbaa5d6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 1 08:59:07 2016 +0100

    pcre: use pcre_free_study to free the study data

[33mcommit 066c4b0b24c71cd3f30d6418da5e87c837b70d17[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 29 09:37:04 2016 +0100

    detect ports: fix memory leak
    
    Fix mem leak on rules that contained ports like "![21,25,119]".

[33mcommit 573284b5ed1e78d17d183a9d3727c7788cb57dcb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Feb 28 14:29:09 2016 +0100

    vlan: fix bad checks in unittests

[33mcommit e1468107e57e8c54f257175d671f76b9e32d15f2[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Thu Feb 25 21:33:36 2016 +0100

    nfqueue: fix wrong return value check in error cases
    
    The check for the return value was wrong, we have 0 for success and 1
    (and 2) for the error cases like TM_ECODE_FAILED, so we should quit
    unless TM_ECODE_OK (0) is returned for NFQInitThread. This fixes #1870

[33mcommit 3a3cc43f6a81eba3175d35b1843c57896f591238[m
Author: DIALLO David <david.diallo@ssi.gouv.fr>
Date:   Thu Feb 25 10:37:52 2016 +0100

    modbus: fix compiler uninitialized warnings with -Wmaybe-uninitialized
    
    All variables are initialized thanks to ModbusExtractUint8 or ModbusExtractUint16
    function that extracts 8bits or 16bits data from pointer the received input data.
    In case of extracting error (because of length), ModbusExtractUint8 or
    ModbusExtractUint16 returns an error that is managed by the caller function.
    
    All variables are now initialized to zero when they are declared. It does not
    change anything functionnally but it removes Modbus warnings.

[33mcommit 3a6b7a1cd6301703972a6031728f5474b0bef2d5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 25 15:01:29 2016 +0100

    make install-rules: update URL to https and 3.0

[33mcommit fde7a2f656dfd8ba4a4f1aa3694ca3fc13acd05b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jan 30 17:54:41 2016 +0100

    cuda: fix compilation

[33mcommit c12044c6c53b3af388dbc06006b0230991eac38a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jan 30 17:28:28 2016 +0100

    cuda: update build system for modern versions
    
    Remove support for compute capabilities below 2.0.
    
    Add capabilities until 5.3.

[33mcommit cb66db5ef2a843d1ef8817c983fde5e443cef063[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Feb 11 11:44:12 2016 +0100

    xff: fix address overwrite in forward case

[33mcommit 4db3a0f0b475652c39a7438c70498af31ac0ee4f[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Tue Jan 12 11:25:47 2016 -0800

    output-json-alert: fix segfault when alerts separated out from eve-log.

[33mcommit f7c568d1b2f4a6e3711fe79e5b5decc6840cff07[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Wed Feb 24 17:15:09 2016 -0800

    output-json-http: Add JSON support for X-Flash-Version.
    Supported as a custom field.

[33mcommit 5ccf6f30ea014c296028ea7c5e858453236f946e[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Tue Sep 1 16:09:26 2015 -0700

    Add JSON support for X-Authenticated-User.  Supported as a custom field.

[33mcommit 7a29aa116ed47e869fd1f82ad2847f2abaf5ec65[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Wed Feb 24 09:28:41 2016 +0100

    http: close file when http body limit is reached
    
    In some conditions, if stream.reassembly.depth is greater than
    request/response-body-limit size, the logging output is wrong
    if filestore keyword is used with http.
    
    For example, we get:
    {... "app_proto":"http","fileinfo":{"filename":"\/file.pdf","state":"CLOSED","stored":false,"size":1049292,"tx_id":0}}
    
    "state":"CLOSED","stored":false should be "state":"TRUNCATED","stored":true.
    
    This happens because the file state and file flags,
    which is the information that determine a correct output,
    are not set properly since a file is logged before and then closed (HTPFileClose).
    
    The logic of this patch is to close a file when we are above
    the limits, such that the proper state and flags can be set
    and the file will be logged correctly.

[33mcommit 609cdff540c1ebd2a5a87988a4eba81f2802661a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 24 16:19:13 2016 +0100

    json-drop-log: clean up memory at shutdown

[33mcommit 3c788a8c176fd2980cdb51db7d5c23fc1749280a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 24 13:39:10 2016 +0100

    flowbits: remove unused debugging code

[33mcommit 53af48f021ac018aaa2d0d953355110cfd5cb047[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 24 12:45:47 2016 +0100

    flowbits: fix memory leak
    
    Flowbits removed from a flow by 'toggle' or 'unset' were not actually
    freed, leading a small memory leak.

[33mcommit 0dbbe016d61ed87cabb90887fdc51b340facfa25[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 24 10:50:06 2016 +0100

    flowbits: optimize set and remove

[33mcommit c467c39b61c406ab6f61693501b8e3e107f5a4b8[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Tue Feb 23 23:27:59 2016 +0100

    build-info: workaround special _FORTIFY_SOURCE defines
    
    On systems like Gentoo where _FORTIFY_SOURCE is already defined like
    FORTIFY_SOURCE=((defined __OPTIMIZE && OPTIMIZE > 0) ? 2 : 0) the use
    within the printf function (%d) won't result in the correct value and
    we end up with 'defined' undeclared compile error. This workaround makes
    sure that just the resolved value is checked and then printed.

[33mcommit 154891cf2619ed171388ac13747be38b72b216e1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 23 12:12:24 2016 +0100

    pcre: work around harmless coverity warnings

[33mcommit 893b01ed0de9c7da81685d54f9fa2c7cfc22730f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 23 11:59:00 2016 +0100

    bpf: fix memleak on unusual error (CID 1197757)

[33mcommit 6228f5f689d8016784b46cb400a368529de5b3bf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 17 14:27:10 2016 +0100

    lua: if pkg-config fails, try -llua

[33mcommit 9858ae41bed1cbd62a65657b441e233752159595[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 17 10:25:02 2016 +0100

    configure: OS X fixes
    
    Remove unnecessary -lpthread from tests.
    
    Make linker warnings non-fatal with -Werror.

[33mcommit b25bd2e18031761ff2a5b47f5cd6cff5c7d9449e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 18 20:58:09 2016 +0100

    http: fix NULL deref on certain out of memory conditions

[33mcommit 45812c32adfb6aa43fd1448dce380faa6d744a98[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 23 10:20:29 2016 +0100

    runmode: fix memleak on live modes setup (CID 1197760)

[33mcommit b9ee86fdb400ec1569fac8c20b22bcad687b009c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 23 10:09:24 2016 +0100

    detect-engine: free memory in error conditions (CID 1351210)

[33mcommit 0dd81b85d4a46702b1c7fe482fb1eb04ef50d130[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 23 10:05:48 2016 +0100

    multi-tenants: improve error handling (CID 1312702)

[33mcommit fb90358e1796915fa63b671c7fb687cfc17bb53f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 23 09:52:09 2016 +0100

    conf: explicitly ignore retval (CID 1353490)

[33mcommit f5ce7549bef764c0d87bbde3de53f85cfaea9336[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 23 09:50:40 2016 +0100

    unix-manager: fix memleak in error case (CID 1353491)

[33mcommit e51707be9062493ff696d54cbe51a275634f9715[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 23 09:26:56 2016 +0100

    pcre: blacklist 8.35 for JIT use (issue #1693)

[33mcommit 3f3ed71fe72cb5a1710be9138e5e4b8106ae810f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 18 12:42:31 2016 +0100

    jansson: cleanup JSON_ESCAPE_SLASH use

[33mcommit 654829f9697cdf0030b3ffaa25cdce9fd8803f08[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 18 10:44:14 2016 +0100

    unix-socket: optimize response sends
    
    Instead of sending responses to clients in small chunks, send it in
    one big chunk. For this the JSON message is first serialized into
    a MemBuffer before sending.

[33mcommit 40cf1f8ef73cd8688e53a5c44265aaced7dce271[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 18 10:36:20 2016 +0100

    json: make membuffer helper public
    
    Make json_t to MemBuffer helper public so it can reused.

[33mcommit acaf8a84e89293fa9d26d1c68406ab9643abc673[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 17 22:33:54 2016 +0100

    stats: fix dump-counters when no loggers are active

[33mcommit 14030239f8907e0da991af1e9558533c5c3d3900[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 17 20:45:09 2016 +0100

    unix-socket: restore dump-counters functionality
    
    Create a eve.stats like output for dump-counters.

[33mcommit 310e8fcbf8df6a57f159c1c86f70bfa1ecd8e220[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 17 20:25:47 2016 +0100

    stats: export StatsToJSON

[33mcommit ffdfb6a8f0151fb778ccb56a506936bc2ccf69c6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 17 20:19:20 2016 +0100

    json-stats: split out json generation
    
    Split out JSON generation logic so the code becomes reusable.

[33mcommit c446abeb471d8be516bf11f0106797526b7122b3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 18 11:58:07 2016 +0100

    jansson: include in suricata-common.h

[33mcommit 8c0e57506347357258ee53cb195d6aed39882e85[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Sun Feb 21 21:54:32 2016 +0100

    configure: warn if libpcre 8.35 is used

[33mcommit 72c9debbd67698d835884de9cb863a5b814c2071[m
Author: Travis Green <travis@travisgreen.net>
Date:   Wed Feb 10 10:18:29 2016 -0700

    yaml: disable rules by default
    
    Change to "disable by default" rulefiles

[33mcommit 8f059b2841770791a12d26d74de2fb9c326bd609[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Thu Feb 18 14:24:26 2016 -0800

    output-json-dns: add logging of NS answer record content.

[33mcommit 09fe1c62d8d394dc2d839370c550a9851fe22119[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Tue Feb 16 22:55:28 2016 +0100

    detect-tls-version: fix small resource leak

[33mcommit 3d2834a232df34af3edbb2c4e8be3eb23e9ac6f7[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Feb 11 14:45:23 2016 -0600

    json: use top-level sensor-name if provided.
    
    Currently the default configuration file contains a "sensor-name"
    at the root of the configuration file, however, eve-log will only
    use it if its specified under eve-log.
    
    Now we will look for it at the eve-log, if present we'll use it
    but log a deprecation warning, if its not present we'll look
    for sensor-name at the root of the configuration.

[33mcommit 5f3972850996873fed821bb53368d57f59ab3812[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 16 22:23:16 2016 +0100

    ssh: fix string handling in unittest

[33mcommit 9015fb5a7f8f2bb1981dd5caa70904641c339341[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 16 17:42:38 2016 +0100

    travis: set CFLAGS to error on cc warnings

[33mcommit 8bb1cf08efd8ae54bc7d363f350a523709b71c32[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 16 16:50:48 2016 +0100

    eve: fix mishandling of big messages
    
    When the string representation of a JSON message grew bigger than
    64k, the JSON record would just be truncated. This lead to errors
    in the parser(s) of the JSON stream.
    
    This patch changes the buffer logic to grow the buffer on demand.

[33mcommit 6c30f7bdbb476da74186dad11c40b75930ef71e9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 16 16:45:01 2016 +0100

    counters: fix thread stats delta logging
    
    Just like with the global stats, store prev values. Fixes delta logging.

[33mcommit 0138bf560594b629ce0ab809c48800e938cf728b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 12 09:48:05 2016 +0100

    qa: add leak sanitzer suppression

[33mcommit 1c3a0434ca0d3025dda1c92e57aa7d1af7beb723[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 11 18:51:15 2016 +0100

    wirefuzz: exit with error code on more issues

[33mcommit 9d49b828a66e15d0068423833f0a2106e5be1ae7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 11 09:46:44 2016 +0100

    wirefuzz: logdir handling improvement

[33mcommit 8626eccf58fad65509b048cf3ce7bbe0b1ba5272[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 26 18:59:34 2015 +0100

    wirefuzz: remove obsolete stream mem check

[33mcommit 048e538828327ceb2e4059206248f08de8da2288[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 26 17:32:25 2015 +0100

    wirefuzz: add -N option to count complete passes

[33mcommit 7299388d052c87ce5f61f7e662be9947c349d20e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 26 14:37:10 2015 +0100

    wirefuzz: improve logfile cleanup

[33mcommit 3d0542405dd10cdc7af38ad80db46fcbc21b691f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 26 13:42:43 2015 +0100

    wirefuzz: enforce -n option per run

[33mcommit 0d77c4d5609ca9f2e2ddd0b1afe13d49f50c357d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 26 13:29:05 2015 +0100

    wirefuzz: add -S option for exclusive rule load

[33mcommit 0a22ba7e23deef9ab432d048828169f663dd247b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 12 16:31:57 2016 +0100

    http: fix multipart body tracking slowdown
    
    Optimize HTTP multipart body parsing. Big records that were not files
    could slow down Suricata. The reason was that the body tracker was not
    moved forward. This lead to growing body buffers, which were expensive
    wrt memory and inspection.
    
    This patch add logic to move the tracker forward in this case.

[33mcommit 4ee20f264976e43280cfcc850bbac5b82563d0f4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 11 18:19:34 2016 +0100

    asan: fix reputation code include

[33mcommit ee5fd4613bec43c13b65c7bb792ad6ef0f01ffdb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 12 10:54:02 2016 +0100

    tls-sni: fix uninitialized memory use
    
    On bad traffic the parser could allocated memory that was not
    intialized. This was later used in the JSON output logging as
    a valid null terminated string.

[33mcommit 4086938f1e3b8f108230f88dbba0f8834966d8bf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 12 10:48:26 2016 +0100

    pool: fix memory leak
    
    Due to pointer size mishandling, the pool code could consider a
    block of memory inside the 'preallocated' block. It would then not
    free the block.

[33mcommit b93a302a5b3d011bc43118cce5037e89becab2f2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 3 09:51:33 2016 +0100

    stream: improve StreamTcpSegmentForEach for IPS
    
    StreamTcpSegmentForEach would only return ACK'd segments. This lead
    to missing stream data in alerts when running in IPS mode.
    
    This patch changes the behavior for IPS. All segments are iterated
    now, also the non-ACK'd ones. For IDS mode the behavior is unchanged.

[33mcommit 3a9bcd6a5362346b0e5c55fb4a2eb4117d818af4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jan 31 19:27:35 2016 +0100

    qa: add --simulate-ips option
    
    This option forces the engine in 'IPS' mode. This is useful for testing
    some IPS code paths based on pcaps.

[33mcommit 6152d1abca7af90e01c69873fa38a272456f76b5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jan 31 13:40:07 2016 +0100

    eve: fix stream payload logging wrong direction
    
    In the EVE stream payload logging the IPS path logged the wrong dir.
    Both IDS and IPS can take the same path as the detection engine
    inspects in the same direction in both cases, so the alert is also
    generated in the same direction.
    
    Bug #1684

[33mcommit 4b8bd9dfc9fb99162233983e7c3c97f3ec7684da[m
Author: Maxtors <moe.andreas@gmail.com>
Date:   Mon Feb 1 14:54:29 2016 +0100

    Added checking of negated "totals" and "threads" config values for stats.

[33mcommit 6f79137971f50450212d3191a31dfe88e1f21f1d[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Mon Nov 2 13:21:37 2015 +0100

    lua: expose TLS certificate chain to lua
    
    Expose TLS certificate chain to lua through TlsGetCertChain().

[33mcommit 559747e325cf89f01e4b8bb659bb6f92a5275139[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Mon Oct 5 15:34:55 2015 -0700

    file-store: add force-filestore configuration option to enable writing all
                extracted files to filesystem.

[33mcommit 3c9538b783e1f3f0765b75a93e0c8a5949697edb[m
Author: Nicolas Thill <ntl@p1sec.com>
Date:   Fri Feb 5 11:11:13 2016 +0100

    lua: set thread vars in DetectLuaMatch
    
    Fix internal error when calling SCThreadInfo from Lua detection modules.
    
    Signed-off-by: Nicolas Thill <ntl@p1sec.com>

[33mcommit c4fb6217ee72969ef59b60ff7f4a0f6bfeaa8c9b[m
Author: Maurizio Abba <mabba@lastline.com>
Date:   Mon Nov 16 12:21:27 2015 +0000

    filestore-call: forcing a call to FileStore instead of manually updating
    the relative flag in order to have a single point where we actually
    touch the File structure

[33mcommit 2b263d55a2d0583a2c02e352bfe490fd4f42b39a[m
Author: notnyt <nyt-github@countercultured.net>
Date:   Fri Feb 5 19:11:03 2016 -0500

    fix nfq_get_timestamp
    
    Handle case when nfq_get_timestamp returns 0 for success, but timestamp is empty.

[33mcommit 2a17e3e827a2d90d03b0525ad567d3668681947d[m
Author: bladeswords <bladeswords@users.noreply.github.com>
Date:   Wed Feb 3 22:09:34 2016 +1100

    Fix typo of trailing ] in configure --help
    
    It is the small things that count.  This is an example of the fix
    
    Before
    --disable-threading-tls Disable TLS (thread local storage)]
    
    After
    --disable-threading-tls Disable TLS (thread local storage)

[33mcommit 5cee70f9ae60e480b4c4d71d45848a1b15dae024[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Tue Nov 17 12:25:29 2015 +0100

    Fix the comment and explanation for random-chunk-size

[33mcommit 8bd9f3d07209b0d2225b553d07ee052ab4fe4910[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Sun Feb 7 23:02:14 2016 +0100

    json: fix missing includes in disable unix socket case

[33mcommit adbf8bec747680f4b259b4dc37b2156f2f01d6b8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 8 11:50:20 2016 +0100

    drmemory: suppress magic leak

[33mcommit 15c98c6085fb4e4d23accc34e660841ef735778a[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Fri Jan 29 22:02:22 2016 +0100

    file-magic: improve libmagic handling on *nix systems

[33mcommit 368d7e913a9a71d877befce3e5bbc847b7917b90[m
Author: Alexander Gozman <a.gozman@securitycode.ru>
Date:   Thu Feb 4 15:33:23 2016 +0300

    In configuration test mode, check signatures if 'delayed-detect' is enabled
    
    When 'detection-engine.delayed-detect' option was set to 'yes',
    suricata didn't check signatures validity in configuration test mode.

[33mcommit 20dd593981285735f3f1d4272a565c76172c6284[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Sun Jan 31 22:34:56 2016 +0100

    remove unnecessary braces

[33mcommit dc1bd5b6bd15e24f57eef0dd6677cc49526a2897[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Sun Jan 31 23:15:20 2016 +0100

    configure: add --disable-python option

[33mcommit 18760e222a607a8b1ab6f4277e568ad0e93ee411[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Feb 3 14:28:50 2016 -0600

    asn1: fix memory leak
    
    As reported in issue #1395, fix 2 memory leaks when destroying
    asn.1 decode contexts.

[33mcommit 96ed8d90ee6b6ea4b3ddc475dca125a5b33b2898[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 22 15:20:25 2015 +0200

    Fix two more potential issues like bug 1550

[33mcommit 05fdfcb71ee255ffcd6c3761ee564bd93e504b5e[m
Author: Alessandro Guido <alessandro.guido@unimore.it>
Date:   Wed Sep 16 15:14:11 2015 +0200

    Segfault fix

[33mcommit b6de1b6567fc446a41d4176d7edb2b075b9066da[m
Author: Andreas Herz <andi@geekosphere.org>
Date:   Tue Jan 19 21:38:37 2016 +0100

    coccinelle: fix typo for strchrnul

[33mcommit 4352dd179ccdc7b845ae4498d2aa6d41d8fc5455[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Jan 20 22:41:22 2016 -0600

    conf: null guard in ConfNodeLookupChild
    
    Add NULL guarding to the lookup so callers can process nodes
    in a loop with less error checking.
    
    Addresses issue #1660.

[33mcommit 2aa971240be3727a64ada18cda1bf422e6bf6c44[m
Author: Alexander Gozman <a.gozman@securitycode.ru>
Date:   Wed Dec 23 11:49:11 2015 +0300

    unix manager: log client's version with debug level
    
    As (dis)connects are already logged as a debug events, this one
    should do the same.

[33mcommit 384db278008b39157c38a796e7f67f72b91af3b0[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Dec 21 15:13:09 2015 +0100

    unix-manager: fix ressource leak when init fail

[33mcommit f9faf990fb08c1a8df5694d7156300f909422f58[m[33m ([m[1;33mtag: suricata-3.0[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 22 16:56:48 2016 +0100

    Update Changelog for 3.0

[33mcommit 202b11c0f6215bfee120addf651a7dc30a98f0e5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 11 16:46:35 2016 -0500

    smtp: harden mime parsing

[33mcommit 44a444ba78cb2a59712ca0b778254750e151a384[m[33m ([m[1;33mtag: suricata-3.0RC3[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 21 14:11:44 2015 +0100

    Update changelog for 3.0RC3

[33mcommit 37a64bdd45936875598925f7ccde420e4efdc450[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 19 16:27:35 2015 +0100

    redis: fix compiler warning

[33mcommit 5457c8d5b37bf5e6ff5c65a1fa6d142c619e12a7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 18 11:07:36 2015 +0100

    prelude: clean up memory on setup failure

[33mcommit 33ce78175966722bfbd1beb6a346980900294158[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 18 11:03:40 2015 +0100

    pcap: fix setup failure memleak on libpcap < 1.0

[33mcommit 8719d903143c81f6650829144ba4080134c52c82[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 17 16:41:05 2015 +0100

    prelude: style fixup

[33mcommit 1d9087f79f0cfa7786a352bf7ad339e622f61b3c[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Dec 7 12:08:16 2015 +0100

    prelude: fix thread safeness
    
    Prelude analyzer is not thread safe so we need to have one
    analyzer per thread.

[33mcommit 93642a0d1dd29c96e98824935ef963f6b1ef40eb[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Dec 14 15:18:07 2015 +0100

    suricata: can't use -l and unix socket runmode
    
    It is not possible to use simultaneously -l and unix socket
    runmode because setting the log directory make it final so
    not modifable by other call.
    
    It is a implementation limitation but it does not make sense
    to set logging directory to have it overwritten by the first
    directory specified 'by pcap-file'. So it seems correct to
    only trigger an error if this both options are used at the same
    time.

[33mcommit 2002b37e30c12278961ff0369bba5692fb0f4802[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Dec 14 15:04:47 2015 +0100

    unix-manager: display errors like errors
    
    Not being able to setup the output directory or file is an error so
    it should be printed as such.

[33mcommit 6b37985c666db978af42cc095b4719af46cf7a43[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Dec 14 14:02:20 2015 +0100

    unix-manager: fix race condition
    
    Under high load it is possible that the thread is not yet started
    and that we register a command at the same time. As a consequence,
    the commands list is not yet initialized and we have a segfault.
    
    This patch moves the initialization in the ThreadInit function to
    be sure the commands list is available when needed.

[33mcommit 083f22f6d6d77aa1cb8d43775e98c0f148cfc481[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 16 11:02:15 2015 +0100

    icmpv4: remove unused header fields

[33mcommit 375092da8505cc353e5a72127b6cab7302d3ee78[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 16 10:49:50 2015 +0100

    icmpv4: remove unused declarations

[33mcommit ed1cc1ee2af993d9be68c91d03b7823644e3273d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 16 10:50:50 2015 +0100

    icmpv4: harden embedded packet handling

[33mcommit fe445367bda6da335eddd6d320b48e01493af94d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 16 10:45:05 2015 +0100

    icmpv4: improve dest unreachable logic
    
    When a ICMPv4 destination unreachable packet contains an embedded packet
    this packet is parsed. When it's found to be invalid, the whole ICMP
    packet is tagged as invalid.
    
    In some cases the unreachable packet would still be used.
    
    This patch fixes this by checking the packet is invalid flag as well
    in the ICMPV4_DEST_UNREACH_IS_VALID macro.

[33mcommit 2fbfd6efcca95469246338d4eeba69f31f4224df[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 17 13:25:02 2015 +0100

    DER decoder: don't use strlcpy on non-strings

[33mcommit fae2836039ef56daebcc222e41be3b4ad445b27c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 11 16:05:42 2015 +0100

    http: more sane body inspection/tracking defaults

[33mcommit efdd9e08f2b5dd1dac6a9ed8355a79b11d84cc12[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 10 16:12:05 2015 +0100

    http: improve body pruning
    
    In case the body wasn't inspected the body_inspected variable wouldn't
    get updated leading to the body not getting pruned at all.
    
    This patch adds support for this case.

[33mcommit 64017cd29bf77aefed42bb1010f2e4bb1c9cac6c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 10 09:58:52 2015 +0100

    ips/drop-log: fix crash on logging drops
    
    When logging drops for fragmented UDP packets, triggered by detection
    in the reassembled packet, a missing check could lead to access of the
    packets UDP header pointer when it was NULL.

[33mcommit 136c6440c84ae0fe7a88b31c44bc65798c49a8d4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 13 10:45:18 2015 +0100

    http file: fix txid type

[33mcommit 006cd5ae3681c6d4bd6718e113e070dcb2f4b825[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 13 10:38:21 2015 +0100

    file: sync file and tx id types

[33mcommit a74a8c874f81fc805223fdc84cf70d23c64a8570[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 1 15:20:19 2015 +0100

    smtp: reset inspection buffers

[33mcommit 2582e61af74793b3a773c3823a5972e2af710c78[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 13 14:06:32 2015 +0100

    http: fix body prune check

[33mcommit e94bf9726db3b0d9d7448160f5f92a0c3f5328fd[m[33m ([m[1;33mtag: suricata-3.0RC2[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 8 14:08:18 2015 +0100

    Update Changelog for 3.0RC2

[33mcommit b333e5feae1f0c14d7620490a543fc41bccaea85[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 2 11:37:57 2015 +0100

    dns: reject bad response data

[33mcommit 260841827f5a7404365be17fdf7e064a05dc2c83[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 30 15:46:15 2015 +0100

    smtp: improve handling of bad traffic
    
    No longer fail tracking the SMTP stream when a unexpected reply is
    encountered.
    
    Do not store the unexpected reply.

[33mcommit 4b69e1aec12f2ba0ca235e63dee96c57c59002bc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 27 17:12:52 2015 +0100

    stream-tcp: bail early on segments before base_seq
    
    In cases where base_seq has moved beyond last_ack, bail early.

[33mcommit 8cdd96d7a4a93ec8e77b837a0347f9db99a369e1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 7 17:10:40 2015 +0100

    tls: suppress warnings on alloc failure

[33mcommit b4dad91e269bacd5c2323b65203e9be6384140da[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Dec 6 10:53:42 2015 +0100

    unified2: disable by default

[33mcommit 36fde7df428aeaab7f089c744753778fd7685a91[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 8 09:55:00 2015 +0100

    stats log: suppress 0 counters by default

[33mcommit 86a3f064104ae4a74588ecb1c9380bc0a79d2f5c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 8 09:18:17 2015 +0100

    afpacket: suppress output

[33mcommit bed18678308c18be47797cd1beeb3743eaeb5cc7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 8 09:06:03 2015 +0100

    afpacket: move zero copy setup to config parsing
    
    This way it's run and logged per device, instead of per thread.

[33mcommit 9d882116e271e696fd30e6264f4af4976198b07d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 8 09:01:52 2015 +0100

    afpacket: indent fixup

[33mcommit cf2588acc40823849d90ad4db12b64a507701ef2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 8 08:58:26 2015 +0100

    offloading: compress printing of iface offloading

[33mcommit f89a4219906fe40cf2fb3092e6eaf1abd732faf8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 8 08:48:24 2015 +0100

    afpacket: on missing cluster settings, set defaults

[33mcommit 49dbb455b5c3cd22941011a01763eaf1f04ba5d8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 7 21:24:07 2015 +0100

    afpacket: add null decoder, put ethernet first

[33mcommit 7b45a8a2a9cad49331654ee450e2c51b0cc26537[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 7 19:28:25 2015 +0100

    device: constify string args

[33mcommit d87a60f3cc87d346a9b1e04ff133dfed6e9f7cbe[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Dec 3 15:40:08 2015 -0600

    modbus: disable by default

[33mcommit 538f37bd384846d53e5bb70ce04164eff6c673f6[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Dec 3 12:07:03 2015 +0100

    output-json: add app_proto key in root
    
    By adding the key in the root of *flow and fileinfo  events it
    will be possible to get all events for one application layer by
    using a 'event_type:proto OR app_proto:proto' filter. This will
    permit to the analyst to get a good view of events related to
    one protocol.
    
    This patch also fixes a regression in file logging where app_proto
    was available before 94dbd303e4744a40f3761265be7c73a7a4754764 create
    the regression.

[33mcommit 8ac48872a5a005bf97bb90cdc0ecf1fe620448a2[m
Author: Alexander Gozman <a.gozman@securitycode.ru>
Date:   Mon Nov 30 11:21:05 2015 +0300

    Feature 1605: more descriptive error messages when checking MTU, etc

[33mcommit 019f85644251fc56ae12122ec0fc6279017d96b9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 27 09:50:50 2015 +0100

    profiling: fix lock profile compilation

[33mcommit ac476de5ed9561bcef5833151891d1d534537bf8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 26 13:03:11 2015 +0100

    json: small improvement to log message wording

[33mcommit 9930f447d24ac613f3747aa4e61896312109a698[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Nov 23 13:46:18 2015 +0100

    output-json: fix regression on log prefix handling
    
    The log prefix option was not anymore honored due to a regression
    caused by some recent code.

[33mcommit 1291250c0f715cdb22a8c17383370ae14306afa0[m
Author: Maurizio Abba <mabba@lastline.com>
Date:   Mon Nov 16 12:14:24 2015 +0000

    app-layer-smtp: support for multiline response
    Multiline response support is provided but not enforced. This patch
    allow parsing multiline response when a reply is processed

[33mcommit 737c99dd308d437765fc7d74b64b437884febe0a[m[33m ([m[1;33mtag: suricata-3.0RC1[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 25 13:03:40 2015 +0100

    Update changelog for 3.0RC1

[33mcommit 84c4566a14a2f5aad5e8f10cf70a826c2aa22404[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 25 13:02:48 2015 +0100

    Update dev version to reflect we're doing 3.0 now

[33mcommit d77e4030249598bb1b6bb39aca46780bdc474817[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 25 12:17:51 2015 +0100

    rule vars: fix compiler warning

[33mcommit a7f54d63b73877984d240791a84765462a0db561[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 24 12:06:04 2015 +0100

    tls: fix compiler warnings

[33mcommit a1075ee2f29f523676b7a24ef1628e991931784c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jul 11 11:43:34 2015 +0200

    http: add test for plain http over connect

[33mcommit cd81af0bc989a20a005cc5d0f7949d7369fb70b5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 13 11:26:41 2015 +0200

    http: don't run unittests twice

[33mcommit e86e27bab74e1063bfa84f50719b1bb6f26b1353[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jul 11 22:52:23 2015 +0200

    http: test cleanups

[33mcommit 50f4fb2a7259a4b76c5c7fc5ee63e3be3ccdb10e[m
Author: Aaron Campbell <aaron@monkey.org>
Date:   Mon Nov 2 15:19:12 2015 -0400

    Fix out-of-bounds memory access in DNS TXT record parser.
    
    The datalen variable is declared unsigned.  If txtlen and datalen are equal,
    datalen will first be reduced to 0, and then the datalen-- line will cause its
    value to wrap to 65535.  This will cause the loop to continue much longer than
    intended, and eventually may crash on an out-of-bounds *tdata dereference.
    
    Signed-off-by: Aaron Campbell <aaron@monkey.org>

[33mcommit 4dfbc0effa668745a5535ce81b32f2e0cebcaca8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 23 17:18:57 2015 +0100

    multi-detect: fix and simplify config
    
    instead
    
    mappings:
      - vlan:
        vlan-id: 1
        tenant-id: 2
    
    we'll now use:
    
    mappings:
      - vlan-id: 1
        tenant-id: 2
    
    For YAML it pretty much means the same thing.
    
    Ticket: 1517

[33mcommit 07d8617b3e0aab69d4fa6a3c4baee24480607bab[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 23 14:58:34 2015 +0100

    multi-detect: improve error handling

[33mcommit 906b95eed3cafcae4ebef1cbbc012e441948ce70[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 23 14:05:21 2015 +0100

    multi-detect: handle missing mappings
    
    Notify/warn user about missing mappings depending on other settings
    like unix socket and init errors fatal.

[33mcommit 27783f4c667262a7bbb6e962678ebaf0146e30d6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 23 13:38:59 2015 +0100

    multi-detect: consider vlan tracking
    
    Refuse to use vlan selector if vlan tracking is disabled.

[33mcommit 04889f154d64e70d2b3e2e7bfc4977ecd53dacfd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 23 13:30:03 2015 +0100

    multi-detect: validate vlan_id

[33mcommit d7d76e7b273c23c144a32ba54151bb75502ba68a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 20 15:52:50 2015 +0100

    multi-detect: use default tenant
    
    The default detect engine can be used as 'default tenant'.

[33mcommit dc3c1ef01eabb86285636ba9de5a9e50e467fbb4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 20 12:05:02 2015 +0100

    multi-detect: clean up output

[33mcommit adecf41720bae7a3f0552d710ec19a3d2fc7708b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 19 13:37:23 2015 +0100

    base64: code style fixups

[33mcommit 6b15686fd1ed86dd3b5095fbd5f50e7cddb7822d[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Sep 30 09:49:47 2015 -0600

    base64_decode, base64_data: decode and match base64

[33mcommit 9375e8fb3c5430d43f6f50d128ec24f1b48bc03e[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Oct 14 13:37:45 2015 -0600

    util-base64: strict mode - all characters must be valid
    
    Introduce a strict mode to base64 decode. If strict,
    the function will fail when invalid input data is seen.
    If not strict, what has been decoded will be returned.
    
    This is in support of adding a Snort compatible base64_decode
    rule option that uses whatever data can be decoded as a length
    of data to decode is optional.

[33mcommit 7281f6aaf300a449b3fc6d1322d8b8070612d149[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Oct 13 15:59:22 2015 +0200

    lua: added function TlsGetSNI()
    
    Added function to get server name from TLS SNI extension.

[33mcommit f363d11afe1e91b9db3f8361a591051fff3c4ef3[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Oct 13 15:35:33 2015 +0200

    log-tls: added SNI field to extended output
    
    Added SNI field to extended tls log output.

[33mcommit 285022fde970fa8fca1db1ff4c19c09e5b29a670[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Oct 13 14:44:06 2015 +0200

    output-json-tls: added SNI field to extended output
    
    Added SNI field to extended JSON output.

[33mcommit 3ac1a3d9fe5d955d8351c6f942dafc5df3ae0304[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Tue Oct 13 14:06:37 2015 +0200

    app-layer-ssl: get server name from SNI extension
    
    Decode client hello handshake to get server name from SNI extension.

[33mcommit bec913b40cf9153fd6a021b33cecda97ff76be47[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 23 09:56:51 2015 +0100

    json: fix malformed output
    
    Even though the json output callback is called with a null terminated
    string, it's not useable directly. The size parameter to the callback
    might be a lot smaller than the string size. Libjansson gives the size
    up to the first point that needs escaping.

[33mcommit c80990fe1046876753cd7536db32236a77173f23[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 2 09:54:46 2015 +0100

    output: cleanup JSON logging

[33mcommit ad5a753dde70ac0db2a3cfa9f0b549b5798e3aa8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 1 23:43:59 2015 +0100

    output-json: don't alloc for JSON to string

[33mcommit c1bf0e1b079e4c63e9dda6d5c66527cff0eec721[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 3 10:58:36 2015 +0100

    rule profiling: json output

[33mcommit b03c288d9a3776aee4e20667f5b7757b18fedea6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 2 23:00:42 2015 +0100

    profiling: cleanup, remove MIN declaration

[33mcommit a4089873c70b621a84ca4be75d3a669de7ff45cc[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Oct 22 20:31:13 2015 +0200

    rules-reload: fix reload with -s or -S
    
    When using the -S or -s option, the reload was causing the specified
    rules file to be forgotten and the default rules to be loaded at
    reload time.

[33mcommit b85901a6b494ec608b31ab6267f0e9989afa61e4[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Oct 22 21:20:54 2015 +0200

    prscript: add rm command
    
    This command removes the container and the image allowing to
    free the disk space allocated during the creation.

[33mcommit 35c1b681eea62918e07c35e3d8c8df23f1f26d49[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Oct 22 21:06:44 2015 +0200

    prscript: docker do not need sudo
    
    Usage is not to run docker command as root but to have the user
    in the docker group to be able to run docker commands.

[33mcommit c199fdcbb9197d13e2cc85d162051139d511494c[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Nov 3 09:45:53 2015 +0100

    handle MTU discovery in multi iface case
    
    This patch adds handling of multiple interface by using as
    default-packet-size the maximum MTU + header length among the
    live iface.

[33mcommit affb399cd9b09771b59b8eddea1de04719babfc8[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Nov 17 09:56:55 2015 +0100

    config: don't use hardcoded path
    
    It is better to use a transformation to define the default
    directory of output message instead of using an hardcoded value.
    Same apply to the directory for the pid file.

[33mcommit 9672e16323bd46ee366d922b856deabca9dfd232[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Nov 16 17:53:04 2015 +0100

    suricata: clean dump-config output
    
    When user asks for a configuration dump, it is useless to display
    the version and CPU info. Also initializing the log system conduct
    to overwrite the some log files and in particular suricata.log and
    this is annoying as a command should not interfere with a running
    daemon.

[33mcommit c06dfe6e26e16b0c8e3d4965b5a0ddafc2553174[m
Author: cardigliano <cardigliano@ntop.org>
Date:   Thu Oct 22 11:55:57 2015 +0200

    pfring pkt acq: keep running on 'pfring_set_cluster' failure when cluster is not required
    
    Suricata creates a pfring cluster with a default ID = 1 when not explicitly configured,
    unless the device has prefix 'dna' or 'zc'. Since pf_ring also supports other cards
    implementing kernel-bypass (cluster not supported), this is preventing those cards from
    running on top of this module. This patch stops suricata on 'pfring_set_cluster' failure
    only when error code != PF_RING_ERROR_NOT_SUPPORTED or cluster ID has not been explicitly
    configured.

[33mcommit 7f8795c7563827f090d8679cb35847af0085fc56[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 23 18:29:10 2015 +0200

    threading: avoid autofp deadlock
    
    When there are many threads and/or the packet pool (max-pending-packets) is
    small, a potential dead lock exists between the packet pool return pool
    logic and the capture threads. The autofp workers together can have all the
    packets in their return pools, while the capture thread(s) are waiting at an
    empty pool. A race between the worker threads and the capture thread, where
    the latter signals the former, is lost by the capture thread. Now everyone
    is waiting.
    
    To avoid this scenario, this patch makes the previously hardcoded 'return
    pool' threshold dynamic based on the number of threads and the packet pool
    size.
    
    It sets the threshold to the max pending packets value, divided by the number
    of lister threads. The max value hasn't changed. Normally, in the autofp
    runmode these are the stream/detect/log worker threads.
    
    The max_pending_return_packets value needs to stay below the packet pool size
    of the 'producers' (normally pkt capture threads but also flow timeout
    injection) to avoid the deadlock.
    
    As it's quite impossible at this time to learn how many threads will be
    created before starting the runmodes, and thus spawning the threads and
    already initializing the packet pools, this code sets a global variable
    after runmode setup, but before the threads are 'unpaused'.

[33mcommit 8d06d7bccc431fda671bacca482fd98264b660fb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 23 18:09:24 2015 +0200

    threads: add func to count running threads of types

[33mcommit ca3916881fe598b2b9b10f7f90d3636f938a1db5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 23 18:01:55 2015 +0200

    threading: store thread module flags in threadvars

[33mcommit 77624701e73aade1706836591a750e4aec13520e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 23 09:53:48 2015 +0200

    htp: cleanup, remove unused declaration

[33mcommit 86711a1332f7082a688ff68ad38f2641bd20ee26[m
Author: cardigliano <cardigliano@ntop.org>
Date:   Thu Oct 22 01:43:41 2015 +0200

    pfring pkt acq: capture loop optimisation
    
    For each packet the capture module checks whether it is time to dump stats calling
    TimeGet(). TimeGet() is an expensive function using gettimeofday() or SCSpinLock()
    which affect performance. Since gettimeofday() is already called for setting packet
    timestamp, it is more efficient to use the packet timestamp directly.

[33mcommit 70c98c1ff25a143eb156144d3e517d6d5251c7b1[m
Author: cardigliano <cardigliano@ntop.org>
Date:   Thu Oct 22 01:35:04 2015 +0200

    pfring pkt acq: removed reentrant flag
    
    PF_RING_REENTRANT is not needed as each pfring socket is used by a single thread.

[33mcommit c4850c1d8fa8e1902141b92766d2f41e35ebbb0c[m
Author: cardigliano <cardigliano@ntop.org>
Date:   Thu Oct 22 01:26:54 2015 +0200

    pfring pkt acq: use zero-copy recv in workers runmode
    
    This patch removes packet copy when suricata is running in workers runmode,
    packet copy is not needed in this case since packets are processed in sequence.

[33mcommit d88e1334283b37ee2c3d409d38632062d261c67e[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Oct 14 16:40:44 2015 +0200

    util-logopenfile: don't allocate redis command
    
    As we only have two different commands we don't need to allocate
    it and can use pointer to global variables.

[33mcommit 2ea4bbc4921cd6a34824e8ee54d56370577a5160[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Sep 17 10:28:08 2015 +0200

    util-logopenfile: move sensor_name to filectx
    
    We will now output the sensor name independantly of the output
    method if it is set in the YAML file. In the case of redis we are
    using the hostname value if unset.

[33mcommit 7e3a5a0db28bebd5ce0deb4a4a54461cac270c86[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri May 29 22:14:22 2015 +0200

    util-logopenfile: log queued events at exit
    
    Do a redis query at exit to log possibly existing events.

[33mcommit 404e66041091008dc67b5fa4ea4f814384d63af4[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 26 12:06:26 2015 +0200

    util-logopenfile: don't lock syslog write

[33mcommit c5d939834ffbecc9cc7cefbed1657b4412ccd95d[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 26 12:02:49 2015 +0200

    util-logopenfile: cleaner free function

[33mcommit 1b0f2774f2c5d5df0cd0beeb0133ff9c1729bc51[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jun 1 23:14:41 2015 +0200

    util-logopenfile: don't use atomic for batch_count

[33mcommit e9d26dd510ebdd3c02727861e05e3ba1de5c76ae[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 26 11:53:06 2015 +0200

    util-logopenfile: use a function for redis write

[33mcommit f11b269ef134d1822caa0eb9249fcf9b1a0a66b9[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 26 11:31:41 2015 +0200

    redis-output: fix sensor-name code
    
    The sensor-name was not freed at exist and the result of SCStrdup
    was not checked.

[33mcommit 594f62b52305258b6a39be76b7bdf049c74298d3[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon May 25 19:38:28 2015 +0200

    util-logopenfile: reconnect handling
    
    This patch implements reconnection handling for the redis output.
    A reconnect limitation has been implemented with a limitation of
    one connection per second.

[33mcommit b834e2d19ae66b0ea0798e26818f5b100c2dc7d5[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun May 24 21:52:56 2015 +0200

    util-logopenfile: implement redis pipelining
    
    This patch implements redis pipelining. This consist in contacting
    the redis server every N events to minimize the number of TCP
    exchange. This is optional and setup via the configuration file.

[33mcommit f953fdfbace8c5dbdc0f190147be3ef7ed309bf7[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun May 24 18:07:20 2015 +0200

    util-logopenfile: introduce SCConfLogOpenRedis
    
    Introduce a function to realize the parsing and config file and
    opening of connection to the database. Only used by output-json
    for now it will be usable by other logging modules.

[33mcommit a13be67b5e6c26c53149b88f9565c58f7fbe3381[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun May 24 17:43:51 2015 +0200

    util-logopenfile: add write function
    
    Introduce a function LogFileWrite that will handle the writing with
    respect of the type defined in the configuration. This is used in
    this patch to remove the write complexity from output-json.

[33mcommit 60ea49c777ad839fc6306f5731fd12aa98b0f011[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat May 23 16:59:16 2015 +0200

    output-json: add sensor-name config variable
    
    When using redis output, we are loosing the host key (added by
    logstash or logstash-forwarder) and we can't find anymore what
    Suricata did cause the alert.
    
    This patch is adding this key during message generation using the
    'sensor-name' variable or the hostname is 'sensor-name' is not
    defined.

[33mcommit 9286360f866b723c214d415e3314c76422b15bd9[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Feb 8 12:20:59 2015 +0100

    travis: add libjansson and hiredis
    
    Install the libs and force usage of hiredis. We will have a more
    complete build with this two libs.

[33mcommit 31c91d53bb0e784fa46fd4c67af75eb453c1d01e[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 26 22:49:07 2015 +0200

    output-json: improve hiredis define
    
    Use #ifdef instead of #if and don't include the header which is
    not needed anymore.

[33mcommit eef5678e5e4ae210e3a0137cad7650ccd798369b[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Feb 7 13:10:23 2015 +0100

    output-json: add redis support
    
    This patch adds redis support to JSON output.

[33mcommit 769722101e91cf59cd0a166870b0220bb6dbc98d[m
Author: Giuseppe Longo <glongo@stamus-networks.com>
Date:   Mon Oct 12 11:39:36 2015 +0200

    decode: add flow memcap counter
    
    This adds a counter indicating how many times
    the flow max memcap has been reached
    
    Since there is no always a reference to FlowManagerThreadData,
    the counter is put in DecodeThreadVars.
    
    Currently when there is no counter increase in one call of FlowGetNew
    because we don't have tv or dtv at the time of the call.
    
    The following is a snippet of the generated EVE entry:
    "flow":{"memcap":0,"spare":10000,"emerg_mode_entered":0,"emerg_mode_over":0,"tcp_reuse":0,"memuse":7085248}

[33mcommit c2704c39333c2866d62020e1aa4e749968fb3a01[m
Author: cardigliano <cardigliano@ntop.org>
Date:   Wed Oct 21 01:23:32 2015 +0200

    workers runmode: allow multiple input devices
    
    This fix allows multiple input devices when running in 'workers' mode.

[33mcommit 16b210f1ea500193d942955eec2572fe6e2df46a[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Oct 21 14:56:38 2015 +0200

    json-file: avoid allocation

[33mcommit f8b6768d050573aff955df3a2661340a040af345[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Oct 21 14:50:25 2015 +0200

    json-email: fix coverity alert
    
    The code was not correct and coverity did detect a potential
    overflow problem that should not happen because of the structure
    of md5 string and of format.

[33mcommit dc2c8967819fc1e60cbc992c85893e166617f8fc[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Oct 8 15:20:25 2015 -0600

    app-layer setup scripts: enable new modules on copy
    
    The templates are disabled by default, enable the copy
    of the template so the new app-layer modules are enabled by
    by default.

[33mcommit 9697a09d219ca8abe9bb948df9120338646f23ca[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Oct 8 14:54:57 2015 -0600

    template app-layer: disable if not in config file (default)
    
    Unlike other app-layer protocols which are enabled by default,
    disable this one by default as it likely shouldn't be enabled
    in production use of Suricata.

[33mcommit 38c21077e63e0212ed0e95936a9843fbcdeb7a70[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Oct 14 14:17:19 2015 +0200

    json-email-common: fix email extended logging
    
    Two structure fields were uninitialized and used has a bit field.
    Weird behavior were seen in list of logged fields due to that with
    some build options.

[33mcommit 3676bd667d494ac93c29e1092715435c052eef31[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Oct 14 13:48:29 2015 +0200

    json-email-common: suppress commented code

[33mcommit 484885b70fe0ee380489f63545c49bd898afbc6d[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Oct 14 12:13:06 2015 +0200

    json-email-common: can now log same header twice
    
    Multiple events can be applied on a transaction so we may need to
    log the same header twice.
    
    The HDR_IS_LOGGED flag was making it impossible. And this system
    is usless as email application layer is transaction based.

[33mcommit af6d1dddfa0da9b0f6db8655e3c3dc0b66f01d31[m
Author: Torgeir Natvig <torgeir.natvig@gmail.com>
Date:   Sat Oct 17 00:44:49 2015 +0200

    Bugfix for detect-engine.luajit-states
    
    detect-engine is a list, and luajit-states was looked up as a map.

[33mcommit 70cc1ddbcd60fdb9373350e34aa276a98a9727e1[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Oct 2 09:23:13 2015 +0200

    lua: SSH output support
    
    Support SSH in lua output scripts (Feature #1569).

[33mcommit 7eab16c47809f79464ea15d9c349648fc25c5b44[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Fri Oct 2 09:00:51 2015 +0200

    lua: SSH support
    
    Support SSH in lua detection scripts (Feature #1569).

[33mcommit dcbbda505f1abb55739333de0c6c347e30cb5797[m
Author: Alessandro Guido <ag@alessandroguido.name>
Date:   Tue Sep 8 11:39:20 2015 +0200

    Describe new unified2-alert "payload" option

[33mcommit 53bfcf64b7020993dd4d1cb2c2260fb5757e5e8e[m
Author: Alessandro Guido <ag@alessandroguido.name>
Date:   Fri Jun 19 16:57:48 2015 +0200

    Add option to omit payload in unified2 output
    
    Add a boolean option named "payload" to the unified2-alert output type.
    Such options makes suricata omit the payload in the resulting unified2
    file. The default value is true in order to preserve the current behaviour.

[33mcommit 413082afc0bedecc0bc0b6e49e12ee3571d59503[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Sep 21 15:39:37 2015 -0600

    GPL license sync with official gpl-2.0.txt
    
    Synced up with:
    http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt

[33mcommit 580728087cd6f3be4a80177b5d1d8624ac1c9ae8[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Apr 20 15:54:11 2015 -0600

    fix util-host-os-info unit tests.
    
    - Some tests always passed due to the result value being
      initialized to 1.
    
    - Fix tests that now fail.  Looks like just the test were wrong
      and that the code does the right thing.

[33mcommit 4185f3ee9270b51f2e7b0d0a7227029933b79e40[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Sep 22 13:58:41 2015 -0600

    detect-pcre: allow upper cases metachars for host (/W).
    
    Redmine issue 1490.

[33mcommit 6572725a7ada11a33906af4e8243781bac556d43[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Sep 24 14:20:42 2015 +0200

    util-debug: don't colorize if a redirect is used
    
    It is better to disable the color mode when a redirect of stderr
    is done to avoid getting colorized output in the generated file.

[33mcommit 4d83318b464143b29e1e2632d94b3c1c2b5cc487[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 24 12:24:15 2015 +0200

    defrag tests: fix compiler warnings
    
    defrag.c:2423:9: error: variable 'p' is used uninitialized whenever 'if' condition is true [-Werror,-Wsometimes-uninitialized]
        if (p1 == NULL || p2 == NULL || p3 == NULL) {
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    defrag.c:2460:9: note: uninitialized use occurs here
        if (p != NULL) {
            ^
    defrag.c:2423:5: note: remove the 'if' if its condition is always false
        if (p1 == NULL || p2 == NULL || p3 == NULL) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    defrag.c:2423:9: error: variable 'p' is used uninitialized whenever '||' condition is true [-Werror,-Wsometimes-uninitialized]
        if (p1 == NULL || p2 == NULL || p3 == NULL) {
            ^~~~~~~~~~~~~~~~~~~~~~~~
    defrag.c:2460:9: note: uninitialized use occurs here
        if (p != NULL) {
            ^
    defrag.c:2423:9: note: remove the '||' if its condition is always false
        if (p1 == NULL || p2 == NULL || p3 == NULL) {
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
    defrag.c:2423:9: error: variable 'p' is used uninitialized whenever '||' condition is true [-Werror,-Wsometimes-uninitialized]
        if (p1 == NULL || p2 == NULL || p3 == NULL) {
            ^~~~~~~~~~
    defrag.c:2460:9: note: uninitialized use occurs here
        if (p != NULL) {
            ^
    defrag.c:2423:9: note: remove the '||' if its condition is always false
        if (p1 == NULL || p2 == NULL || p3 == NULL) {
            ^~~~~~~~~~~~~
    defrag.c:2427:5: note: variable 'p' is declared here
        Packet *p = Defrag(NULL, NULL, p1, NULL);
        ^
    defrag.c:2486:9: error: variable 'p' is used uninitialized whenever 'if' condition is true [-Werror,-Wsometimes-uninitialized]
        if (p1 == NULL || p2 == NULL || p3 == NULL) {
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    defrag.c:2523:9: note: uninitialized use occurs here
        if (p != NULL) {
            ^
    defrag.c:2486:5: note: remove the 'if' if its condition is always false
        if (p1 == NULL || p2 == NULL || p3 == NULL) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    defrag.c:2486:9: error: variable 'p' is used uninitialized whenever '||' condition is true [-Werror,-Wsometimes-uninitialized]
        if (p1 == NULL || p2 == NULL || p3 == NULL) {
            ^~~~~~~~~~~~~~~~~~~~~~~~
    defrag.c:2523:9: note: uninitialized use occurs here
        if (p != NULL) {
            ^
    defrag.c:2486:9: note: remove the '||' if its condition is always false
        if (p1 == NULL || p2 == NULL || p3 == NULL) {
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
    defrag.c:2486:9: error: variable 'p' is used uninitialized whenever '||' condition is true [-Werror,-Wsometimes-uninitialized]
        if (p1 == NULL || p2 == NULL || p3 == NULL) {
            ^~~~~~~~~~
    defrag.c:2523:9: note: uninitialized use occurs here
        if (p != NULL) {
            ^
    defrag.c:2486:9: note: remove the '||' if its condition is always false
        if (p1 == NULL || p2 == NULL || p3 == NULL) {
            ^~~~~~~~~~~~~
    defrag.c:2490:5: note: variable 'p' is declared here
        Packet *p = Defrag(NULL, NULL, p1, NULL);
        ^
    6 errors generated.
    make[3]: *** [defrag.o] Error 1

[33mcommit 6f223c6dba2f62550ad6bece750d4dded2041858[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Aug 27 13:59:30 2015 -0600

    defrag: stop reassembly at the first packet with more flags not set

[33mcommit 3aa7e38c14b0c0d04913f4c68bfa013f6567367c[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Jun 15 11:14:16 2015 -0600

    defrag: tracker initialization cleanup
    
    Remove the old tracker reset macro which is no longer being used.
    Clear last_seen and remove flags on initialization.
    Remove extra call to DefragTrackerInit as it was being called 2x
    for each new tracker.
    
    Now that DefragTrackerNew is just a wrapper for DefragTrackerAlloc,
    remove it and just call DefragTrackerAlloc directly.

[33mcommit 69b4218afc9bf1888d3ab34ff305e05f7b6eb7bb[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Jun 15 11:06:50 2015 -0600

    defrag: don't use trackers marked for removal
    
    These trackers are likely for completed fragments, but have
    not been cleaned up. If a packet on the same flow with an
    already seen IP ID is seen, it could be reused prior to
    being properly reinitialized.

[33mcommit ed400acf8e946404bbc0634df153bf155dcae345[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Jun 18 14:18:49 2015 -0600

    defrag: unit test for tracker reuse (current fails)
    
    Will be fixed in subsequent commits as tracker reuse is fixed.

[33mcommit 3e29a232087ddac825d1779eae23accbafbade10[m
Author: Alexander Gozman <a.gozman@securitycode.ru>
Date:   Sun Sep 27 22:03:12 2015 +0300

    unix-manager: log client (dis)connection with DEBUG level.
    
    Also select/receive errors are logged as ERROR.

[33mcommit 437fe40660d97f7507fdf4e6ad9e33b2d9a13cd2[m
Author: Alexander Gozman <a.gozman@securitycode.ru>
Date:   Tue Sep 29 00:08:55 2015 +0300

    Feature 1527: ability to compile as a position independent executable
    
    Adds corresponding configure option which enables proper CPPFLAGS
    and LDFLAGS.

[33mcommit e634fcee60d0c67394743e1f00720b7dc7217a20[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed Sep 30 10:42:26 2015 +0200

    lua: TLS lua output support
    
    Support TLS in lua output scripts (Feature #1568).
    
    function init (args)
        local needs = {}
        needs["protocol"] = "tls"
        return needs
    end
    
    function setup (args)
        filename = SCLogPath() .. "/" .. "lua_tls.log"
        file = assert(io.open(filename, "a"))
    end
    
    function log (args)
        ts = SCPacketTimeString()
        ipver, srcip, dstip, proto, sp, dp = SCFlowTuple()
    
        version, subject, issuer, fingerprint = TlsGetCertInfo();
        if version == nil then
            return 0
        end
    
        file:write(ts .. " " .. srcip .. ":" .. sp .. " -> " .. dstip  ..
                   ":" .. dp .. "  TLS: " .. "Subject='" .. subject ..
                   "' " .. "Issuerdn='" .. issuer .. "\n")
        file:flush()
    end
    
    function deinit (args)
        file:close(file)
    end

[33mcommit 2ecab3f76523e9078afe1fc425b5972520680dda[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Oct 2 23:40:54 2015 +0200

    decode-mime: fix body md5 computation
    
    Previous code was wrongly supposing the lines are ending with CRLF.
    But this is not the case so we must propagate the length of end of
    line delimiter to be able to compute the md5 of the mail body.

[33mcommit 53419b93c861b948890bb2ac12e13982e72ae726[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Sep 23 14:49:03 2015 +0200

    util-decode-mime: fix some unittests
    
    Unittests were failling when ASAN is activated because it was
    finding some read outside of bounds. This patch fixes the different
    reported issues.

[33mcommit dbb3e1976e417c3b1346e17b747f2ebd41328328[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Sep 23 14:47:40 2015 +0200

    util-decode-mime: fix IsIpv6Host function
    
    Using in6_addr is better when calling inet_pton. This fixes an
    issue reported by ASAN.

[33mcommit 38750f1313ba4cbda20fb84adf99fe618ecab2fc[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Sep 23 13:54:38 2015 +0200

    smtp-layer: remove FIXME and del excessive newline

[33mcommit 6f04988ba125ab6885340f1baa1eda0c06299104[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Sep 15 16:36:37 2015 +0200

    output-json: add tx_id to events
    
    This patch updates alert, stmp and http JSON logging to have a
    tx_id in the root of the JSON log message.

[33mcommit 113d6a395020396d9d29e0ff7cb796caa85f9bc9[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Sep 15 16:34:44 2015 +0200

    output-json: add create header with tx function
    
    To be able to correlate between events, it is better to have the
    tx_id information in the root object. This function adds a new
    function to automate the addition of the field.

[33mcommit 96412e8921b6c145ddc8bf06551a6e8abfb4d79d[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Sep 15 15:48:19 2015 +0200

    json-email: JsonEmailAddMetadata update
    
    Add tx_id to the list of params to be in sync with recent changes.

[33mcommit bf6b0145e2758784643576312bff8d33bf730ceb[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Sep 15 09:36:00 2015 +0200

    json-http: gen metadata function with tx_id param

[33mcommit d9b602fc0f243b4ed42e70aa2cf7f8a0060613d8[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Sep 14 11:39:19 2015 +0200

    json-smtp: add tx_id param to metadata generation
    
    In all metadata generation contexts we know the tx_id so we better
    used it to log the correct transaction and not an other one.

[33mcommit 0ef0f1d526386d3aa85cd5dd5683d326c2aef1b1[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Sep 14 11:38:39 2015 +0200

    json-smtp: change copyright date

[33mcommit f03a7a032f09d6d4e822319ff73ed3b5e708549f[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Sep 13 19:08:52 2015 +0200

    json-alert: add smtp elements in alert

[33mcommit 77a5273cdef1bf067fddacd8ba5f34e21a2ed333[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Sep 13 19:07:34 2015 +0200

    json-smtp: fix a debug message

[33mcommit 946f2a6acc4541e92584d2db628d940f2e1a2e39[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed May 20 10:23:36 2015 +0200

    email-json: add bcc to extended fields

[33mcommit fbd6428f1bb082b35b24c9b1e4715c2a2ce8128f[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 12 17:56:59 2015 +0200

    smtp-layer: add MAIL FROM parsing test in unittest

[33mcommit 534360fc0202c66d8877c5c8b55dbee5ead320b8[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 12 17:31:56 2015 +0200

    smtp-layer: add HELO parsing test in unittest

[33mcommit 8fd88f543d43ad0f291fc02bf04c40b6676ed03e[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 12 16:55:49 2015 +0200

    yaml: add comment describing smtp extended

[33mcommit f81f353d1f75a790dc84a200aa25a2fe38e142bc[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 12 16:53:20 2015 +0200

    email-json: add 'date' field extraction

[33mcommit 6f033747ec7853d048683acb743ba124ad9d15d6[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 12 16:52:12 2015 +0200

    util-decode-mime: add unittests for field fetching

[33mcommit 17edff6c5e7cb4f5d41da8d17737681a3879ba71[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 12 16:50:16 2015 +0200

    unittests: finally register MIME tests

[33mcommit 6e0668125c16b729106ee5b5e4bda69135c5cf7d[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu May 7 14:52:12 2015 +0200

    email-json: improve log message

[33mcommit dad1f85edb59406a00164e6533c31ca12253b790[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu May 7 14:44:14 2015 +0200

    email-json: add author
    
    Add myself as author and change the copyright date.

[33mcommit d1b0a5aa6d6368c40c347b2fde8ddfacded1cc53[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 5 14:20:13 2015 +0200

    yaml: document new MIME features

[33mcommit caa8982b4324c7e63cd7f72afb4208257bdec1d1[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu May 7 11:38:15 2015 +0200

    email-json: add some fields
    
    This patch adds some fields to the list of extracted fields.

[33mcommit ca52fa91dd7e03a23dd417c19480db079182ad67[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 5 15:16:35 2015 +0200

    email-json: body md5 logging is optional

[33mcommit a719ea3c928e0e4c961713c8b6dca72b0abd99a7[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 5 11:55:46 2015 +0200

    email-json: add capa to display subject md5
    
    To be able to identify mails with identical subjects without
    using the subject itself as a key, it is possible to use the md5
    hash of the subjet string. This allows to limit the privacy impact.

[33mcommit 881aa3efce7e12530d606057ba2d99b35a8ddeab[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 5 10:32:16 2015 +0200

    email-json: don't log subject by default
    
    It seems to be a bit too intrusive for the privacy so this patch
    adds this field to the extended logging only.

[33mcommit 7bb38f7c301741deedd4945c04500e4707746951[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 5 10:16:10 2015 +0200

    decode-mime: fix typo in comment

[33mcommit 431dc155aa8cfec8df96b7caa5140e26ab27fa25[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon May 4 18:14:03 2015 +0200

    email-json: delete white space from "from"
    
    The From field is handled separatly and it could also starts by
    white spaces.

[33mcommit abcaf46193474dc4a1acc6984da1318570c16d58[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon May 4 18:11:37 2015 +0200

    email-json: delete leading white spaces
    
    Some mail clients are using tabulation and/or space for comma
    separated list. This patch removes them so the event will contain
    only significative characters.

[33mcommit 4c0f8803e7e4b9848af1c2e2a976ca4dbf66909f[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon May 4 17:42:33 2015 +0200

    email-json: factorize the code

[33mcommit a7ef0c05ba28f8d41776ebc1411d9a9e4cc7faf7[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon May 4 17:35:27 2015 +0200

    email-json: add LOG_EMAIL_COMMA type
    
    extract these data types by treating them as a comma separated list.

[33mcommit 3456ec467f7c36f5cd5f324f75c7a8f43e9afc71[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 5 14:33:50 2015 +0200

    email-json: add custom fields support
    
    This patch adds a way to specify which MIME fields to log via
    the custom keyword in the EVE configuration. it also adds an
    extended logging where some fields are added. The logging support
    mono value fields as well as multivalue fields via the use of
    JSON array.

[33mcommit 714c30a127828bfff8e8c44e19c3ffc7316744df[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 5 14:31:55 2015 +0200

    decode-mime: introduce MimeDecFindFieldsForEach
    
    This patch introduces a new function that can be used to handle
    multivalued MIME fields. A callback function can be called for
    each corresponding field value.

[33mcommit 54038f5691c0e3367651a1fa0b8ff3346ad5f07b[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Apr 30 15:24:52 2015 +0200

    file-json: log 'email' information
    
    Log information coming from email/MIME decoding in the message.

[33mcommit ab941305d53cacd20697403b4ced1b26e44dacc0[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Apr 30 14:45:52 2015 +0200

    email-json: add function to export data

[33mcommit 77119a31863ee9cc3bedcd8abf007914ba7942cc[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Apr 30 13:44:58 2015 +0200

    file-json: output smtp proto info

[33mcommit 47a199ee978608ba4351c40f48c00833bdc3b6c6[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Apr 30 13:28:49 2015 +0200

    smtp-json: introduce function to output smtp data

[33mcommit 94dbd303e4744a40f3761265be7c73a7a4754764[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Apr 30 12:53:09 2015 +0200

    file-json: log http data using common function

[33mcommit 4ef12dcf5d0d7e47f25a5a1cb78b9c2b73f8deef[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Apr 30 12:52:22 2015 +0200

    alert-json: use new JsonHttpAddMetadata function
    
    This patch uses the newly introduced function to handle the logging
    of HTTP data.

[33mcommit bccabe3813627abfe4f7a77272d1b195a8115753[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Apr 30 11:08:47 2015 +0200

    http-json: introduce JsonHttpAddMetadata function
    
    This function will be usable in other logging components to add
    the http data to their messages.

[33mcommit d7e13c2c039901fdc4042431d693be31fe1c7ef1[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Apr 29 18:25:05 2015 +0200

    email-json: output MIME parsing status
    
    If the status is not PARSE_DONE then in that case we may have
    imcomplete information. Increasing the stream reassemly depth
    in that case would be a good idea.

[33mcommit a233a982ea1495b0d473c8affecac5dbb4f66b20[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Apr 29 18:24:09 2015 +0200

    decode-mime: add function to get status
    
    This new function return the textual status of MIME parsing.

[33mcommit 990055842830a65cb31ea51c52a06412c3d6c191[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 5 15:00:58 2015 +0200

    smtp: add 'body-md5' mime option
    
    This option will allow the user to select weither or not he wants
    to journalize the md5 of the mail body.

[33mcommit ea311c159424a8a76e2b76875f65e38737e1bc6c[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Apr 28 13:23:23 2015 +0200

    email-json: export md5sum of body
    
    The body_md5 has been added and contain the value of the md5sum
    of the body.
    
    This patch is using the state PARSE_DONE on the MIME state to
    detect when a message has been completely parsed.

[33mcommit d39009ca582af30a1478934be7259294a7247d09[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Apr 24 16:17:19 2015 +0200

    decode-mime: compute body md5
    
    This patch is computing the md5 sum of the body of the MIME message.
    This will allow to detect messages with same content and sent to
    different people.

[33mcommit e43eb76abd043c5eb14240d808b66a6d07d4f1d2[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Apr 24 13:25:41 2015 +0200

    app-layer-stmp: simplify code
    
    Delete a only used once goto to a point where we only do a return.

[33mcommit 0f3979cc814a35a63ba7aca8582551439bd5ab59[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Apr 22 14:41:20 2015 +0200

    output-json-smtp: output RCPT TO fields
    
    This patch uses an array to output the RCPT TO fields to the
    JSON message.

[33mcommit 752fdba95725a94cf1cb31145009fd90448397b3[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Apr 22 14:40:30 2015 +0200

    app-layer-smtp: parse and extract RCPT TO fields
    
    Add the RCPT TO fields to a linked list stored in the transaction.

[33mcommit 2abae3f0a13237a3a945b058b03147b59acdc8e0[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Apr 17 16:34:56 2015 +0200

    smtp-json: update SMTP EVE messages
    
    This patch updates SMTP message to have them feature a 'smtp'
    section which will contain all fields coming from the smtp
    protocol.

[33mcommit 7bca8268bcae54db5a2e7ac0914f63f78a39d49b[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Apr 17 10:46:15 2015 +0200

    app-layer-smtp: extract and store HELO and MAIL FROM
    
    This patch updates the SMTP transaction and SMTP state to be able
    to contain the HELO and MAIL FROM fields.

[33mcommit 5c26a2f2c8f52a4612f6c185dfd5af912f418589[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Apr 17 16:13:23 2015 +0200

    email-json: move email fields to email section
    
    This patch changes the way smtp message are written. It is using
    the "email" key to store the email related fields. This will
    allow to do the same search through SMTP and IMAP if we implement
    this last one.

[33mcommit 77302e5d51f8a0f8c4486a39a7b5c8bd243aa3d8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 29 22:07:57 2015 +0200

    threshold: remove debug message from info loglevel

[33mcommit fc7f090cd3268a3a624177cef32a9576b74975e3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 21 08:34:19 2015 +0200

    flow: add missing storage size to checks, output

[33mcommit 37fa4a48762dda0a8ed5c4f6bc68b383138afb63[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Sep 20 22:54:32 2015 +0200

    host: update host size logic
    
    Instead of using (sizeof(Host)+HostStorageSize()) in many places,
    create a simple size variable that is set during setup.

[33mcommit 480e91edac2d071f37b76d278e0b76a5f684a2fd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Sep 20 22:39:17 2015 +0200

    ippair: update ippair size logic
    
    Instead of using (sizeof(IPPair)+IPPairStorageSize()) in many places,
    create a simple size variable that is set during setup.

[33mcommit ff769b73a77bcaaa234a9b32f1977045af51cc2b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 21 15:01:56 2015 +0200

    stream: improve retransmission detection
    
    Consider packets starting before last_ack and ending after it also
    to be retransmissions. This way we can see if they are having
    different data.

[33mcommit 6b2f831a709382c78a71a03249b2ec412fda849f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 19 21:56:29 2015 +0200

    mpm: SGH maxlen was actually minlen, so rename

[33mcommit 2716c786283799745436637cc6534bd0059a29e5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 19 21:46:34 2015 +0200

    mpm: improve SGH content len tracking
    
    SGH's track content length for rule grouping.
    
    This patch changes the logic to only consider the pattern that is
    used in the mpm for a sig.

[33mcommit e529ebb50edbed9fe6aa6d1a5ad66bbf6bc17948[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 19 20:53:26 2015 +0200

    mpm: redo uri maxlen logic
    
    The mpm_uricontent_maxlen logic was meant to track the shortest
    possible pattern in the MPM of a SGH. So a minlen more than a maxlen.
    
    This patch replaces the complicated tracking logic by a simpler
    scheme. When the SGH's are finalize, the minlen is calculated.
    
    It also fixes a small corner case where the calculated "maxlen" could
    be wrong. This would require a smaller pattern in a rule to be forced
    as fast pattern.

[33mcommit df95d375bbe5c7ddfb1316baf8f2f025d22beb3d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 19 19:33:14 2015 +0200

    detect: improve comments on mpm

[33mcommit 496f9800ac8c35d833cd75b7959caf2103728f61[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 19 19:28:52 2015 +0200

    mpm: remove used counter

[33mcommit c53c9b4b2009f769f2ab6e6c670f6e68ad147213[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 19 18:56:43 2015 +0200

    mpm: remove bloated counting logic
    
    Counters were only used to print debug info.

[33mcommit da7bad7c1b5d95c5997b94c1368aa1837dc234ad[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 19 18:41:51 2015 +0200

    mpm: improve debug output

[33mcommit 977074930ba9b88a5ad328ba61534a1241694052[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 19 18:41:36 2015 +0200

    mpm: use IPPROTO_TCP for readability

[33mcommit a559c41295e395e8db01a18a543423a623837afa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 19 13:58:03 2015 +0200

    mpm: optimize & debug validate
    
    Wrappers are called only if a mpm_ctx is available. So remove the test
    for a null ctx and replace it by a debug validation BUG_ON.

[33mcommit 0dd3b73db2d0264cbabcd402c76a171306f2ac72[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 19 13:57:57 2015 +0200

    mpm: assume we'll likely have a mpm_ctx

[33mcommit 7c336f4190c7b78720312a0dae5c3430df3b8955[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 19 13:24:47 2015 +0200

    mpm: indent fix, no functional change

[33mcommit a00d83f1f53ab9ec39f3144181bd33e4103de863[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 19 13:13:55 2015 +0200

    mpm: change direction checking in mpm wrappers
    
    Instead of having reachable assertions, use DEBUG_VALIDATE_BUG_ON

[33mcommit 804f8619671a0f3847b911cfd6e183c26ff9dd86[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 19 13:11:56 2015 +0200

    debug validation: introduce DEBUG_VALIDATE_BUG_ON
    
    DEBUG_VALIDATE_BUG_ON(exp) will call BUG_ON(exp) if debug validation
    is compiled in. Otherwise it's a no-op.

[33mcommit e755913b4b6ca3d8f184932841c2f9e8f18fa479[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 19 13:11:35 2015 +0200

    mpm: minor fixes and cleanups

[33mcommit cacf425bd38aeee48c6cb77189d9412dbbe3d4e2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 31 19:00:35 2015 +0200

    stream: improve handling of GAPs at stream start
    
    Detect and handle gaps at the start of the stream, when there may
    be no segments in the list (yet).

[33mcommit 574ef0ad2a47a2ee0b59bd23fea58c8f02499d1a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 27 23:49:15 2015 +0200

    stream: RST last_ack update fix
    
    Only use ACK if ACK flag was set and ACK value is valid.

[33mcommit 3ca44219dc65e17461db5bae96cef1818a7eec43[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 27 22:58:32 2015 +0200

    proto detect: more bypass conditions
    
    More exceptional cases for protocol detection. In very unbalanced flows,
    where just a few bytes are sent toserver and many toclient, proto detect
    might not complete in time on the toserver direction. This can lead to
    queuing up many segments in the toclient direction.
    
    Another case is that in come cases the stream is flagged as proto detect
    done, but the flows proto detect flags are not set. This is now handled
    by the ProtoDetectDone() check.

[33mcommit fa8dc77dcc73e3e4b9c0374b6eec8b3e5f379fd8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 26 16:52:09 2015 +0200

    debug validation: add segment list sanity check

[33mcommit e67188e437b39f21cb2f7452cd300c522ce97252[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 27 18:57:48 2015 +0200

    detect: fix issue with smsg and seq wraps
    
    Due to a broken sequence number check, detect could fail to process
    smsgs in case of a sequence wrap. This could lead to excessive use
    of smsg's but also of segments, since these aren't cleared until the
    smsg containing them is.

[33mcommit 8ac49d9129603efd5698c9851f769c6d8cc9aee9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 1 22:46:14 2015 +0200

    stream: allow next_seq catch up after pkt loss
    
    If next_seq falls behind last_ack, force update it.

[33mcommit 596465b76d9bd89102cc4d18e38f991185b6666a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 31 18:50:06 2015 +0200

    stream: use reassembly fast path after proto detect
    
    Use the reassembly fast paths only after protocol detection has completed.
    In some corner cases the sending of smaller segments lead to protocol
    detection failing.

[33mcommit 34ed15e1823dd85f89bef7944aac130bd0b7e44f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 26 16:15:07 2015 +0200

    stream: fix protocol detection issue for GAPs
    
    If the protocol required TOSERVER data first, but the SSN started with
    a GAP, then the TOCLIENT side would get stuck in an expensive path:
    
    1. it would run detection on TOCLIENT
    2. it would try to force reassembly for TOSERVER
    3. it would reset the detected protocol as TOSERVER failed
    4. it would not evict any segment
    
    This had 2 consequences:
    1. on long running sessions this could lead to using lots of memory
       on segments, denying other sessions resources
    2. wasted cycles on protocol detection and segment list management
    
    This patch introduces a fix. It checks in the (2) stage above, whether
    the opposing stream (that we depend on) it is a NOREASSEMBLY state. If
    so, it gives up on this side of the session as well.

[33mcommit 708e80c90023b4b122f57542ba92099a661bbca1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 26 14:25:16 2015 +0200

    stream: optimize proto detect segment handling
    
    In case of protocol detection not yet being complete, the segment
    list was walked unconditionally to unset the app layer processed
    flag. Optimize this to bail on the first segment that doesn't have
    the flag set.

[33mcommit 84fd28eaed25c61ad2bea87800bfae756cc0c03f[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Sep 16 11:23:34 2015 -0600

    app-layer setup scripts: fix header substitution.
    
    Fixes make distcheck.

[33mcommit a2867153670f776a338fc698bca08b33ae36d3b6[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Sep 13 23:34:16 2015 +0200

    host-storage: document host storage API

[33mcommit f8b8b6f753d62ffe5469384b9c420a1f1acb25c2[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Sep 14 10:55:04 2015 +0200

    configure: use pkg_config for libhtp
    
    It was not possible to simply specify PKG_CONFIG_PATH to build
    with an non bundled libhtp. With this patch we don't need anymore
    the htp lib and include configure options.

[33mcommit 4a738023d5ac945f0109ceb13fcc43e3f3095453[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Sep 1 15:20:13 2015 -0600

    app-layer: scripts to setup app-layer templates
    
    setup-app-layer.sh sets up an application layer detector and
    parser template.
    
    setup-app-layer-logger.sh sets up a JSON application layer
    transaction logger for an application parser that has
    already been provisioned.
    
    setup-app-layer-detect.sh sets up a keyword for performing
    content inspections on buffers created by the application
    layer.

[33mcommit 06beca62f58621a05c6027021d093d836ce02323[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Sep 1 12:36:00 2015 -0600

    app-layer: template for application layer content inspection

[33mcommit bcda92134d01b5c8c7b3cf114858ebf67e99f0c2[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Sep 1 12:12:28 2015 -0600

    app-layer: template for application layer tx logger

[33mcommit c1b921265f4d1dc7b843e53b703eaf538c1f7c81[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Sep 1 12:04:34 2015 -0600

    app-layer: template for application layer parser

[33mcommit bcfb3fd5d59e602c2f620ce854c5d9b428c829c3[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Sep 9 22:40:37 2015 +0200

    docker: add ASAN to pcaps build

[33mcommit a4bce14770beee46a537eda3c3f6e8e8565d5d0a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 28 15:03:07 2015 +0200

    development tools: add script to setup detect module
    
    Simplify creation of a new detect module by creating a copy of the
    detect template. It sets the name and registers it in the build
    system. Finally it's registration function is called.

[33mcommit cb060f16fd4e6fea549fac98e752290cee84a8ba[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 30 16:57:53 2012 +0100

    detect plugin: add template

[33mcommit 85b00dcfa06f558d7246d13851e4f61013bbba6a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 27 17:37:52 2015 +0200

    development tools: add script to setup new decoder
    
    Simplify creation of a new decoder.

[33mcommit 830dd324173c19186c6d600a9356ced61d8eb4fc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 25 18:08:55 2015 +0200

    decoder: add template/example
    
    Add fictional example / template for a packet decoder. It's not invoked
    anywhere.

[33mcommit 371648a8c61e93b42f74263bcedb9d1b8b1af354[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 9 21:45:15 2015 +0200

    lua: TLS support
    
    Support TLS in Lua detection scripts.
    
    function init (args)
        local needs = {}
        needs["tls"] = tostring(true)
        return needs
    end
    
    function match(args)
        version, subject, issuer, fingerprint = TlsGetCertInfo();
        if version == nil then
            return 0
        end
        str = string.format("Version %s\nIssuer %s\nSubject %s\nFingerprint %s",
                            version, issuer, subject, fingerprint)
        SCLogInfo(str);
        return 1
    end

[33mcommit 1e84950017e8e74b9449c23ab7a2b35f48aef0d9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 9 21:44:38 2015 +0200

    detect-lua: set direction

[33mcommit 8b3afb69862751f19c70fb82abeec07687e110ab[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 9 21:42:38 2015 +0200

    lua: add direction support

[33mcommit a798cf9518192bb78432cddb43c848f31c22ba3f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 2 13:07:59 2015 +0200

    DNS: refactor tx completion logic
    
    Use simple bool values to track the transaction state in both directions.
    
    A tx is only created in two cases:
    1. full request parsed
    2. response parsed (request missing)
    
    This is true even for multi-packet TCP requests.
    
    This leads to the following tx completion logic for the request side:
    the presence of a tx implies the request is complete
    
    On the response side, we consider the tx complete when we have seen
    the response. If the DNS parser thinks the response was lost, we also
    flag the response side as complete.

[33mcommit 7281ae6e8014b50ab4e37b0b39c4dd739b5434b3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 31 18:05:17 2015 +0200

    yaml: add missing ippair section

[33mcommit 3054af7900788324d37fed9ee496ba1e15db2558[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Aug 29 10:49:26 2015 +0200

    af-packet: don't activate rollover by default
    
    Rollover option is causing issue with TCP streaming code because
    packets from the same flow to be treated out of order. As long as
    the situation is not fixed in the streaming engine, it is a bad idea
    to enable it by default.

[33mcommit 6b2fb3fd5da11641b3c607184c3d538a9d833d8c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 21 09:48:42 2015 +0200

    Fix minor format string issues

[33mcommit ba81c4d290d21b7a86e0c3ba921d28cbecdf6d09[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 20 13:37:09 2015 +0200

    autotools: cleanup
    
    Remove most of the CFLAGS updates from configure. Flags are now (mostly)
    set in AM_CLFLAGS.
    
    Update all -DBLAH additions to CFLAGS to use AC_DEFINE([BLAH], ...)
    
    Improve Lua vs LuaJIT checking.
    
    Improve the configure output a bit.
    
    Lots of smaller cleanups.

[33mcommit 63a47967d70c39179cf7cad67ffc1eb0c912adb2[m
Author: Antti Tönkyrä <antti.tonkyra@f-solutions.fi>
Date:   Sat Aug 15 20:58:56 2015 +0000

    source-pfring: don't set cluster mode when using ZC and VLAN tracking is disabled

[33mcommit c31660e5fdc3e78cace3c7e4aa02cc1f4c24deae[m
Author: gureedo <gureedo@intersvyaz.net>
Date:   Tue Jul 28 09:40:13 2015 +0500

    netmap: enable zero-copy mode only when copy-mode is specified.
    Perform zero-copy checks only when copy-mode is specified.

[33mcommit a7a902a071b91430268a43cdb8eedb3e914ffecb[m
Author: gureedo <gureedo@intersvyaz.net>
Date:   Tue Jul 28 09:35:53 2015 +0500

    netmap: extended comments for options in configuration file.
    Added extended description of the use of OS endpoint with copy mode.

[33mcommit cbf46c44ecec4e59375abdc5b409200b49d47ab9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 20 19:31:23 2015 +0200

    transaction inspection: fix limit enforcement
    
    Make sure we're never wrapping around the size value.

[33mcommit 834c36659e881aa9b140683151309e4229600b09[m
Author: Antti Tönkyrä <antti.tonkyra@f-solutions.fi>
Date:   Tue May 19 20:07:21 2015 +0000

    Allow colon in SSH version, at least some trojaned PuTTY clients have version like Putty-Local: Timestamp HH:MM:SS

[33mcommit 1235c578b25e2e4ca0eb442dfbe962a7a2f22551[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 21 17:27:26 2015 +0200

    xff: support ports and more ipv6 notations
    
    It's not uncommon to see an header like:
    X-Forwarded-For: 1.2.3.4:56789
    
    This patch recognizes this case and ignores the port. It also supports
    this for IPv6 if the address has the following notation:
    X-Forwarded-For: [12::34]:1234
    
    This patch also adds unittests.

[33mcommit 979bd3527799e657ce6084297e7a78999bc7f9e1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 20 19:55:38 2015 +0200

    detect loader: move to own file

[33mcommit cfeaf42caba71f8f34a506758866146f95ff9f5b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 20 18:08:37 2015 +0200

    detect-loaders: configurable amount of loaders

[33mcommit f871c0e1b80e0712bf5dd43cc1799561c5ad42c2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 22 12:41:57 2015 +0200

    debug: packet pool init/destroy validation
    
    Validate packet pool handling:
    - pools are initialized before use
    - pools are not used after destroy
    - pools are not double initialized/destroyed

[33mcommit e44fd97d720801d2d1796bad3ad392831a76c4ed[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 8 15:57:26 2015 +0200

    unittests: use a global packetpool

[33mcommit 99c0a7ad72fbe9ca3ffe7905eebafd8bb418bc5a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 19 15:14:49 2015 +0200

    multi-detect: improve memory handling of setup code

[33mcommit b7b27684c2e093c0f67adbfa9af0400f7104ac3b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 13 15:35:47 2015 +0200

    multi-detect: detect loader for unix socket
    
    Move the tenant load and reload commands to be executed by the detect
    loader thread(s).
    
    Limitation: no yaml parsing in parallel. The Conf API is currently not
    thread safe, so don't load the tenant config (yaml) in parallel.

[33mcommit eb09118d64003b06edaf455bd2bee0cab1fa467b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 12 11:35:47 2015 +0200

    detect: create loader threads
    
    To speed up startup with many tenants, tenant loading will be parallelized.
    As no tempary threads should be used for these memory allocation heavy
    tasks, this patch adds new type of 'command' thread that can be used to
    load and reload tenants.
    
    This patch hardcodes the number of loaders to 4. Future work will make it
    dynamic.
    
    The loader thread essentially sleeps constantly. When a tasks is sent to
    it, it will wake up and execute it.

[33mcommit 82aa419431509bb9c54c22e989b6402d43a3b357[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 13 10:33:11 2015 +0200

    multi-detect: set tenant id on pseudo packets
    
    Store the tenant id in the flow and use the stored id when setting
    up pesudo packets.
    
    For tunnel and defrag packets, get tenant from parent. This will only
    pass tenant_id's set at capture time.
    
    For defrag packets, the tenant selector based on vlan id will still
    work as the vlan id(s) are stored in the defrag tracker before being
    passed on.

[33mcommit e19c41a80726f27672f9ba889ab9b0444cc09399[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 9 18:20:28 2015 +0200

    multi-detect: hash lookup for tenants
    
    Use hash for storing and looking up det_ctxs.

[33mcommit 722c56dbf33035576e205ca739078be2f2337171[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 10 09:59:33 2015 +0200

    detect: clean up thread free code
    
    Introduce DetectEngineThreadCtxFree that doesn't need a 'ThreadVars'
    pointer.

[33mcommit 4f77e8967bb0baab3b8791b8d3a977cf20c5dac1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 8 15:59:46 2015 +0200

    multi-detect: make threshold prefix aware
    
    Make threshold loading prefix aware, so it can be part of tenant
    configuration.
    
    If the setting is missing from the tenant, the global setting is tried
    and if that too is missing, the global default is used.
    
    Note: currently per host thresholds are tracked globally and NOT per
    tenant.

[33mcommit a6e3cec9e560f0fe8c9e297e557d9f2f9a939192[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 8 15:31:52 2015 +0200

    multi-detect: make reference prefix aware
    
    Make reference loading prefix aware, so it can be part of tenant
    configuration.
    
    If the setting is missing from the tenant, the global setting is tried
    and if that too is missing, the global default is used.

[33mcommit 5fff2507497cc0d442a9e9670a145ea42a240e78[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 8 14:55:16 2015 +0200

    multi-detect: make classification prefix aware
    
    Make classification loading prefix aware, so it can be part of tenant
    configuration.
    
    If the setting is missing from the tenant, the global setting is tried
    and if that too is missing, the global default is used.

[33mcommit 4d0975eeac28956720df86c1e836e5fa474ee135[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 14 20:27:30 2015 +0100

    multi-detect: implement reload tenant in suricatasc

[33mcommit d8181802d375e50dff5f15a6532a20861c5b0b23[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 14 20:23:13 2015 +0100

    multi-detect: add reload-tenant command
    
    Allow for a tenant to be reloaded. The command is the same as the
    register-tenant command, so with a yaml and tenant-id as argument.
    However this replaces an existing tenant.

[33mcommit 8673801ea3b7b5bba0c40fb916f33f53898b6069[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Mar 1 10:34:53 2015 +0100

    multi-detect: add tenant id to alert json output
    
    Add a integer field "tenant_id" to the JSON alert output.

[33mcommit f4c9915066402852e647346ed8c9d797ba6781f3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Mar 1 10:09:21 2015 +0100

    multi-detect: store tenant id in packet
    
    Store tenant id in the packet so that the output API's can log it.

[33mcommit 642c267dc4aa8af62fbdc95ddb61c52055093d8e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 20 10:40:32 2015 +0100

    multi-detect: refuse to add duplicate tenant
    
    Generate error if tentant to be added is already loaded.

[33mcommit 4e0683c3f520ff73cef7d33779f269b54aaa8e0f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 20 09:33:53 2015 +0100

    multi-detect: cleanup, reuse tenant loading code
    
    Reuse tenant loading from YAML code for Unix Socket.

[33mcommit 646eb4c2a8387c642f979c78032e064ed88bc1eb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 19 18:45:10 2015 +0100

    multi-detect: load tenants from yaml file
    
    Load tenants and mappings from the suricata.yaml when available.

[33mcommit a20e43f97c0d91e642c1c02ca18293d15361000f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 12 15:30:20 2015 +0100

    suricatasc: add unregister-tenant-handler

[33mcommit a21e88d95534df8dc70b0500b02fd7c45337625e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 6 15:08:44 2015 +0100

    suricatasc: add register-tenant-handler command
    
    Arguments:
    - tenant id (int)
    - name of handler (string)
    - traffic id related to handler (int, optional)
    
    Examples:
    - register-tenant-handler 1 vlan 1111
    - register-tenant-handler 8 pcap

[33mcommit 216638c3428819dd7b4254027d5cd48ea8af0191[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 12 15:56:38 2015 +0100

    multi-detect: implement unregister-tenant-handler
    
    Remove a tenant handler from the list and apply it.

[33mcommit 93f856a1b309f84796f182ae95483a383c3edacc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 12 14:13:46 2015 +0100

    detect: don't error out on no de_ctx
    
    This can happen on a multi-detect setup with no registered
    engines yet.

[33mcommit b6f290fac74c51384fb6a89feb94f25bd740d5a8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 12 12:39:27 2015 +0100

    multi-detect: set selector from yaml
    
    Yaml setting is: multi-detect.selector
    
    Implement 'vlan' and 'direct'.

[33mcommit c72b7f83b87982b7b03600b08e8fd6d75da9bfa0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 12 12:08:33 2015 +0100

    multi-detect: error on start if no selector registered
    
    Force user to select the method at startup.

[33mcommit 1127ad66b46a8322438a99b602974faaf60ff770[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 12 14:14:35 2015 +0100

    multi-detect: register counters on 'master' det_ctx
    
    Otherwise counters are only registered after the stats api is
    already fixed.

[33mcommit 7c581c0ffcaa66b6ebd62b8f3918ad1a9d73072e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 12 11:04:35 2015 +0100

    multi-detect: allow start up with 0 tenants

[33mcommit 6d92e8d220d4e3924c92e202e6ed608e23ca5db9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 6 16:01:09 2015 +0100

    unix-socket: implement register-tenant-handler
    
    Register tenant handlers/selectors based on what the unix command
    "register-tenant-handler" tells.
    
    Check traffic id before adding it. No duplicated registrations for
    a traffic id are allowed.

[33mcommit 1893c5edb1f239985ecaad8afafac08647034485[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 5 18:58:26 2015 +0100

    multi-detect: initial selectors for tenants
    
    The Detection Thread has the TenantGetId pointer which allows it
    to select a tenant id based on the packet.

[33mcommit 0ff6d3dcfd9c61e320fd83d3cdbec371de286722[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 30 15:04:38 2015 +0100

    detect: select detect engine at Detect entry
    
    Limited to Pcap only currently.

[33mcommit bc7e9be5c64b191521bdbe9f198392a59a5b84d5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 30 14:27:05 2015 +0100

    unix-socket: allow tenant id with pcap-file
    
    Register the tenant id that the pcap-file optionally got.

[33mcommit bea66156b9b3255032a29dd1f3f5e73bdf506390[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 30 13:20:12 2015 +0100

    pcap-file: set tenant-id if available
    
    Set the id to each packet's 'pcap_v' structure.

[33mcommit 127d8183d78c9e9f6d75dcdc139c1eb79bca1e4c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 30 13:03:13 2015 +0100

    suricatasc: allow for tenant id in pcap-file
    
    Allow for an optional 'tenant id' argument to pcap-file. This will
    allow us to force the pcap to be inspected by this tenant.
    
    If ommited it's 0, which means it's disabled.

[33mcommit 98d265f40b63538ca2c15996d0fda1f1e6cb8644[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 29 16:40:23 2015 +0100

    detect: use multi tenant thread init if MT enabled

[33mcommit b653479815175aa12377b4293f37b5476a437ff7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 29 14:39:01 2015 +0100

    detect: make multi tenancy a global switch
    
    At start up we will set this flag based on "multi-detect.enabled".

[33mcommit 3f12bdd4f8d78d40b7bf21974fdcdf9eb2b8ebeb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 29 11:33:11 2015 +0100

    tenants: apply added/removed tenant
    
    Apply to the engine.

[33mcommit def2b58725e6876abecceccecb096ba005eb34bc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 29 11:20:09 2015 +0100

    detect: initial MT lookup logic
    
    In the DetectEngineThreadCtx, store another DetectEngineThreadCtx per
    tenant.
    
    Currently it's just a simple array indexed by the tenant id.

[33mcommit 147a6d2bfd899d16a68d01874bbc8dda71ff791f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 12 19:00:16 2015 +0100

    multi-detect: (un)register-tenant unix socket commands
    
    Make available to live mode and unix socket mode.
    
    register-tenant:
        Loads a new YAML, does basic validation.
        Loads a new detection engine
        Loads rules
        Add new de_ctx to master store and stores tenant id in the de_ctx so
            we can look it up by tenant id later.
    
    unregister-tenant:
        Gets the de_ctx, moves it to the freelist
        Removes config
    
    Introduce DetectEngineGetByTenantId, which gets a reference to the
    detect engine by tenant id.

[33mcommit 3aa58f25ad51a68b57946f06a2423a26e41400c8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 22 16:33:56 2015 +0200

    eve alert: fix stream payload printing

[33mcommit 2ef0ebb24b2a8f762e1545eddab47c2c1778490e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 17 21:05:14 2015 +0200

    detect: fix pass transaction handling
    
    If a flow was 'pass'd, it means that no packet of it will flow be handled
    by the detection engine. A side effect of this was that the per flow
    inspect_id would never be moved forward. This in turn lead to a situation
    where transactions wouldn't be freed.
    
    This patch addresses this case by incrementing the inspect_id anyway for
    the pass case.

[33mcommit 06ee2bc87e77bcb981a56ffbe74e7e55757146bf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 17 17:49:01 2015 +0200

    detect: set flow noinspect on pass in applayer/stream
    
    If a pass rule matches in the reassembled stream and/or in the
    app-layer state, it means the rest of the flow should not be
    inspected.

[33mcommit bbc9874b817fcdfda4fac71e806bc4c077ba001e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 17 15:31:56 2015 +0200

    http: destroy htp_tx_t even if incomplete

[33mcommit 814f0b40945f238b7168809136ebc02ef3c8b92e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 17 13:38:36 2015 +0200

    detect: make http prefilter use disrupt flags

[33mcommit b592f98727ec584b6fd249fc2b6fc2da730f5f34[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 17 13:37:46 2015 +0200

    detect: optimize http prefilter handing

[33mcommit 6946e0be55e89f546f842bca3b2f64b479cb4277[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 17 13:32:31 2015 +0200

    detect: pass flags to inspect_id update logic

[33mcommit c087708fa999c18ffbf486366db6386996fed438[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 17 13:10:15 2015 +0200

    output-tx: use disrupt flags

[33mcommit 00ef789ffcae70ac2f6ff199ede53340385eeafb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 17 13:09:37 2015 +0200

    app-layer: pass full flags around in tx handling

[33mcommit ea571add738d73e1e8bbe6c4206c7d24813ad237[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 16 16:43:19 2015 +0200

    app-layer: disruption flags
    
    Stream GAPs and stream reassembly depth are tracked per direction. In
    many cases they will happen in one direction, but not in the other.
    
    Example:
    HTTP requests a generally smaller than responses. So on the response
    side we may hit the depth limit, but not on the request side.
    
    The asynchronious 'disruption' has a side effect in the transaction
    engine. The 'progress' tracking would never mark such transactions
    as complete, and thus some inspection and logging wouldn't happen
    until the very last moment: when EOF's are passed around.
    
    Especially in proxy environments with _very_ many transactions in a
    single TCP connection, this could lead to serious resource issues. The
    EOF handling would suddenly have to handle thousands or more
    transactions. These transactions would have been stored for a long time.
    
    This patch introduces the concept of disruption flags. Flags passed to
    the tx progress logic that are and indication of disruptions in the
    traffic or the traffic handling. The idea is that the progress is
    marked as complete on disruption, even if a tx is not complete. This
    allows the detection and logging engines to process the tx after which
    it can be cleaned up.

[33mcommit 8125e04b39243ca75dd2a7ac8f51f5c7e0c8bd8d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 16 15:35:19 2015 +0200

    detect: clean up flag usage

[33mcommit 6e2c90a83b745d3b61c581be87fc1bb445330301[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 16 15:35:01 2015 +0200

    detect: constify some DetectMpmPrefilter args

[33mcommit c419f33f441882ba5c080337667db5591df9eb2c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 15 13:58:12 2015 +0200

    dns: fix state progress handling

[33mcommit b0f5f7ee97d1d14923bb62c68e81172f56d0dc5b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 15 13:08:22 2015 +0200

    app-layer: fix args to state progress calls

[33mcommit 62fa9f09d4fe021cdd6b437ac8f3f26e7620043c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 15 09:53:39 2015 +0200

    Sync alversion/appversion types
    
    The app layer state 'version' field is incremented with each update
    to the state. It is used by the detection engine to see if the current
    version of the state has already been inspected. Since app layer and
    detect always run closely together there is no need for a big number
    here. The detect code really only checks for equal/not-equal, so wrap
    arounds are not an issue.

[33mcommit 11d3f5f67aa9c4c70d71c8cc035f716d05dc0248[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 14 20:09:36 2015 +0200

    http: harden tx inspection code

[33mcommit be2849044b164d49a6f009a3b39d1370916c1bbc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 16 12:49:38 2015 +0200

    flow/stream: xfer noinspect flags to pseudo pkts
    
    Set noinspection flags for payloads and packets on flow and stream
    pseudo packets. Without these, the pseudo packets could trigger
    inspection even though this was disabled for a flow.

[33mcommit a0899cbe85a5aa33863891f345feebcf7e37b0ac[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 16 11:22:04 2015 +0200

    detect: optimize Signature layout

[33mcommit baadcab1b8b5c11528b78355fa8960e13af743e3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 16 11:21:44 2015 +0200

    detect: default to u32 for SigIntId

[33mcommit 1cd97713c2945a1e55ea6e3b8df804ab3f06fca4[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed May 27 14:01:36 2015 +0200

    file-json: add file_id to message
    
    This will allow to get the filename and by consequence the file
    after a parsing of the EVEV log file.

[33mcommit 8fde842f97161fe69013944800ebd68cb805384a[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jun 19 12:13:31 2015 +0200

    af-packet: implement rollover option
    
    This patch implements the rollover option in af_packet capture.
    This should heavily minimize the packet drops as well as the
    maximum bandwidth treated for a single flow.
    
    The option has been deactivated by default but it is activated in
    the af_packet default section. This ensure there is no change for
    old users using an existing YAML. And new users will benefit from
    the change.
    
    This option is available since Linux 3.10. An analysis of af_packet
    kernel code shows that setting the flag in all cases should not
    cause any trouble for older kernel.

[33mcommit dc306f3bad0446d8fecca1f950b32a018a8e4903[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jun 19 12:08:53 2015 +0200

    af-packet: implement new load balancing modes
    
    This patch implements the fanout load balancing modes available
    in kernel 4.0. The more interesting is cluster_qm that does the
    load balancing based on the RSS queues. So if the network card
    is doing a flow based load balancing then a given socket will
    receive all packets of a flow indepently of the CPU affinity.

[33mcommit 851fcef9627e11f62b9cd0fe78a1ec7775204093[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jun 19 12:05:05 2015 +0200

    af-packet: sync header with latest features
    
    Sync the replacement define with the latest Linux code.
    This patch also updates the detection part in configure.ac
    to do a declaration of all fields if the newest features are
    not present.

[33mcommit caa2438b98f7f48fc0f6e6a30e9522b68d368f81[m
Author: Aleksey Katargin <gureedo@gmail.com>
Date:   Thu Jul 16 21:17:49 2015 +0500

    netmap: support SW rings
    Netmap uses SW rings to send and receive packets from OS.

[33mcommit 823167bde2d805b7a089c3ea0c69ee0bc2ff4d64[m
Author: Aleksey Katargin <gureedo@gmail.com>
Date:   Thu Jul 16 18:51:03 2015 +0500

    netmap: strict check for zero copy mode
    Netmap does not guarantees that mmap'ed regions for different interfaces would be the same.

[33mcommit 5104b02f322017d9ccb1a9a4f9c713779335ad7a[m
Author: Aleksey Katargin <gureedo@gmail.com>
Date:   Thu Jul 16 18:35:23 2015 +0500

    netmap: fixed autofp mode.
    Previous implementation does not work with this mode.

[33mcommit 491fca468d73eab0ef554f32fa4ee7444259dd3f[m
Author: Aleksey Katargin <gureedo@gmail.com>
Date:   Thu Jul 16 17:43:28 2015 +0500

    netmap: support non-equal count of Rx and Tx rings on interface.
    Netmap does not guarantees that NIC will have equal number of transmit and receive rings.

[33mcommit 6484299701699a3934f145ababeaae5b9f01bf75[m
Author: Schnaffon <schnaffon@hotmail.fr>
Date:   Tue Apr 28 12:23:12 2015 +0200

    Use unlikely for error treatment in alert-prelude.c
    
    When handling error cases on creation of a new idmef field, we are in an unlikely case. This patch adds the unlikely() expression to indicate this to gcc.

[33mcommit 334e8656bf7cc08e24048a1d8c7865ec45ccb478[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 10 12:19:57 2015 +0200

    introduce fatal error macro's
    
    Add 'FatalError' and 'FatalErrorConditonal' that will take the same
    args as SCLogError.
    
    FatalError logs the error using SCLogError and then exits with return
    code EXIT_FAILURE.
    
    FatalErrorOnInit does the same only during init and with
    --init-errors-fatal enabled, otherwise it just calls SCLogWarning. So
    then the macro returns to the caller.
    
    Implement this for output setup.

[33mcommit 4dd53c8f03111da4c6b857f6e7486697b8be246f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 10 12:15:10 2015 +0200

    lua: dns support

[33mcommit 433e511b636d09dfa71bd45095499210aa68bee5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 10 11:57:59 2015 +0200

    dns: generic inspect engines for DNS

[33mcommit 110e23964e99cf7c7f43a9a24eb740f3e335b002[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 10 11:50:51 2015 +0200

    detect: add AppLayerTxMatch call

[33mcommit e6129f7b47cfbf886254bf283bf4844f6493ac40[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 9 15:31:32 2015 +0200

    dns: generic request/response detect lists

[33mcommit 2c8e8c2516742a100875a4b9392bd889e4506a00[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 9 14:49:22 2015 +0200

    dns: rename type so it's purpose is more clear

[33mcommit a1e50b3138b59c667120b19997c5a7e40499b0e1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 5 08:53:47 2015 +0200

    lua: dns extensions
    
    Add DNS lua calls for getting queries, answers, authorities. Also
    rcode and recusion desired flags.

[33mcommit c46d472921aed5c5aab03ca8dc3e0277dd467568[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 4 10:46:26 2015 +0200

    lua: initial DNS logging support

[33mcommit 159a6d1cb4054ee7a93b87f823fbe6c464d30698[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jul 15 22:21:07 2015 +0200

    tls-store: avoid log flooding
    
    In case we can't write in the certs directory, this is possible
    we flood the log for each TLS session or even worse each TLS
    packet.  So this patch puts a limit in the number of logged
    messages related to file creation.

[33mcommit cbf5d8844706cd7f83ba4ed06a2f2ce0028c2d79[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jul 15 13:50:22 2015 +0200

    filestore: use SCFree instead of free

[33mcommit b77cd22b9818f71ce5d276a44166bc0c56effbb3[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jul 14 22:35:32 2015 +0200

    tls-store: backward compatibility
    
    This patch implements backward compatibility in suricata.yaml
    file. In case the new 'tls-store' output is not present in the
    YAML we have to use the value defined in 'tls-log'.

[33mcommit 4db0a35f25cd2cd6079cdff28be55c6996c11f2d[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jul 14 21:22:31 2015 +0200

    tls-store: now a separate module
    
    An design error was made when doing the TLS storage module which
    has been made dependant of the TLS logging. At the time there was
    only one TLS logging module but there is now two different ones.
    
    By putting the TLS store module in a separate module, we can now
    use EVE output and TLS store at the same time.

[33mcommit 893fc9660dcaf613162140c442d71b338047ea3e[m
Author: Jeff Barber <jeff.barber@nexdefense.com>
Date:   Thu Jul 16 09:39:15 2015 -0400

    Support for reconnecting unix domain socket log files
    Issue #1423

[33mcommit b512580bbe28cb1109fd876a653abf486aa02ad9[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Jul 8 09:49:41 2015 -0600

    logging: integrate rotation into SCConfLogOpenGeneric.
    
    Addresses issue 1492, and will make it harder to omit
    rotation on new outputs.

[33mcommit 14981cb2a84951ff1ce4e8d911ebc7cdd9b22755[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Jul 17 16:22:59 2015 -0600

    rule vars: strip leading white space before looking up var.

[33mcommit f43767ba445b9536e797b432ca5e9848846d9d36[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 8 16:12:29 2015 +0200

    config: update yaml to show json logging option

[33mcommit e58cfb6a05b2938a3b79f924fc79de81560dbc30[m
Author: sfd <stephen.donnelly@emulex.com>
Date:   Fri Jul 3 16:43:02 2015 +1200

    Fix compile bad dereferences
    
    The src/source-erf-dag.c code was not compiling. It looks like some stats counters were added but not tested as the dereferences are incorrect.

[33mcommit e0289179557117897245510e4b119a66f97db2fb[m
Author: Alexander Gozman <a.gozman@securitycode.ru>
Date:   Thu Jun 18 20:44:26 2015 +0300

    In non interactive mode, print errors to stderr

[33mcommit a9176cf1269e96125505fdffe03d07b368143bca[m
Author: Alexander Gozman <a.gozman@securitycode.ru>
Date:   Tue Jun 16 18:12:01 2015 +0300

    suricatasc: remove "u" prefix when printing JSON output.
    If we want to parse suricatasc's output, python's unicode prefix
    should be removed to make JSON parsers happy.

[33mcommit cd038419fdea04542c57a38c55f7147ca1839fca[m
Author: Zopieux <Zopieux@users.noreply.github.com>
Date:   Thu Jun 18 11:26:53 2015 +0200

    stream_size operator comparison (fix issue #1488)
    
    `DetectStreamSizeParse` was first checking if mode[0] is '<', which is true for both '<' and '<=', thus '<=' (and resp. '>=') is never matched. This patch does the `strcmp` to '<=' (resp. '>=') within the if block of '<' (resp. '>') to fix #1488.

[33mcommit 45fc619f79cd4a0398a23fbd78d9ce4719174bd3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 21 17:33:53 2015 +0200

    logging: json output
    
    Make JSON output optional.
    
    Cleanups.

[33mcommit 126ecb3ebf94cf0cb73a472e21f1a827a476c397[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 30 11:21:39 2015 +0200

    logging: fix per output log formats

[33mcommit b51c4e608f8b188eb65b9fd8ef28805cdeb86678[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 26 11:32:50 2015 +0200

    logging: optional colors output
    
    Construct message per output method.

[33mcommit b13de5bf082a0f38424fc73740c8467969716616[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 30 09:09:17 2015 +0200

    logging: change newline handling

[33mcommit 1927b3000c5dfc663042c90cf321e65afc0e34ce[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 29 18:38:23 2015 +0200

    output: cleanup

[33mcommit b30bdc21b594545c2e9ad0ac90df43b07e5ff3d7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 26 16:10:16 2015 +0200

    logging: cleanup output API
    
    Make SCLogMessage master of the logging. Reduces complexity
    of the SCLog macro's.

[33mcommit d6fc6e874f2271b1a28e81d35944a22c8cb95879[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 25 17:32:16 2015 +0200

    log: reorganize SCLogOPIfaceCtx to make it more efficient

[33mcommit c2f4031a8cfdd24f20085fb1a29a1c628b34eb86[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 6 13:33:36 2015 +0200

    detect: fix settings override for reloads

[33mcommit 91efdadf8e871662a6bc4cfad0a21d707a31eded[m
Author: Helmut Schaa <helmut.schaa@googlemail.com>
Date:   Mon Jun 29 16:04:14 2015 +0200

    Disable pcap-config use during cross compilation
    
    This allows cross compilation where the host system has pcap-config
    installed and would create an invalid entry in the cross-CFLAGS.

[33mcommit cd9cc2559e33590033debdc09b45c83f433052ce[m
Author: Alexander Gozman <a.gozman@securitycode.ru>
Date:   Fri Jun 26 11:38:59 2015 +0300

    Issue 1491: fix capabilities for pf_ring mode when running under non-root account

[33mcommit d36eba4e5e378e5ea8dc3f1a760781f00502f6bb[m
Author: Alexander Gozman <a.gozman@securitycode.ru>
Date:   Mon Jun 29 20:46:15 2015 +0300

    Fix issues #1493 and #1494

[33mcommit d592d570396c19681d57e7bcb85ca13020424dbd[m
Author: Giuseppe Longo <giuseppelng@gmail.com>
Date:   Fri May 15 11:05:29 2015 +0200

    file_data: check for signature alproto and flow
    
    Currently the following rule can't be loaded:
    alert tcp any any -> any 25 (msg:"SMTP file_data test"; flow:to_server,established; file_data; content:"abc";sid:1;)
    and produces the error output:
    "Can't use file_data with flow:to_server or from_client with http or smtp."
    
    This checks if the alproto is not http in a signature,
    so permits to use flow keyword also.
    
    Issue reported by rmkml.

[33mcommit e583de05823c51694cb443d326e7b0ed13cb457e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 19 14:39:44 2015 +0200

    Minor unittest cleanups

[33mcommit f4f53924bbe702649ffd21764cf26e118a65e016[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 19 13:39:30 2015 +0200

    app-layer: fix coverity warnings

[33mcommit 6c792cb4cc7309a9e925e30322bda9c4d6facab7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 19 13:09:36 2015 +0200

    erspan: respect vlan.use-for-tracking setting

[33mcommit b8211e8c04f25947ee3bbb1473e8ff75920c9c46[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 19 13:05:49 2015 +0200

    htp: hide BUG_ON's behind DEBUG_VALIDATION

[33mcommit bd73553027a3a77815d09457a899791bbe8a76ff[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 19 13:02:29 2015 +0200

    smtp json: fix potential crash on malloc failure
    
    ** CID 1298888:    (FORWARD_NULL)
    /src/output-json-email-common.c: 117 in JsonEmailLogJson()
    /src/output-json-email-common.c: 140 in JsonEmailLogJson()

[33mcommit 1ed8d7b53842d825ada15dd3f295c6f9e76fc402[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 19 12:50:05 2015 +0200

    detect analizer: fix minor coverity warning
    
    ** CID 1298889:  Integer handling issues  (NEGATIVE_RETURNS)
    /src/detect-engine-analyzer.c: 102 in EngineAnalysisFP()

[33mcommit dd2afd51f7cabc11a6303f14d7ef99c125ea0b05[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 19 12:42:57 2015 +0200

    file_data smtp: fix minor coverity warning
    
    CID 1298891:  Null pointer dereferences  (REVERSE_INULL)
    Null-checking "curr_file" suggests that it may be null, but it has already been dereferenced on all paths leading to the check.

[33mcommit bcff35fd9f86da0f863e4b43fa81b56fc89e602d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 19 12:38:37 2015 +0200

    smb: fix coverity warning
    
    ** CID 1298892:  Incorrect expression  (UNUSED_VALUE)
    /src/app-layer-smb.c: 1486 in SMBProbingParser()

[33mcommit aa095864d3a8bae4364a8a50a5793fe7e02d1e0a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 18 16:07:21 2015 +0200

    pfring runmode: remove set that is never read

[33mcommit 21db5ee691b349d3da1925b703ea5200d736e40a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 18 15:47:02 2015 +0200

    counters: reduce global usage

[33mcommit a5168d59770ea990a3276af83b69caad5faadeeb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 18 15:46:28 2015 +0200

    dce_opnum: improve memory handling on parsing error

[33mcommit b3b7625be52dfedcbb759a951f69d409409d6d66[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 18 15:34:46 2015 +0200

    htp: fix test

[33mcommit c0807c3df5b3655e80c741df7f23ff5784f2803d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 18 15:27:04 2015 +0200

    fast log: clean up tests

[33mcommit 29fbcce50dc1cb1628398c3c60fb78adbb1607db[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 18 12:04:44 2015 +0200

    detect hsbd: simplify resize logic

[33mcommit 4e7cb7b8630258d1715742ea30145ef9568319ec[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 11 16:54:52 2015 +0200

    app-layer: update all protocols to accept NULL+EOF
    
    Update all non-HTTP protocol parsers to accept a NULL+EOF input.

[33mcommit cf9ff6adbd4842010be805ac27f3d09ed7767643[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 11 12:39:53 2015 +0200

    app-layer: improve EOF handling
    
    On receiving TCP end of stream packets (e.g. RST, but also sometimes FIN
    packets), in some cases the AppLayer parser would not be notified. This
    could happen in IDS mode, but would especially be an issue in IPS mode.
    
    This patch changes the logic of the AppLayer API to handle this. When no
    new data is available, and the stream ends, the AppLayer API now gets
    called with a NULL/0 input, but with the EOF flag set.
    
    This allows the AppLayer parser to call it's final routines still in the
    context of a real packet.

[33mcommit df79c1019f6315154b1527fb190d57f9a865598f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 5 12:47:28 2015 +0200

    print: make PrintRawDataFp take a const arg

[33mcommit 7451d3339689d6705fbaed307f44dbc3452a629e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 5 12:30:05 2015 +0200

    stream: update StreamMsg to don't have fixed size
    
    StreamMsg would have a fixed size buffer. This patch replaces the buffer
    by a dynamically allocated buffer.
    
    Preparation of allowing bigger and customizable buffer sizes.

[33mcommit 3ffa01d15098f236e2679c4a094fabce4a4c0b9e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 5 09:54:44 2015 +0200

    stream: remove STREAMTCP_STREAM_FLAG_CLOSE_INITIATED logic

[33mcommit 32563d51d155decb77fea6af8f3616feb7f01e7d[m
Author: Giuseppe Longo <giuseppelng@gmail.com>
Date:   Mon Jun 8 14:06:24 2015 +0200

    http: rework UT
    
    This reworks UT based on
    commit 320355570863dfa6376c9d2af875495ccc8a199f

[33mcommit 573d082219482b985d80defc38886fdde0645d18[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 3 18:16:33 2015 +0200

    http: memcap HTTP server inspect body code

[33mcommit 3163a5757726c41a52acee014398a683eee9ea70[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 3 18:15:55 2015 +0200

    smtp file_data: fix wrong free

[33mcommit 9f52bdd1e5541e8a1c3be406422fd5b555d7f9d4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 3 12:11:22 2015 +0200

    flow timeout: prevent dead locks
    
    The flow timeout mechanism called both from the flow manager at run time
    and at shutdown creates pseudo packets. For this it has it's own packet
    pool, which can be depleted if the timeout logic is faster than the packet
    processing threads. In this case the flow timeout would enter a wait loop.
    The problem however, is that this wait loop would happen while keeping a
    flow locked. This could lead to a race condition when the packet thread(s)
    are waiting for the lock that the flow manager has.
    
    This patch introduces a new packet pool call 'PacketPoolWaitForN', meant
    to make sure that the thread's packet pool has at least N available
    packets. The flow timeout paths use this to make sure enough packets are
    available *before* grabbing the flow lock. If there aren't enough packets
    available yet, the wait happens before the lock as well.
    
    This still means the wait can happen while the flow hash row is locked, so
    we do make sure some more packets are available when entering that. But
    perhaps in the future we need a more precise logic there as well.

[33mcommit 423d5fd0de58c793985d03f052b175791e889a7a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun May 31 10:53:42 2015 +0200

    http: improve inline body tracking
    
    Rewrite the sliding window handling for IPS mode for the server body.
    
    The buffer used will have the following properties:
        left edge: inspected data - window_size
        right edge: the most recent data
    
    Due to handling of compressed bodies, the data can be much bigger than
    the configured window size.

[33mcommit 79d34f4575d55f793ee2cfaf176f458550d243dd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 2 13:31:47 2015 +0200

    http: body pruning update
    
    Take inspect limits into account. Consider per direction inspect settings.

[33mcommit 8f1998e35fc5e58b701f3973f68d9cf0804b1a73[m
Author: Giuseppe Longo <giuseppelng@gmail.com>
Date:   Mon May 11 19:48:32 2015 +0200

    hsbd: inspect buffer depending on the engine mode
    
    Currently, data is buffered up to response-body-minimal size
    and response-body-inspect-window before being inspected.
    With this, in IPS mode, inspect data as it comes in up.
    
    The sliding window concept is used here,
    some data chunks are copied into the window (buffer)
    then it's inspected.

[33mcommit a459376d2e0e04937cdf603b5d8d8c86549ce2bf[m
Author: Giuseppe Longo <giuseppelng@gmail.com>
Date:   Thu May 28 13:42:28 2015 +0200

    app-layer-htp: add http_body_inline setting

[33mcommit 80615f7d43f500b6ca64324dcfd0b43cecea164f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 28 20:44:36 2015 +0200

    ips: move counters in common struct and funcs

[33mcommit 813930f0271ef2e8716fef9eab01dd616301bc8a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 27 17:53:23 2015 +0200

    nfq: add ips stats

[33mcommit 14466a803dc1782bea978f3f428465ad08e64d5d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 27 17:17:50 2015 +0200

    decode: create util function for basic counter updates

[33mcommit e3ce29f694217ee5880db609cd49228166d1c8fa[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Jun 10 16:09:58 2015 -0600

    json-stats: log deltas
    
    If "deltas" is yes, log delta values as the name of the value
    suffixed with _delta.

[33mcommit 3e14aa729ae83616e4724ff626a346bd75713ee8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 17 14:36:54 2015 +0200

    detect-state: remove/hide BUG_ON statements

[33mcommit b7f1e9e370230023b55dd1d082513683db87647f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 17 12:34:58 2015 +0200

    file extract: add app_proto to logging

[33mcommit 925aac854e687683d3b3c88cb6f5243a0fad8c50[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 15 11:44:24 2015 +0200

    alproto: improve AppProtoToString
    
    Make AppProtoToString compilation fail on missing 'case's.

[33mcommit 0bafc71689b8510e9724ee565f008f16b824fe35[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jun 9 15:50:31 2015 +0200

    app-layer: add modbus to AppProtoToString
    
    It was missing causing protocol identified as modbus not to be
    displayed in netflow events.

[33mcommit ebb42f831c98e2368a7d4fd03c788f718ba899e9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 10 15:22:12 2015 +0200

    suppress: add track by_either mode
    
    So far suppress rules would apply to src or dst addresses of a packet.
    This meant that if a ip would need to suppressed both as src and as dst,
    2 suppress rules would be needed.
    
    This patch introduces track by_either, which means that the ip(s) in the
    suppress rule are tested against both the packets source and dest ip's.
    If either of them is on the suppress list, the alert is suppressed.

[33mcommit e85a44c383d6790e96b84c4420cc477ef4cecd98[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 10 14:20:21 2015 +0200

    suppress: support ip-lists
    
    Ticket: 1137
    
    Support supplying a list of IP's to the suppress keyword. Variables from
    the address-groups and negation is supported. The same logic (and code) is
    used that is also used in parting the IP portions of regular detection
    rules.

[33mcommit 26fc5682ad7b2f48d5db1d6c561ed1f228ed7cbc[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Jun 11 16:45:34 2015 -0600

    hostbits: ignore leading and trailing white space
    
    Ignore leading and trailing space around the name and
    direction tokens.

[33mcommit 7c40c7348288d79cc97140cd63e4c9562ae12d8f[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Jun 10 15:15:19 2015 -0600

    json-stats: reorg threads and totals
    
    Totals are now placed at the top level instead of under a "Total"
    object.
    
    Threads are placed under a "threads" object.

[33mcommit 1f2caf78c38525d2d58325991c11e264cdf6a278[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed Jun 10 14:39:38 2015 -0600

    json-stats: log uptime in seconds, instead of a string

[33mcommit 0f1dd0d7ea46fb9a3b8d46d0da31c4af77774040[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Jun 9 14:26:57 2015 -0600

    flowbits: strip leading and trailing spaces in name
    
    Redmine bug 1481. Strip leading and trailing white space. Factor
    out parsing from setup while in here.

[33mcommit 0edf28a4f80b47c53dd09a4c1344dcf2311c40ae[m
Author: Zachary Rasmor <zachary.r.rasmor@lmco.com>
Date:   Wed Jun 3 11:59:06 2015 -0400

    Add Feature #1454. Generic eve-log prefix support.

[33mcommit a083513c49753242addca4d61f3896dfa43ee55b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat May 30 11:48:34 2015 +0200

    decode: optimize DecodeThreadVars layout
    
    Put common counters on the first cache line. Please the flow output
    pointer last as it's use depends on the flow logging being enabled
    and even then it's only called very rarely.

[33mcommit fe5a85aea0fa56c99b2f334fa7a71f8bd9c69ead[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat May 30 11:31:30 2015 +0200

    decode: add erspan counter

[33mcommit 928957f0a39a8ead06935b2b37e6f593659a1f09[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 20 23:01:22 2015 +0200

    decode: add ERSPANv1 decoder
    
    Only allow v1 to be parsed as thats what is tested.
    
    Take vlan_id from the ERSPAN layer.

[33mcommit aa6b24f81443be7e4c4184694aea2924d2fea30a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 20 21:42:19 2015 +0200

    decode: clean up tunnel decode logic
    
    Don't use mix of existing and custom types to indicate the next
    layer.

[33mcommit ef7cd043cc285d31df7942f74aa7e4ca330db6b8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 9 11:50:04 2015 +0200

    detect: various header cleanups

[33mcommit 5483b800c5961d30f9e5a5cde88e8765d4405a14[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 9 11:43:26 2015 +0200

    detect: remove struct/union tricks from Signature

[33mcommit 8949054212ca3403de5f9aecef93eb780235d8df[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 9 10:43:06 2015 +0200

    detect: remove unused match_flags from inspect engines

[33mcommit 9fa2f85cc7f951b144c35b01d39b8bbb42348a1d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 1 11:00:36 2015 +0200

    http: improve body pruning
    
    Take inspect window into account.

[33mcommit 0bbc818b2d26d3c042f2af8fc43afd186b067dce[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun May 31 10:52:05 2015 +0200

    http: fix body tracking
    
    In HTTP body tracking for response bodies, pruning body chunks was broken
    as the body parsing code wouldn't update HtpBody::body_parsed.

[33mcommit 320355570863dfa6376c9d2af875495ccc8a199f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 29 12:15:18 2015 +0200

    http-client-body: create unittest util func

[33mcommit d837562441fae6f5b3a246f26b73654d687b71d3[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed May 27 22:05:19 2015 +0200

    logging: fix modules ordering during logging
    
    With the previous code the order of the logging modules in the
    YAML were determining which module was run first. This was not
    wished and a consequences was that the EVE fileinfo module was
    not correctly displaying the key 'stored' because it was
    depending on a flag set alter by the filestore module.
    
    This patch adds a priority file to the TmModule structure. The
    higher the priority is set, the sooner the module is run in the
    logging process. The RunModeOutput structure has also been
    updated to contain the name of the original TmModule. Thus allowing
    to define a priority for a RunModeOutput.
    
    Currently only the filestore has a priority set. The rest of them is
    set to the default value of zero.

[33mcommit be07620a6021b7bd448bca02a68961516ab4ef9a[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu May 28 07:02:12 2015 +0200

    output-lua: sync variable name with yaml
    
    'script-dir' was used in the code but we had 'scripts-dir' in the
    configuration file. This patch fixes it to 'scripts-dir'.

[33mcommit ae23144b67e62636b8955d28cc0b8f9c761a3334[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed May 20 15:14:59 2015 -0600

    --set - handle spaces on either side of '='
    
    Discard spaces when provided as part of --set around the '='. For
    example, "val=key", "val = key", "val= key" and "val =key" are
    all equivalent now.

[33mcommit d9fe95bc8a0b4809b77d12973b8b3ca0cfce029b[m
Author: Jason Ish <ish@unx.ca>
Date:   Wed May 20 14:19:20 2015 -0600

    conf - function declaration style
    
    Use consistent style - function return type and declaration on
    same line.

[33mcommit 0a4fd39f9c95588a4e9fe9d05dba2d1349bcc71a[m
Author: DIALLO David <david.diallo@ssi.gouv.fr>
Date:   Wed May 27 17:00:35 2015 +0200

    modbus: fix heap-buffer-overflow in Modbus parser
    
    Modbus parser does not check length to extract/read data (read or write address,
    quantity of data, etc.) that should be present.
    
    In case of malformated data (invalid length in header), Modbus parser reads data
    over the input data length.
    
    Add check before extracting/reading data from input buffer to avoid head buffer
    overflow.

[33mcommit 07efec550dd249f3c4a1a1fb926cbbe4298245cc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 27 14:29:54 2015 +0200

    counters: use ptr to name instead of copy
    
    All counters have hardcoded names, so copies are not needed.

[33mcommit 7e66c7050711f0fe423b3ef7399a3526e9ae99fb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 27 14:11:57 2015 +0200

    counters: don't run if no counters have been registered

[33mcommit cb5aa8f8d5e2c348687c4756218f98b3400a76b6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 27 11:33:41 2015 +0200

    counters: work around unix-socket init issues

[33mcommit e48153c6b0fb95e6cab8ff652a8211d54418c326[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 27 11:23:19 2015 +0200

    counters: make threads cleanup all memory

[33mcommit 81548ae3e804347f1c39b6f7e56738906ac53f64[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 27 09:28:24 2015 +0200

    counters: clean up global context

[33mcommit 84b8829cb4073a1c202501b5abc7840f395e64cc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 26 19:44:01 2015 +0200

    counters: turn flow.memuse into a global counter

[33mcommit 0a262acdfb00af0e8e1fa877c17dfa899b637b5d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 26 19:36:59 2015 +0200

    counters: make DNS counters globals

[33mcommit ac069c579ade91f9380c7bbe2c626f5aa0f4e169[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 26 19:16:23 2015 +0200

    counters: make tcp.memuse a global counter

[33mcommit cddbb0f606a0e20eb5ca5e8bef6540f8deedd6e1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 8 01:44:18 2015 +0100

    http: make http.memuse a global counter
    
    http.memcap as well.

[33mcommit f05d0692ef4e9e1ed38e68caad7512894147489e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 26 16:45:07 2015 +0200

    counters: remove references to 'perf' counters

[33mcommit faef92f8daf09fd5134ea5556f3106b7878c741a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 26 16:33:51 2015 +0200

    counters: remove last and now unused tm_name reference

[33mcommit 83f27ae2a571e5345d5146eda3b8e850d39543fd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 26 16:29:35 2015 +0200

    counters: remove old unix socket json logic

[33mcommit 41ead6611a427b3e3537c6efd9eb9f33ad325720[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 26 16:28:01 2015 +0200

    counters: minor internal API cleanups

[33mcommit d2a9ef2680a3f0db00089594a6be8a645650f4ec[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 26 16:24:39 2015 +0200

    counters: rename unparsable SCPCAElem to StatsLocalCounter

[33mcommit 4c3ccda72efa6a089c733d8d0abcf05f242af1da[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 26 16:15:03 2015 +0200

    counters: minor header cleanup

[33mcommit 752f03e7a40225b05d9d0dbd56fe7b5cb4b23b9b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 26 16:10:17 2015 +0200

    counters: remaining s/SCPerf/Stats/g

[33mcommit 4362d0a6e9b0b48bf7f41b05ad8e1c6a26c0eef4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 26 16:04:30 2015 +0200

    counters: s/SCPerfPrivateContext/StatsPrivateThreadContext/g

[33mcommit 628c3b1bc7b0dbb80a2932dbdc4d37fb8e954b7a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 26 16:01:09 2015 +0200

    counters: s/SCPerfPublicContext/StatsPublicThreadContext/g

[33mcommit 7e70f136ec41042c1f323be4d31eec91f39f5006[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 26 15:41:35 2015 +0200

    counters: various renames and cleanups

[33mcommit 30cce2bd297ff2c770a3e7b97155c696ced01a11[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 26 15:08:35 2015 +0200

    counters: s/SCPerfCounterSetUI64/StatsSetUI64/g

[33mcommit 1c0b4ee0aef1be39352481c5222646f55b766e1d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 26 14:53:24 2015 +0200

    counters: s/SCPerfCounterIncr/StatsIncr/g

[33mcommit 8992275b0c27aa3185696304b0526a2971231e63[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 26 14:45:43 2015 +0200

    counters: s/SCPerfCounterAddUI64/StatsAddUI64/g

[33mcommit 60d9eb6790d8f7d9fd2faf3d5b415d818a84591c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 26 14:38:02 2015 +0200

    counters: clean up defines

[33mcommit 1ef786e7cba546780ecd8e8e48f13b4af26b9963[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 26 14:33:21 2015 +0200

    counters: rename register API calls
    
    Also remove 'type' parameter which was always the same.

[33mcommit 3fab736539be109d5b6426061e1f75daebe52265[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 26 13:51:38 2015 +0200

    log-stats: make global/threads logging configurable

[33mcommit 2c9a2c83275facab15d9fab38d50e90ea7a4e46e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 26 12:00:36 2015 +0200

    stats: support per thread stats in json output
    
    Default is only to output totals. Optionally per thread can be added.
    
    Both can be enabled together.

[33mcommit 175831331c82b24e0feea7be0aa9f8c11fdad5cc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 4 10:07:25 2014 +0100

    stats json: replace strndup
    
    strndup is a banned function.

[33mcommit 6565c86f96b1abb43415f050d916e153afb7b9e8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 4 09:50:29 2014 +0100

    stats-json: fixes and improvements
    
    Use proper LogFileCtx and MemBuffer handling so we can have multiple
    loggers active at the same time.
    
    Change 'date' field to timestamp, and use ISO notation to make it
    the same as the other JSON outputs.

[33mcommit e4e07d0c3b3a87327fa35faa5f93b1aa77cc9950[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Mon Nov 3 17:16:46 2014 -0800

    eve-log: stats logging code cleanup.

[33mcommit 117eed0385431a85c91916b1c2c55d2b19ab4f97[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Mon Nov 3 17:01:59 2014 -0800

    eve-log: add JSON stats logging
    
    Support for counters in stats.log in eve output JSON stream.

[33mcommit 23f17950bca598b0b972aca3ece31db3124a5723[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 25 20:53:17 2015 +0200

    counters: pass per thread stats to output api
    
    As well as the global (merged) stats.

[33mcommit de82b6d31eb4aebf4e8c01778826ec13eef3a53a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 25 13:46:19 2015 +0200

    counters: rename widely used pctmi var to sts (stats thread store)

[33mcommit 60c5ad464964126bf309b77560b10c2fcb2d8d0d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 25 11:42:41 2015 +0200

    counters: call global counters funcs

[33mcommit 33756abd87856fb95e06c1a41909cfd77943ca44[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 25 11:40:42 2015 +0200

    counters: split API init
    
    Split into early ctx initialization and post-config setup.

[33mcommit d05eed3735886d7df28299fac3f3d77285a6725c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun May 24 20:18:02 2015 +0200

    counters: start using Stats prefix

[33mcommit f300ad253ee88337d3e388540f1375a109fb6e38[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun May 24 18:38:39 2015 +0200

    counters: simplify and speedup counters sync

[33mcommit 0478407833fe1328fa2014804c89fec87c44da1b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun May 24 18:32:58 2015 +0200

    counters: remove threadvars arg from SCPerfAddToClubbedTMTable

[33mcommit 2346a88db7c659c9033e121df041d415de8b4c15[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun May 24 17:58:13 2015 +0200

    counters: remove thread module name from counters API

[33mcommit b5bd3dee1385e30b2c5cf2c39b2e4675fc808672[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 7 23:00:52 2015 +0100

    stream: make tcp.reassembly_memuse counter global
    
    Fixes bugs #632 and #1178

[33mcommit 06461e37dada97c72718cafdff1ff689b94fc7dc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun May 24 17:23:48 2015 +0200

    counters: global counters registration

[33mcommit 9bbef55c4d0c5e8204c3b58a532cbb826afea5b7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 7 19:57:18 2015 +0100

    Fix harmless typo in IPOnlyCIDRItemNew's SCReturnPtr use

[33mcommit b293a4b7d0ce06aeafdd41e0b3687a3e1357c655[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun May 24 14:04:45 2015 +0200

    counters: remove unused description

[33mcommit 711cd7b59bfc2e4b5913ac7dad5a7c5d0c637acb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun May 24 09:04:04 2015 +0200

    counters: merge counters from threads for output
    
    Merge counters so the table contains combined values from counters
    from each thread.
    
    Use global counter id's, track them in a hash.
    
    Rename SCPCAElem members
    
    Fix and improve average counters

[33mcommit 7da657dc3dd449ff00f3cb35841df84ff3f00871[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat May 23 14:16:21 2015 +0200

    counters: remove unused public API calls and make them private

[33mcommit ac6e24c06a3110dd682ebfb925dbf8a0871a1fcb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat May 23 13:41:49 2015 +0200

    counters: make SCPerfSetupPrivate a function

[33mcommit 66635f0741befe295d0c76b26035475dfaf29263[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat May 23 13:27:41 2015 +0200

    counters: minor cleanups

[33mcommit 74ab84c194a915bddf36fe1d51f416c1ee830c8b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat May 23 13:24:08 2015 +0200

    counters: introduce SCPerfSetupPrivate for thread setup

[33mcommit 799640f9066f14e806e36abff078053ab8b18172[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat May 23 12:56:16 2015 +0200

    counters: make threadvars::perf_private_ctx static
    
    Update SCPerfGetAllCountersArray and add a UT workaround.

[33mcommit 55cfab89e4d55ea21b940736e4bf2f51beacb1be[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat May 23 12:28:54 2015 +0200

    counters: SCPerfGetLocalCounterValue cleanup
    
    Return u64, update arguments.

[33mcommit b34c6dc93aa5d280cd6fb611c24b61a7ed43a650[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat May 23 12:15:10 2015 +0200

    counters: remove references to SCPerfCounterAddDouble
    
    They were all in comments anyway.

[33mcommit e9b067c1ebec3e30efbe99d1fcacb2c669b93ccd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat May 23 00:44:45 2015 +0200

    counters: make increment call take threadvars
    
    This hides the implementation from the caller.

[33mcommit 9a8bff7d96038177f745315003113fd498c22299[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 22 20:56:09 2015 +0200

    counters: threadvars s/sc_perf_pca/perf_private_ctx/g

[33mcommit 50bb995458d49d01c0a13c0947edeb6b9d82c818[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 22 19:59:35 2015 +0200

    counters: rename threadvars public counters

[33mcommit 6ffbc3a36216f6dcf0c94c915fc743ddbbef6f97[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 22 17:04:17 2015 +0200

    counters: s/SCPerfContext/SCPerfPublicContext/g

[33mcommit 0a5ae1b403fb8f8a32e2da5b5c021981213bda46[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 22 16:59:07 2015 +0200

    counters: s/SCPerfCounterArray/SCPerfPrivateContext/g
    
    Goal is to make it's purpose clear.

[33mcommit 9f584483becf86cf91e7ee1ab6846d63210630d4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 22 14:16:10 2015 +0200

    counters: minor cleanups

[33mcommit 0e955ccf3a8d46790dff241148515d707fc0359b[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed May 20 21:45:25 2015 +0200

    suri-graphite: add ouput to file option
    
    The --ooutput option allows to write the stats to a file given as
    argument the format used is JSON for easy parsing.

[33mcommit a54cef31ea81f4fdc41adf657e83a96e32cd4e5f[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun May 17 19:02:37 2015 +0200

    suri-graphite: add daemonization capability
    
    You can now use -d or --daemon to daemonize the process.

[33mcommit e2c557cfdb48ac13ed535ee672d49d58b5a772c5[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun May 17 18:57:48 2015 +0200

    suri-graphite: fix port option
    
    If port is specified on command line we need to convert it as an
    integer before using it as argument to connect.

[33mcommit 1e8142c6994cbffe69dee917f2705a7c71905bc2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 22 14:23:18 2015 +0200

    logfile: rename ALERT_ types to LOGFILE_TYPE_

[33mcommit 4c6a7bea30eb87aa3017dd0be21dc0d72c810100[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed May 20 13:40:01 2015 +0200

    output-json: suppress global variable
    
    It uses the new type field in the LogFileCtx instead.
    
    This fixes the problem of not being able to use two eve-json
    instance with different logging methods.

[33mcommit 636e3d93c03ce8050e37e3d7015f538303498b66[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed May 20 13:38:10 2015 +0200

    log file: add type flag
    
    It will be used to store if the file is syslog or a real file.

[33mcommit 7d73db9b80a89d462ddb72c48b40273a93a02558[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Feb 7 11:36:37 2015 +0100

    suricata.yaml: fix the name of EVE module
    
    It is netflow and not newflow.

[33mcommit 39d667ff56899fcbacd4452230d98d13494e52b3[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Feb 7 01:58:28 2015 +0100

    output-json: fix type of data parameter
    
    The cast of data to AlertJsonThread was not correct as the real
    type of the void pointer is a OutputJsonCtx. This was working by
    luck because they both have a file_ctx as first element.

[33mcommit f11e237d7791c5fe6d49ae68a39e525291e9b5da[m
Author: Alexander Gozman <a.gozman@securitycode.ru>
Date:   Wed May 13 21:18:43 2015 +0300

    Feature #1440: support wildcards in rule filenames

[33mcommit 4f8f53d080c6807f959a772279fdee5982384a9e[m
Author: David Cannings <david.cannings@nccgroup.com>
Date:   Mon May 11 21:51:38 2015 +0100

    Fix rcode parsing, as noticed by Coverity.
    
    Without support for OPT RR from RFC6891 (Extension mechanisms for DNS)
    values of RCODE above 15 are not possible.  Remove dead code which will
    never match.

[33mcommit 9fdae82815802ccd6f84e4873de30f053736be09[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon May 11 16:50:19 2015 -0600

    conf - process includes even if not at root node.

[33mcommit 56f6e373049b037567313ea2c8c6748fb5321f89[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon May 11 10:20:25 2015 -0600

    radix-tree - prevent out of bounds array access
    
    An IPv6 entry specified before an IPv4 entry on the host-os-policy
    table can cause the stream byte array to be access one byte after
    the end of the allocated memory at util-radix-tree.c:578.

[33mcommit 3e5b8f48b191205b5337f77be4f410661b6982c7[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Fri Jan 2 15:30:30 2015 -0600

    Bug 1281 - Add tests for rule content of lengths > 255.

[33mcommit e2b04635a7a5d9d3a912cf878328799223a1444e[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Mon Oct 27 11:36:26 2014 -0600

    Bug 1281 - Accept rule content with lengths greater than 255.

[33mcommit 0e22e95e4766e25f7bbff5b852d5c96b1d4a09f0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 19 15:54:41 2015 +0200

    alert-json: fix stream logging for IPS mode
    
    Switch direction in IPS mode.

[33mcommit 5037ea93f3727a8689acb0df4d067f9a6d9aab1d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 18 18:05:11 2015 +0200

    threads: add untimed control cond call
    
    The control conditions so far could only do timed waits, not normal
    waits.

[33mcommit c7bc9ae6a80796bc4fedc52e2613371b3aab4afb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 13 14:26:13 2015 +0200

    detect: minor cleanups

[33mcommit bc2b53f10bb681f5a7ed501ca316aeedb3c30527[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 13 14:25:49 2015 +0200

    parsing: s/strtok/strtok_r/g
    
    Remove all strtok uses and replace them by strtok_r.
    
    Do the same for Windows builds. Cygwin builds fine with strtok_r.
    
    Add strtok to banned function list.

[33mcommit fb479902e487d780149824fafc3fbbe1a5402762[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 14 10:38:58 2015 +0200

    threading: explain purpose of threadvars mucond

[33mcommit 478719ee9d5be6f083268175b6afc5c2a643cb90[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 14 10:38:10 2015 +0200

    flow: don't hold tv_root_lock longer than needed
    
    Don't hold it longer than needed in shutting down.

[33mcommit c96805e83955b3ef878adbae8564da8d096ff0b4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 14 10:17:16 2015 +0200

    threading: remove unused cmd thread create func

[33mcommit df5e9d44ca0904a20ed198f22d21dc4bba8a188b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 13 16:52:11 2015 +0200

    unix-manager: convert to thread module
    
    Sync command thread for unix manager with other managers and make
    it a full thread module.

[33mcommit cc01b5f6b6c2e01968565dc15efd04040d31b1ea[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 13 10:21:20 2015 +0200

    reference/classification: call global init for unittests

[33mcommit 34f2ff067b1af35cbe9ca3e869db03c3d109e42b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 13 09:53:49 2015 +0200

    reference: update pcre globals use
    
    Don't update globals each time we parse, but instead do it once at
    startup.

[33mcommit 46d401e3bbecc92405665b866be4d0e9a30abc4d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 13 09:37:39 2015 +0200

    classification: update pcre globals use
    
    Don't update globals each time we parse, but instead do it once at
    startup.

[33mcommit b2da57c82713847747ca4fae452f10d902e3e2ef[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 12 16:53:02 2015 +0200

    reference: remove global

[33mcommit 393689ce44f4879952f011bb74ccd236d07acb76[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 12 16:20:27 2015 +0200

    classification: remove global from parsing
    
    Parsing code used a 'fd' global. Remove this.

[33mcommit 9764a356047a191f0f5f0171371f560d316cf444[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 5 19:43:33 2015 +0200

    stream: fix --disable-detection reassembly issue
    
    Due to an error at initialization, the stream engine would not disable
    'raw' reassembly automatically when --disable-detection was used.
    
    This lead to segments not getting cleared from the segment lists.

[33mcommit c1558f5ac49a8be0e0946fe09688e7236154cf52[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 28 13:07:19 2015 +0100

    stream: remove FLOW_NO_APPLAYER_INSPECTION flag
    
    Instead, intruduce StreamTcpDisableAppLayer to disable app layer
    tracking and reassembly. StreamTcpAppLayerIsDisabled can be used
    to check it.
    
    Replace all uses of FlowSetSessionNoApplayerInspectionFlag and
    the FLOW_NO_APPLAYER_INSPECTION.

[33mcommit b6798495c5ba89ed45eaa31cfd4ca94a1078eb2d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 28 12:16:32 2015 +0100

    stream: remove FLOW_NO_APPLAYER_INSPECTION use from tests

[33mcommit b2e1854e2a7a19a44026b27f0a8e63b89dd37009[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 5 17:48:18 2015 +0200

    stream: improve 'no app layer' handling
    
    When the session/flow was flagged as 'no applayer inspect', which
    could happen as a result various reasons, packets would still be
    considered by the app layer reassembly.
    
    When ACK'd, they would be removed again. Depending also on the raw
    reassembly.
    
    In very long sessions however, this meganism could fail leading to
    virtually endlessly growing segment lists.
    
    This patch makes sure that segments that come in on a 'no app layer'
    session are tagged properly or even not added at all.
    
    Use a new ssn flag instead of flow flag for no app tracking.

[33mcommit 22a810813c8c9a33371dc65acf222de1cfff881d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 28 11:12:37 2015 +0100

    app-layer: add DisableAppLayer
    
    Move various app layer related flag setting calls into a utility
    function "DisableAppLayer"

[33mcommit f536099a67b4524c8705627f54708f63a211445e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 7 16:00:08 2015 +0200

    app-layer: de_state optimization
    
    Add API to bypass expensive TX list walks. This API call is optional.
    
    Implement it for HTTP and DNS.

[33mcommit 5f0678120d40447269917754041bf35db5b11496[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 25 15:54:35 2015 +0100

    detect-state: update test to check state storing

[33mcommit 37f0bd57b68f888689e1fb664d6dd05054cc7d9f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 24 15:36:39 2015 +0100

    detect-state: handle duplicate inspect/match
    
    If for a packet we have a TX N that has detect state and a TX N+1 that
    has no detect state, but does have 'progress', we have a corner case
    in stateful detection.
    
    ContinueDetection inspects TX N, but cannot flag the rule in the
    de_state_sig_array as the next (TX N+1) has already started and needs
    to be inspected. 'StartDetection' however, is then unaware of the fact
    that ContinueDetection already inspected the rule. It uses the per
    session 'inspect_id' that is only moved forward at the end of the
    detection run.
    
    This patch adds a workaround. It uses the DetectEngineThreadCtx::
    de_state_sig_array to store an offset between the 'base' inspect_id
    and the inspect_id that StartDetection should use. The data type is
    limited, so if the offset would be too big, a search based fall back
    is implemented as well.

[33mcommit bc6e4140befa80080777c41040eb47f9b6e05129[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 25 09:19:49 2015 +0100

    detect: add de_state duplication check
    
    Add test to check if no duplicate destate is created.
    
    Only enabled with DEBUG_VALIDATION.

[33mcommit 9d198e66627a6a8a33f7d0e96ff1bab025d7142a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 24 12:40:27 2015 +0100

    detect-state: fix state storing
    
    Fix storing state and bypassing detection. Previously we'd store
    on a match only, meaning that StartDetection would rerun often.
    
    Make sure StartDetection only stores if there is something to store.

[33mcommit 359e2d68f5739fceccb6f7a27b04c626196f442d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 24 17:25:04 2015 +0100

    detect-http-header: improve buffer handling
    
    Previously we could never be calling DetectEngineHHDGetBufferForTX
    for TX N and then afterwards for TX N - 1. Due to changes in the
    stateful detection code this is now possible.
    
    This patch changes the buffer logic to take the 'inspect_id' as it's
    base, instead of the first transaction that we are called with.

[33mcommit 62e937672df0f1b038bffdf97945620c699520e6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 12 13:41:50 2014 +0100

    detect-events: set SIG_MASK_REQUIRE_*_STATE for events
    
    Set SIG_MASK_REQUIRE_*_STATE for event rules to earlier discard
    them.

[33mcommit 8d0b09015053e37898ffd8f56d4783035728c483[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 21 21:09:06 2014 +0200

    engine-analysis: print fast_pattern summary
    
    When using engine analysis for print fast_pattern stats, print a
    short summary at the end containing per buffer:
    - smallest fp
    - biggest fp
    - number of patterns
    - avg fp len

[33mcommit 21f932898963f98af9ae7d6b18413951736e8ba9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 2 13:16:28 2014 +0200

    lua: fix error handling

[33mcommit 52195a419213e49f60a9a46f5abe48be3d8b4f5c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 18 21:46:59 2014 +0200

    http: add event for leading spaces on request line
    
    Libhtp will issue a warning in this case, so we can match on this.
    This patch adds event, rule and unittest.

[33mcommit 2f85308afe216e399a164018d375932dca57093b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 16 11:06:35 2015 +0100

    threads: fix missing unlock in error handling
    
    If TmThreadsUnregisterThread was called with out of range 'id', a lock
    would not be cleared after returning from the function.
    
    ** CID 1264421:  Missing unlock  (LOCK)
    /src/tm-threads.c: 2186 in TmThreadsUnregisterThread()

[33mcommit 0e2a4c01bacf71ac7b11ab34f0511a30e182a5b2[m[33m ([m[1;33mtag: suricata-2.1beta4[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 8 16:09:24 2015 +0200

    Update changelog for 2.1beta4 release

[33mcommit 0303245761942d5bd5dd455042003e12d68394da[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Jan 25 20:49:28 2015 +0100

    af-packet: use max packet size as snaplen
    
    If default_packet_size is set to 0, then we use the maximum packet
    size as snaplen.

[33mcommit 43f691fef8d003edf6a6c849edb91d9be6f6082b[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Jan 25 19:31:45 2015 +0100

    util-device: fix LiveBuildDeviceListCustom
    
    The code was assuming that the dictionnary containing the parameter
    of a interface was ordered. But for YAML, the order is not assumed
    so in case the configuration is generated we may not be able to
    parse correctly the configuration file.
    
    By iterating on child on main node and then iterating on subchild
    and doing a match on the name, we are able to find the interface
    list. In term of code, this algorithm was obtained by simply
    removing the test on the name of the first child.

[33mcommit 268285c49f2ab2141c9217cc21aeffbf366cb555[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Nov 18 11:07:59 2014 +0100

    output-json-http: output status as an integer
    
    HTTP status is an integer and it should be written as such in the
    JSON events. This will allow to have improved matching in log
    analysis tools.

[33mcommit da98b0b84f4c36a77e6c141404cccf22d47501c7[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jun 10 09:43:56 2014 +0200

    coccinelle: update struct flags test

[33mcommit 58582df1c6644c1ca9cf2dfcde237b32476ab60e[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Oct 1 16:15:06 2014 +0200

    decode-der: decode DC keyword
    
    'DC' is used by some certificates and it was not currently translated
    to a string.

[33mcommit 26ba647d58c01efce2e38ac31194b884046c2084[m
Author: Giuseppe Longo <giuseppelng@gmail.com>
Date:   Thu May 7 23:34:15 2015 +0200

    filedata: read inspected tracker settings from suricata.yaml

[33mcommit 4b5848616f903997674f57e1ed3e1af561d0ba95[m
Author: Giuseppe Longo <giuseppelng@gmail.com>
Date:   Tue Mar 10 16:21:14 2015 +0100

    filedata: implement inspected tracker

[33mcommit 1f52410d0fdac1e2eb95256cee40b7e2aeb46d39[m
Author: Giuseppe Longo <giuseppelng@gmail.com>
Date:   Fri Jan 30 10:36:55 2015 +0100

    UT: implement tests for inspection code

[33mcommit d2657becc9bc5e9fea6c0dd2fdc874eaa7e89924[m
Author: Giuseppe Longo <giuseppelng@gmail.com>
Date:   Tue Feb 10 15:21:35 2015 +0100

    app-layer-smtp: make functions as public

[33mcommit 84dc73d9dee4ddc7f5d33aea861541e2d0450d30[m
Author: Giuseppe Longo <giuseppelng@gmail.com>
Date:   Wed Jan 21 20:39:34 2015 +0100

    mpm: implement prefiltering for smtp

[33mcommit f0c54d47648bd7e973bd315fc0c2d1351af50d02[m
Author: Giuseppe Longo <giuseppelng@gmail.com>
Date:   Tue Jan 20 17:38:06 2015 +0100

    Detect engine for smtp file_data file_data: inspecting smtp attachments
    
    Create a buffer to store reassembled file chunks,
    and inspect the content.

[33mcommit b9468aba7cbc03481165939cbe62de5f5ff2154a[m
Author: Giuseppe Longo <giuseppelng@gmail.com>
Date:   Tue Jan 20 17:20:57 2015 +0100

    FileData: add stream_offset field
    
    This is required to store the offset for reassembling chunks.

[33mcommit 68cf3dd621fff203e976d40a9a48fe03f29930e9[m
Author: Giuseppe Longo <giuseppelng@gmail.com>
Date:   Tue Jan 20 12:02:16 2015 +0100

    file_data: register keyword for smtp and tcp protocol
    
    Permits to use file_data keyword with smtp or tcp proto.
    Also adds some unit tests

[33mcommit 04561f13d375989b25b4c17e71415ca711d0ac8f[m
Author: Giuseppe Longo <giuseppelng@gmail.com>
Date:   Thu Feb 5 15:04:13 2015 +0100

    signature: set flags and test the protocol
    
    This checks if the signature's protocol is http
    when setup the content keyword.
    
    Also sets the proper flags based by protocol
    since the flag SIG_FLAG_TOSERVER has to be set
    if the proto is smtp, otherwise SIG_FLAG_TOCLIENT
    is it's http.

[33mcommit 41a1a9f4aff442bcad4d38ab9222c410fdaa5355[m
Author: Giuseppe Longo <giuseppelng@gmail.com>
Date:   Tue Jan 20 10:28:38 2015 +0100

    find and replace HSBDMATCH by FILEDATA
    
    This commit do a find and replace of the following:
    
    - DETECT_SM_LIST_HSBDMATCH by DETECT_SM_LIST_FILEDATA
      sed -i 's/DETECT_SM_LIST_HSBDMATCH/DETECT_SM_LIST_FILEDATA/g' src/*
    
    - HSBD by FILEDATA:
      sed -i 's/HSBDMATCH/FILEDATA/g' src/*

[33mcommit eac83be1216a554f99b668b053e8dd4f6cea6953[m
Author: Ken Steele <ken@tilera.com>
Date:   Thu Feb 6 10:22:17 2014 -0500

    Formatting cleanup in detect-replace.c
    
    Wrap lines longer than 80 characters
    Add "static" for unit tests.
    Use (void) for () for function arguments.
    Add space after "while(" -> "while ("
    Remove space after function names.
    Put open bracket of function on a new line.

[33mcommit ddec92676d27ed68c9e767a178e7bd4685a083bf[m
Author: Ken Steele <ken@tilera.com>
Date:   Thu Feb 6 10:12:24 2014 -0500

    Add a comment for DetectReplaceList
    
    Reworded a quote in PR 742 by Regit from Inliniac to explain why adding
    the head of the list (really a FIFO) is the correct behavior.

[33mcommit cf9da2be15e7042c20f96b6a573305f8d35268d4[m
Author: Ken Steele <ken@tilera.com>
Date:   Fri Dec 20 16:36:58 2013 -0500

    Fix DetectReplaceAddToList
    
    I see two problems:
    1) If allocating a newlist fails, the function returns NULL, which then
       leaks any existing list elements.
    2) The code to add the new value to the list works for the first two, but
       for not the third. For example, replist=A, A->next=B, B->next=NULL, then
       adding C results in replist=A, A->next=C, C->next=NULL, B is lost.
    
    The fix pushes new values onto the head of the list, which might not be
    what is needed, but there are no comments on what the function does, so I
    made an assumption.

[33mcommit d44eab82c1a015e3797a7aa4583072a121f8a2b7[m
Author: Alexander Gozman <a.gozman@securitycode.ru>
Date:   Thu Apr 16 12:40:17 2015 +0300

    Fix bug #1435 (data loss when dumping payloads to JSON)

[33mcommit f0c659f82f675a090fa08dacc008061a70db2550[m
Author: Zachary Rasmor <zachary.r.rasmor@lmco.com>
Date:   Fri Apr 24 14:28:32 2015 -0400

    Fix Bug #1204
    
    Fix typo that causes eve syslog settings code to be unreachable.

[33mcommit 208d27abc76a8ab9280a91d9cfbdc16abe43b196[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 9 08:42:23 2015 +0200

    stream: next_seq handling improvements
    
    Allow next_seq updating to recover from cases where last_ack has been
    moved beyond it. This can happen if ACK's have been accepted for missing
    data that is later retransmitted.
    
    This undoes some of the previous last_ack update changes

[33mcommit b12c53cd51ca1b24039c248f1eab6808d9686e4b[m
Author: Alexander Gozman <a.gozman@securitycode.ru>
Date:   Thu May 7 12:40:28 2015 +0300

    Add timezone to timestamp in JSON logs

[33mcommit 2918a75da1f3f74f1c57e5848e4e7a860854b945[m
Author: David Cannings <david.cannings@nccgroup.com>
Date:   Thu Apr 16 19:40:46 2015 +0100

    Added support for full parsing of the rcode header in DNS answer
    packets. Where rcode isn't "no error" this is displayed in both DNS and
    JSON logs.
    
    Note that this changes the current "No such domain" to "NXDOMAIN" in DNS
    logs. This could be fixed if desired to maintain compatibility with
    anybody crazy enough to parse the DNS log.
    
    When the rcode is not "no error" (for example NXDOMAIN or SERVFAIL) it
    is unlikely that there will be answer RRs. Therefore the rname from the
    query is used.
    
    Because the rcode applies to a whole answer packet (not individual
    queries) it is impossible to determine which query RR caused the error.
    Because of this most DNS servers currently reject multiple queries per
    packet. Therefore each query RR is output instead with the relevant
    error code, likely to be FORMERR if queries > 1.

[33mcommit cf839c931f90253afcc27f00ee159fe880f1a92a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 1 15:12:47 2015 +0200

    tls: force 'raw' reassembly after each record
    
    Trigger raw reassembly after each record and after the handshake.

[33mcommit 04f3f5066d0ed7ef50b8413f7026d260c9009a75[m
Author: DIALLO David <david.diallo@ssi.gouv.fr>
Date:   Thu Apr 30 19:02:56 2015 +0200

    app-layer-modbus: fix deadlock in parsers

[33mcommit 6d170cadd77bcf0e1d05f2db89ff7dc77ab74ce1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 16 17:05:52 2015 +0200

    smtp: fix mime boundary parsing issue
    
    If a boundary was longer than 254 bytes a stack overflow would result
    in mime decoding.
    
    Ticket #1449
    
    Reported-by: Kostya Kortchinsky of the Google Security Team

[33mcommit a4a1c396e1595ebf5b86a2dd1bedbe604584e7ea[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 21 19:29:12 2015 +0200

    pcap-file: fix malformed timestamp crash
    
    A bad timestamp would lead to SCLocalTime returning NULL. This case
    wasn't checked, leading to a NULL deref.
    
    Reported-by: Kostya Kortchinsky of the Google Security Team

[33mcommit fa73a0bb8f312fd0a95cc70f6b3ee4e4997bdba7[m
Author: Pierre Chifflier <pierre.chifflier@ssi.gouv.fr>
Date:   Sat Apr 18 14:24:45 2015 +0200

    Fix possible wrap in uint32_t addition in DER parser
    
    Signed-off-by: Pierre Chifflier <pierre.chifflier@ssi.gouv.fr>

[33mcommit a2d0441380b16669c9d5baa45c3317906c236caa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 1 17:58:34 2015 +0200

    Bug 1340: fix missing flow cleanup
    
    Fix missing flow output cleanup function leading to a crash in the
    unix socket mode.

[33mcommit 04ccfda6398820ccc570497ea76aea5966dc368c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 13 12:12:46 2015 +0200

    pcap: implement LINKTYPE_NULL
    
    Implement LINKTYPE_NULL for pcap live and pcap file.
    
    From: http://www.tcpdump.org/linktypes.html
    
    "BSD loopback encapsulation; the link layer header is a 4-byte field,
     in host byte order, containing a PF_ value from socket.h for the
     network-layer protocol of the packet.
    
     Note that ``host byte order'' is the byte order of the machine on
     which the packets are captured, and the PF_ values are for the OS
     of the machine on which the packets are captured; if a live capture
     is being done, ``host byte order'' is the byte order of the machine
     capturing the packets, and the PF_ values are those of the OS of
     the machine capturing the packets, but if a ``savefile'' is being
     read, the byte order and PF_ values are not necessarily those of
     the machine reading the capture file."
    
    Feature ticket #1445

[33mcommit 97a2d1ac267a13b6c623bf57ad1b8ad8d95290a1[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Thu Apr 16 21:28:03 2015 -0700

    fix reputation parser so that it accepts ipv6 addresses in configuration file.

[33mcommit 11d6770ae4814a7b61fd53bdf9ec02a20c1b482d[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Apr 20 12:12:55 2015 -0600

    afl - SCHINfoLoadFromConfig - check for NULL before parsing.
    
    Found by AFL on suricata.yaml.

[33mcommit 75d21851cf9492ccca56432e3774bf274b3bf270[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Apr 20 11:47:18 2015 -0600

    afl - Don't fail if app-layer proto enabled value is NULL.
    
    Found by using AFL on suricata.yaml.

[33mcommit 0376b60da91230e5dcb9aafa014a1476e30b2ec4[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Apr 29 14:57:53 2015 +0200

    email-json: free temporary 'cc' string

[33mcommit bd67000b6980555d2232569f986127e4ec7d08cf[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Apr 29 14:57:07 2015 +0200

    email-json: free temporary 'to' string

[33mcommit 7b8184947ac6a32a2a23ff29042e716febf90829[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Apr 29 15:43:47 2015 +0200

    app-layer-smtp: fix SMTPTransactionFree function
    
    A typo was causing some freeing tasks not to be executed.

[33mcommit 91ddf85323f66fa62ae8277ba2826a413139479c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 29 23:34:44 2015 +0200

    profiling: fix sorting on very long runs
    
    Fix poor int handling breaking sorts of profiling on long runs
    where the numbers could get really big.

[33mcommit 1a83fee5f561d0f32f00e3bf59da2f655b96b526[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 29 15:51:19 2015 +0200

    xbits: fix coverity warnings
    
    Switch statement would contain NOALERT even though this was
    unreachable.

[33mcommit 54d5e2eed5921f42fe44b8c414a440593dd9a47a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 29 15:38:39 2015 +0200

    coverity fix: don't do pointer check on static array

[33mcommit b9aaf5a9ab5f38c9a77b9482b08876c1a35b25fb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 29 15:03:23 2015 +0200

    Fix potential deadlock in output
    
    Coverity:
    ** CID 1296115:  Program hangs  (ORDER_REVERSAL)
    /src/tm-threads.c: 1670 in TmThreadClearThreadsFamily()
    
    The problem is with the by default unused '%m' output parameter.
    To get the thread vars it takes the tv_root_lock. This may already
    be locked by the calling thread. Also, it could lead to a case of
    wrong lock order between the tv_root_lock and the thread_store_lock.
    
    Very unlikely to happen though.
    
    As the %m param isn't really used (by default) this patch just
    disables it.

[33mcommit 94321b8a2f797002b65846d7810b32974a06845e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 21 17:29:24 2015 +0200

    packet pool: fix memleaks
    
    Don't kill flow manager and recyclers before the rest of the threads. The
    packet threads may still have packets from their pools. As the flow threads
    would destroy their pools the packets would be lost.
    
    This patch doesn't kill the threads, it just pulls them out of their run
    loop and into a wait loop. The packet pools won't be cleared until all
    threads are killed.
    
    Wait for flow management threads to close before moving on to the
    next steps in the shutdown process.
    
    Don't destroy flow force reassembly packet pool too early. Worker
    threads may still want to return packets to it.

[33mcommit 22142d9b8b19a83402d3bfc681b1c5f3af017b68[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 8 16:22:07 2015 +0200

    threshold: cleanups
    
    Use pcre_copy_substring in the most common part of threshold rule
    parsing. Minor other cleanups.

[33mcommit e86e1e0282e100e4f476cf46ad9fd367afeb69bf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 8 15:34:58 2015 +0200

    reference: use pcre_copy_substring

[33mcommit cc38df80747d4789282ce2c5d10168df4b403712[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 8 15:15:29 2015 +0200

    classification: cleanups
    
    Reduce hash table size as regular classification files are usually
    below 100 in size. It's not performance critical anyway.
    
    Convert pcre_get_substring calls to pcre_copy_substring.

[33mcommit 3fbc6ede6b918667ff36d5607dbd8ae372a164da[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 16 15:47:19 2015 +0200

    suricatasc: allow for longer response times after connect

[33mcommit deb98fab0c792e4c14a575e3ea86bdc1c9c3e701[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 22 12:38:52 2015 +0200

    packet pool: init pool for autofp workers as well
    
    Introduce a new 'PacketPoolInitEmpty' as these pools will not often
    need packets.
    
    Also, don't double 'destroy' in the main thread.

[33mcommit 1884227019183241b538587cb81c668f94a6c834[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 17 11:21:54 2015 +0200

    autofp: reduce flow storage space requirement
    
    Use int16_t instead of a regular int to safe 2 bytes per flow.

[33mcommit 643c30f67f887c80868b817d021c01446b219c8e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 23 09:32:01 2015 +0200

    threading: add missing locks to threading storage
    
    Lock threading root lock when walking or updating the threading
    storage for 'ThreadVars' objects.

[33mcommit e7658fd4f474323df7451cb6dfb516342aa0ae48[m
Author: maxtors <moe.andreas@gmail.com>
Date:   Fri Apr 17 10:37:21 2015 +0200

    Added new WebDAV http methods.
    
    Added more WebDAV functions. A complete list of what http
    methods libhtp can handle can be found at:
    https://github.com/OISF/libhtp/blob/0.5.x/htp/htp_core.h#L260.
    So now the methods array reflects these available functions.
    
    The comments have also been changed to reflect the desired style.

[33mcommit 3b26b07963df9ae8e67a0257fe8c0af1112caffb[m
Author: maxtors <moe.andreas@gmail.com>
Date:   Fri Apr 17 10:03:24 2015 +0200

    Reworked pattern registration structure and feedback issues.
    
    1) Reworked pattern registration for http methods and versions.
    
    Instead of being a manual and verbose action of adding one
    and one http method with N-amount if prefix spacings and
    the same for HTTP versions (eg. HTTP/1.1) i moved it all
    to be loop based actions reading values from char arrays.
    
    In the future all that is needed is to add new methods
    to the arrays and they will be added as a pattern.
    
    2) Modified pattern registration after feedback.
    
    Changed variable used in snprintf for http method registration
    Should have been size of dest buffer at not another var (catsize)
    that i had created. Also removed this variable.
    
    Fixed a typo in the comment for registering http versions.
    TO_CIENT -> TO_CLIENT.

[33mcommit 7a9e963619a905b59378b4a5de653216182fff25[m
Author: maxtors <moe.andreas@gmail.com>
Date:   Thu Apr 16 22:44:36 2015 +0200

    Added http methods for webdav (rfc4918).
    
    Included the following methods to app-layer-htp.c:
    - PROPFIND
    - PROPPATCH
    - MKCOL
    - COPY
    - MOVE
    - LOCK
    - UNLOCK

[33mcommit a7abaf538cf92fb29d84b828fc8360925da0160a[m
Author: maxtors <moe.andreas@gmail.com>
Date:   Thu Apr 16 16:15:10 2015 +0200

    Added DELETE and PATCH http methods to app-layer-htp.c
    
    Added two new http methods to the http decoding done in
    app-layer-htp.c so that these messages will be decoded as well.

[33mcommit 915eb992cafa68af04addc039da273603e457255[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 23 09:53:20 2015 +0200

    app-layer: update protocol detection tests
    
    AppLayerTest09, AppLayerTest10 and AppLayerTest11 depended on a max
    protocol detection pattern size of < 17. Update the tests to pass one
    extra byte to the app layer. This makes the protocol detection code
    flag the session as 'proto detection completed' again.

[33mcommit 48971afdfb8f8400956a9f11867005ef8e0ad470[m
Author: David Maciejak <david.maciejak@gmail.com>
Date:   Sun Feb 8 10:27:03 2015 +0800

    Fix Unit ID check

[33mcommit f35001a614c92e90c6bdee82cce5be80178cd237[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jan 27 21:22:29 2015 +0100

    util-running-mode: setup config file
    
    Without that we get warning message.

[33mcommit 6f5c4c12e1a6e16fbe7d9eece6e8f1504647e952[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jan 16 14:37:41 2015 +0100

    list keywords: fix regression on app layer name
    
    It was not anymore displayed.

[33mcommit d98060410cec5fd1793a6eca056cc53577033630[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jan 16 10:12:55 2015 +0100

    list keywords: restore 2.0 similar output
    
    Unset was previously displayed if the application layer was not
    set. Code before this patch was displaying '(null)' which is not
    user friendly.

[33mcommit 568635c2e142004cd6cb7a4a55618e96fc823288[m
Author: Alexander Gozman <a.gozman@securitycode.ru>
Date:   Tue Apr 7 17:04:52 2015 +0300

    Reject ICMP traffic, not only TCP/UDP

[33mcommit 1f9d9256e70bec590304c041eda2e258431f0760[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Apr 16 15:56:51 2015 -0600

    spelling - dubbed -> duped (for duplicate)

[33mcommit 8911b04077797b11441598b10817e564b8be3479[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Apr 16 15:33:32 2015 -0600

    DetectGidSet - safer stripping of quotes.
    
    Discovered by AFL when using a rule like:
        alert tcp any any -> any any (content:"ABC"; gid:";)
    resulting a negative array index.

[33mcommit da88b3b787f67d83610b0f9e2fee9580d2a15de1[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Apr 16 14:46:24 2015 -0600

    DetectSidSetup - safer stripping of quotes.
    
    Discovered by AFL when using a rule like:
        alert tcp any any -> any any (content:"ABC"; sid:";)
    would result in a negative array index.

[33mcommit ca60d8c370ca3675d840b07f35a70095b966f0ff[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Apr 16 11:44:55 2015 -0600

    ParseSizeString - don't abort on unknown unit type.

[33mcommit 00d62986666a4f78552de6157278b7399b7ca878[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 20 22:43:21 2014 +0100

    host: handle timeout
    
    Set expiration for regular hostbits keyword.

[33mcommit ab7882fbf38a9e0dcf796f8554e1f847072d7b46[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 20 22:19:11 2014 +0100

    ippair: handle timeouts in the flow manager
    
    Like host and defrag, handle timeouts of ippair in the first flow
    manager thread.

[33mcommit e8a59250122008277d759c8c12de258a7ca0ed51[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 20 21:30:12 2014 +0100

    ippair: implement basic timeout check
    
    The only user is the xbits subsys, so it's timeout controls all.

[33mcommit f2349e10ad42591b1781593c180773b0b6fbd274[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 20 21:12:15 2014 +0100

    hosts: consider hostbits/xbits status in timeout
    
    Consider the host's xbits expiry status when checking the host for
    timeout. If a single active non-expired bit is found, the host won't
    be timeout just yet.

[33mcommit 67dd5c0430dda97c8ba15b9fada525b5eee0acb1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 20 20:02:19 2014 +0100

    host: implement hostbits/xbits expire

[33mcommit ca1f3e68d4b75f88c9b4ef72298c572411bc5051[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 20 19:07:48 2014 +0100

    ippair: implement xbits expiration

[33mcommit fbdcffabc2ebe36f663aeacc431407b3e130ed43[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 20 17:14:53 2014 +0100

    xbits: expire (first steps)

[33mcommit 7b79b9458d0b3f5675618d3bbed5c903b05c36d1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 20 13:39:23 2014 +0100

    xbits: implement ip_src/ip_dst support
    
    Just a wrapper for regular 'hostbits'.

[33mcommit 57d93cbcfec50ade29350cbfd423dbb4bbf832ec[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 20 12:28:01 2014 +0100

    hostbits: prepare for xbits integration

[33mcommit 8e6453faacbdde56dd456eafebcdb4b76316e7ab[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 20 12:24:03 2014 +0100

    xbits: prepare for non-ippair support

[33mcommit dea8dda3c19773ba51a6bb67d9e365047251c598[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 20 12:02:59 2014 +0100

    vars: redo var name <-> idx handling
    
    Can't use sm type anymore as multiple var carriers (host/flow/etc) will
    all have xbits.

[33mcommit f77c3d9a2c5602a088ebf5fb92659ee480bf42b6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 20 10:06:30 2014 +0100

    xbits: hostbits use xbits type
    
    Make hostbits use xbits type.

[33mcommit a716dded04d493618b47e5d89eb9b4d4a6a4dbc3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 20 10:00:24 2014 +0100

    xbit: move to util-var
    
    We can reuse the type for hostbits and flowbits as well.

[33mcommit 61cb2abc8d3dab3e17663a0db21d2d910bd0bdbe[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 19 17:40:36 2014 +0100

    ippair: xbit implementation
    
    detect xbits for ippair: initial implementation

[33mcommit 4c6d564211f41348d8c28af5c4a0af9893c3d82d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 16 11:22:24 2014 +0100

    hostbits: unittest cleanups

[33mcommit 2cb0df7cf98798865b212a7e7a82237a09698ebe[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 16 08:41:23 2014 +0100

    hostbits: allow for src/dst parameter
    
    By default, the hostbit checks the 'src' host. By adding the dst option
    the dst host is used instead.

[33mcommit be725a5ba2b1dba6905bc89667ed57269581f926[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Dec 14 00:04:47 2014 +0100

    hostbits: add more tests, include sigorder

[33mcommit d67fd306f855a6d394b9bd8ec494d04723d6dc98[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Dec 14 00:04:14 2014 +0100

    hostbits: implement sigorder
    
    Like with flowbits, make sure that 'set's are evaluated before
    'isset's, etc.

[33mcommit 5c880377ae6dd62f5fbc43224b890aa331c92f4f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 12 23:40:30 2014 +0100

    detect: hostbits keyword
    
    Per host bit similar to 'flowbits'.
    
    Initial code that uses just the 'src' ip for the operations.

[33mcommit 99ae643e4e6142d5dea9c8a82aac4e8ed1d70679[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 18 23:33:03 2014 +0100

    ippair: track ippairs, enable tests

[33mcommit f7a25f2b241fa3cc93f3c82654e6891f231a86ba[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Mar 13 09:55:27 2015 +0100

    prscript: rework option logic
    
    Handle cleanly the case where user start docker handling command
    without having the dependency installed. The help message does
    now say:
    
    ```
      -d, --docker          use docker based testing
      -C, --create          create docker container (disabled)
      -s, --start           start docker container (disabled)
      -S, --stop            stop docker container (disabled)
    
    You need to install Python docker module to enable docker container handling
    options.
    ```
    
    And running a disabled options says:
    
    ```
    $ qa/prscript.py -s
    You need to install python docker to use docker handling features.
    ```

[33mcommit 0b64b992c96cbd8a4c7c35c4a09e7e666dd08895[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Mar 12 18:01:03 2015 +0100

    prscript: fix error message in non local test
    
    Indicate to user that non local test needs a github user.

[33mcommit 8a0ebc4ade1d67e8290c516ed3e601a72e2ca0e9[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Mar 12 15:39:32 2015 +0100

    prscript: improve command line
    
    You can now directly access to docker related command:
    
     qa/prscript.py -C # create container
     qa/prscript.py -s # start container
     qa/prscript.py -S # stop container
    
    The build option does not change:
    
     qa/prscript.pu -l -d MY_BRANCH # build test of branch MY_BRANCH

[33mcommit fe45f2a342a35c4b9684a1e1d76acd4ac96253a5[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Mar 11 19:56:12 2015 +0100

    prscript: add notification system
    
    If Python pynotify is installed, prscript can now send notification
    via the -n flag.

[33mcommit ef627816cc1c7d303b034be9123ba2bf0a7ac32c[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Mar 11 19:15:14 2015 +0100

    prscript: improve wordings

[33mcommit a3c921f0a610d0b7e17a42ae88830f1a26285e3e[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Mar 11 19:08:37 2015 +0100

    prscript: suppress useless message
    
    No build run faster than 2 seconds.

[33mcommit fbe5db500ce9faadfa4cc1feba65492963bd2c4d[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Mar 11 18:07:15 2015 +0100

    prscript: iterate on builds when checking status
    
    This patch is changing the logic when using docker mode. We are
    iterating over each builds so we know when one build is over in
    the 5 seconds following the event instead of getting the result
    when the builds that are checked before are others.
    
    On OISF's build system, the two builds comes out in order so there
    is no problem.

[33mcommit f12e6fdcdabf8a3fccb0de27032a058bded2c867[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Mar 11 15:01:58 2015 +0100

    prscript: read buildbot config from source
    
    This patch change the logic of the Docker buildbot system. The
    buildbot configuration is now the one available in qa/docker
    directory.
    
    This way, developers can test features in docker buildbot that
    could require some specific flags to be set. They just need to
    edit the buildbot.cfg for instance to enable a new feature.
    
    In the same way, the tested pcap files are the one which are in
    the qa/docker/pcaps/ directory. So to test some private ones it is
    enough to put them in that directory.
    
    To take into consideration a buildbot.cfg modification or a new
    pcap, it is enough to stop and restart the container:
    
     sudo qa/prscript.py -l -d -S master
     sudo qa/prscript.py -l -d -s master
    
    This patch also fixes the container update issue. A local modification
    to the buildbot will be kept. It is also fixing the issue when working
    on old code that could possibly not support the same build flag as
    the one of buildbot. Here the configuration will remains in sync.

[33mcommit be473fa71233d53a9742c0c30aa5ce561b300eff[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Mar 10 19:55:23 2015 +0100

    prscript: add a comment on the SELinux issue

[33mcommit 1180fc1ac732912096766f2ee2c1ca944790ae91[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Mar 10 16:12:45 2015 +0100

    prscript: add docker handling support
    
    You can now create the docker image necessary to run a
    suricata builbot in docker. To do that you need to have
    docker and python-docker installed on the system.
    
    Then you can go to the qa directory.
    
    You need to run once the creattion procedure:
     sudo ./prscript.py  -C -d master  -l
    This will create a container named 'suri-buildbot'.
    
    You can start it with:
     sudo ./prscript.py  -s -d master  -l
    
    And stop it with:
     sudo ./prscript.py  -S -d master  -l
    
    To start a test, you can do:
     ./prscript.py -d my_branch -l

[33mcommit dd6f9a6298e14e655d264467d181bda90844ce5f[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Mar 10 13:15:15 2015 +0100

    prscript: refactor for docker
    
    With the current work in progress on docker we need to update the
    script to handle this case.
    
    This patch adds two options:
     - -d to run in docker mode. In that case the build is started in
     the local dockerized buildbot instance
     - -l to not test the tested branch synchronization with github.
    
    The -l option allows user to run a complete test without publishing
    the code on github and without Internet access.

[33mcommit 3b827fd649726fe8dad58939143aecbd574ad38a[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Apr 6 17:05:16 2015 -0600

    Duplicate rule ID.

[33mcommit 45ba20bcb09e03ca7a69d0d6107e6e4da5f04a60[m
Author: Alexander Gozman <a.gozman@securitycode.ru>
Date:   Mon Mar 23 20:06:47 2015 +0300

    DetectAddressParseString(): fix IPv6 address handling

[33mcommit 754ea3d849a0fbccf1a7197555761ffba5bd61e0[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Mar 16 22:33:51 2015 -0600

    prscript - fallback to json is simplejson not available.

[33mcommit bd0041470f7b47fba5920354845ee5aa9035afd9[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Apr 2 18:21:40 2015 +0200

    rules: add app layer events rules
    
    Some application layer events are defined but the corresponding
    rules were not available in the rules directory.

[33mcommit 605ef339727e013c9ea6f8917fd1d165408d8ae8[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Apr 1 17:59:54 2015 +0200

    runmodes: improve listing output
    
    This patch removes some multiple line displayed before the
    information about unix socket mode.

[33mcommit 9fb82390ab5864cf4cff13746e553f17ca2c2abb[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Mar 5 11:09:03 2015 +0100

    suricata.yaml: add missing mpm-algo

[33mcommit e5ae808b0f656a9da3073e0e162309d39ade599e[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Apr 1 13:58:25 2015 +0200

    runmodes: fix typo in output

[33mcommit ef3290bb2e5741f968ee37aa2f4766a23d30c9d0[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Mar 20 10:24:39 2015 +0100

    flow-manager: don't set cpu affinity twice
    
    It is already set in the thread creation function.

[33mcommit 8e83d0073e4655388e8dd13c785875996faa494d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 25 22:29:10 2015 +0100

    stream: fix bad last_ack update leading to gaps
    
    A bad last_ack update where it would be set beyond next_seq could
    lead to rejection of valid segments and thus stream gaps.
    
    Update tests to reflect new last_ack/next_seq behaviour.

[33mcommit 4e177bc9d623ff83bfcf314989cd238debde5111[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 20 21:58:50 2015 +0100

    detect-state: cleanups and comments

[33mcommit 304c711a27ddca7413eb6fcd38929e5dc01c0dd2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 20 19:23:09 2015 +0100

    detect-state: use f->protomap instead of FlowGetProtoMapping(f->proto)

[33mcommit e1efa7a0b54a710097be27c5294134bc9d277a11[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 20 16:09:10 2015 +0100

    detect-flowbits: locking update
    
    Make matches that can be in the POSTMATCH list aware of the lock hint.

[33mcommit 4609495c607a7c419ef1c9d8607559a96c0362c3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 20 16:22:19 2015 +0100

    detect-flowint: conditional locking

[33mcommit 5111aa2ec02089e1cbdd095d311610acd06cf638[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 20 15:47:39 2015 +0100

    detect-state: handle 'post match' locking
    
    The post match list was called with an unlocked flow until now.
    However, recent de_state handling updates changed this. The stateful
    detection code can now call the post match functions while keeping
    the flow locked. The normal detection code still calls it with an
    unlocked flow.
    
    This patch adds a hint to the DetectEngineThreadCtx called
    'flow_locked' that is set to true if the caller has already locked
    the flow.

[33mcommit 9bcb02119f9e3c443f10f48c2d602db45a460a6f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 20 15:23:18 2015 +0100

    detect-flowint: fix unlocked flow access
    
    Some of the access to the flow and to structures retrieved from the
    flow was unlocked.
    
    This patch changes the logic to be wrapped in lock calls.

[33mcommit 18f0351d9bcd69dff0839680050fea3bb8d3264b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 20 14:30:00 2015 +0100

    detect-state: fix profiling

[33mcommit 0b262cbfdac968cb5a05f46f2907bcdbf87f4fec[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 17 23:05:07 2015 +0100

    dns: optimize tx list walks
    
    The detection engine and log engines can walk the tx list indirectly,
    by looping AppLayerParserGetTx. This would lead to new list walks in
    the DNS tx list though. Leading to bad performance.
    
    This patch stores the last returned tx and uses that to determine if
    the next tx is what we need next. If so, we can return that w/o list
    walk.

[33mcommit 0704ece4d7414dc5ba9427e9a0446dee9f34e13e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 19 17:20:27 2015 +0100

    detect-reload: enable unconditionally
    
    Reloading is available unconditionally now.

[33mcommit 724c7044e19e0e1624982720653eaf6b8c95606f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 16 10:53:56 2015 +0100

    detect-reload: 0 detect threads is no error
    
    The reload code would consider 0 detect threads to be an error,
    but it's not in case of unix socket mode.

[33mcommit 7c9e015748db1c5c61505cbd2894507daa9a32c6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 5 16:25:09 2015 +0100

    unix-socket: implement reload-rules
    
    Implement the reload-rules unix socket command. The unix command
    thread signals the main thread to do the reload and it waits for
    it to complete.

[33mcommit 71d01f06b920a632ca68a7111b550f95eab6b158[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 5 13:04:33 2015 +0100

    detect reload: load config
    
    Load the YAML into a prefix "detect-engine-reloads.N" where N is the
    reload counter. This way we can load the updated config w/o overwriting
    the current one.

[33mcommit b51075e804189a50191581611fa5e21e57ae602f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 5 13:00:33 2015 +0100

    detect: remove config at prefix
    
    Remove config at prefix when freeing a detect engine.

[33mcommit 85e12f2bc6b75de14a9f324a879dff547118dcd6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 2 08:59:44 2015 +0100

    rule vars: support prefix
    
    Support the detection engine's prefix when retrieving rule vars.

[33mcommit 0bc27c7dc7f5e4c0e30c1a703f1b1545c91ef3b8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Mar 1 20:30:01 2015 +0100

    rule-vars: take detect engine as arg

[33mcommit 3083f51cc6bfe3708f9cfb1050ef8c66dda09769[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Mar 1 12:34:11 2015 +0100

    detect:pass DetectEngineCtx to port parsing
    
    Preparation for prefix handling in port parsing.

[33mcommit 2be9ccfe9c92d7e21ff09b2103a51248bb1f6ecd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Mar 1 11:02:33 2015 +0100

    detect: pass DetectEngineCtx to address parsing
    
    Preparation for prefix handling in address parsing.

[33mcommit 7108085d33b2848f0eccd8c82244f671ed10e793[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 16 17:46:16 2015 +0100

    detect: initialize detection engine by prefix
    
    Initalize detection engine by configuration prefix.
    
        DetectEngineCtxInitWithPrefix(const char *prefix)
    
    Takes the detection engine configuration from:
    <prefix>.<config>
    
    If prefix is NULL the regular config will be used.
    
    Update sure that DetectLoadCompleteSigPath considers the prefix when
    retrieving the configuration.

[33mcommit 97d77e3540972e60a3557382cefeb58a8b730191[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 13 11:59:21 2015 +0100

    conf: add ConfYamlLoadFileWithPrefix
    
    Add function to load a yaml file and insert it into the conf tree at
    a specific prefix.
    
    Example YAML:
    somefile: myfile.txt
    
    If loaded using ConfYamlLoadFileWithPrefix with prefix "myprefix", it
    can be retrieved by the name of "myprefix.somefile".

[33mcommit a80cc696d73a9ec71556c2e49f1e7789b57dcdfc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 29 11:16:49 2015 +0100

    detect: allow det_ctx->de_ctx to be NULL
    
    When freeing det_ctx, allow de_ctx to be NULL.

[33mcommit c9a8262ccf877f45a903d2e113a492ce5988dc8f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 27 12:33:21 2015 +0100

    detect: reload thread init cleanup
    
    Rename the thread init function DetectEngineThreadCtxInitForLiveRuleSwap
    to DetectEngineThreadCtxInitForReload and change it's logic to take the
    new detection engine as argument and let it return the
    DetectEngineThreadCtx or NULL on error.
    
    The old approach used the thread init API format, but it wasn't used in
    that way.

[33mcommit 55e7370fc514258b83a26645633c8ee3c386617c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 27 11:30:08 2015 +0100

    detect reload: allow master update during reload
    
    Add DetectEngineReference, which takes a reference to a detect engine,
    and make DetectEngineThreadCtxInitForLiveRuleSwap use it. This way
    reload will not depend on master staying the same. This allows master
    to be updated in between w/o affecting the reload that is in progress.

[33mcommit b1c54a8673fcc293090ff61eca791a6b45e3d228[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jan 17 10:53:54 2015 +0100

    detect: remove old live reload implementation
    
    Remove code that ran the reload in it's own thread. Simplify the
    signal handling.

[33mcommit 0c263105cd1e8799150df6fbfc4de34b520d9f52[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 19 22:09:59 2015 +0100

    detect: move reload into main loop
    
    Use new DetectEngineReload() function. It's called from the main loop
    instead of it being spawned into it's own temporary thread. This greatly
    simplifies the signal handling.
    
    An added advantage is that this seems to improve the memory usage.
    
    Related to bug #1358

[33mcommit e7882da178fcb8d8faf02557602e2d25139f800a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 19 14:54:11 2015 +0100

    detect: introduce 'minimal' detect engine
    
    The minimal detect engine has only the minimal memory use and setup
    time. It's to be used for 'delayed' detect where the first detection
    engine is essentially empty.
    
    The threads setup are also minimal.

[33mcommit f4617d53574637482319d54b81d8de4a50d442a7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 19 12:11:22 2015 +0100

    threading: remove 'dummy' slot logic
    
    Now that delayed detect is not using it anymore, the dummy logic
    can be removed.

[33mcommit b0cb4c17ec3e31f53051b5bf6223aaaf45529c4d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 19 12:08:55 2015 +0100

    detect: unify delayed detect and reload
    
    Instead of threading logic with dummy slots and all, use the regular
    reload logic for delayed detect.
    
    This means we pass a empty detect engine to the threads and then
    reload (live swap) it as soon as the engine is running.

[33mcommit 38b349af1e8c3e1b85dcb5ba2708ceb7f164f402[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 19 10:27:34 2015 +0100

    runmodes: remove DetectEngineCtx passing from API
    
    No longer pass a pointer to the current detection engine to the
    runmode API calls.
    
    Note: breaks delayed detect. Will be fixed in a future commit.

[33mcommit b038b6a2f87549474503ff80c2e5586ccd02c92d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 20 11:25:02 2015 +0100

    unittests: add exception to detect engine setup
    
    Add code to allow for unittests not following the complete api.
    
    Update replace tests as they don't use the unittests runmode that
    powers the workaround based on RunmodeIsUnittests().

[33mcommit d66fa1add1137791e0d323b55649f2f13aeb52ac[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jan 17 18:44:23 2015 +0100

    detect: update detect engine management
    
    Update detect engine management to make it easier to reload the detect
    engine.
    
    Core of the new approach is a 'master' ctx, that keeps a list of one or
    more detect engines. The detect engines will not be passed to any thread
    directly, but instead will only be accessed through the detect engine
    thread contexts. As we can replace those atomically, replacing a detect
    engine becomes easier.
    
    Each thread keeps a reference to its detect context. When a detect engine
    is replaced or removed, it's added to a free list. Once its reference
    count reaches 0, it is freed.

[33mcommit 664100c0742bd3e9a43b8e2975789111ebf04e25[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 16 19:25:24 2015 +0100

    suricatasc: allow for much longer response times

[33mcommit 092ddc1853d4f11baf7d6b64c61e0e3b29044e07[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 27 16:34:16 2015 +0100

    detect: no exit on reference/classification errors
    
    Don't exit on errors during classification and reference parsing.
    
    Add some suppression of error messages when in unittest mode.

[33mcommit 49bad2cfba46f8a52d69632f559d6a36e1cca4e2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 16 19:28:44 2015 +0100

    detect: consolidate more setup into DetectEngineCtxInit
    
    Loading of classifications, references and action order was done
    unconditionally, so can be done in one place.

[33mcommit 69f99245c554f2d4ad028026abf8725967896ad4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 29 11:45:44 2015 +0100

    unix-command: fix duplicate registration error msg

[33mcommit 60a49657df10d6d14f087037593fd8ef4daf07d5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 17 11:48:17 2015 +0100

    Bug 1401: on midstream pickup, fix packet direction
    
    On midstream SYN/ACK pickups, we would flip the direction of packets
    after the first. This meant the first (pickup) packet's direction
    was wrong.
    
    This patch fixes that.

[33mcommit ee7e81325669d6349f345845eeaff4712fb852f0[m
Author: Jason Ish <ish@unx.ca>
Date:   Mon Mar 16 22:29:22 2015 -0600

    Bug 1417 - Record sequence nodes as sequences.
    
    Nodes that are sequences weren't being recorded as such, causing
    rules to fail to load.
    
    Change sequence test name to reflect better what it tests, and
    test that the sequence node is detected as a sequence.

[33mcommit e250040b72169536022efdac017eaddb0a58d37a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 10 17:41:03 2015 +0100

    detect-state: implement tx state reset for reload
    
    In case of Detect Reload, we need to reset active tx' state.

[33mcommit da3e8ad8f6e77583cc7998057d41959a85758868[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 27 15:21:17 2015 +0100

    detect-state: split flow and tx state
    
    Use separate data structures for storing TX and FLOW (AMATCH) detect
    state.
    
    - move state storing into util funcs
    - remove de_state_m
    - simplify reset state logic on reload

[33mcommit 840efe17fe00ab10a231648ea17964024eb1d47e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 9 15:58:07 2015 +0100

    modbus: tx de_state

[33mcommit e984a57203722e45335e113ee8a5b96f5dfd82b5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 9 15:45:39 2015 +0100

    smtp: tx de_state

[33mcommit 2a23627a82a655b808ca4dd67e8f40194c491333[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 9 15:32:40 2015 +0100

    dns: implement tx de_state

[33mcommit 774bb9035130efb95d32fe349e11483394dc2377[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 9 11:08:47 2015 +0100

    http: clean up tx destate at tx destroy

[33mcommit 6279da0fbd643ea365f338bb5c27246da09f9aaa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 6 19:37:55 2015 +0100

    http: support per TX destate storage

[33mcommit 1cf02560c8aa60ec3f009f4efee28ac08dcfb637[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 6 19:11:10 2015 +0100

    app-layer: per tx destate
    
    Add API calls for storing detection state in the TX.

[33mcommit 866d9684eaef61481d9a3bb52ab057e772980d05[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 26 18:40:31 2015 +0100

    detect-state: fix profiling

[33mcommit 7e752799771b8c4df725dd228ba8cca3b07412be[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 26 18:38:04 2015 +0100

    detect-state: various cleanups

[33mcommit eec22ce19b597d56efea8470a2c665374f14794d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 26 17:23:49 2015 +0100

    detect-state: rip per sig detect out of ContinueDetect

[33mcommit bf818b8fb244fad460dfd776c83438e29fb01d04[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 26 17:32:36 2015 +0100

    detect-state: remove DeStateResetFileInspection
    
    It was effectively unused.

[33mcommit 206f9d40108d72c687e5444e5c987d525843934c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 26 17:49:30 2015 +0100

    detect-state: remove redundant code

[33mcommit e390e24a7cabe9ae8bf7fd39868d8d23d5f9eed6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 26 16:11:31 2015 +0100

    detect-state: add helper to test state
    
    Add little helper function StateIsValid() to test if the state
    can be inspected safely.
    
    Cleans up stateful detection loops.

[33mcommit 072ae12771f516e23ba23aa21b78f32757858566[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 26 15:58:43 2015 +0100

    detect-state: add helper to indicate last tx
    
    Add little helper to indicate current tx is that last we have.

[33mcommit b710f2dd59fbfc676ad3b3ee9f444d23bb3a8b13[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 26 15:23:41 2015 +0100

    detect-state: cleanup ContinueDetection
    
    Only lock f->de_state->m when we start to access it. So after
    declaration and initialization of local vars.

[33mcommit 54cb2b68774c5e037777d22703ecf47427f2273a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 26 15:02:21 2015 +0100

    detect-state: cleanup retvals
    
    Use DETECT_ENGINE_INSPECT_SIG_* instead of 0, 1, 2 and 3.

[33mcommit 97cab030d77cac2ab016953008929adcf9e60235[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 9 15:49:28 2015 +0100

    modbus: shrink data structure

[33mcommit 9f1b4176608bf71d75b83910a02b82948b35eee4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 27 17:10:09 2015 +0100

    file: don't 'close' file if we need to track it

[33mcommit 6723d03c7e1e2bdafe06249c6c8bd54669d3e0a7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 9 14:56:24 2015 +0100

    http: add inspection engine for http request line
    
    No MPM though.

[33mcommit c0f265fd82cdf4fccad2eb8c53f37ce325d5d438[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 27 00:04:11 2015 +0100

    http: fix stat_msg and stat_code state tracking

[33mcommit 5b8c94db3026bcfd324eaa6f61a1655358182667[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 21 14:19:48 2015 +0100

    Remove spinning PacketPoolWait
    
    PacketPoolWait in autofp can wait for considerable time. Until now
    it was essentially spinning, keeping the CPU 100% busy.
    
    This patch introduces a condition to wait in such cases.
    
    Atomically flag pool that consumer is waiting, so that we can sync
    the pending pool right away instead of waiting for the
    MAX_PENDING_RETURN_PACKETS limit.

[33mcommit 2d7f79a62bc1ad75dd5d97b1a43710a5b36552cc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 21 19:27:34 2014 +0200

    drop json log: log out 'drop' signature
    
    If no normal sig was logged as the 'drop' reason, try the stored
    drop signature instead, this will also log out 'noalert' sigs.

[33mcommit 2e754ca6fadf9caf94a6d09390a58785feca0843[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 20 15:43:42 2014 +0200

    drop json: make alerts logging optional
    
    Make logging out alerts that caused the drop optional.

[33mcommit 6b172bb0103d723574640b53c24f4b00d35a0df3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 20 14:02:20 2014 +0200

    drop json: add sids (if applicable)
    
    If a drop is caused by a SID match, add it to the drop record.

[33mcommit 8a97bb0d042ea25c445872e142de406aa432ca1e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 20 13:59:28 2014 +0200

    alert json: move alert info into function
    
    Move adding the alert info (sid,rev,gid,etc) into it's own function,
    so it can be called from other outputs as well.

[33mcommit e9857200b3704d4c4a0feedca098a8b6898b9b21[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 21 10:04:57 2014 +0200

    detect: set action from utility function
    
    Set actions that are set directly from Signatures using the new
    utility function DetectSignatureApplyActions. This will apply
    the actions and also store info about the 'drop' that first made
    the rule drop.

[33mcommit c914f7bcdc40d60b6a27354a9c04d79cb89d52ae[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 21 10:43:56 2014 +0200

    detect: cleanup, remove unused order_id
    
    No longer used, so remove.

[33mcommit b8e7d3a2593ee5673aabac267ac0f2a5ea4fbe93[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 19 19:16:49 2015 +0100

    flow-timeout: fix init of pseudo packet
    
    The code was not checking if we had enough room in the direct
    data. In case default_packet_size was set really small, this was
    resulting in data being written over the data and causing a crash.
    
    The patch fixes the issue by forcing an allocation if the direct
    data size in the Packet is to small.

[33mcommit e138a2ac1e0e0be8421b21d1c461cbfb0733731e[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Feb 12 21:15:27 2015 +0100

    decode: introduce PacketCallocExtPkt function
    
    In flow timeout handling we need a function that allocate and blank
    a place that will be used to put constructed packet data. This new
    function has no other goal.

[33mcommit ab1d69fc4eb0e4ccd8902c198af0cb94fce1e696[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Feb 27 11:30:47 2015 -0600

    When re-opening a log file on HUP, always append.
    
    This will prevent log files that have not been rotated by some
    external tool from being deleted, but log files that were
    rotated (moved out of the way) will be re-opened.
    
    This is a better default behaviour, especially when not all
    log files are rotated at the same time.
    
    Thanks to iro on IRC.

[33mcommit 6ed246c041b9d08e0616401d011cea4d28378763[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Jan 15 14:43:45 2015 -0600

    Don't attempt to load the rule files if the rule-files configuration
    node is not a sequence.  Instead log a warning as this is usually
    a configuration error.

[33mcommit a243a42bdf1bf4bc88deebc2408c51af7e85df5a[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Jan 15 14:43:22 2015 -0600

    New function to test if a configuration node is a sequence or not.

[33mcommit 290b01f95e1864fca8926797a183260146659213[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Feb 24 17:46:06 2015 +0100

    af-packet: don't unlock twice the bpf mutex

[33mcommit 47d9c7b21170540073d4861c4f2e598bd3bf9c5b[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Mar 6 22:21:12 2015 +0100

    json-alert: use getter for appstate

[33mcommit 54b13851cc390eb1a7963d564a6a1c6d733ccd50[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Mar 6 22:17:30 2015 +0100

    flow: constify getters param
    
    Some potential callers are already using constified values so it
    is good to do it.

[33mcommit 881f32cc02e897fec8cb0c1bec022709f4748083[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Mar 6 21:16:52 2015 +0100

    json-alert: add SSH fields in alert logging

[33mcommit c1970a3655360ef603288d50451a6547becdaf3a[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Mar 6 21:05:51 2015 +0100

    json-ssh: export logging function
    
    It will be use in alert logging to display SSH information.

[33mcommit 180faece7cb5df942bff8f6583e68c45ed7ba19f[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Mar 6 20:03:13 2015 +0100

    json-alert: log tls info in alert
    
    This patch adds the capabilities to log the TLS information the
    same way it is currently possible to do with HTTP. As it is
    quite hard to read ASN.1 directly in the stream, this will help
    people to understand why suricata is firing on alert relative
    to TLS.

[33mcommit 22182e7a8430626753b4903db9705b8359a08904[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Mar 6 19:55:28 2015 +0100

    json-tls: refactor to export logging function
    
    To be able to add TLS data in alert we need to do the same as what
    is done with HTTP ie export the logging functions.

[33mcommit fb0ecaba05cfde20198975037116ce9b2effa7b1[m
Author: Ken Steele <ken@tilera.com>
Date:   Thu Feb 26 23:22:35 2015 -0500

    Inject pseudo packet periodically when there is not traffic in mPIPE.
    
    To prevent pseudo packets from not being processed when there is no traffic,
    inject a pseudo packet if no traffic is seen by a thread for ~100ms.

[33mcommit 972037248d23ce3edaa654e89bc15863db6564f6[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Thu Jan 15 09:44:45 2015 -0600

    Define _DEFAULT_SOURCE.  Its the replacement for _BSD_SOURCE which
    which has been deprecated as of glibc 2.20.

[33mcommit 5f4b745f92cc9cdb29f17202eb477d0ae8c8567e[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Feb 18 11:45:12 2015 +0100

    build: don't link with libnfnetlink
    
    Don't link suricata with libnfnetlink when we don't have support
    for NFQUEUE or NFLOG. Previously, suricata was linked with this
    library without reason.

[33mcommit 20b984999999fa48822fef9763efe492dd6b4de8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 25 07:37:54 2015 +0100

    util-magic: make unittests less specific
    
    So they pass on CentOS 5.11 as well.

[33mcommit ec2be2643b0e1e1f92245a56cf8e53cd19d7c6a2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 4 17:06:59 2015 +0100

    app-layer: init flow in tests

[33mcommit ee7422de0a79054f0271b40fb17dc21d6b12a675[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Feb 12 22:27:07 2015 +0100

    pcap-file: add missing atomic init
    
    It is mandatory to init all atomic to avoid problem on system
    without atomic support.

[33mcommit ed147d3b91bf5c2755e1bfbfd2eafbe6e724e968[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Feb 12 22:18:23 2015 +0100

    runmode-pcap-file: suppress useless include

[33mcommit ae6ef9acb42bbfd4decd94f6a7f278f3bcab97fe[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 4 16:47:28 2015 +0100

    flow-manager: init global atomics

[33mcommit ae8f2a4e62dc2483266292f7e36b0ebb040e6f90[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 19 20:58:36 2015 +0100

    stream: fix unittests wrt flow

[33mcommit 784690b89a863334c7697c40c611661da95ebc54[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 19 11:45:09 2015 +0100

    Fix make distcheck on CentOS 5.11
    
    datarootdir was undefined. Define it.

[33mcommit 256388325dbe701f43a6710f725fe8a24a766258[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 19 10:39:50 2015 +0100

    Fix compiler warning on CentOS 5.11
    
    cc1: warnings being treated as errors
    app-layer-smtp.c: In function ‘SMTPParseCommandBDAT’:
    app-layer-smtp.c:908: warning: dereferencing type-punned pointer will break strict-aliasing rules

[33mcommit 3f44bd504a055e863629e930c72028899f818a3d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 19 10:29:14 2015 +0100

    CentOS 5.11 pkg-config fix
    
    Check for the minimal pkg-config 0.21 version. Without it, CentOS'
    pkg-config will fail with the warning:
    
    configure: error: The pkg-config script could not be found or is too old.

[33mcommit bed5b284121e800b6c5ae245a45085811f4d719a[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Feb 19 09:37:23 2015 +0100

    util-ioctl: don't build code RX ring on old system
    
    If ETHTOOL_GRXRINGS is undefined we will not be able to build the
    RX rings code. So we can make the build conditional to the
    definition of ETHTOOL_GRXRINGS.

[33mcommit e78e33a428865e1317d190a299976ed0253db26e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 18 23:46:19 2015 +0100

    http: add event for suspicious method delimeter
    
    Add event and rule for suspicious delim(s) between method and uri.
    
    Add unittests as well.

[33mcommit 5ad7198dc0896cd832a5a54158d9ebecb953d77c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 18 16:45:20 2015 +0100

    http: add libhtp uri warning event
    
    Add event for libhtp warning added 0.5.17 for URI's with suspicious
    delimeters.

[33mcommit 67d80c36b465c2f10aba8851ba0992aea6a67ec8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 25 11:06:41 2015 +0100

    stream: init global config after flow engine
    
    Stream depends on flow engine.

[33mcommit e90714afd68fad6ed78233182b243437456b2d1e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 23 13:06:44 2015 +0100

    http: remove unused and broken 'content-len' logic
    
    The HTTP tracking code would parse the content lenght and store it
    in the TX user data. It didn't take the possibility or errors into
    account though, leading to a possible negative int being cases to
    unsigned int. Luckily, the result was unused.
    
    This patch simply removes the offending code.
    
    Reported-by: The Yahoo pentest team

[33mcommit 647985d20d7da4fb1a27c74e3c6767d54826bc8a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 23 12:12:53 2015 +0100

    dcerpc: don't exit() on malloc failure
    
    In 2 places we would exit() if malloc failed. We should never exit in
    such cases. This patch silently handles it.

[33mcommit 5cd7bb2f140d03506b3280aaa71f612701d1a964[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 23 12:09:29 2015 +0100

    dcerpc: fix error handling for alloc errors
    
    Fix error handling of stub parsers. In case of SCRealloc error the
    function would return a non-error code. This could possibly lead to
    memory corruption.
    
    Reported-By: The Yahoo pentest team

[33mcommit 7426a9c64504ac2731c36fae23f54a1a3639b9cc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 18 08:50:01 2015 +0100

    flow: make TCP reuse handling in flow engine optional
    
    In case of autofp (or more general, when flow and stream engine
    run in different threads) the flow engine should not trigger a flow
    reuse as this can lead to race conditions between the flow and the
    stream engine.
    
    In such cases, the flow engine can be far ahead of the stream engine
    as packets are in a queue between the threads.
    
    Observed:
    
    Flow engine tags packet 10 as start of new flow. Flow is tagged as
    'reused'.
    
    Stream engine evaluates packet 5 which belongs to the old flow. It
    rejects the flow as it's tagged 'reused'. Attaches packet 5 to the
    new flow which is wrong.
    
    Solution:
    
    This patch connects the flow engines handling of reuse cases to
    the runmode. It hooks into the RunmodeSetFlowStreamAsync() call to
    notify the flow engine that it shouldn't handle the reuse.

[33mcommit d78be75b9fff92484379d8c031948a3f0cbab986[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 17 13:01:52 2015 +0100

    tcp reuse: don't double 'reuse'
    
    If the flow engine already reused a flow then the stream engine
    won't have to do the same.

[33mcommit 6ad53627de604f7bd8ac9bfa8a20aec03c3b177c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 17 12:47:01 2015 +0100

    flow: tag first packet in each direction
    
    Set a flowflag for the first packet in each direction:
    
    FLOW_PKT_TOSERVER_FIRST and FLOW_PKT_TOCLIENT_FIRST

[33mcommit c88cbb39fec66faef315c5968d0cacd8e309a780[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 17 10:34:53 2015 +0100

    tcp reuse: enable stream handling based on runmode
    
    Add a way for runmodes to state that flow and stream run asynchorously.
    
    In the stream engine, enable the TCP reuse handling only if that flag
    is set.

[33mcommit eaae008aeb68ac74468dad0fe473cf7cd04358ed[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 9 16:44:11 2015 +0100

    tcp reuse: support reuse on syn/ack
    
    Support TCP reuse on SYN/ACK. Only effective if midstream and/or
    async-oneside options are enabled.

[33mcommit 11e3f25de3c910eb2b15b360bdc7594ee214a3fc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 3 12:06:49 2015 +0100

    tcp reuse: unify autofp and single/workers check

[33mcommit 29f70bad34dbf1bd55bd149158d23e9143c86ff5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 22 17:30:10 2015 +0100

    tcp reuse: handle reuse in stream engine
    
    For the autofp case, handling TCP reuse in the flow engine didn't work.
    
    The problem is the mismatch between the moment the flow engine looks at
    packets and the stream, and the moment the stream engine runs. Flow engine
    is invoked in the packet capture thread(s), while the stream engine runs
    as part of the stream/detect thread(s). Because of the queues between
    those threads the flow manager may already inspect a new SYN while the
    stream engine still has to process the previous session.
    
    Moving the flow engine to the stream/detect thread(s) wasn't an option
    as the 'autofp' load balancing depends on the flow already being
    available in the packet.
    
    The solution here is to add a check for this condition to the stream
    engine. At this point the TCP state is up to date. If a TCP reuse case
    is encountered, this is the global logic:
    
    - detach packet for old flow
    - get a new flow and attach it to the packet
    - flag the old flow that it is now obsolete
    
    Additional logic makes sure that the packets already in the queue
    between the flow thread(s) and the stream thread are reassigned the
    new flow.
    
    Some special handling:
    
    Apply previous 'reuse' before checking for a new reuse. Otherwise we're
    tagging the wrong flow in some cases (multiple reuses in the same tuple).
    
    When in a flow/ssn reuse condition, properly remove the packet from
    the flow.
    
    Don't 'reuse' if packet is a SYN retransmission.
    
    The old flow is timed out normally by the flow manager.

[33mcommit 2fb9611223824e16ae853a2aaac96183d147cfb0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 2 17:14:49 2015 +0100

    flow: add util func to remove packet from flow
    
    Unsets the p::flowflags that were previously set.

[33mcommit cf58ecb084dec06a90a30185f825a38c648fa6d3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 2 15:46:24 2015 +0100

    flow: overwrite p::flowflags on first set

[33mcommit 34e1de69702749c1523d4c73d70cf45ccdc83740[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 2 14:40:21 2015 +0100

    flow: move flow/packet updates into util func
    
    Move the code responsible for updating the flow and packet after
    a new packet has come in to a util func "FlowHandlePacketUpdate"

[33mcommit db9f12ee516bcb2c8513f1755bc278979d055813[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 15 17:42:56 2014 +0100

    flow: add flow.tcp_reuse counter
    
    This replaces the tcp.reused_ssn counter. The flow engine now
    enforces the TCP flow reuse logic.
    
    The counter is incremented only when the flow is timed out, so
    after the "tcp closed" timeout expired for a flow.

[33mcommit d2eea7fd44b2cfcf7b740a249197dcabd88e8675[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 15 16:01:28 2014 +0100

    tcp reuse: remove old code

[33mcommit fb1b03c471700aa8de45b98210647aa91ec950ac[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 15 15:06:53 2014 +0100

    flow: handle TCP session reuse in flow engine
    
    Until now, TCP session reuse was handled in the TCP stream engine.
    If the state was TCP_CLOSED, a new SYN packet was received and a few
    other conditions were met, the flow was 'reset' and reused for the
    'new' TCP session.
    
    There are a number of problems with this approach:
    - it breaks the normal flow lifecycle wrt timeout, detection, logging
    - new TCP sessions could come in on different threads due to mismatches
      in timeouts between suricata and flow balancing hw/nic/drivers
    - cleanup code was often causing problems
    - it complicated locking because of the possible thread mismatch
    
    This patch implements a different solution, where a new TCP session also
    gets a new flow. To do this 2 main things needed to be done:
    
    1. the flow engine needed to be aware of when the TCP reuse case was
       happening
    2. the flow engine needs to be able to 'skip' the old flow once it was
       replaced by a new one
    
    To handle (1), a new function TcpSessionPacketSsnReuse() is introduced
    to check for the TCP reuse conditions. It's called from 'FlowCompare()'
    for TCP packets / TCP flows that are candidates for reuse. FlowCompare
    returns FALSE for the 'old' flow in the case of TCP reuse.
    
    This in turn will lead to the flow engine not finding a flow for the TCP
    SYN packet, resulting in the creation of a new flow.
    
    To handle (2), FlowCompare flags the 'old' flow. This flag causes future
    FlowCompare calls to always return FALSE on it. In other words, the flow
    can't be found anymore. It can only be accessed by:
    
    1. existing packets with a reference to it
    2. flow timeout handling as this logic gets the flows from walking the
       hash directly
    3. flow timeout pseudo packets, as they are set up by (2)
    
    The old flow will time out normally, as governed by the "tcp closed"
    flow timeout setting. At timeout, the normal detection, logging and
    cleanup code will process it.
    
    The flagging of a flow making it 'unfindable' in the flow hash is a bit
    of a hack. The reason for this approach over for example putting the
    old flow into a forced timeout queue where it could be timed out, is
    that such a queue could easily become a contention point. The TCP
    session reuse case can easily be created by an attacker. In case of
    multiple packet handlers, this could lead to contention on such a flow
    timeout queue.

[33mcommit 3b05b735928d8bf2bc35097f6cc77a7f9009496e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 10 12:03:42 2015 +0100

    tcp midstream: fix window scaling
    
    If stream is picked by ACK, we can't know the wscale, so we assume it's
    set to max. Howver, we didn't apply this to the initial window size we
    set.

[33mcommit d834173bb8a7dc6bc73837fe720b3be3867f4194[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 17 12:08:20 2015 +0100

    detect-flow: use dedicated flags
    
    The flow keyword used flag names that were shared with the
    Packet::flowflags field. Some of the flags were'nt used by the packet
    though. This lead to waste of some 'flag space'.
    
    This patch defines dedicated flags for the flow keyword and removes
    the otherwise unused flags from the FLOW_PKT_* space.

[33mcommit bc2c7f462e79b5000636d5160301ee27dfff0f16[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 5 09:36:34 2015 +0100

    stats api: call thread deinit API functions
    
    Thread deinit funcs weren't called. This meant the lua scripts 'deinit'
    functions weren't called either.

[33mcommit 10104066e17a59769467cc5350eac59ee37404f1[m
Author: gureedo <gureedo@intersvyaz.net>
Date:   Sat Dec 13 16:12:40 2014 +0500

    netmap support

[33mcommit cbe934267efa0973b042853cd36a99c2b3c83941[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 23 10:22:55 2015 +0100

    file: register filedata log before file log
    
    This way the file log can log the 'stored' info that the filedata
    log sets.

[33mcommit c58b2b4b18375781d56384c5c2e123c6a2fa3e31[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 23 10:22:01 2015 +0100

    file: improve file pruning
    
    Check if file has been logged/stored before considering it 'done'.

[33mcommit e58fd3cc6e29312e957f8b78b43a7115883b4eb8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 23 10:20:37 2015 +0100

    runmodes: add funcs to check if file loggers enabled
    
    Add functions to check if file/filedata loggers are enabled.

[33mcommit fbe6dac1ae013d4d118cbe3da2fe9351f19dd9d4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 22 19:24:35 2015 +0100

    file: optimize file pruning
    
    FilePrune would clear the files, but not free them and remove them
    from the list. This lead to ever growing lists in some cases.
    Especially in HTTP sessions with many transactions, this could slow
    us down.

[33mcommit 5251ea9ff5a8b419cb3f642606a036210c6e0bd1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jan 24 14:10:11 2015 +0100

    flow: lockless flow manager checks
    
    Until this point, the flow manager would check for timed out flows
    by walking the flow hash, locking first the hash row and then each
    individual flow to get it's state and timestamp. To not be too
    intrusive trylocks were used so that a busy flow wouldn't cause the
    flow manager to wait for a long time while holding the hash row lock.
    
    Building on the changes in handling of the flow state and lastts
    fields, this patch changes the flow managers behavior.
    
    It can now get a flows state atomically and the lastts can be safely
    read while holding just the flow hash row lock. This allows the flow
    manager to do the basic time out check much more cheaply:
    
    1. it doesn't have to wait for getting a lock
    2. it doesn't interupt the packet path
    
    As a consequence the trylock is now also gone. A flow that returns
    'true' on timeout is pretty much certainly not going to be busy so
    we can safely lock it unconditionally. This also means the flow
    manager now walks the entire row unconditionally and is guaranteed
    to inspect each flow in the row.
    
    To make sure the functions called before the flow lock don't
    accidentally change the flow (which would require a lock) the args
    to these flows are changed to const pointers.

[33mcommit 5587372ce15cf3ead98867e1daf3dd010529b4ad[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jan 24 13:46:25 2015 +0100

    flow: modify lastts update logic
    
    In the lastts timeval struct field in the flow the timestamp of the
    last packet to update is recorded. This allows for tracking the timeout
    of the flow. So far, this value was updated under the flow lock and also
    read under the flow lock.
    
    This patch moves the updating of this field to the FlowGetFlowFromHash
    function, where it updated at the point where both the Flow and the
    Flow Hash Row lock are held. This guarantees that the field is only
    updated when both locks are held.
    
    This makes reading the field safe when either lock is held, which is the
    purpose of this patch.
    
    The flow manager, while holding the flow hash row lock, can now safely
    read the lastts value. This allows it to do the flow timeout check
    without actually locking the flow.

[33mcommit a0732d3db23538689af9432e012d26241996b99b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jan 24 13:18:51 2015 +0100

    flow: change flow state logic
    
    A flow has 3 states: NEW, ESTABLISHED and CLOSED.
    
    For all protocols except TCP, a flow is in state NEW as long as just one
    side of the conversation has been seen. When both sides have been
    observed the state is moved to ESTABLISHED.
    
    TCP has a different logic, controlled by the stream engine. Here the TCP
    state is leading.
    
    Until now, when parts of the engine needed to know the flow state, it
    would invoke a per protocol callback 'GetProtoState'. For TCP this would
    return the state based on the TcpSession.
    
    This patch changes this logic. It introduces an atomic variable in the
    flow 'flow_state'. It defaults to NEW and is set to ESTABLISHED for non-
    TCP protocols when we've seen both sides of the conversation.
    
    For TCP, the state is updated from the TCP engine directly.
    
    The goal is to allow for access to the state without holding the Flow's
    main mutex lock. This will later allow the Flow Manager(s) to evaluate
    the Flow w/o interupting it.

[33mcommit 9327b08ab16c10807b70a2fb200d5681ed6aea39[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 22 13:43:31 2015 +0100

    tcp: add stream.reassembly.zero-copy-size option
    
    The option sets in bytes the value at which segment data is passed to
    the app layer API directly. Data sizes equal to and higher than the
    value set are passed on directly.
    
    Default is 128.

[33mcommit 37b56dca5570313a0bee6f19d1955f8baf40b926[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 16 12:12:38 2015 +0100

    tcp: add debug stats about reassembly fast paths
    
    Only shown if --enable-debug is passed to configure.

[33mcommit 2bba5eb7044504044b9a0e913e95fa4f542e49e4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 16 11:53:29 2015 +0100

    tcp: zero copy fast path in app-layer reassembly
    
    Create 2 'fast paths' for app layer reassembly. Both are about reducing
    copying. In the cases described below, we pass the segment's data
    directly to the app layer API, instead of first copying it into a buffer
    than we then pass. This safes a copy.
    
    The first is for the case when we have just one single segment that was
    just ack'd. As we know that we won't use any other segment this round,
    we can just use the segment data.
    
    The second case is more aggressive. When the segment meets a certain
    size limit (currently hardcoded at 128 bytes), we pass it to the
    app-layer API directly. Thus invoking the app-layer somewhat more often
    to safe some copies.

[33mcommit 8c1bc7cfb6adddfbfcbad6ee087b5fd45383cd66[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 9 19:08:14 2014 +0100

    stream: move raw stream gap handling into util func

[33mcommit 6ca9c8eb32c5a44d52ae4b3d6ad0d61848025739[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 9 19:01:03 2014 +0100

    stream: move raw reassembly into util func

[33mcommit ff2fecf59099f3d1808d7d89ee2c459bdf59ab63[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 9 15:39:49 2014 +0100

    stream: remove StreamTcpReassembleInlineAppLayer
    
    Function is now unused.

[33mcommit 97908bcd2d4157536ba03fd724ed0ee6351ab73f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 9 15:27:58 2014 +0100

    stream: unify inline and non-inline applayer assembly
    
    Unifiy inline and non-inline app layer stream reassembly to aid
    maintainability of the code.

[33mcommit e1d134b0275a1fef073cee55b75b43107164a851[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 9 14:36:05 2014 +0100

    stream: remove STREAM_SET_FLAGS
    
    Use the unified StreamGetAppLayerFlags instead.

[33mcommit 29d2483efb47108efb26728483e94ea502ac7f8c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 9 14:26:35 2014 +0100

    stream: update inline tests
    
    Make sure inline tests set the stream_inline flag.

[33mcommit e4cb8715de69b12fbb1605a387b79ff221bf9928[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 9 14:25:34 2014 +0100

    stream: replace STREAM_SET_INLINE_FLAGS macro
    
    Replace it by a generic function StreamGetAppLayerFlags, that can
    be used both by inline and non-inline.

[33mcommit ed791a562eddbcd14b31063c6a1519c2453c3a76[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 9 13:48:00 2014 +0100

    stream: track data sent to app-layer

[33mcommit e494336453c16c00f1026da63685ffdc2b9f567f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 9 12:56:55 2014 +0100

    stream: move reassembly loop into util funcs
    
    Move IDS per segment reassembly and gap handling into utility functions.

[33mcommit a5641bc7c225d447d21a65927b4077f095d7dca2[m[33m ([m[1;33mtag: suricata-2.1beta3[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 29 16:51:54 2015 +0100

    Update changelog for 2.1beta3

[33mcommit 5b6f8bda1d86df611ddba3b9180963a1a12e513d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 21 11:43:58 2015 +0100

    detect: fix small memory leaks
    
    Fix small memory leaks in option parsing. Move away from
    pcre_get_substring in favor of pcre_copy_substring.
    
    Related to #1046.

[33mcommit 5a8094136ce667b66bea7484f306d6423fea96b8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 21 11:31:15 2015 +0100

    Clean up Conf API memory on shutdown.

[33mcommit 04e49cea892c012a1238a17a8f80ed66a17228ba[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jan 18 10:54:57 2015 +0100

    Fix live reload detect counter setup
    
    When profiling was compiled in the detect counters were not setup
    properly after a reload.

[33mcommit 844065bf5853fff4700042032cd45eae8f1eb003[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 13 10:46:56 2015 +0100

    conf api: use const pointers where possible
    
    Use const pointers where possible in the Conf API.

[33mcommit ddce14360d15c2978bd875c4cbb4421dc605bbde[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 16 22:00:28 2015 +0100

    Cosmetic fixes to main()

[33mcommit a3de4ecd9786430fe61462ec4f8f6cfd64304785[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jan 17 13:38:44 2015 +0100

    Suppress debug statements

[33mcommit a8c16405fbba9744a3cfdd094617bb29d82d944b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jan 17 11:54:38 2015 +0100

    detect: properly size det_ctx::non_mpm_id_array
    
    Track which sgh has the higest non-mpm sig count and use that value
    to size the det_ctx::non_mpm_id_array array.

[33mcommit 62751c801794ad36ce21824604e98843f68cfe8e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jan 17 10:57:02 2015 +0100

    Fix live reload detect thread ctx setup
    
    Code failed to setup non_mpm_id_array in case of a live reload.

[33mcommit 4e98a3e530f701240a050acffe67fd8810400a32[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 10 10:54:22 2014 +0100

    AC: fix memory leak

[33mcommit f88405c650defda62b26b5b16d8d20fa9ce0906e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 10 10:29:48 2014 +0100

    geoip: adapt to 'const' pointer passing

[33mcommit f1f5428faa1d8cf71256412b703413953ab5533d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 8 14:02:26 2014 +0100

    detect: expand mask checking
    
    Change mask to u16, and add checks for various protocol states
    that need to be present for a rule to be considered.

[33mcommit ca59eabca3c5b5cbd1a21cf5c187b0a2e6dbb3ce[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 8 13:33:15 2014 +0100

    detect: introduce DetectPrefilterBuildNonMpmList
    
    Move building of non-mpm list into a separate function, that is inlined
    for performance reasons.

[33mcommit cc4f7a4b96ff531095a30a4a0fb35bb69fe0ba00[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 8 13:23:14 2014 +0100

    detect: add profiling for non-mpm list build & filter

[33mcommit 4c10635dc1f820d37e43f44e06d318decc5cd150[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 8 12:25:30 2014 +0100

    detect: optimize non-mpm mask checking
    
    Store id and mask in a single array of type SignatureNonMpmStore so
    that both are loaded into the same cache line.

[33mcommit b5a31271512cef7c7fd2ad4b009e46b8f6490d40[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 7 20:57:14 2014 +0100

    detect: add mask check prefilter for non mpm list
    
    Add mask array for non_mpm sigs, so that we can exclude many sigs before
    we merge sort.
    
    Shows 50% less non mpm sigs inspected on average.

[33mcommit 904441327c93c799a521851f1e3ad62eac74814b[m
Author: Ken Steele <ken@tilera.com>
Date:   Fri Nov 7 12:46:46 2014 -0500

    Conditionalize SigMatch performance counters.
    
    Only include the counters when PROFILING.

[33mcommit 30b7fdcb492425a6786dfc025bad0a99515f7686[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 6 16:05:57 2014 +0100

    Detect perf counters

[33mcommit ef6875d583b1d270997f385d727abffd0242e369[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 8 14:30:52 2014 +0100

    detect: Disable unused SignatureHeader code

[33mcommit 65af1f1c5e99c4219a7bba410d433346da0028e3[m
Author: Ken Steele <ken@tilera.com>
Date:   Fri Oct 10 17:13:08 2014 -0400

    Remove sgh->mask_array
    
    Not needed by new MPM opt.

[33mcommit 4bd280f1963000497cf76c27212cefea791305f5[m
Author: Ken Steele <ken@tilera.com>
Date:   Mon Nov 3 11:50:35 2014 -0500

    Indentation clean up

[33mcommit 403b5a46457f5f5e92ab5635ac245ff816c9c72e[m
Author: Ken Steele <ken@tilera.com>
Date:   Sun Nov 2 22:27:07 2014 -0500

    Further optimize merging mpm and non-mpm rule ID lists.
    
    When reaching the end of either list, merging is no longer required,
    simply walk down the other list.
    
    If the non-MPM list can't have duplicates, it would be worth removing
    the duplicate check for the non-MPM list when it is the only non-empty list
    remaining.

[33mcommit 86f4c6c47b73618ee1980e05113a3eac76300b3e[m
Author: Ken Steele <ken@tilera.com>
Date:   Sun Nov 2 18:49:54 2014 -0500

    Custom Quick Sort for Signature IDs
    
    Use an in place Quick Sort instead of qsort(), which does merge sort and
    calls memcpy().
    
    Improves performance on my tests.

[33mcommit 736ac6a45980c225b69117bd9db7ecfca6536ef9[m
Author: Ken Steele <ken@tilera.com>
Date:   Sun Nov 2 14:12:16 2014 -0500

    Use SigIntId as the type for storing signature IDs (Internal)
    
    Previously using uint32_t, but SigIntId is currently uint16_t, so arrays
    will take less memory.

[33mcommit d01d3324fc2fbf3d3d7050cb12bf8e888dc770eb[m
Author: Ken Steele <ken@tilera.com>
Date:   Fri Oct 17 17:25:30 2014 -0400

    Increase max pattern ID allowed in MPM AC-tile to 28-bits

[33mcommit 6717c356e3d23dccbd837c85e37e51566e7a4f54[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 8 12:11:15 2014 +0100

    Clean up sm_array memory at SigFree

[33mcommit 1874784c1075ce6bfcb9ecd235396dd8f874b91f[m
Author: Ken Steele <ken@tilera.com>
Date:   Tue Oct 14 17:24:14 2014 -0400

    Create optimized sig_arrays from sig_lists
    
    Create a copy of the SigMatch data in the sig_lists linked-lists and store
    it in an array for faster access and not next and previous pointers. The
    array is then used when calling the Match() functions.
    
    Gives a 7.7% speed up on one test.

[33mcommit 923a77e952cece26b5142f67b06964838fda46ed[m
Author: Ken Steele <ken@tilera.com>
Date:   Tue Oct 14 16:08:59 2014 -0400

    Change Match() function to take const SigMatchCtx*
    
    The Match functions don't need a pointer to the SigMatch object, just the
    context pointer contained inside, so pass the Context to the Match function
    rather than the SigMatch object. This allows for further optimization.
    
    Change SigMatch->ctx to have type SigMatchCtx* rather than void* for better
    type checking. This requires adding type casts when using or assigning it.
    
    The SigMatch contex should not be changed by the Match() funciton, so pass it
    as a const SigMatchCtx*.

[33mcommit 900def5caf67c8fd1552903c00ed87a839a907d7[m
Author: Ken Steele <ken@tilera.com>
Date:   Mon Oct 13 14:36:45 2014 -0400

    Create Specialized SCMemcmpNZ() when the length can't be zero.

[33mcommit 783507038571aea7c27bf73cf3c53c25dc283d68[m
Author: Ken Steele <ken@tilera.com>
Date:   Fri Oct 10 13:55:55 2014 -0400

    Replace memcpy() in MpmAddSids with copy loop
    
    For the short size of most sids lists, a straight copy loop is faster.

[33mcommit 83ed01a2792b52a79dff6bf214477a73a7a20712[m
Author: Ken Steele <ken@tilera.com>
Date:   Fri Oct 10 10:34:48 2014 -0400

    Fix compiler warnings in ac-tile.
    
    Signed vs unsigned comparisons.

[33mcommit 1c76fa50b1d89a1350e4c1842b755ded50b7ce95[m
Author: Ken Steele <ken@tilera.com>
Date:   Mon Oct 6 10:00:36 2014 -0400

    Prefetch the next signature pointer
    
    Read one signature pointer ahead to prefetch the value.
    Use a variable, sflags, for s->flags, since it is used many times and the
    compiles doesn't know that the signatures structure doesn't change, so it
    will reload s->flags.

[33mcommit fa51118dfe05bc83afbe3732e3d03953a8280167[m
Author: Ken Steele <ken@tilera.com>
Date:   Fri Sep 5 17:21:28 2014 -0400

    Move type first in SigMatch array since it is used more often.

[33mcommit 7a2095d851e9f67901125e7ff56f6572e4ca82c4[m
Author: Ken Steele <ken@tilera.com>
Date:   Fri Oct 3 17:12:06 2014 -0400

    In AC-Tile, convert from using pids for indexing to pattern index
    
    Use an MPM specific pattern index, which is simply an index starting
    at zero and incremented for each pattern added to the MPM, rather than
    the externally provided Pattern ID (pid), since that can be much
    larger than the number of patterns. The Pattern ID is shared across at
    MPMs. For example, an MPM with one pattern with pid=8000 would result
    in a max_pid of 8000, so the pid_pat_list would have 8000 entries.
    
    The pid_pat_list[] is replaced by a array of pattern indexes. The PID is
    moved to the SCACTilePatternList as a single value. The PatternList is
    also indexed by the Pattern Index.
    
    max_pat_id is no longer needed and mpm_ctx->pattern_cnt is used instead.
    
    The local bitarray is then also indexed by pattern index instead of PID, making
    it much smaller. The local bit array sets a bit for each pattern found
    for this MPM. It is only kept during one MPM search (stack allocated).
    
    One note, the local bit array is checked first and if the pattern has already
    been found, it will stop checking, but count a match. This could result in
    over counting matches of case-sensitve matches, since following case-insensitive
    matches will also be counted. For example, finding "Foo" in "foo Foo foo" would
    report finding "Foo" 2 times, mis-counting the third word as "Foo".

[33mcommit 77269fbb2c5d6b6621a8c9198d8a3e2c02090e26[m
Author: Ken Steele <ken@tilera.com>
Date:   Mon Nov 17 10:24:27 2014 -0500

    Fix missing use of MpmAddPid()
    
    Found by Victor using ASAN. One place was not checking to resize the
    pid array before adding a new PID.

[33mcommit eaac9c8d938b5d898813438505429e2da1562e62[m
Author: Ken Steele <ken@tilera.com>
Date:   Fri Nov 7 10:52:08 2014 -0500

    fix check in PmqMerge

[33mcommit 1c03eb56d0a9af1ca8015638d96b0f676c010ff3[m
Author: Ken Steele <ken@tilera.com>
Date:   Thu Nov 6 14:57:53 2014 -0500

    Fix bug in MPM rule array handling
    
    In PmqMerge() use MpmAddSids() instead of blindly copying the src
    rule list onto the end of the dst rule list, since there might not
    be enough room in the dst list. MpmAddSids() will resize the dst array
    if needed.
    
    Also add code to MpmAddSids() MpmAddPid() to better handle the case
    that realloc fails to get more space. It first tries 2x the needed
    space, but if that fails, it tries for just 1x. If that fails resize
    returns 0. For MpmAddPid(), if resize fails, the new pid is lost. For
    MpmAddSids(), as many SIDs as will fit are added, but some will be
    lost.

[33mcommit ab8b1158b07f4d58171d560bc3f34e4cc379e738[m
Author: Ken Steele <ken@tilera.com>
Date:   Wed Oct 8 14:36:29 2014 -0400

    Dynamically resize pattern id array as needed
    
    Rather than creating the array of size maxpatid, dynamically resize as needed.
    This also handles the case where duplicate pid are added to the array.
    
    Also fix error in bitarray allocation (local version) to always use bitarray_size.

[33mcommit 104a9034787a09420e779ff921f3de437e0b7272[m
Author: Ken Steele <ken@tilera.com>
Date:   Fri Oct 3 13:30:57 2014 -0400

    Dynamically resize pmq->rule_id_array
    
    Rather than statically allocate 64K entries in every rule_id_array,
    increase the size only when needed. Created a new function MpmAddSids()
    to check the size before adding the new sids. If the array is not large
    enough, it calls MpmAddSidsResize() that calls realloc and does error
    checking. If the realloc fails, it prints an error and drops the new sids
    on the floor, which seems better than exiting Suricata.
    
    The size is increased to (current_size + new_count) * 2. This handles the
    case where new_count > current_size, which would not be handled by simply
    using current_size * 2. It should also be faster than simply reallocing to
    current_size + new_count, which would then require another realloc for each
    new addition.

[33mcommit d31db4ed1c91a72d2518ec9646d9812b0b9ba22c[m
Author: Ken Steele <ken@tilera.com>
Date:   Tue Sep 30 13:04:27 2014 -0400

    Fix clang warning
    
    Clang doesn't seem to like defining a function within a function.

[33mcommit 23d2a1c4223d7c2b85f4aef23aca1c8cbee0853a[m
Author: Ken Steele <ken@tilera.com>
Date:   Fri Oct 31 13:22:55 2014 -0400

    Optimize DetectPrefilterMergeSort
    
    Fixup rebase changes to remove debug code

[33mcommit f83022d818616ccacf3e532564d38d9d51f19d74[m
Author: Ken Steele <ken@tilera.com>
Date:   Wed Oct 1 17:13:54 2014 -0400

    Implement MPM opt for ac-bs and ac-gfbs
    
    Copies sids changes from ac.

[33mcommit d03f1244457e65831ab72f70f8ea606f1a5ea7a0[m
Author: Ken Steele <ken@tilera.com>
Date:   Tue Sep 30 10:58:35 2014 -0400

    Implement MPM opt for b2g, b3g, wumanber
    
    Found problems in b2gm and b2gc, so those are removed.

[33mcommit edaefe5af259a8ac778eabb4958c92a0c632fc4d[m
Author: Ken Steele <ken@tilera.com>
Date:   Wed Sep 3 09:17:45 2014 -0400

    Fix AC-tile for new pattern ID array.

[33mcommit 29074af9a6fc930ce772a4b70d7caff5eb59e97d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 19 15:09:59 2014 +0200

    AC: use local bit array
    
    Use a local pattern bit array to making sure we don't match more than
    once, in addition to the pmq bitarray that is still used for results
    validation higher up in the rule matching process.
    
    Why: pmq->pattern_id_bitarray is currently sometimes used in a
    'stateful' way, meaning that for a single packet we run multiple
    MPM's on the same pmq w/o resetting it.
    
    The new bitarray is used to determine wherther we need to append the
    patterns associated 'sids' list to the pmq rule_id_array.
    
    It has been observed that MPM1 matches for PAT1, and MPM2 matches for
    PAT1 as well. However, in MPM1 PAT1 doesn't have the same sids list.
    In this case MPM2 would not add it's sids to the list, leading to missed
    detection.

[33mcommit 7876277119a5326dd183aac048a342e48294c24c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 19 15:02:49 2014 +0200

    detect: move checks from prefilter to rule detect
    
    Move the prefilter checks to the main detect loop.

[33mcommit d1d895a8841b35c9bfd350f49a80636be9c19221[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 18 16:05:49 2014 +0200

    Replace build match array with new filter logic
    
    Use MPM and non-MPM lists to build our match array. Both lists are
    sorted, and are merged and sorted into the match array.
    
    This disables the old match array building code and thus also bypasses
    the mask checking.

[33mcommit 1f57e25c0324fc32a2fb9dc457f7282687256ee3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 18 16:05:16 2014 +0200

    detect: Add negated MPM to non-MPM array
    
    Treat negated MPM sigs as if non-MPM, so we consider them always.
    
    As MPM results and non-MPM rules lists are now merged and considered
    for further inspection, rules that need to be considerd when a pattern
    is absent are caught in the middle.
    
    As a HACK/workaround this patch adds them to the non-MPM list. This
    causes them to be inspected each time.

[33mcommit f5df526f9bd49c745ebc1d1bf06ba23fff8d9ff6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 18 13:51:40 2014 +0200

    Detect: create per sgh non-MPM rule array
    
    Array of rule id's that are not using MPM prefiltering. These will be
    merged with the MPM results array. Together these should lead to a
    list of all the rules that can possibly match.

[33mcommit e49d0a592428ab9fa3cc129f4ad0582fd2c75db9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 18 13:19:07 2014 +0200

    MPM: build sid list from MPM matches
    
    Pmq add rule list: Array of uint32_t's to store (internal) sids from the MPM.
    
    AC: store sids in the pattern list, append to Pmq::rule_id_array on match.
    
    Detect: sort rule_id_array after it was set up by the MPM. Rule id's
    (Signature::num) are ordered, and the rule's with the lowest id are to
    be inspected first. As the MPM doesn't fill the array in order, but instead
    'randomly' we need this sort step to assure proper inspection order.

[33mcommit b96645ded204c66670f2d09d2d06adb457c5c554[m
Author: Ken Steele <ken@tilera.com>
Date:   Fri Sep 5 17:14:34 2014 -0400

    Create a wrapper around DetectFlowvarProcessList() to check for empty list
    
    Creates an inline wrapper to check for flowvarlist == NULL before calling
    DetectFlowvarProcessList() to remove the overhead of checking since the
    list is usually empty.

[33mcommit 5008d0a58b5696ad2069aa20838a33d901171ce5[m
Author: Ken Steele <ken@tilera.com>
Date:   Thu Oct 16 08:19:25 2014 -0400

    Remove the b2gm and b2gc MPMs
    
    These MPMs have code that looks like it won't work and updating them to
    for the new MPM optimization wasn't working.

[33mcommit 227a7de351ff3c93957dfed8292dcfa106fbb1b8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 8 10:40:17 2014 +0100

    Global define of MIN
    
    Some OS' provide it automatically, so make sure we define it
    conditionally in one place.

[33mcommit bcfd61416ff789520cfa793d7f69c80a52bd0964[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 12 18:20:24 2014 +0100

    Fix a fix: defrag OOM condition
    
    ** CID 1257764:  Dereference after null check  (FORWARD_NULL)
    /src/defrag.c: 291 in Defrag4Reassemble()
    
    ** CID 1257763:  Dereference after null check  (FORWARD_NULL)
    /src/defrag.c: 409 in Defrag6Reassemble()
    
    In the error case 'rp' can be both NULL or non-NULL.

[33mcommit 43a1007788b453fdaffcd8e7ca74d47e0e510863[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 17 10:30:34 2014 +0100

    detect: add test for memcmp issue

[33mcommit 0d910bed1d54e44e4a6aed8fcbeecf03b947d7a5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 16 19:41:32 2014 +0100

    Add test for memcmp issue.

[33mcommit 17dfd59bc31a21e103e2f1216443cd1418398aa9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 16 19:12:20 2014 +0100

    memcmp: compare the first byte as well
    
    MemcmpLowercase would not compare the first byte of both input buffers
    leading to two non-identical buffers to be considered the same.
    
    Affects SSE_4_1 and SSE_4_2 implementations of SCMemcmpLowercase, as well
    as the non-SIMD implementation. SSE_3 and Tile version are not affected.

[33mcommit c51ce4d2c0265c5e2311c9cfd025b4613f82671e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 14 23:49:54 2015 +0100

    Fix OS X 10.10 unittest failure
    
    Work around OS X 10.10 Yosemite returning EDEADLK on a rwlock wrlocked
    then tested by wrtrylock. All other OS' (and versions of OS X that I
    tested) seem to return EBUSY instead.

[33mcommit baa55ba239172c444da62889c7e27ca37c550d0c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 14 21:55:31 2015 +0100

    Fix Tilera compilation
    
    Use proper initializer for a static mutex declaration.
    
    Credits: Ken Steele

[33mcommit 8e946b92b78633955cf23a2f79cbdeaa330a22eb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 14 09:48:39 2015 +0100

    Fix compilation on OS X Yosemite
    
    Due to our unconditional declaration of the strlcat and strlcpy
    functions, compilation failed on OS X Yosemite.
    
    Bug #1192

[33mcommit a1eab4a2e22d100229407f3e168662a42396eca7[m
Author: Travis Green <travis@travisgreen.net>
Date:   Tue Dec 23 15:10:21 2014 -0700

    Update reference.config
    
    Updated reference.config to match ET Open reference.config found here:
    https://rules.emergingthreats.net/open/suricata/reference.config
    
    Due to startup error shown here:
    root@xxxxxxx01:/etc/suricata/rules# /usr/bin/suricata -c /etc/suricata/suricata.yaml --pidfile /var/run/suricata.pid --af-packet
    23/12/2014 -- 22:07:56 - <Error> - [ERRCODE: SC_ERR_REFERENCE_UNKNOWN(150)] - unknown reference key "osvdb". Supported keys are defined in reference.config file.  Please have a look at the conf param "reference-config-file"
    <...>
    Killed

[33mcommit 2b81caf73ecf7b47cbe061d36702a0d8fdd3074d[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Mon Dec 29 10:04:37 2014 -0600

    Respect DESTDIR in install-conf and install-rules.

[33mcommit 485f34134ea1bce824a64f0759396f66a48bc7d3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 6 13:11:38 2015 +0100

    unix socket: support profiling

[33mcommit f32d79dfe0ce98cbfc793a3e9ed78278315d70c3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 5 13:17:51 2015 +0100

    smtp: fix tx handling
    
    Fix issue where SMTPStateGetTxCnt would return the actual active tx'.
    
    The 'GetCnt' API call is not named correctly. It should be 'GetMaxId',
    as this is actually the expected behavior.

[33mcommit 105b4340c2ef9a404f72733aa8ba7b487c3f6ddf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 6 13:20:55 2015 +0100

    thread local storage: add to build-info

[33mcommit 623c2e78fdd7ed952e52aca92b240109019aad04[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 6 10:22:37 2015 +0100

    packet pool: make pending pool use more robust
    
    Don't leave pointers dangling.

[33mcommit 6e174128c832c7f3a50186d3e17429ade4ce06aa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 6 10:20:40 2015 +0100

    packet pool: memory fixes for non-TLS
    
    If the posix TLS implementation is used, the packet pool is memset to
    0 before use.
    
    Also use proper 'free' function.

[33mcommit 6fa8922ccdb4e18d5d4beee84fc425ee1d9a3bdc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 6 10:18:38 2015 +0100

    configure: add switch to disable __thread use
    
    Add --disable-threading-tls switch to force the posix thread local
    storage code paths even if __thread is available.
    
    Goal is to make it easier to QA the posix code path.

[33mcommit 2745cd2ce9fb70974285271524a6f3e17df3f4c4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 5 17:42:28 2015 +0100

    packet pool: fix wrong free call

[33mcommit ff8dae3b751029a03f6c2f4f09f036969aa9d4d9[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Dec 19 15:06:30 2014 +0100

    app-layer: fix 'detection-only' keyword
    
    If we follow the description in the yaml file, we should disable
    parsing if 'detection-only' keyword is used.

[33mcommit 969abc2ccd0b85924dd5c3aea55fd441a7cd9588[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Dec 16 00:14:59 2014 +0100

    output-json: fix duplicate logging
    
    This patches is fixing a issue in the OutputJSONBuffer function. It
    was writing to file the content of the buffer starting from the start
    to the final offset. But as the writing is done for each JSON string
    we are duplicating the previous events if we are reusing the same
    buffer.
    
    Duplication was for example triggered when we have multiple alerts
    attached to a packet. In the case of two alerts, the first one was
    logged twice more as the second one.

[33mcommit dc5e2a515cb4b79df6ff01148ab809be3d5abfd2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 9 13:37:54 2014 +0100

    stream: improve inline mode GAP handling
    
    Don't conclude a GAP is 'final' until the missing data is ack'd.
    
    Further, cleanup and unify more with the non-inline code.

[33mcommit b69ca16553bd7002b2ac8df8608d1117b322560b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 9 12:55:19 2014 +0100

    stream: move utility functions
    
    This way they can be used by the *Inline* functions as well.

[33mcommit a095694945a72a53c32f35409ec9c2c1643e69f3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 19 10:16:49 2014 +0100

    host: register unittests
    
    Host unittests were not registered so they wouldn't run.

[33mcommit 60b50e1ca5116d6af5d9e233f3d8b6f8baba1c39[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 22 17:00:56 2014 +0100

    packet-pool: free pending packets

[33mcommit 8b2dd81628d504b06ede097807a31c27ccd715ac[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 22 13:15:08 2014 +0100

    stats: stats threads don't need packet pools

[33mcommit ffd224845945cd9a860f16cbbdc12a960c193eca[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 22 13:10:53 2014 +0100

    flow manager: destroy packet pool on close

[33mcommit c4e13246901c62851affd299e8f8e55395978304[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 17 17:15:38 2014 +0100

    flow-timeout: use packet pool
    
    Use packet pool for pseudo packets on flow timeout. Wait for a packet
    if necessary.
    
    For shutdown, alloc a new pool as the 'main()' thread calls this.

[33mcommit cef609bb73c19e53ebd45247ffaa7db91a24b0d7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 17 15:50:29 2014 +0100

    threading: lock TmThreadKillThreadsFamily

[33mcommit 3499d682c475d7164324d42670bcc3fe6ac21ae7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 10 16:41:03 2014 +0100

    flow timeout: cleanups
    
    Rename FlowForceReassemblyForFlowV2 to just FlowForceReassemblyForFlow
    as there is no V1.

[33mcommit 6e69b51123aeb0696fc781215bc6571c6c159163[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 2 17:40:31 2014 +0100

    flow timeout: cleanup
    
    Remove now unused old flow timeout code.

[33mcommit de4bda14e6f2b90fd1aa533327ae907205e25dd1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 2 10:02:27 2014 +0100

    stream: handle flow timeout stream end packets
    
    Handle flow timeout packets in the stream engine. Previously the flow
    timeout code would call reassembly code directly.

[33mcommit 0ffaad66eb770b6ea48c9e34661b71ac1d64c325[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 1 19:18:45 2014 +0100

    flow-time: disable remainder of the old timeout code
    
    Disable registration code that was looking for threadvars
    and slots as timeout handling is now done in a live engine.

[33mcommit 8e86f387a62e8b67be3c15285a43115117e2025c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 1 18:48:03 2014 +0100

    flow-time: use live threads at shutdown
    
    Update pktacq loop to process flow timeouts in a running engine.
    
    Add a new step to the shutdown phase of packet acquisition loop
    threads (pktacqloop).
    
    The shutdown code lets the pktacqloop break out of it's packet
    acquisition loop. The thread then enters a flow timeout loop, where
    it processes packets from it's tv->stream_pq queue until it's
    empty _and_ the KILL flag is set.
    
    Make sure receive threads are done before moving on to flow hash
    cleanup (recycle all). Without this the flow recycler could start
    it's unconditional hash clean up while detect threads are still
    running on the flows.
    
    Update unix socket to match live modes.

[33mcommit c6ec92d9b14d24bb85755150b9ff47a0b480bbaf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 1 13:53:30 2014 +0100

    flow-timeout: use live threads
    
    Use live threads. Disable old timeout code.

[33mcommit 48eccf7d916333400e2cbca778c39ba733abe118[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 25 11:50:03 2014 +0100

    Assign thread_id to flow on first packet stream engine

[33mcommit 8c51b23e9436312e5939286a8335332b9bdfd70b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 10 11:49:30 2014 +0100

    Thread registration: id's start at 1
    
    Start thread id's at 1, so that in flow's we can use 0 to indicate
    a thread id hasn't been set in it yet.

[33mcommit 7f80516563cfd9dc590bec42eee9e46760501542[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 25 15:52:38 2014 +0100

    Introduce Flow timeout injection api
    
    Add function TmThreadsInjectPacketById that is to be used to inject flow
    timeout packets into the threads stream_pq queue.
    
    TmThreadsInjectPacketById will also wake up listening threads if
    applicable.
    
    Packets are passed all packets together in an NULL terminated array
    to reduce locking overhead.

[33mcommit 51a782fd8c2dfdfda1047b9fe1083ef5c7395a09[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 25 11:07:03 2014 +0100

    Define FlowThreadId and add it to the flow
    
    16 bits id should be enough for threads for a while.

[33mcommit a260cba32b4a521cc6a6b2a42fc3f8f2004c233b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 25 15:05:06 2014 +0100

    Give easy access for thread stream packet queue
    
    Access it from ThreadVars. This allows for easy injection of packets
    into the stream engine.

[33mcommit 489ee20560235f763374b61f8c5ce9461753a7d3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 24 23:17:37 2014 +0100

    Thread Registration API for ID's
    
    Create thread registration and unregistration API for assigning unique
    thread id's.
    
    Threadvars is static even if a thread restarts, so we can do the
    registration before the threads start.
    
    A thread is unregistered when the ThreadVars are freed.

[33mcommit e586644c254a5b2b71e5e3dd847c7fd7ea264352[m
Author: Duarte Silva <development@serializing.me>
Date:   Fri Dec 12 18:21:24 2014 +0000

    Fix and improvements
    - Added/removed missing/superfluous util-memrchr.h include
    - Improved the extraction of a IP from the XFF chain of IPs

[33mcommit 68f43ffffb6f964042234cc0d5fffef5d94287cd[m
Author: Duarte Silva <development@serializing.me>
Date:   Fri Dec 5 15:59:05 2014 +0000

    Implemented the diferent behaviour depending on the proxy deployment
    - In forward deployment mode the first IP will be returned
    - In reverse deployment mode the last IP will be retuned

[33mcommit 496200dd08e20ecdc2ac2b8657587af417c86d58[m
Author: Duarte Silva <development@serializing.me>
Date:   Fri Dec 5 15:52:16 2014 +0000

    Prepared everything for the proxy deployment configuration
    - Added the suricata.yaml configurations and updated the comments
    - Renamed the field in the configuration structure to something generic
    - Added two new constants and the warning codes

[33mcommit 4e04cd2d1be85cbd41c34ea922302121d05d55c9[m
Author: Duarte Silva <development@serializing.me>
Date:   Fri Dec 5 15:40:58 2014 +0000

    Adding XFF support to EVE alert output
    - Created app-layer-htp-xff.c and app-layer-htp-xff.h
    - Added entries in the Makefile.am
    - Added the necessary configuration options to EVE alert section
    - Updated Unified2 XFF configuration comments and removed unnecessary whitespace
    - Created a generic function to parse the configuration
    - Release the flow locks sooner and remove debug logging
    - Added XFF support to EVE alert output

[33mcommit 0bdf494b544cbc45bbc571ceefe83f750c9b3ef7[m
Author: DIALLO David <diallo@et.esiea.fr>
Date:   Mon Dec 15 17:53:34 2014 +0100

    fix Cygwin build fails: array subscript has type char

[33mcommit bacbe113d0d91251835dab3bb4e0bda01fa04bc5[m
Author: DIALLO David <diallo@et.esiea.fr>
Date:   Mon Dec 15 17:37:04 2014 +0100

    Add a warning in Modbus section of YAML file to remind user to modify stream depth (unlimited)

[33mcommit bfc871ce852c8942160feb8c1c3641ba04e7c9aa[m
Author: DIALLO David <diallo@et.esiea.fr>
Date:   Mon Dec 15 16:51:11 2014 +0100

    Update AppLayerProtoDetectPrintProbingParsers with Modbus protocol

[33mcommit 83d9834e776e5fdd9f1df6e17e5c8b0517cd5184[m
Author: DIALLO David <diallo@et.esiea.fr>
Date:   Mon Dec 15 16:45:39 2014 +0100

    fix CID 1257762:  Logically dead code(DEADCODE)

[33mcommit e564ac77fdefa2229724e123e10d6c9822f18482[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Dec 12 10:10:46 2014 +0100

    suricatasc: exit with error if command returns NOK

[33mcommit 55ccd3b17da45ea0fe234cddc99057a7eaf8e3fb[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Dec 11 20:01:59 2014 +0100

    suricatasc: now python 2 and 3 compatible
    
    Update code to support both python 2 and python 3.

[33mcommit 84e8217fd87281db1587042653a19878aa3f6f26[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 11 14:49:17 2014 +0100

    unix-socket: allow socked in custom locations
    
    Allow the socket to be set in any location. This allows for easy
    setting up of a socket as a non-root user.

[33mcommit b9787304868a07080ef761de54b451630ffb16e5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 11 14:21:45 2014 +0100

    unix-socket: fix restart/shutdown cycle
    
    When cleaning up after a pcap was processed, the stats api was cleaned
    up before the stats threads were killed, leading to a BUG_ON triggering.

[33mcommit 3f3481e4d2ceee85fb5e01aca7141a644a408be6[m
Author: Ken Steele <ken@tilera.com>
Date:   Wed Dec 3 16:42:01 2014 -0500

    Fix indentation

[33mcommit 3f86c5a83f7b4d936e7305fa67160623a4f2bea5[m
Author: Ken Steele <ken@tilera.com>
Date:   Wed Dec 3 15:55:22 2014 -0500

    Fix memory leak in ac-tile
    
    Incorrectly reallocing the goto table after it was freed by calling
    SCACTileReallocState() when really only want to realloc the output table.
    This was causing a large goto table to be allocated and never used or
    freed.

[33mcommit b9e20ab4b85dfa8a27393ad125e98015306596e2[m
Author: Ken Steele <ken@tilera.com>
Date:   Wed Dec 3 15:35:38 2014 -0500

    Clean up memory leaks in ac-tile code
    
    Free some memory at exit that was not getting freed.
    
    Change pid_pat_list to store copy of case-strings in the same block
    of memory as the array of pointers.

[33mcommit 1faa94c314524a35452a5abbf19c2dd0a8fd01ae[m
Author: Ken Steele <ken@tilera.com>
Date:   Wed Nov 5 11:43:40 2014 -0500

    Make bad copy-mode be an error in runmode-tile.

[33mcommit c779065d3584f801f31159e28ab8d4446d984649[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 5 14:32:56 2014 +0100

    Bug 1329: error out on invalid rule protocol
    
    Due to a logic error in AppLayerProtoDetectGetProtoByName invalid
    protocols would not be detected as such. Instead of ALPROTO_UNKNOWN
    ALPROTO_MAX was returned.
    
    Bug #1329

[33mcommit 9f22c878e89ff91481c26f73539d03e42b44d08c[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Dec 8 14:49:16 2014 +0100

    unix-manager: fix cppcheck errors
    
    This patch fixes the following errors:
     [src/unix-manager.c:306]: (error) Memory pointed to by 'client' is freed twice.
     [src/unix-manager.c:313]: (error) Memory pointed to by 'client' is freed twice.
     [src/unix-manager.c:323]: (error) Memory pointed to by 'client' is freed twice.
     [src/unix-manager.c:334]: (error) Memory pointed to by 'client' is freed twice.
    
    Unix manager was treating the packet after closing the socket if message was
    too long.

[33mcommit 096b85ab683856ec0e718a879c1698d01b42a331[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 10 17:31:57 2014 +0100

    stream: don't send EOF to AppLayer too soon
    
    Sending EOF too soon results in the AppLayer cleaning up prematurely.

[33mcommit 0bb2b15491995c66e2b600e5e71c70ffd0de1513[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 20 14:31:34 2014 +0100

    ipv6: check for MLD messages with HL not 1
    
    MLD messages should have a hop limit of 1 only. All others are invalid.
    
    Written at MLD talk of Enno Rey, Antonios Atlasis & Jayson Salazar during
    Deepsec 2014.

[33mcommit 68e6c4e94b8b7e5d61ea7062ff21d2678bedde32[m
Author: Ken Steele <ken@tilera.com>
Date:   Wed Nov 19 13:48:41 2014 -0500

    Correct flow memory usage bookkeeping error
    
    Fix bug 1321 where flow_memuse was incremented more on allocation than
    free.

[33mcommit d951de2f199d67d0e516cfd11db1612ffee0d71a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 20 14:18:03 2014 +0100

    Bug 977: -T / --init-errors-fatal to process all rules
    
    Have -T / --init-errors-fatal process all rules so that it's easier
    to debug problems in ruleset. Otherwise it can be a lengthy fix, test
    error cycle if multiple rules have issues.
    
    Convert empty rulefile error into a warning.
    
    Bug #977

[33mcommit e951afb911b4b3975ea03a519e0fc082c32b0316[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 5 10:17:15 2014 +0100

    afpacket: only check offloading once per iface
    
    Instead of once per thread per iface.

[33mcommit fa1081158572bee6c126f7068837baf5955eb102[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 5 10:16:48 2014 +0100

    ioctl: make all string args const pointers

[33mcommit c3c144d50417ce79b84e5611567e790fa398a38e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 3 16:08:19 2014 +0100

    http: don't crash when normalizing uri on low memory

[33mcommit f8f2ff49de3da00cdd5b350299484955466f6040[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 3 16:07:00 2014 +0100

    defrag: don't crash when out of memory
    
    Handle memory allocation errors in defrag better. Could lead to
    crashes if malloc errors happened.

[33mcommit 56373e5b347fb939ca0e2c9addb5cefd2947f979[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Dec 4 17:58:25 2014 +0100

    af-packet: no more threads than RSS queues
    
    If we manage to read the number of RSS queues from an interface,
    this means that the optimal number of capture threads is equal
    to the minimum of this number and of the number of cores on the
    system.
    
    This patch implements this logic thanks to the newly introduced
    function GetIfaceRSSQueuesNum.

[33mcommit 123c58af4b402235ec1d558f3a01a236f4f0fa65[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Dec 4 18:11:22 2014 +0100

    util-ioctl: add message in case of failure

[33mcommit b4bb6e67ba10a432c84f2e81fcbbebc911999110[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Dec 4 17:49:31 2014 +0100

    util-ioctl: Add function to get number of RSS queues on iface
    
    The number of RSS queues can be fetched via a standard ioctl which
    is independant of hardware.

[33mcommit c174c9d779121cc73016eef213f7175fe76244c2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 4 17:01:02 2014 +0100

    af-packet: threads: auto, default to workers
    
    Add a new default value for the 'threads:' setting in af-packet: "auto".
    This will create as many capture threads as there are cores.
    
    Default runmode of af-packet to workers.

[33mcommit 7b4987abc3e2b33d395e6139e70818ec7124cf3c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 4 16:46:51 2014 +0100

    Runmode: handle value 'auto'
    
    Auto now selects the default runmode for the capture method.

[33mcommit 234d18ab6882f7c49798ca545865f542f4b39776[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 4 16:42:55 2014 +0100

    threading: remove '1slot' functions
    
    No longer in use after the 'auto' runmode removal.
    
    All runmodes now use either varslot or pktacqloop support.

[33mcommit 7025aabe7528ef614c80e5f4f0d270cda56cfd4c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 4 16:39:13 2014 +0100

    Runmodes: remove 'auto' runmodes
    
    Remove 'auto' runmodes from all capture methods. It wasn't reliable
    enough, as it didn't enforce inspection order of packets.

[33mcommit 81c42f49163bc01c441f0f3e9703b0393fb64860[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 3 13:22:46 2014 +0100

    log-stats: expand membuffer if necessary
    
    Many threads could lead to a membuffer size requirement bigger than
    64k. So use the expansion call to grow the buffer as needed.

[33mcommit 6277d2e0e47fecc72807e09938307b18934a03df[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 3 13:09:15 2014 +0100

    MemBuffer: add expansion call
    
    For some of the buffer users it's hard to predict how big the data
    will be. In the stats.log case this depends on chosen runmode and
    number of threads.
    
    To deal with this case a 'MemBufferExpand' call is added. This realloc's
    the buffer.

[33mcommit 75397ed7508ac6cd870b3bb49a59d46b3c3f51cf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 4 09:17:10 2014 +0100

    stats: expose stats to Lua output
    
    Register with type 'stats':
    
        function init (args)
            local needs = {}
            needs["type"] = "stats"
            return needs
        end
    
    The stats are passed as an array of tables:
    
        { 1, { name=<name>, tmname=<tm_name>, value=<value>, pvalue=<pvalue>}}
        { 2, { name=<name>, tmname=<tm_name>, value=<value>, pvalue=<pvalue>}}
        etc
    
    Name is the counter name (e.g. decoder.invalid), tm_name is the thread name
    (e.g. AFPacketeth05), value is current value, and pvalue is the value of the
    last time the script was invoked.

[33mcommit 5d95b081721b54eb33355bd79e299ef3eca388f4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 3 13:30:14 2014 +0100

    output streaming: cleanup at runmode destruction

[33mcommit 51a540c27efa3b22f550d7f3da734dcebdc4b204[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 3 13:00:26 2014 +0100

    stats: disable stats if no loggers are enabled

[33mcommit 6252d24e0b45f57b8e5545c41292aa41863147a6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 4 10:34:28 2014 +0100

    stats: initialize after outputs
    
    Initialize stats after outputs so that we can check if we need to
    initialize the stats api at all.

[33mcommit a95c95f74c345c0a6fd00f536cde0d46ee614335[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 3 12:27:09 2014 +0100

    stats: introduce global config
    
    As the stats api calls the loggers at a global interval, the global
    interval should be configured globally.
    
     # global stats configuration
     stats:
       enabled: yes
       # The interval field (in seconds) controls at what interval
       # the loggers are invoked.
       interval: 8
    
    If this config isn't found, the old config will be supported.

[33mcommit e98346b555b39e689a1c2c6d0e643d0846ff61f6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 31 23:37:04 2014 +0100

    Introduce stats log API, convert existing output
    
    Convert regular 'stats.log' output to this new API.
    
    In addition to the current stats value, also give the last value. This
    makes it easy to display the difference.

[33mcommit ee8da21e3626bc02b878a0523f9f6294d134ff05[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 1 10:36:52 2014 +0100

    pcre: fix var capture for non relative matches
    
    Var capture setup depended on the match being relative due to a logic
    error.

[33mcommit 1ad2a231fea2c75fc9396ab305a2319054425f83[m
Author: Giuseppe Longo <giuseppelng@gmail.com>
Date:   Wed Nov 5 12:16:18 2014 +0100

    pfring: fixes memleaks
    
    This fixes some memory leaks
    Bug #1184

[33mcommit 16941468ceb4f7b33ce7a7873406c04106ce650a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 15 16:46:21 2014 +0100

    lua:  in streaming api, indicate open/close
    
    The SCStreamingBuffer call now also returns two booleans:
        data, data_open, data_close = SCStreamingBuffer()
    
    The first indicates this is the first data of this type for this
    TCP session or HTTP transaction.
    
    The second indicates this is the last data.
    
    Ticket #1317.

[33mcommit 8dcd99209e4468c18960e983d24e61fe15373b1d[m
Author: Ken Steele <ken@tilera.com>
Date:   Mon Nov 10 15:07:34 2014 -0500

    Update copyright year in detect-flowbits files.

[33mcommit e6f83a586c13e2dda6eb52dac00d60684bf46919[m
Author: Ken Steele <ken@tilera.com>
Date:   Mon Nov 10 15:01:36 2014 -0500

    DetectFlowintData - remove unused idx in TargetVar.
    
    The idx inside TargetVar inside DetectFlowintData is never used, so remove
    it.

[33mcommit c547d391523b761c67ebd0524ab603e5d8e7bdcc[m
Author: Ken Steele <ken@tilera.com>
Date:   Mon Nov 10 14:48:29 2014 -0500

    Fix bug in DetectFlowintParse() - Assigning to both parts of a Union
    
    sfd->target.value was always being set, even if the targettype was
    not FLOWINT_TARGET_VAL. This would cause the tvar to be overwritten
    with garbage data.

[33mcommit fa72082491d9e0c3241c5b3f3001a30d5ab0c5a6[m
Author: Ken Steele <ken@tilera.com>
Date:   Mon Nov 10 14:46:11 2014 -0500

    Don't write target.tvar.idx in DetectFlowintParse
    
    Match functions should not be writing to the SigMatch context. So just use
    a local variable instead.

[33mcommit 5cdb21ec34b20b72d457055470cae485201a002e[m
Author: Ken Steele <ken@tilera.com>
Date:   Fri Nov 7 11:33:38 2014 -0500

    Remove an unused define COUNTER_DETECT_ALERTS
    
    The only place this exists in the code is when it is defined.

[33mcommit 18e2de320b2ddde0d18d0ec4c5501e249e1ea2ea[m
Author: Ken Steele <ken@tilera.com>
Date:   Fri Nov 7 10:50:23 2014 -0500

    Coding style cleanup in detect-modbus files.

[33mcommit ff41c1c452cdc88eed329c57f40f759cc25c4a96[m
Author: Ken Steele <ken@tilera.com>
Date:   Wed Nov 5 15:07:06 2014 -0500

    Correct size increase in SigGroupHeadStore()
    
    The code was increasing the size of the allocated memory by 16, but
    only increasing the stored size by 10. Now uses one variable for both
    places.

[33mcommit 55c50812407556c1276c3e6b6f7e98e869427214[m
Author: DIALLO David <diallo@et.esiea.fr>
Date:   Tue Jul 22 09:49:58 2014 +0200

    Detect-engine: Add Modbus detection engine
    
    Management of Modbus Tx
    
    Based on DNS source code.
    
    Signed-off-by: David DIALLO <diallo@et.esia.fr>

[33mcommit b3bf2f99394158285caae51e9773f519318b54ad[m
Author: DIALLO David <diallo@et.esiea.fr>
Date:   Thu Aug 14 16:53:30 2014 +0200

    Detect: Add Modbus keyword management
    
    Add the modbus.function and subfunction) keywords for public function match in rules (Modbus layer).
    Matching based on code function, and if necessary, sub-function code
    or based on category (assigned, unassigned, public, user or reserved)
    and negation is permitted.
    
    Add the modbus.access keyword for read/write Modbus function match in rules (Modbus layer).
    Matching based on access type (read or write),
    and/or function type (discretes, coils, input or holding)
    and, if necessary, read or write address access,
    and, if necessary, value to write.
    For address and value matching, "<", ">" and "<>" is permitted.
    
    Based on TLS source code and file size source code (address and value matching).
    
    Signed-off-by: David DIALLO <diallo@et.esia.fr>

[33mcommit 5a0409959f418027b41f5c75f30d3b03cc9dab14[m
Author: DIALLO David <diallo@et.esiea.fr>
Date:   Wed Jul 23 11:12:59 2014 +0200

    App-layer: Add Modbus protocol parser
    
    Decode Modbus request and response messages, and extracts
    MODBUS Application Protocol header and the code function.
    
    In case of read/write function, extracts message contents
    (read/write address, quantity, count, data to write).
    
    Links request and response messages in a transaction according to
    Transaction Identifier (transaction management based on DNS source code).
    
    MODBUS Messaging on TCP/IP Implementation Guide V1.0b
    (http://www.modbus.org/docs/Modbus_Messaging_Implementation_Guide_V1_0b.pdf)
    MODBUS Application Protocol Specification V1.1b3
    (http://www.modbus.org/docs/Modbus_Application_Protocol_V1_1b3.pdf)
    
    Based on DNS source code.
    
    Signed-off-by: David DIALLO <diallo@et.esia.fr>

[33mcommit 0b28943487424f4831072a7161b33ebb5fc22211[m[33m ([m[1;33mtag: suricata-2.1beta2[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 6 10:39:53 2014 +0100

    Update Changelog for 2.1beta2 release

[33mcommit 6c2ae469be6a79b1405ca793f15c74c0fba0e3a8[m
Author: Christophe M <lessyv@gandi.net>
Date:   Tue Jul 29 16:20:34 2014 +0200

    Fix to output a JSON buffer to an Unix domain socket.
    
    Create the JSON buffer and write to it like regular file.
    
    Upper function SCConfLogOpenGeneric already handle it properly.
    
    Closes issue #1246.

[33mcommit 27007cc7d5c559d12bb15018f43a8006b6bffeca[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 31 14:56:14 2014 +0100

    Fix Coverity issue in SMTP output
    
    ** CID 1250327:  Uninitialized pointer read  (UNINIT)
    /src/output-json-email-common.c: 117 in JsonEmailLogJson()
    /src/output-json-email-common.c: 139 in JsonEmailLogJson()

[33mcommit 7c3b22da22d917104e266430c86d5b8b936d94ae[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 31 14:53:38 2014 +0100

    smtp: don't create a new tx for rset/quit
    
    A tx is considered complete after the data command completed. However,
    this would lead to RSET and QUIT commands setting up a new tx.
    
    This patch simply adds a check that refuses to setup a new tx when these
    commands are encountered after the data portion is complete.

[33mcommit f7c2c219cd4b268a4bbb105dbd14e1d0b36b8ea0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 31 13:41:39 2014 +0100

    filestore: fix crash if keyword setup fails
    
    SigMatch would be added to list, then the alproto check failed, leading
    to freeing of sm. But as it was still in the list, the list now contained
    a dangling pointer.

[33mcommit 9d2a0c39e543d35c81cd66c5bd424750a938e888[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 30 18:23:15 2014 +0100

    mime: fix output issues
    
    When multiple email addresses were in the 'to' field, sometimes
    they would be logged as "\r\n \"Name\" <email>".
    
    The \r\n was added by GetFullValue in the mime decoder, for unknown
    reasons. Disabling this seems to have no drawbacks.

[33mcommit ebd6737b658d2f7af5d9053c44f421806fc43431[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 28 20:03:32 2014 +0100

    mime: fix compiler warning

[33mcommit 20a175f3155a1d53dfc4967f23c34b5781c39ded[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 28 18:56:28 2014 +0100

    mime: improve error checking

[33mcommit 5461294a5208382ce57a34658f4d6802677c39a7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 28 18:26:38 2014 +0100

    smtp: fix SMTPParserTest14 on 32bit

[33mcommit 9d33131d37f633a1ab67e69df5857eec19e45126[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 28 18:25:33 2014 +0100

    smtp: improve ProcessDataChunk error checking

[33mcommit d209699a4119774a99baf73d157bed97014fb4a6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 28 17:45:52 2014 +0100

    smtp: expand tx use
    
    Instead of just using TX for mime decoding, it is now also used for
    tracking decoder events.

[33mcommit d67289b60e32436a6c351394096120fee0f9839f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 28 10:45:21 2014 +0100

    output-filedata: close files even w/o data
    
    If there is no data chunk but the file is closed/truncated anyway,
    logging is still required.

[33mcommit 08b06bac3f8d155c3398f9881445d863cf04f781[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 28 10:41:32 2014 +0100

    smtp: register file truncate callback
    
    Tag files as truncated from this callback so storing/logging displays
    the correct info.

[33mcommit 2b9ef8752738815ee070ac69de05adbfd2f2a787[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 27 23:59:49 2014 +0100

    smtp: convert logger to tx logger
    
    Move from packet logger to tx logger.

[33mcommit d0357c6169553ee89e754653da0687c014fd4153[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 27 23:59:11 2014 +0100

    smtp: add file inspection engine
    
    Fix file inspection engine.
    
    TODO: test

[33mcommit 56b74c8b5ba4c238ac9da6485fe293078ca71cda[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 27 23:57:56 2014 +0100

    smtp: make TX aware
    
    Store mime decoding context per transaction. For this the parser
    creates a TX when the mime body decoding starts.

[33mcommit cb4440324e5f59c70b2013c953dea1f9d51730ae[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 27 16:14:09 2014 +0100

    mime: redo PrintChars using PrintRawDataFp

[33mcommit f979e92f68d40f2fe5969507aebb408bf73f00bb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 27 09:18:31 2014 +0100

    decode mime: refactor & cleanup
    
    Partly to work around cppchecks:
    [src/util-decode-mime.c:1085]: (error) Memory leak: url

[33mcommit 54df86658c13752474203562de05bc04a4143229[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 25 17:44:57 2014 +0200

    mime: rename mime-decode.[ch] to util-decode-mime.[ch]

[33mcommit 6035470ffbb0325501e4802646a7946521370139[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 25 17:36:56 2014 +0200

    mime: style updates

[33mcommit 595acf2dfc5d451196d83e9a3d2017ed6d429b2d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 25 17:30:09 2014 +0200

    mime decode: reshuffle data structures to reduce structure sizes

[33mcommit 9a573c570498f79f8f9e0c19d41fe186568f3019[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 25 16:59:15 2014 +0200

    output smtp: fix call

[33mcommit de44a5af94d18d54004511fac92952040dd9971c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 25 16:46:01 2014 +0200

    decode mime: clean up includes

[33mcommit cd55b657c21ff5e35d8abe7009195a6a858323a5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 25 16:22:40 2014 +0200

    mime decode: improve MimeDecParseLineTest01 and MimeDecParseLineTest02 tests

[33mcommit dd4b506cc28aeb893c76acbda43019d039a59e59[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 25 16:16:54 2014 +0200

    decode mime: fix scan-build issues

[33mcommit f91d52a0d2c91a02b8203cb4c14ae611e8bd427d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 25 15:25:46 2014 +0200

    mime decode: fix memory leak

[33mcommit bffceb71156ee39a3aa2289b1a094c313e861217[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 25 15:22:30 2014 +0200

    mime decode: remove unused url counter

[33mcommit d72f8c7de5608558cf6d0bfd7cf96c40cb03ecb6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 25 14:11:03 2014 +0200

    output smtp: clean up memory at shutdown

[33mcommit c712ab2299ab9ef111a500cbf2cd2f89788bc3ca[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 25 13:54:42 2014 +0200

    Fix compiler warning

[33mcommit 106bbc78e12298dee953cd79330fefaa21106eb6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 25 09:40:35 2014 +0200

    mime: refactor buffer use
    
    Turn all buffers into uint8_t (from char) and no longer use the
    string functions like strncpy/strncasecmp on them.
    
    Store url and field names as lowercase, and also search/compare
    them as lowercase. This allows us to use SCMemcmp.

[33mcommit f55c94cb5423cbbd21434085af02b30e6594f147[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Thu Oct 9 15:16:50 2014 -0700

    smtp-mime: preinitialize base64 decoder space
    
    Preinit with zeros.

[33mcommit c279f07d2a315529a169f06fe748f0777282290f[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Thu Oct 9 14:13:03 2014 -0700

    mime-decode: clean up after MimeDecParseFullMsgTest01.

[33mcommit 4503ffeee92591d6d832083fc20c2833c47b5043[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Thu Oct 9 12:52:30 2014 -0700

    mime-decode: fix minor memory leak if Mime parser initialization were to fail.

[33mcommit 1ab5f72fddf13079442438e47e3947ba20553dce[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Thu Oct 9 12:23:09 2014 -0700

    mime-decode: remove "comparison between signed and unsigned integer expressions"
    warnings

[33mcommit e5c36952d65d27b39359c970d0b9f0c6ef69de3b[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Tue Oct 7 15:44:06 2014 -0700

    app-layer-smtp: move old smtp-mime section in suricata.yaml into
    app-layer-protocols.smtp.mine section and update code to accomodate.

[33mcommit 3e10ee4608060bef42fa224491d8fe5a132285b1[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Tue Oct 7 15:23:15 2014 -0700

    PR review comment.  Use protocol to discern log type.

[33mcommit f1c160ed223b58e1f9124e410acc6262b25166b2[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Thu Aug 21 12:34:06 2014 -0700

    smtp: turn on smtp mime decoding and enable smtp eve logging.

[33mcommit 746da75615b7d60871b82b86b10a97d54e8eef78[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Thu Aug 14 12:07:53 2014 -0700

    eve-log: catch and log URLs in basic text emails without mime encapsulation.
             expand pointer walk protection.

[33mcommit 471967aafd3efd5f03e8f2fd9d256ad9745575a1[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Fri Aug 1 13:27:33 2014 -0700

    mime-decode: don't scan attachment's data for URLs.
    move event pointer lookup inside extract_urls and protect pointer walk.

[33mcommit 6467a5d563dacc72ac5d01655affbe59209a641f[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Mon Jul 28 18:25:13 2014 -0700

    app-layer-smtp: fix Test14.
    
    Was running one byte past end of buffer.
    Declare Unit Test 14's data as static.

[33mcommit 260872ccd9da6aead91a61c04d36168916b24357[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jul 28 16:36:15 2014 +0200

    smtp layer: fix unittests
    
    Synchronize test 14 with the new application layer API and improve
    debug messages.

[33mcommit 31f8f5cf20e12b780ddf2b7705e1206e71ecf0e2[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Wed Apr 2 12:48:01 2014 -0700

    eve-log: SMTP JSON logger

[33mcommit 7850d896a8a3b285aa2575a312a98337f177e620[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Tue Jan 28 15:33:26 2014 -0800

    smtp-mime: add server reply codes returned from outlook server

[33mcommit c2dc6867425ec5abb964e1625f7dfaa6fcce3d1b[m
Author: David Abarbanel <david.abarbanel@baesystems.com>
Date:   Tue Nov 6 09:45:36 2012 -0500

    SMTP MIME Email Message decoder

[33mcommit a781fc5c2ea047c7ea3774edbf890001987b82cc[m
Author: Ken Steele <ken@tilera.com>
Date:   Wed Oct 29 15:43:42 2014 -0400

    Make suricata_ctl_flags be volatile
    
    The global variable suricata_ctl_flags needs to volatile, otherwise the
    compiler might not cause the variable to be read every time because it
    doesn't know other threads might write the variable.
    
    This was causing Suricata to not exit under some conditions.

[33mcommit 503cc3de690be563762956f6639fcec16e7a1d79[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 30 11:07:38 2014 +0100

    stream/async: improve handling of syn/ack pickup
    
    If we picked up the ssn with a syn/ack, we don't need to make more
    assumptions about sack and wscale after that.

[33mcommit 1656148490272a9b1f13dff7f5534e13e9b46bd2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 30 10:16:40 2014 +0100

    stream/async: fix session setup issues
    
    For these 2 cases:
    
    1. Missing SYN:
    -> syn <= missing
    <- syn/ack
    -> ack
    -> data
    
    2. Missing SYN and 3whs ACK:
    -> syn <= missing
    <- syn/ack
    -> ack <= missing
    -> data
    
    Fix session pickup. The next_win settings weren't correctly set, so that
    packets were rejected.
    
    Bug 1190.

[33mcommit b2e80a0f661942dc2ee1899417039954c1856187[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 26 10:07:15 2014 +0100

    stream: improve tracking with pkt loss in async
    
    If 3whs SYN/ACK and ACK are missing we can still pick up the session if
    in async-oneside mode.
    
    -> syn
    <- syn/ack <= missing
    -> ack     <= missing
    -> data
    
    Bug 1190.

[33mcommit 033409a042eccc1cba0d87b07fbd1c6ee7cb0cfe[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 26 09:02:08 2014 +0100

    iprep: cleanup ctx on shutdown
    
    ~~Dr.M~~ Error #1: LEAK 480 direct bytes 0x0aae7fc0-0x0aae81a0 + 0 indirect bytes
    ~~Dr.M~~ # 0 replace_malloc                    [/work/drmemory_package/common/alloc_replace.c:2373]
    ~~Dr.M~~ # 1 SRepInit                          [.../Suricata/src/reputation.c:594]
    ~~Dr.M~~ # 2 DetectEngineCtxInit               [.../src/detect-engine.c:844]
    ~~Dr.M~~ # 3 main                              [.../Suricata/src/suricata.c:2230]

[33mcommit b2b1239ddfcadf15cda248f4297e727343e2171c[m
Author: Ken Steele <ken@tilera.com>
Date:   Mon Oct 6 11:40:58 2014 -0400

    Make AppLayerProfiling functions inline
    
    The entire body of these functions are protected by ifdef PROFILING.
    If the functions are inlined, then this check removes the need for the
    function entirely.
    
    Previously, the empty function was still called, even when not built
    for profiling. The functions showed as being 0.25% of total CPU time
    without being built for profiling.

[33mcommit 07fffa6a7d1b32363b7e892019dc50927177888a[m
Author: Giuseppe Longo <giuseppelng@gmail.com>
Date:   Thu Oct 23 11:43:04 2014 +0200

    Fixes comments for pfring section in suricata.yaml
    
    Bug #1301

[33mcommit 2d43dae9346c7521e994f8270b62a5ee0fc6561c[m
Author: Giuseppe Longo <giuseppelng@gmail.com>
Date:   Thu Oct 23 11:30:38 2014 +0200

    PF_RING: force cluster type if vlan is disabled
    
    If vlan is disabled the cluster_flow mode will still take VLAN tags
    into account due to using pf_ring's 6-tuple mode.
    So this forces to use pf_ring's 5-tuple mode.
    
    Bug #1292

[33mcommit 395d5b7f61ff4738f9e677fbd84346ca66fb51af[m
Author: Giuseppe Longo <giuseppelng@gmail.com>
Date:   Fri Sep 5 15:58:44 2014 +0200

    iprep: add unit tests for cidr
    
    Implements unit tests to test the new API

[33mcommit 5499cb71b097be10751fd873e7d784b42902edca[m
Author: Giuseppe Longo <giuseppelng@gmail.com>
Date:   Wed Sep 3 15:30:08 2014 +0200

    detect-iprep: extends cidr
    
    Adds new API to check if an IP address is belong
    to a netblock and gets the value.

[33mcommit a1d8439b2537e366cdb308f7b14155a1b503ee26[m
Author: Giuseppe Longo <giuseppelng@gmail.com>
Date:   Fri Aug 29 14:22:09 2014 +0200

    iprep: extends cidr support
    
    Implements new API to expand the IP reputation
    to netblocks with CIDR notation
    
    A new object 'srepCIDRTree' is kept in the DetectionEngineCtx,
    which contains two tree (one for ipv4 and one for ipv6)
    where the reputation values are stored.

[33mcommit 667b9a5220bd85453f3bbbf5aadb156673a741e4[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Oct 18 19:38:12 2014 +0200

    lua: add export of dns.rrname
    
    Add the capability for a lua script to ask for rrname in DNS query.

[33mcommit 74ffa2b26456f5e01eea45ece9b77cf8443c5160[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Oct 18 13:20:52 2014 +0200

    lua: move function to common utils
    
    LuaStateNeedProto function can be used for any protocol so let's
    move it out of the http file.

[33mcommit 4d66775a569c628d8cbc29f888e48d61835cf2eb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 23 12:54:13 2014 +0200

    stream: improve bad window update detection
    
    Ignore more valid ACKs in FIN shutdown phase.
    
    Improve heuristic for window shrinking in case of packet loss.

[33mcommit a54f52278b351ae445fed03502a8f68a1518ef92[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 16 18:38:19 2014 +0200

    stream: fix 'bad window update' false positive
    
    ACK packets completing a valid FIN shutdown could be flagged as
    'bad window update' if they would shrink the window.
    
    This patch detects this case before doing the bad window update
    check.

[33mcommit ce472d88be9e9d8342150de8ff1b084c8f7fbadc[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Fri Oct 10 09:40:37 2014 -0700

    sanity check tcp SACK edges prior to recording. Attempt to avoid Cisco ASA
    tcp randomization issue with it not properly writing sequence numbers in SACK.

[33mcommit 5834a1a6192d4d2de861064b272abe7324ba1f95[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 16 14:59:38 2014 +0200

    stream: improve handling of 3whs packet loss
    
    If the 3whs ACK and some data after this is lost, we would get stuck
    in the 'SYN_RECV' state, where from there each packet might be
    considered invalid.
    
    This patch improves the handling of this case.

[33mcommit e7a909f4ae3ee1c99fb1bedcb01111a1f9ae0f41[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 16 14:54:22 2014 +0200

    stream: fix ssh/ssl logging on tcp session reuse
    
    TCP session reuse wouldn't unset FLOW_NO_APPLAYER_INSPECTION.

[33mcommit 59d12f334e134ffa3f180800cd1a8d71971d770d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 16 14:41:59 2014 +0200

    ssh.softwareversion: allow more characters
    
    The keyword would not allow matching on "OpenSSH_5.5p1 Debian-6+squeeze5"
    as the + and space characters were not allowed.
    
    This patch adds support for them.

[33mcommit a68e19d998acf2ae5239d7c798008c144761f5a5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 16 11:17:06 2014 +0200

    stream: add counter for failed pseudo setups
    
    Stream pseudo packets are taken from the packet pool, which can be empty.
    In this case a pseudo packet will not be created and processed.
    
    This patch adds a counter "tcp.pseudo_failed" to track this.

[33mcommit e4c8084a75b24d159993f34fc7cf254086a2eb57[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 16 10:31:47 2014 +0200

    stream: clean up pseudo packet counting
    
    Increment the counter from StreamTcpPseudoPacketCreateStreamEndPacket.

[33mcommit 8c09648ad0ce91b221410d99795c9d7f01a68278[m
Author: Giuseppe Longo <giuseppelng@gmail.com>
Date:   Thu Oct 16 10:23:19 2014 +0200

    pfring: removes old API and #ifdef chunks

[33mcommit dde78e499c865ade93d0fe637ee8b788498e2f3f[m
Author: Giuseppe Longo <giuseppelng@gmail.com>
Date:   Thu Oct 16 10:22:33 2014 +0200

    pfring: checks if the lib version is >= 6
    
    Checks if the PF_RING version installed on the system is 6,
    so old version won't be supported.

[33mcommit 55c45ac91d98f42c099f74d9aac4ab0f647037b4[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Mon Oct 20 15:13:28 2014 -0600

    Fix MPLS decoder rules.

[33mcommit 2d122091945babfa5d89718130171ae8722d8607[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Fri Oct 17 09:33:07 2014 -0600

    Use ENGINE_SET_INVALID_EVENT when the packet is too small for an
    MPLS header, and when the payload type can not be determined.

[33mcommit 65f40cbeaa0bc46a9c2e7e3ec27b2b3b449665b7[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Wed Oct 8 10:17:12 2014 -0600

    Don't default to ethernet, ethernet should be preceded by a pseudowire.
    
    If the payload type can't be determined, raise an alert.

[33mcommit 348b0e0e9f1036dc3c488c18192a40905056edf8[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Wed Aug 13 16:53:19 2014 -0600

    Set decoder events for labels that shouldn't be seen on the wire.
    Add unit tests to test for mpls decoder events.

[33mcommit 66a321ca2d0debc1d96c7818f8b16845b3071d84[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Fri Jul 18 20:23:28 2014 -0600

    Handle encapsulated ethernet without a PW by defaulting to ethernet
    if a fall back.

[33mcommit 025342dc6c778dd6128ab529717e022ce981801d[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Thu Jul 17 11:28:56 2014 -0600

    Handle explicitly IPv6 and IPv6 labels as well as encapsulated ethernet.

[33mcommit 3e3ab2dc9fc802957c33e3bee5c59faaca6154e6[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Thu Jul 17 10:21:32 2014 -0600

    Add MPLS counter.
    Check length before decoding each label.

[33mcommit 7642489874a801f31b9bcbc6d9eca9c41171242f[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Tue Jul 15 13:48:34 2014 -0600

    Basic MPLS decoder.

[33mcommit b334b8a6e9bebe3286c0dbc8c8aa20e62ba90868[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri Jul 25 13:20:28 2014 +0530

    CUDA: Update the inspection engine to inform the cuda module that it
    doesn't need the gpu results and to release the packet for the next run.
    
    Previously the inspection engine wouldn't inform the cuda module, if it
    didn't need the results.  As a consequence, when the packet is next taken
    for re-use, and if the packet is still being processed by the cuda module,
    the engine would wait till the cuda module frees the packet.
    
    This commits updates this functionality to inform the cuda module to
    release the packet for the afore-mentioned case.

[33mcommit 60c46170b047880ace06d2e57eac2f9cc4cbb624[m
Author: Ken Steele <ken@tilera.com>
Date:   Fri Oct 17 11:42:48 2014 -0400

    Check replist is not NULL inline before doing any processing.
    
    The replist is often NULL, so it is worth checking that case before making
    the function call do perform work on the list.

[33mcommit 9a36f7f6332b8d530cb9c1231c88e36bd78978ce[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Oct 15 19:38:20 2014 +0200

    detect-dce-opnum: add sanity check
    
    Specifying the option dce_opnum without value was triggering a
    segfault.

[33mcommit 2c9c0f1e8f39d944ddc0c55200b05c1ec8b61b3e[m
Author: Ken Steele <ken@tilera.com>
Date:   Thu Oct 2 17:17:02 2014 -0400

    Fix typo in configure message about nfnetlink

[33mcommit d44cb3f6fef8679c010a9d29f6de9b6f91dbe029[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 4 15:36:42 2014 +0200

    pcap-log: add option to honor pass rules
    
    Add option (disabled by default) to honor pass rules. This means that
    when a pass rule matches in a flow, it's packets are no longer stored
    by the pcap-log module.

[33mcommit a18e2ef4022212c574dae3aca2df0e80502d792a[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Mon Sep 29 10:00:06 2014 -0600

    Bug 1230: Check all SigMatch lists for a named byte_extract variable.

[33mcommit dc9d1ec86794079e3c7c62080efc0fd5ab2593db[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Mon Sep 29 09:37:03 2014 -0600

    Bug 1230: Simple test case demonstrating failure.

[33mcommit 4c73631f9598d04b74f7c4a012eed9a352450269[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 18 21:47:52 2014 +0200

    Suppress ARM valgrind warning
    
    Not Suricata related, so suppress.

[33mcommit 38710697dbe3ebb853381bda85261089fea43616[m
Author: Ken Steele <ken@tilera.com>
Date:   Tue Oct 7 10:17:21 2014 -0400

    Speed up SigMatchGetLastSMFromLists()
    
    SigMatchGetLastSMFromLists() is finding the sm with the largest
    index among all of the values returned from SigMatchGetLastSM() on
    the set of (list and type) tuples passed as arguments.
    
    The function was creating an array of the types, then creating an array
    of the results of SigMatchGetLastSM(), sorting that list completely, then
    only returning the first values from the list.
    
    The new code, gets one set of arguments from the variable arguments, calls
    SigMatchGetLastSM() and if the returned sm has a larger index, keeps that
    as the last sm.

[33mcommit 9a5bf82ba53a3ba424f75719270f5f2f6fc782d2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 7 11:27:54 2014 +0200

    tcp session reuse: reset detect state
    
    Reset the detect state on TCP session reuse. We reset the app layer,
    so we need to reset the stateful detection as well.

[33mcommit 0fff3c833eeee873fbf64057ca85e941c7acbe86[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 7 11:25:25 2014 +0200

    detect state: always lock de_state_m
    
    Always lock the de_state_m on access, also at flow recycle or
    cleanup.

[33mcommit 0d15d4f6c3266494efe1a6d149f8b98d1747afe0[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed Oct 1 17:33:58 2014 +0200

    configure.ac: Moved libpcap before libpfring
    
    Moved the libpcap section in configure.ac before libpfring to
    enable libpfring to use the specified libpcap includes and
    libraries when testing for libpfring support.
    
    Bug #1294

[33mcommit 78c1af6b386f6fe105c78ca97a95a3f157f12425[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed Oct 1 16:39:48 2014 +0200

    runmode-pfring: Fixed typo s/fron/from/

[33mcommit a01b3339c751fc5cd2f65031fdb7590aad528105[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Wed Oct 1 16:34:30 2014 +0200

    runmode-pfring: Suppress errors when using DNA/ZC
    
    PF_RING DNA/ZC don't use cluster-id and cluster-type. Therefore,
    skip setting these values if DNA/ZC is being used.
    
    Bug #1048

[33mcommit 944276b98871bea501f82f607a730f4652ee2baf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 24 16:05:27 2014 +0200

    lua detect: expose stream payload
    
    Allow a script to set the 'stream' buffer type. This will add the
    script to the PMATCH list.
    
    Example script:
    alert tcp any any -> any any (content:"html"; lua:stream.lua; sid:1;)
    
        function init (args)
            local needs = {}
            needs["stream"] = tostring(true)
            return needs
        end
    
        -- return match via table
        function match(args)
            local result = {}
    
            b = tostring(args["stream"])
            o = tostring(args["offset"])
    
            bo = string.sub(b, o);
            print (bo)
    
            return result
        end
    
        return 0

[33mcommit 5b9c6d477419fc760959066812a56a37d113e8b5[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Wed Sep 17 11:55:29 2014 -0600

    Comment out in the action-order section, as its not needed if
    the default configuration is used.

[33mcommit 2e5292e2293fe95ea5ae50aa624345883b9cfae3[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Wed Sep 17 11:52:12 2014 -0600

    Don't require an action-order configuration section. If not present,
    use the defaults.

[33mcommit d9c523a332259777f594acb1f3887be5e05f2b7d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 30 09:56:41 2014 +0200

    filestore: fix parsing bug
    
    Filestore keyword can have options or no options, and the parser
    was enforcing the NOOPT flag too strictly.
    
    Bug #1288

[33mcommit 4816dcc3d312202af2f7048e2b19b4b1ba24d22f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 1 09:09:15 2014 +0200

    flow json log: add 'shutdown' as flow end reason
    
    When engine shuts down all flows in the hash are logged out. They
    may not have timed out yet. So they are forced. Log the reason to
    be 'shutdown'.

[33mcommit bd1a193877cf72af7bbcf795d453fd1f1036f1ca[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 30 15:24:24 2014 +0200

    flow: fix flow logging at shutdown
    
    Move all flows from the hash to the recycler at shutdown.
    
    Bug #1260

[33mcommit 79f0da1df1b53a5a66c97c7b231d843e693ef086[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 30 13:37:30 2014 +0200

    output-lua: set proper callbacks for HTTP
    
    Enable the relevant HTTP callbacks.
    
    Bug #1287

[33mcommit 936db9c02a61ce0c724a780ea793b294195a6ee9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 30 13:27:52 2014 +0200

    output-lua: add config to yaml
    
    Disabled by default.

[33mcommit 4443da59b45adea2e0e27995c1f8a5c8284a30a1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 30 13:19:09 2014 +0200

    output-lua: add script-dir config param
    
    Add 'scripts-dir' config directive that is prepended to the script
    names to form a path. If ommited or empty, script are opened from
    the CWD.

[33mcommit 47cd4974477f911432b654c0b93f60de466cba5b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 30 11:12:47 2014 +0200

    yaml: add eve flow and netflow entries
    
    Added, commented out by default.
    
    Bug #1257.

[33mcommit 04afcf2717d1d6814a8ac39b5489ef3ce8ff2f0d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 18 10:13:18 2014 +0200

    ssh: convert error message to debug statement
    
    Don't print errors based on traffic issues.

[33mcommit 0f61264d68fdf69f44fb6f0a0d5a81248157159f[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Sep 12 10:02:12 2014 +0200

    app-layer-ssh: fix banner parser
    
    Carefully crafted SSH banner could result in parser error.
    
    Signed-off-by: Eric Leblond <eric@regit.org>

[33mcommit 9fd96f531a7babe1c54bc67a5d51825369e230ab[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 17 14:57:15 2014 +0200

    ipv6: convert ext header pointers to const
    
    To prevent accidental writes into the orignal packet buffer, use
    const pointers for the extension header pointers used by IPv6. This
    will cause compiler warnings in case of writes.

[33mcommit 5f4a23deb93b68a97b37ec44810932d52ac6cfad[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 17 14:26:27 2014 +0200

    ipv6: RH extension header parsing issue
    
    A logic error in the IPv6 Routing header parsing caused accidental
    updating of the original packet buffer. The calculated extension
    header lenght was set to the length field of the routing header,
    causing it to be wrong.
    
    This has 2 consequences:
    
    1. defrag failure. As the now modified payload was used in defrag,
    the decoding of the reassembled packet now contained a broken length
    field for the routing header. This would lead to decoding failure.
    
    The potential here is evasion, although it would trigger:
    [1:2200014:1] SURICATA IPv6 truncated extension header
    
    2. in IPS mode, especially the AF_PACKET mode, the modified and now
    broken packet would be transmitted on the wire. It's likely that
    end hosts and/or routers would reject this packet.
    
    NFQ based IPS mode would be less affected, as it 'verdicts' based on
    the packet handle. In case of replacing the packet (replace keyword
    or stream normalization) it could broadcast the bad packet.
    
    Additionally, the RH Type 0 address parsing was also broken. It too
    would modify the original packet. As the result of this code was not
    used anywhere else in the engine, this code is now disabled.
    
    Reported-By: Rafael Schaefer <rschaefer@ernw.de>

[33mcommit 7cdc57060b6b16417c45468682158ded6b47a091[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 22 17:33:40 2014 +0200

    af-packet: check pointers before use

[33mcommit 1e36053eca47c56bc8fc47287a09de3a49bbb507[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Sep 19 16:54:00 2014 +0200

    af-packet: force suricata in IPS mode when needed
    
    AF_PACKET is not setting the engine mode to IPS when some
    interfaces are peered and use IPS mode. This is due to the
    fact, it is possible to peer 2 interfaces and run an IPS on
    them and have a third one that is running in normal IDS mode.
    
    In fact this choice is the bad one as unwanted side effect is
    that there is no drop log and that stream inline is not used.
    
    To fix that, this patch puts suricata in IPS mode as soon as
    there is two interfaces in IPS mode. And it displays a error
    message to warn user that the accuracy of detection on IDS only
    interfaces will be low.

[33mcommit 02529b13a8cb7cc5b33669e010f65b1f3216eb39[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 19 13:39:37 2014 +0200

    rule parser: set flag for optionless keywords
    
    If a keyword doesn't have an argument, it should set the SIGMATCH_NOOPT
    flag so the parser knows.

[33mcommit 690a85698f06a24135d5ea14408e73c958fad795[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 19 13:38:47 2014 +0200

    rule parser: fix crashing on malformed options
    
    Fix crashing on malformed rule options like 'rev;1;'.
    
    Bug 1254.

[33mcommit 672049632431bb695f56798c9c5f196afcf2fb27[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 18 15:13:13 2014 +0200

    detect: fix continue detection with amatch and tx
    
    When using AMATCH, continue detection would fail if the tx part
    had already run. This lead to start detection rerunning, causing
    multiple alerts for the same issue.

[33mcommit c152ddf072cbc601a03991cb27802bc480b1ed93[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 18 13:37:18 2014 +0200

    lua: fix http.request_line inspection
    
    As there is no inspection engine for request_line, the sigmatch was
    added to the AMATCH list. However, no AppLayerMatch function for
    lua scripts was defined.
    
    This patch defines a AppLayerMatch function.
    
    Bug #1273.

[33mcommit 8b4615f8e79d2230ffa243ceb1395aae7945bb95[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 19 10:40:20 2014 +0200

    tls: fix a tls.fingerprint issue in debug mode
    
    Print proper variable so we don't NULL-deref.
    
    Bug #1279.

[33mcommit e0307b09935f8d99c653568e830ac42ec71ad420[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Sep 2 15:33:34 2014 +0200

    source-nfq: fix display of next queue
    
    Suricata was displaying an invalid queue number as the value is
    shift at the moment of its assignement.

[33mcommit 7f68a255357a00355566c66fb381caceab14209b[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Sep 6 11:46:21 2014 +0200

    suricatasc: add -c flag to run command
    
    Add -c flag to run command given as argument and return the raw
    JSON result. For example, it is possible to run something like.
     $ suricatasc  -c "iface-stat eth0"
     {'message': {'pkts': 17838352, 'drop': 0, 'invalid-checksums': 1}, 'return': 'OK'}

[33mcommit 1b9cc036530f2ba66ce6629c4cb86b4528f1027f[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Sep 6 11:37:20 2014 +0200

    suricatasc: factorize command parsing

[33mcommit 61a9739f44e4b9ae9e4acfa629df65c6312fe47e[m
Author: bmeeks8 <bmeeks8@bellsouth.net>
Date:   Fri Sep 5 09:22:11 2014 -0400

    Bug fix: IPv6 addresses in negated range and IPv6 string into radix tree.
    
    I found three somewhat serious IPv6 address bugs within the Suricata 2.0.x source code. Two are in the source module "detect-engine-address.c", and the third is in "util-radix-tree.c".
    
    The first bug occurs within the function DetectAddressParse2(). When parsing an address string and a negated block is encountered (such as when parsing !$HOME_NET, for example), any corresponding IPv6 addresses were not getting added to the Group Heads in the DetectAddressList. Only IPv4 addresses were being added.
    
    I discovered another bug related to IPv6 address ranges in the Signature Match Address Array comparison code for IPv6 addresses. The function DetectAddressMatchIPv6() walks a signature's source or destination match address list comparing each to the current packet's corresponding address value. The match address list consists of value pairs representing a lower and upper IP address range. If the packet's address is within that range (including equal to either the lower or upper bound), then a signature match flag is returned.
    
    The original test of each signature match address to the packet was performed using a set of four compounded AND comparisons looking at each of the four 32-bit blocks that comprise an IPv6 address. The problem with the old comparison is that if ANY of the four 32-bit blocks failed the test, then a "no-match" was returned. This is incorrect. If one or more of the more significant 32-bit blocks met the condition, then it is a match no matter if some of the less significant 32-bit blocks did not meet the condition. Consider this example where Packet represents the packet address being checked, and Target represents the upper bound of a match address pair. We are testing if Packet is less than Target.
    
    Packet -- 2001:0470 : 1f07:00e2 : 1988:01f1 : d468:27ab
    Target -- 2001:0470 : 1f07:00e2 : a48c:2e52 : d121:101e
    
    In this example the Packet's address is less than the target and it should give a match. However, the old code would compare each 32-bit block (shown spaced out above for clarity) and logically AND the result with the next least significant block comparison. If any of the four blocks failed the comparison, that kicked out the whole address. The flaw is illustrated above. The first two blocks are 2001:0470 and 1f07:00e2 and yield TRUE; the next less significant block is 1988:01f1 and a48c:2e52, and also yields TRUE (that is, Packet is less than Target); but the last block compare is FALSE (d468:27ab is not less than d121:101e). That last block is the least significant block, though, so its FALSE determination should not invalidate a TRUE from any of the more significant blocks. However, in the previous code using the compound logical AND block, that last least significant block would invalidate the tests done with the more significant blocks.
    
    The other bug I found for IPv6 occurs when trying to parse and insert an IPv6 address into a Radix Tree using the function SCRadixAddKeyIPV6String(). The test for min and max values for an IPv6 CIDR mask incorrectly tests the upper limit as 32 when it should be 128 for an IPv6 address. I think this perhaps is an old copy-paste error if the IPv6 version of this function was initially copied from the corresponding IPv4 version directly above it in the code. Without this patch, the function will return null when you attempt to add an IPv6 network whose CIDR mask is larger than 32 (for example, the popular /64 mask will cause the function to return the NULL error condition).
    
    (amended by Victor Julien)

[33mcommit 22272f6c5b73fdeea125aec7833938e493a75618[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 15 14:04:44 2014 +0200

    lua: export packet keywords to detect scripts
    
    Set packet pointer, so it's available to the lua keywords that
    require it.

[33mcommit 5a86e57d415fd20d171e57e109d69ab532da73e4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 14 16:37:37 2014 +0200

    detect-lua: register all 'output' keywords as well
    
    Register all keywords available to output scripts to the detect
    scripts as well.

[33mcommit 41523ede77f6675fae5f040e80abf28d65e23cb8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 14 16:33:37 2014 +0200

    detect-lua: set tx ptr
    
    Set tx ptr so it can be used later by other keywords.

[33mcommit 3b98a1ce66b4820e8170dcf16bcf2c19fe461867[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 14 16:21:38 2014 +0200

    detect: track current tx_id in det_ctx
    
    When using the inspection engines, track the current tx_id in the
    thread storage the detect thread uses. As 0 is a valid tx_id, add
    a simple bool that indicates if the tx_id field is set.

[33mcommit a11478715019b07fc2c46e0fd5956298efbca74d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 5 09:58:48 2014 +0200

    lua: move lua output code to generic lua file
    
    So that other Lua scripts (detect) can also start using it.

[33mcommit fdc73eeba67d41eefd25417b3c3f69e8b7f42736[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 5 09:26:59 2014 +0200

    lua: remove LogLua prefix and replace it with Lua
    
    Preparing making code available to more than just output.

[33mcommit e0d544fb86095f95083d20434e46bf35693cdd1c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 4 17:47:47 2014 +0200

    lua: move output http funcs to generic util file
    
    Move output Http functions to util-lua-http.c so that detect can use
    it later.

[33mcommit f23399d6724bbbe8c9f8d66a6241bc9ba118e09e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 1 16:29:53 2014 +0200

    Rename Lua code to just Lua
    
    As we support regular Lua as well as LuaJIT, it makes more sense to call
    it all Lua.

[33mcommit adfe17280becb8f7f21958b329f054c2c2a9e733[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 1 15:34:37 2014 +0200

    lua: use LuaPushStringBuffer in more places
    
    Replace existing workarounds with LuaPushStringBuffer

[33mcommit 66019ba3251b86a79bf529b3633ccc16f27ea4ef[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 1 12:41:17 2014 +0200

    lua: LuaPushStringBuffer optimization
    
    Only use a temp buffer when really necessary, which is when the
    buffer size is not a multiple of 4.

[33mcommit 307ce40500c714d93124fcb922f58231083c8f05[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 1 12:32:38 2014 +0200

    lua: move LuaPushStringBuffer to the generic util-lua.c

[33mcommit 90b5aff02ec5e63cefcf693ac12e7617ed866469[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 1 12:29:17 2014 +0200

    lua: rename LuaReturnStringBuffer to LuaPushStringBuffer
    
    LuaPushStringBuffer is a wrapper for lua_pushlstring, so the new name
    better reflects it's function.

[33mcommit 0e93a292744a2c9c3faa6e5c29be3882acd21393[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 31 18:02:40 2014 +0200

    output-lua: add SCFlowStats
    
    SCFlowStats gets the packet and byte counts per flow:
        tscnt, tsbytes, tccnt, tcbytes = SCFlowStats()

[33mcommit 46ac85dea61ed680e0508f294099310efc44c194[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 29 17:36:42 2014 +0200

    output lua: expose flow logging api
    
    Allow use of the Flow Logging API through Lua scripts.
    
    Minimal script:
    
    function init (args)
        local needs = {}
        needs["type"] = "flow"
        return needs
    end
    
    function setup (args)
    end
    
    function log(args)
        startts = SCFlowTimeString()
        ipver, srcip, dstip, proto, sp, dp = SCFlowTuple()
        print ("Flow IPv" .. ipver .. " src " .. srcip .. " dst " .. dstip ..
                " proto " .. proto .. " sp " .. sp .. " dp " .. dp)
    end
    
    function deinit (args)
    end

[33mcommit f7d890fe00438e98f581d971e5737f2a5465cecf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 25 15:25:53 2014 +0200

    lua-output: add SCStreamingBuffer
    
    Add SCStreamingBuffer lua function to retrieve the data passed
    to the script per streaming API invocation.
    
    Example:
    
        function log(args)
            data = SCStreamingBuffer()
            hex_dump(data)
        end

[33mcommit ca3be7700801bbe264364729a6368c0a83a17920[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 24 22:40:33 2014 +0200

    output-lua: add support for streaming api
    
    Add support to lua output for the streaming api. This allows for a
    script to subscribe itself to streaming tcp data and http body data.

[33mcommit efb5c29698a4649f007809ef9a448599e4217ecd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 3 00:09:57 2014 +0200

    output-lua: give access to packet payload
    
    Add SCPacketPayload()
    
    Example:
        function log(args)
            p = SCPacketPayload()
            print(p)
        end

[33mcommit 08b0d9a5b45766ef6d42356dcb50cc62d069a435[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 31 15:05:15 2014 +0200

    output-lua: expose http body data
    
    Make normalized body data available to the script through
    HttpGetRequestBody and HttpGetResponseBody.
    
    There no guarantees that all of the body will be availble.
    
    Example:
        function log(args)
            a, o, e = HttpGetResponseBody();
            --print("offset " .. o .. " end " .. e)
    
            for n, v in ipairs(a) do
                print(v)
            end
        end

[33mcommit 8360b707e88abca5dafaa8a571600a343fcbc48e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 28 17:24:22 2014 +0100

    output-lua: add HttpGetRequestHost callback
    
    Get the host from libhtp's tx->request_hostname, which can either be
    the host portion of the url or the host portion of the Host header.
    
    Example:
    
        http_host = HttpGetRequestHost()
        if http_host == nil then
            http_host = "<hostname unknown>"
        end

[33mcommit a234a335ac0688d549097fcafbc2380d3cd5932a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 21 22:26:28 2014 +0100

    output-lua: http alproto check

[33mcommit cb69cee4d8d81080519a932530c65f4bfcff6481[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 21 22:26:37 2014 +0100

    output-lua: clean up flow lock handling

[33mcommit 19383fd428b5c226901556096892386a4bcd1410[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 21 14:25:04 2014 +0100

    output-lua: alproto string callback
    
    SCFlowAppLayerProto: get alproto as string from the flow. If alproto
    is not (yet) known, it returns "unknown".
    
        function log(args)
            alproto = SCFlowAppLayerProto()
            if alproto ~= nil then
                print (alproto)
            end
        end

[33mcommit 22dd14d5604c717a5296433ef19cdb953f156eb3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 21 09:40:54 2014 +0100

    output-lua: expose thread info
    
    A new callback to give access to thread id, name and group name:
    SCThreadInfo. It gives: tid (integer), tname (string), tgroup (string)
    
        function log(args)
            tid, tname, tgroup = SCThreadInfo()

[33mcommit 8802ba3f67ea175a1b15d7e16aa4dea9d698f93e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 19 18:38:29 2014 +0100

    output-lua: expose flow start time string
    
    SCFlowTimeString: returns string form of start time of a flow
    
    Example:
    
        function log(args)
            startts = SCFlowTimeString()
            ts = SCPacketTimeString()
            if ts == startts then
                print("new flow")
            end

[33mcommit 07ff85a44e89b225982c9830a2d7fed4d8cb4f27[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 19 16:13:38 2014 +0100

    output-lua: add file callbacks
    
    SCFileInfo: returns fileid (number), txid (number), name (string),
                size (number), magic (string), md5 in hex (string)
    
    Example:
    
        function log(args)
            fileid, txid, name, size, magic, md5 = SCFileInfo()
    
    SCFileState: returns state (string), stored (bool)
    
    Example:
        function log(args)
            state, stored = SCFileState()

[33mcommit 3343060d85d96a2bd6cd7a481e153c1350bcbc40[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 19 12:36:01 2014 +0100

    output-lua: add SCPacketTimeString
    
    Add SCPacketTimeString to get the packets time string in the format:
        11/24/2009-18:57:25.179869
    
    Example use:
    
        function log(args)
            ts = SCPacketTimeString()

[33mcommit b3dfd3cd8e2d209f316a555865fe6c146b1eaf2b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 17 18:44:09 2014 +0100

    output-lua: rule info callback
    
    SCRuleIds(): returns sid, rev, gid:
    
        function log(args)
            sid, rev, gid = SCRuleIds()
    
    SCRuleMsg(): returns msg
    
        function log(args)
            msg = SCRuleMsg()
    
    SCRuleClass(): returns class msg and prio:
    
        function log(args)
            class, prio = SCRuleClass()
            if class == nil then
                class = "unknown"
            end

[33mcommit d9efa7048ab7fbbf208309cb97935d25a024b066[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 14 14:16:47 2014 +0100

    lua: add SCFlowTuple lua function
    
    Like SCPacketTuple, only retrieves Tuple from the flow.
    
    Minimal log function:
    
        function log(args)
            ipver, srcip, dstip, proto, sp, dp = SCFlowTuple()
            print ("Flow IPv" .. ipver .. " src " .. srcip .. " dst " .. dstip ..
                   " proto " .. proto .. " sp " .. sp .. " dp " .. dp)
        end

[33mcommit f2da5dbbad2d5d41b12291fcef0b41f3d54ec1d7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 3 14:11:00 2014 +0100

    detect-lua: convert extensions to use flow wrappers
    
    Use the new flow wrapper functions in the lua flowvar and flowint
    extensions.

[33mcommit affbd697ed8c30b474045e045fd206847dcd4d30[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 3 14:09:18 2014 +0100

    lua: add flow store and retrieval wrappers
    
    Add flow store and retrieval wrappers for accessing the flow through
    Lua's lightuserdata method.
    
    The flow functions store/retrieve a lock hint as well.

[33mcommit 599ec36b2cb2cab0e50e924c97923d1eea92fd8a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 28 16:18:48 2014 +0100

    lua: introduce util-lua.[ch]
    
    Shared functions for all lua parts of the engine.

[33mcommit 8bc01af58141b2999db9a60aba6f897265a13dc9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 24 17:08:44 2014 +0100

    output-lua: add all packets logging support
    
    If the script needing a packet doesn't specify a filter, it will
    be run against all packets. This patch adds the support for this
    mode. It is a packet logger with a condition function that always
    returns true.

[33mcommit fe3484fbc0976e2cda984a71cefb1b01857876dc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 24 16:41:27 2014 +0100

    output-lua: improve error checking for init()
    
    If init doesn't properly init the script, skip the script and error
    out.

[33mcommit 0055a10b3a9c675bee60cccc0f1aced5cb1f74db[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 21 12:20:46 2014 +0100

    output-log: expose SCLog functions to lua scripts
    
    The lua scripts can use SCLogDebug, SCLogInfo, SCLogNotice, SCLogWarning,
    SCLogError. The latter 2 won't be able to add an error code though.

[33mcommit 51ab5e55c1a51e56586d7a92d7751529ddbe770a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 21 10:17:16 2014 +0100

    output-lua: make packet ptr available to all scripts
    
    TxLogger and Packet logger need it to be able to use the Tuple
    callback.

[33mcommit 1e836be3d8e21e62486f09a91aebafdf1bfdc7c3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 21 09:37:39 2014 +0100

    output-lua: add SCLogPath callback
    
    Add a lua callback for getting Suricata's log path, so that lua scripts
    can easily get the logging directory Suricata uses.
    
    Update the Setup logic to register callbacks before the scripts 'setup'
    is called.
    
    Example:
    
        name = "fast_lua.log"
        function setup (args)
            filename = SCLogPath() .. "/" .. name
            file = assert(io.open(filename, "a"))
        end

[33mcommit 31eea0f143607b379c0563be8372e9259f5c74b8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 21 09:00:42 2014 +0100

    output-lua: TxLogger use proper stack function
    
    Use proper wrapper to setup the stack.

[33mcommit 329f55598f024da012ef9af868729841539eb18f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 20 17:58:15 2014 +0100

    output-lua: improve error handling and documentation
    
    Better document the various functions and improve error handling.

[33mcommit c5ff94a319fd38b7a1ab2b45b34b8eaf2c8c273f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 20 17:55:15 2014 +0100

    output-lua: register common callbacks
    
    Clean up callback registration in the setup-stage and register
    common callbacks.

[33mcommit 0070aef3d12ee97fc7bc4bd9121a538c0dcaf00b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 20 17:51:47 2014 +0100

    output-lua: support File logging
    
    Add file logger support. The script uses:
    
    function init (args)
        local needs = {}
        needs['type'] = 'file'
        return needs
    end
    
    The type is set to file to make it a file logger.

[33mcommit 1517a2ca0efdc3d197a6382ec373c45416d0e32d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 20 17:49:51 2014 +0100

    output-lua: rename LuaPacketLogger to ..Alerts
    
    As the script is called for each alert, not for each packet, name
    the script LuaPacketLoggerAlerts.

[33mcommit fe6cf00a8a017359b5e9c2c29264cacac46c9877[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 20 15:57:00 2014 +0100

    output-lua: add stack utility functions
    
    Add utility functions for placing things on the stack for use
    by the scripts. Functions for numbers, strings and byte arrays.
    
    Add callback for returing IP header info: ip version, src ip,
    dst ip, proto, sp, dp (or type and code for icmp and icmpv6):
    SCPacketTuple

[33mcommit 53d7f800bf45852a3b914df2fd917a4ecd780182[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 20 15:47:50 2014 +0100

    output-lua: initial packet support
    
    Add key for storing packet pointer in the lua stack and a utility
    function to retrieve it from lua callbacks.

[33mcommit 15052e58a24b572a312df3cdc93f10ad6e5f3dcb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 20 15:45:33 2014 +0100

    output-lua: move LuaPrintStack to common
    
    It's a utility function that will be used in several other places
    as well.

[33mcommit 684afc7f4e223ad21a8d288e54944716fd07d9d7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 20 09:39:24 2014 +0100

    output-lua: add example packet log script
    
    Example packet log script that outputs to stdout in the alert-
    fast log format.

[33mcommit b60e28e1a492bd9f49d44cdb5fa34373624421cd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 20 09:36:16 2014 +0100

    output-lua: packet logger support
    
    Through 'needs' the script init function can indicate it wants to
    see packets and select a condition function. Currently only alerts
    is an option:
    
        function init (args)
            local needs = {}
            needs["type"] = "packet"
            needs["filter"] = "alerts"
            return needs
        end

[33mcommit 0bd4b9beca02fc9c29270953bd84a2aa63fe22aa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 19 13:49:35 2014 +0100

    output-lua: new file for common functions
    
    Add output-lua-common.[ch] to store functions common to various parts
    of the lua output framework.

[33mcommit db30ed8c3e6cc3ac6fa6fff1eacb4ca58fab3e0c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 11 14:44:21 2014 +0100

    output: Lua HTTP log initial implementation
    
    Initial version of a HTTP LUA logger. Execute lua scripts from the
    Tx-log API.

[33mcommit 95e0eae69af40f3fead22894b256d21817364a4a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 19 12:52:03 2014 +0100

    output-lua: support submodules
    
    Use the OutputCtx::submodules list to register additional log modules.
    Currently this is hardcoded to the 'lua' module.

[33mcommit 1fd0f96b49b6a7f54834610508a941fa78a4241d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 19 12:50:57 2014 +0100

    output-lua: display warning if no lua support
    
    Display a warning that the lua module is not available if we're
    not compiled against lua(jit).

[33mcommit eb5a70fe0909450e3767a6123ae756178096651b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 19 12:46:50 2014 +0100

    output: add submodules list to OutputCtx
    
    Add a list to the OutputCtx that can contain OutputModule structures.
    This will be used by a 'parent' module to register submodules directly.

[33mcommit 64935546632c4e0bbb987adadd9bba55cdc9d165[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 18 12:15:58 2014 +0200

    streaming: pass tx_id to logger
    
    This way we can distinguish between various tx' in the logger.

[33mcommit cd78705e3a312c6ec291bcdf95b9eb0fc45c110f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 17 17:49:05 2014 +0200

    streaming-loggers: add configuration
    
    Add a (disabled by default) config to the yaml

[33mcommit ac2ef45a3de1acdaa98bd3269c4d093eedf726ef[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 13 12:05:33 2014 +0200

    tcp-data-log: file and dir logging modes
    
    Add a file logging mode, which logs all the data into a single log file.
    
    Also, make the directory logging more configurable.

[33mcommit 3dec0e96f8b8fa468956dad8cc799e04de90af5e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 5 10:02:38 2014 +0200

    tcp-data: new streaming logger
    
    tcp-data logs out reassembled stream data in a streaming fashion.
    
    Records type to log into different directories.

[33mcommit bac6c3ab029b3c8412b04e8cc9e51559dfa4f4d7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 12 11:42:00 2014 +0200

    streaming logger: support Http Body logging
    
    Add an argument to the registration to indicate which iterator
    needs to be used: Stream or HttpBody
    
    Add HttpBody Iterator, calling the logger(s) for each Http body chunk.

[33mcommit ab6fac884d4c8f0e27ee5915768251c81ce7340b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 5 10:00:27 2014 +0200

    output-streaming: StreamIterator
    
    StreamIterator implementation for iterating over ACKed segments.
    
    Flag each segment as logged when the log function has been called for it.
    
    Set a 'OPEN' flag for the first segment in both directions.
    
    Set a 'CLOSE' flag when the stream ends. If the last segment was already
    logged, a empty CLOSE call is performed with NULL data.

[33mcommit 9d9ef983dde8a404be7a0007a6c1fae7f5126595[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 4 12:51:26 2014 +0200

    output-streaming: a Log API for streaming data
    
    This patch adds a new Log API for streaming data such as TCP reassembled
    data and HTTP body data. It could also replace Filedata API.
    
    Each time a new chunk of data is available, the callback will be called.

[33mcommit fdcc7d18e7d9eea2ccf89f5b0b7a8b69321ef466[m
Author: Ken Steele <ken@tilera.com>
Date:   Tue Aug 12 19:57:41 2014 -0400

    Fix compiler warning about uninitialized variable in mpipe.

[33mcommit 3a18db13dc83c39727edc36af2b2b4704472c079[m
Author: Duarte Silva <development@serializing.me>
Date:   Tue Aug 12 18:13:52 2014 +0100

    Simple code fixes
    - Removed unnecessary assignment of the data field
    - Removed else condition (same function called for IPv4 and IPV6)
    - Fixed constants to be a power of two (used in bitwise operations)

[33mcommit c20bd3bcb2db85d3092eefc35015b4c7c1874b33[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 13 16:33:50 2014 +0200

    Optimize Packet Ext data freeing
    
    Move the logic of PacketFreeExtData into a macro 'PACKET_FREE_EXTDATA'.
    It was called for each packet.

[33mcommit 80adc40f6850a9dfcb3e43e5b1a1930c5059fbe8[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Aug 13 10:48:26 2014 +0200

    packet pool: fix ext_pkt cleaning
    
    The field ext_pkt was cleaned before calling the release function.
    The result was that IPS mode such as the one of AF_PACKET were not
    working anymore because they were not able to send the data which
    were initially pointed by ext_pkt.
    
    This patch moves the ext_pkt cleaning to the cleaning macro. This
    ensures that the cleaning is done for allocated and pool packets.

[33mcommit 3ee504a3dc2ba9736d3e1f37c855dc4ef40e0189[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 9 08:55:47 2014 +0200

    packet recycle: remove mutex destroy/init
    
    This was necessary earlier when there was a memset involved.

[33mcommit ed0b75e1e9bd4b9764c60a55f256ba9881d3ea9d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 9 08:51:29 2014 +0200

    packet recycle: do most clean up on packet reuse
    
    Call PACKET_RELEASE_REFS from PacketPoolGetPacket() so that
    we only access the large packet structure just before actually
    using it. Should give better cache behaviour.

[33mcommit 231b993f1f91151f814d05fada3d16815625e9cf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 9 08:50:26 2014 +0200

    packet recycle: split macro
    
    Split PACKET_RECYCLE into 2 parts. One part for cleanup to do before a
    packet is returned to the pool, the other after it's retrieved from
    the pool.

[33mcommit 04a0672f7ab9ebf8ba6004a21f24fcf34bfca875[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 9 10:59:49 2014 +0200

    Fix decode tests calling PACKET_DO_RECYCLE instead of PACKET_RECYCLE

[33mcommit 7fa2b8769bb762cfed795531eba70946d05ca9ec[m[33m ([m[1;33mtag: suricata-2.1beta1[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 12 15:59:05 2014 +0200

    Update Changelog for 2.1beta1

[33mcommit 2bcff80d32688ab17736fcfee1789bac5946741a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 8 09:49:18 2014 +0200

    Update Changelog for 2.0.3

[33mcommit 44aeb9c637503c87cc0424d172fe8ef0d141351c[m
Author: Ken Steele <ken@tilera.com>
Date:   Wed Feb 5 18:00:19 2014 -0500

    Fix GRE Source Routing Header definition
    
    The Source Routing Header had routing defined as a char* for a field
    of variable size. Since that field was not being used in the code, I
    removed the pointer and added a comment.

[33mcommit c91b7fd3bc177961f6f0c074766ee7c6f9f8d931[m
Author: Ken Steele <ken@tilera.com>
Date:   Fri Dec 20 13:50:43 2013 -0500

    More structures that need to be marked Packed.
    
    These structures are cast from raw packet data, so they should be packed.
    The case is:
    
    typedef struct Foo_ {
    } Foo;
    
    Foo *f = (Foo *)pkt;

[33mcommit 045966676dd3c4b8de041d11f8ce11d814dd52f7[m
Author: Ken Steele <ken@tilera.com>
Date:   Fri Dec 20 11:52:12 2013 -0500

    Add Packed attribute on Header structures
    
    Structures that are used to cast packet data into fields need to be packed
    so that the compiler doesn't add any padding to these fields. This also helps
    Tile-Gx to avoid unaligned loads because the compiler will insert code to
    handle the possible unaligned load.

[33mcommit da1fe759759a1a0d00c2d4d2e14d38ac0014b6ae[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 11 14:14:59 2014 +0200

    lua: improve configure checks
    
    The base 'lua' library has different names on different OS' and even
    Linux distro's. Instead of selecting the proper one, we now just try
    all. This way no OS/distro specific knowledge about the name is needed.

[33mcommit f453fb810f04bb7e8c0e831ad209a9184897cdc7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 8 14:25:31 2014 +0200

    alert-json: clean up flags
    
    Make payload/packet logging code also use the flags field in
    AlertJsonOutputCtx, instead of in the LogFileCtx.

[33mcommit b188d93630a148c6170011482fa0d8f21d717b02[m
Author: Giuseppe Longo <giuseppelng@gmail.com>
Date:   Thu Aug 7 15:10:45 2014 +0200

    json-alert: include HTTP info on the alerts
    
    Extends the JSON alert output to include the HTTP data
    at the time of the alert.

[33mcommit 288f0b1fb74ead6d7faba80b37450cb2e0e719d5[m
Author: Giuseppe Longo <giuseppelng@gmail.com>
Date:   Thu Aug 7 14:36:54 2014 +0200

    json-http: refactoring output code
    
    Splits the output code in two public functions and permits
    to call them from the alert function

[33mcommit db9588a2ce0ee0d9da2ef42c0995e4440bdad3dc[m
Author: Duarte Silva <development@serializing.me>
Date:   Thu Jul 31 17:06:20 2014 +0100

    Use extra data structure in json alert output
    to store local configuration

[33mcommit 6b0ff0193d9e3a7f4c2c909ef463d8a9c858c42b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 17 00:23:50 2014 +0200

    stream: detect and filter out bad window updates
    
    Reported in bug 1238 is an issue where stream reassembly can be
    disrupted.
    
    A packet that was in-window, but otherwise unexpected set the
    window to a really low value, causing the next *expected* packet
    to be considered out of window. This lead to missing data in the
    stream reassembly.
    
    The packet was unexpected in various ways:
    - it would ack unseen traffic
    - it's sequence number would not match the expected next_seq
    - set a really low window, while not being a proper window update
    
    Detection however, it greatly hampered by the fact that in case of
    packet loss, quite similar packets come in. Alerting in this case
    is unwanted. Ignoring/skipping packets in this case as well.
    
    The logic used in this patch is as follows. If:
    
    - the packet is not a window update AND
    - packet seq > next_seq AND
    - packet acq > next_seq (packet acks unseen data) AND
    - packet shrinks window more than it's own data size
    THEN set event and skip the packet in the stream engine.
    
    So in case of a segment with no data, any window shrinking is rejected.
    
    Bug #1238.

[33mcommit 7cc63918c365a8aecde09455a22a026b5f75beae[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 7 15:02:56 2014 +0200

    ipv6: fix dst/hop header option parsing
    
    The extension header option parsing used a uint8_t internally. However
    much bigger option sizes are valid.

[33mcommit 2b84cd948381c3e33d728160a4c19b3a912bff94[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 5 17:28:17 2014 +0200

    defrag: use 'struct timeval' for timeout tracking
    
    Until now the time out handling in defrag was done using a single
    uint32_t that tracked seconds. This lead to corner cases, where
    defrag trackers could be timed out a little too early.

[33mcommit 7c05685421afbb948cd6db308a5ee4cb347c7e15[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 28 14:41:15 2014 +0200

    ipv6: set event on unsupported nh
    
    If a next header / protocol is encountered that we can't handle (yet)
    set an event. Disabled the rule by default.
    
        decode-event:ipv6.unknown_next_header;

[33mcommit bbcdb657dad9e26d12470ae01b9b0cca8e8f8712[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 28 13:59:44 2014 +0200

    ipv6: more robust ipv6 exthdr handling
    
    Skip past Shim6, HIP and Mobility header.
    
    Detect data after 'none' header.
        decode-event:ipv6.data_after_none_header;

[33mcommit 938602c55ec1bdad4f9ea664cd53382b6b454e9b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 28 12:07:13 2014 +0200

    ipv6: detect frag header reserved field non-zero
    
    Frag Header length field is reserved, and should be set to 0.
    
        decode-event:ipv6.fh_non_zero_reserved_field;

[33mcommit 8c19e5ff63757efa2a6874f749f062754a47c8b6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 24 16:50:34 2014 +0200

    ipv6: make exthdr parsing more robust
    
    Improve data length checks. Detect PadN option with 0 length.

[33mcommit abee95ca4fb815b2c723409580f937ad8824ab58[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 17 15:57:16 2014 +0200

    ipv6: set flag on type 0 routing header
    
    Type 0 Routing headers are deprecated per RFC 5095.
    
    This patch sets an decode event flag that can be matched on through:
        decode-event:ipv6.rh_type_0;

[33mcommit 83b031b4e025d84593424a1ed3d4d3e613956b37[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 24 13:39:10 2014 +0200

    ipv6 defrag: fix unfragmentable exthdr handling
    
    Fix or rather implement handling of unfragmentable exthdrs in ipv6.
    The exthdr(s) appearing before the frag header were copied into the
    reassembled packet correctly, however the stripping of the frag header
    did not work correctly.
    
    Example:
    The common case is a frag header directly after the ipv6 header:
    
    [ipv6 header]->[frag header]->[icmpv6 (part1)]
    [ipv6 header]->[frag header]->[icmpv6 (part2)]
    
    This would result in:
    [ipv6 header]->[icmpv6]
    
    The ipv6 headers 'next header' setting would be updated to point to
    whatever the frag header was pointing to.
    
    This would also happen when is this case:
    
    [ipv6 header]->[hop header]->[frag header]->[icmpv6 (part1)]
    [ipv6 header]->[hop header]->[frag header]->[icmpv6 (part2)]
    
    The result would be:
    [ipv6 header]->[hop header]->[icmpv6]
    
    However, here too the ipv6 header would have been updated to point
    to what the frag header pointed at. So it would consider the hop header
    as if it was an ICMPv6 header, or whatever the frag header pointed at.
    
    The result is that packets would not be correctly parsed, and thus this
    issue can lead to evasion.
    
    This patch implements handling of the unfragmentable part. In the first
    segment that is stored in the list for reassembly, this patch detects
    unfragmentable headers and updates it to have the last unfragmentable
    header point to the layer after the frag header.
    
    Also, the ipv6 headers 'next hdr' is only updated if no unfragmentable
    headers are used. If they are used, the original value is correct.
    
    Reported-By: Rafael Schaefer <rschaefer@ernw.de>
    
    Bug #1244.

[33mcommit e66c73abcd65786d686a02113f8709fe071a5d7f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 1 09:55:43 2014 +0200

    packet pool: init pthread key before using it
    
    In the packet pool code, it's critical to initialize the pthread key
    before using it. Applies only to the code used if __thread isn't
    supported.

[33mcommit a441441636b36975a279aa99bbabe59b691c026b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 1 09:54:34 2014 +0200

    packet pool: cosmetic cleanups

[33mcommit 4b9eecc7f6a5703ad933aed4082e4dc316ab555f[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jul 31 11:48:41 2014 +0200

    prscript: update URL
    
    Buildbot server has been moved to another box.

[33mcommit 6de34489b3cabd75726e3d9f7356aee84685c8ce[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 31 15:49:11 2014 +0200

    magic: disable tests depending on magic version
    
    Some tests depend on specific results by specific magic versions.
    Disable these.

[33mcommit fe82a83e7966e3577c7fc205340c4e6046cf476b[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jul 30 17:17:51 2014 +0200

    suricata: RunUnittests now return void
    
    RunUnittests function is now a terminal function (calling exit
    before leaving).

[33mcommit 0780c0704320c9534b8821e3dc0180f019068c30[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jul 29 10:05:23 2014 +0200

    unittests: don't register app layer test
    
    Some tests are already registered via the function
    AppLayerParserRegisterProtocolUnittests. So we don't need to
    egister them during runmode initialization.

[33mcommit a0b421c47e797bf8ef1cd5c77626ef89398d6524[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 31 12:17:58 2014 +0200

    Fix up mistaken style change

[33mcommit 228abb89ac85057b5fbc60789f7912283e643a85[m
Author: Ken Steele <ken@tilera.com>
Date:   Wed Jul 30 14:44:45 2014 -0400

    fixup

[33mcommit 8f1d75039a1378aed62c3d27578a954c0a4ccce6[m
Author: Ken Steele <ken@tilera.com>
Date:   Wed Jul 30 14:19:35 2014 -0400

    Enforce function coding standard
    
    Functions should be defined as:
    
    int foo(void)
    {
    }
    
    Rather than:
    int food(void) {
    }
    
    All functions where changed by a script to match this standard.

[33mcommit de4e2221d8e9dc43f07c867caaad5e42f16a96b7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jul 12 09:25:21 2014 +0200

    eve: add tx_id to output for alerts and events
    
    Add tx_id field for correlating alerts and events per tx.

[33mcommit c85674b0a653828891e307ba5cb943e35e0340fa[m
Author: sxhlinux <sxhlinux@users.noreply.github.com>
Date:   Thu Jul 24 10:00:40 2014 +0800

    Update app-layer-htp.c
    
    When keyword "boundary=" doesn't exist in the http_header, the value of r is 0 and this condition shouldn't return 0 instead 1;

[33mcommit 033ad9e97429d0f01b3601c9b3a30dae4c5d9acc[m
Author: Ken Steele <ken@tilera.com>
Date:   Thu Jul 3 12:42:12 2014 -0400

    Reduce reallocation in AC Tile MPM creation.
    
    Exponentially increase the memory allocated for new states when adding new
    states, then at the end resize down to the actually final size so that no space is wasted.

[33mcommit a6dbf627b2e7c9d75d7ecda40e7a46357fdf88d7[m
Author: Alexander Gozman <a.gozman@securitycode.ru>
Date:   Mon Jul 28 20:22:32 2014 +0400

    Add input interface's name to JSON log

[33mcommit 2bcd48bc1200827d70c2e53982fa7901faac6176[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 30 11:00:53 2014 +0200

    pcap-log: yaml comment update

[33mcommit 0c1696f84bec87bcd67225a7b8655d5a0b691373[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 30 10:58:30 2014 +0200

    pcap-log: unify lock handling, fixes Coverity warn
    
    *** CID 1229124:  Data race condition  (MISSING_LOCK)
    /src/log-pcap.c: 363 in PcapLog()
    357         {
    358             return TM_ECODE_OK;
    359         }
    360
    361         PcapLogLock(pl);
    362
    >>>     CID 1229124:  Data race condition  (MISSING_LOCK)
    >>>     Accessing "pl->pkt_cnt" without holding lock "PcapLogData_.plog_lock". Elsewhere, "PcapLogData_.pkt_cnt" is accessed with "PcapLogData_.plog_lock" held 1 out of 2 times (1 of these accesses strongly imply that it is necessary).
    363         pl->pkt_cnt++;
    364         pl->h->ts.tv_sec = p->ts.tv_sec;
    365         pl->h->ts.tv_usec = p->ts.tv_usec;
    366         pl->h->caplen = GET_PKT_LEN(p);
    367         pl->h->len = GET_PKT_LEN(p);
    368         len = sizeof(*pl->h) + GET_PKT_LEN(p);

[33mcommit edb702a7b6a904377e35f49f6ef5e5f459e9a07a[m
Author: Ken Steele <ken@tilera.com>
Date:   Tue Jul 29 11:13:56 2014 -0400

    Cleanup Packet Pools when done.

[33mcommit b045fcb0329809bde7ca8e3fc0a43fb3563c0a2a[m
Author: Ken Steele <ken@tilera.com>
Date:   Tue Jul 29 09:31:49 2014 -0400

    Fix Packet Stacks for non-TLS Operating Systems
    
    On non-TLS systems, check each time the Thread Local Storage
    is requested and if it has not been initialized for this thread, initialize it.
    The prevents not initializing the worker threads in autofp run mode.

[33mcommit 85b96d5032594ddc1018155d3eee6dd7328d7fbf[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jul 4 17:00:55 2014 +0200

    travis-ci: use make check
    
    This patch replaces unittest run by make check. It also install
    coccinelle so we should have more test.

[33mcommit d7982fae8c7bbc14cb3548ac929aa74b21d034bc[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jul 1 19:27:34 2014 +0200

    coccinelle: fix problem with coccinelle 1.0rc21
    
    coccinelle 1.0rc21 has a problem with regular expression handling.
    This result in a Fatal Error when test system detects an coding
    error.
    
    This patch fixes the problem by using a simple blob inside
    semantic patch instead of using a regular expression to define
    the function.
    
    It also fixes add an optimization on matching suppressing a
    useless <.. ..> construction.
    
    Fixes have been suggested by Julia Lawall.

[33mcommit 0ac94ef777d222bb530e6f314b1092b2b4b24744[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 21 15:13:42 2014 +0200

    flow-recycler: support multiple instances
    
    Use new management API to run the flow recycler.
    
    Make number of threads configurable:
    
    flow:
      memcap: 64mb
      hash-size: 65536
      prealloc: 10000
      emergency-recovery: 30
      managers: 2
      recyclers: 2
    
    This sets up 2 flow recyclers.

[33mcommit e0841218f0b609cbd91b8e758c1c196f5d3a2bc5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jul 12 13:47:33 2014 +0200

    flow-manager: support multiple instances
    
    Use new management API to run the flow manager.
    
    Support multiple flow managers, where each of them works with it's
    own part of the flow hash.
    
    Make number of threads configurable:
    
    flow:
      memcap: 64mb
      hash-size: 65536
      prealloc: 10000
      emergency-recovery: 30
      managers: 2
    
    This sets up 2 flow managers.
    
    Handle misc tasks only in instance 1: Handle defrag hash timeout
    handing, host hash timeout handling and flow spare queue updating
    only from the first instance.

[33mcommit 46cee88ef8fbd44a383066405ae3397fde939f86[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 16 09:59:48 2014 +0200

    threads: add management API
    
    Currently management threads do their own thread setup and handling. This
    patch introduces a new way of handling management threads.
    
    Functionality that needs to run as a management thread can now register
    itself as a regular 'thread module' (TmModule), where the 'Management'
    callback is registered.

[33mcommit f1185d051c210ca0daacdddbe865a51af24f4ea3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 4 13:37:02 2014 +0200

    flow id: quick and dirty first stab at a flow id
    
    Add a 'flow_id' that is the same for all records produced for packets
    belonging to the same flow.
    
    This patch simply takes the flow's memory address.

[33mcommit 9f55ca00576b9eb04feb9267f08814af7acf3772[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 23 14:54:05 2014 +0200

    flow: add flow_end_flags field, add logging
    
    The flow end flags field is filled by the flow manager or the flow
    hash (in case of forced timeout of a flow) to record the timeout
    conditions in the flow:
    - emergency mode
    - state
    - reason (timed out or forced)
    
    Add logging to the flow logger.

[33mcommit fc6ad56944d801772e4384e853c3c8077def545c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 23 14:51:44 2014 +0200

    flow: move FlowGetFlowState
    
    Move FlowGetFlowState to flow-private.h so that all parts of the flow
    engine can use it.

[33mcommit e6ed6731b1447be1e187128abb5908e8668b4595[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 23 11:49:37 2014 +0200

    flow log: log TCP state
    
    Log the TCP state at timeout.

[33mcommit 8c231702d9885b4821e9e1eb2c0cc7567ca7d4fb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 22 12:53:51 2014 +0200

    flow-recycler: speed up flow-recycler shutdown
    
    Thread was killed by the generic TmThreadKillThreads instead of
    the FlowKillFlowRecyclerThread. The latter wakes the thread up, so
    that shutdown is quite a bit faster.

[33mcommit 6f9a2fcd58f4b10c43cc265a49d145dca285370f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 22 12:39:12 2014 +0200

    flow: log individual tcp flags
    
    Log the tcp flags.

[33mcommit f4dfaacff36bcd1553291abf6deb2fa4fb44da7c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 22 12:37:27 2014 +0200

    netflow: log individual tcp flags
    
    Log the tcp flags.

[33mcommit eaf01449e341ac53f633e26677cc1ad03d6bd4a5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 22 12:36:45 2014 +0200

    json: add tcp flags to json utility function
    
    Turns a flags bitfield into a set of json bools.

[33mcommit db15339f479796a77655b9174a482e2063f80f34[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 21 16:54:18 2014 +0200

    netflow-json: initial version
    
    Initial version of netflow module, a flow logger that logs each
    direction in a completely separate record (line).

[33mcommit 07b7f66f3ccc3ab7627769c872fdbc3bfb179f57[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 21 15:37:10 2014 +0200

    flow-log: log TCP flags per direction
    
    In addition to flags for the entire session, also log out TCP flags
    for both directions separately.

[33mcommit 3bb0ccba9824f54c983a2058c1af69c15c43ad60[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 21 14:29:15 2014 +0200

    stream: track TCP flags per stream direction
    
    For netflow logging track TCP flags per stream direction. As the struct
    had no more space left without expanding it, the flags and wscale
    fields are now compressed.

[33mcommit d19a15701c996dce47ecf72d1aa90db701dc86da[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 9 14:56:55 2014 +0200

    flow: init logger thread data for decoders
    
    Initialize the output flow api thread data for the decoder threads.

[33mcommit 98c88d5170ab08facc8de12ce78c6eb6be681296[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 9 15:10:54 2014 +0200

    decode: pass ThreadVars to DecodeThreadVarsFree
    
    Flow output thread data deinit function which will be called from
    DecodeThreadVarsFree will need it.

[33mcommit de034f186745ee6ef1b53cf34e28a9a8c0403ac6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 9 14:37:07 2014 +0200

    flow: prepare flow forced reuse logging
    
    Most flows are marked for clean up by the flow manager, which then
    passes them to the recycler. The recycler logs and cleans up. However,
    under resource stress conditions, the packet threads can recycle
    existing flow directly. So here the recycler has no role to play, as
    the flow is immediately used.
    
    For this reason, the packet threads need to be able to invoke the
    flow logger directly.
    
    The flow logging thread ctx will stored in the DecodeThreadVars
    stucture. Therefore, this patch makes the DecodeThreadVars an argument
    to FlowHandlePacket.

[33mcommit bd490736c2fc673e3c88ffe256aa43a89d941b48[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 7 09:16:46 2014 +0200

    flow: take flow pkt & byte count out of debug
    
    Until now the flow packet and byte counters were only available in
    DEBUG mode. For logging purposes they are now available always.

[33mcommit e6ee5feaba02639b3f93bc2931d6878503899d14[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 6 20:48:47 2014 +0200

    flow: don't BUG_ON if no loggers are enabled
    
    API is always called, even if no loggers are enabled. Don't abort()
    in this case.

[33mcommit 52b0ec027ef39fb2ed8d3353d23cc7f491640d9b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 6 20:37:41 2014 +0200

    flow: clean up recycle queue at shutdown
    
    Mostly for tests that don't start the recycler thread, make sure
    all flows are cleaned up.

[33mcommit 4aff4c650ffac6f3700cfa62349ea3d672c9dbd4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 6 13:47:18 2014 +0200

    flow unittest: update flow manager unit test
    
    Test now tests a different queue.

[33mcommit 7acea2c66d4933847021b188e994915a762c4556[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 6 12:15:39 2014 +0200

    flow: track lastts in struct timeval
    
    Track full timestamp for lastts in flows to be able to log it.

[33mcommit c66a29b67d07420d28e08dd2ad6e352793736fde[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 6 11:54:28 2014 +0200

    flow: track bytes per direction
    
    Track bytes in both flow directions for logging purposes.

[33mcommit f828793f8f6f3dfeee5c320e8c000ef27ddc72d2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 6 10:11:49 2014 +0200

    flow log: log start/end times
    
    Log time of first packet (flow creation) and of the last packet.

[33mcommit 672f6523a71b199778986adffddf5e7b1005aacb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 2 09:54:16 2014 +0200

    flow-log: log TCP flags seen
    
    Log TCP flags seen during the life time of a flow/session.

[33mcommit fddeca8aae7242ed6066959b3b1afcd829fa1690[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 2 09:45:01 2014 +0200

    tcp: track TCP packet flags per session
    
    For logging out in flow logging.

[33mcommit ec7d446f16fefdb609b0f79478eeed4099a7c813[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 2 08:25:22 2014 +0200

    flow-log: log pkts, bytes
    
    Only in DEBUG currently.

[33mcommit 3c7af020673da35b9baf1a7fa4020710ca7539bb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 1 17:31:31 2014 +0200

    flow-json-log: stub
    
    Stub for JSON flow logger.

[33mcommit c7ebfd1b68f839ab6ec79a832587433f747ebe0d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 1 17:30:32 2014 +0200

    flow: flow log threading setup
    
    Set up threading for the flow logger.

[33mcommit e30c083cffee57b34465fabd0c91762997694e5b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 1 14:18:59 2014 +0200

    flow log: call logger from recycler
    
    Call the flow logger API from the recycler thread, so that timed
    out flows are logged.

[33mcommit 115ad1e81f8a765c05117b35052d6cce884469b1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 1 13:31:10 2014 +0200

    flow: output api stub
    
    Basic output API for flow logging.

[33mcommit a52a4ae9d480a504dd1373e96f0fa1cc41ad3fb2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 1 12:50:02 2014 +0200

    flow recycler: unix socket support
    
    Support starting and shutting down the flow recycler thread in the
    unix socket runmode.

[33mcommit f476732139917ca6400370974a56dba7226a3a79[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 30 18:49:39 2014 +0200

    flow recycler: shutdown
    
    Only shut down when all flows in the recycle queue have been processed.

[33mcommit f26f82e9a601c956556576f7921d1874abf9eb72[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 30 13:57:17 2014 +0200

    flow: move flow cleanup to new 'recycler'
    
    Move Flow clean up from the flow manager to the new flow recycler.

[33mcommit 94cb52897b27b8a5d4de9ae878cd72f8f52dbcd1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 30 13:37:30 2014 +0200

    flow: introduce FlowRecycler stub
    
    FlowRecycler thread stub. Start/stop code.

[33mcommit e892d99827be4422dbd3c42847551eeafac80240[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 30 12:30:30 2014 +0200

    flow: new flow queue: flow_recycle_q
    
    This queue will be used by the FlowManager to pass timed out flows
    to another thread that will do the actual cleanup.

[33mcommit fdd407751e3ebfdd17750ff414dd6fa2f7ce9a9f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 28 09:27:17 2014 +0200

    Fix eve 'filetype' parsing
    
    Now that we use 'filetype' instead of 'type', we should also
    use 'regular' instead of 'file'.
    
    Added fallback to make sure we stay compatible to old configs.

[33mcommit bfb6175bf62513c18c738f65ae686c8dcc53130b[m
Author: Alexander Gozman <a.gozman@securitycode.ru>
Date:   Sat Jul 19 00:02:19 2014 +0400

    Fixed memory leak

[33mcommit a0bb4477db15c2820affa003ab80f2e8396ec33c[m
Author: Alexander Gozman <a.gozman@securitycode.ru>
Date:   Fri Jul 18 20:36:12 2014 +0400

    Fix possible crash when logfile descriptor is invalid

[33mcommit 8048eebd393269f8523c919497a8703d9cae5b51[m
Author: Alexander Gozman <a.gozman@securitycode.ru>
Date:   Fri Jul 18 20:34:23 2014 +0400

    Fix handling filetype for eve log

[33mcommit 54193e89d5699680a92e6ad815fec9b0d7adf62a[m
Author: Alexander Gozman <a.gozman@securitycode.ru>
Date:   Fri Jul 18 13:38:03 2014 +0400

    Fixed variables names in suricata.yaml.in Changed logging logic - now it's possible to enable different payload dumping modes separately Fixed bug in dumping packet without stream segments Fixed indents

[33mcommit 6d569013c62395371c68ff34351786beaffd31c1[m
Author: Alexander Gozman <a.gozman@securitycode.ru>
Date:   Fri Jul 4 18:19:33 2014 +0400

    Changed attribute name for printable payload

[33mcommit c770ade9c2ddf92da832dcb43b189b08c237564e[m
Author: Alexander Gozman <goal81@gmail.com>
Date:   Tue Jun 17 16:18:23 2014 +0400

    Changed variable name when dumping single packet

[33mcommit 2a4c7ee5dc3d16a6cb03fe8e3b59101b8bee7fbb[m
Author: Alexander Gozman <goal81@gmail.com>
Date:   Tue Jun 17 15:41:14 2014 +0400

    Add ability to encode payload in Base64

[33mcommit ffac6b71e2757f353713b6beb583f91f8eb8d2bf[m
Author: Alexander Gozman <goal81@gmail.com>
Date:   Mon Jun 16 20:53:20 2014 +0400

    Fixed stream handling Fixed some coding style issues

[33mcommit ab58ee2676b8083d791f2e9e75c940e73e51a479[m
Author: Matt Carothers <Matt.Carothers@cox.com>
Date:   Thu Apr 3 13:58:57 2014 -0400

    Add packet and payload logging to JSON alert output

[33mcommit c53b4280795088a50e26c216ea023d13822b33f5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 25 17:41:34 2014 +0200

    Fix engine getting stuck because of optimizations
    
    At -O1+ in both Gcc and Clang, PacketPoolWait would optimize the
    wait loop in the wrong way. Adding a compiler barrier to prevent
    this optimization issue.

[33mcommit c4a8e2cd140cf08f1ffbe3a66f2a8b527e1a7c98[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 25 13:45:00 2014 +0200

    Remove unused variables

[33mcommit 1d9278bef42b68bcf1530ad48bde8ba7a0d7ebfe[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 25 13:50:38 2014 +0200

    Fix packet pool pending stack adds
    
    Add packets after the first as the list/stack head as well.

[33mcommit b5d3b7e92ad1e712950eba5aa822df6d691e6af5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 25 13:47:59 2014 +0200

    Fix pcap packet acquisition methods
    
    Fix pcap packet acquisition methods passing 0 to pcap_dispatch.
    Previously they passed the packet pool size, but the packet_q_len
    variable was now hardcoded at 0.
    
    This patch sets packet_q_len to 64. If packet pool is empty, we fall
    back to direct alloc. As the pcap_dispatch function is only called
    when packet pool is not empty, we alloc at most 63 packets.

[33mcommit 0dd16461cf120238dbcb76ea3e405676ccb60b46[m
Author: Ken Steele <ken@tilera.com>
Date:   Wed Jul 9 10:53:34 2014 -0400

    Update max-pending-packet comments to show it is now per-thread.
    
    Updated suricata.yaml and comments in the code.

[33mcommit 28ccea51d36a38bec124cc44b0e011621619d05d[m
Author: Ken Steele <ken@tilera.com>
Date:   Wed Jul 2 10:42:05 2014 -0400

    Add error checking for pthread_setspecific() and pthread_key_create().

[33mcommit b1a7e76ca7186007db73d49562d92249bc91ac93[m
Author: Ken Steele <ken@tilera.com>
Date:   Wed Jul 2 09:57:31 2014 -0400

    Use posix_memalign instead of mm_malloc on non-Windows systems.

[33mcommit a38d5a0135e877edc8c618b5e38c70a00f33aede[m
Author: Ken Steele <ken@tilera.com>
Date:   Tue Jul 1 17:10:00 2014 -0400

    Implement thread specific data option when __thread is not available.

[33mcommit be448aef22f51a80f725a41624093e6e0f365387[m
Author: Ken Steele <ken@tilera.com>
Date:   Mon Jun 30 15:12:38 2014 -0400

    For PktPool add local pending freed packets list.
    
    Better handle the autofp case where one thread allocates the majority
    of the packets and other threads free those packets.
    
    Add a list of locally pending packets. The first packet freed goes on the
    pending list, then subsequent freed packets for the same Packet Pool are
    added to this list until it hits a fixed number of packets, then the
    entire list of packets is pushed onto the pool's return stack. If a freed
    packet is not for the pending pool, it is freed immediately to its pool's
    return stack, as before.
    
    For the autofp case, since there is only one Packet Pool doing all the
    allocation, every other thread will keep a list of pending packets for
    that pool.
    
    For the worker run mode, most packets are allocated and freed locally. For
    the case where packets are being returned to a remote pool, a pending list
    will be kept for one of those other threads, all others are returned as before.
    
    Which remote pool for which to keep a pending list is changed each time the
    pending list is returned. Since the return pending pool is cleared when it is
    freed, then next packet to be freed chooses the new pending pool.

[33mcommit 3c6e01f653225de320e96f2138204a9e62a5f3d7[m
Author: Ken Steele <ken@tilera.com>
Date:   Fri Mar 28 14:51:25 2014 -0400

    Replace ringbuffer in Packet Pool with a stack for better cache locality
    
    Using a stack for free Packet storage causes recently freed Packets to be
    reused quickly, while there is more likelihood of the data still being in
    cache.
    
    The new structure has a per-thread private stack for allocating Packets
    which does not need any locking. Since Packets can be freed by any thread,
    there is a second stack (return stack) for freeing packets by other threads.
    The return stack is protected by a mutex. Packets are moved from the return
    stack to the private stack when the private stack is empty.
    
    Returning packets back to their "home" stack keeps the stacks from getting out
    of balance.
    
    The PacketPoolInit() function is now called by each thread that will be
    allocating packets. Each thread allocates max_pending_packets, which is a
    change from before, where that was the total number of packets across all
    threads.

[33mcommit 94571c5dd28858ff68c44b648fd41c5d87c0e28d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 10 10:51:32 2014 +0200

    AC: shrink output table after initialization

[33mcommit 04c9db398e4ff1ccac0bbf9a5ce3f62ffe935794[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 4 09:02:20 2014 +0200

    AC: reduce realloc for new states
    
    Don't realloc per state add, but grow by larger blocks per realloc.

[33mcommit ba1e2ed69db37b6a0c7f036589af93e8b412108e[m
Author: Ken Steele <ken@tilera.com>
Date:   Fri Jul 18 12:14:06 2014 -0400

    Fix Boyer Moore Nocase bug where BoyerMooreCtxToNocase was missing.
    
    Whenever DETECT_CONTENT_NOCASE is set for a BoyerMoore matcher, the
    function BoyerMooreCtxToNocase() must be called. This call was missing
    in AppLayerProtoDetectPMRegisterPattern().
    
    Also created BoyerMooreNocaseCtxInit() that calls BoyerMooreCtxToNocase()
    to make some code cleaner and safer.

[33mcommit 967f7aefde878746316ce2c2b995d4215d4179ff[m
Author: Ken Steele <ken@tilera.com>
Date:   Fri Jul 11 11:17:13 2014 -0400

    Store Boyer Moore no case strings in lower case.
    
    Rather than converting the search string to lower case while searching,
    convert it to lowercase during initialization.
    
    Changes the Boyer Moore search API for take BmCtx
    
    Change the API for BoyerMoore to take a BmCtx rather than the two parts that
    are stored in the context. Which is how it is mostly used. This enforces
    always calling BoyerMooreCtxToNocase() to convert to no-case.
    
    Use CtxInit and CtxDeinit functions to create and destroy the context,
    even in unit tests.

[33mcommit 54214d12519c142c741e54c622c7dc64fc54a22e[m
Author: Ken Steele <ken@tilera.com>
Date:   Tue Jun 24 10:05:03 2014 -0400

    Fix comment wording in Boyer Moore pattern matcher.

[33mcommit de6dac004331412b28ab55508b9a55ff5728c859[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Jun 14 12:16:17 2014 +0200

    Remove pcapinfo output
    
    EVE logging is a really good substitute for pcapinfo. Suriwire is
    now supporting EVE output so it is not anymore necessary to have
    pcapinfo in Suricata.

[33mcommit 9ec23bd59302b296868fd7b72c5f550713f5d62e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 10 11:22:15 2014 +0200

    pcap log: document multi option
    
    Add yaml documentation for new 'multi' option.

[33mcommit be1979b2f9df6c7b470906f7275864a9f97bfde2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 6 16:05:11 2014 +0200

    pcap-log: support dynamic file names in multi
    
    When using multi mode, the filename can use a few variables:
    
    %n -- thread number, where the 1st thread has 1, and it increments
    %i -- thread id (system thread id, similar to pid)
    %t -- timestamp, where seconds or seconds+usecs depends on
          the ts-format option.
    
    Example:
    filename: filename: pcaps/%n/pcap.%t
    This will translate to: pcaps/3/pcap.1256792217 for the 3rd thread.
    
    Note that while it's possible to use directories, they won't be
    created. So make sure they exist.

[33mcommit 6cebe7ef7bafc3fd7b6580f86be831935cd4b906[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 25 17:04:24 2014 +0100

    pcap-log: performance optimizations
    
    This patch adds a field 'is_private' to PcapLogData, so that the
    using thread knows if it needs to lock access to it or not.
    
    Reshuffle PcapLogData to roughly match order of access.

[33mcommit 923341fa058388275aad7399952c40d2ab2fc884[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 25 14:43:33 2014 +0100

    pcap-log: implement multi mode
    
    This patch implements a new mode in pcap-logging: 'multi'. It stores
    a pcap file per logger thread, instead of just one file globally.
    
    This removes lock contention, so it brings a lot more performance.
    
    The trade off is that there are now mulitple files where there would
    be one before.
    
    Files have a thread id added to their name: base_name.tid.ts, so by
    we have something like: "log.pcap.20057.1254500095".

[33mcommit 4922cd2d3699a2dcb472adee7569894105f14083[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 25 11:59:05 2014 +0100

    pcap-log: introduce PcapLogThreadData
    
    PcapLog uses the global data structure PcapLogData as thread data
    as well. This is possible because all operations on it are locked.
    
    This patch introduces PcapLogThreadData. It contains a pointer to
    the PcapLogData. Currently to the global instance, but in the future
    it may hold a thread-local instance of PcapLogData.

[33mcommit bbc8c1ea05fd73a85ddf70869861db09e26c4129[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 25 11:45:10 2014 +0100

    log-pcap: multi mode yaml parsing
    
    In preparation of the multi file mode, add 'multi' as a value to
    the mode.

[33mcommit cf4db4793160ad3d9fe10fda4b14ae0a9bb2048f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 25 10:43:23 2014 +0100

    log-pcap: lock profiling
    
    Add lock profiling to pcap logging profiling.

[33mcommit adde58d2cbbc67c5dee520d86bd2d206918822d6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 8 12:40:30 2014 +0100

    log-pcap: improve profiling
    
    Add profiling to a logfile. Default is $log_dir/pcaplog_stats.log
    
    The counters for open, close, rotate, write and handles are written
    to it, as well as:
    - total bytes written
    - cost per MiB
    - cost per GiB
    
    Option is disabled by default.

[33mcommit f6c5b1715fb1d65e243fe3c5dec202d27fc975dc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 7 13:56:09 2014 +0100

    Update log-pcap.h, add license
    
    Clean up log-pcap.h and add the OISF license header.

[33mcommit 1af2f6528b15c5392921347d0ebd69f994d07349[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 7 13:54:12 2014 +0100

    log-pcap code cleanups
    
    Code cleanups to make functions static.

[33mcommit fd7dd09f4cbbebc9f8cc8887e57c1d79233ce19d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 6 18:20:28 2014 +0100

    profiling: add pcap logger profiling
    
    Tracks: file open, file close, file rotate (which includes open and
    close), file write and open handles.
    
    Open handles measures the cost of open the libpcap handles.

[33mcommit ed84c8795ded13524574cc488281c3d1e69c2023[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 16 12:35:42 2014 +0200

    Update version number to 2.1dev

[33mcommit d258a11f0d3d5f8879ae30674e8ef9faf029061b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 10 16:18:48 2014 +0200

    autotools: enable silent mode
    
    Add check to make sure that if the functionality isn't available, we
    don't error out.

[33mcommit cba043da390b686afb603f654515c71271b33c2d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 16 12:29:05 2014 +0200

    Open 2.1 development in the master branch.

[33mcommit 2646edc129c7e6a6f9c820c9ecc01ce450e09a58[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 14 15:25:50 2014 +0200

    Profiling: fix compilation on CentOS5
    
    Bug #1207

[33mcommit f232fdc0c986c01d020ab15d2c663e384a6ec0d0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 14 14:46:07 2014 +0200

    htp: init memuse atomics
    
    In case of the spinlocked fallback code the lock was uninitialized.

[33mcommit f06e5f3c73d1d9ca9477749edfdfee7cb80f8c7f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 14 14:42:54 2014 +0200

    ethtool: add missing include necessary for CentOS5

[33mcommit 405baa3cb2e7864171e1568584d560e99521935c[m
Author: Alexander Gozman <goal81@gmail.com>
Date:   Fri Jun 13 20:36:54 2014 +0400

    Fix compile-time error on old kernels and ethtool.h

[33mcommit 546ae9737b710ccb712b70c80b5f14cc22563550[m
Author: sxhlinux <sxhlinux@163.com>
Date:   Thu Jul 10 22:09:13 2014 +0800

    Update log-file.c
    
    test whether tx_ud is NULL

[33mcommit 7ee2aa9c90d063bee0e58457947e8556614d6683[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 4 13:25:21 2014 +0200

    Add initial travis-ci integration.

[33mcommit 3beaa80aa2f07c9d288c61e42958f89bd37665c4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 2 16:35:41 2014 +0200

    Fix __thread configure check on Clang
    
    AC_TRY_COMPILE puts the code in a function already, and Clang didn't like
    the function within the function declaration. This lead to test failure.
    
    Clang now properly detects __thread support.

[33mcommit a9282ed7f79e3f3d051435694ed860ee0bc2c7a1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 1 11:11:08 2014 +0200

    valgrind/magic: add suppression for known issue
    
    Add suppression for Ubuntu 14.04 64bit.

[33mcommit f2e777e3a5fa5ee9d419b3fc2528b3f37e4696cd[m
Author: Ken Steele <ken@tilera.com>
Date:   Tue Jun 24 14:43:58 2014 -0400

    Fix lowercase table initialization (bug 1221)
    
    The for loop needed to check for < 256, not < 255.

[33mcommit 1419e400a17becf3bce7597256739f9e01cd9a0e[m[33m ([m[1;33mtag: suricata-2.0.2[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 25 15:29:18 2014 +0200

    Update Changelog for 2.0.2 release

[33mcommit 1177d48920ecc6f7fd9e68ae6a5f2a83d0230960[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 25 10:44:30 2014 +0200

    lua: fix liblua use on OS X with macports
    
    Set the correct lua pkg-config name used by macports.

[33mcommit 27eb0f450ab6218a7c7061fa772426483cb24ba6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 16 14:21:11 2014 +0200

    defrag: fix timeout setting when config is missing
    
    When the config is missing, DefragPolicyGetHostTimeout will default
    to returning -1. This will effectively set no timeout at all, leading
    to defrag trackers being freed too early.

[33mcommit 97ca02f0c5c90abe8bb2c0407090aef31d004c51[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jun 17 11:19:05 2014 +0200

    defrag: fix reconstruction
    
    This patch is fixing an issue in defragmentation code. The
    insertion of a fragment in the list of fragments is done with
    respect to the offset of the fragment. But the code was using
    the original offset of the fragment and not the one of the
    new reconstructed fragment (which can be different in the
    case of overlapping segment where the left part is trimmed).
    
    This case could lead to some evasion techniques by causing
    Suricata to analyse a different payload.

[33mcommit 09fd7060ec32d2930196d18778b56a0c66edf60c[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jun 20 18:11:29 2014 +0200

    unix socket: fix valgrind issue
    
    This patch fixes the following issue reported by valgrind:
     31 errors in context 1 of 1:
     Conditional jump or move depends on uninitialised value(s)
        at 0x8AB2F8: UnixSocketPcapFilesCheck (runmode-unix-socket.c:279)
        by 0x97725D: UnixCommandBackgroundTasks (unix-manager.c:368)
        by 0x97BC52: UnixManagerThread (unix-manager.c:884)
        by 0x6155F6D: start_thread (pthread_create.c:311)
        by 0x6E3A9CC: clone (clone.S:113)
    
    The running field in PcapCommand was not initialized.

[33mcommit a33d1e28e91c83dc505858aab3d249999b95e40d[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jun 20 17:46:47 2014 +0200

    unix-manager: fix crash when client disconnect
    
    This patch fixes an issue in unix socket handling. It is possible
    that a socket did disconnect when analysing a command and because
    the data treatment is done in a loop on clients this was leading
    to a update of the list of clients during the loop. So we need
    in fact to use TAILQ_FOREACH_SAFE instead of TAILQ_FOREACH.
    
    Reported-by: Luigi Sandon <luigi.sandon@gmail.com>
    Fix-suggested-by: Luigi Sandon <luigi.sandon@gmail.com>

[33mcommit 6ebc20f6d823fb0c2f349ba56b7784d9cf87b54a[m
Author: Ken Steele <ken@tilera.com>
Date:   Fri Jun 20 14:53:16 2014 -0400

    Rework Tile CPU affinity setting to handle non-contiguous sets of CPUs.
    
    It is possible to have a non-contiguous CPU set, which was not being
    handled correctly on the TILE architecture.
    
    Added a "rank" field in the ThreadVar to store the worker's rank separately
    from the cpu for this case.

[33mcommit 1f3fbbc9924a9510e204676ff4ad6a37aa12fcd0[m
Author: Mats Klepsland <mats.klepsland@gmail.com>
Date:   Mon Jun 23 09:14:16 2014 +0200

    Fix bug #1206
    
    PF_RING ZC uses clusters in the same way as PF_RING DNA. Therefore,
    this bug can be fixed as it was fixed for DNA (bug #598).

[33mcommit 896b61452c99b01cbcd7215d3732804431c93796[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 19 10:36:36 2014 +0200

    htp: make htp state handling function more robust
    
    Also, fix wrong cast that worked only by luck.

[33mcommit eff85aba5e8c5b1f50a6da678f38beb808c7c9e2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 17 13:56:47 2014 +0200

    http: remove BUG_ON(1) statement
    
    Remove BUG_ON(1) statement that was a leftover from debugging.
    
    Bug #1189
    Bug #1212

[33mcommit 13448aca1c294e6fb54475925171730f48220782[m
Author: Alessandro Guido <ag@alessandroguido.me>
Date:   Fri Jun 20 14:01:11 2014 +0200

    Fix issue #1214
    
    When applying wildcard thresholds (with sid = 0 and/or gid = 0) it's wrong
    to exit on the first signature already having an event filter. Indeed,
    doing so results in the theshold not being applied to all subsequent
    signatures. Change the code in order to skip signatures with event
    filters instead of breaking out of the loop.

[33mcommit f01027e972b7f889d841527a8c3267235cd1f00a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 12 11:54:31 2014 +0200

    Fix libcap-ng configure typo.

[33mcommit 9de536efdb204e1310dff6299ee43173696dc8a4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 10 17:31:28 2014 +0200

    Bug 1098: improve invalid pcre/R handling
    
    When not using a file_data or similar 'sticky buffer', a pcre/R option
    needs a content in the same buffer.

[33mcommit 8db3f214f093f81e75402fdf0cd8d2e05a7cdc3a[m
Author: Giuseppe Longo <giuseppelng@gmail.com>
Date:   Fri Jun 6 11:48:15 2014 +0200

    nflog: fix memory leaks
    
    This fixes the following memory leaks:
    
    [src/source-nflog.c:222]: (error) Memory leak: ntv
    [src/source-nflog.c:236]: (error) Memory leak: ntv
    [src/source-nflog.c:253]: (error) Memory leak: ntv
    [src/source-nflog.c:258]: (error) Memory leak: ntv

[33mcommit 43c5b949d2fb2620b20c617531829db26f671fb4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 4 18:01:52 2014 +0200

    cygwin: fix lua configure
    
    Fix lua configure for cygwin. Tested with lua 5.1.5.

[33mcommit cc54250cf9a87ffeed9c30b9f874386e6f34500d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 20 13:03:09 2014 +0200

    Fix live reload segv when startup isn't complete
    
    If a live reload signal was given before the engine was fully started
    up (e.g. pcap file thread waiting for a disk to spin up), a segv could
    occur.
    
    This patch only enables live reloads after the threads have been
    started up completely.

[33mcommit 2c20c9d409737b8be1ab75261662ba2a59c94497[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 4 17:11:29 2014 +0200

    Fix Coverity 1220098 and 1220099
    
    *** CID 1220098:  Missing unlock  (LOCK)
    /src/log-droplog.c: 195 in LogDropLogNetFilter()
    189         SCMutexLock(&dlt->file_ctx->fp_mutex);
    190
    191         if (dlt->file_ctx->rotation_flag) {
    192             dlt->file_ctx->rotation_flag  = 0;
    193             if (SCConfLogReopen(dlt->file_ctx) != 0) {
    194                 /* Rotation failed, error already logged. */
    >>>     CID 1220098:  Missing unlock  (LOCK)
    >>>     Returning without unlocking "dlt->file_ctx->fp_mutex".
    195                 return TM_ECODE_FAILED;
    196             }
    197         }
    198
    199         if (dlt->file_ctx == NULL) {
    200             return TM_ECODE_FAILED;
    
    *** CID 1220099:  Dereference before null check  (REVERSE_INULL)
    /src/log-droplog.c: 199 in LogDropLogNetFilter()
    193             if (SCConfLogReopen(dlt->file_ctx) != 0) {
    194                 /* Rotation failed, error already logged. */
    195                 return TM_ECODE_FAILED;
    196             }
    197         }
    198
    >>>     CID 1220099:  Dereference before null check  (REVERSE_INULL)
    >>>     Null-checking "dlt->file_ctx" suggests that it may be null, but it has already been dereferenced on all paths leading to the check.
    199         if (dlt->file_ctx == NULL) {
    200             return TM_ECODE_FAILED;
    201         }
    202
    203         char srcip[46] = "";
    204         char dstip[46] = "";

[33mcommit 8a77e6bc8e6677b2bdf7205891073b9bfb7055ef[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 4 16:54:56 2014 +0200

    Fix Coverity 1220097
    
    *** CID 1220097:  Missing unlock  (LOCK)
    /src/log-file.c: 160 in LogFileWriteJsonRecord()
    154             }
    155         }
    156
    157         /* Bail early if no file pointer to write to (in the unlikely
    158          * event file rotation failed. */
    159         if (aft->file_ctx->fp == NULL) {
    >>>     CID 1220097:  Missing unlock  (LOCK)
    >>>     Returning without unlocking "aft->file_ctx->fp_mutex".
    160             return;
    161         }
    162
    163         FILE *fp = aft->file_ctx->fp;
    164         char timebuf[64];
    165         AppProto alproto = FlowGetAppProtocol(p->flow);

[33mcommit fc2014ab40f1b533e51fdf262ca46bfa497e5e74[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Tue May 27 10:07:50 2014 -0600

    Unregister for file rotation notification when a context is
    de-initialized.  Required for unix-socket mode where
    contexts come and go.

[33mcommit e1b97fed70c6389ea22c56a0a8a436117c0a7754[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Tue Mar 4 10:43:36 2014 -0600

    Add signal based file rotation for:
    - alert debug log
    - fast log
    - stats log
    - dns log
    - drop log
    - file log
    - http log
    - tls log
    - eve/json log

[33mcommit 0a33e73417f48860ea8db9e08723dc5b7ccbfa35[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Tue Mar 4 10:42:19 2014 -0600

    Add macros for access to the underlying buffer and offset.
    Useful for using passing the buffer through to another writer
    such as LogFileCtx.

[33mcommit c1b6894ce3f6306844e9923ce2a9246e8f689756[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Tue Mar 4 10:40:10 2014 -0600

    Add a rotation flag to LogFileCtx which loggers can use to register
    for log rotation.  Have the LogFileCtx handle the log rotation.

[33mcommit 698a0f7f48e9163a6781aed5fa8be8a3fe65fcaa[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Tue Mar 4 10:34:33 2014 -0600

    Registration for SIGHUP notification - for loggers interested
    in file rotation on SIGHUP.

[33mcommit 25cbf36d40164c0b5c126d809e9010526ec99452[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 13 16:24:51 2014 +0100

    lua/luajit: use HAVE_LUA mostly
    
    Only use HAVE_LUAJIT if things are done differently from HAVE_LUA,
    like in the states pool.

[33mcommit 7396237c2afd69acdad9705cf291a624fc190d09[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 20 10:33:57 2014 +0100

    lua: deal with FreeBSD and OpenBSD
    
    FreeBSD pkg-config lua-5.1.pc, lib liblua-5.1.so
    OpenBSD pkg-config lua51.pc, lib liblua5.1.so
    
    Default (linux) pkg-config: lua5.1.pc, lib liblua5.1.so

[33mcommit e366c62cf02ef075a982560f405a212c651669f0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 13 15:10:10 2014 +0100

    lua: support regular lua C library
    
    Not all systems have luajit or a need for luajit. For low bandwidth
    and offline support regular lua may be sufficient.

[33mcommit a7118a4ff3c133364e1e5b48b913a97c485f30d5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 2 16:46:02 2014 +0200

    profiling: use wider columns in keyword output
    
    Use wider columns in keyword output so that even on high end sensors
    the stats tables remain readable.

[33mcommit e873443adb5ef0fb466933baaa0455eaf4f62e79[m
Author: Noam Meltzer <noam@hyperwise.com>
Date:   Thu May 8 09:26:43 2014 +0300

    fix regression in 'make distclean' due to commit cd305c3a
    
    the files under scripts/suricatasc/src are actual sources and should not
    be cleaned

[33mcommit dc1599e0dc2f457df9b2af06b43eb789ed04f0a5[m
Author: jeka <jeka@hyperwise.com>
Date:   Tue May 20 12:20:59 2014 +0300

    bugfix in debug mode:
    
    removed function calls from SCReturnX macros

[33mcommit 0765bcc73e42708e703b2aaded6324952d661f97[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 26 12:45:59 2014 +0200

    nflog: set socket timeout
    
    Set socket timeout so that we can exit if there is no traffic.
    
    It would hang after the SIGINT signal, until packets arived.

[33mcommit 26c091537586002d64c77f59750cd37b2441e892[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 26 12:40:50 2014 +0200

    nflog: warn if buffer-size is larger than max-size
    
    If buffer-size is larger than max size, give a warning and adjust
    buffer-size to max-size.

[33mcommit 462f9de1343857afaff86d8758d28d21ac72af1b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat May 24 18:48:18 2014 +0200

    dns: unify type to string logging utility
    
    Both DNS loggers had their own CreateTypeString. This patch unifies
    them.

[33mcommit 5e87257845bed63495089a0083094a25e6070a26[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat May 24 18:37:14 2014 +0200

    dns: add names for common types
    
    Add names for SRV, NAPTR, DS, RRSIG, NSEC, NSEC3 types.

[33mcommit 0bbec75764743bd0f76b26856854709f7399e578[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 23 12:42:48 2014 +0200

    nflog: fix typo rising->raising

[33mcommit 0857a60fcea10c4a947fefbd0059942b71dbf80d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 21 10:15:28 2014 +0200

    nflog: improve error handling on NOBUFS
    
    Don't fall through to handle_packet on any NOBUFS condition. Make
    sure we catch all NOBUFS.

[33mcommit 4d72911e17c8810f8e15a6778dae5a1fd24d9a3f[m
Author: Giuseppe Longo <giuseppelng@gmail.com>
Date:   Wed Feb 26 14:57:31 2014 +0100

    This patch adds the fields into PacketVars struct to setup a packet from a nflog message

[33mcommit 4dda018ededee36f97b0d35d6a9cb1e5ffbd5219[m
Author: Giuseppe Longo <giuseppelng@gmail.com>
Date:   Sat Feb 1 11:34:33 2014 +0100

    Adds nflog option

[33mcommit 0368d5e4a4d0fad81a40cf4122af09a902b5a91b[m
Author: Giuseppe Longo <giuseppelng@gmail.com>
Date:   Sat Feb 1 11:32:12 2014 +0100

    Declare a wrapper to parse group option for nflog

[33mcommit c35432b265ab99349c293e34b6cac66d271ebc67[m
Author: Giuseppe Longo <giuseppelng@gmail.com>
Date:   Wed Jan 1 22:04:54 2014 +0100

    Implements NFLOG runmode

[33mcommit 2ad8a8e111b1942345e6f72bc86b3e7e46625cc4[m
Author: Giuseppe Longo <giuseppelng@gmail.com>
Date:   Sun Dec 15 15:29:12 2013 +0100

    Bootstraping NFLOG capture mode

[33mcommit 0162e7e809da0ad5a065ac3d5734c919fb75c000[m
Author: Giuseppe Longo <giuseppelng@gmail.com>
Date:   Sat Dec 14 13:29:24 2013 +0100

    Adds nflog error code

[33mcommit d213d89981370c166beece9f329edbdd39edae2f[m
Author: Giuseppe Longo <giuseppelng@gmail.com>
Date:   Sat Dec 14 13:28:27 2013 +0100

    Updating the Tmm Id for declaration of nflog capture mode

[33mcommit 62aaae24fd8dd3edd2e2caa4444e0b40c529dff8[m
Author: Giuseppe Longo <giuseppelng@gmail.com>
Date:   Sat Dec 14 10:40:57 2013 +0100

    Adds a configuration example for nflog support in suricata.yaml

[33mcommit 4851568a41f833479de9dedea6fbe22b4cfdc386[m
Author: Giuseppe Longo <giuseppelng@gmail.com>
Date:   Tue Dec 10 13:19:25 2013 +0100

    Checks if libnetfilter_log is found on the system
    and enable it if it's specified.

[33mcommit db563ed4b0fae6ab799028f458ff76ceb0d410ef[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 2 14:20:13 2014 +0200

    tls: check SSL3/TLS version per record
    
    Set event if SSL3/TLS record isn't within the acceptable range.

[33mcommit 8ddcf6a816b965f340bb6bf71a26edcc243470eb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 15 14:01:54 2014 +0200

    dns: add tests for TXT response parsing
    
    Add valid and invalid examples.

[33mcommit bddb2c3bdcf7698075901200f0df3f984cff2e93[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 15 11:14:54 2014 +0200

    dns json: log TXT response data
    
    Log TXT data in the rdata field.

[33mcommit 683d2d64e961b9cef0433ac618bf1b099a7f9802[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 15 11:14:30 2014 +0200

    dns: parse and store TXT responses
    
    This way the TXT data can be logged by the loggers.
    
    Ticket #1158

[33mcommit 174a50554a1f76c1a38d370bdc08aa61f9ca5768[m[33m ([m[1;33mtag: suricata-2.0.1[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 21 10:26:59 2014 +0200

    Update Changelog for 2.0.1

[33mcommit 7e8f80b390c2d53c346309dd0f1cf4cbe75862ff[m[33m ([m[1;33mtag: suricata-2.0.1rc1[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 12 13:43:58 2014 +0200

    Update Changelog for 2.0.1rc1 changes

[33mcommit 8ba8c0bf6f11a3685074563334edf073691f5723[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 6 13:54:03 2014 +0200

    json output: don't set 'unknown' for missing data
    
    Instead of setting 'unknown' or '<unknown>' just pass NULL to json_*
    function, which results in omitting the data.

[33mcommit 11ca25ddcaa5491f51b25cfb39bb566dcd94e8a7[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Wed Apr 23 08:41:15 2014 -0700

    eve-log: swap ip/port pairs in dns answers

[33mcommit d4215fca84ca8ed2319309cf0f41e57c0badc7ff[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 2 17:11:10 2014 +0200

    http-json: fix coverity warning
    
    *** CID 1211009:  Bad bit shift operation  (BAD_SHIFT)
    /src/output-json-http.c: 265 in JsonHttpLogJSON()
    259         /* log custom fields if configured */
    260         if (http_ctx->fields != 0)
    261         {
    262             HttpField f;
    263             for (f = HTTP_FIELD_ACCEPT; f < HTTP_FIELD_SIZE; f++)
    264             {
    >>>     CID 1211009:  Bad bit shift operation  (BAD_SHIFT)
    >>>     In expression "1 << f", left shifting by more than 31 bits has undefined behavior.  The shift amount, "f", is as much as 46.
    265                 if ((http_ctx->fields & (1<<f)) != 0)
    266                 {
    267                     /* prevent logging a field twice if extended logging is
    268                        enabled */
    269                     if (((http_ctx->flags & LOG_HTTP_EXTENDED) == 0) ||
    270                         ((http_ctx->flags & LOG_HTTP_EXTENDED) !=
    
    ________________________________________________________________________________________________________
    *** CID 1211010:  Bad bit shift operation  (BAD_SHIFT)
    /src/output-json-http.c: 492 in OutputHttpLogInitSub()
    486                         {
    487                             if ((strcmp(http_fields[f].config_field,
    488                                        field->val) == 0) ||
    489                                 (strcasecmp(http_fields[f].htp_field,
    490                                             field->val) == 0))
    491                             {
    >>>     CID 1211010:  Bad bit shift operation  (BAD_SHIFT)
    >>>     In expression "1 << f", left shifting by more than 31 bits has undefined behavior.  The shift amount, "f", is as much as 46.
    492                                 http_ctx->fields |= (1<<f);
    493                                 break;
    494                             }
    495                         }
    496                     }
    497                 }

[33mcommit 5cdd9b460a49645b5a5015729b7decf709236974[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 2 16:32:49 2014 +0200

    unix-socket: reset logging api's properly
    
    Lack of proper reset lead to logs not being written after the first
    pcap had been processed.

[33mcommit fd56acd4b3b56c54b97d3715dbeae620a5b4b8a1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 24 17:31:08 2014 +0200

    stream: cleanup
    
    StreamTcpSetDisableRawReassemblyFlag() has the same effect as
    AppLayerParserTriggerRawStreamReassembly in that it will force the
    raw reassembly to flush out asap. So it is redundant to call both.

[33mcommit 3543150f42572742ed6554a90ff35e8abdf316a0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 24 10:48:37 2014 +0200

    stream: implement raw reassembly stop api
    
    Implement StreamTcpSetDisableRawReassemblyFlag() which stops raw
    reassembly for _NEW_ segments in a stream direction.
    
    It is used only by TLS/SSL now, to flag the streams as encrypted.
    Existing segments will still be reassembled and inspected, while
    new segments won't be. This allows for pattern based inspection
    of the TLS handshake.
    
    Like is the case with completely disabled 'raw' reassembly, the
    logic is that the segments are flagged as completed for 'raw' right
    away. So they are not considered in raw reassembly anymore.
    
    As no new segments will be considered, the chunk limit check will
    return true on the next call.

[33mcommit b2184f936e5b2a02b9e78acddd933b3a8a613df2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 24 10:02:21 2014 +0200

    stream: unify segment discard handling
    
    Have a single function StreamTcpReturnSegmentCheck determine if a
    segment is ready to be removed from the stream.
    
    Handle FLOW_NOPAYLOAD_INSPECT in raw reassembly.

[33mcommit ad355c3c0acf088adbf6e2a5f8916b33dd1c116a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 23 17:55:24 2014 +0200

    app-layer: improve no payload inspect flag
    
    If setting APP_LAYER_PARSER_NO_INSPECTION_PAYLOAD, trigger raw
    reassembly.

[33mcommit f0bdb009ed5e09b7d8f8b5358368460d99e69501[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 23 16:09:09 2014 +0200

    tls/heartbleed: fix test
    
    Now that we continue to track ssl/tls after the handshake, we need
    to fix tests that checked for the cutoff flags.

[33mcommit 31655aef7e313c8528c9c576ec465c429021884c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 23 15:53:25 2014 +0200

    tls/heartbleed: improve encrypted logic
    
    Don't assume that if the type field isn't 01 or 02 it's an encrypted
    heartbeat. Instead, use our knowledge of the SSL state.

[33mcommit fdbd9b3f25e38ddd8e4f07e794cc1d7c3fb2bb4f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 23 15:40:25 2014 +0200

    tls/heartbleed: formatting fixes

[33mcommit c5f43785f1a032508b7c0e7686c945f6bf9d90f0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 23 15:38:32 2014 +0200

    tls/heartbleed: add rule for invalid encrypted hb
    
    Add rule to tls-events.rules to match on the invalid encrypted
    heartbeat.

[33mcommit 26169ad8c5d096ebe2cdfad3d43ba3a284357103[m
Author: Will Metcalf <william.metcalf@gmail.com>
Date:   Tue Apr 22 11:11:32 2014 -0500

    Look for Mismatched Encrypted HB request and response sizes, along with multiple in-flight HB requests from the same direction

[33mcommit 0564a8da3c62d7ef264f7082040b3f5a68feea8a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 30 09:57:09 2014 +0200

    detect: add more defensive checks for flow handling
    
    Don't unconditionally deref f->alparser in detection through
    DeStateFlowHasInspectableState(). In very rare cases it can
    be NULL.

[33mcommit 2002067fb1c1a3bfcf1f3a69d3ec84cf950e1010[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 2 11:01:18 2014 +0200

    http-json: init 'fields' to 0 before setting it
    
    httplog_ctx->fields would not be initialized before setting flags in
    it:
    
    Scanbuild:
    output-json-http.c:491:46: warning: The left expression of the compound assignment is an uninitialized value. The computed value will also be garbage
                                http_ctx->fields |= (1<<f);
                                ~~~~~~~~~~~~~~~~ ^
    1 warning generated.
    
    Drmemory:
    ~~27874~~ Error #1: UNINITIALIZED READ: reading register eax
    ~~27874~~ # 0 JsonHttpLogJSON                       [/home/buildbot/qa/buildbot/donkey/drmemory/Suricata/src/output-json-http.c:260]
    ~~27874~~ # 1 JsonHttpLogger                        [/home/buildbot/qa/buildbot/donkey/drmemory/Suricata/src/output-json-http.c:375]
    
    Just memset the whole structure right after initialition.

[33mcommit 7df9b283f17244ab02c63f06352ad9a4f8ec2f09[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Wed Apr 23 18:08:18 2014 -0700

    json: address custom output capability to http eve log review comments

[33mcommit 4838b9bf4f17306eded26eeed0c568a420627a5d[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Wed Apr 16 16:59:43 2014 -0700

    json: add custom output capability to http eve log

[33mcommit 6fbb9551bd7a68cd659b2f28867977bd95add668[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Apr 23 12:23:33 2014 +0200

    doxygen: add source browser

[33mcommit 9abf5951220ac5e4e91555a9f384f16a8c2f272e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 23 11:00:02 2014 +0200

    rohash: fix potential bad shift
    
    Fix issue detected byCoverity:
    
    *** CID 1197756:  Bad bit shift operation  (BAD_SHIFT)
    /src/util-rohash.c: 74 in ROHashInit()
    68         }
    69         if (hash_bits < 4 || hash_bits > 32) {
    70             SCLogError(SC_ERR_HASH_TABLE_INIT, "invalid hash_bits setting, valid range is 4-32");
    71             return NULL;
    72         }
    73
    >>>     CID 1197756:  Bad bit shift operation  (BAD_SHIFT)
    >>>     In expression "1U << hash_bits", left shifting by more than 31 bits has undefined behavior.  The shift amount, "hash_bits", is as much as 32.
    74         uint32_t size = hashsize(hash_bits) * sizeof(ROHashTableOffsets);
    75
    76         ROHashTable *table = SCMalloc(sizeof(ROHashTable) + size);
    77         if (unlikely(table == NULL)) {
    78             SCLogError(SC_ERR_HASH_TABLE_INIT, "failed to alloc memory");
    79             return NULL;
    
    This was only a potential issue as ROHashInit was only called with
    hash_bits 16 in the code.
    
    Bug #1170.

[33mcommit 1992a22769e214f22d4af379b452c3e58c8fcebc[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Apr 23 11:21:11 2014 +0200

    af-packet: exit in case of a fatal error
    
    During socket creation all error cases were leading to suricata to
    retry the opening of capture. This patch updates this behavior to
    have fatal and recoverable error case. In case of a fatal error,
    suricata is leaving cleanly.

[33mcommit d28879f1a24625fadc96e00487bc931bf33b0e84[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Tue Apr 22 17:00:48 2014 -0600

    DAG: Pull some raw values out into defines.

[33mcommit 8ab962df7c085ac07292db87db0639ca78f6a628[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Tue Apr 22 16:21:51 2014 -0600

    DAG: Consistent code style.

[33mcommit c00ec5f4fc4cffb3976916ebd7c2651e9ecc1955[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Tue Apr 22 15:45:55 2014 -0600

    DAG: Sync dag packet and drop counts to live device on exit for better exit
    logging.

[33mcommit 4d6cc1dbc67eccda84d875a85e1295261ce9a26b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 22 17:47:54 2014 +0200

    json-file: improve error handling
    
    If the functions getting uri, etc fail. Return "unknown" instead of
    NULL pointer. This improves consistency.

[33mcommit 2d25f12cda60ebaf8448f79ff94ee84c2969b329[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 22 17:45:45 2014 +0200

    json-file: check pointer before using
    
    A check was missing to see if ht_ud was not null before using the
    pointer. This should be rare, but it can happen.
    
    Reported-by: Will Metcalf

[33mcommit d8481cb7cd344e4d729b35202b4cb83a1f887d8b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 22 17:14:10 2014 +0200

    stream: improve retransmission handling
    
    Improve retransmission handling in the CLOSE_WAIT state.
    
    Bug #1180.

[33mcommit 4929c840cd2657763b812fb3e72b23b3a41b9d77[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 16 18:10:22 2014 +0200

    stream: update GAP detection
    
    Change GAP detection logic. If we encounter missing data before
    last_ack, we know we have missed data. The receiving host has ack'd
    it already, so a retransmission of the missing data is highly
    unlikely.

[33mcommit 5db228b9f6ece9ace59b42431b68b641a495a3d1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 11 17:31:46 2014 +0200

    stream: fix raw reassembly flag issue
    
    AppLayer reassembly correctly only flags a segment as done when it's
    completely used in reassembly. Raw reassembly could flag a partially
    used segment as complete as well. In this case the segment could be
    discarded early. Further reassembly would miss data, leading to a
    gap. Due to this, up to 'window size' bytes worth of segments could
    remain in the session for a long time, leading to memory resource
    pressure.
    
    This patch sets the flag correctly.

[33mcommit 539bf57a651d2278f6160a291be74940a5f861e3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 11 17:26:47 2014 +0200

    stream: improve StreamTcpPruneSession
    
    Check if a segment is done for the app-layer using
    StreamTcpAppLayerSegmentProcessed instead of the flag directly so the
    gap case works better.

[33mcommit 3fa818d08731461e33779a48ac4657ac17bb68ea[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 11 17:24:12 2014 +0200

    stream: flags cleanup
    
    Stream flags are 16bit, but notation is still 8bit. Clean this up to
    avoid confusion.

[33mcommit 1bd189a07633aa92eb524c68c2873bfcef4e233e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 11 12:20:04 2014 +0200

    protocol detection: handle very unbalanced case
    
    Some traffic is very unbalanced. For example a 4 bytes request
    followed by 12mb of response data. If the 4 bytes don't lead to
    the protocol being detected, then app layer processing won't
    start, but it will not give up either. It will just wait for more
    data. This leads to piling up data on the opposite side.
    
    Observed:
    
    TS: 4 bytes. PP failed (bit set), PM has not given up (bit not set).
        This makes sense as max_depth is not yet reached.
    
    TC: 12mb. PP and PM failed (bits set).
    
    As ts-PM never gives up, we never consider proto detect complete,
    so all segments in either direction are still kept in the session.
    
    This patch adds a cutoff for this case:
    - IF for TS we have PP bit set, PM not set, AND
    - we have TC both bits set, AND
    - proto is unknown, AND
    - TC data is 100k already, THEN
    - give up on protocol detection.
    
    The same for the opposite direction.

[33mcommit ed46fd715d6e5a2a01441efd661221a5c000cf12[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 11 10:11:04 2014 +0200

    stream: improve midstream reassembly gap detection
    
    The reassembly gap detection makes use of the window. However, in
    midstream mode the window size we use is unreliable, as we have to
    assume window scaling is in place. This patch improves midstream
    handling of those cases.

[33mcommit 165f129c61c74d18deff78449636c5880e997bcc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 11 10:08:55 2014 +0200

    stream: detect data gap at stream start
    
    In midstream mode we may encounter a case where the data we is beyond
    the isn, but below last_ack. This means we're missing some data, that
    is already acked so it won't be retransmitted. Therefore, we can
    conclude it's a data gap.

[33mcommit 32aafa6a485ceeac5eb7773dcbbc932837bbca80[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 22 19:06:31 2014 +0100

    proto detect: add cutoff for unbalanced traffic
    
    If we're getting a lot of data in one direction and the proto for this
    direction is unknown, proto detect will hold up segments in the segment
    list in the stream. They are held so that if we detect the protocol on
    the opposing stream, we can still parse this side of the stream as well.
    However, some sessions are very unbalanced. FTP data channels, large
    PUT/POST request and many others, can lead to cases where we would have
    to store many megabytes worth of segments before we see the opposing
    stream. This leads to risks of resource starvation.
    
    In this patch, a cutoff point is enforced. If we've stored 100k in one
    direction and we've seen no data in the other direction, we give up.
    
    If we've given up, the applayer_proto_detection_skipped event is set.
        app-layer-event: applayer_proto_detection_skipped;

[33mcommit 44b8be3732b44f0d6d6ed807add7d78a556102c2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 10 17:59:18 2014 +0200

    protocol detection: midstream handling update
    
    If a TCP session is midstream, we may end up with a case where the
    start of an HTTP request is missing. We won't detect HTTP based on
    the request. However, the reply is fine, so we detect HTTP anyway.
    This leads to passing the incomplete request to the htp parser.
    
    This has been observed, where the http parser then saw many bogus
    requests in the incomplete data. This is not limited to HTTP.
    
    To counter this case, a midstream session MUST find it's protocol
    in the toserver direction. If not, we assume the start of the
    request/toserver is incomplete and no reliable detection and parsing
    is possible. So we give up.

[33mcommit c1dcc7a26889a5a17043dcac52725a5fa692de81[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 10 17:26:00 2014 +0200

    stream: fix midstream syn/ack setup
    
    If midstream is enabled and the first packet is the syn/ack packet from
    the 3whs, initialized server.last_ack to the packets seq.
    
    This fixes tracking the session.

[33mcommit 59ccd7b62da0b18fa9d95f13358e4658bc8dabc5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 21 19:38:22 2014 +0200

    byte-test: switch to pcre_copy_substring
    
    Fixes cppcheck:
    [src/detect-bytejump.c:360]: (error) Uninitialized variable: str_ptr
    [src/detect-bytejump.c:372]: (error) Uninitialized variable: str_ptr
    [src/detect-bytejump.c:375]: (error) Uninitialized variable: str_ptr
    
    Bug #1046.

[33mcommit 1de9256b18aba620fab00a5d39864ad1564c6d9c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 21 18:23:31 2014 +0200

    byte-extract: switch to pcre_copy_substring
    
    Fixes memory leaks (str_ptr was never freed).
    Fixes cppcheck warning:
        [src/detect-byte-extract.c:268]: (error) Uninitialized variable: str_ptr
    
    Bug #1046.

[33mcommit a25f532ce7d8270fc9474c91fe6c2dd289e1c77d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 18 20:25:22 2014 +0200

    dns: improve response name parsing
    
    Improve parsing of names with multiple pointers following each other.

[33mcommit 18c7eeefca86eaddfcdd8c19570582ac05c7fcbb[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Apr 10 13:11:34 2014 +0200

    packet handling: fix release function
    
    Extended data were freed before the release function was called.
    The result was that, in AF_PACKET IPS mode, the release function
    was only sending void data because it the content of the extended
    data is the content of the packet.
    
    This patch updates the code to have the freeing of extended data
    done in the cleaning function for a packet which is called by the
    release function. This improves consistency of the code and fixes
    the bug.

[33mcommit 3df904475c5de936645b8038a1fcec698676d0aa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 3 16:42:42 2014 +0200

    proto-detect: masks cleanup
    
    The direction specific masks were not used correctly. The toserver ones
    were only used for 'dp' registrations, the toclient ones only for 'sp'.
    
    The patch merges them.

[33mcommit 8252416c1013f77a2ee3ffb7703d7fbfdea5d483[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 3 13:55:22 2014 +0200

    proto-detect: update port logic
    
    If a flow matches both an 'sp' based PP registration and a 'dp' based,
    until now we would only check the 'dp' one. This patch changes that. It
    will inspect both.

[33mcommit eae5b1ba3513d25b5484f1be8a30dfc360fe92b6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 27 16:13:08 2014 +0100

    app-layer: proto detection update
    
    Instead of the notion of toserver and toclient protocol detection, use
    destination port and source port.
    
    Independent of the data direction, the flow's port settings will be used
    to find the correct probing parser, where we first try the dest port,
    and if that fails the source port.
    
    Update the configuration file format, where toserver is replaced by 'dp'
    and toclient by 'sp'. Toserver is intrepreted as 'dp' and toclient as
    'sp' for backwards compatibility.
    
    Example for dns:
    
        dns:
          # memcaps. Globally and per flow/state.
          #global-memcap: 16mb
          #state-memcap: 512kb
    
          # How many unreplied DNS requests are considered a flood.
          # If the limit is reached, app-layer-event:dns.flooded; will match.
          #request-flood: 500
    
          tcp:
            enabled: yes
            detection-ports:
              dp: 53
          udp:
            enabled: yes
            detection-ports:
              dp: 53
    
    Like before, progress of protocol detection is tracked per flow direction.
    
    Bug #1142.

[33mcommit 7b0f1e9512f638e5e78ce3267d75b726433e3397[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 16 12:55:09 2014 +0200

    stream: improve retransmission handling
    
    When connection are closing, don't reject retransmissions of data
    packets.
    
    Bug #1180.

[33mcommit 96adcf6829dcdadedea1f4f71bc44ccb5f30e8d5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 15 17:01:52 2014 +0200

    refactor IDS/IPS engine mode logic
    
    Instead of error phrone externs with macro's, use functions with a local
    static enum var instead.
    
    - EngineModeIsIPS(): in IPS mode
    - EngineModeIsIDS(): in IDS mode
    
    To set the modes:
    
    - EngineModeSetIDS(): IDS mode (default)
    - EngineModeSetIPS(): IPS mode
    
    Bug #1177.

[33mcommit 354a24e2ef4b3eeed4a72bc4a628a42ad1103add[m
Author: Ken Steele <ken@tilera.com>
Date:   Tue Apr 15 10:18:30 2014 -0400

    Fix unaligned load in AC-TILE MPM.
    
    The SLOAD define using __insn_ld2s_L2 is used to provide a compiler
    hint that the load will come from the L2 cache instead of the L1. It
    also specifies that it is a 2 byte signed load. For the Tiny MPM, that
    needs to be a 1-byte load, which is what is specified in util-ac-mpm-tile.c,
    but the #undef was removing that definition.

[33mcommit fc559ce227d4254840b5f1241d5408c52879ce8c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 15 12:39:22 2014 +0200

    detect: fix alstate handling
    
    Previously, the alstate use in the main detect loop was unsafe. The
    alstate pointer would be set duing a lock, but it would again be used
    after one or more lock/unlock cycles. If the data pointed to would
    disappear, a dangling pointer would be the result.
    
    Due to they way flows are cleaned up using reference counting and
    such, changes of this happening were very small. However, at least
    one path can lead to this situation. So it had to be fixed.

[33mcommit b6e2a6f5255cd98d98f9e5dceb934d1ad5b3e434[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 15 12:23:21 2014 +0200

    detect: locking update continued
    
    Make DeStateDetectContinueDetection get it's own alstate pointer instead
    of using the one that was passed to it. We now get and use it only
    inside a flow lock.

[33mcommit cf31e2cc74da5280b2be64f79db8e8f78acf18a6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 15 11:18:47 2014 +0200

    detect: locking update
    
    Make DeStateDetectStartDetection get it's own alstate pointer instead
    of using the one that was passed to it. We now get and use it only
    inside a flow lock.

[33mcommit 5e1bc99e5be467c918d3eeecd8863789ea52ce9c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 15 11:05:17 2014 +0200

    detect: cleanup
    
    Remove unused alstate and app layer flags arguments from
    DetectEngineInspectPacketPayload()

[33mcommit 6e0112d7378f4879e41448068e2366e05a3cefb3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 15 10:31:48 2014 +0200

    detect: modify AMATCH locking
    
    This is an intrusive change. This patch modifies the way AMATCH
    inspection uses locking.
    
    So far, each keyword did it's own locking. This lead to a situation
    where a 'alstate' pointer was passed around that was not always
    protected by a lock.
    
    This patch moves the locking to the Stateful detection functions.

[33mcommit 43b6cbd4bc76e423f9d52d63d5d4a60e864eedb3[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Apr 11 12:14:01 2014 +0200

    af-packet: fix error handling
    
    Only exit from synchronization loop on poll error and not in case
    of a timeout.

[33mcommit 6e77c4d1b41e0a4be65979ef6b2176bc67c66a4a[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Apr 10 11:05:46 2014 +0200

    util-ioctl: only get MTU when iface name is set
    
    This patch fixes a warning message when suricata is started without
    giving an interface name on the command line. The code was trying
    to get the MTU even if pcap_dev was not set.

[33mcommit 79c924af8ca2a84e35c90dc8807ce5e7e87e1661[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Apr 13 10:35:36 2014 +0200

    Fix 2 compiler warnings
    
    FreeBSD 10 32-bit with clang 3.3:
    
    log-tlslog.c:172:14: error: format specifies type 'long' but the argument has type 'time_t' (aka 'int') [-Werror,-Wformat]
                 p->ts.tv_sec,
                 ^~~~~~~~~~~~
    1 error generated.
    
    detect-engine-payload.c:508:27: warning: format specifies type 'long' but the argument has type 'time_t' (aka 'int') [-Wformat]
        printf("%ld.%06ld\n", tv_diff.tv_sec, (long int)tv_diff.tv_usec);
                ~~~           ^~~~~~~~~~~~~~
                %d
    1 warning generated.

[33mcommit 26778b8703a34ce5065395a307c582dbbc7cb152[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 10 09:45:21 2014 +0200

    output-api: cleanup handling
    
    Add output 'free list' that contains all the output ctx' that need
    cleanup at shutdown. It differs from the runmode output list in that
    it will also contain a 'parent' for the submodules that share the
    context of it's parent.

[33mcommit c27304451e30c67b6b370974c89948ab7e115b51[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 10 09:43:50 2014 +0200

    output api: complete shutdown functions
    
    Add missing function for Filedata API. Clean up list in all functions.

[33mcommit b2d29a85e90770a155763034e9873bd368b58fe3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 10 09:41:52 2014 +0200

    tls-json: add cleanup function
    
    Properly clean up output context when shutting down.

[33mcommit 34069054ce53adab5dc32747c31fb0a9e57682ca[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 10 09:40:42 2014 +0200

    drop-json: fix cleanup
    
    Use proper function for sub-module cleanup. LogFileCtx is not managed
    by the sub-module, so don't clean it.

[33mcommit bc1c06b9e4ab7687bcc269e52d0940cb730b53e2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 10 09:36:19 2014 +0200

    eve-log: fix mem leak at shutdown
    
    Make sure we free all memory in the shutdown function.

[33mcommit 90c4834709f6ca95d84428fb73460f37f0cbb787[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 10 09:08:53 2014 +0200

    ssh-json: add clean up functions
    
    Add clean up functions for the SSH json logger.

[33mcommit 3a6be9772f73f160bd0292fa5490de4511ba461f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 10 08:35:51 2014 +0200

    http-json: add missing cleanup functions
    
    Add cleanup functions.

[33mcommit 7ffd22713352d6c4b9bb019159f20fbbc3b436e1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 10 08:27:10 2014 +0200

    file-json: cleanup at shutdown
    
    Fix a memory leak at shutdown. Module didn't have a cleanup function.

[33mcommit 7ee3b456a3fa52ae0ec194f4fea2e3e40348979a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 10 08:25:22 2014 +0200

    dns-json: fix cleanup
    
    Use specialized cleanup function for sub-module case. Freeing the
    LogFileCtx is not the responsibility of a sub-module.

[33mcommit 1f2310bb342c5f1a6f28ecaca18ebf9707fc6c15[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 10 08:24:08 2014 +0200

    alert-json: fix cleanup
    
    Call specialized clean up function when running as a sub-module.

[33mcommit f62185c207c7c257ce9d95198bf92ebc6e24f407[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 10 08:20:57 2014 +0200

    log-tls: run Disable at shutdown
    
    Call OutputTlsLoggerDisable at cleanup.

[33mcommit f96a54535c2b063404f865e6f16a9c6a5b976c8e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 10 08:19:06 2014 +0200

    drop loggers: call disable func
    
    Call OutputDropLoggerDisable() on cleanup.

[33mcommit 9df045d086f9399eee25f63886c9fdaf84f10f66[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 10 08:13:38 2014 +0200

    output: add Disable funcs to mirror Enable
    
    For the loggers that we allow only one instance for: tls, ssh, drop, we
    track active loggers through Output*Enable functions. Add Disable
    functions to mirror this. They are to be called from the shutdown funcs
    those loggers use.

[33mcommit 4a104ae3154df3419107c2b46697432257b2c370[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 10 08:11:34 2014 +0200

    unified2: fix memory leak at shutdown
    
    Module didn't properly free output context at shutdown. Led to a leak
    in Unix Socket mode.

[33mcommit 9961520316bccaeee448dd20dae53496fa322d27[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Apr 9 15:04:45 2014 +0200

    output: clean file desc at exit.
    
    This is a beginning of implementation for bug #1660:
     https://redmine.openinfosecfoundation.org/issues/1160
    
    This patch adds a cleaning function for each logger of new type
    (packet, tx and file). These functions are called in RunModeShutDown().
    
    The state of this patch is that it is crashing suricata when sending
    pcap to analyse:
     - At first pcap if tx and file cleaning function are called
     - At second pcap if only packet cleaning function is called
    
    The cause in first case is unknown. In second case this is due to
    the necessity of cleaning the list of logger registered to a logging
    type.

[33mcommit d476c654eea7cfa47c31f1d0a9901c1759c2da5e[m
Author: Pierre Chifflier <pierre.chifflier@ssi.gouv.fr>
Date:   Wed Apr 9 09:52:00 2014 +0200

    TLS: add detection for malicious heartbeats (AKA heartbleed)
    
    The OpenSSL implementation of RFC 6520 (Heartbeat extension) does not
    check the payload length correctly, resulting in a copy of at most 64k
    of memory from the server (ref: CVE-2014-0160).
    This patch adds support for decoding heartbeat messages (if not
    encrypted), and checking several parts (type, length and padding).
    When an anomaly is detected, a TLS event is raised.

[33mcommit ab503873caa771ca2aa9e0c7e4c5fbc5a6498280[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 28 13:14:38 2014 +0100

    erf-file: clean up decode thread local storage
    
    Clean up the thread local data the decode portion of ERF users.
    
    Bug #978

[33mcommit 6da8652a7796d0013e7667d29674e0d617f09938[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 28 13:11:03 2014 +0100

    endace-dag: clean up decode thread local storage
    
    Clean up the thread local data the decode portion of DAG uses.
    
    Bug #978

[33mcommit 09ebbe08df005e1045b8d12ea67767f89bd3f564[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 28 13:07:43 2014 +0100

    mpipe: clean up decode thread local storage
    
    Clean up the thread local data the decode portion of mpipe uses.
    
    Bug #978

[33mcommit 8c16fede088f8c374118f3bf6d1c91a4348325c0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 28 13:05:40 2014 +0100

    ipfw: clean up decode thread local storage
    
    Clean up the thread local data the decode portion of ipfw uses.
    
    Bug #978

[33mcommit 10c791c937734cc447dc21d93608de9567a7665c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 28 13:02:31 2014 +0100

    napatech: clean up decode thread local storage
    
    Clean up the thread local data the decode portion of napatech uses.
    
    Bug #978

[33mcommit c3e193e7867ef1a045f8b3913b0e394a0a09e2a9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 28 12:17:41 2014 +0100

    pcap: clean up decode thread local storage
    
    Clean up the thread local data the decode portion of pcap uses.
    
    Bug #978

[33mcommit 900fc6fdc7d56a426bf60a8eaada45c83c5e2f7a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 28 12:14:04 2014 +0100

    pfring: clean up decode thread local storage
    
    Clean up the thread local data the decode portion of pfring uses.
    
    Bug #978

[33mcommit a8b1af3369ffd88a7373abcab45f1496916a932c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 28 12:05:23 2014 +0100

    nfq: clean up decode thread local storage
    
    Clean up the thread local data the decode portion of nfq uses.
    
    Bug #978

[33mcommit 2864f9eef97274f113bb92e91c844863e7d0f9d3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 28 12:01:12 2014 +0100

    af-packet: clean up decode thread local storage
    
    Clean up the thread local data of the decode part of afpacket.
    
    Bug #978

[33mcommit c8d2a1e41788641a1258474e5f75b997cd26b64f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 5 12:22:40 2014 +0100

    drmemory: remove bug 978 suppression
    
    Bug is fixed, so suppression is no longer needed.
    
    Bug #978.

[33mcommit bb2e9af40fb5a527a7c5160b9282441b4a4f18cb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 5 12:21:00 2014 +0100

    pcap-file: clean up decode thread local storage
    
    Clean up the thread local data the decode portion of pcap-file use.
    
    Bug #978.

[33mcommit d26ceb23562ee77777f64390900c27f1e50198be[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 5 12:18:57 2014 +0100

    decode: introduce DecodeThreadVarsFree
    
    As a mirror of DecodeThreadVarsAlloc, DecodeThreadVarsFree is used
    to free the memory that DecodeThreadVarsAlloc alloc'd, including
    AppLayer storage.

[33mcommit 552558894c274dd24248e132ffaa3baefbd76fb5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 5 12:17:20 2014 +0100

    app-layer: cleanups
    
    Clean up AppLayerParserThreadCtxAlloc and AppLayerParserThreadCtxFree.
    Both used confusing variables in loops, with the wrong types.

[33mcommit 7e268bd4d4684838559c80948ae2c9932e33eb82[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Wed Mar 26 09:51:27 2014 -0600

    Force pidfile creation of --pidfile.
    
    A pidfile can be useful when not in daemon mode, for example
    when running under a process supervisor.

[33mcommit 4085f0860250090d0341663c02aaad56f20979ca[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Tue Apr 1 18:03:28 2014 -0700

    json: somewhere along the way  IP/port pairs had gotten swapped in
    http and ssh eve logs

[33mcommit 0011e01e05ac6b140c98f2d432685a6024043f5c[m
Author: Ken Steele <ken@tilera.com>
Date:   Tue Mar 11 11:34:45 2014 -0400

    Change configure to allow statically linking libpcre.
    
    Statically linking libpcre requires using -lpthread, which is added
    when building Suricata, but not while checking for libpcre in configure.

[33mcommit b9227ad20c5b24775e58884739abfb8862af0024[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 8 16:10:09 2014 +0100

    tls: no event on 'new session ticket' in handshake
    
    Don't set an event on encountering a 'new session ticket' (4) record
    in the TLS handshake.

[33mcommit 1195f882b92e8f65f14d350bf4c36bcc867885a9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 8 14:35:56 2014 +0100

    ipv6: add support for PAD1
    
    Support PAD1 in IPv6 HOP options header and DST options header.

[33mcommit 7539372db799568a0c1a9048331059c2f9bcdf78[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 8 14:12:47 2014 +0100

    icmpv6: add multicast types
    
    Only add them to check if the code is 0 and to make sure the default
    case doesn't set an 'unknown type' event.

[33mcommit eb3a9d30769a366a015783dc1de4a2d32899aeb5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 12 22:52:00 2014 +0100

    TLS: register patterns for tls-alerts
    
    Register patterns for when server has an alert as the first message.

[33mcommit a96446d39e8731e7c8688d0ef92195c242b973e0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 12 15:08:27 2014 +0100

    detect state: fix indent
    
    AMATCH block was indented too far.

[33mcommit 6c8ca769420d95250cbe93fd08afa86d97495840[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 12 15:07:16 2014 +0100

    detect state: remove alproto check for AMATCH
    
    Not all AMATCHes set a alproto.

[33mcommit c9436a6aef1e79161dbaa13d8d3ead952158b4c6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 12 13:57:30 2014 +0100

    Fix app-layer-protocol FP on multi TX flow
    
    In case of multiple transactions, the stored AMATCH list would not have
    been reset, but it would still be reconsidered. Even though none would
    match, the engine would still conclude that the rule matched.

[33mcommit bc70fc0f793ffea24fa8c4fe94ea1b8e54c43b61[m[33m ([m[1;33mtag: suricata-2.0[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 25 09:46:44 2014 +0100

    Update Changelog for 2.0 release

[33mcommit 9e0355023033956f89b705592a15b237044cb534[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Mar 21 11:15:47 2014 +0100

    tls: fix problem with tls.store keyword
    
    Pierre Chifflier pointed out that a rule like:
     alert tls any any -> any any (msg:"TLS store"; tls.issuerdn:!"C=FR"; tls.store;)
    was alerting but not storing the certificate. If the filter was
    removed:
     alert tls any any -> any any (msg:"TLS store"; tls.store;)
    then tls.store is working as expected.
    
    This was linked with fact that logging is only done once for a SSL
    state. So without filter, once we have the info we can log and we
    run the storage. But when there is a filter, we log and then there
    is a filter analysis and alerting. And as logging as already be done
    we don't enter in the logging function and there is no storage.
    
    This patch forces the entrance in the log function when there is a
    request for TLS storage. And it adds an exit in the logging function
    to only do the storage part if the TLS state has already being logged.

[33mcommit 03091dfbda16a55defbe4bc05334013a29223bbc[m[33m ([m[1;33mtag: suricata-2.0rc3[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 18 13:10:27 2014 +0100

    Update Changelog for 2.0rc3 release

[33mcommit c07427c643bb4e62e61b06036c92440bf65494af[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 18 13:36:56 2014 +0100

    yaml: remove rbn, add tls
    
    Remove rbn rule files from default rule list. The files are empty
    causing a warning.
    
    Add tls-event.rules to the default list.

[33mcommit 806844d852641cc8ab7fcd5f47c493a5fbe6d18c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 18 10:46:30 2014 +0100

    af-packet: fix init sync with no traffic
    
    Previously the sync code would depend on traffic to complete. This
    patch adds poll support and can complete the setup if the poll timeout
    is reached as well.
    
    Part of bug #1130.

[33mcommit 238ff23111f78073c4ebefe9fc1de72ea54a74d3[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Mar 17 13:58:06 2014 +0100

    af-packet: move packet fanout code
    
    The sooner is the better for that caode as these means we will get
    all sockets binded to fanout group as fast as possible.

[33mcommit 919377d4a50c98bfe6bcf17729d831bb501e5018[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Mar 11 09:48:34 2014 +0100

    af-packet: synchronize reading start
    
    This patch is updating af-packet to discard packets that have been
    sent to a socket before all socket in a fanout group have been setup.
    Without this, there is no way to assure that all packets for a single
    flow will be treated by the same thread.
    
    Tests have been done on a system with an ixgbe network card. When using
    'cluster_flow' load balancing and disactivating receive hash on the iface:
     ethtool -K IFACE rxhash off
    then suricata is behaving as expected and all packets for a single flow
    are treated by the same thread.
    
    For some unknown reason, this is not the case when using cluster_cpu. It
    seems that in that case the load balancing is not perfect on the card side.
    
    The rxhash offloading has a direct impact on the cluster_flow load balancing
    because load balancing is done by using a generic hash key attached to
    each skb. This hash can be computed by the network card or can be
    computed by the kernel. In the xase of a ixgbe network card, it seems there
    is some issue with the hash key for TCP. This explains why it is necessary to
    remove the rxhash offloading to have a correct behavior. This could also
    explain why cluster_cpu is currently failing because the card is using the
    same hash key computation to do the RSS queues load balancing.

[33mcommit 70efc66e33cc84b57773d059ab27001b403fc419[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 14 09:50:16 2014 +0100

    fast-log: restore logging of Drop/wDrop
    
    Restore drop print logic. Probably got lost in large refactoring round
    introducing log APIs.
    
    Bug #1138.

[33mcommit 1af39d55cfae70bc112e75fb85c363d1c0d14280[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 13 17:09:28 2014 +0100

    detect: allow alias registration for rule keywords
    
    This allows for registering a keyword under another name while keeping
    the old name active and supported.
    
    Do this for 'luajit', which can now also be used as just 'lua'.

[33mcommit 010a334e1a349568ee1315544c80eb0b33da9285[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 4 14:41:45 2014 +0100

    json alert: fix action
    
    It would give 'Pass' as an action when the rule is set to 'alert'.

[33mcommit e04b5f0dcaa11bd4f9d630bf42f4f5fb999a7d54[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 12 09:31:34 2014 +0100

    eve-http: register with app-layer api
    
    The HTTP module of Eve didn't register itself with the app-layer
    for HTTP. This meant that if no other HTTP logger was active, the
    HTTP logging in Eve wouldn't work.
    
    This patch makes the HTTP Eve module register itself correctly.
    
    Bug #1133.

[33mcommit 5d96ea570fd1d3db92acb154e3642d0f9233b56c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 11 17:15:05 2014 +0100

    eve-file: set event_type to fileinfo
    
    To remain constistent with the other logs, set the event type to
    the same name as the structure containing the defails. In this
    case fileinfo.
    
    Part of bug #1127.

[33mcommit 305da0248d7ce6223e211b0bdefbdddc1f959c27[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 11 15:48:10 2014 +0100

    eve-files: file -> fileinfo
    
    Due to what appears to be an issue in logstash, the 'file' part of
    the file event types was masked by a field that logstash-forwarder
    added itself.
    
    Since logstash-forwarder is an important part of the logstash stack,
    this patch works around the issue by renaming our 'file' structure
    to 'fileinfo', thus resolving the naming conflict.
    
    Bug #1127

[33mcommit 3e7714aca2893dd4c26fcecc3bbbdf0bf466e3e4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 11 12:11:33 2014 +0100

    eve-http: print <unknown> like in eve-files
    
    When UA or Host are unknown, print <unknown> instead of <useragent
    unknown> or <hostname unknown>.
    
    Bug #1131.

[33mcommit c5041d35d57ae8b72f14660703972c1104eac0fc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 10 12:39:19 2014 +0100

    Fix live reload
    
    Fix memsets clearing out of bounds memory on live reload, causing
    crashes and corrupted backtraces.
    
    Bug #1128.

[33mcommit fdb1bd96680c1921aaed93d54f198a4e71435e7f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 10 08:54:40 2014 +0100

    pfring: call enable_ring after set_cluster
    
    Move pfring_enable_ring to the start of ReceivePfringLoop() so that
    it's guaranteed to be called after all threads have called
    pfring_set_cluster first.
    
    This is necessary because pfring will already make packets available
    to thread N, while thread N+1 is still registering itself. This leads
    to cases where the first packet(s) of a flow are processed by a
    different thread in Suricata than the later ones.
    
    This is a race condition only at start up. New flows after the pfring
    initialization is complete will not be influenced by this.
    
    Bug #1129.

[33mcommit 845cbcce90a1d5c2f92c7e9034b8166666298793[m[33m ([m[1;33mtag: suricata-2.0rc2[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 6 13:24:23 2014 +0100

    Update ChangeLog for 2.0rc2 release

[33mcommit 4436526a05907c97c0f64aa3bf2d551b4bfd22b7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 6 12:35:53 2014 +0100

    yaml: comment out example config
    
    Comment out htp settings that should only serve as an example.

[33mcommit 3fa4712ab6472c9e3316610eee77e128c05638ee[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 6 12:35:20 2014 +0100

    yaml: increase default memcaps
    
    Increase default flow and stream reassembly memcaps.

[33mcommit 60a79c822004813916d2fca43b88e701a8230de9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 6 12:34:22 2014 +0100

    eve-log: enable in default config
    
    In the default config, eve-log is now enabled by default. All loggers
    except 'drop' are enabled.

[33mcommit a3020b5306d0d49eb6c605a1b5b92035b0af7369[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 6 12:33:14 2014 +0100

    eve-log: output cleanup
    
    Suppress debug messages and print in a nicer way which modules are
    being enabled.

[33mcommit ed877c64d1780289c3d73690aea149914877a0bb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 5 10:43:30 2014 +0100

    Bug 611: fix for iponly
    
    Fix Bug 611 for ip-only rules as well. If 'alert ip' rule has ports,
    don't match on protocols that don't have ports. Like ICMP.
    
    Bug #611.

[33mcommit 6c3c234ca5583f420371bc706716e8ae1b0c5a61[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Mar 5 22:39:10 2014 +0100

    output-json: update timestamp format
    
    This patch updates the timestamp format used in eve loggin.
    It uses a ISO 8601 comptatible string. This allow tools parsing
    the output to easily detect adn/or use the timestamp.
    
    In the EVE JSON output, the value of the timestamp key has been
    changed to 'timestamp' (instead of 'time'). This allows tools
    like Splunk to detect the timestamp and use it without configuration.
    
    Logstash configuration is simple:
    
    input {
       file {
          path => [ "/usr/local/var/log/suricata/eve.json" ]
          codec =>   json
          type => "suricata-log"
       }
    }
    
    filter {
       if [type] == "suricata-log" {
          date {
            match => [ "timestamp", "ISO8601" ]
          }
       }
    }
    
    In splunk, auto detection of the fle format is failling and it seems
    you need to define a type to parse JSON in
    $SPLUNK_DIR/etc/system/local/props.conf:
    
    [suricata]
    KV_MODE = json
    NO_BINARY_CHECK = 1
    TRUNCATE = 0
    
    Then you can simply declare the log file in
    $SPLUNK_DIR/etc/system/local/inputs.conf:
    
    [monitor:///usr/local/var/log/suricata/eve.json]
    sourcetype = suricata
    
    In both cases the timestamp are correctly imported by
    the tools.

[33mcommit 1fa4233d67d068fd49155e9d153011a491125833[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Feb 4 16:33:30 2014 +0100

    pfring: get vlan id from header
    
    PF_RING is delivering the packet with VLAN header stripped. This
    patch updates the code to get the information from PF_RING extended
    header information.
    
    This patch uses the new function SCKernelVersionIsAtLeast to know
    that we've got a old kernel that do not strip the VLAN header from
    the message before sending it to userspace.

[33mcommit 0f70e8f2250cfb2309a06d5fb5c4963230a6ccdc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 6 08:57:35 2014 +0100

    OpenBSD: set correct magic path
    
    For all 5.x OpenBSDs it seems the magic path is:
        /usr/local/share/misc/magic.mgc

[33mcommit cf30adcedcff875ff547092f5b3efbdfadfeb048[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Mar 5 22:18:02 2014 +0100

    ipfw: fix build
    
    Buildbot reported:
     runmode-ipfw.c: In function 'RunModeIpsIPFWAuto':
     runmode-ipfw.c:85: error: implicit declaration of function 'LiveDeviceHasNoStats'

[33mcommit 606e19124b3417d3bf1faa3a72eeef844eda658e[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Mar 3 17:57:10 2014 +0100

    http: add info message about memcap
    
    Display a message about http memcap when it is set in config file.

[33mcommit f00703acc1b75a4e402c96995724f91fa6bda141[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 4 17:49:36 2014 +0100

    Fix False Positive of rules with ports on portless protocols
    
    In case of 'alert ip' rules that have ports, the port checks would
    be bypassed for non-port protocols, such as ICMP. This would lead to
    a rule matching: a false positive.
    
    This patch adds a check. If the rule has a port setting other than
    'any' and the protocol is not TCP, UDP or SCTP, then we rule won't
    match.
    
    Rules with 'alert ip' and ports are rare, so the impact should be
    minimal.
    
    Bug #611.

[33mcommit 00d2f2d627bfe3eb1245dda28033a459fb55de27[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 4 12:42:16 2014 +0100

    Fix BytesToString indexing array using wrong index
    
    This would lead to reading past the end of the buffer and also writing
    past the end of the newly allocated buffer.
    
    Bug #1121

[33mcommit 88e9c85e36fd4901b6ed1b56a552d37b93942c89[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 4 11:30:08 2014 +0100

    json output: fix vlan byte order in output
    
    VLAN functions/macros return vlan id in host byte order, so no need
    to convert them in output functions.

[33mcommit 872bb5664ec6bda9ff7e88a2b7ef0685f43e1cae[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 4 11:13:37 2014 +0100

    Fix null dereference in eve-log
    
    Eve-log would call GET_VLAN_ID on the packets vlan header if p->vlan_idx
    was bigger than 0. GET_VLAN_ID would then unconditionally dereference
    p->vlanh[0] or [1]. However, there are a number of cases in which these
    pointers are not set. Defrag pseudo packets, AF_PACKET and in the future
    PF_RING, do set the id's, but not the header pointers.
    
    This patch adds 2 new macro's which are wrappers around a function:
    
    VLAN_GET_ID1 and VLAN_GET_ID2 get the id's by calling DecodeVLANGetId.
    
    This function will return the correct id.
    
    Bug #1120.

[33mcommit 684d7875677a0f9ec4cf3bd71afe81bdfd6f3110[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 4 09:55:59 2014 +0100

    Coverity fix
    
    Coverity 992695, fix potential array index with negative int. Very unlikely
    case at rule keyword parsing stage.

[33mcommit ddf9b417d725e0f56df585cabb40a28cea85250f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 26 22:01:52 2014 +0100

    configure: simplify OpenBSD handling
    
    Treat all OpenBSD versions in the same way. No more -fgnu89-inline.

[33mcommit 1e21b9f5a9fa267ae66a1d120cb4a7f6120e67e0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 26 17:59:21 2014 +0100

    Disable emerging-icmp in default config
    
    The file has no active rules by default.

[33mcommit a7460955697734a1d13192fb4357c960f1c1965c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 26 17:58:01 2014 +0100

    make install-full: get correct version of ET
    
    Version 2.0.

[33mcommit f6bb867df8ee4ec0ac4a5379c645c78a12ef175b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Mar 2 11:57:13 2014 +0100

    ssh: fix scan-build warnings
    
    app-layer-ssh.c:165:5: warning: Value stored to 'input_len' is never read
        input_len -= 1;
        ^            ~
    1 warning generated.
    
    app-layer-ssh.c:160:5: warning: Value stored to 'input_len' is never read
        input_len -= 4;
        ^            ~
    1 warning generated.

[33mcommit 0967f0777c53db925279ecde6737b769d2d2fa3e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Mar 2 11:08:49 2014 +0100

    ssh: improve banner checking
    
    Don't use input_len as banner length. Instead, look for banner end
    to calculate banner length.
    
    Add test for banner buffering corner case.

[33mcommit 669b351dad25f48e26ad9e90c7a0416fdb9bf425[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Mar 2 10:27:43 2014 +0100

    ssh: fixes for minor scan-build warnings
    
    /usr/share/clang/scan-build/ccc-analyzer -DHAVE_CONFIG_H -I. -I..   -I./../libhtp/  -I/usr/include/nspr   -I/usr/include/nss -I/usr/include/nspr   -DLOCAL_STATE_DIR=\"/usr/local/var\" -g -O2 -Wall -Wno-unused-parameter -std=gnu99 -DHAVE_LIBNET11 -D_BSD_SOURCE -D__BSD_SOURCE -D__FAVOR_BSD -DHAVE_NET_ETHERNET_H -DHAVE_LIBNET_ICMPV6_UNREACH  -I/usr/include -DLIBPCAP_VERSION_MAJOR=1 -DHAVE_PCAP_SET_BUFF -DHAVE_LIBCAP_NG -DREVISION="51e0dee" -MT app-layer-ssh.o -MD -MP -MF .deps/app-layer-ssh.Tpo -c -o app-layer-ssh.o app-layer-ssh.c
    app-layer-ssh.c:164:5: warning: Value stored to 'input' is never read
        input += 1;
        ^        ~
    app-layer-ssh.c:165:5: warning: Value stored to 'input_len' is never read
        input_len -= 1;
        ^            ~
    app-layer-ssh.c:212:13: warning: Value stored to 'ret' is never read
                ret = 0;
                ^     ~
    3 warnings generated.

[33mcommit b877cf6158f88efe024d154da2bd3cbc9d9f7fdf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 1 23:12:29 2014 +0100

    ssh: add json logger
    
    Sub module of eve-log, but can also run separately as ssh-json-log. Only
    one at a time though.

[33mcommit 65b228ccfd9ff0166b1ed6670a98ed67605dad6e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 1 22:23:18 2014 +0100

    ssh: improve large and fragmented banner handling
    
    Including tests.

[33mcommit b4aeb43af11efa9d8d4b2d514bf401de4068d6de[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 1 18:11:19 2014 +0100

    ssh: disable inspection in encrypted phase
    
    When both sides of the session have completed the encryption setup,
    flag the stream to disable detection.

[33mcommit 294ff49f6da9482481f0e71fc7076e50c2f8ae04[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 1 18:09:20 2014 +0100

    ssh: allow for space characters in the software version
    
    Previously the software version would only contain up to the first
    space.
    
    E.g. in SSH-2.0-OpenSSH_4.7p1 Debian-8ubuntu3
    
    It would contain "OpenSSH_4.7p1".
    
    This patch changes the behavior to:
    
    "OpenSSH_4.7p1 Debian-8ubuntu3"

[33mcommit b792234dd008462e1027a554394aa420a47ff344[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 1 17:32:27 2014 +0100

    ssh: clean up flags

[33mcommit b5afe2b51f80081fd191cb7496961d50eeee6d30[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 1 17:07:15 2014 +0100

    ssh: reenable ssh.protoversion keyword

[33mcommit 6c0162bf26ea2787e21854b753aeaade8a6e2097[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 1 16:59:26 2014 +0100

    ssh: reenable ssh.softwareversion keyword

[33mcommit 884cecd9af0c213e82e6f0d899fb6e668cea847c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 1 16:50:07 2014 +0100

    ssh: handle fragmented banner
    
    Cleanups.

[33mcommit 32fcdfe6eb854de65b4f77bbedff6dfd4e0ba8dc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 1 15:49:54 2014 +0100

    ssh: server support, cleanups

[33mcommit 3648adb5333099f3ea4c8eafa6940c9cb49ec6a3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 1 15:37:50 2014 +0100

    ssh: record parser

[33mcommit a3c9832b90de307cc0769c0cc178fecc7bd68a60[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 1 10:12:00 2014 +0100

    ssh: reenable parser as stub
    
    Reenable the SSH parser. It now compiles, however the actual parsing
    code is still disabled (commented out).

[33mcommit e00b5ca191dd798e2a298fec4af5c6edb03b3bc5[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jan 8 20:28:21 2014 +0100

    classification: add category to some stream rules
    
    All stream events signatures deserve a category.

[33mcommit 79de8c8f4bfeea721cf0c0fad684d00f2011b57c[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jan 8 15:55:58 2014 +0100

    runmode: remove unused variable.
    
    default_mode_auto is not used anymore and can be removed.

[33mcommit a6bb86a9e0b916947ba977cfe86c01c784419f8a[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Feb 26 11:13:33 2014 +0100

    Exit if BPF filter file is specified in IPS mode
    
    This patch adds a check that was missing when specifying BPF filter
    from a file. Suricata behavior should have been the same as when
    BPF filter is specified on command line.

[33mcommit 941cfe16419d3c4a9fd09610c012b6cc896e912c[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Feb 27 18:39:07 2014 +0100

    ipfw: fix operator error in test
    
    Fix warning spotted by clang on FreeBSD:
    
    source-ipfw.c:241:49: warning: use of logical '||' with constant operand [-Wconstant-logical-operand]
            if (suricata_ctl_flags & (SURICATA_STOP || SURICATA_KILL)) {
                                                    ^  ~~~~~~~~~~~~~
    source-ipfw.c:241:49: note: use '|' for a bitwise operation
            if (suricata_ctl_flags & (SURICATA_STOP || SURICATA_KILL)) {
                                                    ^~
                                                    |
    
    Use same logic as the one used in other capture mode.

[33mcommit 9f6527dc1687053f31abc2bb98afec6cbd07634b[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Feb 27 18:16:13 2014 +0100

    ipfw: improve exit message
    
    This patch synchronizes the exit message with what is done in
    NFQ capture mode.

[33mcommit 1c48a81f91dacc91761618792cbb3ef2d553e59a[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Feb 27 18:12:37 2014 +0100

    ipfw: update running modes to hide device stats
    
    This patch adds call to the function used to disable the display
    of live device stats at exit.

[33mcommit d8a305356ea32175b89578245d0ecdfb714e1616[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Feb 27 18:08:46 2014 +0100

    nfq: update message displayed at exit
    
    This patch updates the message displayed at exit to have something
    more readable.

[33mcommit 00c8408c5542c98b0802ad395883eb465859eb31[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Feb 27 18:07:34 2014 +0100

    nfq: update running modes to hide device stats
    
    This patch adds call to the function used to disable the display
    of live device stats at exit.

[33mcommit 6b2ca63d9d162082083889e01bf7fca619b61b50[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Feb 27 18:03:13 2014 +0100

    util-device: add function to avoid stat display
    
    In the case of running mode like NFQ there is no need possibility
    to compute the statistics as it is done in LiveDevice (drop and
    checksum count are meaningless).
    
    This patch adds a function that allow running mode to disable the
    display of the counters at exit.

[33mcommit a12c46c700ac8d8e52a58146247f0d98d744f683[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Feb 27 17:33:42 2014 +0100

    util-device: fix debug message
    
    Reference to Pcap was not correct.

[33mcommit 970f22c752b692e585ec0e05b964ce62372c05d1[m
Author: Ken Steele <ken@tilera.com>
Date:   Wed Feb 26 16:42:22 2014 -0500

    Move memcpy_lower() into new util-memcpy.h
    
    Remove local copies from each MPM file and use include file instead.
    Might be better to also add util-memcpy.c rather than inlining it each time,
    to get smaller code, since only seems to be used at initialization.

[33mcommit cd1c18d98194b5a0c249680f0eaa1bc3722bec92[m
Author: Ken Steele <ken@tilera.com>
Date:   Wed Feb 26 16:15:42 2014 -0500

    Store case-insensitive patterns as lowercase.
    
    This is required because SCMemcmpLowercase() expects it first argument
    to be already lowercase for the comparison. This is done by using
    memcpy_tolower() for NO_CASE patterns.
    
    This addresses code review comments from Victor.

[33mcommit 6b1517c0b83ca10c50be4dd6cc9076b1e62dddaa[m
Author: Ken Steele <ken@tilera.com>
Date:   Thu Feb 13 23:21:53 2014 -0500

    Remove case_state usage
    
    The case_state in MPMs was just to track when a pid could have no-case and
    case-sensitive matches for the same PID. Now that can't happen after fixing
    bug 1110, so remove the code and storage for case_state.

[33mcommit c41041a9c76f74ba99608391eb2e9b62143f6d32[m
Author: Ken Steele <ken@tilera.com>
Date:   Thu Feb 13 22:38:33 2014 -0500

    When assigning Pattern IDs pids, check Case flags
    
    This fixes bug 1110. When assigning PIDs, use the NO_CASE flag when comparing
    for duplicates. The state of the flag must be the same, but also use the same
    type of comparisons when checking for duplicates.
    
    Previously, "foo":CS would match with "foo":CI when it should not.
    and "foo":CI would not match "FoO":CI when it should. Both of those
    cases are fixed with this change.
    
    This then allows simplifying the use of pid in MPMs because now if they
    pids match, then so do the flags, so checking the flags is not required.

[33mcommit b7baa561c0637fea90a2c062922879b6d615cc4e[m
Author: Ken Steele <ken@tilera.com>
Date:   Wed Feb 12 15:23:44 2014 -0500

    Cleanup in ac-tile MPM
    
    Remove return from void functions.
    Add some commments
    Remove inline on functions where it doesn't make sense.
    Rewrote if statement to be more clear.

[33mcommit df927f7ea89b0652dd140bf2633422a76a00c9ab[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 27 14:31:46 2014 +0100

    unittest: fix mutex unlock w/o a lock
    
    Fixes an error in a test. SCMutexUnlock was called w/o a prior
    SCMutexLock.

[33mcommit 82ae41d320fac6739695ab7cc31cbc3f08dc1d25[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 27 13:23:45 2014 +0100

    pool: on Init() error, properly clean up
    
    In the stream engine, Init() can fail if the memcap is reached. In this
    case the segment was not freed by PoolGet:
    
    ==8600== Thread 1:
    ==8600== 70,480 bytes in 1,762 blocks are definitely lost in loss record 611 of 612
    ==8600==    at 0x4C2A2DB: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
    ==8600==    by 0x914CC8: TcpSegmentPoolAlloc (stream-tcp-reassemble.c:166)
    ==8600==    by 0xA0D315: PoolGet (util-pool.c:297)
    ==8600==    by 0x9302CD: StreamTcpGetSegment (stream-tcp-reassemble.c:3768)
    ==8600==    by 0x921FE8: StreamTcpReassembleHandleSegmentHandleData (stream-tcp-reassemble.c:1873)
    ==8600==    by 0x92EEDA: StreamTcpReassembleHandleSegment (stream-tcp-reassemble.c:3584)
    ==8600==    by 0x8D3BB1: HandleEstablishedPacketToServer (stream-tcp.c:1969)
    ==8600==    by 0x8D7F98: StreamTcpPacketStateEstablished (stream-tcp.c:2323)
    ==8600==    by 0x8F13B8: StreamTcpPacket (stream-tcp.c:4243)
    ==8600==    by 0x8F2537: StreamTcp (stream-tcp.c:4485)
    ==8600==    by 0x95DFBB: TmThreadsSlotVarRun (tm-threads.c:559)
    ==8600==    by 0x8BE60D: TmThreadsSlotProcessPkt (tm-threads.h:142)
    
    tcp.segment_memcap_drop   | PcapFile                  | 1762
    
    This patch fixes PoolGet to both Cleanup and Free the Alloc'd data in
    case Init fails.

[33mcommit fd6fd9ce4869c13141f3a0c36fa351687e29b5f3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 27 11:35:47 2014 +0100

    Fix memory leak in proto - name mapping
    
    ==15745== 3 bytes in 1 blocks are definitely lost in loss record 5 of 615
    ==15745==    at 0x4C2A2DB: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
    ==15745==    by 0x71858C1: strdup (strdup.c:42)
    ==15745==    by 0xA20814: SCProtoNameInit (util-proto-name.c:75)
    ==15745==    by 0x952D1B: PostConfLoadedSetup (suricata.c:1983)
    ==15745==    by 0x9537CD: main (suricata.c:2112)
    
    Also, clean up and add a check to make sure it's initialized only once.

[33mcommit bb4def7949e04322f5ae254683494b258f128cfa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 27 10:59:50 2014 +0100

    lua: fix minor memory leak
    
    The full path of the script names is stored in a buffer that wasn't
    freed at exit.
    
    ==24195== 41 bytes in 1 blocks are definitely lost in loss record 300 of 613
    ==24195==    at 0x4C2A2DB: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
    ==24195==    by 0x565D06: DetectLoadCompleteSigPath (detect.c:251)
    ==24195==    by 0x7CABE8: DetectLuajitParse (detect-luajit.c:595)
    ==24195==    by 0x7CD2AE: DetectLuajitSetup (detect-luajit.c:827)
    ==24195==    by 0x7DC273: SigParseOptions (detect-parse.c:547)
    ==24195==    by 0x7DDC75: SigParse (detect-parse.c:856)
    ==24195==    by 0x7E1C2B: SigInitHelper (detect-parse.c:1336)
    ==24195==    by 0x7E2968: SigInit (detect-parse.c:1559)
    ==24195==    by 0x7E37B1: DetectEngineAppendSig (detect-parse.c:1831)
    ==24195==    by 0x566D17: DetectLoadSigFile (detect.c:335)
    ==24195==    by 0x567636: SigLoadSignatures (detect.c:423)
    ==24195==    by 0x951A97: LoadSignatures (suricata.c:1816)
    
    This patch frees the buffer.

[33mcommit 9eed83c62b5446abcddd596d47d45f26230e77d2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 27 10:55:01 2014 +0100

    profiling: fix memory leak
    
    For packets that were freed, not recycled, profiling memory wasn't
    freed:
    
    ==15745== 13,312 bytes in 8 blocks are definitely lost in loss record 611 of 615
    ==15745==    at 0x4C2C494: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
    ==15745==    by 0xA190D5: SCProfilePacketStart (util-profiling.c:963)
    ==15745==    by 0x4E4345: PacketGetFromAlloc (decode.c:134)
    ==15745==    by 0x83FE75: FlowForceReassemblyPseudoPacketGet (flow-timeout.c:276)
    ==15745==    by 0x8413BF: FlowForceReassemblyForHash (flow-timeout.c:588)
    ==15745==    by 0x841897: FlowForceReassembly (flow-timeout.c:716)
    ==15745==    by 0x9540F6: main (suricata.c:2296)
    ==15745==
    ==15745== 14,976 bytes in 9 blocks are definitely lost in loss record 612 of 615
    ==15745==    at 0x4C2C494: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
    ==15745==    by 0xA190D5: SCProfilePacketStart (util-profiling.c:963)
    ==15745==    by 0x4E4345: PacketGetFromAlloc (decode.c:134)
    ==15745==    by 0x83FE75: FlowForceReassemblyPseudoPacketGet (flow-timeout.c:276)
    ==15745==    by 0x841508: FlowForceReassemblyForHash (flow-timeout.c:620)
    ==15745==    by 0x841897: FlowForceReassembly (flow-timeout.c:716)
    ==15745==    by 0x9540F6: main (suricata.c:2296)
    
    This patch addresses that.

[33mcommit 3f49eb843d68ddbfe09a3dacb304f9b27e748d20[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 7 11:56:23 2014 +0100

    lock profiling: fix memory leak
    
    If lock profiling was compiled in, but disabled in the config a
    serious memory leak condition was triggered.
    
    Valgrind output:
    
    ==11169== 9,091,248 bytes in 189,401 blocks are definitely lost in loss record 564 of 564
    ==11169==    at 0x4C2A2DB: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
    ==11169==    by 0xABC44C: LockRecordAdd (util-profiling-locks.c:112)
    ==11169==    by 0xABC950: SCProfilingAddPacketLocks (util-profiling-locks.c:141)
    ==11169==    by 0xA04CD5: TmThreadsSlotVarRun (tm-threads.c:562)
    ==11169==    by 0x958793: TmThreadsSlotProcessPkt (tm-threads.h:142)
    ==11169==    by 0x9599C3: PcapFileCallbackLoop (source-pcap-file.c:172)
    ==11169==    by 0x56FC130: ??? (in /usr/lib/x86_64-linux-gnu/libpcap.so.1.4.0)
    ==11169==    by 0x959D24: ReceivePcapFileLoop (source-pcap-file.c:210)
    ==11169==    by 0xA05B9E: TmThreadsSlotPktAcqLoop (tm-threads.c:703)
    ==11169==    by 0x6155F6D: start_thread (pthread_create.c:311)
    ==11169==    by 0x6E399CC: clone (clone.S:113)

[33mcommit 3ce39433dd3607aa86d473b0b8e3514061940954[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Feb 27 11:47:38 2014 +0100

    capture: use 64 bits counters
    
    Some of the packets counters were using a 32bit integer. Given the
    bandwidth that is often seen, this is not a good idea. This patch
    switches to 64bit counter.

[33mcommit 6630456a67f80af368a41137dc3e1025a9bfae8c[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Feb 27 11:41:07 2014 +0100

    af-packet: fix livedev packets counter
    
    Packets counter is incremented in AFPDumpCounters and it was
    also incremented during packet reading. The result was a value
    that is twice the expected result.
    
    Spotted-by: Victor Julien <victor@inliniac.net>

[33mcommit f9213d7cc67cacef6b234fb105a08806f7f394ad[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 26 15:18:26 2014 +0100

    stream-tcp: proper error if segment pool init fails
    
    Until now a PoolInit failure for the segment pools would result in
    an abort() through BUG_ON(). This patch adds a proper error message,
    then exits.
    
    Bug #1108.

[33mcommit 7e38347d995c401a375c8f6160566784465b7873[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 26 15:14:14 2014 +0100

    stream-tcp: fix error handling in segment pool
    
    When TcpSegmentPoolInit fails (e.g. because of a too low memcap),
    it would free the segment. However, the segment memory is managed
    by the Pool API, which would also free the same memory location.
    This patch fixes that.
    
    Also, memset the structure before any checks are done, as the segment
    memory is passed to TcpSegmentPoolCleanup in case of error as well.
    
    Bug #1108

[33mcommit 9442dce451d2ffa1d1e87e6c4a10990b1e02d0fe[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 26 12:41:15 2014 +0100

    commandline parsing: check optarg ptr before using it
    
    Fixes:
    ** CID 1075221:  Dereference after null check  (FORWARD_NULL)
    /src/suricata.c: 1344 in ParseCommandLine()
    
    The reason it gave this warning is that in other paths using optarg
    there was a check, so the checker assumed optarg can be NULL.

[33mcommit 9f2ce16ef369805f7ce03c4e33b2eb234220b681[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 26 12:21:24 2014 +0100

    icmpv6: Fix Coverity warnings on ND_* types
    
    This patch fixes:
    ** CID 1187544:  Missing break in switch  (MISSING_BREAK)
    /src/decode-icmpv6.c: 268 in DecodeICMPV6()
    
    ** CID 1187545:  Missing break in switch  (MISSING_BREAK)
    /src/decode-icmpv6.c: 270 in DecodeICMPV6()
    
    ** CID 1187546:  Missing break in switch  (MISSING_BREAK)
    /src/decode-icmpv6.c: 272 in DecodeICMPV6()
    
    ** CID 1187547:  Missing break in switch  (MISSING_BREAK)
    /src/decode-icmpv6.c: 274 in DecodeICMPV6()
    
    It duplicates the logic instead of adding 'fall through' statements
    as the debug statements were wrong and confusing. For ND_REDIRECT
    all 5 ND_* types would have been printed.

[33mcommit e381af98dd2fd1699e6c88bdee4dea00367dbe96[m
Author: Ken Steele <ken@tilera.com>
Date:   Fri Feb 21 16:03:57 2014 -0500

    Only update mPipe stats occasionally around the packet loop.
    
    Check for termination or stats update only once every 10,000 times
    around the mPipe packet processing loop, to reduce locking.

[33mcommit 3c9a135c0f2cab5df1942f0e52d206d4f7ed1e1f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 26 07:19:19 2014 +0100

    isdataat: fix coverity issue
    
    During keyword setup there was a path that in theory could lead to
    indexing an array with a negative int.
    
    Coverity 400608

[33mcommit aa8918abd1298d209d164864baf8867b23a3c99d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 26 07:14:46 2014 +0100

    fast-pattern: fix error check in keyword setup
    
    Check the right variable. Coverity 1038096

[33mcommit 3fa958b9a78fb5c0564c798ac95de0c1f9eb4771[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 26 06:28:30 2014 +0100

    byte_extract/test/jump: fix coverity issues
    
    During keyword setup there was a path that in theory could lead to
    indexing an array with a negative int.
    
    Coverity 992695, 400605, 400604

[33mcommit e82c6efacac73ff3ad5b8eb620a89322d8a4e0ca[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 26 06:49:45 2014 +0100

    Minor cleanups
    
    Remove useless checks: coverity 1038130, 1038131, 1038132
    Small other fixes: coverity 1164817

[33mcommit 2b734b8d8a45728cf88f115ca904f0c4683305ff[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 26 07:01:09 2014 +0100

    htp: fix pointer check logic
    
    Don't check pointer after it has already been used.
    
    Coverity 1047545

[33mcommit abdc0072aa7c19380030ac78bee19a83d57393c3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 26 06:41:10 2014 +0100

    rule reload: fix unitialized memory access on error
    
    Coverity 709220

[33mcommit d8c486231c8679afd91dfd3ffb7d187c9bb0ed63[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 26 06:20:19 2014 +0100

    output-json: fix minor memory leak on error
    
    If the json file couldn't be opened, a minor memory leak would occur.
    
    Coverity 1166039

[33mcommit b4ab9a0a3cd3086f68b66ad7ca70d04e4335018b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 25 22:52:18 2014 +0100

    ftp: fix memory leak
    
    db pointers in both directions were not freed. This patch frees them
    in the state free function.
    
    Bug #1090

[33mcommit d63df6937c1ae4d6cb83605b88306346ec6742b0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 25 22:45:46 2014 +0100

    tls: fix uninitialized var use
    
    errcode wasn't initialized and in some code paths it remained
    uninitialized, leading to us evaluating this uninitialized value.
    
    Bug #1091

[33mcommit 95fa5ae1d2e260d756cb324b6ee4323332223e91[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 25 22:40:46 2014 +0100

    smtp: don't read uninitialized value
    
    If a reply would be seen before a command, a read of a uninitialized
    value could happen.
    
    This patch adds a check for this.
    
    Bug #1089.

[33mcommit 0416a8428d6ba79c0a9893ccce809a24b6243be5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 25 20:22:55 2014 +0100

    htp: don't assume HTPCallbackRequestLine is the first callback
    
    By assuming that HTPCallbackRequestLine would always be run first,
    an memory leak was introduced. It would not check if user data already
    existed in the tx, causing it to overwrite the user data pointer is
    it already existed.
    
    Bug #1092.

[33mcommit 42227e8713d9d5cb72da6d4f2bcf5e17c0a00323[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 17 10:56:13 2014 +0100

    configure: fix typo in libjansson warning message

[33mcommit 4e561d6b206443190b1df5b83ff7e3e4adac823c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 17 10:51:12 2014 +0100

    pcap/afpacket: update counters at exit
    
    In really short Suricata runtimes the capture counters would not
    be updated. This patch does a force update at the end of the
    capture loops in pcap and af-packet.

[33mcommit 3ec6bcf284795844274fdf4c2dd292b9998a6739[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 17 10:48:10 2014 +0100

    Make sure tls-events is part of the dist
    
    Added it to Makefile.am so it will be part of the dist created by
    make distcheck.

[33mcommit a97662e08c7e9a49011a7661297acc96ad3c324e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 13 15:53:08 2014 +0100

    dns: if no (valid) config is found, use defaults
    
    This patch will set up probing parsers if no (valid) config is
    found.
    
    Add a warning in those cases.

[33mcommit ab10c0a099599ae40e9060c063c8b33c7d189bc5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 13 15:48:35 2014 +0100

    app-layer: tell pp registrar if config was found
    
    The probing parser registration function
    AppLayerProtoDetectPPParseConfPorts was a void, meaning it would
    give no feedback to the registering protocol implementation. If a
    config was missing, it would just give up.
    
    This patch changes it to return a bool. 0 if no config was found,
    1 if a config was found.
    
    This allows the caller to setup a default case.

[33mcommit ec4288f7c2f7f73204b60d29b932dd5f2ef8b97b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 13 15:15:53 2014 +0100

    dns yaml: fix detect ports of tcp relying on udp
    
    The probing parser detection ports yaml settings of the TCP part
    of the DNS parser accidentally used udp as protocol string, causing
    the wrong part of the YAML to be evaluated.

[33mcommit ad51a57b91815c2d131ae713dcc49b2901d60cdd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 13 15:02:57 2014 +0100

    app-layer-event: make error reporting more clear
    
    If the protocol is disabled, app-layer-event would print a cryptic
    error message. This patch makes sure we inform the user the protocol
    is in fact disabled.

[33mcommit df10559d80dab7320d9df07246261396334158cb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 13 14:41:54 2014 +0100

    dns: fix message of decoder rule 2240008
    
    The message now reflects that the rule matches on:
        app-layer-event:dns.state_memcap_reached;

[33mcommit d2a6b61d7611577738ab3d8ffeeff449f98b57ca[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 13 14:36:45 2014 +0100

    yaml: add and comment missing dns settings
    
    DNS memcap settings "global-memcap" and "state-memcap" were missing.
    
    Additionally, add request-flood setting.

[33mcommit 2421da6eec853eeadf11abb2bf30afd980736742[m[33m ([m[1;33mtag: suricata-2.0rc1[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 13 11:14:40 2014 +0100

    Update Changelog for 2.0rc1 release

[33mcommit f791d0f5c5640eb1a593f86bb6b864be9b973896[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 11 09:44:26 2014 +0100

    vlan/QinQ: add vlan_qinq counter
    
    This patch introduces a new counter "decoder.vlan_qinq". It counts
    packets that have more than two stacked vlan layers.
    
    Packets with 2 vlan layers will both increment "decoder.vlan" and
    "decoder.vlan_qinq".

[33mcommit c95df281e39e4c946ac22001b22aee83e919a534[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 11 07:44:42 2014 +0100

    eve-log: add warning if enabled but not supported
    
    If we're not compiled against libjansson, the eve-log output is not
    available. This patch adds a warning.

[33mcommit 33e4cc065f31706b481441fcd1b28526a3374f7b[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Mon Feb 10 14:47:43 2014 -0600

    Promote nodes set with --set to sequence nodes as needed.
    
    A node isn't known to be a sequence node until the YAML is parsed.
    If a node sequence node was set on the command line, promote
    it to a sequence node when it is discovered by YAML to be
    a sequence node.
    
    Fixes comment #18 in issue 921.

[33mcommit 18edec876917852e66df54836a9ebbdbe684551b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 10 11:13:11 2014 +0100

    vlan: support QinQ ethernet types
    
    Add support for 802.1AD and 802.1QinQ in ethernet and vlan parsing.
    
    Tickets: #814, #1103, #1104

[33mcommit 91f8c33b0abbf216fe4f9a147c1824e902ed3d8e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 10 10:57:46 2014 +0100

    defrag: fix reassembly with vlan
    
    When creating a pseudo packet with the reassembled IP packet, the
    parent's vlan id or id's are also needed. The defrag packet is run
    through decode and the flow engine, where the vlan id is necessary
    for connecting the packet to the correct flow.

[33mcommit b603ad62e56ae9aa8a18409a98abc2d2042573db[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Feb 8 22:01:13 2014 +0100

    af-packet: declare TP_STATUS_VLAN_VALID if needed
    
    Some old distribution don't ship recent enough linux header. This
    result in TP_STATUS_VLAN_VALID being undefined. This patch defines
    the constant and use it as it is used in backward compatible method
    in the code: the flag is not set by kernel and a test on vci value
    will be made.
    
    This should fix https://redmine.openinfosecfoundation.org/issues/1106

[33mcommit f7b1aefaf451bc4675630d27d34357594f5b8cd7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 8 17:39:16 2014 +0100

    Bug 1107: decoders: bail out on pseudo packets
    
    Flow-timeout code injects pseudo packets into the decoders, leading
    to various issues. For a full explanation, see:
      https://redmine.openinfosecfoundation.org/issues/1107
    
    This patch works around the issues with a hack. It adds a check to
    each of the decoder entry points to bail out as soon as a pseudo
    packet from the flow timeout is encountered.
    
    Ticket #1107.

[33mcommit 85760a7044d121b7d48cf2d28784c419758529c0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 8 17:09:10 2014 +0100

    Flow: fix flow reference cnt issues
    
    FlowReference stores the flow in the destination pointer and increases
    the flow reference counter (use_cnt). This should only be called once
    per destination pointer. The reference counter is decremented when
    FlowDereference is called. Multiple FlowReference calls would lead to
    multiple use_cnt bumps, while there would be only one FlowRereference.
    This lead to a use_cnt that would never become 0, meaning the flow
    would stay in the hash for the entire lifetime of the process.
    
    The fix here is to check if the destination pointer is already set to
    the flow. If so, we don't increase the reference counter.
    
    As this is really a bug, this condition will lead to a BUG_ON if the
    DEBUG_VALIDATION checking is enabled.

[33mcommit fdca557e0162e02ee5b40949948685e3ca8ae5c0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 8 11:25:13 2014 +0100

    ipv4 decoder: set 'invalid' event on icmpv6
    
    ICMPv6 on IPv4 is invalid, so if we encounter this we set an event
    and flag the packet as invalid.
    
    Ticket #1105.

[33mcommit 43aa74d711eb774053e3fd85a9705638a49eaf60[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 8 10:35:47 2014 +0100

    debug-validation: fix packet check
    
    On fragments and invalid packets we can have p->proto set, while the
    matching protocol header pointer is null.

[33mcommit 01b80e2d8fb8909ca32caea11383de3f7d4b94a4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 20 14:38:22 2013 +0100

    detect ip-only: update radix usage
    
    Update IP-only lookups to the changed radix API.
    
    The return of user_data is treated as a succesful lookup, instead of
    the node.

[33mcommit b75eb77295984cb6ac8b0000e621e1e0f978b715[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 20 14:37:10 2013 +0100

    host-os-info: update radix lookups
    
    Update host OS lookups to use the new API.
    
    The return of user_data is treated as a succesful lookup, instead of
    the node.

[33mcommit fd193107debd2a54f7372c75021b7404f3036bc9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 20 14:36:14 2013 +0100

    unused reputation: radix update
    
    Update the unused reputation code to compile after radix update.

[33mcommit cd91738a4b4d84f6191bb0081a8cf7fd7f6569fa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 20 14:34:48 2013 +0100

    defrag: update radix usage
    
    Update defrag timeout lookup to use the updated radix API.
    
    The return of user_data is treated as a succesful lookup, instead of
    the node.

[33mcommit d0a26c6a179a95bea60adf9584be63a36f426d97[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 20 14:32:33 2013 +0100

    radix: update HTP config lookup logic
    
    The HTP config tree is a radix. The lookups are updated to the new API.
    The return of user_data is treated as a succesful lookup, instead of
    the node itself.

[33mcommit 3b914eb7ba1feff68ddbd5d5c419b95adcdc91d1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 20 14:29:13 2013 +0100

    radix: update tests after API change
    
    This patch updates all the radix tests to the new API. In most cases
    it just passes a NULL user data return pointer.
    
    It also removes the tests related to SC_RADIX_NODE_USERDATA, as this
    macro is removed.
    
    Bug #1073

[33mcommit 7b4be598c46da33b0fb4addf949ebb8aa7e8ab8a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 20 14:19:23 2013 +0100

    radix: don't modify node prefix on lookup
    
    The radix tree stores user data. However, it had no function to return
    this data to the consumers of the API. Instead, on lookup, it would
    set a field "user_data_result" in the nodes prefix structure which
    could then be read by the caller.
    
    Apart for this not being a very nice design as it exposes API internals
    to the caller, it is not thread safe. By updating the global data
    structure without any form (or suggestion) of locking, threads could
    overwrite the same field unexpectedly.
    
    This patch modifies the lookup logic to get rid of this stored
    user_data_result. Instead, all the lookup functions how take an
    addition argument: void **user_data_result.
    
    Through this pointer the user data is returned. It's allowed to be
    NULL, in this case the user data is ignored.
    
    This is a significant API change, that affects a lot of tests and
    callers. These will be updated in follow up patches.
    
    Bug #1073.

[33mcommit 7a9da787f9151d8a919c73ca25dfb66b353e1b20[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Wed Feb 5 17:27:42 2014 -0600

    Don't alert on valid ICMP6 solicit/advert messages.
    
    Handles ND_ROUTER_SOLICIT, ND_ROUTER_ADVERT, ND_NEIGHBOUR_ADMIN,
    ND_NEIGHBOUR_SOLICIT and ND_REDIRECT.  Don't set ICMPV6_UNKONWN_CODE
    if code is the expected value of 0.

[33mcommit 65d8ae937df42184b039111179177cbd602c15c9[m
Author: Ken Steele <ken@tilera.com>
Date:   Thu Feb 6 13:23:43 2014 -0500

    Remove extra ] configure.ac for HAVE_DETECT_DISABLED
    
    Saw a warning about unknow command ']' running distcheck and tracked it back
    to this error.

[33mcommit 7726cecbaadd133aa10ce3bd8435ee3beadbfeff[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 7 15:06:43 2014 +0100

    Fix CUDA test warning.

[33mcommit 29fb9b099addca2178c8f38dfc52588f28f3ae8a[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Wed Feb 5 08:47:45 2014 +0530

    CUDA: Fix header file resolution issues.

[33mcommit 2cd6e1287f49cd1c142de799dcd1c07d28b3084c[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Feb 7 11:13:38 2014 +0100

    af-packet: no VLAN id from msg header for old kernel
    
    This patch uses the new function SCKernelVersionIsAtLeast to know
    that we've got a old kernel that do not strip the VLAN header from
    the message before sending it to userspace.

[33mcommit 1ccb93ab50f890e077d4ea894f9c9a75c67a7092[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Feb 7 11:11:14 2014 +0100

    Add new function to work on kernel version.
    
    This patch adds a new file containing a function that can be used
    to compare the version number of the running kernel with a specific
    version.

[33mcommit e871f7132b08e41f28e0b5763393bd5453e402d9[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Feb 6 13:54:10 2014 +0100

    af-packet: improve VLAN detection
    
    Since commit in kernel
      commit a3bcc23e890a6d49d6763d9eb073d711de2e0469
      Author: Ben Greear <greearb@candelatech.com>
      Date:   Wed Jun 1 06:49:10 2011 +0000
    
          af-packet: Add flag to distinguish VID 0 from no-vlan.
    a flag is set to indicate VLAN has been set in packet header.
    
    As suggested in commit message, using a test of the flag followed
    by a check on vci value ensure backward compatibility of the test.

[33mcommit 1fb7c0dddc97b20c0ac03d6810f4e76bce523a57[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Feb 4 11:49:42 2014 +0100

    af-packet: handle vlan counter
    
    This patch adds a vlan counter increment in decodeAFP. This
    is needed to take into account vlan_id set by the packet
    reading function.

[33mcommit 71e47868bf469098bc730063fe304c506264a561[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jan 30 18:11:10 2014 +0100

    af-packet: get vlan id from header
    
    Since kernel 3.8, the VLAN header are stripped from packet. So the
    first VLAN id can only be fetched from the tpacket header at capture
    time.

[33mcommit 3967bd5517e7ab57fd82d7ce9b70dac16057b8f7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 7 11:04:32 2014 +0100

    app-layer: fix AppLayerParserProtocolIsTxEventAware
    
    AppLayerParserProtocolIsTxEventAware would check if a proto is tx
    event aware by checking if it had registered a StateHasEvents function.
    However, this is an optimization function. This patch changes it to
    use the StateGetEvents function instead, which is a better indicator.

[33mcommit 3f5acc5447a44124df48b5502b961d544fab8f88[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 7 11:02:41 2014 +0100

    http: per tx decoder events
    
    Store HTTP decoder events per TX, so they can be inspected per TX.
    
    Ticket: #839.

[33mcommit 1030cf58fa1783944bc8d5a0d0d4e0985c932c44[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 6 18:30:33 2014 +0100

    dns: fix protocol yaml setting
    
    UDP code would accidentally depend on 'tcp' setting.

[33mcommit 497575d38ea1394b9c170da9b9c254594b1d284d[m
Author: Ken Steele <ken@tilera.com>
Date:   Tue Jan 7 12:56:07 2014 -0500

    Add option on Tile-Gx for logging for fast.log alerts over PCIe
    
    When running on a TILEncore-Gx PCIe card, setting the filetype of fast.log
    to pcie, will open a connection over PCIe to a host application caleld
    tile-pcie-logd, that receives the alert strings and writes them to a file
    on the host. The file name to open is also passed over the PCIe link.
    
    This allows running Suricata on the TILEncore-Gx PCIe card, but have the
    alerts logged to the host system's file system efficiently. The PCIe API that
    is used is the Tilera Packet Queue (PQ) API which can access PCIe from User
    Space, thus avoiding system calls.
    
    Created util-logopenfile-tile.c and util-logopen-tile.h for the TILE
    specific PCIe logging functionality.
    
    Using Write() and Close() function pointers in LogFileCtx, which
    default to standard write and close for files and sockets, but are
    changed to PCIe write and close functions when a PCIe channel is
    openned for logging.
    
    Moved Logging contex out of tm-modules.h into util-logopenfile.h,
    where it makes more sense. This required including util-logopenfile.h
    into a couple of alert-*.c files, which previously were getting the
    definitions from tm-modules.h.
    
    The source and Makefile for tile-pcie-logd are added in contrib/tile-pcie-logd.
    
    By default, the file name for fast.log specified in suricata.yaml is used as
    the filename on the host. An optional argument to tile-pcie-logd, --prefix=,
    can be added to prepend the supplied file path. For example, is the file
    in suricata.yaml is specified as "/var/log/fast.log" and --prefix="/tmp",
    then the file will be written to "/tmp/var/log/fast.log".
    
    Check for TILERA_ROOT environment variable before building tile_pcie_logd
    
    Building tile_pcie_logd on x86 requires the Tilera MDE for its PCIe libraries
    and API header files. Configure now checs for TILERA_ROOT before enabling
    builing tile_pcie_logd in contrib/tile_pcie_logd

[33mcommit 2200dd61a1c358486ac96427ca50096abcc978e5[m
Author: Ken Steele <ken@tilera.com>
Date:   Tue Jan 7 10:31:40 2014 -0500

    Reduce time the file lock is held to write an alert to Fast.log
    
    Generate the alert string into a temporary buffer before aquiring the
    file lock. Only hold the file lock while writing the alert string to the
    file.
    
    In the case of multiple alerts, it would be better to generate all the
    alerts, then aquire the lock once and write them all and then flush.
    
    Changed PrintRawLineHexFp, which printed to a file, to PrintBufferRawLineHex,
    that puts the same output into a string buffer. It was only used by fast.log.

[33mcommit 235cd0211a7f170af0a1efaaed21590a02d9e331[m
Author: Ken Steele <ken@tilera.com>
Date:   Mon Jan 6 12:00:57 2014 -0500

    Alert file formatting clean up.
    
    Put { on new line for function declarations. Remove space after function
    name.
    
    Add static to unit tests delcaration.

[33mcommit 1ac805f1b3018dad46e87eeb77fb8ee4116048fa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 6 09:38:58 2014 +0100

    Fix address parsing issues
    
    Fix issue where negating a range containing a negation would fail.
    
    E.g. HOME_NET: [192.168.0.0/16,!192.168.10.0], can be used in a rule
         as !$HOME_NET.
    
    Also, fix another parsing issue:
    
    If the negation range would be bigger than the 'positive' range, parsing
    wouldn't be correct. Now this case is rejected.
    
    E.g. [192.168.1.3,!192.168.0.0/16] is now explicitly rejected
    
    Ticket 1079.

[33mcommit 55f8672a0469d87445591b93ad955e492c586943[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 4 18:18:46 2014 +0100

    profiling: end profiling tunnel packets inside lock
    
    End profiling inside the lock for a tunnel packet as otherwise another
    thread may already free the packet while the profiling code runs.
    
    SEGV's observed and now gone.

[33mcommit 4e5572b8dce2d45361ea7efee3f3faa66e6c4d12[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 4 17:26:39 2014 +0100

    fileext: make case insensitive
    
    Change keyword to be case insensitive when matching.
    
    Ticket #597.

[33mcommit e8626509cc86a7ab272983b8dfeb02870ae16966[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Tue Dec 10 12:09:40 2013 -0600

    When setting a sequence value, check for an existing node.
    
    This makes --set af-packet.0.threads=X do what you expect by
    looking for the sequence node before setting.

[33mcommit ab562ce226c0c18fbe17a297323651a6da56a1f9[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Wed Dec 4 00:00:07 2013 -0600

    Add a --set command line option to set/override a configuration value.

[33mcommit 4ce1fd347e251a3c1e2ac05ade951838fabae287[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 4 14:07:10 2014 +0100

    json dns: fix tx logic
    
    The JSON DNS logger would still have some conditions in the main
    Logger function. This led to some transactions not beeing logged.

[33mcommit 6dd10443ce6e91503a9188021d54137e9ea4860d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 4 12:53:00 2014 +0100

    profiling: output log api modules separately
    
    Skip log api thread modules in the regular 'thread modules' list,
    instead print them in a separate list.

[33mcommit a37a1d9de7b4e5d4d763963e569e69d4b0b8fdf5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 4 12:52:07 2014 +0100

    profiling: fix percentage of detect phases
    
    Use proper 'total' to calculate weigth of each detection phase.

[33mcommit f902c9e6c714ed495f83a68c49fd1161e56b9aef[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 4 12:15:04 2014 +0100

    threading: add missing json types to TmModuleTmmIdToString
    
    Also, remove 'default' case from switch statement, so missing entries
    will lead to a compiler warning.

[33mcommit a3b0577a1f205c50d4f0776f9002074abb06c896[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 4 11:49:20 2014 +0100

    output: add TM_FLAG_LOGAPI_TM thread module flag
    
    The TM_FLAG_LOGAPI_TM flag indicates that a module is run by the log
    api, not by the 'regular' thread module call functions.
    
    Set flag in all all Log API users' registration code.
    
    Purpose of this flag is in profiling. In profiling output it will be
    used to list log api thread modules separately.

[33mcommit b166e2f0e739b9e12b477dd1407166a8c01a05e2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 4 11:34:21 2014 +0100

    profiling: support log api
    
    The log API calls thread modules directly, so the TMM profiling logic
    can be applied to it. This patch does so.
    
    The "Thread Module" out now again lists the individual loggers. As the
    module are normally called much less frequently the numbers are hard to
    compare to pre-log-api numbers.

[33mcommit c36a8d30e5e6de74cae30eb4dc8c1b178a495d72[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 4 11:31:02 2014 +0100

    threading: add utility to get module id from name
    
    Add TmModuleGetIdByName to go from module name to id directly.

[33mcommit 8a735a9b90fed6ecdeb43317bc0a7adc110fabd9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 3 17:40:45 2014 +0100

    profiling: add sample-rate yaml option
    
    Add option "profiling.sample-rate":
    
      # Run profiling for every xth packet. The default is 1, which means we
      # profile every packet. If set to 1000, one packet is profiled for every
      # 1000 received.
      #sample-rate: 1000
    
    This allows for configuration of the sample rate.

[33mcommit 2c3a92a1c9ba357c448a0884ec4f482bf0414e6a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 1 15:58:58 2014 +0100

    profiling: conditional rule profiling
    
    Add support for conditional rule profiling. Currently only simple
    rate limiting is supported, but hardcoded to inspecting rules for
    each packet.

[33mcommit 13d491f57749d1546fcd8cbc87a091b0ba4b001a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 1 12:57:01 2014 +0100

    profiling: lower overhead when disabled
    
    Instead of a large (6k+) structure in the Packet, make the profiling
    storage dynamic. To do this the Packet->profile is now a pointer.
    
    Initial support for selective sampling, e.g. only profile every
    1000th packet.

[33mcommit c2fcf329f09c6e0d16cebb5906244c4ecc8ba30f[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jan 28 16:54:51 2014 +0100

    tls: fix negated match
    
    A negated match is matching if the tested field is NULL. But as it
    is not set, nor negated nor normal test must match.
    
    Without this patch, a rule like:
     alert tls any any -> any any (msg:"negated match"; tls.subject:!"CN=home.regit.org"; sid:1; rev:1;)
    is alerting for all connections. Event if they are done on a certificate
    with matching subject. This was due to the fact that tls protocol
    is discovered before the handshake is complete. Thus the condition
    on tls is true with a NULL tls.subject. And code was returning a
    positive match in the case of a NULL subject and a signature with
    a negated match.

[33mcommit 385c04164b7df5ab5dadcbeac4c6afd0a022fa5b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 31 12:53:26 2014 +0100

    Updated banned function cocci check
    
    Added: strndup and strchrnul
    
    Both are not supported on OS X 10.6. It's rather old, but it's the
    only Mac QA box I have, so for now it'll have to do.

[33mcommit 717c271e58f09e560cd6274dba119f45ba014934[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 31 12:52:36 2014 +0100

    Replace strchrnul with strchr
    
    And add a null check then of course. strchrnul isn't supported on
    all platforms.

[33mcommit 1e4421a7d46cb16257070458ce9748fd43564e41[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 31 12:25:16 2014 +0100

    Remove SCStrndup
    
    Removed strndup wrapper as it's not available in all plaforms.

[33mcommit 74fb60c010f7dcc09310d60ea45e1fac8491910d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 31 12:23:53 2014 +0100

    Replace remaining SCStrndup calls
    
    Replace them with BytesToString().

[33mcommit c07f5397f48b75f030acf904e6572b6ee083953f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 31 12:21:47 2014 +0100

    Introduce BytesToString utility
    
    Introduce a utility function to convert an array of bytes into a
    null-terminated string:
    
     char *BytesToString(const uint8_t *bytes, size_t nbytes);
    
    All non-printables are copied over, except for '\0', which is
    turned into literal '\' '0' in the string. So the resulting string
    may be bigger than the input.

[33mcommit 2b60871bf1b898ba54e9494a3563a4f5dea2b534[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 31 10:49:57 2014 +0100

    json loggers: dup bstr with bstr_util_strdup_to_c
    
    In various places SCStrndup was used to 'dup' a bstr string, however
    libhtp provides bstr_util_strdup_to_c for this. As this is a cleaner
    interface, it's preferred.

[33mcommit 0032ad34d4b9c7ab8b56a4f9239df204c899c541[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 31 09:33:29 2014 +0100

    stream: yaml addition for recent config options

[33mcommit 0cf71befbb957f2e4919b809a4c6d709fe5b7c1c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 30 16:23:44 2014 +0100

    util-host-os-info: scan-build fix
    
    util-host-os-info.c:202:13: warning: Potential leak of memory pointed to by 'user_data'
                SCLogError(SC_ERR_INVALID_IPV6_ADDR, "Invalid IPV6 address inside");
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ./util-debug.h:278:35: note: expanded from macro 'SCLogError'
     #define SCLogError(err_code, ...) SCLogErr(SC_LOG_ERROR, err_code, \
                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ./util-debug.h:214:82: note: expanded from macro 'SCLogErr'
                                      char _sc_log_err_msg[SC_LOG_MAX_LOG_MSG_LEN] = ""; \
                                                                                     ^~
    1 warning generated.

[33mcommit a6474bd6bf3a74865ae7c37dffcc759fc8cf4475[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 30 16:08:20 2014 +0100

    util-host-os-info: scan build fixes
    
    util-host-os-info.c:200:13: warning: Potential leak of memory pointed to by 'ip_str'
                SCLogError(SC_ERR_INVALID_IPV6_ADDR, "Invalid IPV6 address inside");
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ./util-debug.h:278:35: note: expanded from macro 'SCLogError'
     #define SCLogError(err_code, ...) SCLogErr(SC_LOG_ERROR, err_code, \
                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ./util-debug.h:214:82: note: expanded from macro 'SCLogErr'
                                      char _sc_log_err_msg[SC_LOG_MAX_LOG_MSG_LEN] = ""; \
                                                                                     ^~
    util-host-os-info.c:200:13: warning: Potential leak of memory pointed to by 'user_data'
                SCLogError(SC_ERR_INVALID_IPV6_ADDR, "Invalid IPV6 address inside");
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ./util-debug.h:278:35: note: expanded from macro 'SCLogError'
     #define SCLogError(err_code, ...) SCLogErr(SC_LOG_ERROR, err_code, \
                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ./util-debug.h:214:82: note: expanded from macro 'SCLogErr'
                                      char _sc_log_err_msg[SC_LOG_MAX_LOG_MSG_LEN] = ""; \
                                                                                     ^~
    2 warnings generated.

[33mcommit 9ef9a14315127a0464002ea36d8c9a2095bf6dc3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 30 16:02:17 2014 +0100

    Fix util-debug scan-build warnings
    
    util-debug.c:461:12: warning: Potential leak of memory pointed to by 'substr'
        return SC_ERR_SPRINTF;
               ^~~~~~~~~~~~~~
    util-debug.c:856:31: warning: Potential leak of memory pointed to by 's'
                    op_ifaces_ctx = SCLogInitFileOPIface(s, NULL, SC_LOG_LEVEL_MAX);
                    ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    util-debug.c:1349:9: warning: Potential leak of memory pointed to by 's'
        if (log_level >= 0 && log_level < SC_LOG_LEVEL_MAX)
            ^~~~~~~~~
    3 warnings generated.

[33mcommit 0189b4d1ebf6f4834b2e3d2def1436dddaa624cc[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jan 31 12:05:48 2014 +0100

    json file: separate http params
    
    This patch separates http keys from file to have a different value
    list:
    
    {
     "time":"01\/31\/2014-12:04:52.837245","event_type":"file","src_ip":"5.3.1.1","src_port":80,"dest_ip":"1.8.1.9","dest_port":9539,"proto":"TCP",
     "http":{"url":"/foo/","hostname":"bar.com","http_refer":"http:\/\/bar.org","http_user_agent":"Mozilla\/5.0"},
     "file":{"filename":"bar","magic":"unknown","state":"CLOSED","stored":false,"size":21}
    }
    
    One interest of this modification is that it is possible to use the
    same key as the one used in http events. Thus correlating both type
    of events is trivial. On code side, this will permit to factorize
    the code by simply asking the underlying protocol to output its
    info in a json object.
    
    Second interest is that adding file extraction for a new protocol
    will result in only changing the protocol specific json list.

[33mcommit 6fd9b4b255abac78a4dff88dcd4d10f279c632ce[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jan 31 11:54:19 2014 +0100

    json: add event_type key
    
    This patch adds an event_type key to the generated events. Current
    value is one of "dns", "alert, "file", "tls", "http", "drop". It is
    then easy to differentiate in log analysis tools the events based on
    source inside Suricata.

[33mcommit 93a84180dc904c75c087fef06ddb800e0c54e87f[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jan 31 10:58:35 2014 +0100

    json dns: do not use array to output answer
    
    Without this patch DNS answers for a single query are stored in a
    single json event. The result is an array in the object like this one:
     {"type":"answer","id":45084,"rrname":"s-static.ak.facebook.com","rrtype":"CNAME","ttl":734},
     {"type":"answer","id":45084,"rrname":"s-static.ak.facebook.com.edgekey.net","rrtype":"CNAME","ttl":1710},
    This type of output is not well supported in logstash. It is
    displayed as it is written above and it is not possible to
    query the fields.
    
    I think the reason is that this is not logical if we consider search
    query. For example if we search for "rrname" equal "s-static.ak.facebook.com"
    we got one entry with two values in it. That's against the logic
    of event. Furthermore, if we want to get a complete query, we can
    used the id.
    
    This patch splits the answer part in mulitple message. The result
    is then accepted by logstash and fields can be queried easily.

[33mcommit eab0b7fae9d09de2a16e3edd46cb374365dd2b49[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jan 31 09:43:31 2014 +0100

    json-dns: sync field names with draft rfc2629
    
    This patch updates DNS field name to be in sync with RFC 2629:
     https://github.com/adulau/pdns-qof
    This will allow to easily use Suricata with other passive DNS tools.

[33mcommit 7a9efd74e4d88e39c6671f6a0dda28ac931ffe10[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jan 30 23:33:45 2014 +0100

    json: sync key name with CIM
    
    This patch is synchronizing key name with Common Information Model.
    It updates key name following what is proposed in:
     http://docs.splunk.com/Documentation/PCI/2.0/DataSource/CommonInformationModelFieldReference
    The interest of these modifications is that using the same key name
    as other software will provide an easy to correlate and improve
    data. For example, geoip setting in logstash can be applied on
    all src_ip fields allowing geoip tagging of data.

[33mcommit 31a024c9b5a37ac17232806a72bfa7aa7acdaf2f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 30 15:22:55 2014 +0100

    Various fixes for scan-build warnings

[33mcommit cd7a5ff0ca80703cd43cbc55c883e906c455c448[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 30 14:38:03 2014 +0100

    output: cleanups
    
    Preparation of making output type for json logs configurable.

[33mcommit efd4c42c0a0b0c30043aa02f49a1dade9cb56fd6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 30 13:58:28 2014 +0100

    json tls log: rename to output-json-tls

[33mcommit 99504274668fd5b066e6c6007c1cc510bb2701c8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 30 13:49:42 2014 +0100

    output: check for multiple instances of drop and tls
    
    Both the drop and tls logs are currently not designed to have multiple
    instances running. So until that is changed, error out if more than one
    instance is started.

[33mcommit 870bb23ff6b5403eb3b3fbecd4784a4b2458170e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 30 13:34:45 2014 +0100

    json drop log: rename to output-json-drop

[33mcommit 6cecb4e4d24d068b1f7c55aa5a0a39e23494404a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 30 13:29:36 2014 +0100

    json dns: rename output-dnslog -> output-json-dns

[33mcommit 5874f52ec63b824a09af04a3c704b28d9e40cc23[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 30 13:26:59 2014 +0100

    json: rename output-httplog -> output-json-http

[33mcommit b5ef269b03bdc51a985fbb852f619bcda6ff13fe[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 30 13:20:47 2014 +0100

    json outputs: cleanups
    
    Clean up header files and improve memory handling.

[33mcommit 3fc63d365611d47cabcdbb070925b6f48facfc04[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 30 12:26:01 2014 +0100

    jansson file log: make file log module
    
    Turn the libjansson based file logger into a file module, as a child
    of eve-log.

[33mcommit 039f7b3e5f828588c14916dae426862e25a9d43c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 30 11:45:30 2014 +0100

    tls json: turn into packet logger
    
    Like log-tls, turn the json tls logger into a packet logger as the
    protocol parser is not tx aware.
    
    Make it a child of eve-log as well.

[33mcommit a9eab06593e71c28ec8edb10a0a58b77cc16f913[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 30 10:59:51 2014 +0100

    output: simple name space support for sub modules
    
    To avoid module name clashes, a submode abc of parent xyz, will now
    register itself as xyz.abc.

[33mcommit 3a794f7a6341720532fedcbe63896d346eb4015c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 30 10:50:38 2014 +0100

    drop-json: make child of eve-log
    
    Make drop json child of eve-log.

[33mcommit f0aa2ed240c45cbe8c0e2ef62efa6f5faddaa1e3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 30 10:15:59 2014 +0100

    json drop log: move into packet module
    
    Move JSON drop log into a full packet module.

[33mcommit 4bd37cc46a839c23d423976f80961cf312e483cb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 30 09:18:12 2014 +0100

    log api: use AppProto instead of uint16_t

[33mcommit 52c3d3ad7c1c075a8b6a1ffd44f63bd8f8723e7c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 30 09:14:59 2014 +0100

    log api: convert all names to const
    
    Instead of strdupping all names w/o a need, use const ptrs.

[33mcommit 85335d9cbeb101dac74e3ef8fb3a576f06803b2b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 29 19:42:46 2014 +0100

    alert json: make child of eve-log
    
    Enable alert json for eve-log by registering the module as a sub-
    module of eve-log.

[33mcommit 42858647e2e7fc46e45b6cbab43319713bfed2e8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 29 18:50:32 2014 +0100

    alert-json: make full module out of json alert
    
    Make a full module out of the json alert code in output-json-alert.[ch].

[33mcommit 79771ff570086701d31e6ba5649cb2fbcc8a010f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 29 18:19:27 2014 +0100

    output: sub-module support for other log api's
    
    Packets:
    void OutputRegisterPacketSubModule(const char *parent_name, char *name, char *conf_name,
        OutputCtx *(*InitFunc)(ConfNode *, OutputCtx *),
        PacketLogger LogFunc, PacketLogCondition ConditionFunc);
    
    Files:
    void OutputRegisterFileSubModule(const char *parent_name, char *name, char *conf_name,
        OutputCtx *(*InitFunc)(ConfNode *, OutputCtx *), FileLogger FileLogFunc);
    
    Filedata:
    void OutputRegisterFiledataSubModule(const char *parent_name, char *name, char *conf_name,
        OutputCtx *(*InitFunc)(ConfNode *, OutputCtx *), FiledataLogger FiledataLogFunc);

[33mcommit f830cb80268962300312826ee7bca3d34bb506ba[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 29 17:38:04 2014 +0100

    output: introduce concept of sub-modules
    
    To support the 'eve-log' idea, we need to be able to force all log
    modules to be enabled by the master eve-log module, and need to be
    able to make all logs go into a single file. This didn't fit the
    API so far, so added the sub-module concept.
    
    A sub-module is a regular module, that registers itself as a sub-
    module of another module:
    
        OutputRegisterTxSubModule("eve-log", "JsonHttpLog", "http",
                OutputHttpLogInitSub, ALPROTO_HTTP, JsonHttpLogger);
    
    The first argument is the name of the parent. The 4th argument is
    the OutputCtx init function. It differs slightly from the non-sub
    one. The different is that in addition to it's ConfNode, it gets
    the OutputCtx from the parent. This way it can set the parents
    LogFileCtx in it's own OutputCtx.
    
    The runmode setup code will take care of all the extra setup. It's
    possible to register a module both as a normal module and as a sub-
    module, which can operate at the same time.
    
    Only the TxLogger API is handled in this patch, the rest will be
    updated later.

[33mcommit 8c3e71559a055c64206dc0c4afa7425553550bcd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 29 15:29:15 2014 +0100

    dns-json: turn logger to tx api
    
    Convert Json DNS logger into a Tx Logger API logger.

[33mcommit bc71a43e089b5a028c13d7861b87c7c53fb97698[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 29 14:36:22 2014 +0100

    http-json: separate module using tx api
    
    Turn HTTP json logger into a Tx Logger API logger.

[33mcommit 4874d5abbbed4403c7d29e468a91c2ab3e988ed2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 29 11:32:10 2014 +0100

    Various compile fixes after rebase with master

[33mcommit 18458a14fb17a719494c5695ddb05e29097e8339[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Thu Jan 16 16:18:54 2014 -0800

    json: rebase fixes
    
    - restore json output-file.[ch] as output-json-file.[ch] after rebase conflict
    - fix Makefile.am after merge conflict
    - some dev-log-api-v4.0 rebase json fallout cleanup

[33mcommit 6fd1b31c57d15ac97d9547ac486a678d8131eea7[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Tue Nov 19 12:58:47 2013 -0800

    Remaining JSON output pull request comment edits

[33mcommit a3d86594dcacdd0d2c5fe459cf1763ced2acb22a[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Mon Nov 18 14:36:52 2013 -0800

    address most initial JSON pull request comments

[33mcommit 55df2d5cdb132f19cee293ab0f0c442d321aa194[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Wed Nov 13 19:33:00 2013 -0800

    add "united" drop JSON log

[33mcommit 0c067646a86973ee2426defc9110337a372add00[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Wed Nov 13 11:17:03 2013 -0800

    Add "united" JSON files output

[33mcommit 730ee3d7215bb1c7c47a7d663ba2a74ce16b7e9b[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Tue Nov 12 22:43:19 2013 -0800

    First cut at "united" file log output in JSON

[33mcommit 88a04742c013b2b4fe0bf6a86ece6d538a55458e[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Tue Nov 12 18:48:37 2013 -0800

    JSON output cleanup

[33mcommit b4ac0d90a4684b25e0d170bf4042a7a9af64c514[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Tue Nov 12 18:13:43 2013 -0800

    remove unused http JSON code

[33mcommit a12fa7c4e1d64d7d5c230222e55ccd5fc9207b60[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Tue Nov 12 18:09:01 2013 -0800

    more output JSON cleanup

[33mcommit 6974817f72bbb31540c3bcff0dfe38a1161e7451[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Tue Nov 12 17:45:56 2013 -0800

    remove dead JSON DNS output code

[33mcommit a44b2b987bac5c5179ef30c0099694d96ba14dc3[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Tue Nov 12 17:43:00 2013 -0800

    JSON output cleanup

[33mcommit 3241732e277b6a79cb005dd1dd05799a489cbe19[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Tue Nov 12 17:28:16 2013 -0800

    rename alert-json.[ch] output-json.[ch]

[33mcommit 3bc95c925860ea5ffdf7eab07cd7b740ff00b75e[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Tue Nov 12 16:56:48 2013 -0800

    fix compile errors w/o libjansson

[33mcommit 8adbc741ba605323e5a707a675caf52888ba2554[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Tue Nov 12 15:41:50 2013 -0800

    remove unused JSON TMM_*JSON enumerations

[33mcommit 07d3b38d3bd071d300cced3a76f5f4a8d7372005[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Fri Nov 8 11:39:49 2013 -0800

    Add support for JSON output to syslog/unix_stream/unix_dgram

[33mcommit 1dd6d7a104e06912edc9875683f4ed0a2f7ac3c1[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Fri Nov 8 11:27:52 2013 -0800

    Add "united" log to suricata.yaml.in

[33mcommit 6c1de2115c21d86d05a6833518e8386191e9601c[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Fri Nov 8 11:24:18 2013 -0800

    JSON output cleanup

[33mcommit c654b63f6a2dc331a64d0eed19f28739b6843fc0[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Wed Nov 6 15:12:43 2013 -0800

    add united TLS JSON logging

[33mcommit 51b7cf149108f754e2191b93ae67188cc86af2db[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Tue Nov 5 18:45:11 2013 -0800

    add ICMP type and code support to JSON log

[33mcommit c8beb9bf9da89f06e18f4c4dcbdda2458c659fa3[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Tue Nov 5 14:48:39 2013 -0800

    Support for configuration of JSON http output module

[33mcommit 8c95b085c5ac12e21808fd3fd2c162fb51658b5d[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Tue Nov 5 09:50:47 2013 -0800

    Add vlan and pcap_cnt to JSON logs

[33mcommit ce6b07b1b9dd2b71883ad09b9126d251c8e1dcbd[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Mon Nov 4 20:33:51 2013 -0800

    First cut at united .yaml configuration

[33mcommit 11f84d4ff70f260b17da1750a56b5d93eac59c67[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Mon Nov 4 12:54:36 2013 -0800

    beginning of JSON config alignment

[33mcommit 280e4bcb618fb3488e951b2ef66080dd790b0933[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Mon Nov 4 11:57:03 2013 -0800

    move some JSON alert work outside of lock

[33mcommit 34d04c310470f56be32ff012e084e58cbdc32b15[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Mon Nov 4 11:41:56 2013 -0800

    JSON cleanup

[33mcommit 0df6af3a0b8cfd9c3b8c918c2d6f647b61bc7ba5[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Mon Nov 4 08:22:51 2013 -0800

    Alert/HTTP/DNS JSON output working with Logstash

[33mcommit 5543b6eef436d13cdfc362050e6f0d45bc79c9bb[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Sun Oct 27 02:23:59 2013 -0700

    nested json alert output

[33mcommit b94b8e03bdc9a8deb073db8faa129586a5d76eeb[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Tue Oct 22 04:52:39 2013 -0700

    cleanup fallout from upstream merge with alert json work

[33mcommit 07571367d3bcf51be6866fbed293ae649eca809d[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Tue Jun 25 12:40:16 2013 -0700

    Change JSON alert syslog level to INFO

[33mcommit 860523f5bcad559787deacdfa4de0070c38f25b7[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Wed Jun 12 11:04:11 2013 -0700

    fix NULL string into JSON in alert-json

[33mcommit e9b192fcc0f1765b7932c5f6f196df136c74d130[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Wed Jun 5 09:25:06 2013 -0700

    change srcport->sp dstport->dp

[33mcommit 5498654114a3bd082df0128a277ffde6e4001cb1[m
Author: Tom DeCanio <decanio.tom@gmail.com>
Date:   Thu May 30 14:04:34 2013 -0700

    Add JSON formatted alert output

[33mcommit 7450f32351ab408878b022189736544bcdd613d8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 28 23:00:28 2014 +0100

    stream: add performance output for stream pools
    
    Add info messages at shutdown that give an indication of pool use
    for the various segment and chunk pools.

[33mcommit 84696ebe2a67339f654c21a0e8564b03590aef14[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 28 17:13:05 2014 +0100

    stream: configurable stream chunk prealloc
    
    The stream chunk pool contains preallocating stream chunks (StreamMsg).
    These are used for raw reassembly, used in raw content inspection by
    the detection engine. The default setting so far has been 250, which
    was hardcoded. This meant that in setups that needed more, allocs and
    frees would be happen constantly.
    
    This patch introduces a yaml option to set the 'prealloc' value in the
    pool. The default is still 250.
    
    stream.reassembly.chunk-prealloc
    
    Related to feature #1093.

[33mcommit fe1c4951f9ee3c9857143a33731792ff2ba1d643[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 28 17:12:38 2014 +0100

    stream: silence stream.reassembly.raw message

[33mcommit b5f8f386a37f61ae0c1c874b82f978f34394fb91[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 28 13:48:26 2014 +0100

    stream: configurable segment pools
    
    The stream reassembly engine uses a set of pools in which preallocated
    segments are stored. There are various pools each with different packet
    sizes. The goal is to lower memory presure. Until now, these pools were
    hardcoded.
    
    This patch introduces the ability to configure them fully from the yaml.
    There can be at max 256 of these pools.
    
    Yaml layout is as follows:
    
    stream:
      reassemble:
        segments:
          - size: 2048
            prealloc: 3000
          - size: 4
            prealloc: 1000
          - size: 1024
            prealloc: 2000
    
    The size is the packet size. The prealloc value indicates how many
    segments are set up at startup.
    
    The pools have no limit wrt how many segments can be used of a certain
    size. If the engine needs more than the prealloc size, segments are
    malloc'd and free'd. The only limit here is the stream.reassemble.memcap.
    
    If the yaml part if omitted, the default values are the same as before.
    
    Feature #1093

[33mcommit b27d03e2f91864f7677fc5b29d28901b0410e699[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 16 15:23:03 2014 +0100

    log-filestore: convert to FiledataLog API
    
    This patch converts the log-filestore module to use the new
    FiledataLog API.

[33mcommit 9ff6608668d31787e59fd7fc997c460bfb7b38e2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 16 15:20:09 2014 +0100

    Introduce Filedata Logger API
    
    A new logger API for registering file storage handlers. Where the
    FileLog handler is called once per file, this handler will be called
    for each data chunk so that storing the entire file is possible.
    
    The logger call in the API is as follows:
        typedef int (*FiledataLogger)(ThreadVars *, void *thread_data,
            const Packet *, const File *, const FileData *, uint8_t flags);
    
    All data is const, thus should be read only. The final flags field
    is used to indicate to the caller that the file is new, or if it's
    being closed.
    
    Files use an internal unique id 'file_id' which can be used by the
    loggers to create unique file names. This id can use the 'waldo'
    feature of the log-filestore module. This patch moves that waldo
    loading and storing logic to this API's implementation. A new
    configuration directive 'file-store-waldo: <filename>' is added,
    but the existing waldo settings will also continue to work.

[33mcommit b31e0abffe936f4f04275ab195212d51d7407e9e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 15 16:24:25 2014 +0100

    log-filestore: cleanups
    
    Remove unused code.
    Make functions static.
    Move registration to the bottom.

[33mcommit 3e33ab4f835d0bdeab3f66f2f868c46b232c5ce4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 15 16:17:15 2014 +0100

    log-filestore: tag truncated files as such
    
    Tag truncated files as truncated in the same way log-file does.

[33mcommit 38249398a3d0b26bae8dc25fee7c91a9a65f444c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 15 14:25:32 2014 +0100

    tx-logger: speed up
    
    By bailing out early in case no logger is enabled for the protocol,
    a significant speed up is reached.

[33mcommit 078ff0c0cc4a1101df21a0212262e96055a330ef[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 15 14:23:16 2014 +0100

    app-layer: add logger check to API
    
    The new API call:
        int AppLayerParserProtocolHasLogger(uint8_t ipproto,
                                            AppProto alproto)
    
    Returns TRUE if a logger is registered on the ip/alproto pair, and
    FALSE otherwise.

[33mcommit 4c024f9658a3f5ca8b3454b36f8fc26176ee41ff[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 15 14:14:01 2014 +0100

    profiling: add logger api labels

[33mcommit 0e8ad126d72cc4c2c3029b72d1ef6498713b3531[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 15 13:28:43 2014 +0100

    log-file: convert to file-logger API
    
    Use file logger API.
    
    Also, check if the protocol is HTTP before getting the HTTP
    fields.

[33mcommit ee2a8a9cdac41bb2316ce33628ab4dc6a0d5c663[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 15 13:22:47 2014 +0100

    Introduce 'file' logging API
    
    This patch introduces a new logging API for logging extracted file info.
    It allows for registration of a callback that is called once per file:
    when it's considered 'closed'.
    
    Users of this API register their Log Function through:
        OutputRegisterFileModule()
    
    The API uses a magic settings globally. This might be changed later.

[33mcommit cef2eb01c5dbe36b1324c71bc4bc8fada9832091[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 15 10:59:15 2014 +0100

    log-file: cleanups
    
    Make all functions static.
    Move registration to the bottom.

[33mcommit fb5b6dd019179a96623129d36a4e4c925cc3e786[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 14 17:14:27 2014 +0100

    prelude: convert to packet logger API
    
    Convert prelude logger to use the packet logger API.

[33mcommit 8623b8f941076c0e23462c2a7bea2292392069db[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 14 17:02:33 2014 +0100

    prelude: fix configure and cleanup
    
    Fixes configure enabling of prelude. CFLAGS is reset, so the previous
    adding of -DPRELUDE was nixed. Using AC_DEFINE now.
    
    Cleanups:
    - make functions static
    - simplify handling of no prelude support
    - move registration to the bottom

[33mcommit b0a9d08267e04649d3f74682b5dc1e80c3f24eb3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 14 16:39:41 2014 +0100

    alert-syslog: convert to packet logger API
    
    Convert Syslog alert logger to packet logger API.

[33mcommit ec20f45916aae883035771813bae9e44ff4b402d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 14 16:30:06 2014 +0100

    alert-syslog: cleanup
    
    Remove separate ipv4 and ipv6 registration functions.
    Make all functions static.
    Move registration function to the bottom.
    Simplify OS_WIN32 wrappers usage.

[33mcommit 6c36824d69d70aa6be8cb6c4c33f914477a8aa7a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 14 16:20:27 2014 +0100

    alert-pcapinfo: convert to packet logger API
    
    Convert pcap-info to use the packet logger API.

[33mcommit a536e736950a92cc75e5530fda9040795133264f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 14 16:08:47 2014 +0100

    alert-pcapinfo: clean up
    
    Make functions static.
    Move registration to the bottom.

[33mcommit 73377048fd29e01fbfcce39b387f3cb3e22faa2b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 14 10:47:18 2014 +0100

    alert-debuglog: minor cleanups
    
    Clean up log functions after packet logger conversion. No more
    PacketQueue arguments.

[33mcommit cd4796f3caeb0d10c107bfa209e50771f7a45d56[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 14 10:43:07 2014 +0100

    alert-debuglog: port to packet logger api
    
    Convert AlertDebugLog to Packet logger API. Convert packet args to
    const.

[33mcommit 4b57d0272ca499602260e2a20abae4233294b761[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 14 10:07:27 2014 +0100

    alert-debug log cleanups
    
    Make all funcs but registration static.
    Remove stale registation prototypes.
    Move registation func to the bottom.

[33mcommit 504f39adefa97bf79d9aff9d2f8bb54c608ef33d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 13 16:13:27 2014 +0100

    log-tls: convert to packet logger API
    
    This patch converts log-tls to use the packet logger API. The packet
    logger API was choosen as the TLS parser is not transaction aware.
    
    To make sure the state is only logged once, the flag
    SSL_AL_FLAG_STATE_LOGGED was added to the parser. This flag is checked
    by the condition function, and set at the end of the Logger function.

[33mcommit bcf5c1f2fbe36576730f272e6eedbe0b9f496c78[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 13 15:18:42 2014 +0100

    log-tls: clean ups
    
    Make all functions static. Remove separate ipv4 and ipv6 registration
    functions. Move register function to the bottom so that we no longer
    need function prototype declarations.

[33mcommit 28c40837008377d1fa6bb44015e41eceeadf9a71[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 7 11:43:08 2013 +0100

    dns: convert dns logger to TX logger API
    
    Make sure to use the new logger TX API. For this the transaction
    handling was improved as well.

[33mcommit 35aa6c1e6674e3438686b0da57c9de90d6661d30[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 6 12:33:51 2013 +0100

    Convert log-drop to packet logger api.

[33mcommit 15eb4b292d304a5c155a3d7cdc9a69927d7652d2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 5 18:35:27 2013 +0100

    TX logging API: convert HTTP log
    
    Convert the HTTP log to the new TX logging API.

[33mcommit ad70793f78b439922f35f954e404d2acbc4f8cac[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 5 18:08:53 2013 +0100

    Introduce TX logging API
    
    This patch introduces a new API for logging transactions from
    tx-aware app layer protocols. It runs all the registered loggers
    from a single thread module. This thread module takes care of the
    transaction handling and flow locking. The logger just gets a
    transaction to log out.
    
    All loggers for a protocol will be run at the same time, so there
    will not be any timing differences.
    
    Loggers will no longer act as Thread Modules in the strictest sense.
    The Func is NULL, and SetupOuputs no longer attaches them to the
    thread module chain individually. Instead, after registering through
    OutputRegisterTxModule, the setup data is used in the single logging
    module.
    
    The logger (LogFunc) is called for each transaction once, at the end
    of the transaction.

[33mcommit 4049c2f74c240b02e31495822ded4dab3a6ed7a4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 5 16:55:17 2013 +0100

    Packet logging API: convert unified2
    
    Convert unified2 alert to new logging API.

[33mcommit d43ac9ae98e24b883a29f72782a9cbfa218f4f85[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 5 15:35:15 2013 +0100

    Introduce packet logging output API
    
    This patch introduces a new API for outputs that log based on the
    packet, such as alert outputs. In converts fast-log to the new API.
    
    The API gets rid of the concept of each logger being a thread module,
    but instead there is one thread module that runs all packet loggers.
    Through the registration function OutputRegisterPacketModule a log
    module can register itself to be considered for each packet.
    
    Each logger registers itself to this new API with 2 functions and the
    OutputCtx object that was already used in the old implementation.
    The function pointers are:
    
    LogFunc:       the log function
    
    ConditionFunc: this function is called before the LogFunc and only
                   if this returns TRUE the LogFunc is called.
    
    For a simple alert logger like fast-log, the condition function will
    simply return TRUE if p->alerts.cnt > 0.

[33mcommit 3474c36b5433e12cf57b2753e4e3708d6dac6c28[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 27 14:36:15 2014 +0100

    no-detect: handle protocols that have no logger
    
    If a protocol parser is active without a logger when detection is
    disabled, the transaction handling logic would fail. Now it will
    return the proper tx id so we can clean up the complete transactions.

[33mcommit f4872a2f08b64629287756b947a97c4f59aeac67[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 6 15:09:21 2014 +0100

    Add --disable-detection configure option
    
    Add --disable-detection configure option to compile Suricata with
    detection disabled.

[33mcommit 6a3621f2fe3bee73752861870f5e7be6c17f0f0f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 6 14:09:35 2014 +0100

    Error out if -s/-S are used with disable detect
    
    When Suricata is started with --disabled-detection, the -s and -S
    options make no sense. So error out.

[33mcommit 3e2205d08f6b59278be265645c955650f8923c9d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 17 12:59:38 2013 +0100

    detect-less: disable raw reassembly
    
    When using --disable-detection automatically disable raw stream
    reassembly by forcing stream.reassembly.raw to be false.

[33mcommit 5cc880c5c1f309ba48b0f6eb908cbb9c575fc851[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jan 11 11:14:56 2014 +0100

    detect-less: add log only TX handling function
    
    When running w/o detect, TX cleanup handling needs to ignore the
    inspect_id as it's only updated by detect.
    
    This patch introduces a new ActiveTx handler for logging only:
    AppLayerTransactionGetActiveLogOnly
    
    If --disable-detection is passed on the commandline, this function
    is registered.

[33mcommit 50f5b246dbce00ef54a0771bbecc0fda56303d55[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 16 17:37:09 2013 +0100

    Update main loop to handle detect-less
    
    Update main startup and shutdown loops to work will when detect
    is disabled. In this case de_ctx remains NULL.

[33mcommit 0e08f4b6fc294391ec7c774d69bc20eb16bdfae5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 16 17:35:27 2013 +0100

    update runmodes to handle detect-less
    
    In runmodes setup, consider a NULL de_ctx to mean detect is disabled.

[33mcommit dfda0cd4b6de8e599c815099620b76038cb29daa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 16 17:32:13 2013 +0100

    flow-time: handle detect-less case
    
    Flow timeout code keeps track of thread module running detect, and
    fails (hard) if it doesn't find it.
    
    This changeset retrieves the global g_detect_disabled and passes
    it to the timeout handling code during setup.

[33mcommit 258778cde491af02541ce1fcdc76ae60af6565d4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 16 17:25:11 2013 +0100

    Introduce g_detect_disabled global
    
    This global will be set to TRUE if detect is disabled. The reason for
    adding a global is that there currently is no clean way to pass
    configuration options to management threads.

[33mcommit b44ec80590fc5502e734ca22a070d7683c4f1ab8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 16 15:56:49 2013 +0100

    Add --disable-detection commandline option
    
    Flags the SuriInstance that the detection engine should be disabled.
    Actual disabling is not yet implemented.

[33mcommit ef40fe1f31a0e7644ffe9f0154df07ff027f37f8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 24 18:09:46 2014 +0100

    flow-timeout: change error logic
    
    If FlowForceReassemblyForFlowV2 can't get packets to inject into the
    engine, until now it would bail and retry later. In case of resource
    starvation issues, this would cause a lot of lock contention, as the
    flow manager would try over and over again.
    
    This patch limits FlowForceReassemblyForFlowV2 to one try per flow,
    if it fails... bad luck. It will only fail in serious conditions,
    which means we must prefer the health of the engine over the proper
    inspection of the flow in question.

[33mcommit ad7eff555de898e7abcdbf89fdbe9a4806bb72b6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 24 11:40:06 2014 +0100

    app-layer-proto: speed up
    
    AppLayer Proto detection code uses a mix of pattern search and
    "probing parsers". The pattern search validates potential matches
    using a single pattern search algo. The code was using SpmSearch
    for this, but this made it inefficient as it builds a BoyerMoore
    context for each search. This lead to significant memory pressure,
    especially on high speed/bandwidth boxes.
    
    This patch switches the search calls to BoyerMoore and BoyerMoore-
    Nocase directly. This can be done as the ctx' were available already.

[33mcommit 347c0df9c4e821f33938628855e3ceed115fd9d0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 23 09:55:09 2014 +0100

    app-layer-event: refactor
    
    Move app layer event handling into app-layer-event.[ch].
    Convert 'Set' macro's to functions.
    Get rid of duplication in Set and SetRaw. Set now calls SetRaw.
    Fix potentential int overflow condition in the event storage.
    Update callers.

[33mcommit 4ce53753bced3ab4aa5c412e55b7ebaeb53dc27b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 23 09:31:56 2014 +0100

    app-layer: shrink AppLayerParserState
    
    Change layout to be more efficient, shrinks structure with 8 bytes.

[33mcommit bf6ab333ff9275cc0f24fb273c6e7bf3e28ccf3c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 22 21:15:43 2014 +0100

    stream: use reassembly.memcap for stream chunks
    
    Use the stream.reassembly.memcap for stream chunks (StreaMsg) as well.

[33mcommit 5206928702012e0d1541a145266d0bf01e05200f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 22 19:14:19 2014 +0100

    stream: in SACK, always decrease memcap on free
    
    We should always decrease the stream memcap on freeing SACK records.

[33mcommit 7a0649f9c453c10e85cf1d04851cfe94772db03c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 22 16:43:38 2014 +0100

    pool: rename data structure fields to stack
    
    Rename the following fields:
     -    uint32_t alloc_list_size;
     +    uint32_t alloc_stack_size;
    
     -    PoolBucket *alloc_list;
     +    PoolBucket *alloc_stack;
    
     -    PoolBucket *empty_list;
     -    uint32_t empty_list_size;
     +    PoolBucket *empty_stack;
     +    uint32_t empty_stack_size;
    
    To reflect that these are in fact, stacks.

[33mcommit ee83809d8e4d5a04137cc6be717ee27f798b7cd5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 22 16:30:50 2014 +0100

    pool: remove tail tracking in alloc list
    
    The list fully acts like a stack now.

[33mcommit 228d1d39800cd29792da8d6449c85b81d121208a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 22 16:24:02 2014 +0100

    pool: document some of the Pool:: fields.

[33mcommit 4c9f9db7706afa76424693795fe95f2d1f03fbb7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 22 15:32:18 2014 +0100

    pool: update internal counters at the proper time
    
    Only update Pool::outstanding and Pool::allocated in PoolGet when
    we are sure both Alloc and Init were successful.

[33mcommit 3c7f6ed87664ffa463a5a57b6a311248778e80c7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 22 10:59:31 2014 +0100

    stream: improve memcap checking
    
    Only the TcpSegment structure would be checked for fitting in the
    memcap, not the actual data.

[33mcommit feedb4577030f0b4a8bec2edaadc22e728590082[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 22 09:36:28 2014 +0100

    stream: cast memcap checks to uint64_t

[33mcommit a77b9b36e5ae20ee5354baf3a5991bdbcb18cba1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 17 17:01:37 2014 +0100

    app-layer: parser cleanup
    
    Use f->protomap instead of calling FlowGetProtoMapping. Don't use
    TcpSession *ssn ptr for anything other than TCP

[33mcommit 54d64a12376ed91cc6ed57ed39f97ebabe11c8e0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 17 14:58:14 2014 +0100

    detect: use pflow pointer
    
    Use pflow pointer in SigMatchSignatures consistently. Also, when
    needing access to the ipproto, use p->proto, not p->flow->proto.

[33mcommit 634eb1d35cfaddd6449276f52ec6e44f5127eee9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 17 13:49:10 2014 +0100

    app-layer proto detect: optimization
    
    Don't use FlowGetProtoMapping at runtime, use f->protomap instead.
    Add safety check to make sure its value is within range, as it's
    used to index an array.
    
    Update unittests to initialized flows (somewhat).

[33mcommit 4f1f395bb52a4c3ffd6a491a4cc3c9dd57a2bdc8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 17 11:57:51 2014 +0100

    Coverity 1153935: fix confusing sizeof

[33mcommit 1f00ff6ab312114ed9710579e178cc4aa58b8729[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 17 09:55:46 2014 +0100

    App-layer proto detect cleanups
    
    Remove unnecessay inlining.
    Rename functions with wrong naming scheme. E.g. AllocAppLayer.. instead
    of AppLayer..Alloc.
    Use AppProto instead of uint16_t.
    Convert u16 ipproto cases to u8.

[33mcommit 657b83d23827725793d2e3af6f74655c928b016a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 21 14:51:56 2014 +0100

    dns: add event for when memcap is reached
    
    Raise event if state-memcap is reached for a flow.

[33mcommit 9a21a2f64ba1a8f2a74786e83bd805fb1cc74ff2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 21 14:18:37 2014 +0100

    dns: update counters
    
    This patch updates the DNS counters from the main AppLayer entry
    functions. Due to the limited scope of AppLayerThreadCtx some of
    the logic had to be implemented in app-layer.c, where it doesn't
    belong.

[33mcommit 66f764ce7b9d4d310df918f9ed671ebab9338bd5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 21 13:22:48 2014 +0100

    dns: register counters
    
    Register dns memory counters.
    Keep track of memcap reached conditions, and increment counters for
    those.

[33mcommit 09e5ea230ac995db3821d486ad72132ce0574d95[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 21 13:50:38 2014 +0100

    app-layer: update UDP entry function
    
    Update AppLayerHandleUdp to take the ThreadVars pointer as an
    argument in prepraration of handling counters in this function.

[33mcommit 5f307acacec2cb4f2c015a2d79c82a0faebcb4ff[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 21 13:42:10 2014 +0100

    Pass ThreadVars ptr to various thread init funcs
    
    To be able to register counters from AppLayerGetCtxThread, the
    ThreadVars pointer needs to be available in it and thus in it's
    callers:
    
    - AppLayerGetCtxThread
    - DecodeThreadVarsAlloc
    - StreamTcpReassembleInitThreadCtx

[33mcommit b844d4315f95811e706cbe326d40af2b92d5a447[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 21 12:01:07 2014 +0100

    dns: add memcap checking
    
    Add memuse tracking and memcap checking to the DNS parsers. Memuse
    is tracked globally and per flow (state).
    
    Memcaps are also checked per flow and globally before memory allocs
    are done.

[33mcommit 850fac84d679e0c2006a646f63e74ae36de3d41f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 21 10:58:51 2014 +0100

    dns: make DNSTransactionAlloc static

[33mcommit d97e93ea714ecf7c32619cce6ba31d3981718cc5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 21 10:39:50 2014 +0100

    dns: add memcap options
    
    Add per state and global memcap option parsing.

[33mcommit 0130a89d523c9814228c6ffc5ad0fb0e2f11852b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 21 10:27:28 2014 +0100

    dns: fix dns configure code
    
    Yaml layout changed. DNS had to be updated to retrievel value
    for dns flood from the correct location in the config tree.

[33mcommit 80456f3e7d69aabc8d69db02a1ca1c2ed1f736d0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 20 14:06:11 2014 +0100

    Bug 1083 and 1084: add valgrind suppressions
    
    Add suppressions as these are minor issues and likely not bugs in
    Suricata.

[33mcommit 32271bdb66b5d6bee49b9c96c26c144a0532e533[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 20 12:42:59 2014 +0100

    app-layer-ssl: fix unusual memory leak
    
    In some cases the TLS state pointers to subject and issuerdn could
    be overwritten by a new memory allocation, causing us to loose
    track of the old.
    
    This has been observed in the case of improper VLAN handling, where
    it was suspected that multiple unrelated TLS streams were mangled
    together.

[33mcommit 28f14b1ed38ab2bbf987f706bd65d81d75540b38[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 20 10:49:55 2014 +0100

    app-layer-ssl: style fixes
    
    Coding style fixes for TLS handshake parser.

[33mcommit b57ac888f8ee7a87461c77c6d114fd80917c7079[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 20 10:42:12 2014 +0100

    app-layer-ssl: code cleanup
    
    Don't alloc a void ptr and then cast in every operation. Instead,
    alloc a SSLState ptr and only case to void on returning the ptr.

[33mcommit 7d104fde1d7340a489546b46e5593e0d60efd66f[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 20 10:41:28 2014 +0100

    util-device: use safe tailq foreach
    
    The loop is freeing elements so we need to use the safe version
    of TIALQ_FOREACH.
    
    This fixes a valgrind error:
    
     Thread 1 Suricata-Main:
     Invalid read of size 8
        at 0x8E129C: LiveDeviceListClean (util-device.c:167)
        by 0x89B742: main (suricata.c:2284)
      Address 0x8382988 is 24 bytes inside a block of size 40 free'd
        at 0x4C2A70C: free (vg_replace_malloc.c:468)
        by 0x8E1297: LiveDeviceListClean (util-device.c:179)
        by 0x89B742: main (suricata.c:2284)

[33mcommit 84f14438c36e070860cb11b693463f5aea4ed851[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 17 18:58:21 2014 +0100

    Bug 980: fix HTTP memory cleanup at shutdown
    
    Buffers in per thread HTTP header, client body and server body storage
    would be freed based on the usage indicator instead of the size
    indicator.
    
    As the usage indicator (e.g. hsbd_buffers_list_len) could be reset
    while leaving the memory untouched for later reuse, the free function
    would not iterate over all memory blocks.
    
    Removed DrMemory suppressions as well.
    
    Bug #980.

[33mcommit 82a2dd859b07c492ce78ea6e7e4bb876582f1f54[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jan 17 17:43:50 2014 +0100

    af-packet: fix problem introduced in recent commit
    
    Logic of patch 98e4a14f6d59fe8928fd6e2af3d9c3e8b42d00bf was correct
    but implementation is wrong because TP_STATUS_KERNEL is equal to
    zero and thus can not be evaluated in a binary operation. This patch
    updates the logic by doing two tests.
    
    Reported-by: Alessandro Guido

[33mcommit d06a19301210a8296e63aeef19163b180cb8f47f[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sat Jan 11 20:38:40 2014 +0530

    Remove BUG_ON(1) in app layer event second stage preparation function.
    
    This lets us single out and print rules that result in a failure, than
    just post a core dump.

[33mcommit 92a821cdd95bcea440d173c3767ff42546886e55[m
Author: Ken Steele <ken@tilera.com>
Date:   Tue Jan 14 12:38:15 2014 -0500

    Fix make distcheck for Tile
    
    src/Makefile.am was missing util-mpm-ac-tile-small.c which caused
    release tarballs for fail to build on Tile-Gx.

[33mcommit 9952db6d6efe3e3b142d4b1c7d0e60d23bf39dff[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 17 10:18:32 2014 +0100

    Fix crash in AppLayer Proto Detect
    
    The App Proto Detect code would use the wrong pattern count to
    index a results array, leading to SEGVs.
    
    Bug #1080.

[33mcommit 06f9b0adbf08121e9f5c8c75d3d11581ede5333a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 16 14:41:46 2013 +0100

    Cygwin: make configure pass with -Werror

[33mcommit 2eeddf969d01cc6758d108c6bf0f14d641222bfc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 16 13:53:51 2013 +0100

    Cygwin: fix compilation
    
    tm-threads.c:1190:5: error: unknown type name ‘DWORD’

[33mcommit 2f14d1e94e8c1d96c7e8466412a94ed2e45f5b17[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 16 13:29:06 2013 +0100

    Fix compiler warning:
    
    array subscript has type ‘char’ [-Werror=char-subscripts]

[33mcommit e4b39a413ab4bfc1ba7c84b8e01758c7bac1ff19[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 14 14:57:42 2014 +0100

    Fix coccinelle autotools check

[33mcommit 7fb860ac47177eb6ff938a06804ad81808d9a364[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 14 13:41:09 2014 +0100

    coccinelle: add --disable-coccinelle to configure
    
    This allows disabling of the expensive cocci QA checks during
    QA.

[33mcommit 0d280e88d04de065945b4a4b6a80272d8abd052a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 14 13:03:43 2014 +0100

    pool thread: undo CLS alignment
    
    This breaks clang on 32bit.
    
    Test PoolThreadTestGrow01                                         : process killed by signal 11

[33mcommit d5fdfa4bc1ac8a3106746630db7d39a077ef2031[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 14 11:48:25 2014 +0100

    Fix unittest size_t printing on 32bit

[33mcommit 9b736b6b9e4cf0e18041dcc26ffce95df708f55c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 12 13:12:13 2013 +0100

    dns: tag each tx we get a reply for as replied
    
    Also, detect and print when server says recursion is desired.

[33mcommit 2047e72cbeabd5304ebae8381aed40f8b162f7d3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 7 11:41:45 2013 +0100

    DNS: don't store duplicate queries
    
    When an exact duplicate DNS query is received, don't store it in the
    tx.

[33mcommit e1e2ebe2da3dc656fc9ac3a0b6c2dd63c00f4c17[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 7 11:29:22 2013 +0100

    memcmp: convert all pointer arguments to be const pointers, like memcmp itself uses.

[33mcommit a9bf9394410e452935d11cfa385dcfa0aa7c26ea[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 6 14:43:15 2013 +0100

    dns log: cleanups

[33mcommit b2d420bed4f7ca9cf62154cc71dd446d306a19fd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 10 13:02:19 2014 +0100

    app-layer: API calls to check for TX aware proto
    
    Introduce AppLayerParserProtocolIsTxAware which returns 1 if protocol
    is Tx aware, 0 if not.

[33mcommit bc29684df42d3e0fd2339dfa54dd0f0203ecd752[m
Author: Ken Steele <ken@tilera.com>
Date:   Fri Jan 10 12:36:02 2014 -0500

    Remove GCC -no-strict-aliasing compiler flag.
    
    GCC typically generates better code without the -no-strict-aliasing flag.
    It is only required if code makes assumptiosn that break strict aliasing.
    The unit tests pass on x86 and Tile without the flag.

[33mcommit 1f99096b30eb61e03f945f133f959dd7b2d5f821[m
Author: Ken Steele <ken@tilera.com>
Date:   Fri Jan 10 10:40:52 2014 -0500

    Fix PmqSetup() argument removal in ac-tile MPM unit tests.
    
    Needed to remove the second argument from all the calls, which was always 0
    and was removed in other tests in a previous checkin.

[33mcommit 399246881daaf117b68fbd4fdfe4c82a32f67ef8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 19 21:14:06 2013 +0100

    counters: fix 2 scan-build warnings
    
    counters.c:1069:13: warning: Potential leak of memory pointed to by 'temp'
                SCMutexUnlock(&sc_perf_op_ctx->pctmi_lock);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ./threads.h:121:28: note: expanded from macro 'SCMutexUnlock'
                               ^~~~~~~~~~~~~~~~~~~~
    counters.c:1156:16: warning: Potential leak of memory pointed to by 'pca'
            return NULL;
                   ^~~~
    /usr/include/clang/3.3/include/stddef.h:77:24: note: expanded from macro 'NULL'
                           ^
    2 warnings generated.

[33mcommit 2c857087fb212dabc35e08135ec31b31fcd63581[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 9 17:41:22 2013 +0100

    app-layer: configurable GetActiveTxId function
    
    In preparation of a patchset that will allow for disabling the detect
    module, this patch introduces a way to register a function for getting
    the lowest active tx id. This is used by the app layer for cleaning up
    transactions that already fully inspected, and by the flow timeout code
    to determine if a flow is fully inspected and logged at timeout.
    
    The registration function RegisterAppLayerGetActiveTxIdFunc allows for
    registration of a custom function of type:
      uint64_t (*GetActiveTxIdFunc)(Flow *f, uint8_t flags);
    
    If no function is called, AppLayerTransactionGetActiveDetectLog is used,
    which implements the existing behaviour of considering both the
    inspect_id's and the log_id.

[33mcommit c06c595c56eecd061134940960dcf4f2a403b73a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 9 15:56:43 2013 +0100

    Clean up TX clean up
    
    In AppLayerTransactionsCleanup instead of figuring out 'done' tx id's
    itself, now call AppLayerTransactionGetActive for both directions to
    figure out the completed TX id's.

[33mcommit 6e389a1fbbd179f77eb46bfb7660555052333255[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 18 09:14:20 2013 +0100

    stream: don't send empty streammsg at stream end
    
    No longer send an empty StreamMsg through the engine on stream end,
    the messages were ignored anyway.

[33mcommit eb1f5ce35834a162a74993dcb3554dae45d903d6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 17 20:56:58 2013 +0100

    stream: increase max StreamMsg data
    
    Increase from 4024 bytes to 4072 to make the whole structure
    4096 again.

[33mcommit c801ef3515c03b783c0534cf1b8fc9bbc2185c80[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 17 20:52:38 2013 +0100

    stream: remove flags from StreamMsg

[33mcommit 261881fce23ab5a4f19a60ad1e15339793f755bb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 17 16:57:48 2013 +0100

    stream: remove per thread queue for stream msgs
    
    StreamMsgs would be stored in a per thread queue before being
    attached to the tcp ssn. This is unnecessary, so this patch
    removes this queue and puts the smsgs into the ssn directly.
    
    Large patch as it affects a lot of tests.

[33mcommit b159c1714c615911b76bf4a6589594487e6cba02[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 17 16:33:26 2013 +0100

    stream: remove flow reference from StreamMsg
    
    StreamMsg' flow reference was used mostly to make sure a flow would
    not get removed from the hash before inspection. For this it needed
    to reference the flow use_cnt reference counter. Nowadays we have
    more advanced flow timeout handling. This will make sure that if
    there still are pending smsgs' in a flow, these will still be
    processed.

[33mcommit 1d08a3ff26bb4af70db11d3246c563489b76dfe7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 17 16:19:16 2013 +0100

    stream: pass TcpSession to StreamTcpReassembleProcessAppLayer
    
    Preparation for removing flow pointer from StreamMsg. Instead of
    getting the ssn indirectly through StreamMsg->flow, we pass it
    directly as all callers have it already.

[33mcommit 0ec375d95a93d01a665c08a56c0979392a4c9997[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 17 15:54:09 2013 +0100

    stream msg: remove structure

[33mcommit 5ca0139cbc6c6cfb7dc5f09fe2558bd1616b420a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 17 15:28:47 2013 +0100

    stream: remove unused gap structure from StreamMsg.

[33mcommit 3804f3f1b3fe1a0fa6e39af6bbfefd2dbc4f2235[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 17 15:24:44 2013 +0100

    stream: no longer process STREAM_GAP smsgs
    
    StreamSmgs are used for raw stream reassembly only. They could also
    be used to tell the rest of the engine about sequence gaps. This was
    a left over from the older implementation, where the app layer used
    the smsgs as well.

[33mcommit 5850607fea4cdd9a019b370cbf8891f272b5691a[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Fri Dec 6 13:38:26 2013 -0600

    Remove the old include support.

[33mcommit 3a9a14711a476138e3097d8d9bc8e93335a3cd9b[m
Author: Ken Steele <ken@tilera.com>
Date:   Wed Jan 8 12:16:00 2014 -0500

    Correct coding style in decode-ethernet.c
    
    This file is given as the example of correct coding style, so make sure it
    follows the coding standard.

[33mcommit 7561da4b8741744825ebe525d529d42c56a7e3fc[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Dec 16 13:41:39 2013 +0100

    debug: default logging level is notice
    
    Update the string in message because default logging level is
    now notice and not info.

[33mcommit d6932f90db2708af6162fc3824e6353c66f8d256[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Dec 16 11:58:47 2013 +0100

    doxygen: document some functions

[33mcommit 1512d43decac4925d11ba790b204354f28733173[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Dec 16 11:44:25 2013 +0100

    doxygen: document all code
    
    This patch update doxygen configuration to have all possible functions
    documented (even the one without doxygen formated comments). It can be
    really useful to have that in case we are trying to get some information
    on call graph for example.

[33mcommit d2fe3682000091398ac6d4a26308679d3482a1f7[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Dec 16 11:39:45 2013 +0100

    doxygen: add profiling to generated doc.
    
    Profiling code needs the PROFILING define to be documented.

[33mcommit e5e390a0c624ef0d030abb9c594775b55d958e1d[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Dec 16 11:38:33 2013 +0100

    Add missing UNITTESTS
    
    There is no need for test functions to be build in normal code.

[33mcommit 98e4a14f6d59fe8928fd6e2af3d9c3e8b42d00bf[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Dec 18 19:46:10 2013 +0100

    af-packet: update packet reading loop logic
    
    This patch updates the logic of the packet acquisition loop. When
    the reader loop function is called and when the data to read
    at offset is a without data (kernel) or still used by suricata. We
    try to iter for a loop on the ring to try to find kernel put by
    data.
    As we are entering the function because the poll said there was some
    data. This allow us to jump to the data added to the ring by the
    kernel.
    When using suricata in autofp mode, with multiple detect threads and
    packet acquisition threads attached to a dedicated CPU, the reader
    loop function was looping really fast because poll call was returning
    immediatly because we did read the data available.

[33mcommit 55108167e51ab4effb4985a63fee570c215ff9e8[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Dec 19 15:18:46 2013 +0100

    prscript: add --norebase option
    
    If --norebase option is provided, the prscript will start a build
    that can be used to check if an out-of-sync branch pass the test.

[33mcommit 4d6b48ea9ed4660111dd3100bc245584a1d99ba1[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Dec 30 17:29:46 2013 +0100

    htp layer: add memory cap counter
    
    This patch adds a memcap counter for HTP memory usage. Counter
    is increased each time an allocation is not done due to the memcap.

[33mcommit d6d8a08a8f9770f66e2984fb39371f96c1edff51[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Dec 30 16:14:54 2013 +0100

    htp layer: add memory usage counter
    
    This patch adds a memory counter for HTP memory usage. As
    there is no thread variables available in application layer
    the counter has been added to the TCP reassembly thread.

[33mcommit ced01da822d0a2e502f191293dc09c5a236b8800[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Dec 30 11:06:22 2013 +0100

    htp layer: use memcap for HTTP related allocations
    
    This patch introduces wrapper functions around allocation functions
    to be able to have a global HTP memcap. A simple subsitution of
    function was not enough because allocated size needed to be known
    during freeing and reallocation.
    
    The value of the memcap can be set in the YAML and is left by default
    to unlimited (0) to avoid any surprise to users.

[33mcommit ba4758d033d13b5ce8fe6f630a5c1e1bcf5e7dd0[m
Author: Ken Steele <ken@tilera.com>
Date:   Wed Jan 8 10:46:04 2014 -0500

    Port unittest from bug #970 for util-mpm-ac.c to util-mpm-ac-tile.c
    
    Passes on ac-tile too.

[33mcommit 326d5d3e15eb98335e96ba17b5c44ebd65e83d34[m
Author: Ken Steele <ken@tilera.com>
Date:   Wed Dec 18 11:16:54 2013 -0500

    Add 8-bit states to ac-tile
    
    When running with sgh-mpm-context: full, many more MPMs are created
    (16K) and many are small. If they have less than 128 states, they only
    need 1 byte for the next state instead of 2 bytes, cutting the size of
    the next-state table in half. This reduces total memory usage.
    
    Since that makes 3 different state sizes (1, 2 and 4 bytes), rather
    than going from 2 copies of the code to create the MPM to 3, I
    factored out the code that fills the next-state table into three
    functions so that all the other code could be the same.
    
    The search function is now parameterize for 8-bit and 16-bit state
    sizes and alphabet sizes 8, 16, 32, 64, 128 and 256.

[33mcommit c115e63dc2727e3220eb5c040bc9b07735a625a2[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Dec 31 16:09:43 2013 +0100

    pfring: fix live device counter usage
    
    Live device counter was in fact the number of packets seen by suricata
    and not the total number of packet reported by pfring. This patch fixes
    this by using counter provided by kernel instead.
    
    Pfring kernel counter is per socket and is not cleared after read.
    So to get the number of packet on the interface we can add the new
    value for this thread and add it to the interface counter.

[33mcommit 1869688fb8b3577d224ee3651827bde894000d3e[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Dec 31 16:13:50 2013 +0100

    af-packet: fix live device counter usage
    
    Live device counter was in fact the number of packets seen by suricata
    and not the total number of packet reported by kernel. This patch fixes
    this by using counter provided by kernel instead.
    The counter is Clear On Read, so by adding the value fetch at each call
    and earch sockets we get the number of packets and drops for the
    interface.

[33mcommit afbb2eb32b40e51496bbbd100466d02735f86485[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Dec 31 15:09:10 2013 +0100

    capture: display exit stats at default verbosity
    
    This patch updates capture modes not using LiveDecice counters
    to display per-thread exit statistics with default verbosity.

[33mcommit a8c787a2658a27bd8e920dd234870b2dbde82b75[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Dec 31 15:04:33 2013 +0100

    device list: clean and display stat at exit
    
    This patch adds a cleaning function to device list. This also
    permits to display per-interface statistics during the exit.

[33mcommit aa6b5b406d65a6f3e63422071eb7623868adfa25[m
Author: Duarte Silva <development@serializing.me>
Date:   Thu Dec 19 14:07:30 2013 +0000

    Fix the segmentation fault while logging the host on the custom HTTP logger.
    - Seems to be a regression introduced in the commit
      796bfab2317699779bb0d7dca257bb97083399d8 (fix was already done in commit
      ee0b21652b00f9398869b097c3ddceb9f86600a9)
    - Doesn't happen with htplib v0.5.6, but it does in the latest, v0.5.9

[33mcommit 7cc87bc02a80f33250db610026ddbce45fc554fd[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Dec 20 10:23:39 2013 +0100

    coccinelle: protecting regexp operator is not needed
    
    It seems there was an evolution of coccinelle and the protection
    of regexp is not necessary anymore. And doing it causing the
    expression not to match.

[33mcommit 8a5a30ba40d6c8e65a3c76e20e1494af50003a84[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Dec 20 10:22:25 2013 +0100

    fix size_t printing
    
    This two problem were found by the new version of the size_t cocci
    test.

[33mcommit 446e68adca0aaebc23bb3a6bc78f4ecaba6d3737[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 10 10:15:48 2014 +0100

    app-layer: only typedef opaque pointers once

[33mcommit 3b8e9ffbe910997836d5fa2b0c84be0a06853183[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 9 16:40:59 2014 +0100

    app layer: void -> AppLayerProtoDetectThreadCtx
    
    User AppLayerProtoDetectThreadCtx ptr instead of void.

[33mcommit 8dbf7a0d78607efcd48ab55f22253ceb8b4f7637[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 9 16:20:21 2014 +0100

    Update tests to use AppLayerParserThreadCtx ptr instead of void. Fix a few bugs uncovered by this.

[33mcommit 9634e60e7af5f0f08c5e884eb2cf33f28120e30f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 9 15:10:37 2014 +0100

    app-layer: Use opaque pointers instead of void
    
    For AppLayerThreadCtx, AppLayerParserState, AppLayerParserThreadCtx
    and AppLayerProtoDetectThreadCtx, use opaque pointers instead of
    void pointers.
    
    AppLayerParserState is declared in flow.h as it's part of the Flow
    structure.
    
    AppLayerThreadCtx is declared in decode.h, as it's part of the
    DecodeThreadVars structure.

[33mcommit c7ae662d260c9c8bb7dcb66ab33b1e53df6f771a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 9 12:40:08 2014 +0100

    Fix HTPBodyReassemblyTest01 Asan error
    
    Fix improper pointer assignment in HTPBodyReassemblyTest01, causing
    ASAN to error out.

[33mcommit fdefb65be47facc21036ad2f348c519e110a4f60[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 9 12:13:03 2014 +0100

    app-layer: rename AppLayerThreadCtx funcs
    
    AppLayerParserGetCtxThread -> AppLayerParserThreadCtxAlloc
    AppLayerParserDestroyCtxThread -> AppLayerParserThreadCtxFree

[33mcommit 0bac43a1cab9d39060e68448b06d88160e889f77[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 9 11:52:46 2014 +0100

    app layer: fix memory leak
    
    Actually free the ctx in AppLayerParserDestroyCtxThread

[33mcommit f5f148805c1b47231bd1e921eebee883a520a214[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 9 11:32:40 2014 +0100

    app layer: uint16_t alproto -> AppProto alproto
    
    This conversion was missing in a couple of places.

[33mcommit 5cdeadb33d34ad1a08078e8e1ad51a49ba7b7cce[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 9 11:19:58 2014 +0100

    Use u8 for ipproto
    
    In a few places in app layer and unittests u16 was used.

[33mcommit 8527b8e08ef2fcbde5c64301b13a1bff6dcb1a6a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 9 11:06:59 2014 +0100

    App Layer: cleanup state func naming
    
    Rename functions related to AppLayerState to be more consistent.

[33mcommit 30f16ee446313491234ab09ac73c4d5b659f764b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 9 10:41:22 2014 +0100

    Rename AppLayerProtoDetectCtxThread -> AppLayerProtoDetectThreadCtx

[33mcommit cd0627cd39926f9c635726025a394571ba0ea370[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 9 10:38:12 2014 +0100

    Rename AppLayerParserParserState -> AppLayerParserState

[33mcommit c23742a0a73030d46610ab74789fb021ed176929[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 9 10:33:54 2014 +0100

    Rename AppLayerParserpCtx -> AppLayerParserProtoCtx

[33mcommit 72a16459794389748ecdab185fd694689547d095[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 9 10:28:34 2014 +0100

    Rename AppLayerParserCtxThread -> AppLayerParserThreadCtx

[33mcommit ac77cd790f788920d4c094759655498b79d459b1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 9 10:25:33 2014 +0100

    Rename AppLayerCtxThread -> AppLayerThreadCtx

[33mcommit e111401c10ec1e5d3d7971e283aca448a442446c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 9 10:10:19 2014 +0100

    detect unittests: clang build fix and cleanups
    
    A number of unittests would lead to clang build errors because
    of unsafe det_ctx ptr usage. This patch fixes these and inits
    det_ctx to NULL in the other detect tests.

[33mcommit e2f7226569c67ad8aaca83dfe84b4211a42969c1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 8 18:43:48 2014 +0100

    App Layer: fix memory leaks
    
    Call FlowCleanupAppLayer before setting f->proto to 0, as the former
    bails out without doing anything if proto is 0.

[33mcommit 67053e6ed000b6c9d8cbebd8f6fee8f4fb1824c0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 8 18:10:16 2014 +0100

    Fix AppLayerProtoDetectPMFreeSignature related valgrind errors

[33mcommit ff16d6fa53033890145c0bd0abc75c54972beae5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 8 17:20:58 2014 +0100

    app proto detect: fix valgrind test warnings
    
    Only in unittests when debug is enabled would valgrind warn about
    a print statement.

[33mcommit a456bd81819f4a10b6fee9c1be599f3f09faf752[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 8 17:05:04 2014 +0100

    Cleanup and fix scan-build warning
    
    Add comments and slightly refactor to make function more understandable
    and fix a scan-build warning too.

[33mcommit 8801585f10782152c7d246236e8a113d42e74802[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 8 17:04:49 2014 +0100

    scan-build fixes

[33mcommit 106e1c7d19ebd2cafdacdffcba234ffcf6afb030[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 8 16:11:43 2014 +0100

    profiling: fix compilation
    
    Stream engine can't access app layer proto detection datatypes
    anymore, so moved some of the logic into app-layer.c

[33mcommit 1cbd1cdf362ce1644bf40a109ff6955df5af08c6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 8 16:11:21 2014 +0100

    compile fixes

[33mcommit 59327e0fd4191540ef3ae6d4910ac79eb0f0b785[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 8 16:10:26 2014 +0100

    Various style fixes

[33mcommit 429c6388f6c901174cce64b5eed383d52b525dcb[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Tue Dec 24 15:30:57 2013 +0530

    App layer API rewritten.  The main files in question are:
    app-layer.[ch], app-layer-detect-proto.[ch] and app-layer-parser.[ch].
    
    Things addressed in this commit:
    - Brings out a proper separation between protocol detection phase and the
      parser phase.
    - The dns app layer now is registered such that we don't use "dnstcp" and
      "dnsudp" in the rules.  A user who previously wrote a rule like this -
    
      "alert dnstcp....." or
      "alert dnsudp....."
    
      would now have to use,
    
      alert dns (ipproto:tcp;) or
      alert udp (app-layer-protocol:dns;) or
      alert ip (ipproto:udp; app-layer-protocol:dns;)
    
      The same rules extend to other another such protocol, dcerpc.
    - The app layer parser api now takes in the ipproto while registering
      callbacks.
    - The app inspection/detection engine also takes an ipproto.
    - All app layer parser functions now take direction as STREAM_TOSERVER or
      STREAM_TOCLIENT, as opposed to 0 or 1, which was taken by some of the
      functions.
    - FlowInitialize() and FlowRecycle() now resets proto to 0.  This is
      needed by unittests, which would try to clean the flow, and that would
      call the api, AppLayerParserCleanupParserState(), which would try to
      clean the app state, but the app layer now needs an ipproto to figure
      out which api to internally call to clean the state, and if the ipproto
      is 0, it would return without trying to clean the state.
    - A lot of unittests are now updated where if they are using a flow and
      they need to use the app layer, we would set a flow ipproto.
    - The "app-layer" section in the yaml conf has also been updated as well.

[33mcommit 127ef8f903f2f0cf9101c7992d3aa7e3dcbb6bee[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri Dec 6 17:21:57 2013 +0530

    Use a typdef AppProto <-> uint16_t for representing app layer protocol.
    
    Some minor refactoring/cleanup, including renaming functions.

[33mcommit abded4200a39c28e9adaa352eb9d2bd66a3aa271[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Wed Oct 23 11:25:46 2013 +0530

    Disabling the ssh parser temporarily, since we are moving away from some
    of the archaic features we use in the app layer. We will reintroduce this
    parser shortly. Also do note that keywords that rely on the ssh parser
    would now be disabled.

[33mcommit d3d745d515d30da5553c725bf5ea6d751fc4af57[m[33m ([m[1;33mtag: suricata-2.0beta2[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 18 14:01:28 2013 +0100

    Update Changelog for 2.0beta2

[33mcommit b955ca7b867d0f7d45a365526c1fc568ea50cc5f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 18 12:23:50 2013 +0100

    conf: fix potential use-after-free on error
    
    Coverity 1139544
    
    If strdup would fail, 'node' was freed but it wasn't set to NULL. The
    code then returned node. The caller would not detect there was an error
    and use the freed pointer.

[33mcommit 3714925d2bfc37387fd92f115529f0d6edc1ce44[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 18 12:17:56 2013 +0100

    stream: fix potential memory loss on error
    
    Coverity 1139543.
    
    If StreamTcpPseudoPacket would be called with len == 0, the packet
    it acquired before checking the len value would be lost.

[33mcommit 1cce207c0502c4122282db366c54ed95bbd342b2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 13 12:50:43 2013 +0100

    Revert TmqhFlowMode alignment as it breaks on CLANG

[33mcommit 9874c1a83b511338ee9b9825327d92d754d06d3b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 13 12:20:00 2013 +0100

    realloc error handling: remove unnecessary else branch

[33mcommit 1fbaebad63c10ade0d5d445dac12104d10303488[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Dec 12 13:34:54 2013 +0100

    coccinelle: add test on realloc
    
    If we use SCRealloc like:
     x = SCRealloc(x, ...)
    then in case of failure we are loosing the original pointer value
    and the memory is lost and can not be free.
    
    This test just check for this construction and output an error if
    it finds it.

[33mcommit 1f07d1521ebf5ac0a46490c3c614e49546fc2d51[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Dec 12 13:10:01 2013 +0100

    Fix realloc error handling
    
    This patch is fixing realloc error handling. In case of a realloc
    failure, it free the initial memory and continue existing error
    handling.
    
    The patch has been obtained via the following semantic patch and
    a bit oh hand editing:
    
    @@
    expression x, E;
    identifier f;
    @@
    
    f(...)
    {
    + void *ptmp;
    <+...
    - x = SCRealloc(x, E);
    + ptmp = SCRealloc(x, E);
    ... when != x
    - if (x == NULL)
    + if (ptmp == NULL)
    {
    + SCFree(x);
    + x = NULL;
    ...
    - }
    + } else {
    +     x = ptmp;
    + }
    ...+>
    }
    
    @@
    expression x, E;
    identifier f;
    statement ES;
    @@
    
    f(...) {
    + void *ptmp;
    
    <+...
    - x = SCRealloc(x, E);
    + ptmp = SCRealloc(x, E);
    ... when != x
    - if (x == NULL) ES
    + if (ptmp == NULL) {
    + SCFree(x);
    + x = NULL;
    + ES
    + } else {
    +     x = ptmp;
    + }
    ...+>
    
    }
    
    @@
    expression x, E;
    identifier f;
    @@
    
    f(...)
    {
    + void *ptmp;
    <+...
    - x = SCRealloc(x, E);
    + ptmp = SCRealloc(x, E);
    ... when != x
    - if (unlikely(x == NULL))
    + if (unlikely(ptmp == NULL))
    {
    + SCFree(x);
    + x = NULL;
    ...
    - }
    + } else {
    +     x = ptmp;
    + }
    ...+>
    }
    
    @@
    expression x, E;
    identifier f;
    statement ES;
    @@
    
    f(...) {
    + void *ptmp;
    
    <+...
    - x = SCRealloc(x, E);
    + ptmp = SCRealloc(x, E);
    ... when != x
    - if (unlikely(x == NULL)) ES
    + if (unlikely(ptmp == NULL)) {
    + SCFree(x);
    + x = NULL;
    + ES
    + } else {
    +     x = ptmp;
    + }
    ...+>
    
    }

[33mcommit 5e1f1ee4ffd4987d83e474757dda0f638e1a8897[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 12 17:01:49 2013 +0100

    Fix filemagic unittests on OS_DARWIN

[33mcommit d12834769a32b410543a1c2202274177499b56ef[m
Author: Ken Steele <ken@tilera.com>
Date:   Sat Nov 16 11:13:42 2013 -0500

    Add const for Packet * in flow functions.
    
    By moving FlowReference() out of FlowGetFlowFromHash() and into the one
    function that calls it, all the flow functions take const Packet * instead
    of Packet *.

[33mcommit 8ba0fa7f92d01361baa1d3ed7c62d7a5a0c52b67[m
Author: Giuseppe Longo <giuseppelng@gmail.com>
Date:   Thu Dec 12 23:03:42 2013 +0100

    defrag-config: fix a bug
    
    A ptr to local var is stored in the radix tree currently,
    this patch permits to alloc space to store host timeout
    and thus also free it when data is removed.

[33mcommit de22d6cf02408003b42e2fad7604c8af6fe12f4d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 12 19:28:22 2013 +0100

    defrag: fix compiler warning
    
    defrag-config.c: In function 'DefragParseParameters':
    defrag-config.c:105: warning: passing argument 2 of 'DefragPolicyAddHostInfo' from incompatible pointer type
    make[3]: *** [defrag-config.o] Error 1

[33mcommit 2913a4a86084441a2e9504bcd32a373f15aa65a9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 11 13:26:55 2013 +0100

    debug: fix realloc error checking on flowbit print
    
    detect.c:1074:17: warning: Potential leak of memory pointed to by \
                                    field 'debuglog_flowbits_names'
                    return;
    
    Bug #1062.

[33mcommit b605ee6fb24458b2001cb4d4a392b2b3f43e90aa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 11 11:00:41 2013 +0100

    DER decoding: fix potential memory leak
    
    This would only happen in memory failure conditions.
    
    util-decode-der.c:634:27: warning: Potential leak of memory pointed to by 'child'
        return (Asn1Generic *)node;

[33mcommit 2f094ca136be61af458c43d7e46ffaac19f30ef3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 11 10:35:41 2013 +0100

    detect-ssl: suppress harmless scan-build warning
    
    detect-ssl-version.c:271:17: warning: Value stored to 'neg' is never read
                    neg = 0;

[33mcommit 1252ee3f0423390d2feaf2abaf0134bc9ba2179d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 11 10:33:15 2013 +0100

    stream: suppress minor scan-build warnings
    
    stream-tcp-reassemble.c:2569:17: warning: Value stored to 'seg' is never read
                    seg = seg->next;
                    ^     ~~~~~~~~~
    stream-tcp-reassemble.c:2587:17: warning: Value stored to 'seg' is never read
                    seg = seg->next;

[33mcommit 9d092f35e2fe1206e027edb3211228a39960d04d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 11 10:31:27 2013 +0100

    dns: suppress minor scan-build warnings
    
    These were only used if debug is enabled.
    
    app-layer-dns-tcp.c:407:13: warning: Value stored to 'length' is never read
                length = *data;
    app-layer-dns-udp.c:236:13: warning: Value stored to 'length' is never read
                length = *data;

[33mcommit 6ac30ae468850ff369c3734b42ca14dae64f087a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 11 10:29:19 2013 +0100

    dns: suppress harmless cppcheck warning
    
    [src/app-layer-dns-common.c:273]: (warning) Assignment of function \
                            parameter has no effect outside the function.

[33mcommit 66c6c069166bee3b008ebd8da8e328a242096745[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 11 10:13:02 2013 +0100

    http: clear header pointer on realloc failure
    
    Fixes:
    
    detect-engine-hhd.c:188:5: warning: Use of memory after it is freed
        return headers_buffer;

[33mcommit 7ea13f0f53796401b1ad9d9d7921c3bb68c6bfd5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 11 10:11:13 2013 +0100

    dns: fix passing NULL to memcpy
    
    app-layer-dns-common.c:401:5: warning: Null pointer passed as \
                                  an argument to a 'nonnull' parameter
        memcpy(ptr, fqdn, fqdn_len);

[33mcommit 6709fdd8cf4c01146f9cf83c64a1f7efa363fd90[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 11 09:44:42 2013 +0100

    log-http: fix compiler warning
    
    log-httplog.c:180: warning: 'cvalue' may be used uninitialized in \
    this function

[33mcommit 31a94cd4cb9c909b856db3a4c9fb041e37cc0fb5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 11 09:35:41 2013 +0100

    defrag: pass u64 to ParseU64
    
    Fixes: defrag-config.c:97: warning: passing argument 2 \
           of 'ParseSizeStringU64' from incompatible pointer type

[33mcommit 12ab6f3ab46d08bd5fd190ff562a0bb200c8c16a[m
Author: Ken Steele <ken@tilera.com>
Date:   Wed Dec 11 09:48:50 2013 -0500

    Fix uninitialized variable warning.
    
    These two lines reported warnings with -Werror -O3 on Tile.

[33mcommit 882d98733fb7f267d7d022c671b9c9a6c9a55c7a[m
Author: Ken Steele <ken@tilera.com>
Date:   Mon Nov 11 13:11:39 2013 -0500

    Fix pfring so that zero-copy mode can work.
    
    Detect when default_packet_size is zero, which enables zero-copy mode for
    pfring and in that case, do what AF Packet does and set pkt_ext pointer to
    the data and set PKT_ZERO_COPY flag.

[33mcommit f9705377ae9ba88a0563a4984561abfaddf14074[m
Author: Ken Steele <ken@tilera.com>
Date:   Mon Nov 11 11:58:31 2013 -0500

    Remove pkt variable from Packet structure.
    
    The uint8_t *pkt in the Packet structure always points to the memory
    immediately following the Packet structure. It is better to simply
    calculate that value every time than store the 8 byte pointer.

[33mcommit 3870def6016b7d24dec8b37557229f49a9bf427c[m
Author: Ken Steele <ken@tilera.com>
Date:   Wed Nov 13 14:16:21 2013 -0500

    Split AC-Tile MPM context into Search and Initialization structures.
    
    Some of the fields in the SCACTileCtx struct are only used to create the MPM,
    but are not needed to search the MPM. Create a new structure to contain just
    the data needed by AC Search. After creating the MPM, copy the data into the
    new structure and then free the memory only needed during initialization.
    
    This reduces the size of the AC-Tile MPM context from 1360 bytes down to 296
    bytes.

[33mcommit b61552482c0b813386c701559a9711bfe3a5f406[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 11 11:53:08 2013 +0100

    mpipe code cleanup: indent fixes

[33mcommit 300b739b1fdc579ef05d265ed9fce0d52c1786ab[m
Author: Ken Steele <ken@tilera.com>
Date:   Fri Nov 22 15:53:12 2013 -0500

    Add more suricata.yaml configuration options for mPIPE.
    
    Add two new mPIPE load-balancing configuration options in suricata.yaml.
    1) "sticky" which keep sending flows to one CPU, but if that queue is full,
    don't drop the packet, move the flow to the least loaded queue.
    2) Round-robin, which always picks the least full input queue for each
    packet.
    
    Allow configuring the number of packets in the input queue (iqueue) in
    suricata.yaml.
    
    For the mPipe.buckets configuration, which must be a power of 2, round
    up to the next power of two, rather than report an error.
    
    Added mpipe.min-buckets, which defaults to 256, so if the requested number
    of buckets can't be allocated, Suricata will keep dividing by 2 until either
    it succeeds in allocating buckets, or reaches the minimum number of buckets
    and fails.

[33mcommit f0c785cc1dfbf67bdf579eb0585d4cdf4d63f2b8[m
Author: Ken Steele <ken@tilera.com>
Date:   Tue Nov 19 10:22:40 2013 -0500

    Fix configuring Prelude with -Werror
    
    Running with:
    
    CFLAGS="-Werror" ./configure
    
    would fail when configuring libprelude because of an unused-result
    warning. Ignore that one warning.

[33mcommit 5a1bc025e59e63d96f73320178fb9d98fcd1c153[m
Author: Ken Steele <ken@tilera.com>
Date:   Tue Dec 10 15:14:49 2013 -0500

    Mark pflow as a constant pointer.
    
    Address review comment from Victor that the pflow pointer is constant, so
    it can be marked as such.

[33mcommit bee24d89094eb7f74e036a785b5597268b51ccb6[m
Author: Ken Steele <ken@tilera.com>
Date:   Sun Nov 17 09:43:00 2013 -0500

    Use pflow variable in place of p->flow to prevent reloading.
    
    In SigMatchSignatures, the value p->flow doens't change, but GCC can't
    figure that out, so it reloads p->flow many times during the function.
    When p->flow is loaded into the variable pflow once at the start of the
    function, the compile then doesn't need to reload it.

[33mcommit a75911e02fdb3295d1545b30eef178d057fb2ab8[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Dec 11 09:25:39 2013 +0000

    pfring: workaround potential librt deps
    
    It seems some version of pfring needs to be link with librt.

[33mcommit 58eb6428d1e7ad12d4072e5072f3a3b13bc09767[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Dec 11 09:26:18 2013 +0100

    suricata: ignore SIGHUP signal
    
    This patch ignores the SIGHUP signal instead of having the default
    behavior.

[33mcommit 3d81e50ab3d715a5e347fcdbd3b16272cff1f2bd[m
Author: Ken Steele <ken@tilera.com>
Date:   Fri Nov 22 12:54:32 2013 -0500

    Check for compiler for -march=native support
    
    Check all compilers to see if they support the -march=native flags, rather
    than assuming gcc 4.2 or later does. Tile GCC doesn't currently support it,
    so not checking break Tile compiles.

[33mcommit 4fdd1a7a7168225d2d70b437b741ff3d2d93bca4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 10 12:05:17 2013 +0100

    Fix compilation on systems that use the fallback SC_ATOMIC_ API.

[33mcommit 01c440bf28c90a8d4287e2c431deaf602e45d74d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 10 11:45:24 2013 +0100

    Add DrMemory suppression for Bug #980. Suppress useless (likely) buggy leak message too

[33mcommit 1509c9a2e63e6964c09b80afb0aec2288548892c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 10 11:43:32 2013 +0100

    Remove DrMemory suppressions for Bug #979, it is fixed.

[33mcommit 5a7ad5b3820becbda79769702dd584c61bdbfdcb[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Dec 10 10:36:50 2013 +0100

    qa: prscript now output pastable line for PR.

[33mcommit a597237aedadd251db9303a55e6550d72f368157[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Dec 9 17:02:55 2013 +0100

    coccinelle: fix malloc test
    
    We can have more than an identifier to be assigned the result of
    a malloc function.

[33mcommit 6378db89f6aa12ecba6635c3492eb5e5cceb3ae0[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Dec 9 18:18:30 2013 +0100

    coccinelle: add option to continue on errors
    
    When a script has been updated or introduced, it is interesting to
    detect all errors at once. With this patch it is now possible to
    do so by using:
       NOT_TERMINAL=1 CONCURRENCY_LEVEL=12  qa/coccinelle/run_check.sh

[33mcommit 28c5c68192f1b08a20e8e9c0b5080ad888116ed8[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Dec 9 18:58:32 2013 +0100

    error checking: add missing alloc error treatment
    
    The return of some malloc like functions was not treated in some
    places of the code.

[33mcommit f6e37dcc90963a944493bea835f22af7b6329bb2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 10 09:30:48 2013 +0100

    Bug 1061: fix multiple vars per sig in ordering
    
    In sigordering rules that had multiple vars doing the same operation,
    like setting multiple flowbits, would not be considered correctly.
    
    Bug 1061.

[33mcommit b770fd2981a26e8eb0ab01ace0a6755548155102[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 9 23:21:20 2013 +0100

    http header: improve realloc failure checking. Bug #1062.

[33mcommit 90cf8d4c6e05a5c066696931ede7b1d75d9840e5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 9 23:07:16 2013 +0100

    port parsing: improve memory handling

[33mcommit b79b2fff25be93e262d2e55d02071e577ba41803[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 9 23:06:40 2013 +0100

    cppcheck: add special BUG_ON so cppcheck understands we exit

[33mcommit d5db0cc033f05861efd53bd02e4de4b871761557[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 9 21:19:11 2013 +0100

    port: don't lead memory on port parsing failure
    
    [src/detect-engine-port.c:1354]: (error) Memory leak: gh

[33mcommit 435f99409f6eedfc8093d598ff4a0ebbcecacbb2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 9 21:15:22 2013 +0100

    Fix small memleak in runmode setup
    
    [src/runmodes.c:338]: (error) Memory leak: custom_mode

[33mcommit 86aad660a247d1475729bf22e44fd56a328709a4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 9 21:09:36 2013 +0100

    threading setup: fix small mem leak on failure
    
    [src/tm-threads.c:1058]: (error) Memory leak: slot

[33mcommit b4631794a85ca478ede81281107a4fea70bed59a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 9 21:03:44 2013 +0100

    Fix realloc error handling in threshold.config file parsing. Bug #1062.

[33mcommit 35298a01463bae55f1b0de1f464db322f360058d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 9 20:57:02 2013 +0100

    Use %u for unsigned int in (console) output

[33mcommit a9d754c23d220533eee02d8fd32635ac6b1c68fa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 9 20:55:41 2013 +0100

    Use %u for unsigned ints in checksum warning

[33mcommit 76d3cb557b46c63b8cdfe87289f34364130eec52[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 9 19:02:42 2013 +0100

    htp: minor cleanup to silence cppcheck warning
    
    [src/app-layer-htp.c:1967] -> [src/app-layer-htp.c:1978]: (warning) \
        Possible null pointer dereference: tx - otherwise it is redundant \
        to check it against null.

[33mcommit 5ba898b738e1fc085bd6c29548edd8a468bf83bd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 9 19:02:32 2013 +0100

    cppcheck: don't use likely/unlikely when -DCPPCHECK is passed to the checker

[33mcommit b2c4a50e392a989d56b813c4ae5105b25d41ee66[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 9 18:48:42 2013 +0100

    Fix small memory leak in classtype parsing

[33mcommit fe46c26e4e76abb873a36d4042e018fb9e2b480a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 9 18:48:22 2013 +0100

    cppcheck: improve reporting cppcheck when passing -DCPPCHECK to the checker.

[33mcommit afb48cfcb58829e6f2df527520d2c77c73e9616c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 9 16:42:33 2013 +0100

    log-http: fix error check leading to null-deref on malloc failure during setup

[33mcommit 4165bf89514bfaa6ebd46abd2e525ad0b97f4d6a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 9 16:33:07 2013 +0100

    log-http: enforce hostname print limit

[33mcommit 1476db44d93deeab4f55726145809982e34d0c0d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 9 16:20:30 2013 +0100

    Convert Flow macros to inline functions
    
    Convert FlowReference and FlowDeReference to inline functions for
    better readability and to aid static code analyzers.

[33mcommit b4e6bbe4bcd3fda31532a2bba138af81bb53760b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 9 13:29:02 2013 +0100

    flowvar: initialize new memory to prevent issues on error handling

[33mcommit 0beb7ed7819a706712cf8401e650001309305de2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 9 12:12:01 2013 +0100

    pcap: fix stats dump logic
    
    pcap has a callback function that is called for each packet. Once a
    second, it's meant to 'dump stats'. However, the timing logic was
    broken, so it would actually dump stats for each packet.
    
    By moving the stats second timer into the thread vars, next calls of
    the callback will be able to use the stored time.

[33mcommit 9e85b8d35ed02cbbf4222c1d97e13caecf5ca592[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 3 15:14:46 2013 +0100

    flow timeout: remove now unused code

[33mcommit 85b1a8ff26a0a8ba1e3f0a0c9e92f6fb08c2733d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 3 14:36:25 2013 +0100

    flow: fix typo in function name
    
    FlowForceReassemblyNeedReassmbly -> FlowForceReassemblyNeedReassembly

[33mcommit 3b3dce8328007e66f9f8b7070c712da76321852b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 3 14:28:09 2013 +0100

    flow timeout cleanup and fix
    
    Flow timeout code worked by luck when checking if a flow still needed
    reassembly for app layer inspection or logging. It would check for a
    part of raw reassembly (smsg list) to determine if detection was
    needed. In this case it would also process app layer cleanup,
    including logging.
    
    Introduced AppLayerTransactionGetActive which returns the lowest tx_id
    in a direction that still needs some work.
    
    FlowForceReassemblyNeedReassmbly now uses it to determine if the
    applayer still needs work.
    
    Converted FlowForceReassemblyForHash to use the checking function
    FlowForceReassemblyNeedReassmbly as well, so that checking if a flow
    needs work is now unified.

[33mcommit b32abea06b70b4774f5127f4be2118a409318fe1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 3 09:55:01 2013 +0100

    flow/stream: use named values in flow timeout code

[33mcommit 8522da8ea505aca02b722a9cb3c22a3a00a25812[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 28 19:02:14 2013 +0100

    stream: add option to disable raw reassembly
    
    Raw reassembly is used only by the detection engine. For users only
    caring about logging it's a significant overhead, both in cpu and
    memory usage.
    
    The option is called 'raw' and lives under the stream.reassembly
    options.
    
    stream:
      memcap: 32mb
      checksum-validation: yes      # reject wrong csums
      inline: auto                  # auto will use inline mode in IPS mode, yes or no set it statically
      reassembly:
        memcap: 64mb
        depth: 1mb                  # reassemble 1mb into a stream
        toserver-chunk-size: 2560
        toclient-chunk-size: 2560
        randomize-chunk-size: yes
        #randomize-chunk-range: 10
        raw: false # <- new option

[33mcommit 47b5fc0934e938eb9e1badaf3aebd4450dbcf559[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Dec 6 00:35:36 2013 +0100

    erf-dag: fix typo in header guard
    
    Spotted out by clang:
     source-erf-dag.h|25 col 9| warning: '__SOURCE_ERR_DAG_H__'
     is used as a header guard here, followed by #define of a different macro
     [-Wheader-guard]

[33mcommit 105182f582bd105b2600373ba36e638d7414934b[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Dec 5 14:34:22 2013 +0100

    yaml: remove no more present files
    
    emerging-virus.rules is not present anymore in ET ruleset downloaded
    by 'make install-rules'. This patch removes it from the list to avoid
    an error message.

[33mcommit f9f1a666f0fa4de82f958d64b36764d6a9e5fdb1[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Dec 5 14:31:33 2013 +0100

    dns: rules files was not installed
    
    Installed dns-events.rules files in rules directory with install-rules.

[33mcommit a8fde0112e9f3df1f926c87e527a96d24b766041[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Dec 6 16:41:07 2013 +0100

    prscript: add support for pcap build
    
    Now also start a pcap test build.

[33mcommit eaff01a57f3c441846948fd8b2a62ba5b9f1442b[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Wed Dec 4 10:01:54 2013 -0600

    Use the stack for temporary memory buffers.

[33mcommit ab7091927e8f4a324ce65bff1905f36218f86bf8[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Wed Dec 4 09:10:44 2013 -0600

    When setting final configuration nodes, set the whole tree as final.
    
    Prevents benign log message of parent nodes of final values being
    redefined (which ends up having no affect as the final nodes
    are protected from being removed).

[33mcommit 729540673e0faaf530d1a6773397a9ae7b4fe182[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Dec 2 15:31:00 2013 +0100

    htp: display info about randomization
    
    When randomizatin is used display a message about actual values.

[33mcommit ff784075a2ed8253135dd84092160cfcbb355f3b[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Dec 2 14:26:08 2013 +0100

    htp: randomization of htp inspection sizes
    
    This is an implementation of #940. It randomize libhtp request
    and response size if the same way this has been done for stream
    inspection.

[33mcommit 81ee6f5aadeb8e91c97f4b66ecab36f40086c077[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 26 18:30:04 2013 +0100

    lua: push correct length back through ScFlowvarGet, work around valgrind warning

[33mcommit 86b299d06c90ffc4285eebd1f85f06d7cf64c68d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 4 13:15:30 2013 +0100

    lua: clear stack after each script run

[33mcommit ae69a4a024aa666e4051c8ea4c73cd363e97a03d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 5 21:45:08 2013 +0100

    luajit: pass calling rule's sid,gid,rev to script as SCRuleSid, SCRuleGid, SCRuleRev.

[33mcommit f76448c1e6d220169f68a3504d35fbe8fdcab257[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Dec 4 10:43:17 2013 +0100

    decode: fix failure in layered tunnel
    
    If we have multiple layer of tunnel, the decoding of initial
    Packet will recurse in DecodeTunnel function called in
    PacketTunnelPktSetup. If we are not setting the pseudo
    packet root before calling DecodeTunnel (as done in previous
    code), then the tunnel root will no be correct for the lower
    layer packets. This result in an counter problem and a suricata
    failure after some time.

[33mcommit e9a4871077cfcdcc0da095da0c2843f63578ad16[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Tue Dec 3 16:22:51 2013 -0600

    Fix alignment in usage.

[33mcommit ae9393987e4ea6ea89f1d0d765971011d8e5b30d[m
Author: Giuseppe Longo <giuseppelng@gmail.com>
Date:   Sun Dec 1 17:46:31 2013 +0100

    Adds a defrag configuration example in suricata.yaml

[33mcommit 0a24ac085577fc2dd1c7f1161614a705603368e4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 4 11:47:54 2013 +0100

    Fix Conf api usage after rebase

[33mcommit 8d29dfca5972dfdaa102fb4b8a8dc39f5b80217a[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Thu Nov 28 10:04:16 2013 -0600

    Instead of exiting on memory failure, log a warning then return NULL
    to signify an error to the caller.

[33mcommit 5f6705c4dc2cdd20451513b01e049f1565ea566f[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Thu Nov 28 09:46:14 2013 -0600

    Better document ConfSet and ConfSetFinal.

[33mcommit b033acfb0cba7c0356572a09fcfcb01b62fe33fd[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Thu Nov 21 14:52:06 2013 -0600

    Subsequent configuration keys now override previous ones
    instead of merging.
    
    The exception is final values, for example, values like
    default-log-dir that may be set on the command line.

[33mcommit c981a16579bd4cf220cc6ef5f59c9062034ed569[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Thu Nov 21 13:55:03 2013 -0600

    Function to prune all non-final nodes from a configuration node.

[33mcommit b8e13d4bd6d6cdbd6a5e8e9f27e7f4c15ea32da6[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Thu Nov 21 13:36:45 2013 -0600

    More concise API for setting config values that
    can be overrided or not (final values).

[33mcommit 0820ac9355fd51a6023a904a9ed075e12a32ee5d[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Thu Nov 21 09:20:10 2013 -0600

    Cleanup ConfSet, ConfGet, make more concise.
    
    Removes ifdef's for readability by using strchr instead
    of strtok.

[33mcommit 6cd6caf3ea5bb2eea04df8354f386cb203b95196[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 4 10:46:02 2013 +0100

    tls: allow matching for @ symbol in tls.subject
    
    Also in tls.issuerdn keyword.
    
    Original patch by Chris Wakelin.
    
    Fixes #1042.

[33mcommit 6ea8ac44ff12748df54abe96bb5759f8fc817149[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Mon Oct 21 20:33:09 2013 +0530

    FTP parser updated to not use the archaic App layer feature of AppLayerParserResultElmt.
    
    The parser otherwise remains pretty much the same.

[33mcommit 80c08f86428659da516ae52b61a57ffb49c8e973[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Mon Oct 21 15:35:53 2013 +0530

    Updated the ftp response handler to return without doing anything.
    
    Currently the processing happening inside the handler is not being used
    anywhere else in the engine.

[33mcommit 8523cbadcf48d0da0249861dfc96e086b755d7d8[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Tue Nov 5 13:20:07 2013 +0530

    Restructured flow_proto mapping enums.
    
    Moved FLOW_PROTO_DEFAULT down the enum list.

[33mcommit a49cbf8a49e5ff84c2f37e19fa450df1d8a88318[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri Nov 1 13:59:55 2013 +0530

    Code cleanup.
    
    Use the MpmAddPattern[CS|CI] wrapper to add patterns to the mpm context.
    
    Also use MpmInitCtx() to init the mpm context.

[33mcommit 9c0456ebbe7840c87cdefe808b4044676a1e5993[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri Nov 1 11:06:14 2013 +0530

    Removed unused function MpmMatcherGetMaxPatternLength.

[33mcommit cc61a190ce882a3696feaed76bec944c82b5e32b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 2 21:28:44 2013 +0100

    Reduce allocs in boyer moore prepare phase

[33mcommit 8344854a1f5f92333bf2f9d2ecf10d4694e4dc15[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 2 21:11:02 2013 +0100

    Don't alloc for hash lookup in SCClassConfGetClasstype

[33mcommit f04618c7ad11b89151f0272e62e8c5a25b2d2ffd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 2 20:52:33 2013 +0100

    Don't malloc temp var in SCRuleVarsGetConfVar

[33mcommit 941d5a108151f42b401b9e4d0cf9394f997c7f9e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 2 20:34:39 2013 +0100

    Don't use strdup in ip-only address parsing

[33mcommit a7a77e32cac298a64c6c2ea5d30d4dc37ef3f5bc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 2 17:35:58 2013 +0100

    Convert classtype keyword to pcre_copy_substring

[33mcommit 4dd605ae3b1aa66d16ef98e19fed5aca44269bac[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 2 17:20:55 2013 +0100

    Convert reference keyword to pcre_copy_substring

[33mcommit 3f8947ff3d786364c5af593dac4ef37874a22726[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 2 15:04:08 2013 +0100

    app layer: set event if proto detect disabled for a stream, but we see data anyway.

[33mcommit 7074ca373bb14acdecf2b7798650786c5f49e006[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 5 14:41:45 2013 +0100

    proto detection: add limit for one sided sessions
    
    If a session only has data in one direction, like ftp data sessions,
    protocol detection will only run in one direction. This led to a
    situation where reassembly would hold all the segments as proto
    detection was never flagged as complete.
    
    This patch introduces a limit for protocol detection in this case.
    If the limit is reached, detection will give up.

[33mcommit abccbe13f352c244f0af3aebef0241fa3242c9d4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 5 14:41:31 2013 +0100

    stream: add size debug code

[33mcommit daedb6c55751547a5af4660a3555a229f6b3de30[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 24 19:36:51 2013 +0200

    stream: wait for protocol detection to complete
    
    Wait for protocol detection to complete before removing segments
    from the list.

[33mcommit 0460b194b1175c0bf65a392934b49ac73e838622[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Dec 2 11:08:01 2013 +0100

    decode: clean DecodeThreadVars counter
    
    Speed counters are not compute anymore and can be removed from the
    structure definition.

[33mcommit 1bdc39fe9b632bb6b86ea1d83b3dabe4e66d68d2[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Nov 27 13:22:42 2013 +0100

    cmdline: add -k to specify checksum validation
    
    This patch adds a '-k' option to suricata to be able to specify
    the checksum validation to use. If '-k all' is used, checksum
    validation is forced. If '-k none' is used, no checksum validation
    is made.
    
    Message output in case of detection of a pcap file with a probable
    cheksum issue has been updated to indicate that '-k' is a solution.

[33mcommit 8b5be26f496b79f2f6c5523f4bff3536d7183daa[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jun 20 09:29:10 2013 +0200

    pcap-file: add checksum-checks configuration variable
    
    This patch adds support for checksum-checks in the pcap-file running
    mode. This is the same functionnality as the one already existing for
    live interface.
    
    It can be setup in the YAML:
      pcap-file:
        checksum-checks: auto
    
    A message is displayed for small pcap to warn that invalid checksum
    rate is big on the pcap file and that checksum-check could
    be set to no.

[33mcommit b2c58b8d149eb4bcca56762076d0fc8c0e2e679a[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Feb 19 14:53:52 2013 +0100

    Set packet invalid flag during decoding.
    
    This patch set a new value in pkt->flag to signal that a packet is
    invalid during decoding. The patch has been obtained via a coccinelle
    transformation.

[33mcommit 3088b6ac346400da62c101f1b5ba22b13a4973b4[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Feb 19 14:45:05 2013 +0100

    Add invalid pkt counter.
    
    This patch adds and increments a invalid packet counter. It
    does this by introducing PacketDecodeFinalize function
    
    This function is incrementing the invalid counter and is also
    signalling the packet to CUDA.

[33mcommit 92568c3857276f03697ef27083768b265c49cbf3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Dec 1 11:37:52 2013 +0100

    Fix parsing of 'custom' detect grouping values
    
    Also, add error checking
    
    Bug 892

[33mcommit ffe4a302a1c61ff0e868e9ab3f2d5683cb4a24c8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 30 13:06:44 2013 +0100

    vars: optimize layout to reduce size requirements of flowbits and other vars

[33mcommit 3e604b8703a21ef94fd7f264199e3f1edd53e7be[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 30 13:00:17 2013 +0100

    pcre: parsing cleanup
    
    Remove all flags indicating the buffer type. They were only used
    at parse time.
    
    Because of this the DetectPcreData_ structure could shrink to 32
    bytes.

[33mcommit ab22385083fc8e52ba5115ce153dce796a6e3812[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 30 12:58:37 2013 +0100

    stream: minor clean up of TcpSession structure

[33mcommit 866b3a1c5db17c9c07535b4897c1a38891297305[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 30 12:57:34 2013 +0100

    content: reorder DetectContentData member, shrinking the struct from 64 to 48 bytes.

[33mcommit 277fb61c1d991d84730d253c0fc0274c3f81a7ee[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 28 19:20:34 2013 +0100

    defrag: clean up
    
    Rename PacketDefragPktFinishSetup to PacketDefragPktSetupParent to
    better refect it's function.

[33mcommit 3fdf52239d611c0d436934e3adf99544ba686419[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Nov 28 17:36:03 2013 +0100

    defrag: don't modify packet if defrag fails
    
    If defrag fails dur to an invalid decoding, we are not modifying
    the origin packet anymore.

[33mcommit c611b258a50cb2bbca4abf346d5eccc671e3a3b0[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Nov 28 15:23:21 2013 +0100

    decode: PacketTunnelPktSetup replaces PacketPseudoPktSetup
    
    This patch replaces PacketPseudoPktSetup by a better named
    PacketTunnelPktSetup function which is also in charge of doing
    the decoding of the tunneled packet.
    This allow to clean the code. But it also fixes an issue.
    Previously, if the DecodeTunnel function was failling (cause of
    an invalid packet mainly), the result was that the original packet
    to be considered as a tunnel packet (and not inspected by payload
    detection).

[33mcommit d4b7ecfbe3f33ce1ea502000b6103e99267c0a28[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Nov 27 18:53:52 2013 +0100

    decode: update API to return error
    
    In some cases, the decoding is not possible and some really invalid
    packet can be created. This is in particular the case of tunnel. In
    that case, it is more interesting to forget about the tunneled
    packet and only consider the original packet.
    
    DecodeTunnel function is maked as warn_unused_result because it is
    meaningful for the decoder to know if the underlying data were not
    correct. And in this case, only focus detection on the content.

[33mcommit 0b0e9340dcd23c22009c94cbbedcf46270e5d135[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 28 15:07:33 2013 +0100

    rule setup: cleanup
    
    Remove rule preparation logic that ran, but it's results were not
    used.

[33mcommit 2be6829986e5a6f3a8921d4886ac1957f84c0537[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 28 13:30:04 2013 +0100

    Convert dsize keyword parsing to use pcre_copy_substring

[33mcommit dcc75acdecde83e9c948c384050a718c361c50d4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 28 12:59:10 2013 +0100

    Convert pcre keyword parsing to use pcre_copy_substring

[33mcommit 1f69da80bf067abc456782804c10cf84086b6217[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 28 09:44:10 2013 +0100

    rule parser: convert to use pcre_copy_string

[33mcommit d397ed94c5f06f57fba9e057bddde1897baee15b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 28 09:20:55 2013 +0100

    detect: use macro for max rule size

[33mcommit 9d35855a95627ea4a81e885ae451a3d2141f1cda[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 27 23:56:32 2013 +0100

    Convert flowbits keyword parsing to use pcre_copy_substring

[33mcommit beab8d401c1e93541bbc424373a7017a8c55204f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 27 21:23:25 2013 +0100

    Convert flow keyword parsing to use pcre_copy_substring

[33mcommit 223fedb8fe84f31e7402627f7967ad9f03c9e9de[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 27 21:15:48 2013 +0100

    Convert ParseSizeString to use pcre_copy_substring

[33mcommit 3f4ce6dadd129438f7ffb2e0e776d4c08c49aef1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 27 20:28:28 2013 +0100

    rule parser: don't use uninitialized value

[33mcommit f03278d13255e41b649cfe631c1aa1a7d9ffab15[m
Author: Giuseppe Longo <giuseppelng@gmail.com>
Date:   Sat Oct 12 12:02:49 2013 +0200

    feature #417: add support for configuration per host timeout value

[33mcommit 54610cb4a45488a709d1e67f1d20817c174df3fd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 27 18:42:29 2013 +0100

    rule parsing cleanups
    
    Clean up usage of array of pointers to the various parts of a rule.

[33mcommit 67989e7e4e7e6d0cf6e5b18bb9ec9808b0fb1ec6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 27 18:19:52 2013 +0100

    rule parsing: reduce mallocs and clean up
    
    Reduce mallocs during rule parsing. Also, no longer recursively
    call the option parse function.

[33mcommit 2ce8895f0ad7b7b3df583b9c9b5518b12b3bc08f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 27 16:28:37 2013 +0100

    address and port: reduce memory allocs

[33mcommit 06f4fe8e0c12e36b43d8af4e9751e9764f8afc3b[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Tue Nov 26 10:16:04 2013 -0600

    Remove the single line if statements.

[33mcommit 8625c9eba80d0385c5914358eb7aacf502050017[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Mon Oct 28 13:32:05 2013 -0600

    Support for configuration include files.

[33mcommit e7f6107e794065b283e3418dbf9d6d0944328073[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 27 11:43:52 2013 +0100

    signature address parsing improvements and tests
    
    Fix sigatures not supporting [10.0.0.0/24, !10.1.1.1] notation when
    used directly in a rule instead of through a variable.
    
    Add tests for Bugs #815 and #920.

[33mcommit 614133b4ca7fb572b94631c7f033c8399988143c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 26 17:15:41 2013 +0100

    valgrind: add suppression file

[33mcommit 3521c37d4afafff9136f4e3302b471470941cc99[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 26 14:05:53 2013 +0100

    http: use body limit in inspection
    
    When inspecting HTTP bodies there are several limits involved.
    In this patch the reaching of the body limit will trigger body
    inspection.
    
    Without this, the body would only be inspected when inspection
    limits "request-body-minimal-inspect-size" or
    "response-body-minimal-inspect-size" were reached. If the body
    limit was smaller than this value, the body would only be
    inspected at the end of the tx or stream.

[33mcommit 493d531ae81d4889ea48b2985f686335be0231a6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 25 19:38:14 2013 +0100

    Fix using uninitialized memory (Bug #994)

[33mcommit 9bbcc8671e4f5ea965f7a55726e592efa0efb8af[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Nov 21 11:19:17 2013 +0100

    util-ioctl: ioctl error should be a warning

[33mcommit 286258df86dcd710ab9f9b843154f7c450662e5d[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Nov 20 11:47:28 2013 +0100

    pcap: add warning about GRO and LRO usage
    
    Use the new GetIfaceOffloading function to display a warning message
    if pcap capture is used on Linux with GRO or LRO activated. This is
    helpful for kernel after 2.6.31 were pcap will use mmaped capture.
    TPACKET_V2 is used and this limit the size of the packet resulting
    in truncated packets when merged packets are received.

[33mcommit 2855ee5aefbff1ed52231068fe1280e5c982bec8[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Nov 19 16:10:38 2013 +0100

    af-packet: add warning message if LRO or GRO are set
    
    This patch query the network interface to detect if LRO or GRO are
    used in mmap TPACKET_V2 mode.

[33mcommit fcc87595611e23eec4749e22d402644f9487b06e[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Nov 19 15:59:17 2013 +0100

    util-ioctl: add GRO/LRO detection capabilities
    
    This patch adds a new function GetIfaceOffloading which return 0
    if LRO and GRO are not set on a interface and 1 if not the case.

[33mcommit 008ed41cb4d2e278305a008a9074e2438124ab1c[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Nov 19 11:26:54 2013 +0100

    util-ioctl: minor code cleaning.
    
    Fix author e-mail and simplify an indentation.

[33mcommit 853732210ee91a50c0a1ad89fa54afe390c8084b[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Nov 19 11:06:50 2013 +0100

    pfring: improve error reporting at device opening
    
    This patch improves the error message displayed if pfring_open fails.

[33mcommit 5330b1cae1b1761e2911e9ddc0a9a94a2a55c034[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 22 18:11:10 2013 +0100

    detect: don't consider smsgs for no inspect flag
    
    When the PKT_NOPAYLOAD_INSPECTION flag is set, don't apply it to smsgs.
    This way we can still inspect the outstanding smsgs.
    
    The PKT_NOPAYLOAD_INSPECTION is set for encrypted traffic, and is combined
    with disabling stream reassembly. So we only inspect the smsgs up to the
    point of the disable detection point.

[33mcommit ab7677638e09289bd1189eb4c1648d4dd79abb8b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 22 18:00:54 2013 +0100

    stream: improve raw reassembly
    
    When checking the reassembly limit for raw reassembly, consider the
    STREAMTCP_STREAM_FLAG_NOREASSEMBLY a trigger immediately. We won't
    process any more segments in the reassembly engine anyway.

[33mcommit e392c0a4ce782e53a66355a30235c385500ce3dd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 21 15:14:30 2013 +0100

    Fix autofp flow queue handler optimization

[33mcommit 480fddd189039812d15936adb87e6f16431b1d20[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 20 17:22:32 2013 +0100

    build-info: add a nicer way of printing atomics support

[33mcommit ce120d492779b8a650300ed715fbc0a72039045a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 21 11:34:40 2013 +0100

    flow: aligned flow balance structures (used by autofp) to CLS to reduce false sharing

[33mcommit fb4967912cb5a1a3ad37ef832b9e3d64c7c7a739[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 21 13:22:52 2013 +0100

    http: add meta-field-limit option
    
    The meta-field-option allows for setting the hard limit of request
    and response fields in HTTP. In requests this applies to the request
    line and headers, not the body. In responses, this applies to the
    response line and headers, not the body.
    
    Libhtp uses a default limit of 18k. If this is reached an event is
    raised.
    
    Ticket 986.

[33mcommit 2ec57c36b442b1c860ef40ad759320e9b0a01e35[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 20 11:57:26 2013 +0100

    SSE 4.2 memcmp: don't read beyond var boundary
    
    In the SSE 4.2 SCMemcmpLowercase implementation, there would be a
    _mm_load_si128 of a 2 byte array. However, _mm_load_si128 loads
    16 bytes, causing it to read beyond the var. I don't think this lead
    to crashes, as it was a static var, but clangs ASAN complained about
    it.

[33mcommit d3c6913e28760d1c2d39c5c77f473f64b4a344c0[m
Author: Ken Steele <ken@tilera.com>
Date:   Tue Nov 19 09:53:21 2013 -0500

    Reduce the size of Packet structure
    
    Share memory space for IPV4Vars and (IPV6Vars, IPV6ExtHdrs), since a
    packet can only be either IPv4 or IPv6, but not both.
    
    Share memory for TCPVars, UDPVars, ICMPV4Vars and ICMPV6Vars, since a
    packet can only be only of these.
    
    Then move other structure members around to remove holes reported by pahole.
    
    This reduces the size of the Packet structure from 2944 bytes (46 cachelines)
    down to 1976 (31 cachelines), a 33% reduction.

[33mcommit a8b971c710233bf59f0b68732a83bb7a5db0054e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 19 15:26:36 2013 +0100

    http: strip 'proxy' part of http_uri
    
    Strip the 'proxy' parts from the normalized uri as inspected by http_uri,
    urilen, pcre /U and others.
    
      In a request line like:
        GET http://suricata-ids.org/blah/ HTTP/1.1
      the normalized URI will now be:
        /blah/
    
    This doesn't affect http_raw_uri. So matching the hostname, etc is still
    possible through this keyword.
    
    Additionally, a new per HTTP 'personality' option was added to change
    this behavior: "uri-include-all":
    
      uri-include-all: <true|false>
        Include all parts of the URI. By default the
        'scheme', username/password, hostname and port
        are excluded. Setting this option to true adds
        all of them to the normalized uri as inspected
        by http_uri, urilen, pcre with /U and the other
        keywords that inspect the normalized uri.
        Note that this does not affect http_raw_uri.
    
    So adding uri-include-all:true to all personalities in the yaml will
    restore the old default behavior.
    
    Ticket 1008.

[33mcommit de6cbb01c85e7b3837f38f78367cfddc17cf8fd7[m
Author: Ken Steele <ken@tilera.com>
Date:   Tue Nov 12 15:47:56 2013 -0500

    Allocate mPIPE packet ingress queue in each worker thread.
    
    Move the allocation of the mPipe ingress queue from a loop over
    the number of workers in the main init function to being done inside
    each worker thread. This allows allocating the memory locally on the
    worker's CPU without needing to figure out ahead of time where that thread
    will be running. This fixes one case of static mapping of workers to CPUs.
    
    Use __thread to hold the queue rather than a global tables of queues.

[33mcommit 601c7c8e3ced8bb6447da65a6062d37f42c39f54[m
Author: Ken Steele <ken@tilera.com>
Date:   Mon Nov 18 13:28:17 2013 -0500

    Cleanup Tile build for -Werror
    
    Just the changes needed for the Tile architecture to compile cleanly with
    -Werror.

[33mcommit f16b339fc4a1a2f20d55a2cefc6ee7aa3e6ee003[m
Author: Ken Steele <ken@tilera.com>
Date:   Mon Nov 18 17:02:50 2013 -0500

    Rename checksums to level3_comp_csum and level4_comp_csum.
    
    This will also sharing even more memory in the Packet_ structure.

[33mcommit 3dceca70ee7b73c8b4587fa5f4c4c161256e4fff[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Nov 18 18:12:36 2013 +0100

    suricata: move some code into PostConfLoadedSetup
    
    All functions before daemonization are initialisation functions and thus the
    call can be moved in PostConfLoadedSetup.

[33mcommit c89f03fc1ec148f25ea36769c397530879acb971[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 19 11:21:47 2013 +0100

    Remove mkinstalldirs (bug #1041)

[33mcommit a84c502e50645a3d9efe95206f6b6588ac95e84b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 14 13:17:18 2013 +0100

    Add SSE support to --build-info

[33mcommit 49a54713daafde0edbecdd5e7e8e81dfb342ad37[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 14 12:51:06 2013 +0100

    memcmp: don't use SSE intrinsics if less that 16 bytes are available in SSE_4_2 version.

[33mcommit 8ffa30dd88fadd9b517ffaaf56b48d11486dcabf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 19 10:09:44 2013 +0100

    profiling: don't init rule profiling ctx if rule profiling is disabled

[33mcommit 660636c5bca1b1471e26b84b5eeebef637300aa1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 19 10:05:02 2013 +0100

    profiling: when config is missing, keyword profiling is disabled

[33mcommit 2982408155c299993fe65c027612c08182e8ab86[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 19 09:56:32 2013 +0100

    pcap: register counters for old pcap versions as well

[33mcommit 9a42f621f5e8f1fb2aa2e8eb8e62d39305f21bee[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 19 09:37:16 2013 +0100

    Fix pcre_study error check
    
    pcre_study returning NULL is not necessarily an error, from the man page
    pcre_study(3):
    
      "If the function returns NULL, either it could not find any additional
       information, or there was an error. You can tell the difference by
       looking at the error value. It is NULL in first case."
    
    Older libpcre versions would return NULL, causing errors.

[33mcommit c6a8d0ab6b531f6672f17e64c16a4824b0e426ef[m
Author: Ken Steele <ken@tilera.com>
Date:   Thu Nov 14 13:20:10 2013 -0500

    Share Packet checksum values for TCP, UDP, IPv6. ICMPv4 and ICMPv6
    
    Keep a separate checksum for IPV4, since a packet can have both an IPV4
    checksum and a TCPV4 checksum, or IPV4 and UDPV4 checksum.
    
    This will allow future sharing of more values.
    
    Use PACKET_RESET_CHECKSUMS() in Unit Tests in place of setting the
    individual checksum values.

[33mcommit 27caa8aea7f3ced5a905196662c31fdb9cd83701[m
Author: Ken Steele <ken@tilera.com>
Date:   Fri Nov 15 21:17:34 2013 -0500

    Add missing case for DNS_CONFIG
    
    Found compiling with -Werror

[33mcommit 36bc8d5cd0549b061dc4688a408592d1b147b465[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 14 15:57:04 2013 +0100

    http & tls: fix transaction handling
    
    When http and/or tls logging is disabled, the app layer would still
    be flagged as logging. This caused transactions not to be freed until
    the end of the flow as the logged tx id would never increment.
    
    This fix postpones the setting of the app layer parser "logger"
    flag to the point where we know the logger is enabled.

[33mcommit bee5ff172b69c6ff129d94335953859b95bbc0c6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 14 15:44:35 2013 +0100

    dns: fix transaction handling
    
    When logging is disabled, the app layer would still be flagged
    as logging. This caused transactions not to be freed until the
    end of the flow as the logged tx id would never increment.
    
    This fix postpones the setting of the app layer parser "logger"
    flag to the point where we know the logger is enabled.

[33mcommit 6730f3d5ccd422a0b557bc2ff69814c8fe528abf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 11 17:27:56 2013 +0100

    DNS: trigger logging for toserver dir when previous reply is lost.

[33mcommit 61cdd9be6bb8e2b7b5e62a81c3d56c9080d63e9a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 7 22:55:15 2013 +0100

    dns: detect case of request flooding
    
    In the case where DNS requests are sent over the same flow w/o a
    reply being received, we now set an event in the flow and refuse
    to add more transactions to the state. This protects the DNS
    handling from getting overloaded slowing down everything.
    
    A new option to configure this behaviour was added:
    
    app-layer:
      protocols:
        dnsudp:
           enabled: yes
           detection-ports:
             udp:
               toserver: 53
           request-flood: 750
    
    The request-flood parameter can be 0 (disabling this feature) or a
    positive integer. It defaults to 500.
    
    This means that if 500 unreplied requests are seen in a row an event
    is set. Rule 2240007 was added to dns-events.rules to match on this.

[33mcommit c1b9f0e1f459157917832d56f31eeda713faf64b[m
Author: Ken Steele <ken@tilera.com>
Date:   Fri Nov 15 08:55:39 2013 -0500

    Formatting and comment updates in flow files
    
    Some reformatting to meet coding standards.
    
    Added a few comments to make it more clear where p->flow gets set.

[33mcommit 72a147b6f16ded148fc65428b98f0be9a0986691[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 13 18:18:19 2013 +0100

    detect: only inspect smsg for valid tcp packets
    
    Packets that are rejected by the stream engine are not considered
    part of an established tcp session. By allowing them to inspect
    an smsg, some smsgs would not be properly inspected.

[33mcommit dfc2117e805d6fc35c61ac531fc1049a9bdbf044[m
Author: Ken Steele <ken@tilera.com>
Date:   Thu Nov 14 12:11:09 2013 -0500

    Add Unit test to check TCPv4 and IPV4 checksums together.
    
    Copied SigTest26TCPV4Keyword and added check for invalid IPV4 checksums.
    Created new SigTest26TCPV4AndIPV4Keyword test with a new packet with valid
    IPV4 checksums.

[33mcommit 0c12ad6bd029794a80e2fdf048cddc78101c6207[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 12 16:37:09 2013 +0100

    stream: fix sequence number on smsg
    
    When multiple segments were put into a smsg, the seq would be updated
    each time a segment was added. Because of this, the seq wasn't pointing
    to the start of the data.
    
    This caused some false negatives when the fast_pattern was in the raw
    stream, but another part of the inspection was in the state. Because of
    the wrong seq, the inspection of the smsg could be delayed. This in turn,
    could make the inspection engine consider a TX inspected, even if it wasn't
    fully yet.

[33mcommit 86c6861b402bbd8ddc841bd86531fab85efc7e47[m
Author: Ken Steele <ken@tilera.com>
Date:   Mon Nov 11 15:54:47 2013 -0500

    Give Suricata priority to receive packets over Linux with mPIPE.
    
    When installing the rules to tell mPIPE to send packet to Suricata,
    give it a higher priority than the default used by Linux. This way if
    Linux also tells mPIPE to send it packets, Suricata will get them
    instead, as long as Suricata is running.

[33mcommit 9a7353e1487e0c7b08f71f77cf1486c24c66d6d5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 12 10:25:19 2013 +0100

    http: don't decode + to space by default
    
    Libhtp decodes the + character in the query string to a space by default.
    Suricata rules (e.g. etpro sid 2806767) are expecting to see the space in
    the http_uri buffer.
    
    Added an option per htp config to reenable this default behavior:
    
        query-plusspace-decode: yes
    
    Bug #1035.

[33mcommit 25636597afdca4581bca673b226b418ed580d1a5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 11 16:11:19 2013 +0100

    Fix live rule reload confusing delayed detect
    
    Fixes bug 1023 and the previous attempt to fix it.

[33mcommit 5906eeb8c81be9d6d83b01efb7f99e5c16d9ed88[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 6 17:25:06 2013 +0100

    detect: don't do rule reload during delayed detect
    
    When both rule reloads and delayed detect are enabled, make sure we don't
    trigger a reload during delayed detect initialization.
    
    Bug #1023.

[33mcommit 7b687da7268e26b67a730e4a33edc5ee9d82410c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 7 14:40:25 2013 +0100

    profiling: add tracking of missing keywords

[33mcommit 5686c673ec2207ea7b481b2b4a875f3b7ea02472[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 7 11:30:17 2013 +0100

    profiling: per buffer profiling

[33mcommit 9419b9cbb60aff9de6a1a1cefe5d29f6fdc12014[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 7 11:53:39 2013 +0100

    detect: add tostring function for DETECT_SM_LIST_ enum.

[33mcommit 97bfcac444c34b6568ec0aedb8461c5c76f4c4a1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 4 17:08:59 2013 +0200

    profiling: introduce per keyword profiling
    
    Initial version of per keyword profiling. Prints stats about
    how ofter a keyword was checked and what the costs were.

[33mcommit 210eede03389c158c5caec4d57c22c0604e0c8a8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 4 16:46:04 2013 +0100

    content inspection: introduce no_match label

[33mcommit e416b2cdfbd28cb6ea6946f1040ac49838f5a34c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 5 16:55:57 2013 +0100

    stream: fix IPv6 pseudo packet setup
    
    Bug #1022: IPv6 pseudo packet setup using reverse logic of IPv4.

[33mcommit ef17b7b9f4192808fe7a5823c36924686585d8b2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 5 15:48:05 2013 +0100

    stream: reduce scope of StreamTcpPseudoPacketSetupHeader

[33mcommit ce4d262c7db8a1af58ce7881af132818486ed05c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 5 13:25:39 2013 +0100

    IPv4 decoder compile warning fix

[33mcommit 07c97412f37d155980874b1f860e08305048fc08[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 4 19:37:32 2013 +0100

    DNS: fix response name length logic
    
    In some cases where the length would be calculated as 0 we'd loop until
    we'd hit our loop limit.
    
    Update name logic everywhere.

[33mcommit 95ed53c590178b37c59974eceb61cb2b3f059923[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri Oct 18 16:03:16 2013 +0530

    Fix for #1003.
    
    Now that we call stream reassembly directly from proto detection, we will
    need to check if reassembly has been disabled inside the stream reassembly
    callback.
    
    This prevents any calls to bypass and re-enter proto detection, despite
    having reassembly disabled.

[33mcommit 7ebd1e6433bfdf7c66d70156f82ad4940a186c70[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 31 11:39:59 2013 +0100

    Counters: fix delayed-detect counter registration
    
    Make sure we register the detect.alerts counter before packet runtime starts
    even in delayed detect mode. The registration of new counters at packet
    runtime is not supported by the counters api and might lead to crashes as there
    is no proper locking to allow for this operation.
    
    This changes how delayed detect works a bit. Now we call the ThreadInit
    callback twice. The first call will only register the counter. The 2nd call
    will do all the other setup. This way the counter is registered before the
    counters api starts operating in the packet runtime.
    
    Fixes the segv reported in ticket #1018.

[33mcommit 9e88c51e24b68c938bbfd297cb92a50e11786b8e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 31 09:31:08 2013 +0100

    Counters: move perf critical var to the top of the SCPerfContext struct

[33mcommit ed03196a20cc1ec7a9e54420e0fad8f181085699[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 30 19:51:14 2013 +0100

    Counter: fix accidental logic change

[33mcommit 45dfecafd4475b30bff13a19134f4770e7dee859[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 30 19:42:09 2013 +0100

    Counters: remove unused updated field

[33mcommit 49087f21e4f33398927982d97dd06a0212140659[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 30 12:22:14 2013 +0100

    Optimizations to reduce branch misses

[33mcommit 64f5129f124b8077c8417326feb9b650849d0a74[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 29 09:04:07 2013 +0100

    Counters: remove unused tm_name comparison loops

[33mcommit 76c305c1282b481babb85815469be47652df855d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 29 08:29:11 2013 +0100

    Counters: fix unix socket

[33mcommit 25aeeebdf7d0ab2b4753189f3fca1f41078d26d8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 29 08:19:16 2013 +0100

    Counters: merge SCPerfCounterName into SCPerfCounter as there was a 1 on 1 mapping

[33mcommit 3445d17ae5b5903b89eec5a66559e31fec2871fb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 29 08:00:06 2013 +0100

    Counters: remove SCPerfCounterValue struct as we no longer support multiple data types

[33mcommit 677cd03e5291016bcb0231cb9fd9f4594c53b2d2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 29 00:34:13 2013 +0100

    Counters: more unused code removal

[33mcommit 8d4a61a789a910f044fc04f7c9909905121a5db5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 29 00:10:38 2013 +0100

    Counters: remove unused code

[33mcommit 698ff4e4aa3f781a4d792705946ec81d99069fb1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 28 19:00:06 2013 +0100

    Counters: remove all unused parts of the API

[33mcommit 79fcf1378a84964663a4873f23349f8198fe2b8e[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Oct 28 11:49:23 2013 +0100

    Use unlikely in malloc failure test.
    
    This patch is a result of applying the following coccinelle
    transformation to suricata sources:
    
      @istested@
      identifier x;
      statement S1;
      identifier func =~ "(SCMalloc|SCStrdup|SCCalloc|SCMallocAligned|SCRealloc)";
      @@
    
      x = func(...)
      ... when != x
      - if (x == NULL) S1
      + if (unlikely(x == NULL)) S1

[33mcommit c8b3f4418affd9135ef1103694b0d907531e0d13[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Oct 25 23:44:12 2013 +0200

    af-packet: init correctly the config structure
    
    This fix a crash when interface is not defined in YAML.

[33mcommit eea760de3c8ebdb139955db024a0bb3d28288411[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Oct 24 09:42:35 2013 +0200

    decode: fix typo in comment

[33mcommit 167597cfb0841cf7a6c2ad1fcc8dc6511d0cc03d[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Mon Oct 21 09:52:55 2013 +0530

    Update ftp parser protocol detection to use lowercase patterns.

[33mcommit 36bd444406be66c9738d807d6ea1f34fa1d97048[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sun Oct 20 23:30:43 2013 +0530

    Introduce new API to allow case insensitive protocol detection patterns.

[33mcommit 90827ea990b74ad13db5731a4e1b54172986f157[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sat Oct 19 18:30:05 2013 +0530

    Remove the obsolete DetectFtpBounceMatch() function.

[33mcommit 9fce4da84d384da4472d01911661c7491009ec8d[m
Author: Ken Steele <ken@tilera.com>
Date:   Fri Oct 18 14:21:50 2013 -0400

    Spell fixes in threads-arch-tile.h

[33mcommit e8cd15c82360a14b85cfcad92c8f060a6c0e09fd[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Thu Oct 17 12:22:43 2013 +0530

    Support for feature #983.
    
    Provide support for icmvp4 and icmpv6 as well.  You can now use
    
    alert icmpv4 and
    alert icmpv6 as well, apart from the existing
    
    alert icmp, which created a rule that applied to both icmpv4 and icmpv6.

[33mcommit cf9f1e3191849585c56cd700d6abdbc031851b18[m
Author: Nelson Escobar <nelson@myri.com>
Date:   Thu Oct 17 14:32:47 2013 -0700

    Build cuda kernel for capability 3.5 devices.

[33mcommit 3f8b9dde04aaa010b71db425ca26ee77456bdc44[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 18 20:12:17 2013 +0200

    Dead code removal

[33mcommit 84af1ee27715c2eb2b8e1dda7cc9eecb03ad1260[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 18 20:09:09 2013 +0200

    storage: fix and small optimization

[33mcommit 77ae8b8878982a3fd22ca0b582fd9b2723b65ed9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 17 22:36:29 2013 +0200

    flow: set correct family in FLOW_COPY_IPV6_ADDR_TO_PACKET

[33mcommit 2a4f821284a033735d921bf483ba3189f2f5381c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 17 19:07:46 2013 +0200

    Fix 2 unittests

[33mcommit 8516000208316add530c8ee447a4771862ee4035[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 17 17:52:43 2013 +0200

    Minor code cleanup/fixes to fast pattern unittests
    
    cppcheck:
    [detect-fast-pattern.c:1183] -> [detect-fast-pattern.c:1183]: (style) Same expression on both sides of '&'.
    [detect-fast-pattern.c:1217] -> [detect-fast-pattern.c:1217]: (style) Same expression on both sides of '&'.
    [detect-fast-pattern.c:1449] -> [detect-fast-pattern.c:1449]: (style) Same expression on both sides of '&'.
    [detect-fast-pattern.c:1479] -> [detect-fast-pattern.c:1479]: (style) Same expression on both sides of '&'.
    [detect-fast-pattern.c:1509] -> [detect-fast-pattern.c:1509]: (style) Same expression on both sides of '&'.
    [detect-fast-pattern.c:1539] -> [detect-fast-pattern.c:1539]: (style) Same expression on both sides of '&'.
    [detect-fast-pattern.c:1570] -> [detect-fast-pattern.c:1570]: (style) Same expression on both sides of '&'.
    [detect-fast-pattern.c:1686] -> [detect-fast-pattern.c:1686]: (style) Same expression on both sides of '&'.
    [detect-fast-pattern.c:1716] -> [detect-fast-pattern.c:1716]: (style) Same expression on both sides of '&'.
    [detect-fast-pattern.c:1746] -> [detect-fast-pattern.c:1746]: (style) Same expression on both sides of '&'.
    [detect-fast-pattern.c:1776] -> [detect-fast-pattern.c:1776]: (style) Same expression on both sides of '&'.
    [detect-fast-pattern.c:1806] -> [detect-fast-pattern.c:1806]: (style) Same expression on both sides of '&'.
    [detect-fast-pattern.c:1836] -> [detect-fast-pattern.c:1836]: (style) Same expression on both sides of '&'.
    [detect-fast-pattern.c:1866] -> [detect-fast-pattern.c:1866]: (style) Same expression on both sides of '&'.
    [detect-fast-pattern.c:1896] -> [detect-fast-pattern.c:1896]: (style) Same expression on both sides of '&'.
    [detect-fast-pattern.c:1926] -> [detect-fast-pattern.c:1926]: (style) Same expression on both sides of '&'.
    [detect-fast-pattern.c:2022] -> [detect-fast-pattern.c:2022]: (style) Same expression on both sides of '&'.

[33mcommit af311aee4ee47944436600a39f5a38e39f96f378[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 17 17:41:52 2013 +0200

    Minor fix for detection engine setup error check
    
    cppcheck said:
    [detect-engine-mpm.c:2075] -> [detect-engine-mpm.c:2075]: (style) Same expression on both sides of '||'.

[33mcommit 974e86e45059f1c0ead9e1e82cfcaf68bd6053a9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 17 17:41:03 2013 +0200

    Minor pppoe cleanup
    
    cppcheck said:
    [decode-pppoe.c:58] -> [decode-pppoe.c:60]: (performance, inconclusive) Variable 'pppoedh' is reassigned a value before the old one has been used if variable is no semaphore variable.

[33mcommit 209946b07ca93588a8101648c1586897d9b007dd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 17 17:36:27 2013 +0200

    Fix broken check in stream.max-synack-queued parsing (coverity 1038103)

[33mcommit bec59f426e3be1a4086691216449c8eb00b4536d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 17 16:30:18 2013 +0200

    Fix sanity check in AppInspectionEngine registration code

[33mcommit 2953b3f6403e94874c0c7b19faf52706cff66138[m
Author: Jason Ish <jason.ish@emulex.com>
Date:   Wed Oct 16 11:59:26 2013 -0600

    Feature #901 - VLAN defrag support.
    
    Take VLAN IDs into account when re-assembling fragments.
    
    Prevents fragments that would otherwise match, but on different
    VLANs from being reassembled with each other.

[33mcommit 2d3dc2302642f1e359450e57048adf07ece2b749[m
Author: Ken Steele <ken@tilera.com>
Date:   Thu Oct 10 10:23:23 2013 -0400

    Correct indentation and wording of comments.

[33mcommit a63b87df9e5cb5e07d921baa7f4626138b1c8616[m
Author: Ken Steele <ken@tilera.com>
Date:   Fri Oct 4 14:10:41 2013 -0400

    Clean up function syntax
    
    Remove space before ( in function names. Put { on new line.
    Make tests static.

[33mcommit 619414c59efcc84ed37de03435e20e5f5b08e016[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Mon Oct 7 15:18:52 2013 +0530

    Add a /* fall through */ comment for all switch case fall throughs.
    
    This should server as a message to coverity that the fall through is
    intentional.

[33mcommit b6efaeb0c061bc71a93ddba2adc533356e0e125c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 15 11:32:37 2013 +0200

    storage: fix freeing storage
    
    Fix freeing storage. Also add workaround for unittests that don't
    (fully) setup storage.
    
    Bug #991.

[33mcommit 37669bfdd264f398bbcd1707c296111c65b99f0f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 15 11:18:10 2013 +0200

    threshold: register threshold host storage. Related to bug #991

[33mcommit 1b11165864bd39a6243c5e554735c4c01587e52c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 14 16:33:23 2013 +0200

    Reset both sides of the de_state on rule reload. Bug #998.

[33mcommit 74d8d95f83cc101f9a8ff8ec9fed8344d40f0e14[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 14 16:29:32 2013 +0200

    Don't initialize threshold before rules on delayed detect. Bug #999.

[33mcommit 64203be3ba09ff5a18ec45682e80dfdac75688a1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 10 18:24:40 2013 +0200

    iprep: fix reputation loading and reloading
    
    When an IP is listed in multiple categories, each new "load" would clear the
    previous loads for that IP.
    
    Bug #976

[33mcommit c583c9e205d6b99a766e74530a4a57b4d6df12e9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 10 12:51:07 2013 +0200

    tag: fix session seconds tracking
    
    Fix bug #995. Tag time setting was initialized using "usec" field
    instead of "sec" field. This led to immediate timing out of tag.
    
    Added proper matching unittests for all tagging types.
    
    Bug #995.

[33mcommit 1822a897ffe5288aae0440278d8a989e857340e0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 10 10:05:20 2013 +0200

    tag: add some debug statements

[33mcommit a26243a23c4a99330b8f5dca6bdc148b4ef32eb0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 9 13:45:55 2013 +0200

    Clean up rule reload logging

[33mcommit b24fb72247992e63586b4e9926ce35ce2904caaf[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri Oct 4 21:51:33 2013 +0530

    fix for bug #987.
    
    We don't support jabber protocol detection atm.  Disable the code check
    inside suricata to check if jabber protocol detection is enabled in the
    yaml file.
    
    Also updated an error log message for app layer.

[33mcommit 83a72d50dd34266fe5b52e497e3405b398c54eb0[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Tue Oct 8 21:41:17 2013 +0530

    API renaming/beautification.

[33mcommit 1ea5d27508f09fd202838041556d5efe59e43ac9[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Thu Oct 3 10:12:54 2013 +0530

    Fix for bug #989.
    
    In case of recursive call to protocol detection from within protocol
    detection, and the recursively invoked stream still hasn't been ack'ed
    yet, protocol detection doesn't take place.  In such cases we will end up
    still calling the app layer with the wrong direction data.  Introduce a
    check to not call app layer with wrong direction data.
    
    When sockets are re-used reset all relevant vars correctly.
    
    This commit fixes a bug where we were not reseting app proto detection
    vars.
    
    While fixing #989, we discovered some other bugs which have also been
    fixed, or rather some features which are now updated.  One of the feature
    update being if we recieve wrong direction data first, we don't reset the
    protocol values for the flow.  We let the flow retain the detected
    values.
    
    Unittests have been modified to accomodate the above change.

[33mcommit 836bad85a47f4e9f5f34472534c3e77bd39b3dc9[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Thu Oct 3 10:10:11 2013 +0530

    Reset app layer processed flag for segments that have been sent for proto
    detection, but we failed to figure out the proto.
    
    Updated a unittest to reflect the above change.

[33mcommit 87edd2ade9e84423b77308a369c32fd4b693806e[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Tue Oct 8 20:52:06 2013 +0530

    Inside PP parser, we were using the return value from DetectPortParse as
    the ip_proto value,  which is wrong.  We have fixed this now.

[33mcommit 73be9d3ef7a6b26aaa3c228c59537c415ea7de61[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Tue Oct 1 21:13:07 2013 +0530

    Update ssl parser protocol detection pattern strings.

[33mcommit 1d18155a169418e129ffad1dbb2a764a98fd41e3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 18 15:09:38 2013 +0200

    XFF: use per alert tx id
    
    Use the tx id stored for each alert to find the correct XFF address
    to add to the extra-data field.
    
    In overwrite mode we still only grab the first available XFF addr,
    as this address is set in the header preceeding the individual alerts.
    
    Issue #904.

[33mcommit e7df53b1360726c19619bbf0a5156ede06670174[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 18 12:33:00 2013 +0200

    Display TX id in alert debuglog.

[33mcommit edeeb7ed443eac90ba59519cc43f1ec16e5773a0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 18 10:18:09 2013 +0200

    Store TX id with alerts
    
    When generating an alert and storing it in the packet, store the tx_id
    as well. This way the output modules can log the tx_id and access the
    proper tx for logging.
    
    Issue #904.

[33mcommit 51c2e1eaf6026e99b0b236d51171b5fbd1e09d04[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 7 15:08:58 2013 +0200

    htp: for apache and apache_2_2 personalities, that are no longer supported by libhtp, fall back to apache_2 with a warning.

[33mcommit 958938bf0163b6a08f18eb3b05ac265eb499c923[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 7 15:03:43 2013 +0200

    Bug 640: add more tests to validate that issue is fixed

[33mcommit 2be194d03f3b3d226b58f5c7fc999c9b31ce105e[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Oct 3 14:55:35 2013 +0200

    suricata: add -v[v] option to increase verbosity
    
    This patch adds a -v option to suricata. It increases the log level
    defined in the YAML.

[33mcommit 4a4600539db9394f19d8cd9cc62b9d1b9bfa2aaa[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Oct 3 13:50:09 2013 +0200

    suricata: info message after log init
    
    This patch moves version display after log init so we can have an
    homogeneous display.

[33mcommit fdc1757e34df8a3437b6e4112aacf1dae85a54f6[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Oct 3 13:43:58 2013 +0200

    suricata: reorder start
    
    Initalizing output just after configuration file parsing allow to
    log almost all messages accordingly to configuration.

[33mcommit 7bcacc712aca3d933993a8b7b4e5935059e41ecf[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Oct 3 10:55:10 2013 +0200

    log: change default log level to notice
    
    This patch updates the log level of meaningful start messages to
    notice. It also sets the default log level to notice.

[33mcommit c1190545cfb1d06037847b94620591d2be6f3c07[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 3 10:33:56 2013 +0200

    Revert change in queue handler wait logic. Bug #988.

[33mcommit 8d6bca72f7a6b35deb366e5e0e28c3ee4df080ec[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 3 09:58:06 2013 +0200

    Improve 'host-mode' info message

[33mcommit 57abba2e64dabfacec76ec4c8f0ba4a1cba26758[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 3 09:48:32 2013 +0200

    Coverity 1100842: add missing return statement

[33mcommit afaa10b37d039302bc1905a08cd56d8430c50840[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 3 09:12:34 2013 +0200

    Coverity 1100843: remove unnecessary check

[33mcommit cb150003879edc0128f1902db903c5466f86a733[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 1 14:08:36 2013 +0200

    http: add new events for invalid host header and host part of uri

[33mcommit 43b39d333f2b006dc890b881e2e109e9773f20d0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 1 13:49:39 2013 +0200

    http: fix some decoder events
    
    Some events we retrieved from error messages are flag now, so check
    those. Not all can be converted though. These are no longer set:
    
    HTTP_DECODER_EVENT_INVALID_TRANSFER_ENCODING_VALUE_IN_RESPONSE
    HTTP_DECODER_EVENT_INVALID_AUTHORITY_PORT
    
    Part of Bug #982.

[33mcommit 85f13c4e2857befe80627393549352410aedc4dd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 1 12:20:07 2013 +0200

    http: update http rules

[33mcommit 636791751e75727fd2adeac1e7b34df1a50d3db1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 1 12:15:41 2013 +0200

    http: fix field too long events

[33mcommit 5d10bafdbaa405a4d9c390ef814e625706d4c5b1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 1 12:13:38 2013 +0200

    http: don't call HTPHandleWarning before HTPHandleError as the latter handles warnings and errors.

[33mcommit 129b6a65ca20ed04076e2ab7efdd58e15021d8a5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 1 11:59:42 2013 +0200

    http: add test for HTTP_DECODER_EVENT_UNKNOWN_ERROR event as a result of a too long request

[33mcommit 2c50e411538f173ffba00823adf04901c1a768d1[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Oct 1 16:23:47 2013 +0200

    reject: try to fail more gracefully
    
    In the case of reject both, a failure in sending one way do not lead to
    abort the reset procedure.

[33mcommit 10b05a6361ba3885d3d9b2ca6bba1b5a06c6fcd0[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Oct 1 16:05:34 2013 +0200

    reject: clean respond-reject code.

[33mcommit 6f1cf9728edc304c37155993e14e9d5cced3dc2a[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Sep 26 19:57:19 2013 +0200

    reject: delete debug line

[33mcommit f05efeb46f1286c0cb05830c3e85fffab1ea2075[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Sep 18 13:27:49 2013 +0200

    Add reject for IPv6
    
    With this patch reject is now available in IPv6.

[33mcommit 64cd49da319d6eba11feed7e8a7e79effe9027c5[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Sep 13 13:46:19 2013 +0200

    configure: accept libnet 1.1 and 1.2.

[33mcommit 5f224f87d1e59f90969d45e6dcbbd6918083ee7d[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Sep 11 17:52:09 2013 +0200

    reject: update computation of seq and ack
    
    We have follow TCP RFC (http://tools.ietf.org/html/rfc793#section-3.4).
    There is two cases depending on wether the original packet contains a
    ACK.
    If packet has no ACK, the RST seq number is 0 and the ACK is built the
    standard way.
    If packet has a ACK, the seq of the RST packet is equal to the ACK of
    incoming packet and the ACK is build using packet sequence number and
    size of the data.
    
    Regarding standard Ack number, it is computed using seq number of captured
    packet added to packet length. Finally 1 is added so we respect the
    RFC:
        If the ACK control bit is set this field contains the value of the
        next sequence number the sender of the segment is expecting to
        receive.  Once a connection is established this is always sent.
    
    With this patch we have some correct results. With the following rule:
        reject ssh any any -> 192.168.56.3 any (msg:"no SSH  way"; sid:3; rev:1;)
    ssh connection to 192.168.56.3 is correctly resetted on client side.
    
    But this is not perfect. If we have the following rule:
        reject tcp any any -> 192.168.56.3 22 (msg:"no way"; sid:2; rev:1;)
    then the connection is not resetted on a standard ethernet network. But
    if we introduce 20ms delay on packets, then it is correctly resetted.
    This is explained when looking at the network trace. The reset is sent
    as answer to the SYN packet and it is emitted after the SYN ACK from
    server because the exchange is really fast. So this is discarded by the
    client OS which has already seen a ACK for the same sequence number.
    
    This should fix #895.

[33mcommit 4e15cf2245186109fb4ec965ca675b95adb2d911[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Sep 12 15:17:38 2013 +0200

    reject: fix typo

[33mcommit efc12b24ae802de6bd925fd8d6374b5e8744a9ce[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Sep 11 17:58:28 2013 +0200

    reject: use host-mode to set interface
    
    This patch update reject code to send the packet on the interface
    it comes from when 'host-mode' is set to 'sniffer-only'. When
    'host-mode' is set to 'router', the reject packet is sent via
    the routing interface.
    
    This should fix #957.

[33mcommit 9bbd2a103da891ab9e2eccd66f69319c15619010[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Sep 11 17:45:20 2013 +0200

    reject: reindent and code cleaning
    
    Reindent file and use some switch instead of if else if.

[33mcommit 6cf7da30e2321740c94e6c43aa7ecb1f92f71043[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Sep 13 12:21:04 2013 +0200

    Introduce host-mode.
    
    This variable can be used to indicate to suricata that the host
    running is running as a router or is in sniffing only mode.
    This will used at least to determine which interfaces are used to
    send reject message.

[33mcommit d8cb821875d5b66f80b0b4bdfd3686d40c69f1c9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 2 12:12:01 2013 +0200

    locks: clean up locks declarations
    
    Split threads.h into several files, where each of these files defines
    all lock types and macro's.
    
    threads.h defines the normal case
    threads-debug.h defines the debug variants
    threads-profile.h defines the lock profiling variants
    
    Finally, threads-arch-tile.h moves the Tilera specifics out

[33mcommit 0a1ca02b3b507cdcdc351c050f688cb983d75aa9[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Oct 2 12:12:29 2013 +0200

    coccinelle: implement parallel check
    
    This patch is an implementation of parallel check of files. It uses
    GNU parallel to run multiple spatch at once.
    The concurrency level is set via the CONCURRENCY_LEVEL environment
    variable.

[33mcommit c5cd3562d0c473fb9e89810882608c49f9dc1b1a[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Mon Sep 30 21:52:07 2013 +0530

    Stateful detection inspection continuation API call should update per
    signature's Sigmatch entry as well.

[33mcommit 7f0cc97f5be1319802d2483ee9015bdbeb6c1bd5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 19 16:41:06 2013 +0200

    Thresholding: move parsing code into separate func

[33mcommit 8ce38ac8fe0cda143dfdbf3dddddc836e39e959a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 19 16:16:50 2013 +0200

    Split Thresholds and Suppression
    
    Thresholds and suppression can be handled independently. Suppression
    only suppresses output, and is not related to Threshold state tracking.
    
    This simplifies mixing suppression and thresholding rules.
    
    Part of the Bug #425 effort.

[33mcommit 592d48aab727142cb2521468e5ed9d85f2408783[m
Author: Ken Steele <ken@tilera.com>
Date:   Fri Sep 27 16:27:13 2013 -0400

    Use Spin locks on Tile
    
    On Tile, replace pthread_mutex_locks with queued spin locks (ticket
    locks) for dataplane processing code. This is safe when running on
    dataplane cores with one thread per core. The condition variables are
    no-ops when the thread is spinning anyway.
    
    For control plane threads, unix-manager, stats-logs, thread startup,
    use pthread_mutex_locks. For these locks replaced SCMutex with SCCtrlMutex
    and SCCond with SCCtrlCond.

[33mcommit 2f4e11b1ca6dde1aca311ea557544f96fe07fb7d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 30 17:46:32 2013 +0200

    Fix compiler warning
    
    app-layer-parser.c: In function ‘AppLayerPPTestData’:
    app-layer-parser.c:2525:9: error: variable ‘dir’ set but not used [-Werror=unused-but-set-variable]
         int dir = 0;
             ^

[33mcommit 85a51638c94916f10a9c092ea52355ff251dc8ef[m
Author: Ken Steele <ken@tilera.com>
Date:   Sun Sep 29 10:45:44 2013 -0400

    Improve Signature sorting speed
    
    Changed the signature sorting code to use a a single merge sort instead
    of the multiple pass sorting that was being used. This reduces startup
    time on Tile by a factor of 3.
    
    Also replace the user array of pointers to ints with a simpler array of
    ints.

[33mcommit 5c08b2296fce79cc49d73a67fc3a2c04551a8ccb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 27 17:49:56 2013 +0200

    DNS: copy only the length of the hardcoded string, not the length of the destination buffer.

[33mcommit 57ed5dfd32d6bdf40d49a480cebb6c5a2e8aaaae[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Mon Sep 30 20:21:15 2013 +0530

    Fix return value from DetectProtoParse() which is used by probing
    parser.

[33mcommit ac65784cbca82e6cb76a49fcdc287b58d4d7ad68[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Mon Sep 30 19:47:10 2013 +0530

    Fix coverity scan defect #1099714.
    
    Sending back uninitialized variable in DetectParseProto().

[33mcommit e383cc27cd459af1b720a2f3be73c757464bfad0[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sun Sep 29 22:15:46 2013 +0530

    Fix a leak in probing parsers.  We were freeing just the head of the list,
    instead of all the members.

[33mcommit 980934d670864c627c07a7c52966bda45df29e78[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sun Sep 29 22:15:21 2013 +0530

    Fix a leak in app layer parser proto code.  Free the proto signatures
    allocated internally for PM parser.

[33mcommit fc826140256290375e3a455563cff9d6d65d443b[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sun Sep 29 22:11:34 2013 +0530

    Fix mem leak in b2g.

[33mcommit 06db1e4cb821cb33036c7a456af5fa399f0ca069[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sat Sep 28 13:08:13 2013 +0530

    Remove unused vars alp_content_module_handle and proto_map from
    struct AlpProtoDetectCtx.

[33mcommit 558f5705eb622c86c47c5e03b03cf0213f81b30a[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sat Sep 28 12:20:59 2013 +0530

    Remove the unused flow flags - FLOW_TS_PM_PP_ALPROTO_DETECT_DONE and
    FLOW_TC_PM_PP_ALPROTO_DETECT_DONE.

[33mcommit 36220b689bed814796e471f4788dd0e33518c596[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sat Sep 28 08:48:47 2013 +0530

    Reset some flow flags when port numbers are re-used and we re-use the
    flow as a part of a new session.

[33mcommit af1df7a89d5113a6fe680a0ee73006173e41deca[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Thu Sep 12 20:22:52 2013 +0530

    Remove the smtp parser restriction that it accepts data only in to client
    direction first.

[33mcommit 3ec411486e93f201628b366321a15a6e4df6256f[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Wed Sep 11 15:30:26 2013 +0530

    Fix compilation failure when we don't enable unittests.  Got to #ifdef
    ALPROTO_TEST.

[33mcommit d76a5bedbc51a862e3a6722c3c05ae7bd8eb7c75[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Wed Sep 11 12:52:47 2013 +0530

    Update stream inline to use the improved app proto detection.

[33mcommit 96d1ba9106211c4a810615c3ddc34ab55274309c[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Mon Sep 9 18:29:58 2013 +0530

    Cosmetic changes to app parser struct.
    
    Removed a flag parameter introuced earlier to indicate the data
    that is first acceptable by the parser.  We now use a differently
    named parameter to carry out the same activity.

[33mcommit 2cb5bdd3fab4e74f161f3e649e5b0dd9ead4153d[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Mon Sep 9 18:10:33 2013 +0530

    Cosmetic changes to code. Introduce human readabel flag values for some constants. Here the parameter in question is "data_first_seen_dir" for session context.

[33mcommit e42905f3b9588b3863f1f3588782e97c7a6ce5b2[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Mon Sep 9 17:19:32 2013 +0530

    indentation fix.

[33mcommit 6bef5fda06d756663bdf07f94761ae5d23cc1966[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Mon Sep 9 16:55:13 2013 +0530

    If we have proto mismatch from 2 directions, use one of the protos, instead of erroring out and not sending the data further to the parser.
    
    The logic we use currently is if we have already sent some data to
    a parser before we figure out we have a proto mismatch, we use the
    proto from the first direction from which we have already sent the
    data to the parser, else we stick to the the to client direction.

[33mcommit 976a86def44bf45b866a7599062523875b46def8[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Mon Sep 9 12:04:20 2013 +0530

    Introduce convenience macro to set Stream app proto completion flag.

[33mcommit 16144fe38aec318cbb129c566822b487ec715a82[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sat Aug 31 08:06:26 2013 +0530

    Rename function pointer var to use the FuncPtr typing convention. Resupply "dns" as the alproto name for ALPROTO_DNS.

[33mcommit 8ae92c7a5e280e09df65589b45604421a0c92cc3[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri Aug 30 16:01:33 2013 +0530

    Add unittest to test for http ambiguous host header.
    
    Previously we would not check the port part of the host from the uri
    hostname, while we did use the port part from the host header, leading
    to FPs.

[33mcommit d0c5f51293d88d123f99dbc4f20ece5cbc77e870[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Mon Aug 19 20:52:17 2013 +0530

    Update rule engine relationship with regard to setting ip protocol between specifying protocol after action, ip_proto and app-layer-protocol.
    
    Now we can specify alproto, ip_proto combinations this way
    
    alert dns (ip_proto:[tcp/udp];)
    alert ip (app-layer-protocol:dns;)
    alert ip (app-layer-protocol:dns; ip_proto:tcp;)
    alert tcp (app-layer-protocol:dns:)
    
    so on.  Neater than using dnstcp/dnsudp.
    
    This is related to feature #424.

[33mcommit 6eb8f66f0ae6bac3891c9716cb9380138eb6c793[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Mon Aug 19 11:06:30 2013 +0530

    alert ipv4 and alert ipv6 specified proto rules should be treated and PROTO_ANY just like how we treat alert ip rules.

[33mcommit f592c481dc42e7c69ceb390686ca58b67a3e78d8[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sun Aug 18 19:36:55 2013 +0530

    Introduce a separate inspection engine for app events.

[33mcommit 9e4eec200f70966036de19e2972ce1e1a19d3ef6[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sat Aug 17 17:49:47 2013 +0530

    Update htp event handler to both warning and error events regardless of any conditions.

[33mcommit b1dffdfbe0b28962d013cfdad4e52b86a9e0c906[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri Aug 16 20:08:53 2013 +0530

    Add app layer protocol packet event detection support.

[33mcommit 5e2d9dbdc3079bcdb1a86536aa2e0f615078b32b[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sun Aug 11 18:16:53 2013 +0530

    Add and use EventGetInfo for getting info on an event.
    
    Also update existing parsers and app-layer-event Setup to use this.

[33mcommit 60a2b157b2935650fd0c45b68b73629d0092f355[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Mon Aug 5 20:07:28 2013 +0530

    Fix duplicate packet decoder events. Add event entries that were missing as well.

[33mcommit 1077acecd797431364d724d02e426f3b4319e3d0[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Mon Aug 5 18:57:44 2013 +0530

    validate dns sigs that are reported as plain dns and not dnsudp or dnstcp.

[33mcommit 6cb0014287db8d7d21a7d0247545fc5a5d6778b8[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Mon Aug 5 11:16:05 2013 +0530

    Move app event module registration as a part of app layer proto table.

[33mcommit 64b0939b4a51cf3c23ec4c2c79f28e2edc23f31f[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sun Aug 4 17:38:54 2013 +0530

    code cleanup.

[33mcommit 0d7159b525f36dd77c68fee22d6c6ef363e084cd[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sun Aug 4 12:08:59 2013 +0530

    App layer protocol detection updated and improved.  We now use
    confirmation from both directions and set events if there's a mismatch
    between the 2 directions.
    
    FPs from corrupt flows have disappeared with this.

[33mcommit 22c05da3cd938810a102b7862f379417314cb0de[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sun Aug 4 01:31:32 2013 +0530

    Replace ssn appproto_detection_completed flag with individual stream ones.

[33mcommit c044541b1cc1c892d8ffcb49a7c0251afe689275[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sun Aug 4 01:10:10 2013 +0530

    Provide convenience macros for setting flow flags on protocol matching by
    PM and PP phase.
    
    Replace the areas of the code that would otherwise rely on setting/reading
    these flags with these macros.
    
    Other minor tweaks to some api calls.

[33mcommit 00f546e739a3439799c0fa9456338ba36351b38c[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sun Aug 4 00:52:45 2013 +0530

    update pmp to return whole set of matches, rather than a single match.

[33mcommit 4f7339c423a905f4d39c641cf5c5fa690a1dc46d[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sun Aug 4 00:03:46 2013 +0530

    code cleanup.

[33mcommit 8e8bc49063702fb92387bfaabddd96aca09a6816[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sun Aug 4 00:03:23 2013 +0530

    Introduce detection parser function pointer.

[33mcommit 94e40907e2f8b8aa4b32f65e485b423ac613bd27[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sat Aug 3 19:46:46 2013 +0530

    feature #727 - Add support for app-layer-protocol:<protocol> keyword

[33mcommit 6f8cfd999f868cde0f52a80c571bdbddb41efa17[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sat Aug 3 14:53:13 2013 +0530

    Allow detection ports for alproto to be specified via the conf file.
    
    To understand the option have a look at the option
    
    app-layer.protocols.tls.detection-ports

[33mcommit ddde572fbad2163994ea38097c54dfb6d381615c[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri Aug 2 21:42:58 2013 +0530

    Introduce new options into the conf file to enable/disable -
    
    1. Proto detection
    2. Parsers
    
    For app layer protocols.
    
    libhtp has now been moved to the section under app-layer.protocols.http,
    but we still provide backward compatibility with older conf files.

[33mcommit d9686fae57f85f2bd4808dabc327c1c6ce7ef7d7[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri Aug 2 15:23:35 2013 +0530

    Now supports accepting port addresses as strings, like the ones accepted in our rules. As a consequence we now accept port range, and other such combination. Support PP for ports based on ipproto as well.

[33mcommit 48b5513ed91b3b85449bce7c60fd893efd119b75[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 27 14:59:19 2013 +0200

    Properly clean up decoder event rules
    
    Addresses:
    ~~Dr.M~~ Error #3: LEAK 120 direct bytes 0x08a26ac8-0x08a26b40 + 1871 indirect bytes
    ~~Dr.M~~ # 0 replace_malloc                               [/work/drmemory_package/common/alloc_replace.c:2292]
    ~~Dr.M~~ # 1 SigGroupHeadAlloc                            [/home/victor/dev/oisf/src/detect-engine-siggroup.c:144]
    ~~Dr.M~~ # 2 SigGroupHeadAppendSig                        [/home/victor/dev/oisf/src/detect-engine-siggroup.c:1014]
    ~~Dr.M~~ # 3 DetectEngineAddDecoderEventSig               [/home/victor/dev/oisf/src/detect.c:3026]
    ~~Dr.M~~ # 4 SigAddressPrepareStage2                      [/home/victor/dev/oisf/src/detect.c:3075]
    ~~Dr.M~~ # 5 SigGroupBuild                                [/home/victor/dev/oisf/src/detect.c:4311]
    ~~Dr.M~~ # 6 SigLoadSignatures                            [/home/victor/dev/oisf/src/detect.c:464]
    ~~Dr.M~~ # 7 LoadSignatures                               [/home/victor/dev/oisf/src/suricata.c:1706]
    ~~Dr.M~~ # 8 main                                         [/home/victor/dev/oisf/src/suricata.c:1994]

[33mcommit c43e078db87b535efa066829f5bd45f2e1917981[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 27 14:46:30 2013 +0200

    ipproto: improve cleanup
    
    To address:
    ~~Dr.M~~ Error #2: LEAK 16 direct bytes 0x08399688-0x08399698 + 2 indirect bytes
    ~~Dr.M~~ # 0 replace_malloc                      [/work/drmemory_package/common/alloc_replace.c:2292]
    ~~Dr.M~~ # 1 SigMatchAlloc                       [/home/victor/dev/oisf/src/detect-parse.c:201]
    ~~Dr.M~~ # 2 DetectIPProtoSetup                  [/home/victor/dev/oisf/src/detect-ipproto.c:523]
    ~~Dr.M~~ # 3 SigParseOptions                     [/home/victor/dev/oisf/src/detect-parse.c:510]
    ~~Dr.M~~ # 4 SigParseOptions                     [/home/victor/dev/oisf/src/detect-parse.c:523]
    ~~Dr.M~~ # 5 SigParse                            [/home/victor/dev/oisf/src/detect-parse.c:881]
    ~~Dr.M~~ # 6 SigInitHelper                       [/home/victor/dev/oisf/src/detect-parse.c:1309]
    ~~Dr.M~~ # 7 SigInit                             [/home/victor/dev/oisf/src/detect-parse.c:1456]
    ~~Dr.M~~ # 8 DetectEngineAppendSig               [/home/victor/dev/oisf/src/detect-parse.c:1728]
    ~~Dr.M~~ # 9 DetectLoadSigFile                   [/home/victor/dev/oisf/src/detect.c:334]
    ~~Dr.M~~ #10 SigLoadSignatures                   [/home/victor/dev/oisf/src/detect.c:422]
    ~~Dr.M~~ #11 LoadSignatures                      [/home/victor/dev/oisf/src/suricata.c:1706]

[33mcommit 1006d905d0c94005fbfff996780e83030e23d5aa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 27 14:45:37 2013 +0200

    Improve memory cleanup for decoder-events
    
    To address:
    
    ~~Dr.M~~ Error #1: LEAK 1 direct bytes 0x0892c108-0x0892c109 + 0 indirect bytes
    ~~Dr.M~~ # 0 replace_malloc                        [/work/drmemory_package/common/alloc_replace.c:2292]
    ~~Dr.M~~ # 1 DetectEngineEventParse                [/home/victor/dev/oisf/src/detect-engine-event.c:173]
    ~~Dr.M~~ # 2 _DetectEngineEventSetup               [/home/victor/dev/oisf/src/detect-engine-event.c:204]
    ~~Dr.M~~ # 3 DetectDecodeEventSetup                [/home/victor/dev/oisf/src/detect-engine-event.c:248]
    ~~Dr.M~~ # 4 SigParseOptions                       [/home/victor/dev/oisf/src/detect-parse.c:510]
    ~~Dr.M~~ # 5 SigParseOptions                       [/home/victor/dev/oisf/src/detect-parse.c:523]
    ~~Dr.M~~ # 6 SigParse                              [/home/victor/dev/oisf/src/detect-parse.c:881]
    ~~Dr.M~~ # 7 SigInitHelper                         [/home/victor/dev/oisf/src/detect-parse.c:1309]
    ~~Dr.M~~ # 8 SigInit                               [/home/victor/dev/oisf/src/detect-parse.c:1456]
    ~~Dr.M~~ # 9 DetectEngineAppendSig                 [/home/victor/dev/oisf/src/detect-parse.c:1728]
    ~~Dr.M~~ #10 DetectLoadSigFile                     [/home/victor/dev/oisf/src/detect.c:334]
    ~~Dr.M~~ #11 SigLoadSignatures                     [/home/victor/dev/oisf/src/detect.c:422]

[33mcommit 1180f633e27b60b0c1dd160ea91803bd82798c44[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 27 12:13:21 2013 +0200

    Add DrMemory suppress file
    
    The suppress file currently suppresses:
    - bug #978
    - bug #979
    
    Plus a seemingly harmeless warning that happens during libmagic init.
    
    DrMemory is a valgrind like memory checker: http://www.drmemory.org/

[33mcommit 1be6a8a48ba887318b169996932a388b4aad0193[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 27 11:42:42 2013 +0200

    Fix small leak in ports validation at startup

[33mcommit 36010919528bbb64bd5f53793b556535a44d69e8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 27 10:19:16 2013 +0200

    flowint: further setup fixes and cleanups

[33mcommit 8080494e9acdff9c82884be182c525aebde2570f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 26 18:34:36 2013 +0200

    counters: consolidate counters after all ThreadInit functions of a thread have run. This prevents duplicate and overwriting memory allocations.

[33mcommit 7f8d256e7cfa0f062628d801cead18580a68f96b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 26 18:33:33 2013 +0200

    Fix tests that didn't expect radix to be freed

[33mcommit d2d784e31aa5baab5abd35b0f69f0cf8bd71a03a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 26 15:35:46 2013 +0200

    radix: actually free a tree in SCRadixReleaseRadixTree

[33mcommit c94b9208745c5a10ef870cdf2817e2ec5260ed65[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 26 15:28:56 2013 +0200

    flowint: fix compile warning

[33mcommit a8c416fc8befc023895fbe3cdef8c4a26bf9245c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 26 15:23:48 2013 +0200

    flowint: fix setup memory leaks

[33mcommit 16130cc9745bc025d90273848d4964a93d30ff20[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 26 15:06:57 2013 +0200

    ssh: fix memleaks during ssh.softwareversion init and cleanup

[33mcommit ec724a1e56729e27a673894ff81b499ea6c296d3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 26 14:58:41 2013 +0200

    urilen: fix memory leak when freeing the rule

[33mcommit cfa2cda42b6134b6119c42b0d44cd942755d0f1a[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Wed Sep 25 22:37:57 2013 +0530

    fix for bug #973.
    
    An alternative solution for bug #970.
    
    For chopped patterns, which in it's whole is a duplicate of another
    pattern we assign an unique content id.

[33mcommit 4da2f290545289b912f959867bfc6a799ca62681[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Wed Sep 25 22:33:57 2013 +0530

    Unittest for bug #973.

[33mcommit 013e7a05734bc57ac03af8a165715327e69868d2[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Sep 25 21:22:11 2013 +0200

    prscript: update code following buildbot upgrade
    
    The authentication scheme did change on the buildbot due to a
    software upgrade. This patch update prscript.py to fix the build
    submission.

[33mcommit fa861b09ac502dcbc7ff71f95a97f00cc1aa8708[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Sep 11 12:08:52 2013 +0200

    prscript: support bigger PR
    
    The script now looks for originan HEAD in 100 commits instead of 30.
    It should be enough becasue a sane PR should not have 100 commits.

[33mcommit ad1546d59a4ee4506411b7405cae2898f6bfdea2[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Sep 11 10:35:52 2013 +0200

    prscript: display url where user can watch build

[33mcommit 0bfba8352de1c60953e218bc04df3516aedd594c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 25 20:06:53 2013 +0200

    pcre: check for pcre_free_study, fall back to pcre_free if it unavailable

[33mcommit dd76e679fee0223f58c7a92b07361a7be62f12e7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 25 10:49:45 2013 +0200

    mpm: clean up stream thread ctx

[33mcommit 6f450785fc046a2cf9df9380bc0c967530e0b8f7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 25 10:26:01 2013 +0200

    profiling: properly clean up thread local memory.

[33mcommit eca1a8d73a6a42a2ed4eede4349c386dce9a151e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 25 10:21:17 2013 +0200

    profiling: don't alloc 0 bytes block if no rules are used

[33mcommit 468a8e1ca3874c6d5c61bc0a6af1100a5a105e23[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 25 10:19:09 2013 +0200

    Properly cleanup NSS ctx

[33mcommit eedd4329da62514676d1f46b99e6b02f564f3923[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 25 10:15:30 2013 +0200

    Change ParseSize api to not leak memory and only setup pcre once.

[33mcommit 3d78cc8ca6e15dacab4ffbf6447a8c6398d800d5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 25 10:14:46 2013 +0200

    DNS: free TX events using proper function

[33mcommit 6f2cb141cf8c4cbd88959e713f7772e5480634fa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 24 20:17:36 2013 +0200

    Http: improve tx data cleanup

[33mcommit 239ab202c92a3ae8ee653ce9fb81bd9569239219[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 24 20:00:21 2013 +0200

    stream: clean up queue list in all cases

[33mcommit 67c12c61d39ee9c8a2c7a0de09749f147f5ef7ba[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 24 19:59:54 2013 +0200

    Http: fix memory leaks when cleaning up our per-tx storage

[33mcommit 6aed56d093f0ae07695c643d2655f0fce1228fb9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 24 19:59:07 2013 +0200

    Dns: fix memory leak when events are set

[33mcommit cd7f0273a21880cff8ff927abb327a30270015ba[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Tue Sep 24 11:31:37 2013 +0530

    Add decoder event rule for tls event "invalid_ssl_record", which will now be available "app-layer-event:tls.invalid_ssl_record".

[33mcommit cd80dcbfd4616582daa39fa56960208ee8e23262[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri Sep 13 19:57:29 2013 +0530

    bug #955 - Fix SSL parsing issue.
    
    The parser wasn't carrying out a bounds check on record length while
    in the middle of parsing a handshake.  As a result we would step onto the
    next record header and consider it a part of the current handshake.
    
    - Contains an unittest to test the issue.
    - Disable the duplicate parser unittest registration.
    
    The issue came to light through an irregular ssl record, which was
    reported by Sebastian Roschke, via CVE-2013-5919.
    
    Thanks to Sebastian Roschke for reporting this issue.

[33mcommit 8c1e8556327b4fa55dd3f4e722049aea655323b8[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Tue Sep 24 13:29:20 2013 +0530

    fix for bug #970(ac-gfbs).
    
    Content strings that are a duplicate of a pattern from another sig, but
    have a fast_pattern chop being applied, would end up being assigned the
    same pattern id as the duplicate string.  But the string supplied to the
    mpm would be the chopped string, which might result in the state_table
    output_state content entry being over-riden by the the fuller string at
    the final state of the smaller content length, because of which during a
    match we might end up inspecting the search buffer against the fuller
    content pattern, instead of the chopped pattern, which would end up being
    an inspection beyond the buffer bounds.

[33mcommit 92a8b2b738796ffd660d21abfe86f7c0c428e579[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Tue Sep 24 13:23:36 2013 +0530

    Unittest to display bug #970(ac-gfbs).

[33mcommit 496f30a5e4417a7aa0c9b587d662702b287fa975[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Tue Sep 24 13:26:45 2013 +0530

    fix for bug #970(ac-bs).
    
    Content strings that are a duplicate of a pattern from another sig, but
    have a fast_pattern chop being applied, would end up being assigned the
    same pattern id as the duplicate string.  But the string supplied to the
    mpm would be the chopped string, which might result in the state_table
    output_state content entry being over-riden by the the fuller string at
    the final state of the smaller content length, because of which during a
    match we might end up inspecting the search buffer against the fuller
    content pattern, instead of the chopped pattern, which would end up being
    an inspection beyond the buffer bounds.

[33mcommit af95df67a51c42b7923368191b2534dd65b43164[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Tue Sep 24 13:13:11 2013 +0530

    Unittest to display bug #970(ac-bs).

[33mcommit 68ba9df8a02d4f3916a21b397e16a48630c73e2e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 23 16:55:32 2013 +0200

    Fix valgrind warning on memrchr unittest.

[33mcommit d2ea799d38ab37fb143c030fd14ee571d335f4e8[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Mon Sep 23 15:23:12 2013 +0530

    fix for bug #970.
    
    Content strings that are a duplicate of a pattern from another sig, but
    have a fast_pattern chop being applied, would end up being assigned the
    same pattern id as the duplicate string.  But the string supplied to the
    mpm would be the chopped string, which might result in the state_table
    output_state content entry being over-riden by the the fuller string at
    the final state of the smaller content length, because of which during a
    match we might end up inspecting the search buffer against the fuller
    content pattern, instead of the chopped pattern, which would end up being
    an inspection beyond the buffer bounds.

[33mcommit da75db93302eee74288f9d532c167d7964051c4a[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Mon Sep 23 19:54:24 2013 +0530

    Unittest to display bug #970.

[33mcommit 397a55457d3d23fd628e0a07505f7c4bd9387de2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 23 13:08:03 2013 +0200

    Add sanity checks for command line argument handling
    
    Coverity 1075221.
    
    Normally getopt_long should cover this case, but can't hurt to
    add in some extra checks.

[33mcommit c8b71938ff64b58fb64bb30a7c7df452609bc2b2[m
Author: Victor Julien <victor@mini.local>
Date:   Fri Sep 20 17:12:58 2013 +0200

    Add a fallback memrchr implementation for those platforms that dont support it. Bug #963.

[33mcommit e77b21a7f789e57949c14f64bcecb8d1232aa547[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 20 15:59:43 2013 +0200

    Suppress compiler warning about comparing signed and unsigned vars

[33mcommit bb8298ffa20ea2901e89ccf1eac4c95ac5da60ff[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 20 15:57:23 2013 +0200

    Move header thread_affinity declaration to extern to avoid duplicate declarations.

[33mcommit 3470b07ea58781feea94deb4503d30868d4b4040[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 20 13:06:55 2013 +0200

    Fix several compile and runtime warnings found by clang 3.2 with the -fsanitize=address option.

[33mcommit c82ecf553aff58493656b429c5884739f11c2ad9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 19 12:01:20 2013 +0200

    Tag: document in the code that 'tag' is compatible with ip only

[33mcommit d12761233cc57938f45853341ebe5e0c76990bb3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 19 10:59:52 2013 +0200

    Don't set tag on pseudo packets

[33mcommit 02cbbd0b89cc76b6529a8cae25f69446635c2eb4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 19 10:57:46 2013 +0200

    unified2: fix tags not being logged. Bug #968

[33mcommit 3749fc98fd2db5b625c6b0ffda72306cdcb73c4d[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Thu Aug 29 22:58:04 2013 +0530

    Modify handling of negated content.
    
    The old behaviour of returning a failure if we found a pattern while
    matching on negated content is now changed to continuing searching
    for other combinations where we don't find the pattern for the
    negated content.
    
    Thanks to Will Metcalf for reporting this.

[33mcommit 8539791c7e937d56d769d06f9ec364a420a78311[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 16 19:26:50 2013 +0200

    Coverity 1038102: remove dead code from host hash

[33mcommit 8237bbf18affe8936f6f5b394ee011528720dd98[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 16 19:26:13 2013 +0200

    Coverity 1038101: remove dead code from host hash timeout code

[33mcommit 440124a4b944b7535595c3a99b2fd9bf924c9512[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 16 19:25:35 2013 +0200

    Coverity 1038100: remove dead code from flow hash timeout code(2)

[33mcommit 243060a6b75f84e563f2d5683af88c7a9d07529f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 16 19:23:33 2013 +0200

    Coverity 1038099: remove dead code from flow hash timeout code

[33mcommit 2e82772a0ab35b1fe13327c209ea1cbf097ec78c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 16 18:31:05 2013 +0200

    Coverity 1038098: remove dead code from flow hash

[33mcommit aecefd00bd253927a5197e8a7d813c12b3ee11e2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 16 18:29:53 2013 +0200

    Coverity 1038095: remove dead code from defrag hash timeout code

[33mcommit 16056d51f2cfe3befc88d9d1120ca3295bd58419[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 16 18:28:45 2013 +0200

    Coverity 1038094: remove dead code from defrag hash

[33mcommit 32503bafaa986e9249a9123a915c98b32422c634[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 16 18:25:34 2013 +0200

    Coverity 1038089: error check fseek call

[33mcommit 4827a4dcef52cbe2f6d1de98e1295afec5f41b79[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 16 18:15:49 2013 +0200

    Coverity 400477: pcre_get_substring retval
    
    Add missing return code check to pcre_get_substring call.

[33mcommit 790866656b90d365383e035b7649305cc63a314c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 16 17:13:02 2013 +0200

    Coverity 1038129 fix
    
    Don't leak memory on malloc error in b2gm mpm implementation.

[33mcommit 33919559d0915c6d6489ea95384e99b3a016d5f7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 16 16:38:56 2013 +0200

    Fix memory leak on invalid luajit signature. Coverity 1038520.

[33mcommit 51c6a333d927d6d0f5fab18b9857d09fe0d35a4c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 16 16:34:59 2013 +0200

    geoip: never try to store more locations than possible (Coverity 1038517)

[33mcommit 3cf3b485f2becb29a765a0bf0d59105c41309aa1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 16 16:26:11 2013 +0200

    Coverity 1038138 fix
    
    Clean up parsing code to suppress Coverity:
    Dereference before null check (REVERSE_INULL)
    
    Proper checking was already done.

[33mcommit 27ea4232fedba281d4d349f23f7f52649c8fe645[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 16 16:24:15 2013 +0200

    Coverity 1038134 fix
    
    Cleaned up error check. "ipdup" can only be non-NULL there, so remove check
    that confused coverity.

[33mcommit ecd5c7573b1adfdf48c42ce8681335ffa47f5700[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 16 16:22:24 2013 +0200

    Coverity 1038135 fix
    
    Small cleanup in the error handling. The extra null check confused
    Coverity.

[33mcommit 38b6103ff5b7b0ba4edf32eb82e32a1be77da2b9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 16 16:18:52 2013 +0200

    Coverity 1038133 fix
    
    Clean up parsing code to suppress Coverity:
    Dereference before null check (REVERSE_INULL)
    
    Proper checking was already done.

[33mcommit 50f859e9f2bfa012b6836c7381b5473c8e9f909d[m
Author: Ken Steele <ken@tilera.com>
Date:   Mon Sep 16 08:57:53 2013 -0400

    Move SIMD implementations out of detect.c
    
    Move SIMD the implementations of SigMatchSignaturesBuildMatchArray()
    for SSE3 and Tile out of detect.c to reduce the size of the file.
    
    Also moved SIMD unit tests to detect-simd.c

[33mcommit 7f140f6726d2794a7a8e9278f5ec3074370eec4c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 16 15:26:49 2013 +0200

    Coverity 1038111: fix local overrun of a string in app layer proto detect setup code.

[33mcommit eb4f0da97ff7ca4169395e51fa33203aaa236e86[m
Author: Ken Steele <ken@tilera.com>
Date:   Wed Sep 11 16:04:11 2013 -0400

    Change one more atomic size in detect.h
    
    Change uint16_t to int for better tile atomic performance. Checked with
    pahole that it doesn't increase the size of the structure.

[33mcommit b08ddfa7f1bd38034423a1006bf2a6cb4ca8cbfd[m
Author: Ken Steele <ken@tilera.com>
Date:   Tue Sep 10 14:04:40 2013 -0400

    Support for Tile Gx atomic instructions
    
    Tilera's GCC supports the GCC __sync_ intrinsics.
    
    Increase the size of some atomic variables for better performance on
    Tile.  The Tile-Gx architecture has native support for 32-bit and
    64-bit atomic operations, but not 8-bit and 16-bit, which are emulated
    using 32-bit atomics, so changing some 16-bit and 8-bit atomic into
    ints improves performance.
    
    Increasing the size of the atomic variables modified in this change
    does not increase the total size of the structures in which they
    reside because of existing padding requirements. The one case that
    would increase the size of the structure (Flow_) was confitionalized
    to only change the size on Tile.

[33mcommit 54847e396fae357f4770e254fe189a5b1a9b8c48[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri Sep 6 20:24:21 2013 +0530

    unittests for gzip, deflate http compression, multiple stacked
    compressions, cunning compression that's not what it says it is, etc.
    
    These unittests are tweaked to pass.  When libhtp fixes these issues
    we will have to reenable them.

[33mcommit 94e2527606d51e8bf163ae5468ae52993117e26b[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri Sep 6 19:57:40 2013 +0530

    Introduce a saner way to validate the completion of request and
    response bodies.
    
    Also don't change app state for http from inside inspection.

[33mcommit dcdcbd97212f88ae7d6083a303c557a7123627ad[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri Sep 6 16:52:34 2013 +0530

    Fix creating a backup of htp config.  This is used by unittests that
    changed htp config.

[33mcommit 62540eff3ed96ee4cac0697374831ef1aff34855[m
Author: Ken Steele <ken@tilera.com>
Date:   Wed Sep 11 16:47:27 2013 -0400

    Align some structures to cacheline
    
    Align strucutres with pthread mutex locks to start on cachelines to keep
    the lock within one cacheline.

[33mcommit d84079ba7dca5fbb8c3718afffdd90bea21b6fea[m
Author: Ken Steele <ken@tilera.com>
Date:   Thu Sep 12 16:39:07 2013 -0400

    Move FlowIncrUsecnt to header file to allow for inlining.
    
    Move FlowIncrUsecnt() and FlowDecrUsecnt() from flow.c to flow.h to
    allow for inlining.

[33mcommit e05034f5ddb0da633f046d0f6d1067c67ef289d9[m
Author: Ken Steele <ken@tilera.com>
Date:   Thu Sep 5 08:59:13 2013 -0400

    New Multi-pattern matcher, ac-tile, optimized for Tile architecture.
    
    Aho-Corasick mpm optimized for Tilera Tile-Gx architecture. Based on the
    util-mpm-ac.c code base. The primary optimizations are:
    1) Matching function used Tilera specific instructions.
    2) Alphabet compression to reduce delta table size to increase cache
       utilization  and performance.
    
    The basic observation is that not all 256 ASCII characters are used by
    the set of multiple patterns in a group for which a DFA is
    created. The first reason is that Suricata's pattern matching is
    case-insensitive, so all uppercase characters are converted to
    lowercase, leaving a hole of 26 characters in the
    alphabet. Previously, this hole was simply left in the middle of the
    alphabet and thus in the generated Next State (delta) tables.
    
    A new, smaller, alphabet is created using a translation table of 256
    bytes per mpm group. Previously, there was one global translation
    table for converting upper case to lowercase.
    
    Additional, unused characters are found by creating a histogram of all
    the characters in all the patterns. Then all the characters with zero
    counts are mapped to one character (0) in the new alphabet. Since
    These characters appear in no pattern, they can all be mapped to a
    single character and still result in the same matches being
    found. Zero was chosen for the value in the new alphabet since this
    "character" is more likely to appear in the input. The unused
    character always results in the next state being state zero, but that
    fact is not currently used by the code, since special casing takes
    additional instructions.
    
    The characters that do appear in some pattern are mapped to
    consecutive characters in the new alphabet, starting at 1. This
    results in a dense packing of next state values in the delta tables
    and additionally can allow for a smaller number of columns in that
    table, thus using less memory and better packing into the cache. The
    size of the new alphabet is the number of used characters plus 1 for
    the unused catch-all character.
    
    The alphabet size is rounded up to the next larger power-of-2 so that
    multiplication by the alphabet size can be done with a shift.  It
    might be possible to use a multiply instruction, so that the exact
    alphabet size could be used, which would further reduce the size of
    the delta tables, increase cache density and not require the
    specialized search functions. The multiply would likely add 1 cycle to
    the inner search loop.
    
    Since the multiply by alphabet-size is cleverly merged with a mask
    instruction (in the SINDEX macro), specialized versions of the
    SCACSearch function are generated for alphabet sizes 256, 128, 64, 32
    and 16.  This is done by including the file util-mpm-ac-small.c
    multiple times with a redefined SINDEX macro. A function pointer is
    then stored in the mpm context for the search function. For alpha bit
    sizes of 8 or smaller, the number of states usually small, so the DFA
    is already very small, so there is little difference using the 16
    state search function.
    
    The SCACSearch function is also specialized by the size of the value
    stored in the next state (delta) tables, either 16-bits or 32-bits.
    This removes a conditional inside the Search function. That
    conditional is only called once, but doesn't hurt to remove
    it. 16-bits are used for up to 32K states, with the sign bit set for
    states with matches.
    
    Future optimization:
    
    The state-has-match values is only needed per state, not per next
    state, so checking the next-state sign bit could be replaced with
    reading a different value, at the cost of an additional load, but
    increasing the 16-bit next state span to 64K.
    
    Since the order of the characters in the new alphabet doesn't matter,
    the new alphabet could be sorted by the frequency of the characters in
    the expected input stream for that multi-pattern matcher. This would
    group more frequent characters into the same cache lines, thus
    increasing the probability of reusing a cache-line.
    
    All the next state values for each state live in their own set of
    cache-lines. With power-of-two sizes alphabets, these don't overlap.
    So either 32 or 16 character's next states are loaded in each cache
    line load. If the alphabet size is not an exact power-of-2, then the
    last cache-line is not completely full and up to 31*2 bytes of that
    line could be wasted per state.
    
    The next state table could be transposed, so that all the next states
    for a specific character are stored sequentially, this could be better
    if some characters, for example the unused character, are much more
    frequent.

[33mcommit 77b429c402e888c0325aed2f78cc8a8dba2902ab[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 12 17:44:26 2013 +0200

    xff: fix unittest crashes

[33mcommit 05d68ce39420ae269e9153ab44d86f11e55aaac6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 12 17:00:13 2013 +0200

    xff: don't do xff check if there are no alerts anyway.

[33mcommit 7dbb30525542d7896ddf6a3f1d57c5abf6a6d4f0[m
Author: Duarte Silva <development@serializing.me>
Date:   Thu Sep 12 14:18:52 2013 +0100

    Adds X-Forwarded-For support to the Unified2 output format
     - Added the Unified2 file format related constants
     - Added IPv6 support
     - Two modes of operation with a fall-back to "extra-data" mode if
       "overwrite" mode is not applicable
     - Changed the configuration loading code to handle the new
       configuration structure
     - When creating the packet that fakes the one that generated the alert
       the flow direction wasn't taken into account in overwrite mode
     - Fixed BUG_ON condition

[33mcommit a28ec7991240461786ba0112df0cedd39c6916c2[m
Author: Duarte Silva <development@serializing.me>
Date:   Thu Sep 12 13:37:56 2013 +0100

    Modified suricata configuration
     - Added the settings for XFF support
     - Removed non printable characters

[33mcommit daa9dcb75f24fcae601332c53e84460cfb64064e[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Aug 1 15:51:45 2013 +0200

    Use wget or curl to download ruleset.

[33mcommit 900918a5d136c4a937991f733f3b51a1687e02c5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 10 10:57:24 2013 +0200

    Bug #948: detect thread local storage support

[33mcommit 0861d3a2a3fd9d4d20a150a8e5d20f71b03ff6a7[m
Author: Ken Steele <ken@tilera.com>
Date:   Fri Sep 6 13:56:18 2013 -0400

    Minor optimization in time caching code.
    
    Reduced the size of the cached string buffer from 128 to 32, which is
    still larger than the largest possible time string, which is 26
    characters.
    
    Added a check for the user passing in an output buffer that is smaller
    than the cached string. Previously, the code would have copied past
    the end of the users buffer.

[33mcommit 49dcb0ca846cfa2661a25aa5f626904b2900e6da[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sun Sep 1 15:44:52 2013 +0530

    fix for #925.
    
    Log sensible error message when the user doesn't supply a value for
    stream.prealloc-sessions or when the values supplied in invalid and
    the engine resorts to using a default.

[33mcommit db6ef81fb01414f4258b152de19b00c07568a044[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sun Sep 1 15:31:09 2013 +0530

    fix for #926.
    
    Supply meaningful error message when user supplies invalid value for
    host.prealloc.

[33mcommit b90a56b626d5bd6f6abc77bbc9ebb54d2ce49ae2[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sat Aug 31 21:54:19 2013 +0530

    fix for #927.
    
    Print an error message when the user supplies an invalid value for
    detect-thread-ratio in the conf file.

[33mcommit bed3f605fa6dc0b68eb09438842fd4d66841e7bf[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri Sep 6 21:58:51 2013 +0530

    Fix for #922.
    
    Add more relevant error message when we supply invalid value for
    defrag.trackers and defrag.hash-size

[33mcommit 6608e7f523f67da927c6ed1c56d7f2dd1d04b4e5[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri Sep 6 21:56:35 2013 +0530

    Introduce generic utility API to log message on invalid config entry.

[33mcommit 6d348346230dedd9ee140c490068bf999e3a7db3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 9 17:19:03 2013 +0200

    Runmode fixes and cleanups
    
    Bug #939: thread name buffers are sized inconsistently
    These buffers are now all fixed at 16 bytes.
    
    Bug #914: Having a high number of pickup queues (216+) makes suricata crash
    Fixed so that we can now have 256 pickup queues, which is the current built-in
    maximum. Improved the error reporting.
    
    Bug #928: Max number of threads
    Error reporting improved. Issue was the same as #914.

[33mcommit 8a96296b4ae8591bdf8c835de2afd34aeb5c8755[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Sep 6 17:01:00 2013 +0200

    prscript: add verbose option

[33mcommit f23556dcdb119d45a2b613a98cd6755695394728[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Sep 6 16:25:00 2013 +0200

    prscript: exit when no build exists

[33mcommit c151b218f11dd9e09e1cad38382ac5502048d84d[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Sep 6 14:21:58 2013 +0200

    prscript: check if branch is synced with master
    
    The script now check if the tested branch is in sync with current
    inliniac's master.

[33mcommit c390006aee31e5bb8e084368e42469af2d9edfab[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Sep 6 11:26:21 2013 +0200

    script: add script to start personal builder
    
    This script HAS to be used by developer having an account on Suricata
    buildbot. It MUST be run before doing a PR. It will trigger a build on
    the branch and this will check the validity of the proposed branch.
    The cinematic is simple:
     - Push branch XXX to github
     - Run 'prscript.py -u USER -p PASSWORD XXX'
     - Wait for the result
     - If successful, PR can be done

[33mcommit 56143131da8a73ff87e90899e35545cf19df6381[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri Sep 6 09:37:05 2013 +0530

    Fix unittests that use chunked encoding.

[33mcommit ef4d11aeb58067a29fd491032e9f301d758ff58b[m
Author: Nelson Escobar <nelson@myri.com>
Date:   Tue Sep 3 15:39:08 2013 -0700

    Use the Async versions of SCCudaMemcpy* to improve gpu performance.

[33mcommit 867a44f378f1efbe5e5f2188cdd32325bb4d4dc2[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Sep 3 13:29:27 2013 +0200

    autotools: all target are conditional

[33mcommit 77f2b9968e859eb7fd7c00c6eba5f3a36af32abb[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Sep 3 13:27:48 2013 +0200

    autotools: use builddir instead of srcdir
    
    srcdir is supposed to be read-only when running distcheck so it is better to
    create the log directory in builddir.

[33mcommit 1b2f251866790d750a909a0e8471dcabaa17a8c1[m
Author: Ignacio Sanchez <“sanchezmartin.ji@gmail.com”>
Date:   Tue May 14 21:15:44 2013 +0100

    Various custom http logging improvements
    
    Cookie is parsed now using uint8_t pointers (inliniac PR comments)
    Changed buffer size to a power of 2 (8192) and cookie value extraction function to static (inliniac PR comments)
    Added %b for request size (vinfang patch)
    Writing "-" if an unknown % directive is used (vinfang patch)
    Fixed bug in cookie parser
    Fixed format string issue logging literal values
    Improve error handling (Victor Julien comments)
    
    (patchset rebased and reworded by Victor Julien)

[33mcommit 8051dc8a6af031b1849ab54bbeb25ecf76eb91d2[m
Author: Ignacio Sanchez <nc@owlsec.net>
Date:   Wed Feb 13 21:08:06 2013 +0000

    Added modifications suggested by Charles Smutz (https://redmine.openinfosecfoundation.org/issues/602)

[33mcommit 796bfab2317699779bb0d7dca257bb97083399d8[m
Author: Ignacio Sanchez <nc@owlsec.net>
Date:   Sun Oct 7 16:09:01 2012 +0100

    Added support for %{cookiename}C
    Added support for the definition of maximun length. ie: %[50]{user-agent}i
    Some small bugfixes

[33mcommit 3dbf6c6feef2f95cd78a15e7161762e2273d2c0b[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Aug 2 12:52:28 2013 +0200

    solaris: fix compilation failure
    
    This patch fixes a compilation failure on Solaris. Compiler does
    not support when a function returning void is used in return of
    an other function returning void.

[33mcommit 1bbbcf51205d6efd5bd02545833129c4eb7d754f[m
Author: Ken Steele <ken@tilera.com>
Date:   Tue Jul 30 11:03:26 2013 -0400

    Make the missing libhtp error message more clear.
    
    Use exact git clone command and then rerun autogen.sh and configure.

[33mcommit a2b502a30c3eb7c3e988f53e13c8cd9bc8f48974[m
Author: Ken Steele <ken@tilera.com>
Date:   Wed Aug 28 10:43:37 2013 -0400

    Formatting change for function call.
    
    Put open brace { for function on a new line to match coding standard.
    
    Changed:
    
    int foo(int x) {
    }
    
    to:
    
    int foo(int x)
    {
    }

[33mcommit d4dd18eb85841ba944957597ddf33ca268cd112d[m
Author: Ken Steele <ken@tilera.com>
Date:   Tue Aug 27 17:16:59 2013 -0400

    Clean up SCLocalTime() usage
    
    Remove cast of return type from SCLocalTime() as it is not needed.
    Replace last use of localtime_r() with SCLocalTime().

[33mcommit 77fae5313d9100501398f3b2509a3b3ea8b4a9a8[m
Author: Ken Steele <ken@tilera.com>
Date:   Fri Aug 30 12:34:43 2013 -0400

    On Open BSD systems don't cache time.
    
    Open BSD doesn't support __thread, which is used for time caching, so
    don't do time chaching for BSD systems.

[33mcommit 2feb37c15506d0b9260cc7b3fe67d77c664b2356[m
Author: Ken Steele <ken@tilera.com>
Date:   Tue Aug 27 16:38:22 2013 -0400

    Cache time conversions for localtime() and CreateTimeString()
    
    When converting a time in seconds (64-bit seconds since 1970) to
    Month/Day/Year hours minutes, Suricata calls localtime_r(), which
    always aquires a lock and then does complex comutation based on the
    current time zone. The time zone can be specified in the TZ
    environment variable, which is only parsed the first time it is used,
    or from a file. The default file is /etc/localtime. The file is
    checked each time to see if it might have changed and is reparsed if
    it has changed.
    
    The GLIBC library has a lock inside localtime_r(), which limits
    parallelism, which is a problem when the rate of generating alerts is
    high, since Suricata generates a new ascii time string for each alert
    into fast.log.
    
    This change caches the value returned by localtime_t() and then sets
    the seconds within the minute based on the cached start-of-minute
    time. All of the values return, expect for the seconds, is constant
    within the same minute. Switching to a new seconds could change all
    the other values, year, month, day, hour. The cache stores the current
    and previous minute values.
    
    The same trick is used in CreateTimeString() for generated time
    string. The string, up to the minutes, is cached and then copied into
    the result string, followed by printing the new seconds into the
    result string.
    
    The seconds within a minute are calculated as the difference in
    seconds from the start of the current minute.

[33mcommit 68d26dcec7ae462c4be724385ea3bb4fc744b4b2[m
Author: Ken Steele <ken@tilera.com>
Date:   Tue Aug 20 12:03:52 2013 -0400

    Merge multiple copies of CreateTimeString() to one copy.
    
    There were 8 identical copies of CreateTimeString() in 8 files.
    Most used SCLocalTime, to replace localtime_r(), but some did not.
    Created one copy in util-time.c.

[33mcommit 5532af462168521ba1bb815029ba81f557cf4097[m
Author: Ken Steele <ken@tilera.com>
Date:   Tue Aug 6 14:49:31 2013 -0400

    Create SCMUTEX_INITIALIZER to abstract out PTHREAD_MUTEX_INITIALIZER
    
    This allows replacing pthread mutexes with other types of mutex.

[33mcommit 784843b14636f6873596b39a433f079cc13078a1[m
Author: Ken Steele <ken@tilera.com>
Date:   Wed Jul 31 23:15:46 2013 -0400

    Use Tilera SIMD for Signature matching ala SSE3
    
    Makes use of 8-wide byte compare instructions in signature matching.
    
    For allocating aligned memory, _mm_malloc() is SSE only, so added
    check for __tile__ to use memalign() instead.
    
    Shows a 13% speed up.

[33mcommit 22225a7e990cfc430757493ac5fc0cc8ae92a5bf[m
Author: Ken Steele <ken@tilera.com>
Date:   Wed Jul 31 15:05:04 2013 -0400

    Tile SIMD implementation of SCMemcmp and SCMemcmpLowercase
    
    Based on the SSE3 implementation, it checks 8 bytes at a time.

[33mcommit e68d44b051e44ce5f2619bd5a89fa1de9da47574[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sat Aug 31 21:43:06 2013 +0530

    fix for #932.
    
    ipv6 tunnel decoder wrongly treats the tunneled ipv6 packets as an ipv4
    packet.

[33mcommit e2f4144d999f3161a151b317fa50d34871abc299[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri Aug 30 09:11:39 2013 +0530

    fix for #920.
    
    Cull the space before the address specified in address var variables.

[33mcommit ab215c72f6e5f2702e4d2eb05e7d5a71b5699863[m
Author: Duarte Silva <development@serializing.me>
Date:   Tue Jul 30 16:17:34 2013 +0100

    Now using the common functions

[33mcommit 0a5c798729a80448c767e1a25bd035e102383635[m
Author: Duarte Silva <development@serializing.me>
Date:   Tue Jul 30 16:16:41 2013 +0100

    Now using the common functions
    - Removed some non printable ANSI characters
    - Removed unecessary include

[33mcommit 8ce95af09c07a9b31de154c48a2d9a2e966161a8[m
Author: Duarte Silva <development@serializing.me>
Date:   Tue Jul 30 16:10:44 2013 +0100

    Added the new files containing the repeated functions
    - Renamed the functions to something more generic
    - Added the source and include files to the Makefile

[33mcommit a44d42b124f5ba82bb2d63828f0122d64fec73fc[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Tue Jul 30 19:32:11 2013 +0530

    Fixes segv inside rule swap under low mem conditions.
    
    We now gracefully exit rule swap on any allocation or other failures.

[33mcommit 8516ba24c903380aefd702eee9fc39bb63159ec8[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Thu Mar 14 18:55:52 2013 +0530

    Rearrange ac state.
    
    Notice a minor speed bump of around 2% on runs.  More updates to follow.

[33mcommit 4b8bb1145480d94dc7029d17acabc77da02a6c3b[m
Author: Ken Steele <ken@tilera.com>
Date:   Tue Aug 27 17:04:07 2013 -0400

    Enable using Tile cycle counter.
    
    The Tile processors all have a cycle counter with a simple interface. Use
    that for UtilCpuGetTicks.

[33mcommit 38aaae1fd72e3e2bc6bfa9cc16972bf7be98c965[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 28 20:22:09 2013 +0200

    IsRuleReloadSet() shouldn't return an uninitialized value

[33mcommit 189327981abbab9012fedee265a9edaadbed17f7[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Aug 27 10:10:25 2013 +0200

    unittests: fix stream-tcp.c
    
    Lock and recycle fixes for stream-tcp.c

[33mcommit cd3e32ce19e67615ea43c20020d65071a21b7011[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Aug 27 09:09:11 2013 +0200

    unittests: some functions needs a flow lock.
    
    In debug validation mode, it is required to call application layer
    parsing and other functions with a lock on flow. This patch updates
    the code to do so.

[33mcommit c5bd04f102d3e135d0fcc5ec211b44a745cde02b[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Aug 27 08:52:57 2013 +0200

    unittest: recycle packet before exit
    
    To avoid an issue with flow validation, we need to recycle the packet
    before cleaning the flow.

[33mcommit d292f1a529f6c238a8f9b576a5d2bc99ccb3dabf[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Thu Aug 1 17:52:48 2013 +0530

    fix for #915.  Fix segv when we send NULL to snprintf.

[33mcommit c6e8c5bf1ff0ed3eb366bf1b3d343c6621f2c509[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Aug 1 12:16:05 2013 +0200

    pf_ring: avoid to ask for extended header.
    
    This patch update pf_ring capture to avoid to ask for extended
    header. They are only needed when rxonly checksum checks is used
    and this is only possible when interface is not a DNA interface.

[33mcommit ff668c20301b9ea57ecf14951253f721da470cc3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 31 07:26:09 2013 +0200

    Fix Tile compile

[33mcommit 20ca270dc31fdfeaa657c313b0408474e9dd9156[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jul 30 18:35:19 2013 +0200

    fix pf_ring build

[33mcommit 2a46f0dae498cd23c4a751dbf0966d71c8d2be61[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jul 30 14:40:47 2013 +0200

    suricata: rename SuriInstance to SCInstance.

[33mcommit 9b422f3a8c5bb340a7040a1012cd6841ebb1436a[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jul 29 16:19:03 2013 +0200

    suricata: suppress Suri prefix
    
    Suppress Suri prefix in internal function name.

[33mcommit 18ced653c3074e40ac5b575d4376c77edeaebd89[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jul 4 10:10:36 2013 +0200

    Use a typedef for SuriInstance.

[33mcommit 2d77e53f2cd02fd8f604e619d71492bc6fa302c5[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 28 16:46:45 2013 +0200

    Add offline flag to SuriInstance and some refactoring

[33mcommit 34abd818dd9bab9bfec335eef6e66a302e51ddcc[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 28 11:23:55 2013 +0200

    Prefix util-conf function with Config

[33mcommit 7242cb30e725e2c543945f282eb282fa76d51764[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 28 11:17:15 2013 +0200

    Move CreateLowercaseTable to GLobalInits

[33mcommit 02e985131522c3b36f8dcf87c2ff48973bbe3e19[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 28 11:12:19 2013 +0200

    Generic code don't need ifdef

[33mcommit 8c00a963aad656f3fc4d832c23d98d4f64ab79ed[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 14 15:49:51 2013 +0200

    Use function for delayed detect setup.

[33mcommit 4296e5f29eeecaab51b6097914ea88530bd289fe[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 14 11:09:48 2013 +0200

    Add functions for elapsed time computation.

[33mcommit 9d1d08c7a4d3fcbaef0a990d29fde2785e6e980a[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 14 10:38:11 2013 +0200

    Factorize Signature loading

[33mcommit 20c5683b607b6808331f70f0006cb7132c2fba53[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri May 10 10:39:23 2013 +0200

    Use function for daemonification and signal handler

[33mcommit 90aaf55201a78a8a061d9c94ed84edddd746273b[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri May 10 10:27:17 2013 +0200

    set rule_reload as part of SuriInstance

[33mcommit bb19ce1847bd0c0e259506013d986c182ac8eab9[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri May 10 10:22:24 2013 +0200

    SetBPfString is part of command line parsing

[33mcommit 1a6983ee19e78da16551ec55768b8671cb357fd8[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri May 10 09:43:59 2013 +0200

    suricata: use function to print version

[33mcommit 4f789dbe842bb4911514447607d9282046739026[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 7 18:03:27 2013 +0200

    Add function for internal running mode

[33mcommit d3cb043001156a340bc86173603e2744750c918e[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 7 17:53:21 2013 +0200

    suricata: windows specific in one function

[33mcommit 4401c048ba6b963e06055ff63bf21248a863561e[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 7 14:20:33 2013 +0200

    Running mode is set earlier so out earlier

[33mcommit 40a25112a00de795dc3db9bcf8c6caaefc3725ff[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 7 14:15:56 2013 +0200

    kill remaining run_mode usage

[33mcommit 75fa1e20d7a5eefb585c946bf266522c3aa19ab7[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 7 14:11:49 2013 +0200

    engine analysis is a running mode

[33mcommit c0d5ee77f9942f2fc88d283a9f53b6899a58f2a7[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 7 14:01:03 2013 +0200

    get (almost) rid of run_mode variable.

[33mcommit 80542816cd9b943594d53065bdd3306141e79618[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 7 13:44:27 2013 +0200

    add internal running mode

[33mcommit e07fdb20a8a8ddab9811dbecc99e736cafce00dc[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Apr 17 13:37:40 2013 +0200

    Add SuriInstance structure
    
    To be able to split code in functions in main, we need to pass
    information about the current running Suricata to functions.
    For that we create a structure to store suricata run parameters.
    
    In this patch it allows to separate command line parsing and to
    treat internal running mode in a switch just after command line
    parsing.

[33mcommit 325462d396bf6ccd6b5aa0f1552da89c4505c645[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jul 30 15:21:55 2013 +0200

    Export IsRuleReloadSet and use it.

[33mcommit 6d9a66d522a48e2c34aad637a72b3bfabd31b003[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jul 30 10:44:29 2013 +0200

    unittest: make check use a qa/log dir for logging
    
    This patch is using the qa/log directory to store the output
    of the check. In case of success, the directory is deleted.
    In case of failure, the directory remains in place.
    
    This should fixes #910.

[33mcommit 4424f5a2313813579f96ec72e756e0b58071c64b[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jul 29 14:58:07 2013 +0200

    af-packet: add sanity check in free function

[33mcommit 8e68b357c705e1e78f6613223d92c66de226ecfd[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jul 16 16:50:45 2013 +0200

    Suppress Suri prefix.

[33mcommit 42011e2d32c809ecc0655875da1c2dd4f4611f38[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri May 10 09:53:20 2013 +0200

    suricata: function for lowercase table creation

[33mcommit 132bebb2b235d99f99bdf65c68189a0686818cea[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Apr 9 15:22:13 2013 +0200

    Simplify code by removing comment

[33mcommit 07ef1f98375440540044e1bda4a1c264b19c4aed[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Apr 9 15:16:01 2013 +0200

    suricata: add wrapper for interface listing

[33mcommit 54006de40c10b4dc6a6b049cd458341f0d75e622[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Apr 9 14:52:02 2013 +0200

    Use new function GetLogDirectory()

[33mcommit 2be7c8aea8160b3f5ded0f62a97c6cf30f00a112[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Apr 9 14:41:34 2013 +0200

    Add util-conf for config util

[33mcommit 27752818c2fcee94aaad4fe6fd17d12e3eeae433[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Apr 9 14:25:37 2013 +0200

    suricata: add some wrapper for config file handling

[33mcommit b2fa4edd36205ae4972bae35ff7be80048cc4954[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Apr 9 12:21:43 2013 +0200

    move unittest out of suricata.c

[33mcommit 9a0bf0956b88e35282d5923dd5e06fc35b64c6dd[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Apr 9 11:34:12 2013 +0200

    suricata: list cuda cards in separate function

[33mcommit bed48e3a543a253da604e6bc268e1f8fcb720f8a[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Apr 9 11:05:39 2013 +0200

    suricata: separate keyword and app layer listing code
    
    The list-keyword and app-layer listing code was spread over all the
    init code. This patch introduces a separate file to store non standard
    running mode like these ones.

[33mcommit 135ef0186bb035aa1b377e06f92ef311014fc599[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Apr 8 12:00:32 2013 +0200

    runmodes: fix comment

[33mcommit 5a7bf53a6b1474c687bf25b731199ddddfbfcccb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 22 17:33:19 2013 +0200

    Storage: rename Init to Alloc to reflect actual functioning. Comment updates.

[33mcommit f06694d0c14775405775df155bfd94d93f525f37[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 9 11:11:35 2013 +0200

    Storage API: add safety check for cases when there is no storage used.

[33mcommit caf730d988c633fb34b87b9d093867925c7874ae[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Mar 20 14:47:17 2013 +0100

    engine-tag: rename var and add sanity check

[33mcommit fb55931c304d03c0afa028a7cb7483eeb0b9a883[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Mar 20 11:28:58 2013 +0100

    flow tag: conversion to flow storage API
    
    This patch is updating the flow tag system to use the flow
    storage API. The tag_list member of Flow structure is suppressed
    and its cleaning operation are suppressed too as this is handled
    transparently by the flow storage API.

[33mcommit 4db2fc2cbb40dd4bc0aea5cf0319eccee39b2724[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Mar 15 15:25:46 2013 +0100

    Add per-flow generic storage
    
    This patch adds a per-flow storage that can be created via the functions
    available in flow-storage.c.

[33mcommit 6d08807b2d728f588a9201a956816ce25d88c91f[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Mar 18 11:05:52 2013 +0100

    Host: use global free storage function
    
    This patch is here to avoid that all modules using a local storage
    have to update host code to add their free function. It modifies
    previous behavior by calling HostFreeStorage in any case.

[33mcommit 27023872de7cdda727cfca594412284ee563ea7b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 14 17:08:14 2013 +0100

    Use Host Storage API for per host thresholding

[33mcommit c08b395c2c7c1cc93ffab16f6669c11ddc70c47f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 14 17:06:09 2013 +0100

    Init storage api at start up

[33mcommit 5919901675fd331752c3d094962af0fdada7dc5e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 14 11:59:38 2013 +0100

    Storage API: add registration check closed test in debug mode.

[33mcommit 3447324c369f1dd549886dc4bbef7d372c9c5032[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 13 23:38:39 2013 +0100

    Move Host Tag storage to Host Storage API.

[33mcommit 0d2a6e515ed3e0fcfa9e0e09ee5b11ed92a55ca9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 1 14:46:47 2013 +0100

    Add Host specific wrapper to StorageRegister()

[33mcommit b5ccf0b9c77ad895cdb0a8cc0524cf579ad646c8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 25 14:28:41 2013 +0100

    storage: allow preallocated storage

[33mcommit e2b006f523469cfede177f392575aaefb7e22ef2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 22 18:01:58 2013 +0100

    host: use storage api

[33mcommit 022c0e466e8f0f60251b32f8feb5994bb27d2cea[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 18 15:50:25 2013 +0100

    Initial storage api work

[33mcommit 1c06d5220822b8e336f526f30e0581529ea2128d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jul 28 12:59:52 2013 +0200

    Misc fixes after make check feedback

[33mcommit 316190c6b9082cf8cc523ccc3bfa708210f6401f[m
Author: Ken Steele <ken@tilera.com>
Date:   Fri Jul 26 13:22:19 2013 -0400

    Add TILE-Gx mPIPE packet processing support.
    
    The TILE-Gx processor includes a packet processing engine, called
    mPIPE, that can deliver packets directly into user space memory. It
    handles buffer allocation and load balancing (either static 5-tuple
    hashing, or dynamic flow affinity hashing are used here). The new
    packet source code is in source-mpipe.c and source-mpipe.h
    
    A new Tile runmode is added that configures the Suricata pipelines in
    worker mode, where each thread does the entire packet processing
    pipeline.  It scales across all the Gx chips sizes of 9, 16, 36 or 72
    cores. The new runmode is in runmode-tile.c and runmode-tile.h
    
    The configure script detects the TILE-Gx architecture and defines
    HAVE_MPIPE, which is then used to conditionally enable the code to
    support mPIPE packet processing. Suricata runs on TILE-Gx even without
    mPIPE support enabled.
    
    The Suricata Packet structures are allocated by the mPIPE hardware by
    allocating the Suricata Packet structure immediatley before the mPIPE
    packet buffer and then pushing the mPIPE packet buffer pointer onto
    the mPIPE buffer stack.  This way, mPIPE writes the packet data into
    the buffer, returns the mPIPE packet buffer pointer, which is then
    converted into a Suricata Packet pointer for processing inside
    Suricata. When the Packet is freed, the buffer is returned to mPIPE's
    buffer stack, by setting ReleasePacket to an mPIPE release specific
    function.
    
    The code checks for the largest Huge page available in Linux when
    Suricata is started. TILE-Gx supports Huge pages sizes of 16MB, 64MB,
    256MB, 1GB and 4GB. Suricata then divides one of those page into
    packet buffers for mPIPE.
    
    The code is not yet optimized for high performance. Performance
    improvements will follow shortly.
    
    The code was originally written by Tom Decanio and then further
    modified by Tilera.
    
    This code has been tested with Tilera's Multicore Developement
    Environment (MDE) version 4.1.5. The TILEncore-Gx36 (PCIe card) and
    TILEmpower-Gx (1U Rack mount).

[33mcommit 04f3f145413833152290900d0cf07271835f7183[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 26 12:04:14 2013 +0200

    ipv6: fix parsing of malformed ext hdr. Bug #908.

[33mcommit 4b4111e9e2ce77984dc4e78b953d80ee93cce87c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 26 09:31:06 2013 +0200

    icmpv6: fix icmp_id and icmp_seq keywords
    
    Bug #907

[33mcommit d82ce3f50c241f532e5cf0f75107c602b3a370e1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 24 12:35:38 2013 +0200

    Fix compiler warning due to missing include
    
    decode.c: In function 'DecodeThreadVarsAlloc':
    decode.c:437: error: implicit declaration of function 'ConfGetBool'

[33mcommit fb16cf1a5a1173793311096b91ce1b6f9995b3f8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 24 11:54:08 2013 +0200

    vlan: add rule for new 'too many layers' event

[33mcommit 16c3487444adf9b888a499604735c1254a669795[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 23 13:23:08 2013 +0200

    Add yaml option to disable vlan ids hashing
    
    In some cases using the vlan id(s) in flow hashing is problematic. Cases
    of broken routers have been reported. So this option allows for disabling
    the use of vlan id(s) while calculating the flow hash, and in the future
    other hashes.
    
    Vlan tracking for flow is enabled by default.

[33mcommit 58ed1f241114c293d7cb5d7be69d6748ff7f6205[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 11 20:35:17 2012 +0200

    flow: take vlan_id's into account in the flow hash
    
    In VLAN we can have 2 layers of encapsulation. In this patch both
    layers are used in the flow hash to distinguish between encapsulated
    traffic.

[33mcommit 055b422c28c753d067b06862149d6d0225318c8c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jul 20 12:24:17 2013 +0200

    Remove obsolete code: flow alert sid storage

[33mcommit 9faa4b740d4e0aae060a98ceef86e6e97df5c3ad[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jul 20 12:05:14 2013 +0200

    Add --unittests-coverage option to list how many code modules have tests

[33mcommit fc7879322e5afdb19a6493d44d840f1e6b679a52[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 25 18:37:33 2013 +0200

    Rename GetIfaceMaxPayloadSize to GetIfaceMaxPacketSize to reflect the actual function.

[33mcommit bd21b5ed9c1fa6b440a57a82c2b29fefacde716d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 25 18:34:42 2013 +0200

    Pcap: fix snaplen autodetection, GetIfaceMTU doesn't include link layer length

[33mcommit 149d2a07935bfd7a92b80741cb1cf1e2dc9101b6[m
Author: Ken Steele <ken@tilera.com>
Date:   Fri Jul 19 13:04:58 2013 -0400

    Fix typo in configure.ac echo message

[33mcommit ee0b21652b00f9398869b097c3ddceb9f86600a9[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri Jul 19 21:59:53 2013 +0530

    fix bug where we were not printing http hostname(printing <unknown>
    previously) in httplog, filestore meta and file log.

[33mcommit 7edcc13514858ceee7cfcd56a1e9926300120715[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 19 15:27:41 2013 +0200

    NFQ: fix packets not getting freed

[33mcommit cdaa13012afeb0d3437c015448d77418f5199699[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Thu Jul 18 14:35:54 2013 +0530

    fix for #882.
    
    Refactor the code that initializes the cuda mpm environment.

[33mcommit 9f3e2f7a927d19ba69db8ddaa10aedbc78274c91[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 19 12:33:34 2013 +0200

    NFQ: adapt to ReleasePacket API

[33mcommit b076a26cdc029a54b7f0fdec30b9bb508424a79e[m
Author: Ken Steele <ken@tilera.com>
Date:   Wed Jul 10 16:47:52 2013 -0400

    Replace ReleaseData function on Packet Structure with ReleasePacket.
    
    This commit allows handling Packets allocated by different methods.
    The ReleaseData function pointer in the Packet structure is replaced
    with ReleasePacket function pointer, which is then always called to
    release the memory associated with a Packet.
    
    Currently, the only usage of ReleaseData is in AF Packet. Previously
    ReleaseData was only called when it was not NULL. To implement the
    same functionality as before in AF Packet, a new function is defined
    in AF Packet to first call the AFP specific ReleaseData function and
    then releases the Packet structure.
    
    Three new general functions are defined for releasing packets in the
    default case:
        1) PacketFree() - To release a packet alloced with SCMalloc()
        2) PacketPoolReturnPacket() - For packets allocated from the Packet Pool.
                                      Calls RECYCLE_PACKET(p)
        3) PacketFreeOrRelease() - Calls PacketFree() or PacketPoolReturnPacket()
                                     based on the PKT_ALLOC flag.
    
    Having these functions removes the need to check the PKT_ALLOC flag
    when releasing a packet in most cases, since the ReleasePacket
    function encodes how the Packet was allocated. The PKT_ALLOC flag is
    still set and is needed when AF Packet releases a packet, since it
    replaces the ReleasePacket function pointer with its own function and
    then calls PacketFreeOfRelease(), which uses the PKT_ALLOC flag.

[33mcommit f09f289b348ce1c5eff7be7cf343646bb9ff6c33[m[33m ([m[1;33mtag: suricata-2.0beta1[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 18 15:30:25 2013 +0200

    Update changelog for 2.0beta1

[33mcommit f85a2dc84b2f4572c9afba3a3dcaa40b16ff3814[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Thu Jul 18 00:24:29 2013 +0530

    fix for #875.
    
    Update configure.ac to check for either 0.5.5 and 0.5.x version of libhtp.

[33mcommit 9698a5d78c4f45f8f05217d9eb82d001c013cf3c[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Thu Jul 18 15:51:50 2013 +0530

    Code to enable cuda support for pfring live mode.

[33mcommit 91fb47475bf4ac43a58be8031ba670b74fd8e97e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 18 09:54:09 2013 +0200

    DNS: break out of DNSResponseGetNameByOffset if we're in there too long. Can happen on bad data.

[33mcommit aa26dae5a19c522eceb1e05e775f62fba38f8e8d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 18 08:02:08 2013 +0200

    Stream: don't inject stream end pseudo pkt on FinWait2 state. Bug #883.

[33mcommit 2f3f577fb631ae8ec0ba4ffb4f8f5b0ad9be2e5f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 18 07:10:07 2013 +0200

    DNS: convert info logs to debugs

[33mcommit 97f51c10111621c020d268e092aead07046ff314[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 18 07:01:56 2013 +0200

    Fix ac-bs and ac-gfbs mpm-algo settings leading to fatal error if CUDA is enabled. Workaround for #882.

[33mcommit 8060ef41af047e223dca2d723f2667af25b7ddca[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 17 19:10:32 2013 +0200

    configure: add iconv.h check to configure if bundled libhtp is used

[33mcommit 83014adcfa59419dc1f9ccc18f72dee11cc4df93[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 17 17:58:25 2013 +0200

    Fix autogen on older systems

[33mcommit 50ac3e0498ba1dbcc411fd444e258f0401394789[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jul 17 16:37:28 2013 +0200

    autotools: workaround on partial cleaning

[33mcommit 0cef0b8808c9dd717835a59be977cd9aef453cc2[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jul 17 16:18:21 2013 +0200

    configure: minor cleaning

[33mcommit e2334fbfe8533a252b62b709a9c10cd115063f2a[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon May 13 10:39:59 2013 +0200

    unix socket: fix typo in error message

[33mcommit 7dbc97b01c0c7df5117479fb644782ae64ac2c43[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jun 20 15:21:36 2013 +0200

    autotools: AM_INIT_AUTOMAKE with args is deprecated

[33mcommit c2cbb437761f7bde0632f3e1c8070f1786d0c231[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jun 20 15:22:13 2013 +0200

    autotool: INCLUDES usage is deprecated

[33mcommit 281d2f27f883a443107a8de238da790ffc534e5a[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jul 4 10:11:47 2013 +0200

    Fix compilation warning
    
    A goto could lead to the use de_ctx without declaring it.

[33mcommit 915aa9fc262979900b385ca0678cfd6eb87dfff6[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jul 16 16:47:27 2013 +0200

    Add file needed for some autotools version.
    
    It seems config.rpath is a file needed in some cases. If the
    file is not present libhtp autogen.sh is failling.

[33mcommit c099349550102a3460b7764567db26e83f7fe13b[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jul 17 13:28:09 2013 +0200

    configure: check for iconv in htp embedded mode
    
    At least on freebsd, suricata fails to build in htp embedded mode
    due to iconv linking issue.

[33mcommit 0c37f76fa26ec17e6d0cf1e924bee5219c233ae9[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jul 15 18:18:56 2013 +0200

    Check for local include first.

[33mcommit f4dcba6de3b3f5d8a203dad36e0442c11b267239[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 16 15:03:07 2013 +0200

    In case of fragments, don't consider ports. Bug #847.

[33mcommit e7f09f24c8281ae2400d15775644872949600177[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Mon Jul 15 19:18:49 2013 +0530

    Code to enable cuda support for live mode pcap and af-packet.  Keep an eye
    out on the mailing list and http://planet.suricata-ids.org for performance
    and other profiling data.

[33mcommit 51d6c638604843d543f0a9f5d8d08653dd2edf1e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 15 15:38:13 2013 +0200

    Luajit: fix compilation and tests after libhtp upgrade

[33mcommit fdc3b5ba150a527e79f360a559f8e1a5f8561f1c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 15 14:06:42 2013 +0200

    Fix CLS configure check

[33mcommit 3599e22e4c0981caf216d6fbd6e83102ab6df789[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 15 12:20:46 2013 +0200

    libhtp: remove libhtp from repo

[33mcommit 48cf0585fb69c9bad712377d82796e191e24af47[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Tue Apr 2 20:58:01 2013 +0530

    Suricata upgrade to libhtp 0.5.x.
    
    Remove the support for now unsupported personalities from libhtp -
    TOMCAT_6_0, APACHE and APACHE_2_2.  We instead use the APACHE_2
    personality.

[33mcommit 080c15b3fce8ee693d5431f2aa89d267a7fd9b7c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 5 11:46:05 2012 +0200

    Enable libhtp 0.3.0 compilation and crash free UT run. Still see 5 failed tests.

[33mcommit 538da268121a6bb936a66c5932a3d78852d42c5a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jul 13 20:26:10 2013 +0200

    Fix sgh mpm flags assignment

[33mcommit 150cd39c6eab0ef1641779ac8c79bb1717fbccc4[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jul 5 18:06:40 2013 +0200

    detect-engine: do a direct update of flag
    
    There is no reason not to update the flag directly. So do it
    to avoid to crash the test.

[33mcommit 9212ff7e592d4cee3f7ac1472319ce4abb158967[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jul 5 12:33:17 2013 +0200

    coccinelle: dynamic testing through make check
    
    This patch modify build system to have make to create the
    struct-flags.cocci file by running struct-flags.py.
    
    This way 'make check' is running the test defined from source
    code.

[33mcommit e05fd7f1d069b8315f6884980383fe5302da7001[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jul 5 12:28:30 2013 +0200

    coccinelle: add script to generate flags test
    
    This patch adds a script which can be used to generate a test
    on coherence of flag usage.
    
    By adding comment in the code, it is possible to declare that we
    link a flag in a structure to a specific family of constant:
    
    For example:
            /* coccinelle: Packet:flowflags:FLOW_PKT_ */
    will trigger the generation on a test which verifies that the
    flowflags field in Packet structure is only used with constant
    starting by FLOW_PKT_.

[33mcommit 2f2916d9ec13a7dff319cf6dcb124f790fd2fa3d[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jul 5 11:16:26 2013 +0200

    ccccinelle: add formatted comment for flag test

[33mcommit 4749420f325acc5965cd942d78ba9ce28c686eda[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 11 10:36:22 2013 +0200

    Use relative dir instead of ac_builddir
    
    When generating src/build-info.h the use of ac_builddir was problematic.
    There were several cases where it was undefined leading to the absolute
    path /src/build-info.h. ./configure should be called from the parent dir
    to the actual src dir, so this should work. Make distcheck and normal builds
    complete fine.

[33mcommit aafc65c7578f5cdd1b6159f61e98cb1923fc0358[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 10 15:10:32 2013 +0200

    Autotools: move libhtp conditionals to configure
    
    In preparation of the libhtp upgrade, move all libhtp related conditionals
    to configure. This allows for one set of build scripts that works regardless
    of the presence of a local libhtp dir.

[33mcommit 73e27c1fb7f3dcff802a41f73125c2287cc2f5a3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 9 18:36:54 2013 +0200

    Generate proper errors if sid,gid,rev values are out of range. Bug #779.

[33mcommit 164d60e8cdcd3117228f9c0f1bd50eb1f684d97e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 9 17:47:58 2013 +0200

    Yaml: give a more detailed error if the user supplies a directory instead of a yaml file. Bug #803.

[33mcommit 55625d738ab5a56201daaab616a0999c299808d8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 9 16:35:50 2013 +0200

    TLS: create certs dir on 'make install-full'. Bug #711.

[33mcommit a4e838c1d347780dcdb05bd56dcc937036e7ff81[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 9 16:21:36 2013 +0200

    TLS: create certs directory during startup if it doesn't exist yet. Bug #710.

[33mcommit 2b5d586dbc6ee76c045dbd90b7c84b0ba69ed44b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 9 14:53:48 2013 +0200

    TLS: add missing options to shipped yaml. Bug #709.

[33mcommit 6229bfab5e607edbf4f81ab6c87493d7729cec97[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 5 11:26:06 2013 +0200

    DNS: rename dns.rules to dns-events.rules, include it in yaml

[33mcommit 0e92469222a4dd8ad3c4f3cf54f41c30475920ee[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jun 19 11:14:22 2013 +0200

    nfq: be sure to always verdict packets
    
    To be sure to always verdict packets (bug #769), this patch adds
    a ReleaseData function to NFQ packets. The release function simply
    drop the packet if it has not been verdicted before.

[33mcommit 4a0050b9ead661d64425451cc48267ff3093cf6c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 4 17:59:16 2013 +0200

    Print pkt src to alert-debug log

[33mcommit 1c371da46dcd64a41ffc320a893066e3ba15922c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 2 14:44:41 2013 +0200

    DNS: better handle TX' with lost replies

[33mcommit 0fd9b0c4fac90cb58d6bb64bf4868b6e2a676a62[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 2 12:51:42 2013 +0200

    HTP: free TX from transaction free API call

[33mcommit 1367074c75e4bbfd398e317add3e8a823e6f79d7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 2 12:33:11 2013 +0200

    App layer: clean up TX before lowest active one
    
    Update DNS to handle cleaning up this way.

[33mcommit 0b229ec8b9f4bbf8f4e512e42ac5c21d0e687c0d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 2 10:21:04 2013 +0200

    DNS: suppress log-dns registration message

[33mcommit f59f90331d5185e93927ca10412235da1a79a24b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 2 10:14:59 2013 +0200

    Applayer: remove obsolete StateUpdateTransactionId
    
    Also, update StateTransactionFree to take an u64 tx id, so it's
    consistant with the rest of the engine.
    
    To reflect these changes, AppLayerRegisterTransactionIdFuncs has
    been renamed to AppLayerRegisterTxFreeFunc.
    
    HTP, DNS, SMB, DCERPC parsers updated.

[33mcommit ebab9aee8343da6c7361c15346d495d5d77488ed[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 2 09:49:02 2013 +0200

    DNS: move internal tx id tracking to u64

[33mcommit e8ad876b481dcf1f919e0077ce028fbe3421b1e6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 1 15:24:50 2013 +0200

    App layer: add 'StateHasEvents' API call
    
    Per TX decoder events resulted in significant overhead to the
    detection engine, as it walked all TX' all the time to check
    if decoder events were available.
    
    This commit introduces a new API call StateHasEvents, which speeds
    up this process, at the expense of keeping a counter in the state.
    
    Implement this for DNS as well.

[33mcommit cd7b4fac407e3a06c922a26eafbbfa0af21f11d8[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Tue Jul 2 20:28:25 2013 +0530

    remove unused pattern id assignment functions.  Goodbye

[33mcommit 68847d12e3cdd41a2dbf15c038fa30b7fca7f9e1[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Tue Jul 2 17:59:17 2013 +0530

    Update configure.ac to use the default value of 64 for the cache line size
    for systems which return a value of 0.

[33mcommit f353fb630ca5d01937d7e97571baee3abd07320f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 28 16:49:56 2013 +0200

    DNS: convert dns_query to sticky buffer

[33mcommit 7292998a58b9d96d83903854899ef65ee2f784e5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 28 16:24:10 2013 +0200

    Content: set up sticky buffers like file_data and dce_stub_data w/o flags, but with a list variable

[33mcommit d476e4e50d8164259419fb9edceb1c7feb25cfd9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 1 13:39:52 2013 +0200

    Coverity 1040312, 1040313, 1040314 1040315: improve pool thread error handling.

[33mcommit 1373a20e8a52875d904649cd22d50a21db1c600e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 1 12:03:09 2013 +0200

    Thread: remove thread id

[33mcommit d7aaa9464c6990b275b3ae35dbd2cee839cd9c4e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 1 13:32:02 2013 +0200

    Stream: use per thread ssn_pool_id instead of thread id.

[33mcommit 92b7ffad6980da26d3faf789a804a8a12722bc7e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 28 12:28:51 2013 +0200

    Improve memory cleanup in some unittests

[33mcommit fd7899cc8b393b7ffaab43b393453c4828a33569[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 27 10:24:31 2013 +0200

    Stream: fix unittests after ssn pool changes.

[33mcommit aa449d51caa1e3f864ceed23ea4cf74305eec30e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 15 11:13:36 2013 +0200

    Stream: use per thread ssn pool
    
    Use per thread pools to store and retrieve SSN's from. Uses PoolThread
    API.
    
    Remove max-sessions setting. Pools are set to unlimited, but TCP memcap
    limits the amount of sessions.
    
    The prealloc_session settings now applies to each thread, so lowered the
    default from 32k to 2k.

[33mcommit b6af6cb241684c72432ab00f264d5b361da05eee[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 14 13:14:37 2013 +0200

    pool: add error msgs and improve memory layout

[33mcommit 5b9ef94f34ed567f6c1d41a3c8bb212fc9dc53f3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 14 13:17:32 2013 +0200

    pool: add api for per thread pools
    
    This API is a wrapper around the regular pools where the thread pools
    are arrays of locks+pools.

[33mcommit 016d03bdaf597c425433d501ab321330e438fb9c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 14 13:14:37 2013 +0200

    pool: add error msgs and improve memory layout

[33mcommit 46af6b7e0fe68b4537fe76ac290204af99df0e18[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 8 13:26:49 2013 +0200

    Add a per threadvars thread local thread id, that starts at 0 and increments for each thread.

[33mcommit b3b554c269c69309d26e67d61e677df39c5c44a8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 28 10:06:27 2013 +0200

    Coverity 1038959: DNS mpm might use initialized variable

[33mcommit fba95e9125eddce43cd071b5786a31ea2581956f[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri Jun 28 11:44:33 2013 +0530

    Remove mpm ctxs in the wrong direction.
    
    A lot of http mpm ctxs have now been removed as a result of this.

[33mcommit 3c2ddf04c11d1b29c4f4a34e65da8cc323228f31[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri Jun 28 01:17:28 2013 +0530

    Update mpm init ctx to not accept the final cuda_rc_module argument.
    
    It was a part of our older architecture and is no longer used.

[33mcommit 33818c02728245d6f468cba666f6571e6c2ae0a7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 27 18:43:37 2013 +0200

    DNS: fix CUDA build

[33mcommit be7e6cdd7aec05ade4ae03529ea3b90895cd47c2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 27 18:43:22 2013 +0200

    DNS: fix warning when debug is not enabled

[33mcommit 16edbfd4ea1181fe726223b97ed8cd0db7529612[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 27 18:21:30 2013 +0200

    DNS: disable logging by default

[33mcommit 571b8ac186505d01789ac3eb22df9919e13d32c4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 2 12:01:07 2013 +0200

    DNS: add support for per TX decoder events.

[33mcommit 9dc04d9fabead421efb06786b13057c36b711bed[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 2 12:00:40 2013 +0200

    app layer: add support for per TX decoder events

[33mcommit 72e35efbc697d45f4785615457e44b6c1dcb0f8f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 24 14:59:30 2013 +0200

    Reset app layer events when we start inspecting a new TX

[33mcommit 28a6c1d9f8c47695081ec850e72a22417aedde4c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 24 14:02:53 2013 +0200

    DNS: add test for app layer event match

[33mcommit 6645620c03634081886885d0be34577a75c71bda[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 23 16:35:13 2013 +0200

    Merge SIG_FLAG_MPM_HTTP and SIG_FLAG_MPM_DNS into SIG_FLAG_MPM_APPLAYER, do the same for the _NEG variant.

[33mcommit 43ba5a677e028ef211d1edf159bed37505cb2de4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 23 16:19:26 2013 +0200

    DNS: enable mpm/fast_pattern support for dns_query

[33mcommit 4817e1305ff82c980156098faed8505f233678d4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Apr 21 13:34:55 2013 +0200

    DNS: add /F modifier to pcre to inspect DNS query name

[33mcommit 4f20f72f4d1cba9f3403f9dc8f6bad9bd6f63228[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 20 19:38:43 2013 +0200

    DNS: add event rules file

[33mcommit e567e12230ee248f97beddc3ea0e908b598b125b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Apr 21 13:12:03 2013 +0200

    DNS: add unittests for UDP and TCP for dns_query keyword

[33mcommit f10dd603ff42201ec931c33325327d1bdce00e18[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 20 19:37:05 2013 +0200

    DNS: adding dns_request content modifier

[33mcommit 6674f4892ca3ebfc993c315f2d73f9e3d3b72be1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 20 17:40:14 2013 +0200

    DNS: add per tx internal id
    
    Add per TX id. Rename transaction_cnt to transaction_max (id) and increment it on tx creation.

[33mcommit 59780ca77020ac71f6bbc05d69a91136f91696ee[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 25 17:19:54 2013 +0100

    Hacks to enable alert dns even though we have dnstcp and dnsudp parsers. Needs proper solution later.

[33mcommit 8e01cba85da67941da0753094b0ab03257ed70aa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 22 18:17:49 2013 +0100

    DNS TCP and UDP parser and DNS response logger

[33mcommit 4521de2dfd334074d83e730c82a39e2590a06de5[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jun 24 09:58:42 2013 +0200

    Use PACKET_* macro instead of UPDATE
    
    Setting the ACTION_DROP flag can be done via PACKET_DROP instead
    of using PACKET_UPDATE_ACTION.

[33mcommit c0c59fbd177d81845833342617ab2a5d8e4bbab4[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jun 24 09:52:31 2013 +0200

    decode: factorize macro code
    
    PACKET_* are now wrapper to the newly introduced PACKET_SET_ACTION
    macro.

[33mcommit 3f107fa130278523ea127f0f570dd543d8f1df3d[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jun 24 09:44:46 2013 +0200

    decode: Packet action start with PACKET
    
    Rename all Packet action macro to have them prefixed by PACKET.

[33mcommit 3304c91c917436162fec669fb69d897687bcda76[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Thu Jun 27 10:06:37 2013 +0530

    Don't let geoip match on pseudo packets.

[33mcommit 1fb4aae9939af80065d0284b91608daf040f1963[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Wed Jun 26 17:14:51 2013 +0530

    Coverity 1038523: Fix using cuda buffer slice that has been returned to the pool.

[33mcommit 51cdd464a6f41db4bcf50abf72733a2164ee0563[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 19 18:51:23 2013 +0200

    stream: detect keep-alive and keep-alive ACK

[33mcommit 03c3ff56322de213fc9868693be7d7393576d119[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 19 16:10:21 2013 +0200

    stream: fix typo in function name

[33mcommit 4c6595f4379eafe81f1232c4cf4306cdc1d3a793[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jun 26 09:56:11 2013 +0200

    Coverity 1038106: fix FP out-of-bond access
    
    A cast during the reading of a configuration variable was invalid
    because a 16 bit integer was cast to a 32 bit integer. The called
    function is only setting the pointer value to 1 or 0 so there is
    no real issue there.

[33mcommit 7df156ef504a45aecefc9216b594e15fc5703dbf[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jun 26 09:42:33 2013 +0200

    Coverity: 1038139 suppress sanity check
    
    The sanity check was really useless as the NULL value is checked in
    the code flow.

[33mcommit 75cd1f60966e76d8b48a92c865e5008f41e949a6[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jun 26 09:37:08 2013 +0200

    Coverity 1038515: check function return
    
    This is more cosmetic than useful but it is cleaner anyway.

[33mcommit b4e750068f3d0dfad9656d183586232393e02e07[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Wed Jun 26 13:23:08 2013 +0530

    Cuda make distcheck fix for cuda-ptxdump.h

[33mcommit 7d46d59cdd00b44a273b7a34d10c1ce4cae27418[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Wed Jun 26 13:21:39 2013 +0530

    Coverity 1038522: fix memset inside cuda code.  Wrong size specified to memset.

[33mcommit d6fcd07a3141431fac754383f12de0a5c1b887ab[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 25 17:16:41 2013 +0200

    Coverity 1038085: remove 'default' statement in SCErrorToString. This way a warning will be given if an error is defined w/o updating this function.

[33mcommit e2444f0ed5ebfcac8a721c961423890b4f807213[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 25 17:14:02 2013 +0200

    Coverity 1038092 & 1038093: remove dead code

[33mcommit 0902c7f3aaa89aab0da302ab50b89aea02626448[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 25 17:00:45 2013 +0200

    Coverity 1038518: fix wrong error check

[33mcommit db1dad8cc6a4b545946f16a91e03e6527e8e3178[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 25 14:14:50 2013 +0200

    Coverity 1038124: memory leak on 'seq' keyword parsing failure

[33mcommit b2e962da033c0fae3f98889f1121d0f50e91d371[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 25 14:13:04 2013 +0200

    Coverity 1038123: memory leak on 'flowint' keyword parsing failure

[33mcommit 5c5b2f98dd1e34a1fd72728264bf469d5ced2eee[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 25 14:10:25 2013 +0200

    Coverity 1038116 & 1038117: memory leaks on 'app-layer-event' keyword parsing failure

[33mcommit 778851626c1ba71242fbaf232fe2d9bb819a2428[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 25 14:07:13 2013 +0200

    Coverity 1038115: memory leak on 'ack' keyword parsing failure

[33mcommit 98dbf3e62c04fe2097ccfbc4d12264e85002d839[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 25 14:03:38 2013 +0200

    Coverity 1038113: possibly out of bounds read

[33mcommit 602c91ed4199d6422d5702d66cbb729d77f279d2[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Thu Jun 20 23:26:23 2013 +0530

    Minor cosmetic changes to the cuda code.
    
    Moved a couple of functions to more cuda relevant files;
    Re-structured some data types.

[33mcommit c9f076def357530ca9ecde078423f6f6a105c501[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Mon Mar 25 17:25:33 2013 +0530

    Modified CudaBufferCullCompletedSlices.
    
    Allow readers specify max size of data they want to read.

[33mcommit 70cb4d30ebdaeb6f6b4b68d47356bc5d6865e10a[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Mon Mar 25 15:21:09 2013 +0530

    Add a usleep to CudaBuffer culling process. Would lead to a situation where the thread wouldn't care to yield to others."

[33mcommit 17c763f8554db6d438eb68610249126bdf6d2066[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Mon Mar 25 15:08:45 2013 +0530

    Version 1 of AC Cuda.

[33mcommit 2de59fc235aa8d5998e0c181d69dbbdd055dfcab[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sat Mar 23 23:23:47 2013 +0530

    Version 1 of CudaBuffer API. Introduced to buffer data to the gpu.
    
    This version allows async writes to a buffer by threads.  Allows only
    sequential reads though.

[33mcommit 557cab3dc9da097396856f218fe02c66c7547de5[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Thu Nov 15 22:14:36 2012 +0530

    We call packet and stream mpm as late as possible now. Won't affect the working of the engine.
    
    The rationale behind this is, if we have pkt buffered to the gpu, we'd want
    to delay processing the pkt as much as possible.

[33mcommit d2063d98ad1edd59e829592825f44ea333814056[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Thu Nov 15 22:11:34 2012 +0530

    pool now uses a queue kinda behaviour when getting/inserting data through poolbuckets.

[33mcommit f4c719b83af941c654cd944d3da9dcef9fb57c15[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sat Aug 4 18:14:38 2012 +0530

    code refactoring. Call mpmprefilter slightly later than where it's called atm

[33mcommit b787da5643104613c6a5207b30b5a517cf24e5ae[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Thu Nov 15 13:24:29 2012 +0530

    Remove all cuda related code in the engine except for the cuda api wrappers

[33mcommit e2a6cfb6a63ab1ad6ab48cb0d8c0ff2ea1245293[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Aug 1 14:22:49 2012 +0530

    update cuda API wrappers

[33mcommit f7c5026c314296f2fd0410274bc4377864b398be[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Mar 15 10:24:32 2013 +0100

    Add one shot run option to suri-graphite.

[33mcommit 0d2f3bfa16133afb705986ef5d88536cd7b876b9[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Mar 13 10:50:21 2013 +0100

    Import suri-graphite script
    
    This patch import suri-graphite into suricata contrib directory.
    This script reads counters from suricata unix socket and send them
    to a Graphite graphing server.

[33mcommit d8ce2b1ca41bedb7683bd5f23db869a8e8b896a0[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jun 18 10:57:19 2013 +0200

    unix-socket: fix OSX build
    
    MSG_NOSIGNAL is not defined on macOSX and SO_NOSIGPIPE is used
    instead.

[33mcommit ce95fbdda01f459d17cb2f2093a310f66df9d57f[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jun 11 15:41:21 2013 +0200

    action handling: add test to avoid direct access
    
    Direct access to the action field of Packet structure is not
    allowed.

[33mcommit a35c36794218a925250669bcbc1bb6d12f343db5[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jun 11 15:08:01 2013 +0200

    action handling: use macro for test.
    
    Use test macro instead of direct access to action field.
    
    This patch has been obtained by using the following
    spatch file:
    
      @@
      Packet *p;
      expression E;
      @@
    
      - p->action & E
      + TEST_PACKET_ACTION(p, E)

[33mcommit efaa9a7302706ff9bb5970ce40be7bcbcf2f0d5c[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jun 11 14:52:11 2013 +0200

    action handling: define and use macros
    
    The action field in Packet structure should not be accessed
    directly as the tunneled packet needs to update the root packet
    and not the initial packet.
    
    This patch is fixing issue #819 where suricata was not able to
    drop fragmented packets in AF_PACKET IPS mode. It also fixes
    drop capability for tunneled packets.

[33mcommit 429b5cec101cdc6cf31241c45e067f1102acdc09[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Wed Jun 5 00:51:55 2013 +0530

    Fix magic unittets.
    
    Fix segv, when magic_load() fails due to the non-availability of default
    magic files.

[33mcommit 058e9278c59ce521f640e27147fce2cd359b75d9[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sun Jun 16 23:17:46 2013 +0530

    Fix wrong casting of htp pointer.  Fixed it back to (HTPState *) inside
    htp utility functions.

[33mcommit 21f9cc3a39a0706ba3f44489a5253fcd0eef793f[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sat Jun 15 11:22:16 2013 +0530

    discontinue matching on buffer if urilen returns a match failure.

[33mcommit 56c6dd9bb262d7d7249c3cabe6a6efde1927a8da[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 11 12:21:25 2013 +0200

    bytetest: add unittest showing missed detection
    
    Tests recursive and relative negative byte_test matching.

[33mcommit c3d98f96402064b67d67b9481431010e8fd3f42e[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Thu Jun 13 20:24:55 2013 +0530

    Fix the bug specified in the previous commit.
    
    Bug emanates from byte_test, byte_jump and byte_extract keyword being
    unable to handle negative offsets when the inspection pointer is at the
    end of the buffer.

[33mcommit bd6896bee182c4dec24775bbdca70c3d422dd68d[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Thu Jun 13 20:20:55 2013 +0530

    Unit-tests exposing a bug in byte_test, byte_jump and byte_extract.
    
    Bug emanates from all the keywords being unable to handle negative offsets
    when the inspection pointer is at the end of the buffer.

[33mcommit 0fbfaadd534fa3cf48930ca341e32cb247a3fd35[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 11 12:20:37 2013 +0200

    bytetest: fix debug messages not printing negative offset correctly

[33mcommit 5157ce16bc57dc0b4e2467f50c7ca6b32154078c[m
Author: Phil Schroeder <pschroeder@emergingthreatspro.com>
Date:   Mon May 27 23:40:54 2013 -0500

    Adding an updated doxygen config file, because the old one was created a couple major versions ago.

[33mcommit ff222b51e741737c43589ebc35f5a6e23b1abe11[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sun May 26 14:59:44 2013 +0530

    Http trailer headers unittests added.

[33mcommit ab4b15c2e7c9432bdc58fd8cb52e2287b21ca039[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sat May 25 10:38:13 2013 +0530

    fix for #788.
    
    Now depth is kept in mind when we inspect chunks in client/server body.
    This takes care of FPs originating from inspecting subsequent chunks that
    match with depth, but shouldn't.

[33mcommit f29e5459e68bf8e1a5614e772953748be6425451[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 23 11:58:49 2013 +0200

    luajit/flowint: add ScFlowintIncr & ScFlowintDecr
    
    Add flowint lua functions for incrementing and decrementing flowints.
    
    First use creates the var and inits to 0. So a call:
    
        a = ScFlowintIncr(0)
    
    Results in a == 1.
    
    If the var reached UINT_MAX (2^32), it's not further incremented. If the
    var reaches 0 it's not decremented further.
    
    Calling ScFlowintDecr on a uninitialized var will init it to 0.
    
    Example script:
    
        function init (args)
            local needs = {}
            needs["http.request_headers"] = tostring(true)
            needs["flowint"] = {"cnt_incr"}
            return needs
        end
    
        function match(args)
            a = ScFlowintIncr(0);
            if a == 23 then
                return 1
            end
    
            return 0
        end
        return 0
    
    This script matches the 23rd time it's invoked on a flow.

[33mcommit f312486c6e7bc35c72b6b7fdaa94ab5ca42c009b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 22 17:56:29 2013 +0200

    flowvar/luajit: make 'sets' real time. Needed for cross HTTP-header matching.

[33mcommit 72f6bc2aeddadf45c8c3389712615985b7c8e1d3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 22 17:50:43 2013 +0200

    luajit: add flowint support
    
    Expose ScFlowintGet and ScFlowintSet functions to luajit. These set
    flowints in real time, regardless of rule and/or script match.
    
    Example:
    
    function init (args)
        local needs = {}
        needs["http.request_headers"] = tostring(true)
        needs["flowint"] = {"cnt"}
        return needs
    end
    
    function match(args)
        a = ScFlowintGet(0);
        if a then
            ScFlowintSet(0, a + 1)
        else
            ScFlowintSet(0, 1)
        end
    
        a = ScFlowintGet(0);
        if a == 23 then
            return 1
        end
    
        return 0
    end
    
    return 0
    
    Script's init call first registers "cnt" at id 0, then 0 is used to use
    this var.

[33mcommit c3c3cd76e5c0e920c2be9e58f137c937f6e1d79e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 22 17:48:51 2013 +0200

    flowvar/flowint: split set functions into normal and NoLock version, where the latter won't lock the flow.

[33mcommit 57d3cd97f39d7fc5f41c7a5f89e221a8078f988e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 22 16:10:50 2013 +0200

    flowvar/flowint: make local function static

[33mcommit 6e18ed0489c7d0026210b323fdb740ec900e07c2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 15 19:59:28 2013 +0200

    luajit flowvar support
    
    This patch adds flowvar support to luajit. It does so by exposing two special
    C functions to the luajit scripts: ScFlowvarGet and ScFlowvarSet.

[33mcommit 3db717db6d05aee16b00cdbdd1184af2063a54aa[m
Author: Ken Steele <ken@tilera.com>
Date:   Mon May 20 15:16:47 2013 -0400

    Update configure.ac to detect Tile architecture.
    
    Detect if the architecture supports the Tilera mPipe packet processing
    hardware. It it does, add the requried libraries and define HAVE_MPIPE.

[33mcommit 9d677ea006c284b4ec4b478c09cead667aaeb803[m
Author: Ken Steele <ken@tilera.com>
Date:   Sat May 18 16:01:29 2013 -0400

    Clear the PKT_ALLOC flag when storing Packets into the Packet pool.
    
    The PKT_ALLOC flag is set by PacketGetFromAlloc(), which needs to be
    cleared for Packets in the Packet Pool, so clear the flag here.

[33mcommit 9c7b411a5d2b265e30f094f3ff15d5feb1f1f335[m
Author: Ken Steele <ken@tilera.com>
Date:   Fri May 17 13:48:32 2013 -0400

    More PacketGetFromMalloc() to allocate packets.

[33mcommit 394f99e32c26a69f483cb171569bef1d8284ba21[m
Author: Ken Steele <ken@tilera.com>
Date:   Fri May 17 10:05:04 2013 -0400

    Use PacketGetfromAlloc() for packet allocation instead of SCMalloc.
    
    Only changed in one file for testing.

[33mcommit ab1f8afbc3d26177a899cab918539200c57d1ad9[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri May 10 21:50:16 2013 +0530

    Removed Signature->order_id and replaced it with Signature->num.

[33mcommit 43d1229dfac65366a85ca982f291c81f5ec4bf13[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Thu May 9 08:52:05 2013 +0530

    1. Fix assignment of signums, which affected how we used read
       sigs(priority wise) inside staging.
    
       Previously we would assign signums before sig ordering, and hence the
       order didn't actually reflect the order of the sig in the
       sig_list(assuming sig reordering changed the sig_list).  Staging would
       use the old sig_nums to decide the priority of sigs.
    2. Fix sig ordering for flowvar, flowbits, flowint, pktvar sigs.   We have
       introduced a new priority to treat sigs with set + read as lower
       priority compared to set only sigs.
    3. Previously we treated sigs with a "priority(keyword)" > another sig's
       priority, as a sig with greater priority than the later.  We have
       reversed it.  Now the sig priority ordering is 1,2,.etc.  Updated
       sigordering unittests to reflect the same.

[33mcommit 9219079e1a02b8e3d6ea5969324800fe6efc65b1[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Mon May 20 21:16:41 2013 +0530

    Allow protocols to have both app layer keywords, as well as transaction
    based ones.
    
    Our general logic and assumption is protocols either support one of the
    above and not have both.

[33mcommit a490176c8ab21236924fcc04f652cca4f4a4e193[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sat May 18 10:50:51 2013 +0530

    More lock fixes for the transaction update.  Issues reported by Coverity.

[33mcommit 7cf40423372ae3e480c0d8215df857d8f64ea86b[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri May 17 16:21:54 2013 +0530

    Fix luajit compilation failure introduced by the transaction update.
    Fix coverity lock issues reported by transaction update as well.

[33mcommit d4d18e3136780b776ae13da76caeddf8c5bd4f70[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri May 3 20:34:58 2013 +0530

    Transaction engine redesigned.
    
    Improved accuracy, improved performance.  Performance improvement
    noticeable with http heavy traffic and ruleset.
    
    A lot of other cosmetic changes carried out as well.  Wrappers introduced
    for a lot of app layer functions.
    
    Failing dce unittests disabled.  Will be reintroduced in the updated dce
    engine.
    
    Cross transaction matching taken care of.  FPs emanating from these
    matches have now disappeared.  Double inspection of transactions taken
    care of as well.

[33mcommit fd7927ecd6ae4ac249a2849350ad0f8ea5dfef59[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri May 3 10:03:48 2013 +0530

    Track transaction progress separately for each direction in libhtp.
    
    Currently libhtp tracks it using the same var.  This can lead to misleading
    states, since a response can come in without a full request.

[33mcommit 6dcde9d7e9df4930693da71349369b56b62af8b4[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri Apr 12 13:18:17 2013 +0530

    hsbd mpm and packet mpm share same mpm ctx id.
    
    This is a bug emanating from we having a var reference for hsbd mpm,
    but failing to initialize it, and we default to using the packet mpm.

[33mcommit 41ebfa77afba6814248a1324951d24f2f3076170[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu May 16 10:22:27 2013 +0200

    coccinelle: update pkt not set test
    
    This patch updates the test to add the support of initialization
    of a Packet via the INITIALIZE macro.

[33mcommit 93e73041171a294063061648e880ec898a2da828[m
Author: Ken Steele <ken@tilera.com>
Date:   Tue May 14 15:38:00 2013 -0400

    Preserve PKT_ALLOC flag inside PACKET_RECYCLE().
    
    The PKT_ALLOC flag was being cleared by PACKET_RECYCLE(), which could
    then result in a packet being pushed back to the Packet ring buffer
    incorrectly.

[33mcommit 699d9e01f12f4a6e88af2e61a36bb9bf46c4ee9a[m
Author: Ken Steele <ken@tilera.com>
Date:   Tue May 14 15:00:21 2013 -0400

    Move memset() out of PACKET_INITIALIZE()
    
    The memset() inside PACKET_INITIALIZE() is redundant in some cases and
    it is cleaner to do as part of the memory allocation. This simplifies
    changes for integrating Tilera mPIPE support because the size of memory
    cleared in that case is different from SIZE_OF_PACKET.
    
    For the cases where Packets are directly allocated and then call
    PACKET_INITIALIZE() without memset() first, this patch adds memset() calls.
    
    A further change would use GetPacketFromAlloc() directly.

[33mcommit 71c22ddfeefd4fdea88eed9a5d310d3d0169a978[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 8 14:51:15 2013 +0200

    Move fallback to CLS detection to configure script.

[33mcommit 0ddd57cb05749c41879ce4eb003dc5ce7fac1d42[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 8 12:41:10 2013 +0200

    Fix CLS detection on systems that have getconf, but don't support the LEVEL1_DCACHE_LINESIZE option.

[33mcommit 724ad9e8e74a72543110f1a9414f10281a08d711[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 7 14:41:36 2013 +0200

    Detect L1 cache line size at build time. Fall back to 64 bytes if detection failed.

[33mcommit 53fe756798003570757b00d5988d881e4c9d00b5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 6 11:31:24 2013 +0200

    NFQ: convert batchcount related yaml errors to warnings.

[33mcommit b7c759fdf40f418a010b093d89b91833cb9018a0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 6 11:10:11 2013 +0200

    NFQ: fix configure check for finding out signed/unsigned args for nfq_get_payload

[33mcommit 703e5848e4c716fd2a14023820a46318ef8ef73e[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jan 24 22:37:39 2013 +0100

    nfq: add errno display when verdict fail
    
    In case of error, errno is set by sendmsg which is called by
    nfnetlink and which is called by libnetfilter_queue. This patch
    displays the string expression of errno if verdict has failed.

[33mcommit 8da02115c9d91dde00e7c735063faf312109f1c6[m
Author: Florian Westphal <fw@strlen.de>
Date:   Wed Jan 16 13:05:48 2013 +0100

    nfq: add support for batch verdicts
    
    Normally, there is one verdict per packet, i.e., we receive a packet,
    process it, and then tell the kernel what to do with that packet (eg.
    DROP or ACCEPT).
    
    recv(), packet id x
    send verdict v, packet id x
    recv(), packet id x+1
    send verdict v, packet id x+1
    [..]
    recv(), packet id x+n
    send verdict v, packet id x+n
    
    An alternative is to process several packets from the queue, and then send
    a batch-verdict.
    
    recv(), packet id x
    recv(), packet id x+1
    [..]
    recv(), packet id x+n
    send batch verdict v, packet id x+n
    
    A batch verdict affects all previous packets (packet_id <= x+n),
    we thus only need to remember the last packet_id seen.
    
    Caveats:
    - can't modify payload
    - verdict is applied to all packets
    - nfmark (if set) will be set for all packets
    - increases latency (packets remain queued by the kernel
      until batch verdict is sent).
    
    To solve this, we only defer verdict for up to 20 packets and
    send pending batch-verdict immediately if:
    - no packets are currently queue
    - current packet should be dropped
    - current packet has different nfmark
    - payload of packet was modified
    
    This patch adds a configurable batch verdict support for workers runmode.
    The batch verdicts are turned off by default.
    
    Problem is that batch verdicts only work with kernels >= 3.1, i.e.
    using newer libnetfilter_queue with an old kernel means non-working
    suricata. So the functionnality has to be disabled by default.

[33mcommit 6678c9feb992feb49fc5b94c63d5e89562625b83[m
Author: Florian Westphal <fw@strlen.de>
Date:   Wed Jan 16 12:56:44 2013 +0100

    nfq: avoid extra copy when running in workers mode
    
    currently, the packet payload recv()d from the nfqueue netlink
    socket is copied into a new packet buffer.
    
    This is required because the recv-buffer space used is tied
    to the current thread, but a packet may be handed off to other
    threads, and the recv-buffer can be re-used while the packet
    is handled by another thread.
    
    However, in worker runmode, the packet will always be handled
    by the current thread, and the recv-buffer will only be reused
    after the entire packet processing stack is done with the packet.
    
    Thus, in worker runmode, we can avoid the copy and assign
    the packet data area directly.

[33mcommit b68d566c4401314ab98c1c971ea16863e2d59801[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 23 16:09:01 2013 +0200

    alert-debuglog: cleanup TCP check

[33mcommit 4b3166b193757924c4d4275794975d3392f6f67d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 23 16:08:16 2013 +0200

    unified2: more udp fixes

[33mcommit bc3f941acb81882e5820f4926d180ead587940ed[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 20 11:41:49 2013 +0200

    profiling: enabled app layer profiling for UDP app layer modules

[33mcommit 782aa5adae83cbd89bf492c620fa9bc2d79abfd7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 22 11:04:24 2013 +0200

    prelude: only call stream callback for TCP

[33mcommit b54a19937f7fcbbce82bd965e5f2c65b3ea0728b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 22 11:04:10 2013 +0200

    unified2: only call stream callback for TCP

[33mcommit 00948882e7e59b41982a0d5705428e41773579e2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 22 11:03:32 2013 +0200

    Suppress warnings when StreamSegmentForEach is called for UDP or SCTP, unless debug is compiled in.

[33mcommit 3b68a9d1c617690944b153f0b21a1859b48862e6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 22 10:42:50 2013 +0200

    UDP: inspection app layer state as soon as we have it.

[33mcommit f15d97b9165589627166791f81f44186d60c0095[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 19 15:08:43 2013 +0200

    Bug 780 unittests, showing no problem.

[33mcommit b6995f76647d187f09585ae5db973a921a55b4be[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 19 15:28:13 2013 +0200

    Bug 794: stream SACK list needs to respect memcap

[33mcommit a4fca88ba7f70b9697bf8d194dc70526224daa76[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 19 12:15:57 2013 +0200

    stream: default 'random' setting when running unittests is disabled, so that test results are predictable.

[33mcommit 9b235b3d9ecac5f40c083fbc6f4d3e6e0deed0f7[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Mar 27 14:08:37 2013 +0100

    streaming: randomize chunk size
    
    By randomizing chunk size around the choosen value, it is possible
    to escape some evasion technics that are using the fact they know
    chunk size to split the attack at the correct place.
    This patch activates randomization by default and set the random
    interval to chunk size value +- 10%.

[33mcommit 6ba52230ed7877a93e35e6fca3c6bb0815ef83c3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 19 11:24:20 2013 +0200

    Update DetectContentDataParse to reflect the actual data types content uses.

[33mcommit 3ad497e74f3c9c634b22336ce1ce50bfa807f995[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 19 11:12:37 2013 +0200

    Remove filemagic debug statement

[33mcommit 19511cda97e82c620ccda86f456e4f6ee686fe91[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 19 11:07:18 2013 +0200

    Remove obsolete DetectParseContentString function, it has been replaced by DetectContentDataParse

[33mcommit 4d4f8fd3584b3615b3c2cfc48d4d09fc0b12d8ea[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 19 11:04:00 2013 +0200

    file: make fileext, filename and filemagic use the same rule parsing function as others. This has as a side effect that we enforce doubly qouted values now.

[33mcommit 8023007fbd4967e75bc1b72284e53d14463c94ba[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 19 10:38:51 2013 +0200

    flowvar: cleanup keyword argument parsing. Should also address Coverity 400655.

[33mcommit 07b751b0df4c47678d4591932200248efcc91896[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 19 10:05:38 2013 +0200

    Coverity 1005134: fix minor memory leak on flowvar rule setup errors.

[33mcommit e45f683c19df0713b8be80d68aad575c8d86f8b3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 19 10:02:36 2013 +0200

    Coverity 1005133: fix unlikely case where malformed pcre statement in rule would lead to null-deref.

[33mcommit 4c6463f3784f533a07679589dab713096137a439[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 6 20:54:25 2013 +0200

    stream: handle extra different SYN/ACK
    
    Until now, when processing the TCP 3 way handshake (3whs), retransmissions
    of SYN/ACKs are silently accepted, unless they are different somehow. If
    the SEQ or ACK values are different they are considered wrong and events
    are set. The stream events rules will match on this.
    
    In some cases, this is wrong. If the client missed the SYN/ACK, the server
    may send a different one with a different SEQ. This commit deals with this.
    
    As it is impossible to predict which one the client will accept, each is
    added to a list. Then on receiving the final ACK from the 3whs, the list
    is checked and the state is updated according to the queued SYN/ACK.

[33mcommit 00a691fc1b1960d444d21125d21890143ebb6d30[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 17 11:58:00 2013 +0200

    flowvar: clean up properly on signature clean up.

[33mcommit 70e2adeb01b0d20a76d8f599480b5dfa8ec411c5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 17 11:05:08 2013 +0200

    flowvar: add unittests for #802.

[33mcommit 4cd736fcc9d0e0218ec32037100212a8db158f1b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 16 21:47:42 2013 +0200

    flowvar: fix deadlock with http buffers
    
    Bug #802
    
    Flowvars are set from pcre, and lock the flow when being set. However
    when HTTP buffers were inspected, flow was already locked: deadlock.
    
    This patch introduces a post-match list in the detection engine thread
    ctx, where store candidates are kept. Then a post-match function is used
    to finalize the storing if the rule matches.
    
    Solves the deadlock and brings the handling of flowvars more in line
    with flowbits and flowints.

[33mcommit 4c2e6a84026baeb551675470f2e5357be8bf8889[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 16 14:53:23 2013 +0200

    flowvars: update funcs to accept u16 id
    
    All id's are u16, but flowvar functions would only accept u8.
    
    Minor cleanups.

[33mcommit ffffe6c10e10e39d58a49e4eb100a29c7a894b6d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 11 14:59:03 2013 +0200

    profiling: add formatted totals, percents to packet stats

[33mcommit 4165de4771c1849fa1ca7ca6139c5aa823686054[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 12 10:45:54 2013 +0200

    Minor SigValidate cleanup

[33mcommit 0d7305dfc753fd6ead65f20bd8062b6ee6b0f520[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Wed Mar 27 14:55:05 2013 +0530

    Update the way we handle http_host keywords.
    
    Previously we would have forced all users to use nocase with http_host
    keywords(since the hostname buffer is lowercase).
    
    We now error out on sigs that has nocase set with http_host set.  Also if
    the http_host pattern or http_host pcre has an uppercase character set, we
    invalidate such sigs.  Unittests also updated to reflect the above change.

[33mcommit 9ea4d36f7a95a4bcfddcc39de08a79e449f0bd6a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 10 10:51:00 2013 +0200

    Minor reshuffling of Signature struct.

[33mcommit eb112808886a857fc6868911dc2aef5a2d093e2b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 10 10:30:48 2013 +0200

    Use define instead of magic number for pmq's per detect thread

[33mcommit 0fa38c13d133a593ba9f82e859dd479375957092[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 10 10:22:32 2013 +0200

    detection engine: consolidate thread setup
    
    DetectEngineThreadCtxInit and DetectEngineThreadCtxInitForLiveRuleSwap did
    pretty much the same thing, except for a counters registration. As can be
    predicted with code duplication like this, things got out of sync. To make
    sure this doesn't happen again, I created a helper function that does the
    heavy lifting in this function.

[33mcommit 73158fea333e0ecc6cb14b98b521217e4d95f822[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 10 10:06:30 2013 +0200

    Fix PmqSetup calls in Liveswap thread init. Func was out of sync with normal thread init.

[33mcommit 4e7adec750c7e8555f2717d63d58bd554ee21ada[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Tue Mar 19 18:19:15 2013 +0530

    Update comment in yaml to indicate size limit for the following vars -
    stream.reassembly.toserver-chunk-size and stream.reassembly.toclient-chunk-size

[33mcommit c9d90e6596eabe1b914b35821024779962b270d4[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Apr 8 19:16:31 2013 +0200

    coccinelle: add tcp flag check
    
    The different TCP related structures have all a flags field and its
    value must match the type of structure. This patch adds a check
    alerting on invalid value usage.

[33mcommit b8078742c3da82164202621a72810aa15cdbc6d6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 6 17:52:44 2013 +0200

    stream: intro function for SYN/ACK state update
    
    As the TCP SSN state can be updated from several points in the state
    machine on accepting a SYN/ACK, move the update logic into a separate
    function.

[33mcommit 28ea129d9b27e26ca4835d844ec095f0923ac03f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 6 17:40:13 2013 +0200

    stream: remove unused 'pause' feature

[33mcommit ea8b6078d8ee0616f0a91820489690c3d58f190c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 6 17:26:33 2013 +0200

    stream: zero ts is a per stream flag
    
    Ssn flag STREAMTCP_FLAG_ZERO_TIMESTAMP was used in stream only. Due to
    it's value it did not conflict with a real stream flag. Renamed it to
    STREAMTCP_STREAM_FLAG_ZERO_TIMESTAMP.

[33mcommit 374187bf6572a1abfc6a3537d9cd11f3cea1693a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 6 17:17:15 2013 +0200

    stream: don't use ssn timestamp flag in stream
    
    The STREAMTCP_FLAG_TIMESTAMP flag is a ssn flag, however it was used in
    the stream flag field. As it has the same value as
    STREAMTCP_STREAM_FLAG_DEPTH_REACHED it's possible that stream reassembly
    got confused by the timestamp.

[33mcommit 40a5ce8f5f5f6830a688cbc6df78ee965719dca1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 21 15:49:15 2013 +0100

    Change logic of SCErrorToString causing any missing entries to result in a compiler warning.

[33mcommit 71ffed5128dbbf493be89b71eca85d319b0b20f7[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Wed Mar 27 17:57:55 2013 +0530

    Handle the case of pcre combined with a relative content, where pcre has the
    set to match from start of line and we discontinue matching on not finding
    match.

[33mcommit aa363a8144d2bcacba3bedebceaa6e7ef2c39bbb[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Tue Mar 26 13:20:54 2013 +0530

    unittest to display #784.

[33mcommit 26b7af1483fa27bbacd1d8f4dc911f337c557a1b[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Mar 26 18:24:46 2013 +0100

    Don't try to sniff 'default' interface
    
    Whan running suricata via 'suricata --af-packet', the list of interfaces
    was containing the 'default' interface and sniffing it was attempted.
    This was not wanted.

[33mcommit 539de3f5ead2468c7c900a4f3b424cdc42e0d17e[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Mar 26 17:59:35 2013 +0100

    bpf filter: use SCLogError instead of fprintf

[33mcommit b7e78d33b105105273a6275ae48e914b4de9021f[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Mar 26 16:32:36 2013 +0100

    af-packet: warn about BPF filter consequence in IPS mode
    
    This patch add a message to warn user about the impact of using a
    BPF filter in IPS mode.

[33mcommit dfbb31df8a03c4b150079902088e305060132a8e[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Mar 26 14:16:23 2013 +0100

    Exit if bpf is used in IPS mode

[33mcommit 6913109bf3948a887b5b55b09927d16632f2365a[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Mar 26 12:17:28 2013 +0100

    configure: use correct syntax for help string

[33mcommit 7d706563ef87a3f99cd8598263ac8e5f77b16754[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Mar 26 12:05:11 2013 +0100

    configure: add --enable-unix-socket flag
    
    This new flag allows the user to force unix socket build or to
    disallow it completely. Default which is test is maintained.

[33mcommit 0470c0f6789a4269b6b6c49ba14192b3912eb61b[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Mar 18 23:08:18 2013 +0100

    jansson: change function test to be sure of version

[33mcommit 106e38d20bd0aaac7cff85973e9567e3ba54823e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 25 19:38:56 2013 +0100

    Update version number of bundled htp to 0.2.12, so it matches the non-bundled version.

[33mcommit ce99a07582bc4117637f502f67071ac8abaa903b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 20 17:18:38 2013 +0100

    After some discussion we decided that var declarations inside a for statement are not in line with our coding style. So removing a bunch. Decision was not unanimous ^^.

[33mcommit 8bf034e8c47d40d8bd1c89f2185f6eb7db2c202d[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Wed Mar 20 18:19:25 2013 +0530

    Live rule swap logs added to report SigLoadSignatures() failure. Also set
    thread_closed flag on exit for live swap thread.

[33mcommit a3212f6a0f053c21340c8f465fb1afff4679fd59[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Wed Mar 20 18:17:42 2013 +0530

    Minor fixes against the last set of patches for #564, 565, 581 + fp automation.
    
    Rename struct DetectFigureFPAndId_t_ to DetectFPAndItsId_ and move it's
    definition from inside the function where it's used to the global namespace,
    as requested on #suricata.
    
    Rename DetectEngineContentModifiedBufferSetup to DetectEngineContentModifierBufferSetup.
    
    Also rename DetectFigureFPAndId() to DetectSetFastPatternAndItsId().
    
    Updated DetectSetFastPatternAndItsId() to not exit on failure and return error.

[33mcommit 6de8b1ed534f73e03e540bc5a70981748e61a322[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sun Mar 3 17:49:03 2013 +0530

    fix for #564.
    
    Get rid of the hash table, and use a single-one_time_alloc'ed array for
    pattern id assignment.

[33mcommit f58c6589b494b57fe33eb91cee0b0a0f891a3c31[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sun Mar 3 01:43:49 2013 +0530

    We now print content flags in engine fp analyzer.

[33mcommit e77fd1c883cda1e5023c1a4c9ad166348ded95cd[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri Mar 1 20:11:06 2013 +0530

    We now assign ids to fp patterns only.  Rest of them don't need one.

[33mcommit 4c6efa2d401065dcdc3e9ca37b452482df6d0510[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri Mar 1 16:42:08 2013 +0530

    Update content id assignment.
    
    All fp id assignment now happens in one go.
    Also noticing a slight perf increase, probably emanating from improved cache
    perf.
    Removed irrelevant unittests as well.

[33mcommit 60be1751d57f3e914d4243eaeeaf4933b9df8013[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri Mar 1 13:51:14 2013 +0530

    Figure out sig fp during validation stage, instead of staging stage.

[33mcommit 45ff67a2e08147e99de4e7ffd17dae3f2917b8b5[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri Mar 1 11:49:27 2013 +0530

    Enable a conf option to enable/disable legacy keywords.
    
    Currently, uricontent is declared a legacy keyword, and is enabled by default.

[33mcommit 601836d8316b89c64810ec579ef699669077cd8a[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri Mar 1 09:18:52 2013 +0530

    Fast pattern setup now configurable in our code.
    
    You can either enable/disable fp for a particular type + set priority.

[33mcommit c63317d02e733fd2266a8e5ef75e17d2464e54e2[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Thu Feb 28 18:36:09 2013 +0530

    Detect sm_list rearranged for performance reasons.

[33mcommit f8ae53ac02787a5e1c4554bad10cc8ddbe125052[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Thu Feb 28 16:21:43 2013 +0530

    Further customize content modifier buffer registration.
    
    Allow modifier setups functions to have CustomCallbacks to enable their
    internal conditions.

[33mcommit a304a98d1d4ec265dad44daf3e2d6273affed706[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Thu Feb 28 12:28:52 2013 +0530

    http_* setup unified.

[33mcommit 434bdca9e29db226c43893bf4d5a61347eb7c63d[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sun Feb 24 20:23:41 2013 +0530

    uricontent simplified to use the existing content + http_uri infrastructure.

[33mcommit 0b5d27725499b7f139d0e9db3adc46dd33a716ef[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sat Feb 23 15:36:00 2013 +0530

    code cleanup for all content based keywords.

[33mcommit 51dcf198171a1f167566e70fb9af0b6b58e1ab49[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sat Feb 23 00:00:18 2013 +0530

    turn dce_stub_data into a sticky buffer.

[33mcommit a308d718aec1b363bf413741bc56266d62de73a3[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri Feb 22 18:43:41 2013 +0530

    Allow the use of relative without the presence of a related previous keyword.

[33mcommit 4845631335f1eb4b657cbdf2843b870a865dc601[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 19 12:23:37 2013 +0100

    tcp stream: don't move to LAST_ACK on toserver resent of FIN

[33mcommit 3163243a551943b989b9c378ef8425473a4a09a1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 13 10:16:15 2013 +0100

    Coverity 989710 and 989711: small recourse leaks in filemd5 parsing code.

[33mcommit 12e4105dc341578c9d84ea39bda837f55482068e[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Tue Mar 12 12:09:31 2013 +0530

    fix for #770.
    
    Invalidate sigs with negative depth.

[33mcommit d041b98d959901b0074bae261605214d39968436[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Tue Mar 12 08:34:33 2013 +0530

    fix for #771.
    
    Fix /etc/protocols parsing.  Remove trailing newspace stored under some cases.

[33mcommit 37c80ea5082bf6e2044f02f44307bf9d9c79906b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 15 12:55:31 2013 +0100

    If an IP-only pass rule matches, set the no inspect flag for that flow. Bug #718.

[33mcommit 75130f9702ffcb9b788420d2d76b6739e575fc28[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Thu Mar 7 16:38:16 2013 +0530

    fix for #769.
    
    Packet inserted by live swap flagged as pseudo packet.

[33mcommit 274641abc25ab6b2d61d96d958bb3ed72486134d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 7 17:23:26 2013 +0100

    Fix valgrind error/warning in ip reputation parsing code

[33mcommit c6ec23ca87869a2e6108243d9cb862ff5a4fb2d9[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri Mar 1 20:48:28 2013 +0530

    fix for #758.  Add redmine wiki link and desc for icmp-id keyword.

[33mcommit 04d7d00df6b4dd8b9e25e322e98bfcf26b9b8d7e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 7 15:56:54 2013 +0100

    Try to use pkg-config to resolve libnspr and related dependencies.

[33mcommit cb8e5bc53349ec0eefdfb07e40cf17ae3e1cd104[m
Author: Christian Kreibich <christian@icir.org>
Date:   Tue Jan 15 00:23:53 2013 -0800

    Try to use pkg-config to resolve libnss and related dependencies.

[33mcommit eeb439c1a3a682a5bc76e7ff244ec213b4b67bb2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 7 13:55:01 2013 +0100

    Open 2.0 dev branch

[33mcommit b66af2c2edd0850c97eec1bf70f5c857c90356d5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 20 10:46:06 2012 +0100

    nfq: add missing error string

[33mcommit 7ec820d3ab1cdfde36463acb6c9a98e68c1460ea[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Mar 6 16:15:16 2013 +0100

    Fix potential Null deref.

[33mcommit 8924d7598dc9e5d2c861cefc37e82ba684ecdac6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 6 15:35:25 2013 +0100

    Fix potential iprep file parsing issue (2).

[33mcommit 754ae8a1bef71046f6496e1f38b343bf8d30677b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 6 15:32:53 2013 +0100

    Fix potential iprep file parsing issue.

[33mcommit 1b363ecb1d3c34063dcfbf12b36b18e229b63f62[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 1 14:02:55 2013 +0100

    Fix test AddressTestParse36 on Big Endian systems

[33mcommit 0febe5a410a020668f07dea14e0bb7398e4d4f2a[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sat Mar 2 19:38:49 2013 +0530

    fix for #760.
    
    If udpv4 csum isn't calculated, udpv4-csum detection shouldn't run on the
    csum.

[33mcommit ce7d78dd695de83d4e4e0768b29ff96a4b96c6ff[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Mon Jan 21 12:08:25 2013 +0530

    fix for #725.
    
    Update trec_len, trec_pos to 32 bits from 16 bits.
    Handle handshakes that are fragmented across records.

[33mcommit c6d50764e5276a46a3a92fb0c91272f17d5a1a76[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Wed Feb 27 20:51:36 2013 +0530

    temporarily patched smb + dcerpc parsers for direction demaraction.

[33mcommit 5b067e1abb2e91ae6a54319263fce92686373770[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Feb 28 16:52:43 2013 +0100

    pcap-file: treat the case of unsupported pcap link
    
    In unix socket mode, Suricata was stopping processing pcap files
    when a pcap file with an unsupported datalink was treated. This
    patch updates error handling to allow Suricata to treat other
    pcap files.

[33mcommit 350d76196195f7ec015c39598c0afee9d8b7ca99[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Feb 25 14:57:55 2013 +0100

    af-packet: leave reading loop at each turn
    
    The idea of this patch is to be sure to leave the ring reading loop
    enough to be able to sync counters. This should fix #706.

[33mcommit eae4de985029a5ce4956f17af0ccc2ba02d99ea6[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu Feb 28 14:01:05 2013 -0600

    Replace the deprecated AM_CONFIG_HEADER with AC_CONFIG_HEADERS.
    
    Addresses bug #704 for building on a Mac.  More generically
    it addresses the issue building using newers versions of automake.

[33mcommit ff2b8009efcc4bafd221a4441ff5c75c633c2fd5[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Feb 26 15:15:12 2013 +0100

    suricatasc: fix make distcheck.

[33mcommit df0e7af8f25894ae888f4e3cdcd1bafa11e61dcc[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Feb 23 12:31:17 2013 +0100

    unix-manager: fix thread killing function
    
    The name of the thread was not searched in the correct family.
    
    Reported-by: iswalker <mail2cissp@gmail.com>

[33mcommit cd305c3a785b30e279005db1942baa2523112d7d[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jan 22 10:47:29 2013 +0100

    suricatasc: update python packaging
    
    'make install' install now suricatasc script and Python module to
    the system. The suricatasc client module can now be used in other
    Python projects by using 'import suricatasc'.
    
    A transformation was needed for distribution of a module and a script.
    Module in src directory is now containing most of the code and the
    script only handle argument parsing and the creation of a unix socket
    client through 'suricatasc' module.

[33mcommit c39c5453e9fd95a9ff6f9ec4be08c70cfd8241a3[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Dec 6 11:21:57 2012 +0100

    suricatasc: refactor as a class
    
    The goal of this commit is to be able to use suricatasc has a library
    and and program. This is done by putting all active code in class and
    adding a Python magic to detect when file is used as a program.

[33mcommit 31c03d38b9789337eca501a9efdc356302c331e7[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Dec 5 18:30:41 2012 +0100

    unix socket: add 'dump-counters' command
    
    This patch adds a 'dump-counters' command which answer an output of
    all performance counter.

[33mcommit 345cfc35411204a882b721dfe441a6484889f60c[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Dec 5 18:26:21 2012 +0100

    suricatasc: improve output of command result

[33mcommit 9fc996e4df86304eaac944700e8024ec359a6f47[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Dec 4 17:50:22 2012 +0100

    suricatasc: treat old server case
    
    If the server don't have the 'command-list' function, suricatasc
    was failling. This patch fixes this issue by adding a static list
    instead.

[33mcommit 5722d8846a6bf74625f686d75901aed20cc95011[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Dec 4 09:31:08 2012 +0100

    unix socket: add 'help' as alias to 'command-list'

[33mcommit 36519fb4e4d5869ef1ea2944dbe3f84b95809fee[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Nov 30 20:47:47 2012 +0100

    suricatasc: real cmd line parsing and verbose mode
    
    This patch adds commandline parsing and help to suricatasc. It also
    adds a verbose mode (-v) where the send and received JSON object are
    shown. This should ease development of unix socket client.

[33mcommit 84322fa55664db73d7432d3b7cd422821a353e98[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Nov 30 20:11:44 2012 +0100

    unix socket: add 'conf-get' command
    
    This patch adds a 'conf-get' command which get the configuration
    value from suricata. Argument of the command is the name of the
    variable to fetch.
    The command syntax is the following:
    {
     "command": "conf-get",
     "arguments": { "variable":value}
    }

[33mcommit c961056ed80070bbfd6c6438fe7b3310f48a7058[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Nov 30 19:24:49 2012 +0100

    unix socket: add 'capture-mode' command
    
    This patch displays what capture mode is used.

[33mcommit 74a9fc4b6679e60d8d5c49c85cb476ee27d6d656[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Nov 30 19:17:20 2012 +0100

    Add function to display current capture mode
    
    This patch adds a function to display the capture mode.

[33mcommit 2f30485f7b45b2f4516260500fab70819cd1519b[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Nov 30 18:49:34 2012 +0100

    unix socket: add 'runnning-mode' command
    
    This command displays the active running mode ('autofp' for
    example).

[33mcommit f4faff6ff9a42dec1dfde4e5a234b302b989ccac[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Nov 30 18:43:51 2012 +0100

    unix socket: add 'uptime' command
    
    This command displays the nuber of second since the start of
    Suricata.

[33mcommit c6b38ebf6747727425b4c97adcbe0e4e101daf52[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Nov 30 18:37:41 2012 +0100

    unix socket: add 'version' command

[33mcommit e3df0d4f5dac6ba323022dba8e064d48f15220ea[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Nov 30 18:28:35 2012 +0100

    suricatasc: display command list

[33mcommit bb639e4a6d28860d5489f53cf82bcbb660abe2ef[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Nov 30 18:24:00 2012 +0100

    suricatasc: add readline completion

[33mcommit 68c1276433021551884ee91a27b1128e1e4ed0da[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Nov 30 18:13:11 2012 +0100

    suricatasc: factorize code and use dynamic commands
    
    This patch factorize the recv code and uses the new 'command-list'
    to get the list of existing commands from suricata. This allows
    suricatasc to be able to call any new command if this command does
    not require an argument.

[33mcommit 78b5812ae63856916c2e6f8ce9db8f58b5d4d781[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Nov 30 17:50:58 2012 +0100

    unix runmode: add 'pcap-current' command
    
    This command outputs the currently processed file name or 'None'
    if no file is currently processed.

[33mcommit fc7e6c4a3dceb51b098f11b96339082d940b6740[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Nov 30 17:33:38 2012 +0100

    unix socket: implement command-list command

[33mcommit 346d5662b5cd9d4a0008a3dfdd7c610e8b8d44d1[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Feb 24 18:27:24 2013 +0100

    cuda: fix invalid use of sizeof

[33mcommit aa9f795800a10c47a5aed38914a46e2c3fb7df95[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Feb 24 18:14:11 2013 +0100

    cocci test: add sizeof test
    
    This patch adds a new semantic patch taken from
    http://coccinellery.org/. This patch tests if a sizeof take size
    of pointer and not of pointed value.

[33mcommit 71609229ccb2012978b5ea3c2d541b0bd2d9be1e[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Mon Feb 25 00:48:28 2013 +0530

    sigorder cleaned up.

[33mcommit 21dda8674d485a73cfa0cdd08d343848ff0ab89c[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Feb 22 15:54:09 2013 +0100

    Fix build with old pcap library.
    
    Pcap snaplen related modification broke compilation of Suricata for
    system having old pcap library. This patch fixes the issue and allow
    old pcap library to honour the snaplen value.

[33mcommit 6d225378e4670564c97d07d493be5d9aaec1a214[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Feb 18 11:00:20 2013 +0100

    Workaround function missing in libhtp include
    
    As reported in bug #688, htp_config_set_path_decode_u_encoding
    function is not included in libhtp header before 0.3.0. Result
    is that suricata compilation fail with an external htp library.
    The following patch detect the issue and adds the missing
    declaration.

[33mcommit d472d606e95e4a22393a9aad6bb07e7983216c90[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Feb 18 10:51:20 2013 +0100

    configure: update htp version dependancy

[33mcommit 66f3c370162ed91e6dbb6f23a59b155740a2bf9f[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sat Feb 9 13:46:19 2013 +0530

    code cleanup + unittests added against http_host and http_raw_host keywords,
    against various combinations of hostname in uri and host header.

[33mcommit 3511f91bba561d0620b9082ab7dd3c4294400925[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sat Feb 2 08:31:28 2013 +0530

    Add support for the new keyword - http_raw_host header.
    
    The corresponding pcre modifier would be 'Z'.

[33mcommit c4ce19a1be4cbd08d2ea6559cffc52106c900f26[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri Jan 25 17:44:07 2013 +0530

    Add support for a new keyword to inspect http_host header.
    
    The corresponding content keyword would now be - http_host.
    The corresponding pcre modifier would be W.

[33mcommit ebccb9ffcd707b4b68588a78e1b62a27bf9859fa[m
Author: Matt Keeler <mk@npulsetech.com>
Date:   Tue Feb 19 11:49:06 2013 -0500

    Added host buffer allowance and stream configuration for Napatech 3GD
    
    Added a napatech section in the yaml configuration.
            hba - host buffer allowance
            use-all-streams - whether all streams should be used
            streams - list of stream numbers to use when use-all-streams is no
    
    The source-napatech.* files were modified to support the host buffer allowance configuration.
    The runmode-napatech.c file was modified to support both the host buffer allowance configuration and stream configuration
    
    Signed-off-by: Matt Keeler <mk@npulsetech.com>

[33mcommit 0c24a8a92febec7b250cac0e6eb193c6c909b81d[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Tue Jan 15 23:30:19 2013 +0530

    fix(more like a feature update) for bug #708.
    
    Add support for flowint based sig ordering.

[33mcommit 2f0927fe9b9d53714636ce8e25939f518fc8f702[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Feb 15 16:11:47 2013 +0100

    pcap: add snaplen YAML variable
    
    This patch introduces 'snaplen' a new YAML variable in the pcap section.
    It can be set per-interface to force pcap capture snaplen. If not set
    it defaults to interface MTU if MTU can be known via a ioctl call and to
    full capture if not.

[33mcommit e14a817fbd16dd1c447ed21a061853e956169c1e[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Dec 14 08:47:28 2012 +0100

    pfring: delete unused define.

[33mcommit 786cbb12442e8fd7aebdcc22c6c678364776c3e1[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Dec 13 16:49:37 2012 +0100

    log-pcap: don't limit snaplen.

[33mcommit e8aa66a44cd3eb222b0f5e1d6ed21af4918fda1b[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Feb 15 12:15:07 2013 +0100

    pcap: add 'promisc' YAML configuration variable
    
    This patch adds a promisc variable to pcap configuration. It is
    used to decided if interface is switched to promiscuous mode.

[33mcommit 1aaa828b63f8c4528f3632f52d8576761c9f0dc1[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Feb 15 12:10:25 2013 +0100

    pcap: set snaplen to MTU if available.
    
    Main objective of this patch is to use a dynamic snaplen to avoid
    to truncate packet at the currently fixed snaplen.
    
    It set snaplen to MTU length if the MTU can be retrieved. If not, it
    does not set the snaplen which results in using a 65535 snaplen.
    
    libpcap is trying to use mmaped capture and setup the ring by using buffer_size
    as the total memory. It also use "rounded" snaplen as frame size. So if we set
    snaplen to MTU when available we are optimal regarding the building of the ring.

[33mcommit cc51eec59dfd1e9294b13fc85f462d7816542f46[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 20 16:13:40 2013 +0100

    Use new libhtp query string normalization. Bug #739.

[33mcommit d41c762689a08e6814dc93e8bfebeceab97175c3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 20 16:13:14 2013 +0100

    Add separate libhtp query string normalization function and configuration toggles for it.

[33mcommit 2732faf05c4abe8983d39b7ed2ac9debd4d3c436[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Feb 14 11:11:55 2013 +0100

    teredo: update protocol decoding.
    
    This patch fixes an error in pointer arythmetic and add some
    comments to increase maintanability of the code. It also
    simplify the decoding code as a careful RFC reading indicate
    that if we discard packet containing an authentication field,
    it is only possible to have a single origin indication field.

[33mcommit 8d7b9703af181f3ac72853f800224b3e655e5860[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Feb 11 20:11:53 2013 +0100

    Fix latest build-info modification
    
    The creation of build-info.h should have been made in build
    directory and not in source directory. This should fix changes
    introduced in #738.

[33mcommit 84f50ba49feac17df35a2428c01265826a675fbe[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jan 23 12:17:07 2013 +0100

    build-info: use printf instead of SCLogInfo
    
    This change results in a more readable and reusable output.

[33mcommit 668113af77322eaa1f87176131ea060ffa4ed975[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jan 23 12:05:23 2013 +0100

    add configure summary to build-info output

[33mcommit f5ba8eb6db8d5e4ed0c2df3189cb19c495f2cfa9[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jan 23 10:40:40 2013 +0100

    suricata: add information to build-info
    
    This patch adds information about luajit and jansson to the
    output of --build-info command. This should fix #696.

[33mcommit 5fe9394d071b6c6b24cf8a3b05a2f1a1e6d800a0[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sat Feb 2 19:33:19 2013 +0530

    bug #737.  Display a more apt error message when wrong argument's supplied to
    reference keyword.

[33mcommit bf0ebcbef717e0064b04a904d8fa60a3ef80532c[m
Author: Jake Gionet <gionet.jake@gmail.com>
Date:   Thu Jan 31 06:20:17 2013 -0600

    Adding comment in suricata.yaml.in to indicate sensor-id option.

[33mcommit 1ac893878710f1b4a0b7f8a1ee5694f0ae4f5ec4[m
Author: Jake Gionet <gionet.jake@gmail.com>
Date:   Wed Jan 30 23:15:18 2013 -0600

    Adding support for Feature #667

[33mcommit d0c1410cf58ae0275c8b59bb42de8e0991b21435[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 1 17:28:32 2013 +0100

    Fix sig grouping bug when certain sigs are mixed. Add tests.

[33mcommit afb2d4eddfbd80cbc49aa6f7a732bf5a323c8c2f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 30 13:29:19 2013 +0100

    Fix stateful inspection not always inspecting at stream end.

[33mcommit f59ce70c176fcdc0a6d61dde7d711dd5dc810499[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri Jan 18 00:23:49 2013 +0530

    fix for #694.
    
    Invalidate any address/port vars in the conf that uses a sequence
    without quotes.

[33mcommit 51868f17ae7af8736e886e64894459f6f480aa3d[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Tue Jan 22 18:26:48 2013 +0530

    unittest to show the seg fault from bug_694

[33mcommit 8f19024999b6aaaeee282af54a15a77650896076[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 22 13:45:14 2013 +0100

    geoip: add Fedora pkg hint to configure check

[33mcommit 34a9c047fc2d5a8cdb72150667a70e3926c0764f[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Tue Jan 22 17:09:22 2013 +0530

    updated to fix unix shutdown sequence
    
    Should fix crashes occuring from unix mode shutdown/cleanup phase.

[33mcommit d771e08156301d7f2713c93c830d2bc8c7ea6b95[m
Author: Ignacio Sanchez <nc@owlsec.net>
Date:   Thu Oct 11 13:55:40 2012 +0100

    Adds support for the geoip keyword
    
    Adds support for match-on conditions (src, dst, any, both)
    Uses GEOIP_MEMORY_CACHE for performance reasons
    Adds support for negation and multiple countries in the same rule
    
    Bug fixes
    
    Changed to take flow direction from rule, if present
    
    Comments addressed. Unit tests added.

[33mcommit 6dfd1061397b1ee26c0f7e267674077556ceef66[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 21 17:27:46 2013 +0100

    conf: add unittest for WithDefault functions.

[33mcommit f59c63c457f87b7ee8b2e38f842b8ff2495669f8[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 21 09:56:02 2013 +0100

    pcap: add support for 'default' interface

[33mcommit feabe6e9a254e96d267d8274338d7d451b7651f9[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 21 09:52:13 2013 +0100

    pfring: add support for 'default' interface

[33mcommit 4ae27756b0dc9af7a21f9df1e77fa7c68ae202bc[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 21 09:40:10 2013 +0100

    af-packet: add support for 'default' interface
    
    This patch adds support for 'default' interface which is used to get
    parameter values when per-interface is not defined.

[33mcommit 0bddf4f02f1a98b030277378f8e60a2b3721a137[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 21 09:27:08 2013 +0100

    conf: introduce WithDefault function
    
    This patch introduces a new set of functions to the ConfGetChildValue
    family. They permit to look under a default node if looking under
    base node as failed. This will be used to access to default parameters
    for a data type (for instance, first usage will be interface).

[33mcommit 6b81430bcb2a8b4394f30b17c90b4c3455a69415[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jan 17 11:12:27 2013 +0100

    pcap-file: don't kill engine in unix socket mode
    
    This patch updates the cleaning code to avoid to exit from suricata
    in unix socket mode when a invalid pcap is given.

[33mcommit bc04090bc99241be5d55c8f38ba697b4dbda7c36[m
Author: Jamie Strandboge <jamie@strandboge.com>
Date:   Fri Jan 11 07:21:08 2013 -0600

    suppress: DETECT_SUPPRESS_REGEX should support IPv6 addresses too. Bug #697.

[33mcommit 80ed1ba008ed836821d08506b8e95f40d2f160b4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 9 14:07:52 2013 +0100

    file md5: print filename and line number on md5 parse errors. Bug #693.

[33mcommit 9480559c65e11f4915b2c3de74f224c5625b1c51[m
Author: Nikolay Denev <ndenev@gmail.com>
Date:   Wed Jan 9 12:40:55 2013 +0200

    preserve the existing error code order
    
    restore SC_WARN_IPFW_SETSOCKOPT
    move SC_ERR_IPFW_SETSOCKOPT at the end of the enum

[33mcommit 894ad21be53e9c7ad2c3ae5a83c6e0951b45be5c[m
Author: Nikolay Denev <ndenev@gmail.com>
Date:   Sat Dec 22 16:28:29 2012 +0200

    setsockopt() failures are already fatal,
    so treat them as such and print error instead of warning.

[33mcommit 29b69fb026a9dd06951c94b28d7bd38539e30fe9[m
Author: Nikolay Denev <ndenev@gmail.com>
Date:   Sat Dec 22 13:00:13 2012 +0200

    set SO_BROADCAST on the divert socket so that broadcast
     packets can be reinjected.

[33mcommit 6783463eeeec3d46214032f0c39346a9c1a2ba37[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 8 19:32:56 2013 +0100

    Fix ftpbounce address calc failing on PPC64

[33mcommit 0c84a7a2a96dd80edc68a3801e8c6b51714ea6c6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 8 15:20:21 2013 +0100

    Use _mm_free for memory allocated by _mm_alloc. Bug 703. Minor compiler warning fixes.

[33mcommit 34d063adeac6e7693feb97ebb0b141c49f25c86d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 8 13:47:14 2013 +0100

    Fix double definition of CPU_* macro's for Darwin/OSX. Bug 701.

[33mcommit f0578c474e13b056665ade6cec37e75db5788fcb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 8 13:32:48 2013 +0100

    Fix byte order detection on Mac OS X/Darwin. Bug 700.

[33mcommit 5f4c52801e663f499abee4b5c004b6ca75ded4df[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 18 16:54:46 2012 +0100

    Fix protocol check for IP-only (#689).

[33mcommit 633707457f666bbe76def792fad640728feaae91[m[33m ([m[1;33mtag: suricata-1.4[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 13 13:43:06 2012 +0100

    Update changelog for 1.4

[33mcommit 1eed3f22332fff19751f786489ec2565b9a274e1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 12 18:29:01 2012 +0100

    ipv6: add event for ipv6 packet with icmpv4 header

[33mcommit 53c023342c37ea03a35c9aecab090e720225f2c3[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Wed Dec 12 17:48:21 2012 +0530

    fix for 653.
    
    break out of afp readring loop if shutdown is initiated.

[33mcommit a55ff64a1b29897ae8c6debb6c786a5625656235[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 11 12:10:44 2012 +0100

    Use GET_PKT_LEN and GET_PKT_DATA macro's

[33mcommit e690b3bbc96bdefb130547c7c8dd94c8ff573a83[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Dec 6 15:33:25 2012 +0100

    magic: freebsd magic return differently
    
    FreeBSD don't return "Microsoft Office Document" but
    "OLE 2 Compound Document". This patch takes this into account.

[33mcommit a30a1e59507c2e24b36e7085181d7eb2de17ab7d[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Tue Dec 11 00:44:54 2012 +0530

    fix for bug 675.
    
    Fix icmpv6-csum to send the right length to calculate the csum.

[33mcommit af92c2fa4b74d368da219f0ad83690a90743a91c[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Mon Dec 10 22:22:31 2012 +0530

    Unittest to show the issue we have with 674 - csum-icmpv6 sends
    wrong length for csum calculation)

[33mcommit 150b0c5ae040b5bb31940f332f0b1eb1af66268b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 10 18:34:11 2012 +0100

    ipv6: add option to detect HOP/DST headers with only padding. Detect unknown DST/HOP opts.

[33mcommit ba367dad3c70c3cb87270cfe31ea3d7c61474737[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 10 16:00:44 2012 +0100

    icmpv6: fix payload handling

[33mcommit 538a941486434a7f2ed87f44ed6b376547e14579[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 10 13:59:53 2012 +0100

    decoder events: fix bug causing some rules not to be inspected if the decoder completed with warnings

[33mcommit f5cd7c6a92a715e806c773b6839d163c91e5d948[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 10 13:46:42 2012 +0100

    decode events: add debug statement

[33mcommit 82769a1b37e3ee296714c776c5a42e996fe4b23b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 3 14:15:39 2012 +0100

    profiling: fix missing profile names

[33mcommit 72443a0d62fb335652f68fdc89437006ba23fb31[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 6 14:48:56 2012 +0100

    unified2: append open instead of trucate open so that in case we rotate within a second we don't overwrite files. Instead we violate the limit.

[33mcommit 298d21372b52333f7103fbde0925daa4d77ec78e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 5 18:55:45 2012 +0100

    flow: only BUG_ON use_cnt in flows when compiled with debug-validation

[33mcommit b22a0cffbb50511087098e2a61fe81b770712655[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Mon Dec 3 23:58:53 2012 +0530

    cleanup flowtimeout threadvars retrieval +
    throw back pseudo pkt back to packetpool inside flow timeout.

[33mcommit abecef5d82c985ade201d920d09b5225b6bc8d2b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 5 18:29:33 2012 +0100

    stream: send eof to app layer from stream end pkt if necessary

[33mcommit ac8b08771770ab0f0f5112c84c499771f5fb746e[m
Author: Ludovico Cavedon <cavedon@lastline.com>
Date:   Sat Dec 1 15:29:06 2012 -0800

    Wait until both sides close the TCP connection before initiating cleanup

[33mcommit 40d067e9ec948cec976475225f4c265a639d2835[m[33m ([m[1;33mtag: suricata-1.4rc1[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 29 13:27:36 2012 +0100

    Update docs from wiki

[33mcommit e4f25661777a94a114480958cc1cc4861cd74816[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 29 13:26:36 2012 +0100

    Update changelog for 1.4rc1

[33mcommit 2accda78a10ed51dc9d645a08c316d0244f435eb[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Nov 28 18:02:09 2012 +0100

    unix runmode: fix error handling.
    
    If 'output-dir' argument was not given it was possible to reach a
    possibly problematic condition.

[33mcommit 1fd47cfb96f7aa5c1cf242d106d94ff15018dba0[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Nov 28 17:58:18 2012 +0100

    Remove useless code.

[33mcommit b3d42859823ccc834dbf08fcd6f88e2470c9028f[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Nov 28 17:52:43 2012 +0100

    fix logic error in sanity check

[33mcommit 9c47ada7718cbb201ec02dd07dfe1aa10d5fb545[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Nov 28 13:22:22 2012 +0100

    Add removal safe TAILQ iterator.
    
    TAILQ_FOREACH macro was not safe for element removal as it was
    accessing the next element in case of a free. This patch is inspired
    by Linux list handling and provide a new macro TAILQ_FOREACH_SAFE.
    This macro is removal safe and only differs by a last argument being
    a temporaty pointer to an element.

[33mcommit 06751ecd756cf77f9eb91e7fd53b10058c4dad01[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Nov 28 10:34:35 2012 +0100

    prelude: don't build string objet for NULL string
    
    prelude_string_set_ref don't like when it is called with a NULL
    parameter. This patch adds check for NULL value. This is formally
    good as there is no use of a NULL description.

[33mcommit 005f7a239945ce0666d9687467d1ff3ab1b6ba23[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Thu Nov 22 13:45:05 2012 -0600

    Feature 638: Display DAG drop counts on exit; add DAG packet and drop stats to live stats.

[33mcommit b617c9c3f2b842dc07928aceac6a363f19e9f1ce[m
Author: Ludovico Cavedon <cavedon@lastline.com>
Date:   Tue Nov 27 10:06:46 2012 -0800

    Fix length check on user-agent header

[33mcommit 5dd0a1d917abb2d1ba5c042661a9651b66b20515[m
Author: Ludovico Cavedon <cavedon@lastline.com>
Date:   Tue Nov 13 16:42:56 2012 -0800

    Add User-Agent header content to file metadata

[33mcommit 34d5aadcb88411feedf3c9661743c44e68fd6572[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Tue Oct 16 14:16:23 2012 +0530

    warn users that we don't support content strings whose length's > 255.

[33mcommit 2f4c9198a6a19b32fad54989728adc5657a5d1f6[m
Author: Ludovico Cavedon <cavedon@lastline.com>
Date:   Wed Nov 14 11:09:13 2012 -0800

    Initialize flow_manager_mutex

[33mcommit 464ed95f710f94a84f353022bf1a0c3436c0252c[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Tue Nov 27 11:32:16 2012 +0530

    fix for bug #526.
    
    Insert pseudo packet under low load conditions to complete rule swap.
    This is necessary when we use autofp active packets where most packets
    would be sent to the first queue under low load conditions.

[33mcommit 467f28e98eb4e6540749b1754aeea88a41a06759[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 27 18:55:28 2012 +0100

    clang: make atomics work

[33mcommit 389c48f222f453ae63f5ed7bd177d16ac621c751[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 27 16:25:59 2012 +0100

    Fix detection of spin locks supported. Clean up how we handle falling back to mutex if spinlocks aren't supported.

[33mcommit df3d10865abd31a95554f967d2129799f3efbf17[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Nov 27 10:09:59 2012 +0100

    host: suppress double memory clear
    
    HostFree() is calling HostClearMemory() so calling HostClearMemory()
    before HostFree() is useless.

[33mcommit 12fd60b545d5bb86b8245d66a5f9c786e61b51fd[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Nov 26 19:36:09 2012 +0100

    unix-socket: cleanup host table instead of destroying it
    
    This patch should fix the bug #637. Between pcap files, it uses a
    new function HostCleanup() to clear tag and threshold on host with
    an IP regputation. An other consequence of this modification is
    that Host init and shutdown are now init and shutdown unconditionaly.

[33mcommit d9eaa0d3405728cf5ed77c1ac46bff37cbc1bb58[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Nov 27 10:01:12 2012 +0100

    host: don't destroy reference counter
    
    The reference counter should not be destroyed in HostClearMemory()
    as the host can be reused directly (without going through Init
    function).

[33mcommit ca1a70a04bde9e2f159ae8284515c38dfe793d32[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Nov 24 16:44:52 2012 +0100

    pfring: fix build failure

[33mcommit 344ea3fa7c8178f9ba76901fb5265edd134f7880[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Nov 26 11:14:01 2012 +0100

    configure: improve message about pkg-config usage
    
    This patch improve the error message when luajit libraries are not
    found. It displays information about the possibility to use
    PKG_CONFIG_PATH or the dedicated configure options.

[33mcommit b1ce94babe4c1f17e7e781522e51471d3185de60[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sun Oct 21 12:01:44 2012 +0530

    Temporary fix for bug #599.
    
    Treat sigs with negated addresses as non ip-only.
    
    This fix exposes bug #608, which results in 2 failed unittest which
    have now been disabled by this commit.  Would be reenabled when we
    have #608 fix in.

[33mcommit fdc666f73295d3f368268540bed070fdf51fe4e1[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sun Oct 21 12:14:25 2012 +0530

    unittest to show failure for bug #599.

[33mcommit 9f519e95a275e478051c6f270caced2e93541acf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 23 10:56:22 2012 +0100

    http: add event for libhtp detection of request port not matching tcp port.

[33mcommit 3ab1458abf29e2b84b82f6f0e6af0dd77c29389b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 22 17:56:31 2012 +0100

    pcap: fix windows commandline mangling win device string

[33mcommit a698a7600d7e78a5215d979b29d2dbf00d490411[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 20 15:44:05 2012 +0100

    clang: fix warnings when debug is enabled

[33mcommit 40bbf96f22ef4edb81cc613fa5db43335ad2701d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 20 15:40:15 2012 +0100

    reputation: don't give error if config is missing/commented out

[33mcommit 0f42f0e89077acbea7dffe2f85a3e3d669210cb0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 20 14:40:41 2012 +0100

    Minor fixes

[33mcommit 6b3ebc810d749cce61501dea6ee1890aa80288ab[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Nov 20 10:57:16 2012 +0100

    unix runmode: improve JSON handling
    
    The jansson function with new in their name take care of ref
    counting. The this patch fixes a memory leak.

[33mcommit 195b144daaef00bcd7aeb498f46f97d348735184[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Nov 20 10:58:34 2012 +0100

    unix-manager: fix error and JSON handling

[33mcommit a05113a2b1aa196a135c9775ea87d85ef8f392ee[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Nov 20 10:28:35 2012 +0100

    unix-manager: memory handling fixes.
    
    This patch adds unlikey() for memory error handling and fixes a few
    error cases.

[33mcommit 028a37f6e7f0fff6eb31862f3bca75ecb1b2beab[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Nov 20 10:21:16 2012 +0100

    unix runmode: use unlikely for memory error

[33mcommit 547c55114e3efb33f1948e030624a2430c59c4e7[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Nov 20 10:17:57 2012 +0100

    unix runmode: fix FIXME

[33mcommit f38b8fe4eb582c07bf3c1a29f3e1ce804f82931a[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Nov 20 10:15:13 2012 +0100

    unix runmode: fix JSON mem handling
    
    json_decref was not correctly used through the code. This patch
    fixes it.

[33mcommit 13237b8af28b96a657c6fd4fea38897ddcf43fbf[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Nov 20 10:10:08 2012 +0100

    unix manager: add static

[33mcommit ef45f7dac408664343843fed922d8d786437e3d9[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Nov 20 10:09:48 2012 +0100

    configure: fix indent

[33mcommit 936c36d5f17a858a61090b51b25b73ea6c4dce15[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Nov 19 12:41:42 2012 +0100

    Disable 'reload-rules' command.

[33mcommit d5457ad70ea67a36fadc01d7509cf020c4fbff82[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Nov 19 11:53:29 2012 +0100

    unix-manager: doc and whitespace fixes

[33mcommit af16c418b753774b70e06cf0cc94ec7388c38611[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Nov 19 11:49:04 2012 +0100

    unix-socket: fix build when jansson not present

[33mcommit ef64648cf8e7e6f34b8e7c994e6ca2c1a4dca927[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Nov 15 09:58:01 2012 +0100

    unix-command: add drop counter to iface-stat message

[33mcommit 8d0260b27e642c0377b6d95e3411d53cc311ded9[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Nov 15 09:56:17 2012 +0100

    Add atomic counter for iface drop.

[33mcommit cc71c993f4a26c53c67d520a7a5f7f67d9b2077b[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Nov 15 09:06:01 2012 +0100

    unix-command: add iface information command.
    
    This patch adds two commands to unix-command. 'iface-list' displays
    the list of interface which are sniffed by Suricata and 'iface-stat'
    display the available statistics for a single interface. For now,
    this is the number of packets and the number of invalid checksums.

[33mcommit c78e112e3ed8d6e85822674aa1b0c1b36265db0a[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Nov 15 09:05:08 2012 +0100

    af-packet: update runmode copyright date.

[33mcommit 6f0a851087ff3137203e3ad07cfcfa4d8e882db6[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Oct 30 14:35:23 2012 +0100

    unix-manager: fix error treatment in accept phase

[33mcommit f2a17f47d31d6524f5a61758b0b4534803ac3644[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Oct 29 11:56:46 2012 +0100

    unix-manager: implement multi client support
    
    This patch implements the support of multiple clients connected
    at once to the unix socket.

[33mcommit 83f0af36305cb9b5523a2b8ccb24fa6520949aa2[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Oct 26 16:21:21 2012 +0200

    suricatasc: improve reading when system is loaded

[33mcommit a9cb8ce89f111d3528d6209265f66574169a1d6c[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Oct 26 10:31:13 2012 +0200

    affinity: avoid to init structure twice
    
    In unix socket mode, suricata was doing multiple init of the
    structure. This was not needed and caused a memory leak in
    mutex creation.

[33mcommit 93f801b3a97d44bbb946cf5f0446b04dc980bbfe[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Oct 26 10:21:36 2012 +0200

    pcap-file: update affinity setting code
    
    The affinity setting code was using the old API. This patch updates
    to the new API and also adds a call to RunModeInitiaze() which was
    missing in Single running mode.

[33mcommit cfd80e7063261818c555c0d0a87bd4c156e8f89d[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Oct 26 09:52:11 2012 +0200

    unix-mode: fix return of pcap-file command

[33mcommit f8921d8a2808b38c980084469019a0cee1b46a17[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Oct 25 22:06:29 2012 +0200

    unix-socket: introduce API to add commands and tasks
    
    This patch transforms the unix socket into a flexible system to
    add commands (triggered by user) and taks (run periodically).
    It introduces two functions UnixManagerRegisterCommand and
    UnixManagerRegisterBackroundTask to registed commands and tasks.
    
    Other part of Suricata can then declare a new command via a simple
    call of the function. In the case of a command the caller is
    responsible of building the answer message using Jansson API. The
    sending of the message is made by unix manager code.

[33mcommit 20a8b9dbe57f6fed9c94e04eca692db5d4c0f7a1[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Feb 7 23:48:56 2012 +0100

    unix-manager: add unix command socket and associated script
    
    This patch introduces a unix command socket. JSON formatted messages
    can be exchanged between suricata and a program connecting to a
    dedicated socket.
    The protocol is the following:
     * Client connects to the socket
     * It sends a version message: { "version": "$VERSION_ID" }
     * Server answers with { "return": "OK|NOK" }
    If server returns OK, the client is now allowed to send command.
    
    The format of command is the following:
     {
       "command": "pcap-file",
       "arguments": { "filename": "smtp-clean.pcap", "output-dir": "/tmp/out" }
     }
    The server will try to execute the "command" specified with the
    (optional) provided "arguments".
    The answer by server is the following:
     {
       "return": "OK|NOK",
       "message": JSON_OBJECT or information string
     }
    
    A simple script is provided and is available under scripts/suricatasc. It
    is not intended to be enterprise-grade tool but it is more a proof of
    concept/example code.  The first command line argument of suricatasc is
    used to specify the socket to connect to.
    
    Configuration of the feature is made in the YAML under the 'unix-command'
    section:
      unix-command:
        enabled: yes
        filename: custom.socket
    The path specified in 'filename' is not absolute and is relative to the
    state directory.
    
    A new running mode called 'unix-socket' is also added.
    When starting in this mode, only a unix socket manager
    is started. When it receives a 'pcap-file' command, the manager
    start a 'pcap-file' running mode which does not really leave at
    the end of file but simply exit. The manager is then able to start
    a new running mode with a new file.
    
    To start this mode, Suricata must be started with the --unix-socket
     option which has an optional argument which fix the file name of the
    socket. The path is not absolute and is relative to the state directory.
    
    THe 'pcap-file' command adds a file to the list of files to treat.
    For each pcap file, a pcap file running mode is started and the output
    directory is changed to what specified in the command. The running
    mode specified in the 'runmode' YAML setting is used to select which
    running mode must be use for the pcap file treatment.
    
    This requires modification in suricata.c file where initialisation code
    is now conditional to the fact 'unix-socket' mode is not used.
    
    Two other commands exists to get info on the remaining tasks:
     * pcap-file-number: return the number of files in the waiting queue
     * pcap-file-list: return the list of waiting files
    'pcap-file-list' returns a structured object as message. The
    structure is the following:
     {
      'count': 2,
      'files': ['file1.pcap', 'file2.pcap']
     }

[33mcommit 6be63bdc4f65fd7cef5df595a047d2a2302a7bbc[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Sep 17 15:24:39 2012 +0200

    tm-threads: add TM_ECODE_DONE state
    
    This patch adds a nex return state which can be used by threads
    to warn that a task has been done. In this case, suricata does not
    leave.

[33mcommit 412482f6b131b196824e585a92b7fcaa39db6d1b[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Oct 9 12:56:17 2012 +0200

    filestore: create file store directory if needed
    
    This patch modifies the file store system to have it create the
    file store directory if needed. It dos not create the full
    directory tree as the parent directory must have already been
    created.

[33mcommit 7b1d346c22f934327b17f5f50a4ee53b3ac7bf3e[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Oct 9 18:38:34 2012 +0200

    counters: management cpu set was set twice
    
    Setting the management CPU set on perf threads is already done in
    the TmThreadCreateMgmtThread() function used to create the threads.

[33mcommit 84f2645e3eca24b1eefddb246068ddcd4f7d2dcc[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Oct 18 17:27:48 2012 +0200

    pcap-file: free thread var at deinit.

[33mcommit 28b4bed1411be8f9904ad24be6bfef4aecf299c3[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Oct 9 18:38:02 2012 +0200

    tm-threads: fix potential access to NULL pointer.

[33mcommit 1b26660ac439e31982f42828a730688800bb8ec4[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Oct 17 08:54:31 2012 +0200

    counter: defensive set to NULL in free.

[33mcommit 09b79cb5bfa613f2d89709975a1486cc371bf044[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Oct 23 18:20:22 2012 +0200

    stream-tcp: fix double call to debug print function

[33mcommit 8ae11f73b21c9aa952c43aecd4aed9c8022baefb[m
Author: Last G <last_g@hackerdom.ru>
Date:   Thu Sep 13 01:07:10 2012 +0600

    Added parentheses to fix Eclipse static code analysis
    Fixed bug in action priority (REJECT_DST had lowest prio)

[33mcommit e236351c52e4e3477b5e323d05b3ad2d13af0c83[m
Author: Last G <last_g@hackerdom.ru>
Date:   Thu Sep 13 00:09:38 2012 +0600

    Fixed missing "|" in "||" operation

[33mcommit edcb8fdb87fabb216fc9a87522a392f8be4e29f1[m
Author: Last G <last_g@hackerdom.ru>
Date:   Thu Sep 13 00:08:42 2012 +0600

    Added parenthesis for right operation order

[33mcommit 8bb9c3af350024d6c1784e51ba1011006adb97ba[m
Author: Last G <last_g@hackerdom.ru>
Date:   Thu Sep 13 00:04:45 2012 +0600

    Added return value to non-void function with "forever"-loop to fit
    Eclipse static code analysis

[33mcommit 6dd7b27ffca0f9d62d6333cd902f3207900b8429[m
Author: Last G <last_g@hackerdom.ru>
Date:   Wed Sep 12 23:59:03 2012 +0600

    Added right return values to non-void functions with "forever" loop
    to fix Eclipse static code analysis

[33mcommit 56e0ab35e9c695154d6f8f04275bb929392252b2[m
Author: Last G <last_g@hackerdom.ru>
Date:   Wed Sep 12 23:54:54 2012 +0600

    Fixes with missing return value in main function

[33mcommit 40891223e97f3954ae1f39ee88afeadef7121852[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Nov 15 14:12:10 2012 +0100

    list-keyword: detect non built keyword
    
    This patch update the glafs list to be able to indicate that a
    flag is not supported. This information is used by list-keyword to
    display information to the user.

[33mcommit 819debdce561fd5e81aad6901211dbc0db3d3172[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Nov 15 14:00:47 2012 +0100

    configure: use pkg-config for luajit
    
    If luajit includes or libs is not set in configure, we fallback to
    pkg-config output.

[33mcommit e125869d306df18407e7f3e34cd7a4054e4e259f[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Nov 15 13:47:24 2012 +0100

    configure: exit if luajit header are not found but build ask

[33mcommit 8f13694988d1eac99b1ea7616c0acdf46af8ffd1[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Nov 15 13:41:05 2012 +0100

    luajit: no link with HTTP when not build.
    
    Even when not built-in, luajit is not linked with HTTP.

[33mcommit 68425453317b8be4f9e5d26643741baf0dff3bff[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Nov 7 19:03:36 2012 +0100

    Add documentation url in list-keyword output.
    
    The output of the list-keyword is modified to include the url to
    the keyword documentation when this is available. All documented
    keywords should have their link set.
    
    list-keyword can be used with an optional value:
     no option or short: display list of keywords
     csv: display a csv output on info an all keywords
     all: display a human readable output of keywords info
     $KWD: display the info about one keyword.

[33mcommit a9ffd82116fb043cf8e0b4d11d420f9d52d1cba2[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Nov 13 15:08:42 2012 +0100

    yaml: fix typo

[33mcommit fa900a9f6b4239799b32355479f922f85180e517[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Nov 7 11:36:01 2012 +0100

    suricata: add information about BPF filter usage

[33mcommit 7e14fe62f53ea6356ee63d388dc61cfae31c83c9[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Nov 7 11:32:52 2012 +0100

    suricata: add '-V' info to usage message.

[33mcommit fd3a1346e4a09c42304e30053edd5eeebcec2e99[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Nov 7 11:18:39 2012 +0100

    suricata: add build-info command to usage message.

[33mcommit 4e0f5b7f02ec7cb702c5d1794672cea189c7697d[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Nov 6 19:21:42 2012 +0100

    suricata: don't display msg in list-keyword mode.
    
    In list-keywords and list-app-layer mode, suricata now only
    displays the messages linked with the feature. This allow users
    to redirect the output and easily work on it. For exemple, the
    csv output will be easily imported into a spreadsheet.

[33mcommit 5e4552fdcdc3e33a77d342ccceeb38ec4d0f3377[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Nov 6 18:32:48 2012 +0100

    suricata: update list-keyword command
    
    This patch update the list-keyword command. Without any option,
    the previous behavior is conserved. If 'all' is used as option,
    suricata print a csv formatted output of keyword information:
            name;features;description
    If a keyword name is used as argument, suricata print a readable
    message:
    tls.subject
    Features: state inspecting
    Description: Match TLS/SSL certificate Subject field

[33mcommit 86709f5e9daea39325eb766051d8463268ee1127[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Nov 3 10:18:42 2012 +0100

    rule analyser: display message for invalid signatures

[33mcommit c7cfbb71c962bf584ed739fa812e7a098a5bcaf7[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Nov 2 22:27:50 2012 +0100

    engine-analyzer: fix typo in message

[33mcommit cd42e6a3ef752d8778d6c93978c72fbc77221864[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Nov 2 16:24:52 2012 +0100

    Listing of app layers does not depend on unittests

[33mcommit 42ace54137fc8e272f1d717477c355de61b62126[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Nov 2 16:21:36 2012 +0100

    list-keywords: fix when not using default install
    
    As we don't parse the YAML file when listing of keywords is asked,
    suricata make a test on existence of the build-default directory.
    So with a non standard (working) install (even a single configure
    without option lead to a failure), the keyword listing fails
    because the default logging directory does not exist.

[33mcommit b0471fb8e485a59c69fc9d2f6ee8cfb40c5ca333[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Nov 2 16:14:11 2012 +0100

    rule analyser: add msg if rule is ipv4 or ipv6 only

[33mcommit 83bfe3810bb07e80c22d54dce11adb3ddf396003[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 16 17:42:35 2012 +0100

    reputation: report error if host table memcap reached. Work around compilation failure with atomic fallback code.

[33mcommit 18535e6ef9f4ced7ab184f271f37df654760120e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 16 17:41:42 2012 +0100

    Host: ignore usecnt add/sub result. Expose HostPrintStats.

[33mcommit e30b1bfe64c94ddca9297a549fa02083940c2e60[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 2 17:44:21 2012 +0100

    Simple IP reputation implementation

[33mcommit 9140aa6ac5aecb8126bdb0670092e4f4f727d859[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 16 10:57:50 2012 +0100

    cygwin supports the thread cpu affinity code now

[33mcommit b20bfa04ef3d1804bba5c8bb89c620f9ea9b02d6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 16 10:09:14 2012 +0100

    clang warning squashing

[33mcommit 84bad6db77a4c2c597d51cb626e95bdecfb5fcd7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 15 16:02:44 2012 +0100

    Silence compiler warnings found by clang

[33mcommit b63c2eda6a356413bfc673116fc4de45642e2543[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 15 16:02:18 2012 +0100

    build: more cygwin cleanups

[33mcommit dc465b92e58e63e078a5f32fb6b3a7e230f90327[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 15 15:20:27 2012 +0100

    Fix use of byte swap function

[33mcommit 506c144c60cd9558b9506512942abc0791666049[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 15 12:25:32 2012 +0100

    build: reshuffle including headers to fix build on cygwin

[33mcommit 8660877961a3942738f3361c56d75941e6f30ab9[m[33m ([m[1;33mtag: suricata-1.4beta3[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 14 15:33:44 2012 +0100

    undo setting exact version in configure.ac

[33mcommit b0caeaa5e33fa160602d684b15c78b5cc04ff071[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 14 14:56:00 2012 +0100

    Update changelog to reflect 1.4beta3 changes.

[33mcommit 6441a53d3c807d711f9fbdb864459006423b97a9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 14 12:48:43 2012 +0100

    libhtp: updated bundled libhtp to 0.2.11

[33mcommit e1cabae0f4e3a0dd663ba4a1a63b7f797eaeda25[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Wed Nov 14 14:59:40 2012 +0530

    fix uninit var usage in hhd

[33mcommit 4726e02afbbbccb3b7b5dabe22a3b0d6f21ff6d7[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Nov 11 20:59:27 2012 +0100

    logging: add warning if no output module is selected
    
    If no daemon compatible logging module is selected, a message is
    displayed to avoid the user to look like mad for messages.

[33mcommit 1c3546fec11180aa85689e6d1d18f78631846714[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Nov 11 20:25:22 2012 +0100

    install: create state dir with install-conf

[33mcommit 9f4da93a4b501cd4d80e68be7f98c1707551d16d[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Nov 11 18:47:07 2012 +0100

    suricata: don't exit if pidfile can't be created

[33mcommit e148b2b82a2d894426dd3f257cb458c0bd48bab6[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Nov 11 18:25:57 2012 +0100

    suricata: display PID file name in case of error.

[33mcommit e2c7078cc3e227cc28b751d7bc7e4e6757f72a5b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 14 09:30:27 2012 +0100

    Add contrib dir and it's content to the dist. Bug 567

[33mcommit 93bdaa49d8c520c4d0848958b7a4434139e05319[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 13 17:49:41 2012 +0100

    byte_jump: when from_beginning option is used, the number of bytes to convert should not be used in the jump. Bug 627.

[33mcommit 7854c849729c59513575234d665295e86c7d68d8[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Nov 12 18:34:50 2012 +0100

    pcap: add capture counters in stats.log.
    
    This patch adds three counters to stats.log:
        capture.kernel_packets    | RxPcapwlan0               | 4218
        capture.kernel_drops      | RxPcapwlan0               | 0
        capture.kernel_ifdrops    | RxPcapwlan0               | 0
    This patch meant to fix bug #625.

[33mcommit bcaec1e9637afa5ee7a6fc7e697731e91b72d5b5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 11 21:28:40 2012 +0100

    pkt-data: don't compile unittest unless unittests are enabled

[33mcommit 472e061c6d8d4fcdf39b5757374ffb89df552a70[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 11 21:24:16 2012 +0100

    build: more checking for includes

[33mcommit 89f83c2ee451166e228444670bfe85ad7f94a251[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 11 15:42:52 2012 +0100

    configure formatting fixes

[33mcommit 2a42f554b11e70cd0575db5e9445c9a386794d2d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 11 15:25:15 2012 +0100

    build cleanup, build source files in alphabetical order

[33mcommit 042d0c6ee8def360d768080aeff0872c9177ff51[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 2 15:34:54 2012 +0100

    build cleanups

[33mcommit 7293040ed8def6b2ebb112ecf2b573f1aa17677f[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Nov 9 18:41:52 2012 +0100

    coccinelle: fix distcheck
    
    distcheck is running run_check.sh from another directory and
    run_check.sh was not ready for this.

[33mcommit 5a6c8c0f011be83c2b4821478f30120cf954f970[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 9 19:51:43 2012 +0100

    minor misc changes: update htp ver, add htp ver to --build-info, clean up

[33mcommit 234922f3c6feb3e8e910b919ae6aa07bfaa8ee34[m
Author: Xavier Lange <xrlange@gmail.com>
Date:   Fri Nov 9 08:37:24 2012 -0800

    Keyword pkt_data

[33mcommit 493a68ebdc993b0c8feb24bd080075fb5619d23f[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Nov 7 12:39:05 2012 +0100

    backport oom fixes
    
    This is a backport of
    https://github.com/ironbee/libhtp/commit/9ea5e0e3e4f84f54914d10ee50f618aa575bafe1

[33mcommit b9a2f91a76534a5a4963c1a99a908e5378f11942[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Nov 9 16:18:35 2012 +0100

    napatech: treat malloc error

[33mcommit 8199832d71bb5e06e0e95814025a1e7dca4ac242[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Nov 9 15:57:52 2012 +0100

    coccinelle: improve run_check
    
    This patch adds two features to run_check.sh, it is now posssible
    to specify a list of files to check:
     ./run_check.sh ../../src/suricata.c ../../src/detect.c
    It is also possible to ask a review of the files modified by a commit.
    To so simply put the SHA1 as argument
     ./run_check.sh HEAD
     ./run_check 6af7d5f
    It is also possible to check all the files for an arbitrary range:
     ./run_check.sh origin/master..buildbot-fixes
    
    Last improvement of this patch is to get a real error message in case
    of problem as 2 is not redirected anymore to /dev/null.

[33mcommit 6e5caf6838e3e289ab6a8aa44855c502170ca5be[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Nov 9 00:09:06 2012 +0100

    coccinelle: add new correct case to error treatment

[33mcommit a1d1abfc0563b3f8efc39d936a62a9478952316b[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Oct 5 09:46:18 2012 +0200

    suricata: add daemon-directory config variable
    
    It is now possible to use the 'daemon-directory' configuration
    variable to specify the working directory of suricata in daemon
    mode. This will permit to specify the place for core and other
    related files.

[33mcommit 3061452c5e7fb3f0a6ba412ce43f0960bafaa512[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Oct 5 09:35:48 2012 +0200

    suricata: avoid concurrent run in daemon mode
    
    This patch creates a pid file per default and use it to avoid to be
    able to run two Suricata. Separate pid file have to be provided to
    be able to do it.

[33mcommit 24d10de8af0f27fa1013659d3f9af5fd45ed9259[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Oct 5 08:26:16 2012 +0200

    suricata: change dir to / in daemon mode.
    
    By changing directory to /, we will not block the directory where
    suricata has been started.

[33mcommit 37e3de84253671bce3027282be3bea379dd20633[m
Author: Matt Keeler <mk@npulsetech.com>
Date:   Thu Nov 8 11:48:17 2012 -0500

    Refactor Napatech 3GD to just Napatech as Suricata is only going to support 3GD.
    
    Signed-off-by: Matt Keeler <mk@npulsetech.com>

[33mcommit 5786a32d0fcade141a69c6cbb2e7a9b987c7a64e[m
Author: Matt Keeler <mk@npulsetech.com>
Date:   Thu Nov 8 11:28:11 2012 -0500

    Remove Napatech 2GD support
    
    Removed the Napatech 2GD support
    
    runmode-napatech-3gd.c had an include from runmode-napatech.h which was erroneous and has been removed as well.
    
    Signed-off-by: Matt Keeler <mk@npulsetech.com>

[33mcommit a49bce63b000b53ee08c1d11c36832098f7b4001[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Nov 8 23:47:27 2012 +0100

    configure: fix small typo.

[33mcommit 37b05b2396f07f898288aac03c5aad5a2592169c[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Nov 8 23:39:20 2012 +0100

    configure: improve march=native detection
    
    clang is supposed to support march=native but if the CPU is too
    recent for clang, this can cause an invalid detection of arch and
    result in a incapability of clang to compile any binary.
    This patch updates the test to try a compilation with march=native
    when clang is the used compiler.

[33mcommit 1f94239d20d3b769ef0b0f9627eb8eda5d389885[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Nov 8 22:09:22 2012 +0100

    configure: differentiate gcc and clang options
    
    The version checking was made similarly for clang and gcc. This
    patch modifies this to check on compiler name. This way we can
    avoid to set march=native which is not supported by clang on
    some system.
    At the same time, this fix the annoying warning about no-fp-tree
    being unsupported by clang.

[33mcommit 57d7783402eb52c839c4d8270c16cccc4aae0b53[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 8 14:03:35 2012 +0100

    Remove unnecessary debug message

[33mcommit 829238e49c60c149e12ec7f1865f378e57f4b7b6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 8 09:47:02 2012 +0100

    OpenBSD 5.2 build fixes, Unit test fix.

[33mcommit fc9e0df33b9871766855038e5d6415951e79d6e6[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Nov 6 14:35:07 2012 +0100

    suricata: add run-as.user and run-as.group yaml var
    
    This patch update the YAML to be able to specify the user or the
    group to run Suricata as:
     run-as:
       user: suri
       group: suri

[33mcommit 961eda21089037194667ebad984bb97b557ed8f8[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Nov 5 22:08:40 2012 +0100

    pcap: ref config according to threads count

[33mcommit e744760613f9cba4a19b7dd520341fe6091b3634[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Nov 5 20:26:32 2012 +0100

    yaml: document the threads setting in pcap section.

[33mcommit b645425331bf1d0aebd31ed8f3247eec31431da2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 7 10:34:20 2012 +0100

    Silence compiler warning if napatech3 support is disabled

[33mcommit 844e4dba11867fb9f2b91292a9b73b10a5ec415a[m
Author: Matt Keeler <mk@npulsetech.com>
Date:   Thu Oct 4 12:34:00 2012 -0400

    Napatech 3GD Support
    
    For use with Network Cards from Napatech utilizing the 3GD driver/api.
    
        - Implemented new run modes in runmode-napatech-3gd.*
        - Implemented capture/decode threads in source-napatech-3gd.*
        - Integrated the new run modes and source into the build infrastructure.
    
        New configure switches
        --enabled-napatech-3gd : Turns on the NT 3GD support
        --with-napatech-3gd-includes : The directory containing the NT 3GD header files
        --with-napatech-3gd-libraries : The directory containing the NT 3GD libraries to link against.
    
        New CLI switch
        --napatech-3gd : Uses the Napatech 3GD run mode
    
        Runmodes Supported:
        - auto
        - autofp
        - workers
    
        Notes:
        - tested with 1 Gbps sustained traffic (no drops)
    
    Signed-off-by: Matt Keeler <mk@npulsetech.com>

[33mcommit 02874a16f5068bdb62998d77582bcf4855251429[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Nov 3 10:09:22 2012 +0100

    gcc: construct use for warning was too recent.

[33mcommit b8164b8797baac85219dca8568db7b1042832981[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sat Nov 3 20:10:03 2012 +0530

    fix wrong record hdr len check in ssl parser

[33mcommit d1573a366db94ca34cd79c7b718760679f0c5194[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 2 17:46:34 2012 +0100

    Fix GetUsed functions for Host, Flow and Defrag.

[33mcommit 2fbb28ece62c8e9a29bdd4e1665a62ece315fd42[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Oct 31 15:30:38 2012 +0100

    build: error on implicit function declaration
    
    This patch modifies gcc options to error in case of implicit
    declaration. Bug #612 has shown this kind of bugs can be very
    costly.

[33mcommit 4542cd0eec2ef9da2bc5ea806656e7e1ca8d9b7e[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Nov 2 09:06:19 2012 +0100

    ipfw: suppress non loop receive function

[33mcommit e3a38810b6f098f8bd15d843f726b05c40168fcb[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Nov 2 09:05:56 2012 +0100

    nfq: suppress non loop receive function

[33mcommit 966c731e73a4b45c1cf5eb22f83364f9824664ff[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 2 09:18:15 2012 +0100

    flow: fix crash when flow engine under extreme stress, and unable to force free any existing flow

[33mcommit 76f0838a9fa6d868ee85fb5f9282da132e554c0d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 1 15:17:50 2012 +0100

    libhtp: harden code against malloc failures. Bug #587.

[33mcommit da7f1d22ccfe1353fb1dd6966bf209e8b1524754[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 1 15:26:47 2012 +0100

    http: don't assume http tx to have header alloc'd. Can happen in OOM conditions. Bug #587.

[33mcommit 18ecd4b287428534511a3955bfbe4aa3a1ea928b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 1 15:16:11 2012 +0100

    Don't use SCStrdup in SCLogMessage as we call it on OOM condition, leading to endless recursion. SCStrdup failure calling SCLogMessage...

[33mcommit 70bc9e2494f287312a2ecc137e6ae1b98ba2a510[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 31 15:51:41 2012 +0100

    filestore: fix logic flag in continued stateful detection

[33mcommit 89571135504f9a020982d4f6dc3a11b5dff81db5[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Oct 31 14:36:02 2012 +0100

    pf-ring: fix build

[33mcommit d386606b800882e840d4c5fca7488370c48eada5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 31 12:33:07 2012 +0100

    Remove pcre jit warning. Bug #579.

[33mcommit d3195b0f70e62c605a8beb9f0f762373eda7f2d3[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Oct 29 15:31:35 2012 +0100

    pf_ring: don't set cluster for DNA interface.

[33mcommit 7a7cd6999ec211cce2922a35bc77a915b3515c69[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Tue Oct 16 01:14:47 2012 +0530

    feature #558.
    
    Print FP info in rule analysis + other cleanup.

[33mcommit ac5bab88381e8f3190c64252616177b962a28671[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Oct 31 10:05:20 2012 +0100

    OpenBSD: no support for profiling
    
    Local thread storage are not available so profiling is not supported.

[33mcommit 7c85bee4aaa135caf3850ceeb4cc0aa36c852ca4[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Oct 31 09:47:18 2012 +0100

    OpenBSD: magic.mc path has changed in OpenBSD 5.1

[33mcommit a3f963f6304c5d4f0021f15d466d6d9332ade553[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 31 11:22:53 2012 +0100

    filestore: fix a case where a matching non-filestore sig could trigger the store of a partially matching filestore sig.

[33mcommit 3156407746014c125dbe417f7df818f9cc91be0a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 31 08:46:52 2012 +0100

    http: fix client and server body sometimes being inspected in wrong order

[33mcommit b12967534a44c165cdef577de1dbc4fea93bce70[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Oct 30 07:46:42 2012 +0100

    stream.inline: add 'auto' mode
    
    stream.inline YAML configuration variable now support the 'auto' value.
    In this case, inline mode is activated for IPS running mode (NFQ and
    IPFW) and is deactivated for IDS mode. This patch should fix bug #592.

[33mcommit b26ec60398fbe1523fba4d995a21c6afd39d8b08[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Oct 14 19:24:22 2012 +0200

    af-packet: fix possible infinite loop.
    
    If no packet arrives to a capture thread, it is possible that the
    AFPReadLoop() function goes into an infinite loop. This could cause
    suricata to hang at exit on non busy system.
    This patch adds a counter to detect when Suricata start looping in
    the ring to stop when it reaches this point.

[33mcommit e8a4a4c47ca4d736b97bab3f24bc3ec82b31c69f[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Oct 14 19:01:36 2012 +0200

    af-packet: dump counter every seconds.
    
    This patch updates to kernel counters handling to be almost sure to
    update at least once per second.

[33mcommit 3acdd4da1d8cbeead03055e3e64fcdb95dd5ff4c[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Sep 30 16:20:05 2012 +0200

    pf-ring: add counter for kernel drop and packets
    
    This patch adds a counter for kernel drop and packets by using the
    same strategy as the one used in af-packet.

[33mcommit 80d62b59ec1b517090faf0cd52531232300aef6b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 30 12:58:58 2012 +0100

    Fix drop (and other actions) not being applied to thresholded packets. Bug #613.

[33mcommit bca1b7c52aea34e07d3f7ddd2e7dfa41364c7091[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Mon Oct 15 02:26:13 2012 +0530

    change default mpm to ac. Also default sgh-mpm-context is full.

[33mcommit fd6df00684a503b69d303d6cffe2b6ba5ffbd531[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 25 13:39:13 2012 +0200

    Bug 585: use per detect thread libmagic ctx

[33mcommit ea6fcb355b25be3eff4d543830228186d76daf58[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 24 17:51:35 2012 +0200

    magic: add test showing payload resulting in libmagic invalid read as reported by valgrind.

[33mcommit fdab6f2ab16bc49ac425ed97a803fdc1b0bd925e[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sat Oct 20 20:01:52 2012 +0530

    fix flow deadlock issue in detection engine state introduced by tx api.
    
    Issue discovered by coverity.

[33mcommit 00b95c69c0130f5c48d30c54e3849ff5bc58f1d1[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Oct 23 10:31:10 2012 +0200

    suricata: list-keywords does not depend on unittest

[33mcommit 83ffd1f7432c5f83833e8a53b206db5e96556905[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 23 17:10:36 2012 +0200

    luajit: suppress compiler warning

[33mcommit 2ab62920aa2585888af049721e36dc018e24f1e6[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri Oct 19 15:10:14 2012 +0530

    fix segv in hcbd and hsbd buffering.
    
    Increase bufffers_list_len, only we open up a space for a new tx.

[33mcommit b359bc03a9e8c9094d328ff5198fc553d1297258[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sat Oct 20 11:32:22 2012 +0530

    unittest to reveal a bug/segv in our hsbd buffering code.

[33mcommit 4fab8ea6d6100e0913a56f3c5d741f322eda6a42[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 19 11:44:51 2012 +0200

    http: fix http header reassembly bug causing some headers to be left out of the inspected buffer

[33mcommit 5cd46433d331819d2c4676e0fd26182bf18ebf89[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 17 18:24:56 2012 +0200

    http: now that htp_state has a cfg reference, use it for body limits

[33mcommit 2763a61213f345ffe09c2a63a5a7a15573d0f275[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 17 18:15:37 2012 +0200

    http: allow configuration of request and response body inspection limits. Issue #560.

[33mcommit b99f9fe890d45c0a8da0baf121aba711f110440f[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Mon Oct 15 01:44:17 2012 +0530

    New app inspection engine introduced.  Moved existing inspecting engines to use it.

[33mcommit 7b4eac3e8d87388407e17a89f2c78a6630524ece[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sun Oct 14 19:46:46 2012 +0530

    Change all inspect callbacks to accept TV and a tx_id param.

[33mcommit 10a6e6a3eb9fd4b17130e385062aa6bf3eb247b9[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sun Oct 14 16:19:53 2012 +0530

    Engine cleanup.  Remove all old engine inspection and mpm functions.

[33mcommit b0e20a486c52b949f6c92cdcd6f3279670a84fa6[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sat Oct 13 23:43:20 2012 +0530

    update client/server/http_header to use a different form of
    buffering/buffer_retrieval.
    
    Now it happens per tx, based on tx id.  Also notice a perf improvement with
    this.

[33mcommit e1321f9ae6dff2222ea7d6630749d9a98354d4bc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 17 09:25:52 2012 +0200

    stream: change how retransmissions are handled and detected.

[33mcommit b621ed84234910e12a28c767e701ac473655a10e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 16 16:21:00 2012 +0200

    stream: fix retransmission on closewait being considered out of window

[33mcommit a25629b25083c04b67d78afc47909067fd5d8fc3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 16 15:53:48 2012 +0200

    stream: detect retransmissions on timewait state

[33mcommit 6326390120c687ccef0423eef9e4e12d58559e53[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 16 15:39:34 2012 +0200

    stream: accept ack with next_seq + 1 on last_ack state

[33mcommit 3f6ecff260752946a07cacfc2da5c82f024a9d22[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 16 15:37:56 2012 +0200

    stream: disable retransmission packet before last ack sig as it is fairly common in regular traffic

[33mcommit bc37cb6b8ef4a695b37674200a2b3b8fccb0145b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 16 15:27:30 2012 +0200

    stream: detect retransmissions on closewait and finwait2 states

[33mcommit 305ed3f23bf0c0e0268e97a31c667ae2e9994475[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 16 14:52:29 2012 +0200

    stream: don't flag zero window probe packets as out of window. Bug #604.

[33mcommit 13e60c00405425b51e542dedbf46d1845809d474[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 16 14:09:58 2012 +0200

    stream: detect keep-alive packets so we don't consider those invalid

[33mcommit 9094eb47839e75ea8208cdb0d732c2d50937463c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 16 13:27:58 2012 +0200

    stream: ignore ack value if ack flag is not set. Add stream.pkt_broken_ack event for when ack value is not 0 and ack flag not set.

[33mcommit a5d9442c2d0aa1f9ff383623b0121d14f64eff4d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 16 11:55:36 2012 +0200

    stream: handle retransmission of lost data packet on TIME_WAIT state

[33mcommit 037d67cc667aee07f20c0122c856903a25d019ec[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 16 11:14:59 2012 +0200

    stream: go from FIN_WAIT_1 to CLOSING on simultaneous close.

[33mcommit 6544475670a194b715a92042793cef24927c8406[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 16 10:50:39 2012 +0200

    stream: don't reject RST as response to SYN because of ACK

[33mcommit 6f76ac176d70d85fa2a5719dacdc8fef0ef074dc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 11 21:02:56 2012 +0200

    stream: add option to match on overlapping data
    
    Set event on overlapping data segments that have different data.
    
    Add stream-events option stream-event:reassembly_overlap_different_data and
    add an example rule.
    
    Issue 603.

[33mcommit 0b68da0b31815aa9509592c6628c7a961d4609a4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 12 16:40:43 2012 +0200

    libhtp: don't use internal iterator
    
    It violates thread safety. #601.
    
    Suricata assures thread safety on the flow level for HTTP tracking. Part of the flow is (in case of HTTP) libhtp's htp_connp_t state. At startup the libhtp glue layer, app-layer-htp initializes as many htp_cfg_t instances as there are libhtp server configurations in the yaml. At HTTP session start, we look up the proper htp_cfg_t based on the server ip and pass it to htp_connp_create.  A ptr to the relevant htp_cfg_t is part of the htp_connp_t. The htp_cfg_t contains "hooks". The are registered based on yaml config at init time.
    
    The hooks have lists of type list_t. The list is run with a built in iterator. The iterator is reset at the start of each "hook_run_all". Since multiple flows share the same htp_cfg_t flow A can reset the iterator while flow B is using it. The flow lock has no effect as flows share the htp_cfg_t.
    
    This has been observed in real traffic. hook_response_body_data was run on the same data multiple times, leading to corrupt extracted files.

[33mcommit d68fd54a763a2633bf920b70688dc2a019833076[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 9 17:22:42 2012 +0200

    Fix/suppress a couple of harmless compiler warnings.

[33mcommit 870a98b528161d8d5aaf77556fb9b8b5560867cb[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Wed Oct 10 14:13:36 2012 +0530

    Remove dead comment about flow reference api duplicate

[33mcommit f08497d1e4bdbccb5d5309ac08124974b0359c35[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri Oct 5 17:52:37 2012 +0530

    Move Flow Reference/Dereferene api from flow-util.h to flow.h.
    
    Remove duplicate FlowDeReference from decode.h

[33mcommit 67981d1c5cd10f6a696a0830de9c5eda881941b0[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri Oct 5 15:07:27 2012 +0530

    Update suricata to use FlowReference/FlowDeReference for the ones left out
    from last update.

[33mcommit bb14cf899b60201af8e8e9fe78ce0aad6f62242b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 9 15:16:12 2012 +0200

    yaml: default to cluster_flow type for AF_PACKET and PF_RING

[33mcommit 72782e5a6a90794833385de4fec2432ac59bb3dd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 8 12:38:47 2012 +0200

    profiling: fix rule profiling output sometimes missing sid,rev,gid. Bug #576.

[33mcommit 10a11b750dc6c4583c9c7f04f24d9303eb7b1378[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 6 20:00:22 2012 +0200

    Add dsize check to prefilter stage
    
    Many sigs with dsize have a weak fast_pattern. Those patterns
    are likely to match. By filtering on dsize early, we safe a lot
    of cycles later.

[33mcommit 45cbef0735b4fc70d57af7df0d99114c2f28ccdf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 18 19:07:51 2011 +0200

    For signatures with the dsize option set depth on any content match in that sig.

[33mcommit d774d6e226b125d631088e241863e5edb1e9c087[m[33m ([m[1;33mtag: suricata-1.4beta2[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 4 15:01:36 2012 +0200

    Update changelog to reflect 1.4beta2 changes

[33mcommit 63c64ed2cc539194d5c8b15670d7dfd5167c7355[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 4 14:59:58 2012 +0200

    Clean up and update bundled docs

[33mcommit 4464657ca29fabb194a0b7430d22f30928453780[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 4 14:52:22 2012 +0200

    remove reference to non-existing file from Makefile.am

[33mcommit a01130d2eda6e018b38805e51a6aa7893f6488ae[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 4 13:20:27 2012 +0200

    packet src: move pkt_src field up in the structure to fix in an existing hole (found with pahole -C Packet_ src/.libs/suricata).

[33mcommit b33986c8878404c48f2411db49c62cf61d8c9c07[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sat Sep 29 10:29:56 2012 +0530

    Add a packet src for every packet generated inside suricata.

[33mcommit 58bf4ea4a4241710dd8db1fcf0eef678834f9f66[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Oct 4 11:53:29 2012 +0200

    nfq: fix detection of type nfq_get_payload function.

[33mcommit 19756488ab157fc40971fe4f264bf68eed684235[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Oct 4 11:06:33 2012 +0200

    nfq: close the queue when leaving acquisition.
    
    This patch adds a call to close the queue when the acquisition
    loop is ending. This way the incoming packets will be accepted
    during all the shutdown phase (if the queue-bypass option of
    NFQUEUE is used). At the same time the currently processed packets
    will be dropped but the time scale are different: suricata will
    drop 20 ms of packets and the shutdown can take 0.5 seconds.
    
    Patch based on an idea of Victor Julien.

[33mcommit 75cddabd8a802c3578d00bf91bc6dd6160c56110[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 4 11:48:42 2012 +0200

    fast_pattern: don't consider http_method, http_stat_code and http_stat_msg when automatically giving preference to a HTTP pattern over a stream pattern.

[33mcommit 928ade1d0457afa00bfda0ea27c19ae48638f132[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Oct 3 10:34:09 2012 +0200

    pf-ring: suppress unused variable.

[33mcommit c3b9a5e97f58695abbd95387edb2875419744d8f[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Sep 30 16:19:53 2012 +0200

    pf-ring: add missing header.

[33mcommit 7731cef782bbf53dc1f23b65f852ab50fb254ffa[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Sep 30 16:18:10 2012 +0200

    pf-ring: protect definition of (un)likely
    
    This patch makes (un)likely declared if and only if they are not
    declared before.

[33mcommit fd977601b63b7cbfdc92b9499fb05d47015bd9f4[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Thu Oct 4 12:59:58 2012 +0530

    fix for bug #574.
    
    More of a temporary solution to prevent any possible FPs.  Disable content
    inspection bypass for mpm patterns.

[33mcommit 51c9955c7943ea84076de12bfec37d1d26e90143[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Tue Oct 2 21:13:35 2012 +0530

    fix for bug #577.
    
    If a pattern has matched on mpm, don't re-inspect it later, subject to certain
    conditions met by the pattern - namely, not negated, right chop, no replacet
    attached to it.

[33mcommit 6e0f8a3cb50a962cdeaf541005d2b5b16f57183b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 3 15:43:43 2012 +0200

    htp: update version numbers of bundled htp

[33mcommit aa4ae98d37c68017609aa425b2892aba15a92c20[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 3 11:37:04 2012 +0200

    http: fix multipart parsing leading to missing chunks of files in file extraction.

[33mcommit 028c6c17821247ae398f9c7c7ee1ae2461b3b370[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Wed Sep 26 22:18:02 2012 +0530

    Make available custom features of libhtp.
    
    The power of libhtp customisation now available to users.
    
    Options available -
    
    path-backslash-separators: yes
    path-compress-separators: yes
    path-control-char-handling: none
    path-convert-utf8: yes
    path-decode-separators: yes
    path-decode-u-encoding: yes
    path-invalid-encoding-handling: preserve_percent
    path-invalid-utf8-handling: none
    path-nul-encoded-handling: none
    path-nul-raw-handling: none
    set-path-replacement-char: ?
    set-path-unicode-mapping: bestfit
    
    You can use this for your libhtp customisation.  Options explained in our
    wiki.
    
    https://redmine.openinfosecfoundation.org/projects/suricata/wiki/Advanced_libhtp_customization

[33mcommit 340542c44e02476ee9158837c81ef4cb36da0f35[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Wed Sep 26 21:10:15 2012 +0530

    refactor htpconfigure()

[33mcommit 33b0b07107bd286b020490f7b1306edcffa26ca1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 2 13:56:12 2012 +0200

    bug #572: make sure we use profiling fallback for all architectures except x86_64 and i386.

[33mcommit 50da0e80d5e7d800b7d6a8817b1e2fac3d03a268[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 2 10:27:12 2012 +0200

    Fix flow keyword compilation failure.

[33mcommit 3d74fa964a6eb6f4ce04f3c03de6bd63432d4dfb[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Thu Sep 27 18:25:37 2012 +0530

    Update all flow referencing to use the new FlowReference and FlowDeReference
    macros.

[33mcommit 6c68f86b8c8fc70d5f5d0438e07821edc3e9d987[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Thu Sep 27 14:42:49 2012 +0530

    fix for bug #557.
    
    In FFRv2, dereference flow from a packet using the new reference/dereference
    util macros.  This allows the decr use_cnt for flow and reseting the flow
    pointer to NULL for the pseudo pkt to happen simultaneously, in case there we
    fail to retrieve a pseudo_packet and have to return the already obtained
    pseudo packets, back to the packetpool.

[33mcommit 88e89d630232d0fa3d22f76179f237318fe9a217[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Thu Sep 27 14:40:07 2012 +0530

    Introduce utility flow macros to help referencing/dereferencing flows.

[33mcommit 4d501778e99d8b6e46a6602349870e59aafe1719[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Wed Sep 26 22:47:53 2012 +0530

    fix for bug #557.
    
    Reset hhd buffers list len if we exit before allocating the buffer.

[33mcommit 855726f37281881331563d3764be43e40094eb36[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Mon Oct 1 21:55:56 2012 +0530

    fix for bug #575.
    
    If sig has no_stream set, don't mask it as requiring flow.  Should get rid of
    FNs any.

[33mcommit 1598425a40a3717e39ee294e3b95b9b31de8e556[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 28 19:49:34 2012 +0200

    detect: properly store a stateful match if it happens at the start of inspection

[33mcommit c3f4f8d46adfa213aae7a8d8726d163566469ca5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 27 12:53:54 2012 +0200

    Dead code cleanup. Coverity 728047, 728048, 728049.

[33mcommit ee5d6fdb6f5f4c16e551932ff699caf0a43bf68f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 26 18:56:24 2012 +0200

    profiling: fix some profiling info missing from output

[33mcommit ffbbff9d6c13eb5fb4eb4171ac78f7ccc6e266a5[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Sep 26 16:03:33 2012 +0200

    tm-thread: detect thread death
    
    When a thread is dead at init the THV_INIT_DONE flag is not set
    and the spawn function can freeze (see bug #553 for an example).
    In this case THV_RUNNING_DONE is set and we can also check on this
    state for leaving the function. This should fix #bug553

[33mcommit af7f4b347d04bfff2c5ca2075e288f2009a65c78[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 26 11:42:53 2012 +0200

    threshold: improve comments of shipped threshold.config, add links to wiki.

[33mcommit 4e3b206f7bac82447440b6ee45fe3977150b80c6[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Tue Sep 25 20:23:29 2012 +0530

    fix http server/client body handling.  Update body status based on tx state.

[33mcommit 82fc61770bd3cdeb5cf033bfa8f7dc2580ebffbc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 26 08:58:05 2012 +0200

    threshold: allow threshold.config to override rule
    
    Allow threshold.conf to override rule thresholds in the following
    cases:
    
    - threshold.config rule uses threshold or event_filter AND
    - threshold.config rule applies to a single signature (so no
      gid 0 or sid 0)
    
    Confirmed to work with both threshold and detection_filter rule
    keywords.
    
    Part of bug #425.

[33mcommit a0c43a8a1c872fa1d85360f750d0235705a6911b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 26 07:17:54 2012 +0200

    Minor parsing cleanups in detect-engine options.

[33mcommit b6f573d9cb1366c3e505347780569101539f77ce[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 25 14:46:51 2012 +0200

    yaml: add addr and port vars commonly used by ET/ETpro

[33mcommit 28ca36acf770ef797df306687af8d2c38bedecc1[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Sep 21 12:47:44 2012 +0200

    coccinelle: add test on malloc error check.
    
    This patch adds a coccinelle code check on SCMalloc, SCCalloc and
    SCStrdup and other memory handling functions. It verifies that the
    error checking is made.

[33mcommit 9f135728433d91c9a02381caaf2f2d4404843171[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Sep 24 13:24:29 2012 +0200

    Fix indentation of win32 files.

[33mcommit 710d237724ae4ac47ec7c05c92cf9cf22f690123[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Sep 24 13:02:30 2012 +0200

    Add missing sctrdup test

[33mcommit 3d2998a9cf1d5ee50719402ee7627442c0fa1745[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Sep 23 18:05:32 2012 +0200

    coccinelle: don't test UNITTEST code

[33mcommit e176be6fcc02e04f8d6acf9afd0933353085e18e[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Sep 23 15:56:00 2012 +0200

    Use unlikely for error treatment.
    
    When handling error case on SCMallog, SCCalloc or SCStrdup
    we are in an unlikely case. This patch adds the unlikely()
    expression to indicate this to gcc.
    
    This patch has been obtained via coccinelle. The transformation
    is the following:
    
    @istested@
    identifier x;
    statement S1;
    identifier func =~ "(SCMalloc|SCStrdup|SCCalloc)";
    @@
    
    x = func(...)
    ... when != x
    - if (x == NULL) S1
    + if (unlikely(x == NULL)) S1

[33mcommit d2920048801b68d6075ff9672710c4a1f59e4707[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Sep 21 23:26:53 2012 +0200

    Add some missing checks of SCStrdup return.

[33mcommit 655577cbbc2000e0dc6dbe3d6248bedc7a797d07[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Sep 21 15:24:17 2012 +0200

    Add some missing checks of SCMalloc return.

[33mcommit d8667448c1be1bad675d74d201320729df45fc46[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 24 16:53:59 2012 +0200

    threshold: allow suppression for sigs with threshold set. Part of #425.

[33mcommit f9a6c890d4457b66517ba4763496ac62de32d442[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Sat Sep 22 00:14:01 2012 +0530

    fix for #529
    
    Respect pcre's anchor during content inspection.

[33mcommit 19e8f82f25e86acba85244ace3039110489f8c4b[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Mon Sep 24 16:02:07 2012 +0530

    Unittest to display #bug 529.  pcre anchor not respected

[33mcommit b0b405286021dba110448b42db543789b1432a56[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri Sep 21 23:18:11 2012 +0530

    detect-pcre.c cleanup.  Delete old pcre functions that we no longer use.

[33mcommit 680e941a8f9cd62245eabecf7968601a51c5bffb[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Sep 19 16:40:14 2012 +0200

    af-packet: clean APFPacketVar before release.
    
    This patch resets the AFPPacketVar linked to a Packet in the release
    function to avoid any side effect when the packet is reused. To do
    so a new AFPV_CLEANUP macro has been introduced.

[33mcommit 775f379e2b41869d9d225ce82aa9fed4c3d0b2f8[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Sep 19 15:40:54 2012 +0200

    decode: clean release function

[33mcommit 21f92c0a89e155e279f6dedbd3cefc652a546746[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Fri Sep 21 20:45:17 2012 +0530

    Give priority to non stream content over stream content when selecting fast
    pattern.

[33mcommit a08a0e9161215e43a1466feb387bd5bc2ea36234[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 21 17:43:11 2012 +0200

    Minor output cleanup

[33mcommit abc3f903f993f402073949d03e78f06b0f1b171b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 21 17:39:32 2012 +0200

    Fix defrag compilation warning.

[33mcommit 525367113a04d0fd0b33495a600123e0f9d59553[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 21 16:59:27 2012 +0200

    Fix compilation if luajit is disabled.

[33mcommit d1abd552e9ebb9cbe983b034d854c64cec36b5bc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 21 16:36:48 2012 +0200

    luajit: correct offset passed to script for lua's array idx starting at 1. Add http.response_headers and http.response_headers.raw buffers.

[33mcommit 20d2db085e098964a8b2493a4cd19a353fe9bfc3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 21 15:10:28 2012 +0200

    reintroduce pool free func for cases where block alloc is not used.

[33mcommit 98484ffdccb3b9b0564e5dca0ceb91a5f1d9e1c8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 21 14:18:53 2012 +0200

    luajit: prealloc lua states to increases chances of alloc success. Luajit requires them to be in memory <2GB.

[33mcommit f962e3de296344e591075fae9acd624dac5dabef[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 21 14:17:42 2012 +0200

    pool: only alloc one large block if it will actually be used.

[33mcommit 6f7e527e92d3c259b51afa278ee7fc7ced5e8589[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 20 22:09:30 2012 +0200

    luajit: fix crash at shutdown / rule reload if lua script didn't properly init.

[33mcommit 8192f6ce8c8b13becf24ae7f59a8bba2a433cd7e[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Sep 20 09:14:58 2012 +0200

    Add missing include in flow-manager
    
    DefragTimeoutHash was not declared before being used.

[33mcommit 44b7d5551a73cfb804ded81a16da245f173696ca[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 20 15:19:51 2012 +0200

    luajit: fix crash if luaL_newstate fails

[33mcommit b29971bc92b38eb21ceb7da34ad55808eb6b237f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 20 09:48:38 2012 +0200

    luajit: buffer selection fixes

[33mcommit fcc21ae4ccb109f0997a98ea3c5c90ba5bbfd892[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 20 14:46:22 2012 +0200

    http: fix multipart parsing bug

[33mcommit 8f337a39044e18d1224ec1ef7d994f5566c7e44c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 20 14:42:41 2012 +0200

    stream: never resend reassembled data to app layer.

[33mcommit 9a4b612126a0c341d7d7d07ffdfe7de3cf8de321[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 19 14:09:41 2012 +0200

    app layer events: prefilter sigs that need an event

[33mcommit 575c87aebad15e01e145834bc5ba0cf22abd5105[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 19 12:58:56 2012 +0200

    engine events: prefilter sigs that need a event

[33mcommit 5f12b23469fc7ab4c6c30cfc43dbce92488dfb12[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Sep 18 17:12:31 2012 +0200

    af-packet: little code cleaning
    
    This patch cleans the code were two almost identical treatment on
    the packet we're made. It may be linked by a merge error I've done
    or to a simple mistake on my side.

[33mcommit 0581a23f3cffe8e6685e82a80df032a19f0305e7[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Sep 19 09:55:50 2012 +0200

    af-packet: fix IPS mode
    
    There was an inversion in code resulting as all sockets being seen
    as non IPS mode when doing the peering. This resulted in a crash at
    first packet because it has no peer.

[33mcommit 566674ae4ab12529c67220d3c23d5fa4f787e657[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Sep 18 15:01:12 2012 +0200

    Fix logic operator.
    
    Previous patches on the same subject did not fixed this error as it
    was undetected because the code was not compiled on my setup.

[33mcommit 7a044a99ee14101fbca0bc44ffa96b74ff88883d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 18 18:13:09 2012 +0200

    Defrag engine
    
    Big rewrite of defrag engine to make it more scalable and fix some
    locking logic flaws.
    
    Now uses a hash of trackers similar to Flow and Host hashes.

[33mcommit c91c3596922365b25417304e28b243b91a065784[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 17 11:21:26 2012 +0200

    profiling: fix build on older systems

[33mcommit 794bfc590c7342489dc337ee6c5e6ccab72be1c0[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Sep 17 11:11:47 2012 +0200

    autotools: fix doc install on old systems.

[33mcommit 7babb35aeb76704e98e584cf06a8620360ee95f0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 17 10:38:39 2012 +0200

    profiling: remove obsolete unit test

[33mcommit cdbc9be1c3b67c6ca98e6ede8a2a07efa3c669b7[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Sep 14 18:06:37 2012 +0200

    pf_ring: set cluster_id even if only one thread is used.

[33mcommit 1f923075171f29d005b203c440841b77590c0895[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 17 10:34:34 2012 +0200

    profiling: minor cleanup

[33mcommit 3da3e3264c05e265843192e8ac389499f0901bc9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 17 09:56:52 2012 +0200

    profiling: make sure counters are reset after a reload.

[33mcommit 2343ff8950ee0b6d585ad12cf646a3b917c1db73[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Sep 16 12:57:53 2012 +0200

    profiling: fix memory error in case of rule reload.

[33mcommit ec7e79c74861a4d99211c8fc46dba9b82be1fefc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Sep 16 12:08:35 2012 +0200

    Rule profiling update
    
    - Remove usage of counters api.
    - Store stats in detect engine thread ctx to remove locking
    - Support rule reloads

[33mcommit ba6f564296e85f991730d63427618409a2e14572[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 14 07:59:57 2012 +0200

    luajit: add http.uri.raw, cookie, ua, headers, headers.raw buffers.

[33mcommit 9c28cd40fd4b28054c249ee57d812bb4112931ff[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Sep 13 14:52:42 2012 +0200

    Fix build if luajit is not available.

[33mcommit 937ba71491f147d46517ba7701d85ae43558287e[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Sep 13 11:57:07 2012 +0200

    defrag: don't return after a cleaning.
    
    This patch changes the policy of the timeout function by cleaning
    every timeouted trackers.
    Previous code was only freeing the first tracker and this was resulting
    in calling the timeout function continuously. One of my previous patch
    has modified the function to avoid to run it more than twice a second.
    But as it was not taken into account the fact only the first tracker was
    freed, the result was that a lot of tracker could not be allocated.

[33mcommit b6834cb6b233343c41ddd9e86a2a48816c3b5bdc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 12 17:52:57 2012 +0200

    luajit: support http.request_body (http_client_body) and http.response_body (file_data/http_server_body).

[33mcommit 42646579a82ab34242ef4dc4a66c6fcaa06595cf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Sep 9 15:46:11 2012 +0200

    luajit: clean up initialization

[33mcommit c55b618bd4faf54bc4778c953947d8f4dd2777e5[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Sep 10 11:18:07 2012 +0200

    Install documentation with 'make install'.

[33mcommit 619014a280009c57853e746ef5287da301ab8a86[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Sep 10 09:06:41 2012 +0200

    pool: rename Free function to Cleanup
    
    This patch renames Free functions to Cleanup as the free is made
    by the pool system.

[33mcommit f241312a36fe986f2352b4e2e6856c71ed3f2e81[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Sep 9 22:48:46 2012 +0200

    defrag: don't use message for repetitive error
    
    When nothing can be fetch from the pool, this can repeat frequently.
    Thus displaying a message in the log will not help. This patch
    uses a counter instead of a log message. As this is a sort of memcap
    this is conformed to what is done for other issues of the same type.

[33mcommit 6303b5d987ef9cd78f697523b5751296efa66646[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Sep 7 13:54:35 2012 +0200

    SC_LOG_ERROR is not an error.

[33mcommit d51dd6a30e23e24d08d79bb203421cfcccaca8b1[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Sep 7 13:53:44 2012 +0200

    Fix warning about unused return of SC_ATOMIC func.

[33mcommit c4f9d0e0e1de3080c062e6f5c43de12d2155bfca[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Sep 7 13:52:21 2012 +0200

    Fix invalid usage of operator.

[33mcommit 7af9fd7735c2004866272ffe3a0d91ca5c96e080[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Sep 7 13:31:03 2012 +0200

    freebsd: fix warning about redeclaration.

[33mcommit 4d2305c0a87c7c1c825f6a37ac459deb030fa89f[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Sep 7 13:25:35 2012 +0200

    freebsd: fix warning

[33mcommit 6d5544665547f474125921ee2e266bcd4ce705fb[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Sep 7 13:18:35 2012 +0200

    ipfw: avoid critical error for broadcast
    
    In some setup, suricata may receive broadcast packets and the call
    to sendto may fail if the wrong interface is choosen by kernel.
    This patch change the error treatment to avoid to leave when
    this problem occurs.

[33mcommit 41cb365a399edd8b6f1e456a2d7e9be616792103[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Sep 7 11:20:18 2012 +0200

    ipfw: add missing include

[33mcommit ec2445702c34ba67657e088f131d17a9540211f6[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Sep 7 10:52:37 2012 +0200

    autotools: fix default path for magic file.

[33mcommit e168824d806736b38301eece5967c01ab16d421d[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Sep 6 22:39:02 2012 +0200

    freebsd: fix function usage.
    
    The unlock function was not correctly used in error treatment.

[33mcommit ea020e2be6d959769681b14525232be4c9f4923a[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Fri Sep 7 10:22:38 2012 -0600

    Do not trim the FCS, pcaps converted to ERF will have have an FCS.

[33mcommit 4a1a008009563f12e995eb1f01dd0bdd4f3c62de[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Sep 8 11:48:59 2012 +0200

    af-packet: fix looping in ring buffer.
    
    A crash can occurs in the following conditions:
     * Suricata running in other mode than "workers"
     * Kernel fill in the ring buffer
    Under this conditions, it is possible that the capture thread reads
    a packet that has not yet released by one of the treatment threads
    because there is no modification done on the ring buffer entry when
    a packet is read. Doing, this it access to memory which can be
    released to the kernel and modified. This results in a kind of memory
    corruption.
    
    This bug has only been seen recently and this has to be linked with the
    read speed improvement recently made in AF_PACKET support.
    
    The patch fixes the issue by modifying the tp_status bitmask in the
    ring buffer. It sets the TP_STATUS_USER_BUSY flag when it is confirmed
    that the packet will be treated. And at the start of the read, it exits
    from the reading loop (returning to poll) when it reaches a packet with
    the flag set. As tp_status is set to 0 during packet release the flag
    is destroyed when releasing the packet.
    
    Regarding concurrency, we've got a sequence of modification. The
    capture thread read the packet and set the flag, then it passes the
    queue and the packet get processed by other threads. The change on
    tp_status are thus made at different time.
    
    Regarding the value of the flag, the patch uses the last bit of
    tp_status to avoid be impacting by a change in kernel. I will
    propose a patch to have TP_STATUS_USER_BUSY included in kernel
    as this is a generic issue for multithreading application using
    AF_PACKET mechanism.

[33mcommit 0d55950840bc3a2f175b151f58b6756e38a8b275[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 8 11:10:21 2012 +0200

    luajit: add http.uri and http.request_line buffers.

[33mcommit 597b6db8f2f67a852289e8815944fead7e265635[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 7 19:36:18 2012 +0200

    luajit: fix filtering payload or pkt when not available yet

[33mcommit 69186cda12f7412ebb56fff11f4ff66d223a3e9a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 7 15:04:34 2012 +0200

    luajit: force scripts to have 'init' function that returns a table of 'needs' such as packet or payload.

[33mcommit fca70730a9ad025fa7adad0d7d05abe5e2ab74c2[m[33m ([m[1;33mtag: suricata-1.4beta1[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 6 15:41:43 2012 +0200

    Update changelog for 1.4beta1

[33mcommit cd8d21572402355ec07656acac0f52133e96e076[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Sep 6 13:57:20 2012 +0200

    pool: improve error handling
    
    Error handling during Pool creation was not perfect as a PoolBucket
    could leak.

[33mcommit 829d975d638eca22495bfee7d57b69d83f05c054[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 6 13:48:55 2012 +0200

    Make sure defrag pool sizes are not initialized to 0, see #540.

[33mcommit 01d3c14449f995164cfc94278c89dc8adbe9873c[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Sep 6 12:03:54 2012 +0200

    tls: fix error handling
    
    Handling of error case was correct as pointed out by Coverity
    717439.

[33mcommit 41c72a537a0365eceb72e6edb2276c852fdec9b9[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Sep 6 11:44:25 2012 +0200

    tls: avoid double close.
    
    This should fix issue 717441 reported by Coverity.

[33mcommit 4e6a4c65f691e2e3c72670d89a1634a903c81d26[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Sep 6 11:31:42 2012 +0200

    defrag: be sure to output NULL tracker
    
    Coverity 720337 pointed out a use after free. We can't be dependent
    to HashListTableAdd outputting a NULL tracker.

[33mcommit a7afa845a646e7b78bac90ccd053cf886e1c0d90[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Sep 6 09:59:14 2012 +0200

    Fix coverity warnings 718636 and 718635
    
    The result of the swap was not checked.

[33mcommit d3824bd1abacde2396231c734ef46b5118f2cb37[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Sep 6 09:44:31 2012 +0200

    defrag: fix potential use after free.
    
    Coverity pointed out that PoolReturn is almost like free and detected
    a use after free when accessing to tracker->af (issue 720339).
    This patch fixes this by storing the value in a local variable.

[33mcommit 90052609ee39f7a8eae9b125d2dee3ac3ccdce33[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Sep 6 08:41:17 2012 +0200

    defrag: avoid to run cleaning repetitively

[33mcommit b2691cbe889f138b0de0426740ae48dec77cdb8b[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Sep 5 15:32:11 2012 +0200

    af-packet: handle possible exit of capture loop.
    
    If a capture loop does exit, the thread needs to start without
    synchronization with the other threads. This patch fixes this
    by resetting the turn count on the peerslist structure and
    adding a test on this condition in the wait function.

[33mcommit 4d8f70c61348a45cea86c5d737204929130bc886[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Sep 5 00:15:16 2012 +0200

    af-packet: fix kernel offset issue
    
    It seems that, in some case, there is a read waiting but the
    offset in the ring buffer is not correct and Suricata need to
    walk the ring to find the correct place and make the read.

[33mcommit ee6ba09948ddc9128604c0834dc3b400fe6b92e2[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Sep 4 18:43:01 2012 +0200

    af-packet: fix emergency mode
    
    This patch fixes emergency mode by setting the variable even if we
    have a non kernel checksum check. It also does a call to
    AFPDUmpCounters() as it seems to improve thing to do it ASAP.

[33mcommit 6040016347fd64b4e91903d78f57b2f9673c6be7[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Sep 4 12:14:58 2012 +0200

    af-packet: implement late open
    
    This patch implements "late open". On high performance system, it
    is needed to create the AF_PACKET just before reading to avoid
    overflow. Socket creation has to be done with respect to the order
    of thread creation to respect affinity settings.
    This patch adds a counter to AFPPeer to be ale to synchronize the
    initial socket creation.

[33mcommit 3bea3b39df4c1fe1306662f506b659e6e750539d[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Sep 4 11:20:05 2012 +0200

    af-packet: improve logged messages.

[33mcommit 13f13b6d7ebe6999e6c8e43c72a3055375cd6556[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Sep 3 16:43:45 2012 +0200

    af-packet: rework socket transition phase.
    
    Suricata was not able to start cleanly in AF_PACKET with default
    suricata.yaml file if there was no eth1 on the system. This patch
    fixes this issue and rework the socket transition phase to fix
    some serious issues (file descriptor leak) found when fixing this
    problem.
    Every 20 seconds it displays a message to the user to warn him about
    the interface not being accessible:
      [ERRCODE: SC_ERR_AFP_CREATE(196)] - Can not open iface 'eth1'

[33mcommit 0f2b34068cd04422ef968ab0d149cb0f704da875[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Sep 3 18:38:45 2012 +0200

    af-packet: ring mode is not optionnal in AFPReadFromRing

[33mcommit 355e981775d0d1d27d395a6491a944e6b60a2b2b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 6 10:11:57 2012 +0200

    Fix 'no effect' check in timestamp print logic. Coverity 717437.

[33mcommit 886a4f2850f18ba1cc68ae1b98722b92538009d9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 6 10:09:14 2012 +0200

    Check response headers in custom http logging before using them. Coverity 717436.

[33mcommit 5ffe7e21c3a2ed553c60e628a42439ef1fbb66cd[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Sep 5 14:09:57 2012 +0200

    decode: use pointer inside packet area as param
    
    DecodeTeredo, DecodeIPv6InIPv6 and DecodeIPv4inIPv6 were calling
    DecodeTunnel with packet being a pseudo packet and data being
    data from initial packet:
            DecodeTunnel(tv, dtv, tp, start, blen,
                         pq, IPPROTO_IPV6);
    In decoding functions, arithmetic was done on pkt to set some values?
    It was resulting in field of packet  pointing outside of the scope of
    packet data.
    This patch switch to what has been done in DecodeGre(), I mean:
            DecodeTunnel(tv, dtv, tp, GET_PKT_DATA(tp),
                         GET_PKT_LEN(tp), pq, IPPROTO_IP);
    Data buffer is then relative to the packet and the arithmetic is
    correct.

[33mcommit 073b251df7e545f032724b9e8ef70ab216f4c5e5[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Sep 5 08:56:33 2012 +0200

    affinity: drop capability after setting thread prio
    
    Setting thread priority can require privilege if a low nice value
    has to be set up.

[33mcommit d1569337a7766a796f232a5e3a623c923c94b8b4[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Sep 5 08:53:41 2012 +0200

    affinity: add call to setup function in threads
    
    Threads created through TMThreadSpawn need to call the affinity
    function by themselves.

[33mcommit 0eeccb4b176b3a0a4c2717f14fd0bd668520e6fa[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Sep 4 17:48:14 2012 +0200

    affinity: tag management threads as such
    
    The management threads were not tagged for CPU affinity and thus
    the setting was not applied.

[33mcommit efc3faaa0a28a969c2838f73300dd8ac04671947[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Sep 5 09:21:28 2012 +0200

    affinity: add log message

[33mcommit eb5dbc305fb21059427ac0331783a99ed0a88ba4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 6 07:43:00 2012 +0200

    Add threshold.config example to EXTRA_DIST as well.

[33mcommit 95cd8bf67e8794c6df1d90debf1deccfe9c9dbe9[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Sep 5 17:08:54 2012 +0200

    Add threshold.config file.
    
    This patch adds an example file and modify Makefile to have it
    installed by 'make install-conf' command.

[33mcommit c9cc137de54862a520cc83c6f5243db7e790376c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 6 07:30:31 2012 +0200

    Add --enable-luajit option to configure

[33mcommit a48d6cb2071f3b507da85f4d03322811eb6cf183[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Sep 4 13:35:15 2012 +0200

    erf: fix logical operator usage.

[33mcommit 2026a686973cc2f30a90b8752d9070d671204c6e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 5 17:33:46 2012 +0200

    Implement logic of luajit keyword to match on full packet data and/or payload.

[33mcommit ba3260ed380a951424b9f81c0afc0ebe9611eaf5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 5 13:23:53 2012 +0200

    Thread local ctx for detection keywords
    
    Some detection keywords need thread local ctx storage. Example is the
    filemagic keyword that has a ctx that is modified with each call. That
    is not thread safe. This functionality allows registration of thread
    local ctxs so that each detect thread works on it's own copy.

[33mcommit f58e828c5e54d57ce2a6cf1d05d53b7abc7da648[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 4 18:00:56 2012 +0200

    luajit: stub detection keyword

[33mcommit 5b2fbfb12349bed8422f91ceee9a7df412ae8d2a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 4 17:34:17 2012 +0200

    luajit: tell build sys about it

[33mcommit b0a2aefc78ad7cc96e9542d7b8f174f23f8759d5[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Sep 3 16:57:21 2012 +0200

    af-packet: fix build on systems without AF_PACKET

[33mcommit 84e0d76406aea435cb31cf05ca9d080ec17208b6[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Aug 30 09:54:53 2012 +0200

    doxygen: generate doc for acquisition modules
    
    This patch sets some define to generate doc for the acquisition
    modules. It also suppress the doc generation for unittests which
    was polluting the output.

[33mcommit bfd6dea38fd6ad11e56e98f9602513628aa7a3d9[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Aug 30 09:54:34 2012 +0200

    pool: update doxygen documentation.

[33mcommit fa079c1da0c7cef3d3346e0130407a3231d0ec29[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Aug 29 12:27:26 2012 +0200

    pool: realize a block allocation for preallocated item.
    
    This patch required a evolution of Pool API as it is needed to
    proceed to alloc or init separetely. The PoolInit has been changed
    with a new Init function parameter.

[33mcommit cd76c7e5fbf6c1ef455d0dc373f5e379af2342f1[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jul 26 15:02:20 2012 +0200

    pool: alloc a single area for all PoolBuckets
    
    As we know the number and the size of PoolBucket, we can simply
    allocate a single memory zone.

[33mcommit b58ecd833a68fbc9e8e8ecba52527d816fe551c7[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Aug 22 15:39:27 2012 +0200

    l3proto: add unit tests
    
    This patch adds a series of unit tests. First two check test the keyword
    by checking packet on signatures using it. Last one adds is here to check
    that there is no interaction of l3_proto and ip_proto.

[33mcommit 71b4257bc23840c8dabdf598cb8ce1a02a54b129[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jul 13 15:46:02 2012 +0200

    sig: add l3_proto keyword
    
    This patch adds a l3_proto keyword to the signature language. It
    can be used to specify if the signature has to match on IPv4, IPv6
    or both. For example, one can write:
      alert http any any -> any 22 (msg: "HTTP v6"; l3_proto:ip6; sid:14;)
    
    This should close #494.

[33mcommit fd7b6db22d224609617f5b3085057d83acf2ebbc[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jul 13 15:44:31 2012 +0200

    sig: Add ipv6 and ipv4 to list of protocols
    
    With this patch it is possible to do:
     alert ipv6 any any -> any any
    or
     alert ip4 any any -> any any
    to match on IPv4 or IPv6 packets.

[33mcommit ac56b1bf24e5003806c85fe549fc7fcd24e1d627[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Aug 14 09:49:07 2012 +0200

    af-packet: detect MTU mismatch and warn user
    
    If the MTU on the reception interface and the one on the transmission
    interface are different, this will result in an error at transmission
    when sending packet to the wire.

[33mcommit 27b5136bf29a2698ccbb4b303619a08d045689e0[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jul 27 11:48:10 2012 +0200

    af-packet: add optional emergency mode
    
    Flush all waiting packets to be in sync with kernel when drop
    occurs. This mode can be activated by setting use-emergency-flush
    to yes in the interface configuration.

[33mcommit ec76742caa03344ae755a34caf49f87004590b7a[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jul 30 12:12:34 2012 +0200

    af-packet: reorder socket operation.
    
    This patch moves raw socket binding at the end of init code to
    avoid to have a flow of packets reaching the socket before we
    start to read them.
    
    The socket creation is now made in the loop function to avoid
    any timing issue between init function and the call of the loop.

[33mcommit 1ea809520a7d5e93ccdfde2ac8c39391d0cbe5ef[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jul 20 21:11:23 2012 +0200

    af-packet: fix runmode name in logging function

[33mcommit a645726262bb6e87c79e316862f67542cdf42e11[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Sep 3 14:57:44 2012 +0200

    af-packet: add doxygen comments
    
    This patch adds doxygen comments to newly introduced function and adds
    module AF_PACKET doxygen module with a dedicated AFP peers module.

[33mcommit 662dccd8a5180807e3749842508b80e2e2183051[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jul 19 20:07:05 2012 +0200

    af-packet: IPS and TAP feature
    
    This patch adds a new feature to AF_PACKET capture mode. It is now
    possible to use AF_PACKET in IPS and TAP mode: all traffic received
    on a interface will be forwarded (at the Ethernet level) to an other
    interface. To do so, Suricata create a raw socket and sends the receive
    packets to a interface designed in the configuration file.
    
    This patch adds two variables to the configuration of af-packet
    interface:
     copy-mode: ips or tap
     copy-iface: eth1 #the interface where packet are copied
    If copy-mode is set to ips then the packet wth action DROP are not
    copied to the destination interface. If copy-mode is set to tap,
    all packets are copied to the destination interface.
    Any other value of copy-mode results in the feature to be unused.
    There is no default interface for copy-iface and the variable has
    to be set for the ids or tap mode to work.
    
    For now, this feature depends of the release data system. This
    implies you need to activate the ring mode and zero copy. Basically
    use-mmap has to be set to yes.
    
    This patch adds a peering of AF_PACKET sockets from the thread on
    one interface to the threads on another interface. Peering is
    necessary as if we use an other socket the capture socket receives
    all emitted packets. This is made using a new AFPPeer structure to
    avoid direct interaction between AFPTreadVars.
    
    There is currently a bug in Linux kernel (prior to 3.6) and it is
    not possible to use multiple threads.
    
    You need to setup two interfaces with equality on the threads
    variable. copy-mode variable must be set on the two interfaces
    and use-mmap must be set to activated.
    
    A valid configuration for an IPS using eth0 and vboxnet1 interfaces
    will look like:
    
    af-packet:
      - interface: eth0
        threads: 1
        defrag: yes
        cluster-type: cluster_flow
        cluster-id: 98
        copy-mode: ips
        copy-iface: vboxnet1
        buffer-size: 64535
        use-mmap: yes
      - interface: vboxnet1
        threads: 1
        cluster-id: 97
        defrag: yes
        cluster-type: cluster_flow
        copy-mode: ips
        copy-iface: eth0
        buffer-size: 64535
        use-mmap: yes

[33mcommit 2011a3f87e433b0c8b72ea2b8b2b10d6ed8485e3[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jun 15 17:18:57 2012 +0200

    capture: add data release mechanism
    
    This patch adds a data release mechanism. If the capture module
    has a call to indicate that userland has finished with the data,
    it is possible to use this system. The data will then be released
    when the treatment of the packet is finished.
    
    To do so the Packet structure has been modified:
    +    TmEcode (*ReleaseData)(ThreadVars *, struct Packet_ *);
    If ReleaseData is null, the function is called when the treatment
    of the Packet is finished.
    Thus it is sufficient for the capture module to code a function
    wrapping the data release mechanism and to assign it to ReleaseData
    field.
    
    This patch also includes an implementation of this mechanism for
    AF_PACKET.

[33mcommit 8879df80049a1db693e1f196f50928cf2472f12f[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jul 5 07:41:16 2012 +0200

    af-packet: improve mmaped running mode.
    
    The mmaped mode was using a too small ring buffer size which was
    not able to handle burst of packets coming from the network. This
    may explain the important packet loss rate observed by Edward
    Fjellskål.
    This patch increases the default value and adds a ring-size
    variable which can be used to manually tune the value.

[33mcommit 9622704c8c948ab3f23165e060a4027532e395c7[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jul 20 09:41:52 2012 +0200

    af-packet: delete design comments

[33mcommit 5d27518bbd8343094188bdd81d40c0439f658243[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 3 11:30:19 2012 +0200

    Make sure we never underflow len in DetectLoadSigFile

[33mcommit e6e339aacfb10b16d4a3cdbc4873921ecd30f0ef[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Sep 3 10:04:43 2012 +0200

    Add counters for IPv4 in IPv6 and IPv6 in IPv6

[33mcommit 250c4e9310012f86241c2dae6438e6fe2025e9f4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 30 17:17:28 2012 +0200

    file: convert filesize to new FileMatch api.

[33mcommit f93c54136c3d2fe87bd4c47c1774d72bb3943200[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 30 16:50:16 2012 +0200

    stream/app layer: call new Truncate callback for data gap case as well.

[33mcommit 869109a6a008155d16aef4d8cab51018645e37ca[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 30 16:44:36 2012 +0200

    stream/app layer: add Truncate app layer callback that is called if stream depth is reached. Use it to trunc open files in HTTP.

[33mcommit 8f71333e12803ccd7aa82ad12abb57ff98d890bb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 30 10:02:02 2012 +0200

    file: implement filesize keyword. #489.

[33mcommit 970fdee204cab5d8f4d29d11e7337a918992b7b4[m
Author: Anoop Saldanha <anoopsaldanha@gmail.com>
Date:   Wed Aug 29 15:17:59 2012 +0530

    detection engine port api unittests cleanup

[33mcommit 3849588c61a0fbad79dfab31cfa3fec200ad9467[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 29 10:01:34 2012 +0200

    Create separate detect API call (FileMatch) for file detection keywords. #531.

[33mcommit 12743ca5d7212851feed29e6fbf3e3e6f8f302eb[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Aug 28 13:24:20 2012 +0200

    tls-log: add protocol version to log message.

[33mcommit af20eaf2e5806c02082399598f98f97815c42bc2[m
Author: pi-rho <github@tyr.cx>
Date:   Mon Aug 27 19:20:58 2012 -0500

    fix regression (clobbered register; redmine #534)

[33mcommit 0df4c5838d7aea1762c2d9bb3b2a7ceab0ad52e4[m
Author: pi-rho <github@tyr.cx>
Date:   Mon Aug 27 19:13:50 2012 -0500

    spelling corrections documented in redmine bug#533

[33mcommit 408548c2c409190e89be316cef013196b0aad8aa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 27 17:35:46 2012 +0200

    rule reloads: don't lock up main thread so clean shutdown is impossible

[33mcommit cbeb8a86b76236a8645d6f1421312b234d13c0f9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 27 16:49:58 2012 +0200

    pcap: fix compilation on old libpcap

[33mcommit 16bdcbeb0ea2ca33f1f6435a2285625284bc5e9c[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Aug 27 15:18:33 2012 +0200

    tm-thread: suppress rarely used variable.

[33mcommit 92679442cae0626fcb3937c23abc0dd85ec39cdf[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Aug 15 17:28:00 2012 +0200

    Convert to atomic and disable check on HTP config change.
    
    This patch converts the series of variable to an atomic.
    
    Furthermore, as the callbacks are now always run, it is not
    necessary anymore to refuse a ruleswap if HTP parameters are
    changing.

[33mcommit 66a083dafacd37d77908adeff3ef69e1f4872824[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Aug 15 14:04:03 2012 +0200

    Get rid of AppLayerHtpRegisterExtraCallbacks
    
    This patch add a early exit condition to the body handling callback.
    This permits to avoid to avoid a complex system to handle htp
    object change.

[33mcommit 7e09cdc26571f18c2ecdafddfb2552b76fb56225[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Aug 10 15:32:30 2012 +0200

    Delay Detect threads initialization
    
    This patch modifies the init of Detect threads. They are now started
    with a dummy function and their initialisation is done after the
    signatures are loaded. Just after this, the dummy function is switched
    to normal one.
    
    In IPS mode, this permit to route packets without waiting for the
    signature to start and should fix #488.
    
    Offline mode such as pcap file don't use this mode to be sure to
    analyse all packets in the file.
    
    The patch introduces a "delayed-detect" configuration variable
    under detect-engine. It can be used to activate the feature
    (set to "yes" to have signature loaded after capture is started).

[33mcommit eaea832a4e1033276a6787ef14ccbe66fbe3d1b4[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Aug 11 11:43:18 2012 +0200

    pcap: handle failure of packet treatment
    
    If the loop is breaked, this means we've got a treatment error. We
    don't need to reconnect but we must exit with correct status.

[33mcommit f82573be1244eda76108e0486540fddb32fbcbbe[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Aug 23 17:06:39 2012 +0200

    tls: suppress always true condition.

[33mcommit a3b2cee0d5a1ee35c217d8f839663bfae9b02fa9[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Aug 21 15:42:10 2012 +0200

    detect-tls: various indent fixes.
    
    And delete a useless FIXME.

[33mcommit b253d1a4994ee04511f6e23dd13bda4357544c07[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Aug 23 09:25:15 2012 +0200

    tls: store all the certificates chain in the written PEM file.
    
    When using the tls.store command, a dump of all certificates in
    the chain is now done on the disk.

[33mcommit 152b4eaf568d1685cd18b76d09f04ba5111da153[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jul 18 15:13:49 2012 +0200

    tls: keep pointers to all certificates in chain
    
    When multiple certificates forming a chain are sent. A pointer to
    the start of each certificate is kept. This will allow treatment
    on certificates chains.

[33mcommit c4df7a45aeef26bb4fbf9fc48c2607b38c633e06[m
Author: Jean-Paul Roliers <popof.fpn@gmail.com>
Date:   Sat Feb 4 17:37:41 2012 +0100

    tls: adding store option for TLS
    
    This patch adds a TLS store option to save certificate in PEM format.
    Each time the store action is met, a file and a metafile are created.
    
    Reworked-by: Eric Leblond <eric@regit.org>

[33mcommit 00d435736268c35ddba7000c47c6e9a72c983358[m
Author: Jean-Paul Roliers <popof.fpn@gmail.com>
Date:   Thu Feb 2 16:45:35 2012 +0100

    tls: adding support for fingerprint rule matching.
    
    Add the support for tls.fingerprint keyword in rules.

[33mcommit bf386a396d693043b77fa58006d23474d041f0fc[m
Author: Jean-Paul Roliers <popof.fpn@gmail.com>
Date:   Sat Feb 4 17:15:11 2012 +0100

    tls: adding fingerprint to TLS Log information.
    
    Improve TLS logging by adding the certificate fingerprint to TLS Log file.
    Add the extending option to the tls-log entry in suricata.yaml.

[33mcommit 644c1b3cad51212423601e8f5df32fb6240b1571[m
Author: Jean-Paul Roliers <popof.fpn@gmail.com>
Date:   Thu Feb 2 15:07:42 2012 +0100

    tls: adding fingerprint calculation.
    
    Adding a pointer in ssl_state struct and compute fingerprint during
    certificate decoding.

[33mcommit 3df20d054446ef38dd652d3c6dfd8cbbd31c762e[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Apr 5 16:45:24 2012 +0200

    tls: add NSS version for SHA1 computing function.

[33mcommit 9071bcf98333cb5166ebf3bb7a48ad1d262800e0[m
Author: Jean-Paul Roliers <popof.fpn@gmail.com>
Date:   Thu Feb 2 14:51:31 2012 +0100

    tls: adding cryptographic functions.
    
    Adding util-crypt containing cryptographic functions as SHA1 and Base64.

[33mcommit efdf96ccbaeca1703b48388d85cf57ad4086287d[m
Author: Jean-Paul Roliers <popof.fpn@gmail.com>
Date:   Wed Feb 1 22:36:44 2012 +0100

    tls: adding TLS Log support
    
    Creation of the log-tlslog file in order to log tls message.
    Need to add some information into suricata.yaml to work.
    
      - tls-log:
          enabled: yes      # Log TLS connections.
          filename: tls.log # File to store TLS logs.

[33mcommit 3eb0fd878d5821e8ca7f6550e13bbef4adddc088[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Jul 19 11:56:16 2012 +0530

    Don't wait for packetpool to be back to full state before continuing with the shutdown process, on received shutdown signal

[33mcommit 5f198e3a1de3f507d07247ecbc72c440e3a0c4f1[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Jul 19 11:00:42 2012 +0530

    Suricata shutdown updates + minor cleanup

[33mcommit 34581ce9020b7e151346e1fcb693a90ea4bdde35[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Jul 15 13:51:14 2012 +0530

    rx TMs shouldn't return TM_ECODE_FAILED if engine is in shutdown mode + minor cleanup

[33mcommit b057a20f10367a2fd0b688841950de07b490bed5[m
Author: Ignacio Sanchez <sanchezmartin.ji@gmail.com>
Date:   Wed Aug 22 16:38:32 2012 +0100

    Custom logging feature for log-httplog

[33mcommit def0270de78fd4af15dfa72aab68cb65b335b2d7[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Aug 8 16:21:27 2012 +0200

    decode: decode IPv6-in-IPv6
    
    This patch adds decoding of IPv6-in-IPv6. It also adds some events
    for invalid packets.
    
    This patch should fix #514.

[33mcommit 438dd619488dc0220c70484fc3dd848c373c8d7b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 23 08:41:45 2012 +0200

    Update version number to reflect we're working towards 1.4 now.

[33mcommit f9046d82844cbaa1321282b8a76a1072f766621e[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Aug 22 12:40:01 2012 +0200

    Add teredo counter.

[33mcommit 09d893127e6c684452119b386bdce73960b1ac8f[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jul 27 09:25:45 2012 +0200

    defrag: prealloc more frags.

[33mcommit 6475f99bea8985f155cd049cc4cc787eed68891c[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jul 27 09:25:27 2012 +0200

    defrag: Fix description of params
    
    The max-frags params is not what it is.

[33mcommit fd32159464164499a034a88a401198a87f68aaee[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jul 26 21:27:29 2012 +0200

    defrag: add some events relative to defragmentation

[33mcommit d2aa0407c4286fe621cb87619f6f8ec007c53342[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Aug 22 14:24:30 2012 +0200

    defrag: Fix unittest logic.
    
    We've linked the size of hash with trackers. Thus calling DefragInit()
    after setting the configuration variable is more logic.

[33mcommit 0fd2c93c96ba5fe18c5665bc79633554ae88d2a0[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jul 26 18:29:51 2012 +0200

    defrag: link hash size with number of frags.
    
    We set defrag_hash_size by using the number of trackers. This is
    effective to avoid collision.

[33mcommit f328e18d593328d9ab7d264278dcc037f1552d25[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jul 26 17:03:30 2012 +0200

    defrag: fix some integer type warning.

[33mcommit b1b4cd2729ea41ad72427c6678021deeccb77f89[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jul 24 14:14:43 2012 +0200

    defrag: really use 'max-frags' variable.
    
    The 'max-frags' variable was not used and the 'trackers' variable was
    not documented. This patch fixes the two issues.

[33mcommit 6480cd1b9c2ad93288fc969d894270a7be32dc77[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jul 16 12:16:37 2012 +0200

    Teredo tunnel supports
    
    This patch should fix #480 by adding the support of Teredo tunnel.
    The IPv6 content of the tunnel will be parsed in a similar way as
    what is done the GRE tunnel. Signatures will then be matched on the
    IPv6 content.

[33mcommit 09fa0b95429e9f6a1fb5c91c2f23b5d428f18520[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jul 16 16:11:40 2012 +0200

    Add support for IPv4-in-IPv6
    
    This patch adds support for IPv4-in-IPv6 and should fix #462.

[33mcommit 2c5727592110622bc8f00c23990cca281e50fd15[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Aug 7 18:20:13 2012 +0200

    nfq: implement "fail-open" support.
    
    On linux >= 3.6, you can use the fail-open option on a NFQ queue
    to have the kernel accept the packet if userspace is not able to keep
    pace.
    
    Please note that the kernel will not trigger an error if the feature is activated
    in userspace libraries but not available in kernel.
    
    This patch implements the option for suricata by adding a nfq.fail-open
    configuration variable which is desactivated by default.

[33mcommit 9e54819121ea5c9982e015011c6514408dd00343[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jul 5 22:38:00 2012 +0200

    yaml: suppress old variable in pfring section.

[33mcommit d492683aa4de197c06a45d9fae8b8268946550c8[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jul 5 23:24:38 2012 +0200

    autotools: error on autoreconf is an error

[33mcommit adbf85c4a9102193671bf5105f1682b88d79b307[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jul 31 14:37:37 2012 +0200

    autotools: fix detection with clang
    
    This patch improve detection of type of nfq_get_payload() by only
    converting to error the warning we have when using the wrong type.

[33mcommit e0ddcdd194d26f9a05e962017719bafcaee7fddc[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Aug 21 19:12:20 2012 +0200

    autotools: rename configure.in to configure.ac
    
    configure.in is deprecated since long and will be replaced by
    configure.ac. For more information, see:
      http://lists.gnu.org/archive/html/automake/2012-08/msg00023.html

[33mcommit 452d3c43089526c2859ac6da54718bf0b2294480[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Aug 9 16:47:52 2012 +0200

    tm-thread: exit loop if suri want to quit

[33mcommit f389a1201f910aa7c614c51e9af8cebcd187236a[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Aug 9 16:24:18 2012 +0200

    tm-thread: run thread init function sequentially.
    
    On some setup you want to run each thread init function sequentially.
    For example, if I use flow_cpu load balancing on AF_PACKET, my target
    is to have CPU 0 (first socket in the group) to be link with the
    thread 0 in detect cpu set (first thread to be initialised). A good
    way to achieve this is to run only one thread init function at a time
    to avoid any possible race condition.

[33mcommit e28835af9199d868212c2de5b04b5c1fdc9b3372[m[33m ([m[1;33mtag: suricata-1.3.1[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 20 14:23:19 2012 +0200

    Update Changelog to include 1.3.1 changes.

[33mcommit f1b6f7a9e645158fceabbc21a929de80c855163e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 20 08:54:45 2012 +0200

    rule analyzer: make analyzer aware of http_user_agent pcre flag /V.

[33mcommit e737e2dc5627ebd49f6697703c578e34da620c43[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 17 17:23:39 2012 +0200

    http: after path double decoding, also normalize the path again. #504.

[33mcommit e839cea9e56c0ed67441bd819055c677e50dff03[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 17 13:37:40 2012 +0200

    Http: don't double decode URI path and query by default. Instead add per server options to enable double decoding for both cases. #464 #504.

[33mcommit e0bfcb7dde055ed1667bedffec65e7972ba9afef[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 17 11:07:48 2012 +0200

    Only set SIG_FLAG_REQUIRE_STREAM if signature inspects TCP.

[33mcommit bd6b865473522b51e06d55ce2acb2f0772412461[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 17 10:43:45 2012 +0200

    rule analyzer: fix fast pattern analyzer reporting wrong filename (same as rule analyzer).

[33mcommit 11c3167583072103f5c09711caeaf46f3fde75a0[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Aug 16 08:57:19 2012 +0200

    stream-tcp: no checksum alert if validation is off
    
    This patch disables checksum alert if checksum-validation is set
    to no in the configuration file. Without this patch, when parsing
    a pcap which checksum offloading, it was not possible to get rid
    of event caused by checksum validation.

[33mcommit c51a3aad17778da8912bf5b971370e406881ba50[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 16 12:41:53 2012 +0200

    stream: handle case where Suricata sees 3whs-ACK but server doesn't. Bug #523.

[33mcommit 5cc8a092574a3365863d9abf3b25a4b508bd5548[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 15 17:13:33 2012 +0200

    stream: fix unittest broken by new flags handling.

[33mcommit ad827ad030c81d30c75341f3946fb2fdbb7682a8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 14 13:49:13 2012 +0200

    http: add more decoding unittests.

[33mcommit 4c6fd7ad4c3254accff9f50e8e81f1d1afe475a7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 9 16:59:49 2012 +0200

    Bug #510. Produce error if max-pending-packets is higher than 65534.

[33mcommit 6841171882f1433b71a1860db8137422791677a6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 9 16:07:41 2012 +0200

    profiling: fix 'match' counter sometimes not incrementing. #460.

[33mcommit f9cde717e741b3c820b2f0d2ee0984d9cfdb047e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 9 16:02:04 2012 +0200

    Use SCFree instead of free in DER decoder.

[33mcommit c44f4c13fcf7cfd3afa92503a547a035e190d522[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 8 14:29:31 2012 +0200

    stream: improve TCP flags handling

[33mcommit 09e709d1c5233dcce60b5dd44ab47ffd248a08c3[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jul 30 12:11:23 2012 +0200

    af-packet: fix reconnect code
    
    Reconnect code was in a "work by luck" stage as we did not update
    the socket number after reconnect.

[33mcommit 64fad5b36e19e30cf990e8a3405e1e0ee7f3b8d6[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Aug 1 21:00:11 2012 +0530

    Update fast_pattern engine to not use negated content as fast_pattern if we have non-negated content in the sig.
    
    Noticing a good spike in perf with et_pro ruleset.
    
    Thanks to Will Metcalf for the suggestion.

[33mcommit fe4c66461f3382038bc7d26c99e02f20a6990805[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Jul 9 10:01:54 2012 +0530

    bug #466 - Updated getticks() to serialize execution of rdtsc with cpuid

[33mcommit 41bb3b95f9c4517c32d2ac141bfa652cf9b71fc8[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Jul 19 13:32:01 2012 +0530

    bug 508 - List (ack | cwr | ecn) combination to be accepted by our stream engine.
    
    This isn't a perfect solution.  More like we have patched this for the case we
    are in tcp's established state.  The right solution would be to accept states
    based on the presence(using operator OR) of certain flags in the tcp header,
    rather than list out all possible flag combinations.

[33mcommit 1c41672f5e6df36f10f78c08914698addd613e3f[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Jul 11 20:09:24 2012 +0530

    invalidate sigs if depth > content_length

[33mcommit 8ebc625711e38e9800384289937be82456817cf8[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Aug 1 11:04:37 2012 +0200

    tls: fix keyword regular expression
    
    Space, dash and comma are valid.

[33mcommit a369f8c359f19fcf7a5df85288f2f7b92c1816ad[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jul 27 11:29:37 2012 +0200

    af-packet: loop on ring if there is data to read.
    
    This patch should bring some improvements by looping on the
    ring when there is some data available instead of getting back
    to the poll. It also fix recovery in case of drops on the ring
    because the poll command will not return correctly in this case.

[33mcommit 4df509f87a4b077e3a5d53080e2412dc066ed8d6[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jul 27 11:22:03 2012 +0200

    defrag: use IP ID in hash
    
    This patch fixes the collision issue observed on an intensive network
    trafic. When there is fragmentation it is the case for all data
    exchanged between two hosts. Thus using a hash func only involving
    IP addresses (and protocol) was leading to a collision for all
    exchanges between the hosts. At a larger scale, it was resulting in
    a packet loss. By using the IP ID instead of the protocol family, we
    introduce a real difference between the trackers.

[33mcommit a5587fec2ebdd3cd75a2b0e7c8fe7f06a8f0daea[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 6 15:44:59 2012 +0200

    flow: remove unused prune-flows option

[33mcommit bf6cd48259b78374d1386b1ed1cc615896d46993[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Jul 7 11:52:20 2012 +0530

    if a sig's set as stream sig only, don't updated it as both stream and pkt sig if offset/depth's present
    
    bug #495 - update rule analyzer to not warn on offset_depth-tcp_pkt update if sig is stream only
    
    bug #497 - rule_warnings fixed

[33mcommit b2f589527ac22ceacafb0c3ecc98263ff5b43947[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Jul 7 22:09:06 2012 +0530

    Set thread name Suricata-Main for main thread and LiveRuleSwap for live swap thread

[33mcommit a0bce6362e0de9ebc0dcbaa3bd844f9f55da7197[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Jul 11 15:33:38 2012 +0530

    bug 499 - update host os info enum map to use - instead of _ + add new unittests

[33mcommit 7833883a8f3c49902588509910733f94a2d94dff[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Jul 6 16:14:17 2012 +0530

    bug #496 - don't warn about offset/depth for packet sigs

[33mcommit d8356c5ebd510f9b863573da2ad5616d75014391[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 11 12:47:34 2012 +0200

    Windows build and other misc fixes.

[33mcommit 22957776915bac6bbf204d98ac56f0109171453a[m[33m ([m[1;33mtag: suricata-1.3[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 6 14:52:43 2012 +0200

    Update changelog for 1.3 release.

[33mcommit a3465fb971d590c1cee9a88f35d93ebea76aaaf5[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jul 5 16:12:52 2012 +0200

    Rename 'worker' running mode to 'workers'
    
    This patch renamed the 'worker' running mode into 'workers'. Thus,
    there is only one name in Suricata for the same thing. Backward
    compatibility is ensured by replacing "worker" by "workers" when
    the old name is used. A warning is printed in the log when the old
    name is used.

[33mcommit 34f0897163c466b1c31d0e454103c0266af6f8c4[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Jul 5 17:38:58 2012 +0530

    check if all packets are processed before disabling detect threads + kill all threads <= detect after FFR + other minor fixes

[33mcommit be5fed869d75591615ce319024d1b5df23a78130[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 5 12:43:14 2012 +0200

    conf api: remove dead code

[33mcommit c2e484ae8858d567983d1810ba79734f170047f6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 5 12:42:38 2012 +0200

    rule analyzer: fix detecting stream match

[33mcommit 946a9ece3208aa4783163499683c273bda369f9d[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Jul 5 11:54:06 2012 +0530

    rule analyzer updated for sigs with offset/depth set + alproto set

[33mcommit 960d421f9d845523e2da360d0b4908f00970becc[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Jul 5 10:07:16 2012 +0530

    Update SigValidate() to allow http keywords to be specified in the right flow direction

[33mcommit ac092197b47432f0a6bc301f157ff7e423352bb3[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jul 5 10:53:44 2012 +0200

    autotools: pthread deps is needed on ubuntu.
    
    It is weird but adding pthread in needed on ubuntu 1204.

[33mcommit 9f3e079bcff06ecd35cc3c29ef9280464bdc0e4f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 5 12:32:59 2012 +0200

    Make live reloads optional and disabled by default.

[33mcommit 9d2e17fa98fefcadba46fc5ce0a7a3936add16d2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 5 08:12:41 2012 +0200

    stream: don't NULL dereference p->flow->protoctx in StreamTcpReassembleDepthReached

[33mcommit 43c7fd758573fd135c5c50feea2b8eb2b4cef15f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 4 13:07:02 2012 +0200

    file inspection: improve logging when stream.depth limit is reached. #493.

[33mcommit 79d5ef3707cbb65c46b4198aca6845f559413c01[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 4 10:54:18 2012 +0200

    Improve warning if prelude output is selected but support not compiled in. #320.

[33mcommit e7b36051de2e700f37116b7582106def5e344adf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 3 15:15:19 2012 +0200

    Improve pktvar keyword parsing and error handling.

[33mcommit 2179ac2595a6b75aa9cd67455e6e148b14fbad8a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 3 14:23:56 2012 +0200

    Minor fixes for coverity issues.

[33mcommit c4e5e1482e1735e692d918f85f46433ddb3813a0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 3 14:09:17 2012 +0200

    Fix detect tag error handling.

[33mcommit d840308ae26474a893c19ea0cf42d3dee60bd171[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 3 13:08:30 2012 +0200

    file detect: improve cleanup

[33mcommit 4a9fa35cf2cf12c118e10aa5f2fb3f47be46819c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 3 12:59:52 2012 +0200

    filemd5: free hash during cleanup

[33mcommit b0b29fb85afa36ee69c447fe7eb5a321a881b45a[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Jul 3 12:53:47 2012 +0530

    ac-bs and ac-gfbs mem cleanup

[33mcommit c1cc9188fdd8025c5bad86bf18a996908f32fb37[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Jul 3 11:00:21 2012 +0530

    more mpm engine mem cleanup

[33mcommit 0eaf0b0129576a899175e4287c9c3e96cd3f97af[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Jul 2 22:24:37 2012 +0530

    mpm engine and ac mem free fixes

[33mcommit 50aba06530215b12cdaa6745bb5dc1c84ac9a1d5[m
Author: Nikolay Denev <ndenev@gmail.com>
Date:   Mon Jul 2 11:47:41 2012 +0200

    Fix SCSetThreadName() macros in threads.h Add FreeBSD thread naming implementation.

[33mcommit cde31abe96a7c1e4ba068a85eecf737d28f4879e[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Jun 29 22:40:02 2012 +0530

    bug #455 - Warn users on signature event vars having precedence over threshold.conf ones

[33mcommit ab421978f0b6190bb9d7137c8dffde907cf72bd6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 2 14:04:30 2012 +0200

    Free all sig match structs when freeing a signature.

[33mcommit f4c7bd4e5b7f21711dd7781078aca1eafb2b1ab7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 2 13:43:50 2012 +0200

    Fix memleak in tag parsing.

[33mcommit af97c36c08e42605ee9bc319b7668010922cc809[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 2 13:12:29 2012 +0200

    Properly clean signature's ip only data.

[33mcommit c7af0589bc923e1b20f51920c3e37143cb61ddd6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 2 12:47:39 2012 +0200

    Fix a reload memleak in thread local detection engine ctx.

[33mcommit 19e3348cae6987ac0f3058dd2f92c266f29e824f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 2 12:43:01 2012 +0200

    Fix a reload memleak in the duplicate sig detection hash.

[33mcommit 728c4f9ea0f0f38862b98adf720f2c94c94e4057[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 2 12:36:47 2012 +0200

    Clean up packet pool at shut down.

[33mcommit 583ba460c45e502434055d9e66f2bf0b0247ca7f[m[33m ([m[1;33mtag: suricata-1.3rc1[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 29 17:41:21 2012 +0200

    Update Changelog for 1.3rc1 release

[33mcommit ba5f757c4717400d18654ae6cee2d5f0feb4dab3[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Jun 29 19:27:21 2012 +0530

    sc_atomic_cas replaced with sc_atomic_set

[33mcommit 0c98980e21e75d767c6414e36b185cea70051ea6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 31 11:25:53 2012 +0200

    http: add unittest to test \r in header line.

[33mcommit d236e68b62a91c155602207a6747ceada8995d5b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 31 11:00:34 2012 +0200

    htp: keep track of header line terminators so http_raw_header can reconstruct exact headers.

[33mcommit 3d12b740125027ed2fdbc8268f9bb3ff28fe7e4f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 31 10:59:55 2012 +0200

    http_raw_header: add some debug code.

[33mcommit a6471cdb9cc49eaf900a59971369d22bdc5499f7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 29 14:38:19 2012 +0200

    icmpv6: for ICMPv6 info messages set payload ptr and length to right after 4 byte hdr.

[33mcommit 4cf6bb3f4cbdab8a0cd57964be801cf676d2ec26[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 29 13:15:46 2012 +0200

    afpacket: fix compilation in debug mode.

[33mcommit c36aa041f312c5b964ed029cb9168a66961ae1da[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jun 6 15:17:19 2012 +0200

    Update coccinelle script to match syntax evolution.

[33mcommit 0227a87fcb9e0b4746d3b53f6bce7519c5fe4353[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jun 12 07:47:03 2012 +0200

    cleaning: fix warning when building with clang.
    
    clang was issuing some warnings related to unused return in function.
    This patch adds some needed error treatment and ignore the rest of the
    warnings by adding a cast to void.

[33mcommit 6efd37a388d73eadcdf48c65c6e553c61abc8ec5[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jun 13 20:42:04 2012 +0200

    af-packet: use counter for drop and accept
    
    This patch adds counters for kernel drops and accepts to af-packet
    capture module. This information are periodically displayed in
    stats.log:
    capture.kernel_packets    | RxAFP1                    | 1792
    capture.kernel_drops      | RxAFP1                    | 0
    The statistic is fetch via a setsockopt call every 255 packets.

[33mcommit f2a6fb8a5a2c426be6e82dd2229a5c65eebdd4b7[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jun 11 16:06:13 2012 +0200

    af-packet: add support for BPF filter.
    
    This patch adds support for BPF in AF_PACKET running
    mode. The command line syntax is the same as the one
    used of PF_RING.
    The method is the same too: The pcap_compile__nopcap()
    function is used to build the BPF filter. It is then
    injected into the kernel with a setsockopt() call. If
    the adding of the BPF fail, suricata exit.

[33mcommit c85ee1e3f64e8319ad3b7cc305d56071c100ad28[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jun 11 23:23:32 2012 +0200

    af-packet: get datalink for each socket creation.
    
    This patch will allow us to use the datalink when computing the filter.
    It also fixes a potential issue where an interface data type change
    after the interface if going down/up.

[33mcommit 59ec493f7c08e60861cc5d1ba45dcbddfabc846c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 29 13:02:34 2012 +0200

    http body inspection: force body inspection on stream eof.

[33mcommit 4d4671c4701cfd053eab770dc84575f99270cb6c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 29 11:37:51 2012 +0200

    default config: add engine-analysis.rules directive.

[33mcommit 2a4992e7a0a5db9ee1a7b8e11105ea5574993475[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 28 23:19:05 2012 +0200

    inline: fix unified2 alert direction selection

[33mcommit 87ec969b3d538b419b2868b1bd3129195a2898d5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 28 23:14:21 2012 +0200

    filemd5: fix compilation if libnss isn't available

[33mcommit c9e93ec52cdc7f02fb870b0471043edb9bb7bd1f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 7 10:45:56 2012 +0200

    filemd5: add support code for md5 handling for signatures.

[33mcommit 8cd460dde538566136a6616ab000a7aeee8237eb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 28 19:37:02 2012 +0200

    Don't display a warning when log-pcap tries to remove an already removed file.

[33mcommit 7109a056a53acb96bb509ec0d8f89de49aeda655[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Jun 26 10:29:02 2012 +0530

    http header won't inspect set-cookie headers. Set-cookie part of cookie keyword now. Also update the http header inspection engine

[33mcommit 988f22ee2e4f7f8325ee795015388adf0a6d254d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 28 12:50:08 2012 +0200

    Free pcre study structs for classification, threshold and reference parsing.

[33mcommit 0c24bbab0cad9cb0116424aa61b6e1bc753c5a5a[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Jun 26 17:08:04 2012 +0530

    code cleanup for live swap

[33mcommit 452114a859e625b16b8f1bf585f3130369ec316d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 26 10:42:45 2012 +0200

    Fix compiler warning.

[33mcommit 2bc7d0792d6737a1175322749a4bfdc02af3daff[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Jun 25 21:16:37 2012 +0530

    update clean up of old detection engine contexts for live rule swap

[33mcommit eee33866df6a04cfed01dad11941a72fa9e56b2b[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Jun 22 23:56:11 2012 +0530

    DetectEngineCtxFree() cleanup, also in main

[33mcommit c3eab5cf4e6ce00b3ad16f9409d4aed077e69d87[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Jun 22 23:49:44 2012 +0530

    Replace the old atomic sets using cas with the new sc_atomic_set macro

[33mcommit 32183faa82cc1242daf5832bc74ef42b2d86a3e9[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Jun 22 23:48:06 2012 +0530

    free flowvar entries in flow after live rule swap. Sync flowbits entries into packet struct to be used by alert debuglog when alert debuglog is enabled

[33mcommit 8fb2040eee301909d5c88c2f298fd9a050707611[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Jun 22 23:39:02 2012 +0530

    disable live rule swap when -s or -S option's used at startup

[33mcommit 31eb5fa2f69d99689705cb6431235effc77e0d3f[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Jun 22 23:33:11 2012 +0530

    Introduce util-signal.[ch]. Move our signal setup functions here

[33mcommit 4cde2355bd72a99a878610022fa8114209157599[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 14 11:18:43 2012 +0100

    Simplify flow resetting on de_ctx update. Detect ctx id starts at 1. So in a flow 0 means uninitialized (thus set) and if we detect flow is not equal to detect id, we reset the sgh storage and de_state.

[33mcommit 6fa46d7526fb416a17082e3da437cf9d23994a76[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Jun 22 21:51:32 2012 +0530

    If new ruleset requires any htp callbacks that aren't already set, don't load new ruleset; request user to restart suricata + disable setting fileinsepection flags unconditionally in main

[33mcommit e5edcfaca8105e71f647daf9cb952e63831a02c3[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Jun 22 21:42:57 2012 +0530

    add unittest for atomic operation with void *

[33mcommit ecad4a24fa3600eabfb92b860589c15825dc6173[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Jun 22 21:08:26 2012 +0530

    live rule support added
    
    To reload ruleset during engine runtime, send the USR2 signal to the engine, and the ruleset would be reloaded from the same yaml file supplied at engine startup

[33mcommit 83a8f6e03ab3bf945bd8f21b80f3dfa1db7c2457[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Jun 22 18:42:35 2012 +0530

    cleanup threshold config de-init

[33mcommit 5e02cb236546fbc5131e2c36930246e01fb4a8ff[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Jun 22 18:37:51 2012 +0530

    slot_data updated as an atomic var no

[33mcommit 5878d83174ba2bb17c292465b79caabc5586a076[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Jun 22 18:03:12 2012 +0530

    byte_extract_id var now a non-global de_ctx specific var

[33mcommit f4ce9011d22d2323b1029ca907f4578fe4b99be3[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Jun 22 17:50:15 2012 +0530

    make mpm ctx container de_ctx specific. Also introduce global variable in mpm_ctx. this is a workaround for cleaning non global mpm_ctx's since we now don't supply the de_ctx around the detection engine API

[33mcommit 7acf5ad38e284c29bbe3c32b3f653febe24d8946[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Jun 22 15:58:03 2012 +0530

    clean reference config API

[33mcommit 6003c7cb6b6201a327d1df040aeb7bac5e891124[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Jun 22 15:50:13 2012 +0530

    clean classification config API

[33mcommit f5af4c9ceb5aa2b7ee863fa5cccedea6c55907f9[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Jun 22 15:06:55 2012 +0530

    util action api returns error code if it encounters wrong values parsing wrong action conf

[33mcommit f2dd61868d98ab52394189547d2456d3d2c6ea1b[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Jun 22 14:55:38 2012 +0530

    variable names global vars, global no more. Moved to detection engine ctx, a place it belongs

[33mcommit 946100845f26b981ce745a9bf35157fc35358076[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Jun 22 14:39:08 2012 +0530

    fix replace unittets. Re-set modified global_var to orignial value when the test completes

[33mcommit 55d4e9518e1333f1386a46202982dc84c318f4fd[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Jun 22 14:31:10 2012 +0530

    Kill engine during init stage if it fails to load valid value for sgh-mpm-context

[33mcommit d7a93b6fcd9afe8fcf2df3760d177056bf4d2c57[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Jun 22 14:23:28 2012 +0530

    clear root node during conf de-init. also create root_backup when the root is restored back using it

[33mcommit ab3fcb01f92f4a51bf9ad829a4b793de8bc9190e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 24 18:17:48 2012 +0200

    http: decode double decoded path and query string characters. Bug #464.

[33mcommit c6cac1ef4868866c5fc8c03448863742085cc40e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 24 17:31:05 2012 +0200

    build: Use expanded sysconfdir to pass as CONFIG_DIR to the code.

[33mcommit 108da566bcf5f01859d17efabcc662c81ed94ca6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 24 10:22:41 2012 +0200

    http: make client and server body inspection more robust in cases where realloc fails

[33mcommit 60c3af930346d313d1a0d2709155d2033eb6af6d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 22 10:59:55 2012 +0200

    detect: Only run mpm on HTTP buffers in the proper direction. Fixes a file_data FN.

[33mcommit 2055b509a3efffde7f8c67f58601e790f3005e46[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 21 20:35:51 2012 +0200

    dcerpc/smb/smb2: more robust error checking, cosmetic code updates.

[33mcommit fc15cc7de1ec92db44c4856fc9add56d30caca1f[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Jun 21 00:10:38 2012 +0530

    some more mpm engine cleanup

[33mcommit f9612f3b834a133d4de90ae1b7aa30057782ba88[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Jun 20 23:26:44 2012 +0530

    mpm engine cleanup. Remove unnecessary flags

[33mcommit 5bb347106b4bf1925f4fb606d771b98e84cebad2[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Jun 16 14:16:10 2012 +0530

    cookie header now inspects Set-Cookie headers as well

[33mcommit 593b0cb150d76c71451fee17bd076b55d178cbf8[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Jun 16 14:14:23 2012 +0530

    unittests that fail, displaying the issue that we don't inspect set-cookie headers against cookie keywords
    
    The next patch in the series will fix the issue and let the unittests pass as well.

[33mcommit c0ac64e58ccf704a6daef82c23acb9c919584956[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 20 17:19:08 2012 +0200

    pcap: make sure thread count is 1 if config is missing for a device.

[33mcommit bc6cf43840b25c53211563ecbb23d7e7817e94c3[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Jun 16 10:47:30 2012 +0530

    #482 - use decode_flag for all decode TMs. Use the flag as a way to retrieve decode TMs from ThreadVars

[33mcommit 0d602d9cde4f6fb2312c9879fcc2841ad5a40ae0[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Jun 14 14:18:23 2012 +0530

    we now support offset, depth inspection against all packet payloads and stream messages

[33mcommit a34f91358dab52ae8093459d3aa9f14cd5fd41f2[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Jun 15 18:06:13 2012 +0530

    tests to highlight that
    
    - suricata treates sigs with offset/depth without any packet keywords as stream sigs
    - as a consequence suricata will FN on such sigs
    
    The tests introduced here will fail, displaying the issues.  The
    next patch in the series would fix the said issues.

[33mcommit c5cc9d454d47bb1a3507c49e6c188e3f61a60c72[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon May 28 11:57:12 2012 +0530

    stream raw reassembly fix

[33mcommit db8500bb26459ff2351f7fcfa229203576ab1d94[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Jun 16 17:52:55 2012 +0530

    fast pattern cleanup - Remove FastPatternSupportEnabledForSigMatchList() and all it's associated structures

[33mcommit 988c92f71c7b83454aa3effb1f6160a2cbba109a[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Jun 12 19:51:12 2012 +0530

    http user agent keyword + mpm + inspection + fast pattern support added

[33mcommit bd3a655aeb8975ae8c51a02213d40bf21047f5e9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun May 20 12:12:42 2012 +0200

    Add pcap workers mode.
    
    Some cards like Napatech or Myricom support libpcap wrappers that allow for
    multiple streams, queues, ringbuffers. The workers mode can be of use in
    those cases.

[33mcommit 34fde4ed75aa3298ba4cc023a270ffd40cee48a5[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon May 28 14:20:02 2012 +0530

    bug #471 - file_data fast pattern unittests added

[33mcommit 90ccbfd80a42d15cd2ed961e60a64b317dbaa4a1[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon May 28 12:46:27 2012 +0530

    bug #471 - http server body fast pattern unittests added

[33mcommit 850379552a8113701daf1268d97ff25b2f9da9a2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 11 22:47:24 2012 +0200

    rule analyzer: minor cleanups. Fix warning-only setting, allow true/yes/enabled for yaml option.

[33mcommit b210bf129025486f28ebec5e13d7c37dbb814d4c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 11 22:46:25 2012 +0200

    Fix commandline supplied yaml path being ignored.

[33mcommit c81020e9a3de851ff76d2266a28526e2a18c858f[m
Author: Eileen Donlon <emdonlo@gmail.com>
Date:   Mon Apr 30 19:23:23 2012 -0400

    feature 349 rule analyzer v1

[33mcommit a5268088cd7fbe00ce3270f6cbf047d6c4d8450e[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Jun 10 20:23:56 2012 +0200

    OpenBSD: fix tar command.

[33mcommit 2d22f667c23efa65fc8fe388cdfc44ec1987b84f[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Jun 10 20:23:55 2012 +0200

    config: use config file in sysconfdir by default.

[33mcommit 8dfddd0a0f73d1a322c9091d0e3b8cece7a42a8a[m
Author: marcos <marcos.e.rodriguez@gmail.com>
Date:   Thu Jun 7 13:58:31 2012 -0400

    Added -T switch to suricata output.
    
    Simply added the -T to be printed out when suricata is run without any
    arguments.  The capability to test a configuration file has been in
    suricata for some time, just doesn't show up as an option right now.

[33mcommit b744708f28de32e11dd81e2cc99c42249d49d9dc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 10 15:27:08 2012 +0200

    filemd5: implement negated matching.

[33mcommit ed9b07ef1f406a523c5858f959ad8e7c7432b0cb[m[33m ([m[1;33mtag: suricata-1.3beta2[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 8 15:38:57 2012 +0200

    Update changelog to reflect 1.3beta2 changes.

[33mcommit dbdab0cb1c91baf740ad6e233ca63cbdce14fc42[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 8 16:07:55 2012 +0200

    Disable dce unittests that tick off clamav. #458.

[33mcommit 1f5469fa5aea6ed17927cd59c1b6694a88d69d00[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Jun 8 02:04:15 2012 +0530

    bug #458 - unittest that uses clamav FPing payload disabled for now. Needs to be rewritten though with new payloads

[33mcommit 3df573219bf3443e72ab4fbdbf85195ac2add361[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 8 09:44:30 2012 +0200

    Fix compilation warning.

[33mcommit e3764b90c3bdfffaf8d98ec5bd71543a37b3f407[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 7 17:33:49 2012 +0200

    tls: debug compilation fixes, new tls decoder rule for tls.error_message_encountered event.

[33mcommit f08fc8d7c57cf8248dbd4842601ac2f1dfee1c10[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Jun 7 19:29:04 2012 +0530

    ssl connection error message event added. Remove warning log for the same error alert

[33mcommit 270ea253a24f1759d9c36d6b34abd6360c5633b0[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri May 18 21:18:30 2012 +0530

    ssl parser fix/updates

[33mcommit edb48c15578817351bd4eea476123cf8998e25c1[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Apr 26 17:24:39 2012 +0530

    We have a new probing parser to detect sslv2 records. todos to be covered later

[33mcommit fa121a1dd40dcf2ac70a6d43c5882ce7b7606ffd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 7 11:44:39 2012 +0200

    filemd5: handle case where no md5 support is compiled it.

[33mcommit 9f7588a7564419000441285ef6b0c8b0a711f093[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 6 17:47:26 2012 +0200

    Add filemd5 keyword that loads a list of md5's to match a file's md5 against.

[33mcommit 8cfc23ee22c2c6d54f2e0f6273f821aa31f40071[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 6 12:11:32 2012 +0200

    Add a new hash datatype to do speedy lookups of read only uniform data, like md5's.

[33mcommit 1bb0199dd79a80d12bd29c44089835042461d9b5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 4 13:28:07 2012 +0200

    pfring: protect pfring_set_bpf_filter with a lock as it's not thread safe.

[33mcommit d0e3df6057349d0f8e16843c0c2ced0de81c702d[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Jun 3 10:54:56 2012 +0200

    Autotools: make 'install-full' now run 'install' too.

[33mcommit 1906d317ec26be461a3f0449bbcf1cdb803d6113[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 1 09:04:07 2012 +0200

    unified2: minor cleanups

[33mcommit 5e955241229968d11223c5fdd848026b53db82fc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 31 19:56:07 2012 +0200

    Improve error reporting in case of syntax errors in the address and port vars.

[33mcommit 5b457807e2384b79ce3ef954f3d87bd24ba6f2f6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 31 19:09:47 2012 +0200

    file: fix file length and md5 tracking when file storing is disabled

[33mcommit 086a934ca98da3258ae2c8faecfd8277a7315cf9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 31 19:08:46 2012 +0200

    #449: fix md5 calculation in daemon mode.

[33mcommit 94c312512d737f2772e64e7ea8829b43a69cd91d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 31 11:33:44 2012 +0200

    pfring: move missing timestamp handling code to PfringProcessPacket.

[33mcommit a5f948f4369c3fb9846c088cb99a6bc087541f30[m
Author: Chris Wakelin <c.d.wakelin@reading.ac.uk>
Date:   Wed May 30 21:53:21 2012 +0100

    Fix missing timestamps in some flavours of PF_RING

[33mcommit f2f8dfd8d666ae2a69ea3c06408806fd710307c6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 30 16:43:26 2012 +0200

    http: add test to make sure a missing space between header name and value is not a problem (ref #474).

[33mcommit 66856831faec9d8202e2b58042b6be63e0421622[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 30 15:27:16 2012 +0200

    unified2: big rewrite to clean up code that deals with tcp segment logging.

[33mcommit a0e57f58e5d4ea12c2da22f14d59a53e51fa7b45[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun May 20 17:12:19 2012 +0200

    OpenBSD: introduce SCLocalTime function.
    
    This function is a wrapper to localtime_r. It is needed to avoid
    a compilation warning on OpenBSD. I'm forced to type the function
    to a non pointer first parameter. If not we will have to use two
    differents functions in OpenBSD where tv->tv_sec is a long
    (different from time_t).

[33mcommit 00948c86d508fc701c1e1a3b2bca073ffad50d1b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 10 14:29:16 2012 +0100

    Add debug messages to HTTP error/warning handling.

[33mcommit 40cda7e14942f999d6aeda62b0c90040224f900f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 10 14:28:50 2012 +0100

    Support FNAME and FCOMMENT extensions in gzip'd http content.

[33mcommit ed3599b3d8d57dae3e1bab520a589bbb49bdc7db[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 25 14:54:46 2012 +0200

    stream: improve error checking.

[33mcommit 5933cee2ff9c442b83614ada9a9c242c7b721967[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 25 12:47:57 2012 +0200

    replace: add missing malloc return value check.

[33mcommit dbf5d79e4397a86afb423b24822c4002c43d645e[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu May 24 18:38:36 2012 +0200

    pfring: follow API change
    
    As pointed out in issue #459, pf_ring API has changed. Since
    5.4.0 release pf_ring_open has one less argument.

[33mcommit 48da3bb48bb8a93eb45e5593ccc8f3b8abd17189[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 25 10:21:39 2012 +0200

    Make sure all fake packets have datalink type DLT_RAW. Make sure stream end packets set pkt size.

[33mcommit e2bf0fab35dbae1cb95fc5b6f253b34a041f75d6[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue May 22 22:23:10 2012 +0200

    OpenBSD: setup specific place for magic file.
    
    This patch fixes the path to the default magic file on OpenBSD.

[33mcommit 02e19502c7ecd46ae43b1aa7f168f1f80a02a486[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 23 13:38:18 2012 +0200

    unified2: minor cleanups.

[33mcommit 70b795e20a399ce2f7522d6b77a3afea5dc2ee27[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed May 23 00:40:03 2012 +0200

    OpenBSD: don't close std* to avoid problem.

[33mcommit 3181b492f4d54006dabc4040fc2a596cc14bde7c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 23 11:57:03 2012 +0200

    pcap: lock pcap_compile and pcap_setfilter calls as they are not thread safe. Fixes issues with bpf filters and multiple interfaces.

[33mcommit e3f66c52ec251bc8146631d2c32340a332c1ff0a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 23 11:19:04 2012 +0200

    pcap: fix double free issue with bpf filter and multiple interfaces.

[33mcommit a3cbe2e1c20f515f40b4dc3b5abc19f482bbf778[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 22 13:03:47 2012 +0200

    alert-debuglog: add size info for stream chunks and fix a typo.

[33mcommit 5f939412afb5e06b6bfbae7f8b71d6d80e49379f[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Apr 17 13:21:58 2012 +0530

    debuglog now uses the new mem buffer API. Improve file ctx locking to just the file write

[33mcommit cae46ab5eb566f191e3c565a07684a6004351e55[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 22 12:46:19 2012 +0200

    pcre: print filename and line number for JIT warning.

[33mcommit 468978334289ef9e95e1cbdd2cdc678301e2ed8e[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue May 22 00:55:02 2012 +0530

    bug #454 - rebase fix. Also use better error code to indicate invalid address var yaml entry

[33mcommit b3660dc5db96d68d8eacb48136157bd64ccd438f[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue May 22 00:46:30 2012 +0530

    bug #454 - add unittests for the address/port conf var validation function

[33mcommit 678763c3f49e1b5838febce4b1e0a3bf7c0d96c9[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu May 17 21:53:36 2012 +0530

    bug #454 - global check to see if address and port vars are properly configured

[33mcommit ea0d172693da41c606f19f3aad33c88fef744a04[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 21 13:54:45 2012 +0200

    No longer pass StreamMsg to output for alert logging, instead use the same callback code as is used for state alerts.

[33mcommit 88a21456e324f589575c4bccfaa63dee0e3b301a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun May 20 17:17:57 2012 +0200

    stream: keep segments in memory until we are sure the stream/state is inspected.

[33mcommit 64625675ce8fc4cf9b9421b1009f721a0794c64d[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu May 17 13:41:23 2012 +0530

    set stream_eof flag per stream, only when the stream initiates a close. Fix htp parser to close connection per direction based on this

[33mcommit 1f0272afebdf97ad8e6bde4e28cdb4ec3e0c1695[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed May 16 18:42:26 2012 +0530

    libhtp fix for response body processing. Increment data counter for response body processing when no contentlength or chunked scheme is used but the server closes the connection

[33mcommit b976ff228ac4502834a562e48ce60c876034cc84[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun May 20 13:41:12 2012 +0200

    ipv6: fix an AH header parsing issue. Add decoder event for non-null reserved fields.

[33mcommit 52044bb81be312dae22cb987180904866340bac0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 18 13:38:04 2012 +0200

    Improve error message for malformed urilen value.

[33mcommit d39b7b72bdb00fcd3a62878a37524e54e4ebdfe5[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri May 4 14:06:01 2012 +0530

    Add a nice error message when we exceeded address buffer limit for a rule

[33mcommit 7495f597737b6761be617f0bf41d1fba54f8ca0e[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri May 4 12:06:20 2012 +0530

    bug #451 fix for parsing address. Increase buffer size

[33mcommit f204b52e10e01a0ed0a8edabb82ffdc3aa835b14[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue May 15 21:32:47 2012 +0530

    bug #461 - http header shouldn't match on cookie header

[33mcommit 59057e542e49cfbc01b0ae6c9f87b565cdf9a9b0[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri May 11 19:25:55 2012 +0200

    Openbsd: Fix some warning related to inline usage.
    
    gcc on OpenBSD does not support C99 inline functions. This patch
    modify the build system to handle this. It also change the order
    of declaration of some functions to avoid to use them before
    declaring them as inline.

[33mcommit aef4835c56cb666c784e546d2b084e669f1bd13c[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri May 11 19:25:54 2012 +0200

    htp OpenBSD: fix inline related warning

[33mcommit 3df3be0efc3cb8b69017541da200391a23fe1b22[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri May 4 21:41:51 2012 +0530

    bug 418 - update http log to escape backslashes

[33mcommit 5d221942999ebda17ca09a0618a98e1b99cbc3ac[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue May 15 19:20:04 2012 +0530

    fix failing rate filter unittest

[33mcommit 7dec21be4ce48661f593d42ed23629d6a9892306[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue May 15 18:42:24 2012 +0530

    fix rate filters that reset the sig ctx data and handled action timeouts wrongly

[33mcommit 85db868a83053f7a3b22301687684eb9941c8675[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue May 15 18:27:37 2012 +0530

    indentation fix

[33mcommit c34713321a85689277fffb6391cefece48e87d70[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun May 6 22:07:22 2012 +0530

    fix rate filter alert suppression. Log error if rate filter has count of 0. Other minor fixes as well

[33mcommit 887b4e0b6a5c5eae8699e5acb47640f723ecd9bd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun May 13 01:48:07 2012 +0200

    Disable some stream rules by default, fix sid no typo.

[33mcommit bff2866aedf8912fe00da933a0546a9b9a54f195[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu May 3 12:35:53 2012 +0530

    more coverity fixes

[33mcommit 6c5b596ada4a390d868eac7af653857b0aeff357[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed May 2 13:40:08 2012 +0530

    coverity fixes

[33mcommit e624c56c83b6e506c9ff0b83fd595de286fb16f2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 2 10:16:57 2012 +0200

    Add TLS decoder event rule file.

[33mcommit 25360e14b259fad81726360748f81ae0b3ae34b9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 2 10:16:35 2012 +0200

    Don't enable UNITTESTS in AF_PACKET detection.

[33mcommit b22529d6f458232eaf9c3453fd98cfc464e55e76[m
Author: Eileen Donlon <emdonlo@gmail.com>
Date:   Mon Apr 30 12:01:41 2012 -0400

    disallow pcre /P/I/U with flow:to_client/from_svr

[33mcommit c7807a21b6f6f72ce3897147530c729446e66cde[m
Author: Eileen Donlon <emdonlo@gmail.com>
Date:   Mon Apr 30 11:56:09 2012 -0400

    disallow http_server_body with flow:to_server
    
    disallow http_server_body with flow:to_server or from_client

[33mcommit 2c24eb9e762a0903e8186187bb7c13f1a1f1e825[m
Author: Eileen Donlon <emdonlo@gmail.com>
Date:   Mon Apr 30 11:54:25 2012 -0400

    allow only one flow option in a rule

[33mcommit f7879f81e8ec3825d7e23cb370018cb568346c50[m
Author: Eileen Donlon <emdonlo@gmail.com>
Date:   Mon Apr 30 11:52:20 2012 -0400

    disallow file_data with flow:to_server/from_client

[33mcommit 36c83f2651ac22c6e4858bbd5537cabbccf491b2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 1 15:52:09 2012 +0200

    Minor textual update.

[33mcommit 0da93e84ca9b86bc0bb24fff6def78ded81eb1de[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Apr 24 13:03:09 2012 +0530

    bug 454 - Provide better error message when the user supplies a NULL address range

[33mcommit 09ec7ec728e81f3e5ce7bd8dbf9e00f3971b34df[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue May 1 13:39:01 2012 +0530

    bug 456 fix for byte_extract to have array of the right size to update values with

[33mcommit d2738c851f5819d691dd7588bccf5d0c01c9084a[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue May 1 11:51:47 2012 +0530

    fix failing fast pattern unittests

[33mcommit 6784ec536d000349911660e6c9d51cc86fbd942b[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Apr 27 16:01:58 2012 +0200

    Fix OpenBSD compilation.

[33mcommit e6dea5c40642cd474078711025d7b6e92fef2d3b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 3 18:19:04 2012 +0000

    Use less queues and threads in nfq autofp mode.
    
    Moved outputs from their own thread to stream/detect threads.

[33mcommit 8742e51fb0135f7cae0c12269c2af48a40d6c1e3[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Apr 24 22:21:02 2012 +0530

    fix detection filter unittests to reflect recent fixes

[33mcommit 64a04fc72107da22b26e0a15f1d7b6c62405f65b[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Apr 24 21:38:39 2012 +0530

    code cleanup

[33mcommit b48a686d657470ba0a5e8feae368ce96d8ba351f[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Apr 23 19:03:44 2012 +0530

    considering the tenths of a seconds in a packet, when calculating thresholds

[33mcommit b899146229def1aefa6fcec1cf8022c1e011e215[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Apr 23 13:46:34 2012 +0530

    fix detection filter. Had one extra alert than normal previously, now fixed

[33mcommit 493c3db4139f3e7d183244d3e69908078a1fc15b[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Apr 23 12:05:49 2012 +0530

    fix FNs for flow- only_stream and no_stream options

[33mcommit ad36d55771caa737af4ac4e87d243089b29b36c2[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Apr 20 10:57:11 2012 +0530

    code cleanup - indentation fix

[33mcommit 046819e1b8b01875190fdd21eee0f91e61affeaa[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Apr 20 10:55:16 2012 +0530

    bug 452 - fix detection bug for sigs that don't have a content but need payload inspection

[33mcommit 608f4fe78732aa1494fd5ed03368abb3948e3d45[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Apr 20 14:51:06 2012 +0530

    bug 452 - enable http extra callbacks for configs other than the default configs

[33mcommit 225b917e93358c2e377bee0718c3b273de8e8c06[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Apr 21 13:10:59 2012 +0530

    remove unused stream ssn flag - STREAMTCP_FLAG_TOSERVER_REASSEMBLY_STARTED

[33mcommit 573f31b271d8ab9c7659835d897e51b59d48634b[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Wed Apr 18 11:25:12 2012 -0600

    Fix linking with libdag

[33mcommit cfd64c49ec3ecdba6e27b5bc4debb5e61fa57d02[m
Author: Martin Holste <mcholste@gmail.com>
Date:   Sat Apr 21 09:41:06 2012 -0500

    Included Action::Syslog by default in config

[33mcommit e179cbc236b431ac88ef48a1ad002ee2bf2333bc[m
Author: Martin Holste <mcholste@gmail.com>
Date:   Sat Apr 21 09:32:58 2012 -0500

    Added Syslog action for logging to local syslog

[33mcommit 61d5fe33c9a68d637c6e8a5d3a62b1296bdd4332[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Apr 16 22:12:07 2012 +0530

    Free membuffer before clearing enclosing parent instance

[33mcommit 98c30be2db5ecafd26f29303f95409cc8379b95f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 13 16:52:32 2012 +0200

    ipv6: improve handling of packets with duplicate (or more) ipv6 extension headers.

[33mcommit d378b76c04d1946156aeb75bb8dba6f1ae4cdf6d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 5 18:33:03 2012 +0200

    http: body inspection improvement
    
    Improve http_client_body and file_data performance when request and
    response body limits are set to high values.

[33mcommit 4354434522dce597b2c9fa2aa3a15d2154f563bb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 11 14:38:34 2012 +0200

    Add htp error debug printing.

[33mcommit 9f0447cb38323778288f7ce197429faceb6f9d15[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 11 13:50:08 2012 +0200

    Flag napatech receive tm as well.

[33mcommit cd4705e699ee808b223e089364cc278594db62c1[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Apr 11 16:28:40 2012 +0530

    flag recieve acq tms that previously missed the receive_tm flag

[33mcommit f2198417951ceb6f3aafe79d2843281f6d0aa5ac[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 11 12:56:05 2012 +0200

    Misc buffer API update.

[33mcommit 4327aaf68ac84016f0e4884d3f08a5e19377ad4b[m
Author: Eileen Donlon <emdonlo@gmail.com>
Date:   Wed Apr 4 10:43:01 2012 -0400

    reject pcre modifiers U with B

[33mcommit 195eb42d4eb0fa7f57bef282abc22da69c4c7594[m
Author: Eileen Donlon <emdonlo@gmail.com>
Date:   Mon Apr 2 09:17:31 2012 -0400

    allow only one content to use fast_pattern

[33mcommit 1d59324a68695f3e591645b8f658ca74d6242c38[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 10 17:52:32 2012 +0200

    Add missing space to http.log.

[33mcommit b5a399590406d3bc60142dde4893949f003c9e33[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 10 17:47:02 2012 +0200

    Fix minor memleak in an start up error condition.

[33mcommit 69ed12fd28c15932cca922662caab11c4bc88217[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Apr 5 08:58:19 2012 +0530

    Introduce new buffer API that lets you create and manage a buffer. Update http log to use this as well

[33mcommit 98a8234e0ad1053cab59213814012e25d50587eb[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Apr 5 20:45:38 2012 +0530

    csum function fixes. Improves alert accuracy. FPs on invalid-csums decoder rules fixed

[33mcommit 46e1145cffe72121eae37c7c8db79806795411a9[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Apr 7 10:03:19 2012 +0530

    minor code cleanup

[33mcommit 37f66e5f4634e84e8c81f02847343403b713ce38[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Apr 6 00:37:16 2012 +0530

    update handling negative offsets in byte_extract. Also improve validation in byte_extract to not extract values out of the buffer range

[33mcommit 18837dce9247f8a18df8faf2560e902c0f22ef10[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 5 16:42:24 2012 +0200

    http: improve multipart parsing, skip empty records.

[33mcommit fbe0206c36b6bf4fd83d0c812aebb4f2a785aaa2[m[33m ([m[1;33mtag: suricata-1.3beta1[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 4 14:26:40 2012 +0200

    Update Changelog for 1.3beta1

[33mcommit 910eb7066096310218921607c9942edab1e5b8ba[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 4 11:20:10 2012 +0200

    Fix minor compiler warning.

[33mcommit 79691f675add835ac9151b67f087b84072148911[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 4 11:18:15 2012 +0200

    defrag: don't increment recursion level for reassembled packets. Fixes defragged packets not seeing the same flow.

[33mcommit 90548837e3b1a82c7ec997870cbd03a3e63b1047[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Wed Mar 28 15:21:00 2012 -0600

    Update the ERF file runmodes to support autofp and single.

[33mcommit 1f801d316c4cc951135c4afcda45b942ac14e10f[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Thu Mar 29 13:41:37 2012 -0600

    Apply changes recommended by Stephen Donnely of Endace: - Skip pad records. - Don't log error on EGAIN, just try again. - Skip over extension headers. - Check we have the full packet (skip partial packets) - Remove obsolete rlen check. Also remove max_pending_packets to process more packets per iteration.

[33mcommit 07945f04cec2363e6269c3d9884f18f4efda53c5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 3 20:18:08 2012 +0200

    ipv6: make sure we pass the defragged packet from the ipv6 layer to the decoder.

[33mcommit c682c5f1dd142c5ccf7f204f3dc0e63db93051de[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 3 14:57:13 2012 +0200

    Fix error in proto handling for ipv6 in fast.log.

[33mcommit 4df25ef499e263a77ea7a4dffdbb27a3b4d9b2db[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 3 00:07:57 2012 +0200

    Apply http.log formatting fix by Chris Wakelin.

[33mcommit e874a5a3deef4b37793d0cf2c90c803acf95a697[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 2 19:25:13 2012 +0200

    Fix error in per packet detection engine profiling.

[33mcommit 3f94b120070501631d7bc651e451c428784b97d2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 2 19:16:01 2012 +0200

    Minor stream optimization.

[33mcommit b9e5202f3c55f6a76169427e3a970b845a3da665[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 2 18:07:32 2012 +0200

    Make fast.log use finer grained locking, move protocol lookup outside of the lock.

[33mcommit b8e741de9eaadf50d13dea48b6d171b87682975f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 2 15:45:16 2012 +0200

    Minor optimizations to unified2 and fast.log.

[33mcommit 3d6b51a8c495c7491229cce2626f93b4eaf6c30c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 2 15:44:47 2012 +0200

    Small compile fix.

[33mcommit b6c0d9e9269c38da76d54bb13cd3085e924e17d7[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Mar 30 16:07:29 2012 +0530

    update util-print.c to use new print macro

[33mcommit 090d09811406a77ce390341e6413df1413303ad5[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Mar 30 14:01:03 2012 +0530

    provide generic macro to buffer data using snprintf

[33mcommit 95ea105a150402042dcadb638675356daa74a6ca[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Mar 29 01:04:41 2012 +0530

    update util-print.c to use snprintf

[33mcommit 23b64c5c08b1ec6c685fec633065d242393653dc[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Mar 29 00:32:22 2012 +0530

    restructure http logging to use fine grained locking

[33mcommit 40fcae3aa0e8156fb8109713fa714e8763473a28[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 30 17:40:34 2012 +0200

    Minor unittest fixes to make Coverity happy.

[33mcommit 5c397e3a533e8e6297c49c4fa4f9befb143ed1e2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 30 15:09:04 2012 +0200

    flow: add missing unlocks for rare error condition at flow shut down.

[33mcommit 31b673718c323e1863a09f7dc2f46c5dfac5a11a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 30 14:47:45 2012 +0200

    host: convert use_cnt to a atomic var (like in flow).

[33mcommit a39529db5dbb12cf0632fdbe68991858f60c42a9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 30 13:07:00 2012 +0200

    ipv6: fix routing header parsing leading to rejection of valid packets.

[33mcommit 374947c354b8f1b8693316f5f7d83ff690ee8b9b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 30 12:43:15 2012 +0200

    ipv6: properly deal with packets containing a FH header that has offset 0 and no more frags flag set.

[33mcommit 92e7a7d2546ddd65ec528d1ae081b2e0779ffd3a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 30 11:26:02 2012 +0200

    ipv6: fix detection engine using the originals IPv6 header's nxt hdr value instead of the upper layer one.

[33mcommit 073ce64786b2f71b39bde32f3b7d7a1bd657952f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 30 10:09:03 2012 +0200

    Fix parsing of tcp-pkt and tcp-stream sigs, add unittest.

[33mcommit c22755fec5d46831f889cf9bdb291694c32f6a2c[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Mar 29 10:09:18 2012 +0530

    fix cppcheck analyzer warnings - bug 439

[33mcommit 081b0e05a23cf7eeb41b85c0e60dd098d6e99c3c[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Mar 28 20:26:05 2012 +0530

    restructure disabling receive threads. Introduce new flag to indicate that threads have finised running

[33mcommit 91f42b6f41037bb649f0c37eee8db3aa906dc6f6[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Mar 28 17:19:05 2012 +0200

    pcap: fix "work by luck" code.

[33mcommit d8d9b0983fbd228a191a9bcc440ee5ba75561867[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Mar 29 10:40:33 2012 +0200

    af_packet: misc improvements.
    
    Improve block count and only copy snaplen length to avoid overflow.

[33mcommit 0a80e362aacfa8ed98ced3dc025b4d548c2bdc3d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 29 13:33:16 2012 +0200

    Fix some minor clang scan-build warnings.

[33mcommit 4ebb6b7faec068e1e0fe3f7aa0e2ab3640cdfffd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 28 18:59:26 2012 +0200

    nfq: switch locking code to macro's to lock profiling can track the exact lock locations.

[33mcommit 06d7fb5428a7033be7e381beca44b84df55b4a71[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 28 16:26:22 2012 +0200

    Fix CUDA build from a release tarball.

[33mcommit fea6a426a5eaf905d915acbe1692214eb1baf7a8[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Mar 28 10:47:36 2012 +0530

    cleanup killing threads. As a consequence fixes invalid read/writes in tmqh flow

[33mcommit f0e45786404e05ce5549e815a4bc1a89b246db52[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Mar 28 09:43:05 2012 +0530

    cleanup junk code in flow qh

[33mcommit bf4ab2f7e1a22661a10f9fe65684632ecec5d132[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 27 17:05:39 2012 +0200

    Fix misc issues picked up by coccinelle.

[33mcommit a8095bd8d68b7de7dd140f0c8b67d0c6e085ea8f[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Mar 27 17:40:15 2012 +0530

    fix compiler warnings

[33mcommit af4e48016335b7bd7b656b4989c8562a7b742c40[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 27 14:17:37 2012 +0200

    Fix __WORDSIZE redeclaration warning on Windows builds.

[33mcommit 105173939b09c115a353b0e811578b20d64fddb9[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Mon Mar 26 13:58:24 2012 -0400

    Implement single, autofp and workers run modes for DAG interfaces. Includes multiple interface support.
    
    Remove auto mode due to bad performance.

[33mcommit 8e064001c359c7274734540756bb5768abb50ea7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 27 13:26:04 2012 +0200

    Fix compilation of atomic api spinlocked fallback code.

[33mcommit ac2d13d62b7d0c2bb54ef211ba8481176b25ff78[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Mar 26 18:57:42 2012 +0200

    Improve check of min requirement for AF_PACKET.
    
    As pointed out by #416, AF_PACKET detection support was not accurate
    enough. This patch improves the check by doing a verification of
    the availability of the feature level needed to build AF_PACKET.
    We need TPACKET_V2 which is available after 2.6.27.

[33mcommit b2455b6afa569a1480651335dc5c8d6bb7c4d1a5[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Mar 23 10:17:03 2012 +0530

    cuda pb tm should be in a thread of its own + pkt_acq should be as free as possible

[33mcommit 2995867328531a6473705359587f79a0e1d3c861[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Mar 23 08:48:10 2012 +0530

    b2g cuda up, compiling and running

[33mcommit f1863370a5e93d6e37a80eb6168d2dfa11a74f8a[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Mar 25 12:44:56 2012 +0530

    clean log pcap

[33mcommit 6392202872ad05a3f94d86e4a07b7829e9b78251[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Mar 25 12:09:30 2012 +0530

    restructure log pcap to use a different setup, which is resilient to thread failure/restarts

[33mcommit fd21b83f3e5d501226b26d1af6193b5210c1a1d6[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Mar 25 11:13:44 2012 +0530

    don't return TM failure on failing to remove log file

[33mcommit 4bc907414b5d6d076b369c91aa69cb73f5733617[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Mar 25 11:16:53 2012 +0530

    init every new pf instance in log pcap

[33mcommit cfd4d07dd029d09125c869f4ec6ddac834f83f40[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 27 10:38:15 2012 +0200

    host: convert host hash to use lookup3.c

[33mcommit c10370907a95d586f987ea341c14ed6d65802af5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 27 10:05:51 2012 +0200

    flow: make flow use lookup3.c hashing algorithm. Improves hash table distribution.

[33mcommit 20c08ca47b01c5bf601ec22bd0820045057d2ecd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 27 10:02:52 2012 +0200

    hash: add lookup3.c by Bob Jenkins
    
    Found here:
    http://burtleburtle.net/bob/hash/doobs.html
    http://burtleburtle.net/bob/c/lookup3.c
    
    From the file header:
    
    lookup3.c, by Bob Jenkins, May 2006, Public Domain.
    
    These are functions for producing 32-bit hashes for hash table lookup.
    hashword(), hashlittle(), hashlittle2(), hashbig(), mix(), and final()
    are externally useful functions.  Routines to test the hash are included
    if SELF_TEST is defined.  You can use this free for any purpose.  It's in
    the public domain.  It has no warranty.

[33mcommit 19a7e7f39504a885fe2804e853ada8134655f9af[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 24 12:23:50 2012 +0100

    flow: create a flow lock macro API, implement it for mutex and rwlocks. Mutex remains the default.

[33mcommit fea5e68a7b30854b729e559bbb30105749d1e0fb[m
Author: Xavier Lange <xrlange@gmail.com>
Date:   Fri Mar 23 01:30:13 2012 -0700

    Include conf_test in special cases for unset RUNMODE

[33mcommit 1d774dae61603a49486292d2999e52c48ceb29c3[m
Author: Xavier Lange <xrlange@gmail.com>
Date:   Tue Mar 20 14:02:49 2012 -0700

    Make conf_test local. Simplify if/else to if.

[33mcommit 1ae10b9a42048e4024cac30726bf65e142e813eb[m
Author: Xavier Lange <xrlange@gmail.com>
Date:   Mon Mar 19 03:58:36 2012 -0700

    Do not spawn threads for conf test

[33mcommit eaacc5d0fe0390fa164e5391629804e387051d49[m
Author: Xavier Lange <xrlange@gmail.com>
Date:   Mon Mar 19 03:32:03 2012 -0700

    Added conf_test flag and behavior

[33mcommit 22349f863be5a3215437b64b98cb7e1abde244cb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 22 18:26:40 2012 +0100

    file magic: don't disable inspecting magic for both directions if files in only one direction don't need magic.

[33mcommit ba4613aef1ef3d441ba1688453fb10a2cd16a8a2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 22 17:02:41 2012 +0100

    Add host section to stock yaml.

[33mcommit f4b542d703ee9a78924eb4194ae2f1cc2209e5de[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 22 17:02:25 2012 +0100

    Enforce memcap limit before allocating hash table in host and flow engines.

[33mcommit bd66a4bba9672cf46e404d94fcc74aba3e10d070[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 22 17:01:34 2012 +0100

    Fix typo in spm prototype declaration.

[33mcommit 4d192a688138ede3c4d7309a24ab839093096f96[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Mar 22 17:15:15 2012 +0530

    update all spm algos to use 16 bit pattern lengths. Should compress a lot of tables

[33mcommit 8d1fe9f2fa40953cf8a46fb5f90a176a4a6fbb50[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 22 13:17:51 2012 +0100

    Make 'autofp' the default runmode. Increase default max-pending-packets to 1024. Move some advanced and uncommonly changed settings down in the stock suricata.yaml. Closes #433.

[33mcommit da633d490b8fff71d451df5eb3a3bbff9f3d0a4d[m
Author: Eileen Donlon <emdonlo@gmail.com>
Date:   Tue Mar 20 11:02:21 2012 -0400

    fix misleading comment

[33mcommit 793478a8324316549f19cbf1b1aa14f014817e20[m
Author: Eileen Donlon <emdonlo@gmail.com>
Date:   Tue Mar 20 10:59:47 2012 -0400

    reject rules with invalid hex digits in content

[33mcommit f2e85ab9ee31ecd7b49bdc1904f655c935c539bf[m
Author: Eileen Donlon <emdonlo@gmail.com>
Date:   Wed Mar 21 12:12:38 2012 -0400

    reject rules with an invalid ttl range

[33mcommit 4157d9408d6e7f10c1d82e43d4360ce36ce032bf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 22 11:53:35 2012 +0100

    Various small flow and host table fixes.

[33mcommit aded3c5578cad0ebd82fc84008f4dc06e114374b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 22 12:40:49 2012 +0100

    http: 'HTTP Host header ambiguous' after libhtp update. It now fires if hostname is present both in URL and Host header and the 2 are not equal.

[33mcommit ef52ba8f57bb4f8c10010f2a913e43133852a4ca[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 22 12:33:57 2012 +0100

    libhtp: update to sync with upstream 0.2.x
    
    Patches applied are:
    
    commit 85f5bbc39dda2eaf03ccb6111cbf5daf1c7b75f9
    Author: Craig Forbes <cforbes@qualys.com>
    Date:   Wed Mar 21 16:45:04 2012 +0000
    
        Backport of STREAM_STATE_TUNNEL fix to 0.2.x.
    
        Return STREAM_STATE_TUNNEL after entering a tunnel.
    
    commit cfbe28cd4ddde6d77c5b0d5935c8717834971441
    Author: Craig Forbes <cforbes@qualys.com>
    Date:   Wed Feb 29 16:52:44 2012 +0000
    
        Backport of the fix for HTP_AMBIGUOUS_HOST flag.
    
        The flag is only set when the URI host on the request line is different
        than the value in the Host: request header.
    
        Resolves https://github.com/ironbee/libhtp/issues/20
    
    commit 196dfb1c8b7a5996389c719e2c912163c5607916
    Author: Brian Rectanus <brectanus@qualys.com>
    Date:   Wed Feb 8 08:35:46 2012 -0600
    
        Add missing function declaration in header.
    
    commit 7878fec818167fcdf7c8c4852ac0dafa1ae445f1
    Author: Brian Rectanus <brectanus@qualys.com>
    Date:   Wed Feb 8 08:35:07 2012 -0600
    
        Revert part of previous patch, which was invalid.
    
    commit bafef3d4cbfc307960677c6bd682ae195fe986cd
    Author: Brian Rectanus <brectanus@qualys.com>
    Date:   Wed Feb 8 08:36:06 2012 -0600
    
        Update version to next dev release.
    
    commit 62cfdb41ba84f2666c7526e2e5d9e10ab8e220f1
    Author: William Metcalf <wmetcalf@qualys.com>
    Date:   Wed Feb 1 13:19:48 2012 -0600
    
    Many thanks to Will, Brian and Craig.

[33mcommit 18e81b7ba90382e481171a207e81eaf8120ef2dd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 20 12:55:45 2012 +0100

    Bail out early if we're in http tunnel mode.

[33mcommit 0788656ef721dba51138d3556a6ebf68314fd908[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 20 10:46:38 2012 +0100

    Silence ac-gfbs debug message.

[33mcommit da3c5bf84d4cc1ac910b52514d8a8e2276081433[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 20 10:15:02 2012 +0100

    Minor error message cleanups

[33mcommit fa22a26366159847ae367022f6ce4bbde9c38a5c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 20 10:14:43 2012 +0100

    profiling: fix lock profiling int print issue.

[33mcommit 3b79dac2b746c85e66c1e3eb68ac8db18757f828[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 20 10:13:52 2012 +0100

    flow: fix atomic var not being initialized and destroyed.

[33mcommit 60dbd34f936dcb44a83e5324a261defb1b5aa400[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 19 13:46:47 2012 +0100

    Fix bug in app layer event handling causing http event rules to fail loading.

[33mcommit 40ed10ab3857f68058bd094f501a20b16e838b9f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 14 13:32:40 2012 +0100

    Minor flowq updates.

[33mcommit 7115fa3e727a7a1cabfd60bf2caff07a1d864c37[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Mar 12 20:17:03 2012 +0530

    Introduce the address hash based flow q handler

[33mcommit 5ffb050ada6b2e9b22e94ef8f11ba11e38f5922e[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Mar 12 19:48:49 2012 +0530

    Adapt flow tmqh counters to be atomic vars. Remove support for active flows q handler. Introduce SC_ATOMIC_SET

[33mcommit 3faed5fe794fb1d6fdd3d7ae7542c4313fbb639b[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Jan 12 16:53:02 2012 +0530

    Support freeing flow q handler out ctx. Adapt unittests to use the same

[33mcommit d01589c9d8f47d6915565011ba6af59c02462fcd[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Jan 12 16:39:47 2012 +0530

    neaten flow q handler code

[33mcommit 0fa14292c0d630f3aacf20175e31dbd4f8d6ffa6[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Jan 12 16:31:08 2012 +0530

    Enable unittests for flow q handler

[33mcommit 4e417b72b54ab7bd3a59d92db1cf529a745909e6[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Jan 12 00:03:13 2012 +0530

    support flow q handler schedulers active_flows and active_packets. Support new yaml option autofp_scheduler. Support for printing q handler stats as well

[33mcommit e252048900911693fc60b25574181582fce78c75[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Dec 27 17:56:13 2011 +0530

    support for custom flow qhandlers - round robin support added

[33mcommit d866f389820f64eaddd252bf10e284fcd0cd1702[m
Author: Pierre Chifflier <pierre.chifflier@ssi.gouv.fr>
Date:   Tue Mar 13 22:08:39 2012 +0100

    TLS: add variable to store the error code in the decoder
    
    Use a variable to store the decoding error code if required, and remove
    the calls to SCLogInfo and SCLogDebug.

[33mcommit 218b5d3ba032f8b7e158ab2325d13b51e0007450[m
Author: Pierre Chifflier <pierre.chifflier@ssi.gouv.fr>
Date:   Sat Mar 3 14:11:38 2012 +0100

    TLS app layer: misc fixes, reorder some fields to same memory

[33mcommit 3df341dbeb0cec1a83198fc7c22d4fb3be590480[m
Author: Pierre Chifflier <pierre.chifflier@ssi.gouv.fr>
Date:   Tue Feb 28 15:08:43 2012 +0100

    Add TLS decode events

[33mcommit 71fa4a528543612231d73baef6025436aa38105c[m
Author: Pierre Chifflier <pierre.chifflier@ssi.gouv.fr>
Date:   Mon Feb 27 17:23:24 2012 +0100

    TLS: replace SigMatchAppendAppLayer with SigMatchAppendSMToList

[33mcommit a9bb17e09760ba3951ab094101f53b2d81d68af1[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Dec 19 11:14:21 2011 +0100

    tls-handshake: add sanity checks.

[33mcommit 01c7e5bde642078c3690283c8bfb1b7ef73ed42e[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Dec 19 10:22:06 2011 +0100

    tls-handshake: Add some missing free in error handling.
    
    When DecodeAsn1BuildValue function fails, it may be necessary to
    do some clean-up in the calling functions.

[33mcommit 480db00fd770991a1a9dbcccfbadb24070f57e69[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Dec 19 10:20:50 2011 +0100

    tls-handshake: DecodeAsn1BuildValue should return -1 for error
    
    This patch modifies DecodeAsn1BuildValue to have it return -1 when
    there is a too big number of bytes announced in the ASN.1 message.

[33mcommit 8f885ce8108dd1885bd5fec8d55cb111890a82e8[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Nov 28 10:14:28 2011 +0100

    TLS parser: add sanity checks on loop
    
    It was possible in some loop to read data placed after the buffer
    resulting in invalid/unpredictable value. This patch fixes two of
    this issues.

[33mcommit d1c56e810b4152b62e35cc5d2dd29501ac09c16f[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Nov 27 12:28:36 2011 +0100

    TLS parser: add sanity check

[33mcommit cb1a75fc9e8d162eaa4777de313cd005c0742b01[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Nov 25 18:40:34 2011 +0100

    TLS parser: modify OCTETSTRING
    
    This patch does on over allocation of 1 for the OCTETSTRING
    to be able to add a 0 at the end. This will then
    allow us to use the string in printf.

[33mcommit 5a65a17f00f434e4711d0b704f33e475f5358c40[m
Author: Pierre Chifflier <pierre.chifflier@ssi.gouv.fr>
Date:   Sat Mar 3 15:18:23 2012 +0100

    TLS parser: add handing of UTF8STRING
    
    Some certificate contains UTF8STRING which is a subset of
    OCTETSTRING. This patch adds support for this type of string.

[33mcommit 6c2c6cfface88c83f92dff4df7159d13f4e853ff[m
Author: Pierre Chifflier <pierre.chifflier@ssi.gouv.fr>
Date:   Sat Mar 3 15:18:07 2012 +0100

    TLS keywords: fix match regex (remove extra space)

[33mcommit 8457ce3b111f2c223f9a2122180c054b4f862490[m
Author: Pierre Chifflier <pierre.chifflier@ssi.gouv.fr>
Date:   Sat Mar 3 15:17:14 2012 +0100

    TLS app layer: rewrite decoder to handle multiple messages in records
    
    Since we now parse the content of the TLS messages, we need to handle
    the case multiple messages are shipped in a single TLS record, and
    taking care of the multiple levels of fragmentation (message, record,
    and TCP).
    Additionally, fix a bug where the parser state was not reset after an
    empty record.

[33mcommit 4bb5e2a79d6aaadbb0ed12bbf1378f6a61c45e5d[m
Author: Pierre Chifflier <pierre.chifflier@ssi.gouv.fr>
Date:   Thu Nov 24 17:50:47 2011 +0100

    TLS app layer: fix number of bytes processed on SERVER_CERTIFICATE message.
    
    Change the function to return the number of bytes processed, and fix a bug
    where the input buffer was wrong.
    
    Signed-off-by: Pierre Chifflier <pierre.chifflier@ssi.gouv.fr>

[33mcommit 38c213cb842c367c46958376e24bc183c7154570[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Nov 9 15:55:43 2011 +0100

    tls app layer: add missing free
    
    issuerdn was not freed at exit.

[33mcommit fce2437dc22f961e82c1ac768a77178df32765b3[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Nov 9 15:14:21 2011 +0100

    tls app layer: handle negation on subject and issuerdn.
    
    This patch adds negation support for tls.subject and tls.issuerdn
    matches.

[33mcommit ad0e05a1123a341be95a06419dc6b029e84a2a31[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Nov 9 11:37:12 2011 +0100

    TLS app layer: Add tls.issuerdn keyword.

[33mcommit afba81bb27c8c2fc1cd5c9ccb68cf67da5687d67[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Nov 8 15:46:59 2011 +0100

    decode ASN.1: Factorize value reading
    
    This patch factorizes the reading of integer value and fix some
    indentation. By convention, a value of 0xffffffff is returned
    if the size of the integer is too big. In this case, the hexadecimal
    value (which is also read) must be used.

[33mcommit 53e5421a24621b5b37bf6c85ca68b903a82006bf[m
Author: Pierre Chifflier <pierre.chifflier@ssi.gouv.fr>
Date:   Fri Nov 4 18:18:46 2011 +0100

    TLS handshake: get TLS ciphersuite and compression
    
    Decode the SERVER_HELLO message to extract the ciphersuite and compression
    chosen by the server.
    
    Signed-off-by: Pierre Chifflier <pierre.chifflier@ssi.gouv.fr>

[33mcommit 4be65fd0162fa3ba6381629a980cca1452f7ea2e[m
Author: Pierre Chifflier <pierre.chifflier@ssi.gouv.fr>
Date:   Fri Nov 4 18:18:45 2011 +0100

    TLS handshake: decode the SERVER_CERTIFICATE message
    
    Add a decoder for the SERVER_CERTIFICATE during a TLS handshake, extracts the
    certificates and keep the subject name.
    Add the tls.subject keyword for substring match in rules (TLS layer).
    
    Signed-off-by: Pierre Chifflier <pierre.chifflier@ssi.gouv.fr>

[33mcommit f77fcdb3e8df731a4d1d642b1da8eb9f242fd1db[m
Author: Pierre Chifflier <pierre.chifflier@ssi.gouv.fr>
Date:   Fri Nov 4 18:18:44 2011 +0100

    Add ASN.1 parser for X509 certificates (in DER format)
    
    Signed-off-by: Pierre Chifflier <pierre.chifflier@ssi.gouv.fr>

[33mcommit 0b3f6c464a07df13a2b81c5fcf9535ce3db14bb1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 19 11:50:50 2012 +0100

    Make list-app-layer-protos option name match the help explanation. Make sure it works w/o passing a config.

[33mcommit 109662450d45fa92270be8a7bd373ae1bd94119f[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Mar 19 09:06:16 2012 +0530

    Add new command line option --list-app-layer-protocols to list supported app layer protocols in sigs

[33mcommit 7511fa67cd57a6add93dcbf89e101fb0f7ad0ce7[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Mar 13 17:05:53 2012 +0530

    Add BUG_ON to avoid overruning AppLayerDetectDirection map array

[33mcommit 9376967e65cac9a62d36dd780033ddc3df60c9c8[m
Author: Eileen Donlon <emdonlo@gmail.com>
Date:   Mon Mar 12 18:41:53 2012 -0400

    reject rules with duplicate content modifiers
    
    reject rules that have multiple depths, offsets, distances, fast_patterns, nocases, or rawbytes for the same content.

[33mcommit 0bb4ff34b8f8d96596103c0c0854009078da605d[m
Author: Eileen Donlon <emdonlo@gmail.com>
Date:   Tue Mar 13 15:31:13 2012 -0400

    added null checks for init_hash to all ac mpms

[33mcommit 617edf469c9961f026bc2804230c3124c1c35d7d[m
Author: Eileen Donlon <emdonlo@gmail.com>
Date:   Mon Mar 12 20:31:58 2012 -0400

    reject http_client_body with inconsistent flow dir
    
    reject http_client_body with flow: to_client or from_server

[33mcommit feff6f7705b4ce4b36bf07d7145d5dc064bc8a36[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 19 10:42:40 2012 +0100

    Clean up error message.

[33mcommit 85c364da09b4c968a783fc04e00b54d7f831ef4b[m
Author: Eileen Donlon <emdonlo@gmail.com>
Date:   Wed Mar 14 12:43:38 2012 -0400

    disallow-use-of-configuration-file-with-unittests

[33mcommit d908e707d72923cee0712644d223bd8bf6223d4a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 19 10:28:34 2012 +0100

    profiling: add per lock location profiling
    
    Add profiling per lock location in the code. Accounts how often a
    lock is requested, how often it was contended, the max number of
    ticks spent waiting for it, avg number of ticks waiting for it and
    the total ticks for that location.
    
    Added a new configure flag --enable-profiling-locks to enable this
    feature.

[33mcommit 41e9dba20bdf74344f352e05431aa27d9550e527[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 15 16:22:47 2012 +0100

    Profile pcap file callback.

[33mcommit ff8755af5c1b89a7f17b2150522bc9523d4c6a1c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 15 12:04:26 2012 +0100

    Make sure stream debug code is only used in debug mode.

[33mcommit 9696902b68c6a0f3746282f8f9d026686a2508ab[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 15 12:01:09 2012 +0100

    Small http.log improvement: bail out early if there is nothing to log. Make output locking more fine grained.

[33mcommit e581ec7dffab8fbf0c791037e7db5df8e0b58b03[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 14 19:19:02 2012 +0100

    Fix 2 compilation issues.

[33mcommit c0a2cbd4786e7ade36c104ba0cb021402134d698[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 14 19:12:59 2012 +0100

    Move over src and dst thresholding to use host table. Fix a bug in threshold 'both' handling.

[33mcommit a05df345de3560c720d73e06da8567b630e40b91[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 14 07:56:11 2012 +0100

    Introduce host table, make tag use it
    
    Add a host table similar to the flow table. A hash using fine grained
    locking. Flow manager for now takes care of book keeping / garbage
    collecting.
    
    Tag subsystem now uses this for host based tagging instead of the
    global tag hash table. Because the latter used a global lock and the
    new code uses very fine grained locking this patch should improve
    scalability.

[33mcommit db24258acf214f90e56c31440f91a2c498e71b7a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 12 12:36:49 2012 +0100

    Undo changes from 88b8f15663076560b2237e6d8b8cae7e23d92bb6. Atomic stack implementation had a-b-a problem.

[33mcommit 88b8f15663076560b2237e6d8b8cae7e23d92bb6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 10 13:31:12 2012 +0100

    Add atomic stack implementation. Convert flow spare queue to use this stack. Remove now unused flow-queue code.

[33mcommit 4a186bcf1d3c8aa180c4a95d4fa6fe048b9c3f26[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 9 18:50:23 2012 +0100

    Fix invalid declaration of enable_nss and enable_nspr in configure.in.

[33mcommit 979edf0b974d7d8dbe1dd0020590fbb43f668850[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 9 17:45:09 2012 +0100

    Add way to profile mutex/spin locks per thread module.

[33mcommit fddaca6e8b8458be050e2c771854992a5bef7bae[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 9 13:19:02 2012 +0100

    Implement stream memcap enforcements using atomics instead of spinlocked counters.

[33mcommit d72b82fae07c44b55aa9d289a6245f24aff183ae[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 9 18:36:07 2012 +0100

    Misc fixes.

[33mcommit 8448333bdd8e30fc24e9aa456fe2faf270208f8f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 9 18:34:25 2012 +0100

    Remove trailing zero's from some counters output.

[33mcommit 0150e66ede787dd0b164d5d4a3195f69dabc7b23[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 9 18:31:46 2012 +0100

    flow engine: improve scalability
    
    Major redesign of the flow engine. Remove the flow queues that turned
    out to be major choke points when using many threads. Flow manager now
    walks the hash table directly. Simplify the way we get a new flow in
    case of emergency.

[33mcommit da5087a0c0398fbb86e3f4d4e33c5c175b371c70[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 8 16:36:14 2012 +0100

    Fix broken unittest.

[33mcommit aae7ea5e676502500518dc735c77e4e44a62d042[m
Author: Eileen Donlon <emdonlo@gmail.com>
Date:   Mon Mar 5 19:50:12 2012 -0500

    add null checks to fix bugs in StreamTcpTest23

[33mcommit 1a46d7a53aeb18ec4f813125e449cbbeb63884a8[m
Author: Eileen Donlon <emdonlo@gmail.com>
Date:   Mon Mar 5 19:31:26 2012 -0500

    fix more invalid content unittests
    
    fix invalid unittests with mixed relative and non-relative content modifiers and other issues; DetectContentParse19 still contains some failing dce_stub tests which are commented out.

[33mcommit 9b2bd9280a945f98353da8daa342d648d3eeb814[m
Author: Eileen Donlon <emdonlo@gmail.com>
Date:   Mon Feb 13 10:45:29 2012 -0500

    fix invalid unittests with mixed content modifiers
    
    Fixed some unittests that were incorrectly mixing relative and non-relative content modifiers.

[33mcommit 0bcbd233434e9dd34d03c2457788de11835e2d85[m
Author: Eileen Donlon <emdonlo@gmail.com>
Date:   Thu Jan 26 13:06:03 2012 -0500

    reject mixed relative and non-relative keywords
    
    reject signatures using relative and non-relative positional keywords for the same content (depth or offset with distance or within)

[33mcommit 0b09416a482deaa8c2895135e61030a246495550[m
Author: Eileen Donlon <emdonlo@gmail.com>
Date:   Tue Mar 6 17:03:29 2012 -0500

    reject invalid combinations of pcre modifiers
    
    don't allow /B with normalized buffers, and don't mix modifiers for normalized and raw buffers

[33mcommit 89cee0ad49898775570d22ae3fdbdb44fa9e4947[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 5 14:51:28 2012 +0100

    Add libnss/libnspr support output to configure. Clean up configure.in.

[33mcommit 8350fdd9beb30561f1c4f2a50c440068b60abd65[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 5 09:03:26 2012 +0100

    Do not assume the include dir for nss to be nss. On F16 it's nss3.

[33mcommit 90422c9f5e544ed5213886c38f3c00af6acfaa36[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 5 09:00:00 2012 +0100

    Do not assume the include dir for nspr to be nspr. On F16 it's nspr4.

[33mcommit 705417434b2c9f3b5f9400563bcc5e9fb2b6e215[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 3 14:10:49 2012 +0100

    Fix json output typo.

[33mcommit fe9258f0fb46d795d25c84336bf5068781b7a2c0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 2 16:17:58 2012 +0100

    Fix issue discovered by Anoop. Passing u32 ptr to a size_t can caused badness.

[33mcommit 6019ae3dcb22f7e595762124c5de32d3d322951d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 2 12:13:16 2012 +0100

    Fix minor memleak in case af-packet init fails.

[33mcommit 385f1dcd2580b4ef181226fca6a1fd3c90746166[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 2 11:08:06 2012 +0100

    Fix UTHBuildFlow setup using wrong address.

[33mcommit e3935a2af28dabdf0c391090e0b3d37c64dfbfbc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 2 11:05:49 2012 +0100

    Improve http filename parsing.

[33mcommit e237841a8e5b7867c0670ff0c5b24e866cdc1617[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 2 10:43:02 2012 +0100

    Fix compilation with profiling enabled. Minor unittest fixes.

[33mcommit de5c1d14914cf896ec6ebf14db0817be6d439fab[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 2 09:28:00 2012 +0100

    Fix minor fgetc issue.

[33mcommit 0d6f33a15b4aea1924c4f9a1dcdf4f5791898a81[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 2 09:23:29 2012 +0100

    Move PACKET_RECYCLE outside of flow lock in FlowForceReassemblyForQ as it confuses static code checkers.

[33mcommit e21d8cdf0128b75242121ca5af9a26a195ec1c8b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 2 08:36:44 2012 +0100

    file extract: improve multipart parsing and set events on some error conditions.

[33mcommit bfb3f1b7cf1303d11e9fd71bfe8ba4591d178382[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 2 08:39:09 2012 +0100

    flow: Refactor how FlowPrune deals with forced timeouts, improving locking logic.

[33mcommit 372ab9c43369470e8bf6cd2d52c274d02a7fd203[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 1 10:46:34 2012 +0100

    Another batch of minor fixed for issues found by Coverity.

[33mcommit 11bdf4838ff98381a5c7b80cd4eb412294657bee[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 29 14:32:32 2012 +0100

    Various improvements to error handling found by Coverity.

[33mcommit d6af843860355601d20738a2d2191cb726f2e3de[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Feb 28 19:00:27 2012 +0530

    code cleanup

[33mcommit cdba2f50d1e8ea95024cdeadb9c9dff7f6d3870a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 29 11:52:59 2012 +0100

    Various fixes and improvements based on feedback by Coverity analyzer.

[33mcommit 4b2d94a841d90641b6e086638c68cc383117f0f0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 28 10:29:13 2012 +0100

    Add line number to warning about mangled yaml parameters. Limit number of warnings to 10.

[33mcommit 0fc878b39127f10127db452b82006c79d4b8ec0e[m
Author: Nikolay Denev <ndenev@gmail.com>
Date:   Sun Feb 26 21:37:25 2012 +0200

    Consistently use dashes instead of underscores in the sample config file.

[33mcommit a67d78eda6beaf8c0875c61274586b7939099a6b[m
Author: Nikolay Denev <ndenev@gmail.com>
Date:   Sun Feb 26 21:37:25 2012 +0200

    Consistently use dashes instead of underscores in the sample config file.

[33mcommit fb05edeeeecdb86abdf1994eb0f590248a11dd5b[m
Author: Nikolay Denev <ndenev@gmail.com>
Date:   Sun Feb 26 21:35:34 2012 +0200

    Convert underscores to dashes in thread affinity type names.

[33mcommit 7fce226bb8d87d33157c2fc7c6fa883855e4fa5c[m
Author: Nikolay Denev <ndenev@gmail.com>
Date:   Fri Feb 24 22:36:38 2012 +0200

    Fix some warning message still using underscored config vars.

[33mcommit 139768dd5870bd5763fbfcfc5b5970bacb19e382[m
Author: Nikolay Denev <ndenev@gmail.com>
Date:   Fri Feb 24 22:18:12 2012 +0200

    Do not use underscored config vars internally.

[33mcommit 6819ec8b5403937bb317f8254963421105d646bc[m
Author: Nikolay Denev <ndenev@gmail.com>
Date:   Fri Feb 24 21:45:40 2012 +0200

    Remove the underscored "sguil_base_dir" compatibility option.

[33mcommit 32e898f2e3a117b99924451725e17a82c887e90e[m
Author: Nikolay Denev <ndenev@gmail.com>
Date:   Fri Feb 24 15:50:43 2012 +0200

    Convert config entries using underscores to dashes and emit deprecation warnings.

[33mcommit 33d8453581a8889eac1c23d5f39529c310c23ee2[m
Author: Martin Holste <mcholste@gmail.com>
Date:   Mon Feb 27 10:54:44 2012 -0600

    Added Shadowserver plugin.

[33mcommit 2197f1a62529c6021c71de6c9846f8ee0f9f4bc4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 24 20:24:54 2012 +0100

    file-inspection: split 'file' output module into file-store and file-log. Store stores files. Log logs json records.

[33mcommit 8b1333a2772973d162e1ee9e0bc70ece1812cdc5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 24 16:07:08 2012 +0100

    Add more flow lock assertions to the debug validation code.

[33mcommit 5ba41c78903ab34adfbb6289d5263d7b290f92c8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 23 18:40:47 2012 +0100

    Fix locking error in filestore handling. Add debug validate check for asserting a flow is locked.

[33mcommit 25123b20445bb3ba204c7943b0417ff4c953736b[m
Author: Martin Holste <mcholste@gmail.com>
Date:   Thu Feb 23 09:24:18 2012 -0600

    Added license.

[33mcommit c63017b2cc863e1372359ce7c5f1e2fda2209575[m
Author: Martin Holste <mcholste@gmail.com>
Date:   Wed Feb 22 14:29:39 2012 -0600

    Added some installation instructions to file_processor REAMDE.

[33mcommit 4030840212382fb31bc61c1a632d556c520e9c54[m
Author: Martin Holste <mcholste@gmail.com>
Date:   Wed Feb 22 12:17:46 2012 -0600

    Added contrib folder with file_processor utility which is a plugin framework for reading the files-json.log and processing and taking action based on the files observed.

[33mcommit 28d88746e436c79870a7f5b06e9b0ddd442dd2a0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 23 17:43:53 2012 +0100

    Fix compiler warning and silence complaining unittests.

[33mcommit 860971eca08d378293776ceba951e2c2761dd047[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 23 16:29:41 2012 +0100

    Misc afpacket changes.

[33mcommit 8e48a2edfd054c07ad237fb7ed48f399ae406ab7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 23 16:27:39 2012 +0100

    Fix NULL dereference in PacketPatternSearchWithStreamCtx code.

[33mcommit 34b3f1946563dbdef84bc004e56ccaf3dc031419[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Feb 16 17:08:54 2012 +0100

    af-packet: Implement zero copy
    
    This patch adds support for zero copy to AF_PACKET running mode.
    This requires to use the 'worker' mode which is the only one where
    the threading architecture is simple enough to permit this without
    heavy modification.

[33mcommit 3593cb051e2d5cdf5addbd84d170a952161f4786[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Feb 16 17:46:53 2012 +0100

    decode: add PacketSetData funtion
    
    This patch adds a function which can be used to set the payload
    of a packet when a zero copy mode is used.

[33mcommit 49b7b00fcf0bfe0439b4b023f7406d0062d8fc15[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 2 14:47:17 2012 +0100

    af-packet: mmap support
    
    This patch adds mmap support for af-packet. Suricata now makes
    use of the ring buffer feature of AF_PACKET if 'use-mmap' variable
    is set to yes on an interface.

[33mcommit 697e9e660f3034fa15593edc86b88c1c7d03aa03[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 23 11:23:52 2012 +0100

    Config should be set up in sysconfdir/suricata. Add reference to oinkmaster guide.

[33mcommit 73a1b97267dbb9044b3fbf33c192489287b1770d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 16 09:34:07 2012 +0100

    Improve config details overview at the end of configure.

[33mcommit b2ebd4a138ab115e875c14b324922c209750c5ea[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Feb 8 17:10:23 2012 +0100

    build: enable af-packet by default

[33mcommit ef46345792a43d3ea6b91a25ed6800d3e9cc7cd8[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Feb 8 16:56:54 2012 +0100

    Add sexy information messages to configure output.

[33mcommit 5ea1b1d15e9b19eff3570566e84b080ea2f87498[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Feb 8 16:56:37 2012 +0100

    Fix PCRE-JIT message

[33mcommit 65b26e6ae58e83ab23b804432e057617b1abe082[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Feb 8 15:14:59 2012 +0100

    Remove autogen.sh generated files.

[33mcommit 338608842e82c21eba79879c5cbfcebb3dfe9819[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Feb 8 18:13:07 2012 +0100

    Improve output

[33mcommit 4c3f0b258ec87010313c9fa88765a28a9301a404[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Feb 8 18:04:22 2012 +0100

    del rules file deleted

[33mcommit 25804f5aa80f4145255d372dbc05e2733c8d8fb4[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Sep 21 19:55:03 2011 +0200

    Add install-conf command to build system.
    
    This patch adds support for customisation of suricata.yaml and
    automatic download of emerging threat GPL rules. By running
    'make install-full' after 'make install', files necessary to run
    suricata are copied in the configuration directory and the latest
    ruleset is downloaded and installed. Suricata can then be run
    without files edition.
    This patch has a special treatment for the windows build which
    requires some different paths.
    suricata.yaml is also updated to load all rules files provided by
    emergingthreat ruleset.

[33mcommit 3702a33ae999cd8fbec4febcc1667a1c7ed74063[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 22 17:55:24 2012 +0100

    file-inspection: support POST requests that do not use multipart.

[33mcommit 64827e3864a8a3feff73804b35873a3c87091dd6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 22 17:17:01 2012 +0100

    file-inspection: use filename= value from Content-Disposition where available to determine the filename in GET requests.

[33mcommit 6585cb89d316f1dca22f286db5e8687456d51f0d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 22 11:29:42 2012 +0100

    Fix UtilMiscParseSizeStringTest01 unittest on 32 bit.

[33mcommit 35435f32848e57575e75ac0940325b8e714e22d5[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Feb 20 11:59:40 2012 +0530

    All http_http_stat_code modified patterns now are DETECT_CONTENT and not DETECT_AL_HTTP_STAT_CODE. Also remove dummy match/free functions for stat code and stat msg

[33mcommit 507e1b66e0d880f28df890d0177c7b4312f7f974[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Feb 20 11:43:47 2012 +0530

    All http_http_stat_msg modified patterns now are DETECT_CONTENT and not DETECT_AL_HTTP_STAT_MSG

[33mcommit 059ee217ff69493a356a00e25a92080703725dc7[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Feb 20 11:32:42 2012 +0530

    All http_http_raw_uri modified patterns now are DETECT_CONTENT and not DETECT_AL_HTTP_RAW_URI

[33mcommit b1a0d3510633531b5340003944ca502e98d78437[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Feb 20 11:17:51 2012 +0530

    All http_http_cookie modified patterns now are DETECT_CONTENT and not DETECT_AL_HTTP_COOKIE

[33mcommit 49bdad9345491c3fdc8ab7f358473dcb382a6938[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Feb 19 23:38:09 2012 +0530

    All http_http_method modified patterns now are DETECT_CONTENT and not DETECT_AL_HTTP_METHOD

[33mcommit 97d8fc9cbac65f9c81df7e5d87172fb81fe88dfb[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Feb 19 23:19:52 2012 +0530

    All http_http_raw_header modified patterns now are DETECT_CONTENT and not DETECT_AL_HTTP_RAW_HEADER

[33mcommit 97308674ee49ffa227ad06b4063f6a274c3d61f6[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Feb 19 16:32:28 2012 +0530

    All http_http_header modified patterns now are DETECT_CONTENT and not DETECT_AL_HTTP_HEADER

[33mcommit 1acb7cdc7d8d2b857b15065ade3252e9bd7cc719[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Feb 19 15:35:49 2012 +0530

    All http_server_body modified patterns now are DETECT_CONTENT and not DETECT_AL_HTTP_SERVER_BODY

[33mcommit a5b46e727c30d7fc7a9aed8a1edd99e105d450c0[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Feb 19 14:38:41 2012 +0530

    All http_client_body modified patterns now are DETECT_CONTENT and not DETECT_AL_HTTP_CLIENT_BODY

[33mcommit 4810ee9c5f3fab9219d7b8e4b221eac5e36fcc46[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Feb 19 10:52:27 2012 +0530

    All uricontent modified patterns now are DETECT_CONTENT and not DETECT_URICONTENT. Step towards unifying all content based patterns. Makes way for easier management of patterns

[33mcommit 93d7a6e671e0c542ab34e6425bcdd029797c4796[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Feb 18 18:03:24 2012 +0530

    code cleanup. Remove unused functions

[33mcommit eb07c345b81890a45078649d3e7fb9b21bcdcbf9[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Feb 18 17:45:04 2012 +0530

    code cleanup - replace SigMatchAppendThreshold with SigMatchAppendSMToList

[33mcommit dd7e710f3578cfc06be8199c67761573de84535b[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Feb 18 17:39:01 2012 +0530

    code cleanup - replace SigMatchAppendPostMatch with SigMatchAppendSMToList

[33mcommit a4638fb0adfcb125fa3f6b61a16a38ae65e659ab[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Feb 18 17:32:08 2012 +0530

    code cleanup - replace SigMatchAppendPacket with SigMatchAppendSMToList

[33mcommit ff38d42bf1fae2c7f76b518d54d4c2142daa8c19[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Feb 18 15:01:48 2012 +0530

    code cleanup - replace SigMatchAppendTag with SigMatchAppendSMToList

[33mcommit ac68c3f8933cb5bc56484ed7a12974c0ab11abcb[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Feb 18 14:59:35 2012 +0530

    code cleanup - replace SigMatchAppendDcePayload with SigMatchAppendSMToList

[33mcommit 6cab663bf0b5ff51552e5b64c90542885a27bc14[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Feb 18 14:51:17 2012 +0530

    code cleanup - replace SigMatchAppendPayload with SigMatchAppendSMToList

[33mcommit c4cb37b8da441b2230a83d52955e8f0a2e6385b1[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Feb 18 14:45:21 2012 +0530

    code cleanup - replace SigMatchAppendUricontent with SigMatchAppendSMToList

[33mcommit c9af50ea0cb034ca910a6e03506f311680725a5f[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Feb 18 14:00:39 2012 +0530

    code cleanup - replace SigMatchAppendAppLayer with SigMatchAppendSMToList

[33mcommit bbb9f35f26848f5350f0efa0e504874e0db9f793[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Feb 18 13:16:40 2012 +0530

    code cleanup - replace SigMatchGetLastSM with SigMatchGetLastSMFromLists

[33mcommit ab35b98f76a7a271f0598944a36e98aa4a0dcc3a[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Feb 18 12:47:35 2012 +0530

    code cleanup - remove DetectContentGetLastPattern. Replace it with SigMatchGetLastSMFromLists

[33mcommit d85ab5ab1f6109f3cd4eb28a6254a53a579a7df1[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Feb 18 12:12:47 2012 +0530

    code cleanup - remove DetectContentFindNextApplicableSM

[33mcommit 802350f65aa6aaa019483948300318390dc5c92f[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Feb 18 12:10:42 2012 +0530

    code cleanup - remove DetectContentHasPrevSMPattern

[33mcommit 9652c3672d805da2615478209cefa4284bc11226[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Feb 18 12:09:05 2012 +0530

    code cleanup - remove SigMatchGetLastPattern

[33mcommit e851804c92daa94d9db88b17a1030e982b5bfd18[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Feb 18 11:43:05 2012 +0530

    code cleanup - remove DetectUricontentGetLastPattern

[33mcommit dcb2afb02f79af8ae86e02366ad07dd380619449[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Feb 18 10:50:54 2012 +0530

    Use sm_list to differentiate between different content types while retrieving pattern ids instead of sm_type

[33mcommit 83d9439877fd377e750006fcd7a9c53733b7c2cd[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Feb 17 20:48:29 2012 +0530

    DetectPatternGetId() cleanup. Remove separate search element creation for uricontent. We don't need this now since we have unified content structures for content and uricontent

[33mcommit 154af56b453a481c7987e4bd19df2bf07debdee1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 18 17:56:38 2012 +0100

    Add a print function specially for json output that escapes all characters json requires to be escaped.

[33mcommit 740ee3e7abbb82726352cb617988b1aaa4a8d3a2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 16 22:32:37 2012 +0100

    Add referer header to .meta and json file logs.

[33mcommit 337f7861a4d30c35f510729f591d26ba6e67b95b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 16 22:17:15 2012 +0100

    Make sure that if not built against libnss, we still compile. Only no md5 for you then\!

[33mcommit 6752ccae2a455f3620fa4d12335612f4b813c41d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 16 21:40:34 2012 +0100

    Add line based log file to log-file module that logs each stored file's meta data in json records.

[33mcommit 12e8ce65452f8bae074757e5cdbdc7817107de0f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 16 21:39:37 2012 +0100

    In PrintRawUriFp, consider " unprintable.

[33mcommit 69b3df96fba4ebff03d89bf63c2f334dd10b0259[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 16 19:27:05 2012 +0100

    Initial on the fly MD5 calculation for extracted files using libnss.

[33mcommit 2f7717a1a769da93e07ed410941d288c9556d0f1[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Feb 15 22:57:34 2012 +0530

    delete detect-recursive.[ch]

[33mcommit e682796d035c6e272e9d5fbc952276eeb2d5a9fe[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Feb 15 19:16:34 2012 +0530

    feature #414 - support listing supported keywords. Remove support for dummy keywords __address__, __proto__, __port__. Remove support for recursive keyword and all references to it

[33mcommit 603d4a719ac39f418e59fbfb0563fb2ed1a8b303[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Feb 15 20:48:07 2012 +0530

    remove det_ctx->payload_offset and use det_ctx->buffer_offset. Update hscd and hsmd to use the new generic content inspection engine

[33mcommit d1d5507679d329d54b24bfdd9f9d818f340ebb04[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Feb 8 13:29:39 2012 +0530

    remove all old content inspection engines and references to them. We have cleaned the entire content inspection phase and improved alert accuracy

[33mcommit 35f1f7e8d944a364b6ba69e3acd96b4b1c8cba63[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Feb 8 00:33:19 2012 +0530

    unify payload detection engines + fix other bugs in pcre init

[33mcommit 9287cce674775b14269a157a2f9bb425402fad24[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Feb 7 13:43:30 2012 +0530

    raw urilen inspection moves to raw uri list. Won't make any difference wrt inspection

[33mcommit 067719096057a4f802ee4784457a0b7d58a814f7[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Feb 15 15:41:24 2012 +0530

    rebase commit for hscd and hsmd patches

[33mcommit 22b1f5b22b10cbc7272931d2ecfb874045cec13a[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Feb 3 19:57:11 2012 +0530

    fix seg fault due to wrong sm list access in hscd

[33mcommit 2e2398147c502f5481743c007fc240135a3209fe[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Jan 26 17:07:09 2012 +0530

    fast pattern unittests added for http server body

[33mcommit 09313cf9bde306ed889242e9930be0f215d5c947[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Jan 26 16:56:11 2012 +0530

    Support http stat code detection engine, fast pattern(mpm engine included). Fix http stat code setup function. Fix pcre option for stat msg keyword. With this the pcre options for server_body is Q, for stat_msg is Y and for stat_code is S

[33mcommit 2007c2711c51aedea718d60901593ce02061af44[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Jan 26 00:20:24 2012 +0530

    Support http stat msg detection engine, fast pattern(mpm engine included). Fix http stat msg setup function. Fix pcre option for stat msg keyword

[33mcommit 9dc153c8f4b318480769b7c984271d49b12c8e5f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Feb 12 19:30:43 2012 +0100

    Fix path handling for including rule files on win32.

[33mcommit 489b8b8bcceddb0ce5950ae6ef83fe05f1a39633[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 11 15:43:09 2012 +0100

    Allow other yaml files to be included in the main yaml.

[33mcommit adb5d05fb5b987541304a4b5c5f062449ecff1ba[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 10 14:49:03 2012 +0100

    Fix a FP with negated filemagic inspection.

[33mcommit 0b9038b971376ee9a42a24cf8c0f845aaa4a9113[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 9 06:58:48 2012 +0100

    Add atomics to ticks unittests.

[33mcommit f77c475c8542159bb9c5b6c93fdf94d75399200f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 8 09:33:03 2012 -0500

    Minor layout fixes.

[33mcommit e1a309a6b20405c7706f13d3357dd79ee9b9e791[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 8 06:44:53 2012 -0500

    Napatech code formatting fixes.

[33mcommit 95a5bebb6a384f508fdd895ad3fbadfe7a91336d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 8 06:36:05 2012 -0500

    Fix compilation without napatech tech support enabled.

[33mcommit 1d9f6ff8f2d1fe43e9dd5a64918a6e4d85567144[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 8 05:45:28 2012 -0500

    Initial Napatech support by Randy Caldejon / nPulse.

[33mcommit 60553f37538a71490dd83103ea8642e1b6e7218e[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Feb 6 20:34:01 2012 +0530

    fix compilation error for the new http response header mpm feature

[33mcommit 716afac5a2bf5470a9052387545db228c0106980[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Feb 6 20:29:46 2012 +0530

    fix debug messages that have references to the old mpm contexts

[33mcommit 9a665e035b54d83d15fc51ba366cf76c2f60a765[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Jan 18 13:21:54 2012 +0530

    code cleanup over last 2 commits

[33mcommit 55c4e419fdd074c496a06130982295a5df3c428c[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Jan 18 11:14:09 2012 +0530

    if a signature is non-tcp, it's always a packet sig

[33mcommit 419cdc8558d13f0bc59c54c89917f067c4acb68b[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Jan 15 22:08:58 2012 +0530

    support splitting mpm ctxs based on direction v2

[33mcommit 0a91d824bfd0751f08916b41a77ef76b038186ce[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Feb 7 00:52:45 2012 +0530

    Fix bug in ac-bs search function

[33mcommit db859cc56ed437a9475fbdf74c5b05f6e960ace9[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Feb 6 20:09:21 2012 +0530

    treate ac-bs auto as single context

[33mcommit 199288309db98d5832816f31788528dabde9c13c[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Jan 31 17:17:35 2012 +0530

    Support for new MPM ac-bs added

[33mcommit e244934566b4b98275464a6795c8eb121739179b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 6 17:31:06 2012 +0100

    Disable unittest that fails without libnet support.

[33mcommit c2d47718c138b8baebaed5ad0b85976f4f4ddfe7[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Feb 3 22:56:28 2012 +0530

    bug #411 - fix failing unittest

[33mcommit 6556b4c62b8b601c7d5f565e945da34f7edcb3a7[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Feb 2 22:46:21 2012 +0530

    bug #411 - don't modify within/distance at setup time

[33mcommit 37329f85d4bf31c68a5baeb73950f94eada8639f[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Feb 4 17:15:28 2012 +0530

    bug #412 - rebase commit. Remove the previous references to SigInitReal() with SigInit()

[33mcommit 3b5d95547d97c92ddd27572cd21a3dc530893051[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Feb 4 07:41:07 2012 +0530

    bug #412 - Remove the commented out SigInitReal()

[33mcommit 6cbd3a1046556bd73bc5a37de246d90d102b4f27[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Feb 4 07:02:21 2012 +0530

    bug #412 - Unify SigInit() and SigInitReal(). Remove any use of SigInitReal()

[33mcommit acccf3a5a596cad16452332148197a1963e30436[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Feb 3 19:14:33 2012 +0530

    Add function declaration for SigInitReal

[33mcommit 88ad3691d114720c56c70dc7f8194ee1d7e2d860[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Jan 27 00:04:07 2012 +0530

    bug #405 - fix bug where raw uri inspection sigs were not treated as stateful sigs

[33mcommit 0b43f2a5fd4f95be090d09867460d4a03471a2cb[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Feb 3 18:55:34 2012 +0530

    Use SigInitReal() instead of SigInit() in raw uri tests. This should show that we have unittests failing, thus highlighting bug 411. The next commit is the fix for this bug

[33mcommit 6aa0ad1c5ff73368b0162ebbca4b20765fa5c785[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 3 17:12:11 2012 +0100

    Remove unused definitions in pcre code.

[33mcommit bb6f93e675c78c8606d12d6a40e616643875ce05[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 3 12:36:13 2012 +0100

    Fix unittest missing a flow direction in the rule.

[33mcommit 39b8cc2f8b6ca52abc1c938266b7556601126051[m
Author: Eileen Donlon <emdonlo@gmail.com>
Date:   Wed Jan 25 16:27:14 2012 -0500

    fixed relative handling for pcre cookie and method

[33mcommit d55fef2d75519325de86398753fd9e6bbdb6820b[m
Author: Eileen Donlon <emdonlo@gmail.com>
Date:   Mon Dec 19 14:19:39 2011 -0500

    Cleaned up some error messages for detect distance and offset.

[33mcommit b16a71020d8720838030b8728e716f41865c1a14[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 2 14:24:58 2012 +0100

    Make 'make check' happy in a ipproto unittest.

[33mcommit 5b3c8566dd3da2bf69c0e8411a6459adeebf1ec0[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Feb 1 22:21:13 2012 +0530

    bug #403 - add unittests

[33mcommit a19a249230202a437e6e98787a38cbc4c5951816[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Feb 1 15:23:21 2012 +0530

    Set the packet protocol only if it can parsed without error

[33mcommit 2fa55a86faa088221ffb537e65377cfbfce58288[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Feb 1 14:44:01 2012 +0530

    Fix csum validation functions to not carry out csum calculation if respective headers are not present

[33mcommit b8997b415ccf5f24681a4b6e475d49c57c662c1e[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Jan 26 23:25:03 2012 +0530

    bug #403 - fix setting ip proto for ipv6 packets

[33mcommit 87c2dae01098afb281f41fc0e6f62fc78e52f1a6[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Jan 26 23:23:32 2012 +0530

    bug #403 - fix setting ip proto for packets

[33mcommit 93df717aa9b5f7e89477549fcfa0a56145b03311[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jan 21 12:25:08 2012 +0100

    Add files.rules to the dist.

[33mcommit 18d458870f84649e51176ecb252af882ace416dd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jan 21 09:45:58 2012 +0100

    1.3 branch has opened

[33mcommit 706b046966e8dc37f3b3de38c433668b2fab99ba[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jan 21 09:45:42 2012 +0100

    Convert missing coredump config to debug.

[33mcommit 80de1885f5501e2dec6e7e695bdc88c01f6879d2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 20 20:12:24 2012 +0100

    Add http-events.rules and smtp-events.rules to default suricata.yaml.

[33mcommit 2d9449d0609fc32c4f7b9b4765d2caf8b3f8536f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 17 11:08:44 2012 +0100

    Make code default for pcre match limit match the suricata.yaml default.

[33mcommit c8c4a76dc6adc9520328d8ff4306a26995710a0d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 16 13:57:46 2012 +0100

    Move threshold to it's own sig match list.

[33mcommit 65d1783b45bc12be709464cb4b88a2cfa4fa168f[m[33m ([m[1;33mtag: suricata-1.2.1[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 20 16:12:58 2012 +0100

    Update Changelog to reflect changes between 1.2 and 1.2.1

[33mcommit 0983f1d0a69fdb213bd495086ba09f86837e6467[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 20 15:46:09 2012 +0100

    Only force a pseudo packet inspection cycle for TCP streams in a state >= established.

[33mcommit eba3cecc5de654e6e1a15e3b3c2f1642ddc05b8b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 20 09:53:25 2012 +0100

    Fix unified2 records generated based on reassembled stream data.

[33mcommit 5b42f3609c0b076cca6605261d0cdc6463faaa61[m[33m ([m[1;33mtag: suricata-1.2[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 19 14:25:34 2012 +0100

    Update Changelog to reflect changes between 1.2rc1 and 1.2

[33mcommit 93d121bf211e946a93c3221eadfe4c2c403afd8c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 18 20:04:07 2012 +0100

    Update app layer events for HTTP now that libhtp has fixes for some response errors.

[33mcommit 87e6be610acf353ca2a5c8ca9a91bf388c27943c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 18 19:54:58 2012 +0100

    Issue warning if libhtp version used is not up to date.

[33mcommit 02e1229565e26942d78feed8489838a056e35726[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 18 19:51:10 2012 +0100

    Enforce flow direction for http_raw_header sigs. Fix unittests that missed the flow direction.

[33mcommit 80fb33c65142d4352b6e811d01dfd89511354834[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 18 18:17:52 2012 +0100

    Fix libhtp htp_tx_get_response_headers_raw 'detection' for bundled libhtp.

[33mcommit b0650b9c3b7df23deced3965e2697ae789b97220[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 18 18:16:45 2012 +0100

    Update bundled libhtp to 0.2.7.

[33mcommit 5fa195ffb310e2bde73ece129df4b683e6b5d16c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 18 16:25:25 2012 +0100

    Allow log-pcap to use both absolute and relative sguil-base-dir settings when in 'sguil' mode.

[33mcommit 70cdf64fb2fcbcdda1e26ed0611807dfe06a3a98[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 18 12:55:11 2012 +0100

    Undo unintended changes to suricata.yaml.

[33mcommit 4cd2938c68caf3c7fb61cf06a6c9ca836d5a9836[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 18 12:53:26 2012 +0100

    Fix PathIsAbsolute function not dealing with CYGWIN. Handle absolute paths in logfile api.

[33mcommit 7066a79c10a6445127785088016a9068b3a4c4dc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 18 12:47:30 2012 +0100

    Register HTTP logger at registration, not thread init.

[33mcommit 146ff9d66e779be92de760fd0c72c03c0d7ef04a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 18 10:35:07 2012 +0100

    Suppress ac-gfbs debug message being printed at info level.

[33mcommit cd987ae7a5de44aa6c027fa4137fd8cbe8dae973[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 18 10:13:17 2012 +0100

    Threading: do not keep a slots post_pq locked while processing the packets.

[33mcommit e81f94cd83010ebb51c460e654f26692b17439e7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 17 09:32:30 2012 +0100

    Fix flowbits sigmatch structure added to the match and post-match list, causing corruption of the prev ptr. This lead to an endless loop condition in the thresholding code. Thanks to Chris Wakelin for reporting the issue.

[33mcommit 39ef24ccc4d3ee4f5805ca58dd9e1ed28ea92780[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 16 19:41:22 2012 +0100

    Fix pcap -i mode.

[33mcommit ae27333458086a1c52f1b9263fd3eca4c62eb736[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 13 16:23:53 2012 +0100

    Make live worker runmode threads adhere to the 'detect' cpu affinity settings.

[33mcommit e526525f83c1845996551358ef6abbf3fb826651[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 13 13:06:31 2012 +0100

    Fix pcap -i <ip>.

[33mcommit 35467db151782af368abebcaa2fa371c9511c51f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 13 12:46:03 2012 +0100

    Indicate that the Suricata version used is a release or a git checkout.

[33mcommit 28e15be5267d6d9ac946de490dd7d984577aa211[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 13 12:22:27 2012 +0100

    Clean up default output. Use simpler output format for releases.

[33mcommit ff9fb7e1b5372326ff307072073acfbf81e1118d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 12 15:50:54 2012 +0100

    Assume offloading in use if 1/10th of the packets has a bad checksum.

[33mcommit ea34aeff3df865e2afb9b625caf06695ff569804[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 12 19:07:07 2012 +0100

    Add missing Makefile.am files for rules/ and doc/ dir.

[33mcommit 9bea84918c09da1d7cda463776b0042fb1360620[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 12 12:12:58 2012 +0100

    Fix checksum offloading auto detection typo: it should be 1/5th instead of 1/10th.

[33mcommit 227d6e058cd68f3a09132efa4ef7a2269b9382f2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 12 08:48:14 2012 +0100

    Make sure new rule and doc files are part of the dist.

[33mcommit 5886ef82492d5bbef5ab8bf1e3accc777df33749[m[33m ([m[1;33mtag: suricata-1.2rc1[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 11 18:06:01 2012 +0100

    Don't print error about missing git repo if building from tarball. Don't define REVISION in that case.

[33mcommit e192ce7ea5a39eecebfa2f0216fa1c6a0eddebc2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 11 17:51:11 2012 +0100

    Update ChangeLog to reflect changes between 1.2beta1 and 1.2rc1.

[33mcommit c4b34e6ef73f9915b4da1d52673279ea7537f6f0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 11 15:35:09 2012 +0100

    Fix various minor clang/scan-build warnings.

[33mcommit 791fc2f6ea9902c0283434eb2b01937511039237[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 11 15:31:14 2012 +0100

    Adapt signature ordering to new flowbits post-match handling.

[33mcommit 8339ca6d4ec6c91d8d40b6e10755c92b672c89bb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 11 15:28:45 2012 +0100

    Implement post match support for ip-only.

[33mcommit e69c58431780fbe3c2d9f36e652ed6792bbe3beb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 11 15:05:29 2012 +0100

    Let timing out flow use pseudo packets also if state is not fully closed.

[33mcommit 6eeab37ab3fb6d62ff13c57ddb8de85baff21200[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 11 14:24:09 2012 +0100

    Add post-match list, move flowbits set, etc functions to it. Move flowint set, etc functions to it as well.

[33mcommit 67a4153137e76cb04e2ee7cae595af010e6e7d5b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 11 11:33:13 2012 +0100

    Add export of wiki install docs to our doc/ dir.

[33mcommit 0818a151ecbbbaa142411c60c30d153ca9734098[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 11 11:23:36 2012 +0100

    Add reject support to live single, autofp and workers runmodes.

[33mcommit 0b2c7dfa5d4b461fdc0ffa17d8dbb496b45a4e59[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jan 11 08:55:15 2012 +0100

    runmode: Add Reject to IPS worker mode.

[33mcommit 515d070554457ccdf9231d208be17692f66e5f21[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 10 17:21:03 2012 +0100

    Print elapsed time with millisecond precision.

[33mcommit aac2d91bcc596145404d3416151f03c6014ac539[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 10 16:23:32 2012 +0100

    Set DROP flag for reject action so in addition to sending the rst, in IPS mode also drop the offending packet.

[33mcommit f084874998e3d3091950e3a729f057f0d7312127[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 10 14:15:59 2012 +0100

    Fix HTTP state and raw stream not being inspected at the same time. Adds an exception to transaction id handling for HTTP.

[33mcommit 16cfae2f51d24899cc4fac7f67303902b98f4e5e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 6 11:08:10 2012 +0100

    Trigger raw stream reassembly on receiving a full HTTP request or response.

[33mcommit f773942ce0eb5fb74d85250b9da9f04bd26f9905[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 9 15:16:37 2012 +0100

    Disable printing dreaded app layer error messages to the screen: app layer events are here to safe us.

[33mcommit 132d9d1789e7eb09c2e00d9d0611ce2e3a2ea5de[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 9 15:10:16 2012 +0100

    Add http-events.rules with an example rule for each HTTP event.

[33mcommit f713b653ab6271b3cfb425be48ce9b7ef4374c62[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 9 15:09:48 2012 +0100

    Convert error logging for HTTP to use new app layer event API. Expose libhtp warnings to this as well.

[33mcommit e55390e4e78565c7be0725a36e6dba2ce6868baa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 9 08:58:02 2012 +0100

    Add check to invalidate signatures that inspect raw http headers in the to_client direction (response headers) if libhtp hasn't been patched yet. Also add hack to disable the test for unittests, many tests fail and we'll fix those ASAP.

[33mcommit 1ac6054c23347095e149be3a8b7ce2f98393641c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 9 08:44:53 2012 +0100

    Clean up configure check for htp_tx_get_response_headers_raw. Misc changes.

[33mcommit 4acd5a04e69750a9f45f319507cf7ea166ad3bba[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Jan 9 12:44:09 2012 +0530

    Enable http raw response header inspection only if libhtp supports raw response header buffering which should be available post 0.2.6

[33mcommit 9c4954ff4292b40c2df469be9596305dc7110ad4[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Jan 9 11:59:52 2012 +0530

    support http response raw header inspection + carry out hrhd mpm on both request/response headers + add unittests for the same

[33mcommit 1b434f5fff49322d91b5549d0139633ee7f8c32c[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Jan 7 23:09:51 2012 +0530

    hhd unittests for response headers

[33mcommit e5c3e2cdb12be7552bb5c491eab9b53e656e169c[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Dec 31 13:31:17 2011 +0530

    carry out hhd mpm on both request/response headers

[33mcommit 30247dce8ce5cbf1da2259433d6f5ab1be39c64f[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Dec 30 17:44:47 2011 +0530

    bug 389 - support http response header inspection + fix bug with stateful inspection for sigs that would have both request/response inpection

[33mcommit 7d07b5375ec8646e026fb5a9da4577e04c0d8f80[m
Author: William <wmetcalf@qualys.com>
Date:   Thu Jan 5 11:28:57 2012 -0600

    Add simple socket to gzip file PoC.

[33mcommit 64f717c880f6666f43a2e084a275bacd6f345c52[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 6 20:46:47 2012 +0100

    Set 'livedev' in pcap acquisition module for older libpcap version as well. Fixes a segv.

[33mcommit 5a1a4437018a15d51a2921a72c69a4c779dd74f5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 6 19:04:55 2012 +0100

    Add example smtp decoding events rules file.

[33mcommit 026a4efc571b4d0c41f4854a33fb1e6a2e8ccd21[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 6 19:02:02 2012 +0100

    Make sure that continued stateful detection only inspects sigs in the proper direction.

[33mcommit 21ee59e6f3ee73ba4436ff759f2e0d24cbff5b28[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 6 18:51:55 2012 +0100

    Add signature direction (flow:toserver/flow:toclient) as a signature flag.

[33mcommit d5402d33d42dc5d47fd485f52a6ed1efa24c802a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 6 18:20:35 2012 +0100

    Simplify detection loop. Inspect packet keywords before the state.

[33mcommit 7fa22e8453116d9b8953227de02e0194e0e342ff[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 6 18:00:51 2012 +0100

    Rename app_layer_events to app-layer-events. Misc fixes/changes.

[33mcommit ecd457db7b823fe31f83b61d87d4f5e4799a5989[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 6 17:56:52 2012 +0100

    Allow flowint names to have dots in them.

[33mcommit 5311cd4866d0f102338adc33a35edbcf7ff83c91[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Jan 6 14:33:23 2012 +0530

    Support for smtp decoder events

[33mcommit eea5ab4a7aab02dc7f451ab09f737e063712258c[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Jan 6 11:28:33 2012 +0530

    Support for app layer decoder events added + app_layer_event keyword added

[33mcommit 4c1e417d4920cb37a1f3da64db8a3703c01323a2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 5 18:24:32 2012 +0100

    Allow non-existing flowints to be incremented. A 'set' to 0 is implied in this case.

[33mcommit d24b3a0e50942a544629025f59071d2c4cc73873[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 5 17:24:14 2012 +0100

    Clean up csum detection output, misc fixes.

[33mcommit 279b8b4027a058857775e67e3ec969a3ab00bc9f[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jan 4 15:02:19 2012 +0100

    config: Add explanation for checksum-checks options

[33mcommit 9a2a4802f440ea8acf9c1a30180250433103a5b0[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 2 17:51:21 2012 +0100

    pf-ring: add support for checksum verif mode
    
    This patch adds support for checksum verification mode.
    Supported mode are yes, no, auto and rx-only.

[33mcommit 0399a06f4f0d9a52ce76b5cd89b70ad981af30ba[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jan 4 19:15:56 2012 +0100

    pcap: fix typo

[33mcommit db5ca0f3a4f2f210372eae2a834da76ad8d59573[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jan 3 16:42:38 2012 +0100

    pcap: add auto mode support

[33mcommit a565148fb16974086748118bbabc1402fb0f7ac7[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jan 4 19:24:53 2012 +0100

    af-packet: fallback if 'kernel' mode is not supported
    
    This patch adds a fallback to full checksum validation if 'kernel'
    mode is not supported by the running kernel.

[33mcommit 51eb96053c140df509bf66f3240d30dc3572a918[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jan 3 16:42:03 2012 +0100

    af-packet: auto mode support

[33mcommit c3eaa6cc60064d2c278e53aecc400d55d2f89e54[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jan 3 16:38:53 2012 +0100

    Add per-interface counter for invalid checksum.
    
    This patch adds a per-device counter for invalid checksum as
    well as a simple packet counter.

[33mcommit 745b61171af167dfe5756920f968d976bd4b6366[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jan 3 10:48:44 2012 +0100

    Introduce LiveGetDevice function

[33mcommit e893e860d440c1ed98dbc71c4b0adde92d307d80[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jan 3 10:23:01 2012 +0100

    Rename LiveGetDevice to LiveGetDeviceName
    
    The function LiveGetDevice is returning a point to
    the name of the interface. This patch renames it to
    LiveGetDeviceName which is more appropriate.

[33mcommit 1d1271fd38fdeb6da3bbd240368f5dc1ea8ad88b[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 2 18:17:08 2012 +0100

    pcap: add support for checksum verif mode
    
    This patch adds support for checksum verification mode.
    Auto mode is not yet supported.

[33mcommit 6062e00c2b18ce5e62ef3e5dc974af3547eafbd5[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 2 17:34:33 2012 +0100

    af-packet: add support for checksum verif mode
    
    This patch adds support for checksum verification mode.
    Auto mode is not yet supported.

[33mcommit 551cb3e4c27e7bba2f2cbddd38b1cb0659ec7776[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 2 17:33:49 2012 +0100

    decode: introduce checksum mode enum.

[33mcommit 623bb38d1c3c11c6ae8b16c09c99165c61062b2f[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 2 17:07:37 2012 +0100

    af-packet: Fix typo in error message.

[33mcommit 8d635ddfc25bef83927f2b2d723db4dc111bb13a[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Dec 21 12:18:57 2011 +0100

    detect-csum: incomplete checksum is a valid checksum
    
    This patch modify checksum match to not alert on packet with
    incomplete checksum. They will be checksummed later and thus
    can be considered as valid one.

[33mcommit 67f791e891ab0afe72989f06c198657286058a84[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Dec 20 17:46:07 2011 +0100

    af-packet: add variable to disable offloading detection
    
    This flag adds variable to disable offloading detection. The effect
    of the flag is to avoid to transmit auxiliary data at each packet.
    This could result in a potential performance gain.

[33mcommit f6ddaf3341c008da9fcc7f381e003c165f6ee2e4[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Dec 20 16:52:07 2011 +0100

    af-packet: parse message to find lack of checksum
    
    Emitted packet can have checksum offloading. This patch reads
    af-packet message parameter to see if the kernel has sent a non
    checksummed packet.

[33mcommit 5dc46ae7c70028280c3be2d96aa71049142aa001[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Dec 20 15:10:57 2011 +0100

    pf-ring: Mark emitted traffic as non checksummed
    
    The traffic sent by an interface is potentially offloaded. This
    patch adds detection of TX packets and set the corresponding flag.

[33mcommit 81bc6f55189f270579e0e0a9b5b389487916bf41[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Dec 20 15:08:40 2011 +0100

    Treat incomplete checksum.
    
    Checksum of local traffic is often offloaded to the network device.
    This causes some problems on parsing of this traffic. This patch
    introduces a PKT_INCOMPLETE_CHECKSUM flag which can be used to
    indicate that the checksum is not computed/correct for good reason.

[33mcommit 9324ed7b90043fc2fe9bdf8cfb71a2d6d70b3d89[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 5 16:48:48 2012 +0100

    Fix icmpv6 ip-only rule not firing. #363.

[33mcommit 517040c4af9d83adbc9165831658c217cfc17c79[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Dec 29 02:14:19 2011 +0530

    indentation fix

[33mcommit 37b223645aa01b0a79ea980b4f11f33083a6807a[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Dec 29 02:11:37 2011 +0530

    fix detection engine for alert stability. Fix cases where we have multiple rules having same pattern. We should see good perf increase(~5%) with this change, now that we avoid unnecessary inspection"

[33mcommit 42bc22cfa50174d50cfc010f3f33cbfc9c13c0e3[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Dec 26 22:04:48 2011 +0530

    indendation fix

[33mcommit ecc7a769a7fb513465abade1830f069359e671a0[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Dec 26 22:04:00 2011 +0530

    reclaim mpm contexts if no patterns are added to it, even in non-full mode

[33mcommit 1389cf691392bd61dca0b8594d6dd0e7d6c5836e[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Dec 26 20:38:18 2011 +0530

    update cuda mpm to support per proto mpm contexts. Fix faulty stream mpm usage of cuda

[33mcommit 92643f611071d976792bc3b09984da192c6f8520[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Dec 26 01:03:54 2011 +0530

    introduce separate mpm ctxs for tcp/udp/other_protos

[33mcommit a5dec3cb2e494f95375d195664b47d584b630c13[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Dec 25 13:06:08 2011 +0530

    refactor all http mpm engine code

[33mcommit 34cf557abf80aa887a12e6cf31342b6f45a0bd26[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Dec 24 14:42:02 2011 +0530

    fix indentation

[33mcommit 5b91cec4ae717722524bc5092482b1f20ee20fac[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Dec 24 14:40:25 2011 +0530

    remove unnecessary if/else checks

[33mcommit ada4066238c8ed68cd1d3f950e543cf47844bf22[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 5 15:22:30 2012 +0100

    Add counters for SYN, SYN/ACK and RST TCP packets. Issue #251.

[33mcommit 298289f43f8777ea7e8ab6e5bd3aad563635043d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 5 11:37:25 2012 +0100

    Let flow:only_stream and flow:no_stream set the require packet and require stream flags. Toss out sigs with conflicting settings. Rename flow:stream_only to flow:only_stream. Fixes #261.

[33mcommit c04f45ccb93a2d7e0700f7c65a807a2a591ce397[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 5 10:27:11 2012 +0100

    Add tcp-pkt and tcp-stream 'protocols' to force a signature to inspect only packet or stream data.

[33mcommit 2c62b50ed5fe2a93738b08ced12a75246dad4d87[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 5 08:49:14 2012 +0100

    Fix 2 compiler warnings.

[33mcommit cfced016415e2e42376c02bfc831c223c2dd26b5[m
Author: Mike Pomraning <mpomraning@qualys.com>
Date:   Wed Dec 7 09:57:35 2011 -0600

    Use strlcpy

[33mcommit b5c11bd9fa1e4f88e628b48721f9613b6696cd13[m
Author: Mike Pomraning <mpomraning@qualys.com>
Date:   Tue Dec 6 11:52:54 2011 -0600

    Document new "filetype" argument for 'fast', 'http-log', etc.

[33mcommit 914b10a8e6dcc990e96b01066621887f708657cb[m
Author: Mike Pomraning <mpomraning@qualys.com>
Date:   Tue Dec 6 11:52:30 2011 -0600

    Touch up Makefile for SCConfLogOpenGeneric.

[33mcommit dfec9c0f6a21cc1cc2db29d91ae6963b499229e2[m
Author: Mike Pomraning <mpomraning@qualys.com>
Date:   Tue Dec 6 11:51:09 2011 -0600

    Switch 'fast', 'http-log', 'drop' and 'alert-debug' to SCConfLogOpenGeneric.

[33mcommit dec34afa4039aee40cc765a4699787ebce2da16f[m
Author: Mike Pomraning <mpomraning@qualys.com>
Date:   Tue Dec 6 11:48:28 2011 -0600

    SCConfLogOpenGeneric() abstraction for regular and AF_UNIX logs.
    
    util-logopenfile.[ch] implements the abstraction; util-error.[ch]
    modified to include a socket-specific error code; output.h adds a
    default filetype for logs ("regular").

[33mcommit a1cb769205c4e3fa115bfbf871836e02cf55391d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 4 17:07:33 2012 +0100

    Switch log-file module to use new absolute path detection code.

[33mcommit 4cbaeb408c48a9c6d2b516bd928c3c366aed5f98[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 4 16:53:55 2012 +0100

    Add functions to determine whether a path is absolute or relative.

[33mcommit a397599fbbd5803f52c7c2c7789aaa0a96969176[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 4 16:40:52 2012 +0100

    file extraction: add waldo option to file log module. This will store the last used file_id so extracted files won't get overwritten is Suricata is restarted.

[33mcommit effe01ae7ba4c8affa49cbfcc261a7c426c3f937[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 3 16:49:58 2012 +0100

    Add Init and DeInit calls to the thread module API.

[33mcommit 7fb78a0ff6ffe734efff16ff35be57438c88d980[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jan 4 11:53:51 2012 +0100

    Fix compilation warning.

[33mcommit 08f3ef7685e8fbce03020a087640b593e136da73[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 3 15:38:06 2012 +0100

    Reshuffle version printing so -V prints it only once.

[33mcommit 1bebb9831d8da8b6817bd4de80029d5fd9152037[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Dec 19 15:32:43 2011 +0100

    logging: don't display debug message before setting params.

[33mcommit 05f562fdc301919dc8333bbe86801dab346d41a3[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Dec 19 14:49:59 2011 +0100

    logging: use SCLogDebug instead of printf
    
    This patch uses SCLogDebug instead of printf to enable filtering
    of the log message by the log filtering option.

[33mcommit 9545a56426c8a7dc52aebbac1d9307d685086ced[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Dec 9 10:25:20 2011 +0100

    ipfw: suppress poll before sendto
    
    Calling poll before using sendto seems a bit overkill.

[33mcommit 6f1b40dd4b5fd2377815fe3a9c233c960aeb7391[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Dec 8 14:16:40 2011 +0100

    ipfw: don't use socket lock in 'worker' mode
    
    This patch is the IPFW version of NFQ latest patch.

[33mcommit 58855494c10dc03277c31d7c6eeea54ff029c946[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Dec 8 13:48:38 2011 +0100

    nfq: do not use mutex in 'worker' mode
    
    Using a mutex on the queue handle is not necessary in 'worker' mode
    as there is no concurrent access to it.

[33mcommit ef3951d914823038ce7dfe2a57a9e4bd98dc70ce[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Dec 8 13:51:19 2011 +0100

    runmode: export running mode
    
    This will permit to put some optimisation in different components.
    This is done via the RunmodeGetActive() function.

[33mcommit c9085745455dd575d91e49031518b709e6f87d7d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 3 14:29:53 2012 +0100

    Use strtoul instead of strtol for sid parsing. Fixes parsing of really large sid numbers. Fixes #393.

[33mcommit c1a40447c1f2d8047e541f64334bdd8aa243142f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 3 14:24:33 2012 +0100

    IP Only cleanup: make most functions static. Add error message on address parsing issues.

[33mcommit e0cf2ccb91592f4f996723663dcabd5b0dbeb1df[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 3 12:31:55 2012 +0100

    Fix invalid direction error message.

[33mcommit 801f92f7059191026238dd54d5c50745256f35c3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 3 10:49:10 2012 +0100

    Disable the drop.log in the default config.

[33mcommit db196807943c494eef96841b2332a136f39c5bcc[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 2 09:41:15 2012 +0100

    pcap: fix auto runmode
    
    This patch fixes initialization of a pointer. The lack of it was
    causing an invalid interface value to be given to suricata (in
    the case no interface was given on the command line).
    
    Reported-by: Delta Yeh <delta.yeh@gmail.com>

[33mcommit 3d558bf06fee3447d94931711a264bbeebbe44cc[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Dec 19 16:35:17 2011 +0100

    pcre: compile jit by default if available.

[33mcommit 5a769c02ee4e66f8704027af7f059567ce899bb4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 23 13:19:47 2011 +0100

    Stream engine: handling packets with ACK|CWR.

[33mcommit 999c34111eaa4b16d180b7363176c90d1c8cea0e[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Dec 22 15:55:58 2011 +0530

    bug #341 - support for urilen check on both norm and raw buffers

[33mcommit 158d72e7f3c0f2d1b3603552e0fe35bebc6b0ea5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 23 12:15:52 2011 +0100

    file-inspection: inspect new files in same tx but opposite direction as well.

[33mcommit a6e75aff214226e74458cd94812b79fdabb4faa6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 22 17:48:48 2011 +0100

    file-extraction: improve handling of complex multipart bodies.

[33mcommit 4eda31df4d1bd1a523222c2e566f3cbe4d0ef34a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 22 17:46:12 2011 +0100

    file inspection: unset new file available flag when appropriate, prevents duplicate alerts.

[33mcommit 2aa04add5449dc4b547f885332432abe0ceb2ab9[m
Author: Chris Wakelin <c.d.wakelin@reading.ac.uk>
Date:   Mon Nov 14 11:09:04 2011 +0000

    Fix PF_RING BPF filter availability check

[33mcommit fbe7ba411e20d6682d32f89ea792ada28d60efe7[m[33m ([m[1;33mtag: suricata-1.2beta1[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 19 15:26:17 2011 +0100

    Add md5 to reference.config.

[33mcommit c0cd2c8596095ee17fbaccc6516f31d4247ff116[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 19 14:04:08 2011 +0100

    Update Changelog to reflect changes in 1.1.1 and 1.2beta1.

[33mcommit 6e2c9210371141a883f7c3f0863af77c570a0f1d[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Dec 19 14:40:06 2011 +0530

    indentation fixes for ac-gfbs

[33mcommit 2eb3aff0af53c420e30d777de4aca6dd71c9f62c[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Dec 19 14:37:09 2011 +0530

    Further improve compression for ac-gfbs. Character codes shifted to 8 bits from 16/32 bits

[33mcommit 0712300a1c66497c9142fa0e95305f1e4b2f7a18[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 19 09:58:00 2011 +0100

    Remove stream BUG_ON's that could fire on TCP session reuse.

[33mcommit 0cde8072f4d9a6a20829338e8c333971ca8b7235[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Dec 17 14:12:40 2011 +0530

    fix ffr shutdown segv. We need to supply stream TV the the stream engine

[33mcommit 5620844f7daef12d367abeef4af2b90837bb087e[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Dec 17 13:02:44 2011 +0530

    ac-gfbs fix output presence combination with mod table

[33mcommit 153f2ad3ebb9440b8dd35fc20b9af56cd39913a5[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Dec 17 11:18:19 2011 +0530

    ac-gfbs update. Minor improvement of compression for state 0. Improves performance

[33mcommit c6cd59bda49c2cf103cbd25fef4ef037a7791e82[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Dec 16 15:51:45 2011 +0530

    Update ac-gfbs with some rearrangement. Increased performance from 4-10%

[33mcommit e18cf72c1337ad000358d8e5a96b6004b8ba5833[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Dec 18 14:04:16 2011 +0530

    fix bug in size parsing API. Pass the string returned by pcre_get_substring and not the passed arg. Also use strtod. Solves usage issues on windows

[33mcommit 842b01cc9c537f34552ccce357182ad3d0706623[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 16 16:10:42 2011 +0100

    Remove duplicate sys/prctl.h configure check. Wrap another include in HAVE_SYS_PRCTL_H.

[33mcommit aaa5a78dfe32b1788f07f692bf97f3a0ff1e842a[m
Author: Eileen Donlon <emdonlo@gmail.com>
Date:   Thu Dec 15 10:14:44 2011 -0500

    Moved prctl.h check to configure

[33mcommit 37dc83d41148f6c99a877ce7d832a6f4c3be7313[m
Author: deltay <delta.yeh@gmail.com>
Date:   Fri Dec 16 00:42:34 2011 +0800

    ignore signal SIGPIPE and SIGSYS

[33mcommit c2c539942bfe57106c674aa7bcf2c41e901e5967[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 16 13:47:24 2011 +0100

    Rework the way the http parser can tell the de_state to reset it's file section on arrival of new files in the same tx. Fixes a dead lock in the auto runmode.

[33mcommit 679b8ec1ba31d5a64c58c8e7479abc157a6f2f07[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 15 18:21:52 2011 +0100

    Fix filestore match code not expecting NULL file ptr.

[33mcommit a65eb59c41b6c7c2e18d955079ac121cb531931c[m
Author: Steve Grubb <sgrubb@redhat.com>
Date:   Thu Dec 15 10:50:27 2011 -0500

    Add relro flags to libhtp
    
    Hello,
    
    The main suricata program can detect and use relro/bind now linker flags. But
    the directive is per linked object. This means that while the app has
    protection, its code segment containing libhtp does not. The patch below passes
    the configure option to libhtp and let's it make use of the compiler's
    security protection.
    
    Signed-off-by: Steve Grubb <sgrubb@redhat.com>

[33mcommit 18d79c4215c4b9d45e845ec48a680853e271f537[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 15 17:01:53 2011 +0100

    file store: respect flowbits and other keywords
    
    The filestore keyword until now flagged a file, tx or ssn for storage as soon
    as the keyword was inspected. This happens before flowbits and some other
    keywords, so files were stored that weren't supposed to.
    
    This patch makes the filestore keyword fill an array in the detect engine
    thread ctx. Then if the full signature matches, a post-match filestore
    function makes the store final.

[33mcommit 717325675415a4554a7c0206b60f789a5b895b94[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 14 18:31:30 2011 +0100

    Fix compiler warnings in a couple of unittests.

[33mcommit 6d8aa6829da462cac5f140e9e0fd8f4103afaa06[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 14 18:03:54 2011 +0100

    Remove unused variable.

[33mcommit b164247fb84d651d81e380c1c5ab0a802217cb2b[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Dec 13 19:52:12 2011 +0530

    Changed my email address to anoopsaldanha@gmail.com from my current one - Should have been an amend over my previous commit, but that commit's pushed out

[33mcommit f514b141ce6529b51551e20d567fd0c02789af1f[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Dec 13 21:04:40 2011 +0530

    fix ipv6 header setup in pseudo pkt creation

[33mcommit 416b463c51be870b685bdb71074dfe2399765573[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 14 14:38:06 2011 +0100

    file-data: add more unittests

[33mcommit 296ce8b5f99e0c1a343d6263f61fc8f2eccd30a4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 14 14:17:46 2011 +0100

    file-data: make bytejump, bytetest, byteextract and isdataat work better with file_data.

[33mcommit 077970051e49ca26a4d0fbcd575609240c6a57f8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 14 11:02:12 2011 +0100

    file-data: implement relative pcre support.

[33mcommit 07e560b137f5f011d050ba515ca98badb97c8885[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 13 17:48:19 2011 +0100

    file-data: initial file_data support
    
    Support file_data for: content, pcre (relative), byte_test, byte_jump,
    byte_extract, isdataat.
    
    File_data support is handled at signature parsing time, all matches
    occurring after the file_data in the rule are converted to http_server_body
    matches.
    
    Content matches relative to the file_data are converted. Within to depth,
    distance to offset. Relative to the start of the body buffer.

[33mcommit 7adac3048de98735f4df07dedd5b37b87dc07c83[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 13 14:16:34 2011 +0100

    file-data: create initial keyword registration.

[33mcommit 420befb18035d1a9800a70fd601311758920ae1a[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Dec 13 15:52:37 2011 +0530

    Changed my email address to anoopsaldanha at gmail dot com from my current one

[33mcommit fa0152fa80c5249e4d4f667795f2b43cbf176a83[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 13 12:27:45 2011 +0100

    Shrink signature flags field to 32 bits.

[33mcommit dd9da1a56f12fc93715283d4fd6ff9947daa2e79[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 13 12:15:00 2011 +0100

    Merge all http mpm related signature flags into a single set: SIG_FLAG_MPM_HTTP and SIG_FLAG_MPM_HTTP_NEG.

[33mcommit d5ed28b065ec61d00205310f1be0c51bda5092ef[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 13 11:58:46 2011 +0100

    Remove SIG_FLAG_MPM flag.

[33mcommit fe4892051485b1202855472bd7534e25c68a40c1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 13 11:42:54 2011 +0100

    Remove per sgh mpm_streamcontent_maxlen variable. It was checked but never set.

[33mcommit 4992f7c417737fe3616b272a1ae3170ae4cce151[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 13 11:39:50 2011 +0100

    Remove SIG_FLAG_MPM_URI flag. It was checked but never set.

[33mcommit 2650551192806ab1cb349f4688e268cd1b8fa8be[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 13 11:24:11 2011 +0100

    Rename signature init flags to indicate they are init flags.

[33mcommit 6ebd71545baa3968fef7b61cfa69866eb734c3f7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 12 15:55:23 2011 +0100

    Fix signature flag definitions on 32 bit.

[33mcommit 291ddd95f259124759aba3cc5420413d5b5f8941[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 12 15:22:06 2011 +0100

    Detection engine -- mpm
    
    Each signature is in one mpm ctx at max, but there were 3 separate
    id's in use: packet, stream, http. Merged them all into one.
    
    Could shrink the SignatureHeader structure with 8 bytes because of this,
    should lead to better caching performance.

[33mcommit 7db72bce75120c8751ed21d6a8aefcc7d5a020fd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 12 13:48:21 2011 +0100

    Optimize detection engine prefiltering logic.

[33mcommit 89f83e714c61049b767fdd4755e02e10bd4c7ad2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 12 12:23:42 2011 +0100

    Introduce http_server_body keyword.
    
    The http_server_body content modifier modifies the previous content to inspect
    the normalized (dechunked, unzipped) http_server_body. The workings are similar
    to http_client_body. Additionally, a new pcre flag was introduced "/S".
    
    To facilitate this change the signature flags field was changed to be 64 bit.

[33mcommit 6e7a8f38bf837803a85b4aa50c7ca22f23a4c8b1[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Nov 30 12:45:12 2011 +0100

    ipfw: Add support for autofp and worker runmode
    
    This patch convert ipfw code to the PcktAcqLoop API and
    rework the running mode to use the running mode wrapper
    already used by NFQ.

[33mcommit c1ad64b33384c9815f77e265f5072896ed001f77[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Nov 23 08:54:11 2011 +0100

    ips: update copyright date and author list.

[33mcommit d4cbc7c38ca1ff51f57cae202b7b736b05ca9adb[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Nov 4 17:36:57 2011 +0100

    ipfw: funnier to manage capability in running code.

[33mcommit f1cb4da4429c6f504928270edff5b37d69eac752[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Nov 4 17:34:57 2011 +0100

    ipfw: fix indentation of the file.
    
    I will have to work a lot on this one. It will be easier with a
    correct indentation.

[33mcommit acc963410636a417b975eb954f7369b3c4f7f5d1[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Nov 29 10:17:02 2011 +0100

    nfq: add some comments about possible evolution

[33mcommit 9ca7257279390f4d28cb3fdb797a2005b18a612a[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Nov 23 10:36:06 2011 +0100

    nfq: suppress unused functions.

[33mcommit 58b20359a74d5b99f46138e4abe3fc989924df0b[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Nov 4 15:12:09 2011 +0100

    nfq: add worker runmode support.

[33mcommit aee2e3ddd6f429742511529fa588e5c428b70c3b[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Nov 4 09:27:19 2011 +0100

    nfq: Add autofp mode support

[33mcommit 115c3499d27efeb4c8110d0dcfa5ac3452e68477[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Dec 8 11:33:44 2011 +0100

    nfq: factorize auto mode

[33mcommit 70c574fb63f4622efff0c5fb2bd3c57515028f05[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Dec 8 11:25:45 2011 +0100

    runmode: Add support for IPS running mode
    
    This patch adds the 'auto', 'autofp' and 'worker' runmode for
    IPS. It provides a set of ready-to-use functions that can be
    used by NFQ and IPFW to implement this running mode.

[33mcommit 5cfdd7594f68037562dd616daf594a7f679f1099[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Oct 28 11:31:34 2011 +0200

    util-device: Modify function name.
    
    This patch modifies LiveBuildQueueList name to LiveBuildDeviceList
    to have a consistent naming accross function. It also adds a
    doxygen comment to add author and description of util-device.c
    file.

[33mcommit 7096e11ab558740acc2eb2c201efb11160a27753[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Nov 4 10:26:56 2011 +0100

    af-packet: simplify code.

[33mcommit 5cec22ac37511e9f5e89e3de62bcafe1d705acc9[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Nov 4 09:57:44 2011 +0100

    threads: Add sanity check.

[33mcommit 327fd048a06c4679494986bc6e271e82b33387a2[m
Author: Eileen Donlon <emdonlo@gmail.com>
Date:   Wed Dec 7 17:34:21 2011 -0500

    Fixed coredump windows compile issue

[33mcommit 6c55af847b5018fed759f2d885c62b430ca852e7[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Dec 7 19:17:13 2011 +0100

    'auto' running mode does not support 'threads' var.
    
    This patch modifies the RunModeSetLiveCaptureAuto() prototype to
    be able to detect that a 'threads' variable (telling how much
    threads must listen to one socket in IDS mode) has been used
    in the configuration file. It then print a warning message
    if this is the case.

[33mcommit 6f0ca120d1ab80246bc57927f7520a425daad787[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 7 19:24:57 2011 +0100

    Make sure existing log-pcap and unified2-alert 'limit' settings don't break.

[33mcommit 678213c9f410451ac3829087c0d37e4c74a83494[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 7 18:18:17 2011 +0100

    Fix ParseSizeString return code and a compiler warning.

[33mcommit 4b8ebb5c530068dfaf825258ec05db4c7c1a4b1d[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Dec 7 21:35:14 2011 +0530

    set default response body limit for specific http server conf

[33mcommit 6240131a4ede51840e7388cc0c455c9b02390868[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Dec 7 16:48:04 2011 +0530

    updates to accomodate master rebase

[33mcommit 7c9d1b80fda6366708d1a203449b2dc447d78896[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Dec 1 22:27:13 2011 +0530

    Update size parsing API with new calls for returing u8, u16, u32 and u64 values. Make updates in the codebase to use these new calls

[33mcommit 52b37fef3e58e8f70a1a7f9f34eb6205331a74cd[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Nov 30 01:32:48 2011 +0530

    Update yaml size params to use kb, mb, gb to indicate size, in place of raw bytes

[33mcommit e0c13434effbb3ab4903d2667ad0b2ae0d82766a[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Nov 30 00:59:41 2011 +0530

    bug 333 - support new Size Parsing API. Update various conf params inside the engine to use this API to parse sizes in the format xxx <-just the no represents bytes, xxxkb <- kilobytes, xxxmb <- megabytes, xxxgb <- gigabytes, where xxx is a \d+

[33mcommit 79e0299643043eec4031012c48cd15dbbd4df10c[m
Author: Eileen Donlon <emdonlo@gmail.com>
Date:   Wed Dec 7 10:51:35 2011 -0500

    Fixed coredump compile problems on bsd, windows

[33mcommit b970273163a43ef55725687ab8f81075c79c36db[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Dec 7 12:01:54 2011 +0530

    fix broken unittest

[33mcommit 651f91e4de201c6b86ee89be320d4e295558fb0a[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Dec 6 19:34:20 2011 +0530

    fix setting pseudo packet from this commit:
    
    commit 259e022f721a7c3a70c26447b1cf730bb8a1f6cd
    Author: Anoop Saldanha <poonaatsoc@gmail.com>
    Date:   Sun Dec 4 13:20:43 2011 +0530
    
        fix setting ipv4 header in pseudo packet

[33mcommit d40fb5b933c16c6fec5bac933c917d3efe61361e[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Dec 5 21:56:59 2011 +0530

    Remove unnecessary flow NULL check

[33mcommit 8533cd2cdfabe826292fa0d5c3c3ccd1bbd9d6df[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Dec 5 21:33:47 2011 +0530

    fix mapping of tcp states to flow_established and flow_closed. Improves accuracy

[33mcommit cc7db6315c377439e558e0b3daf64380495fb9a7[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Dec 4 13:50:15 2011 +0530

    Move setting packet iponly flags from decode section to stream section

[33mcommit eaf15911e7ee3841bc631f6d58373f546cb5c74f[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Dec 4 13:20:43 2011 +0530

    fix setting ipv4 header in pseudo packet

[33mcommit 322779fb23ca4551761f01f2b0f8727bedc61892[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 7 14:49:23 2011 +0100

    flow engine: release flow lock earlier in flow kill/prune process. Minor cleanups.

[33mcommit 5401764697b6d121e111dff75fd08d77ac250331[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 7 10:55:47 2011 +0100

    flow engine: minor cleanup.

[33mcommit bfa872b9b70e44f0039e3c7be9e8e16817704677[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 7 10:42:54 2011 +0100

    flow engine: no longer allow FlowRequeue to be called with the same src and dst queue.

[33mcommit 84c7480c06ef145873af79edae4134010173c357[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 7 10:35:18 2011 +0100

    flow engine: convert flow hash code FlowRequeue call to FlowEnqueue.

[33mcommit ad4e0162883b65ffca2c90dffab6d8a27dce3c0a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 7 10:32:42 2011 +0100

    flow engine: make FlowEnqueue lock the queue. Adapt callers.

[33mcommit fbbdbb251fdf49e76e8a97ccb5ecabe504fc1ba8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 7 10:19:51 2011 +0100

    flow engine: remove unneeded 'need_srclock' argument for FlowRequeue

[33mcommit 0331da97735499948ed96f85dfd9381212d25d6e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 7 10:10:33 2011 +0100

    flow engine: introduce FlowRequeueMoveToSpare
    
    As part of a clean up of how FlowRequeue is used, introduce
    FlowRequeueMoveToSpare for moving a flow from a locked queue to the
    spare queue.

[33mcommit 7fa3df33f217c921cad1ef5b67d6ad1c53c5e547[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 7 08:03:10 2011 +0100

    flow engine: introduce FlowRequeueMoveToBot
    
    As part of a clean up of how FlowRequeue is used, introduce
    FlowRequeueMoveToBot for moving a flow to the bottom of it's queue.

[33mcommit ae1e4c1d7d5c70b2650ff22d3adffeb6f6701aa1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 6 20:21:25 2011 +0100

    Add missing hash row unlock.

[33mcommit f47f601f093b0345d6752954b4d4100674d7cf2a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 6 16:31:16 2011 +0100

    Fix unified2 setting the wrong eth_type.

[33mcommit 9422a368514d11f7b1f1f820260f0ad90d10acf2[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Nov 24 16:36:46 2011 +0100

    unified2: avoid to log RAW packet
    
    If the packet datalink is ethernet, we add a fake ethernet
    header to stream logging to avoid that barnyard2 create
    different files.

[33mcommit fc56abfcd08a30da15fef69bf3cd1e18da45edae[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Nov 23 17:38:59 2011 +0100

    unified2: log an ethernet header for stream alert.
    
    If packet is a of type ethernet, we log the alert reconstructed
    payload as an ethernet packet and not a raw packet. This will avoid
    to confuse barnyard2 pcap output.

[33mcommit 49d6885ec7e6fcf3b9da0fd20c9ff9408ab3c42e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 6 15:09:08 2011 +0100

    Improve debug validation code for packet, add new macro for flow.

[33mcommit 3009429e3c6b726159e30e8b90b393faa5b0e24d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 6 14:27:25 2011 +0100

    HTTP transaction handling improvement
    
    In some cases AppLayerTransactionGetInspectId can return -1, which is
    now handled by all it's callers.
    
    Improve logic of selecting which transactions are inspected by the various
    HTTP keywords.

[33mcommit dbdf2d888f85ef64612614c9a8169c771eb2f2b7[m
Author: Eileen Donlon <emdonlo@gmail.com>
Date:   Mon Dec 5 17:24:35 2011 -0500

    Enable/disable core dump in config (feature 319)

[33mcommit 7b0f261fdc5e36bc659a72f2b15ca4b05b566391[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 5 13:59:42 2011 +0100

    Add some debug statements for debugging a smtp issue.

[33mcommit 004b5dde88d5732a953d03f1dbaf8db841e5d8e8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 5 13:41:18 2011 +0100

    Support libhtp's different handling of CONNECT requests.

[33mcommit 117d51c96581bd1117e1ad377abed9b5164f46b9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 5 09:42:02 2011 +0100

    Fix a compile warning when debug is enabled.

[33mcommit 1df33046551059f607e63093b8134d02d4601285[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 5 08:28:46 2011 +0100

    Clean up for unittests code: only compile unittest api code when unittests are enabled. Fix unittest code that wasn't wrapped in the proper UNITTESTS ifdefs.

[33mcommit a138b325336bc813efad830f437949ad3d6a6043[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 2 18:04:32 2011 +0100

    flow manager: timing change
    
    Set default timeout for the flow manager to wake up to 1 second. The 0.4 sec
    performed best on a Xeon, but in kvm vm's it was horrible:
    
    32 bit vm: 60% cpu for flowmgr when idle.
    64 bit vm: 30% cpu for flowmgr when idle.
    
    With the 1 second timeout both are at 0.3% cpu.

[33mcommit 786148319c912d6a891680bd4ea66339ffa88b26[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 2 16:54:52 2011 +0100

    Lower flow manager wake up timer to 0.4 seconds as that performs 2% better in my tests.

[33mcommit 776bf633e302395829c3fdbaef3c34a2ae5a0eeb[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Dec 1 18:33:18 2011 +0530

    flow manager code cleanup. Remove unused code + fix indentation. Remove unused vars

[33mcommit 5133098bd6f84280efdd40edcd8f0d693e010a62[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Dec 1 18:24:44 2011 +0530

    Accomodate pcap-file mode to signal flow mgr to wakeup when it exceeds a certain time interval. This let's the flow mgr keep in sync with pcap timestamp changes

[33mcommit 9917744707140e03a9c0280defee9026ef953985[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Dec 1 03:21:03 2011 +0530

    separate timers for flow mgr thread for normal and emerg mode. Signal flow mgr thread when in emerg mode

[33mcommit 5a63662766a49f5b68e7dead0558c988eb405299[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Nov 28 15:54:25 2011 +0100

    Flow: use condition system instead of short sleep
    
    Short sleep can lead to some really annoying performance issue in
    some environnement like virtual systems. This technic was used in
    the flow manager. This patch uses an alternate approach based on
    a timed condition which is triggered each time a new flow has to
    be created. This avoid to run out of flow. A counter is also done
    to be able not to run the cleaning code at each new flow.

[33mcommit 34450b9b573251cd71037c9a362ba125f8c71928[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 2 12:18:06 2011 +0100

    Don't parse layers / ext headers above ipv6 frag header. This is taken care of by defrag.

[33mcommit 938e9b3db01c7736b218f4c0e5b5fd74e2ff310b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 2 11:37:36 2011 +0100

    Fix filestore related segv.

[33mcommit e6d8d0443c8b4f3ca7b3d44657edb7bfbeb59498[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 2 08:23:15 2011 +0100

    Unify output functions for alert-debug for IPv4 and IPv6.

[33mcommit 3c7f09d1ead908717e6d594712e939b54601d02a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 2 08:22:30 2011 +0100

    Add debug output to engine event.

[33mcommit fd4e1460cfe5b62e6640a19d43ae84c489eab353[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 2 08:19:54 2011 +0100

    Add checksum validation rules to decoder events rules.

[33mcommit e6af837b25871bee143841337363ab4ed89ab58e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 2 08:19:12 2011 +0100

    Convert StreamTcpSetEvent function into macro. Eases debug.

[33mcommit 58011554b01a3f2e6aa7d5fa879d157060f2378b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 24 20:29:05 2011 +0100

    Don't consider payload len in ACK value validation check.

[33mcommit 9878eca0860e3b59a48030f2a894fb51e13c4eae[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 1 18:08:15 2011 +0100

    file handling: expand filestore keyword
    
    Filestore keyword by default (... filestore; ... ) marks only the file in the
    same direction as the rule match for storing. This makes sense when inspecting
    individual files (filemagic, filename, etc) but not so much when looking at
    suspicious file requests, where the actual file is in the response.
    
    The filestore keyword now takes 2 optional options:
    
    filestore:<direction>,<scope>;
    
    By default the direction is "same as rule match", and scope is "currently
    inspected file".
    
    For direction the following values are possible: "request" and "to_server",
    "response" and "to_client", "both".
    
    For scope the following values are possible: "tx" for all files in the current
    HTTP/1.1 transation, "ssn" and "flow" for all files in the session/flow.
    
    For the above case, where a suspious request should lead to a response file
    download, this would work:
    
    alert http ... content:"/suspicious/"; http_uri; filestore:response; ...

[33mcommit ddfa5c49c6c7559e6f02ee463e90d884ea11cce8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 1 11:55:07 2011 +0100

    Stream engine: gap handling
    
    Set a stream event for stream gaps.
    Add a (disabled by default) signature to the stream-event.rules.

[33mcommit 45d86ff58a88de3d9051f8c5378044d7813da05c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 1 11:35:08 2011 +0100

    Stream reassembly / app layer: disable gap errors
    
    Gap errors on the app layer are now silently handled. No longer printed
    to the screen.

[33mcommit 425294f912b4dff8441cefe21539082b1b10ea59[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 1 11:30:08 2011 +0100

    stream reassembly: account stream gaps
    
    Add counter to the stream reassembly engine to count stream gaps. Stream gaps
    are the result of missing packets (usually due to packet loss). This missing
    data stops the reassembly for the app layer.

[33mcommit d8d8fdd9f56c0ab150ba0998844875df0ec858c0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 30 17:05:47 2011 +0100

    Improve handling of packets when stream is in the fin_wait1 or fin_wait2 state.

[33mcommit b74c73309b3ea8e718cb11ae82bf41fa61823194[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 30 14:05:31 2011 +0100

    file handling: improve filestore keyword handling
    
    In stateful detection only inspect the file portion of the rule after all
    other conditions matched. This to prevent "filestore" from tagging files
    for storage during a partial match.
    
    Add a couple of unittests to test the behaviour change.

[33mcommit 4cbe7519fa2677d6108fe93970ad7f942b700567[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 29 15:55:47 2011 +0100

    Add missing file util code.

[33mcommit a556338936ad3cd2b0379a6985fb62084368d99e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 29 15:40:09 2011 +0100

    Add magic-file example to suricta.yaml.

[33mcommit 56b96363b860c3d388a8866ddea043918e633626[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 29 15:38:21 2011 +0100

    Fix merge artefact.

[33mcommit 63c9a3ab856dad25cb13f8d208df872f7253cf04[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 29 15:36:26 2011 +0100

    Remove duplicate include.

[33mcommit b3e167932121f50fd6d56818acd4f0cd07d420de[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 29 15:22:49 2011 +0100

    file handling: add example files.rules file
    
    Adding a rule file with various examples for using the fileext, filename,
    filemagic and filestore keywords.

[33mcommit 53df3982a1e3b15cb0506132dcf8bf5c9c077385[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 29 15:18:39 2011 +0100

    Update suricata.yaml for file extraction.

[33mcommit 042fd850fc4238e9d16ed9c2458e9b4fa798eefc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 29 15:16:44 2011 +0100

    Make sure we check the sgh for no magic and no store once per flow direction.

[33mcommit f3fbc1a44c2c87df8da5874157834f503af55058[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 29 15:07:08 2011 +0100

    file handling: filemagic matching improvement
    
    Magic buffer is a null terminated string. Allow matching on the final
    \0 using filemagic:"somevalue|00|"; so we can anchor to the end of the
    buffer.

[33mcommit 2ccd35c6e45de43d3bd02a3c718a4f6b3802dd9f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 29 15:06:49 2011 +0100

    Fix code after rebase.

[33mcommit 33848124d193cec660f6c88e84b0d1be786c3fac[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 20:15:02 2011 +0100

    Fix a multipart body parsing issue.

[33mcommit 96d20098b0c07ef55a4267930e5bcb54f924a04f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 18:14:09 2011 +0100

    file inspect: stateful inspection split
    
    Split stateful detection of the files in a HTTP state between toserver
    and toclient inspection.

[33mcommit d59ca75e4697cb28d9a249c73a213770dbcf1702[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 17:44:55 2011 +0100

    file extract: split toserver and toclient tracking
    
    Split toserver and toclient file tracking for the http state.

[33mcommit 04ea70ccf7c1074530bce57d0105d29d208b5f1e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 28 16:54:25 2011 +0100

    file extract: pruning
    
    Add pruning of files in memory so we keep only memory what we really need.
    Fix magic logic.
    Reset file part of the de_state on receiving another file in the same tx.

[33mcommit 1c934acc850c53e9c4c035252e064139abc0745c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 15 09:54:35 2011 +0100

    Don't store fd per file (too many fd's). Enable IPv6 storing. Close file on receiving stream end flag.

[33mcommit b402d97179eebe575158c6c60d4ae340b3b8aea6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 11 21:35:52 2011 +0100

    File carving -- enable reponse file extraction
    
    - Enable response body tracking
    - Enable file extraction for responses
    - File store meta file includes magic, close reason.
    - Option to force magic lookup for all stored files.
    - Fix libmagic calls thead safety.

[33mcommit 66a3cd96a81f41fce1d0fc5104e6139362ceee2a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 27 23:28:35 2011 +0200

    Prepare HTTP response body tracking.

[33mcommit 417495e542a9d313300647a92084e27013b484dd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 27 22:45:29 2011 +0200

    file-extraction: remove no longer used files.

[33mcommit e1022ee5ae4f2583acf4ab8fec5936059a760379[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 27 22:44:51 2011 +0200

    file-extraction: Disconnect file handling from flow and move into the app layer state.

[33mcommit 27645f64c6db65b8e5872a9a3013d901074309d9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 1 13:14:42 2011 +0200

    Remove unused util-filetype.[ch] from Makefile.am.

[33mcommit 9b62ec65ab1b73051d573286e234d2383ec911f0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 1 12:16:49 2011 +0200

    Make sure filemagic works properly regardless of filestore being in use for a flow.

[33mcommit 5945e652d6bcc539ef7288626bd5c04ed2e32a4c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 29 16:57:30 2011 +0200

    Initial implementation of filemagic keyword.

[33mcommit f4a6f4b293ebd05c3088b95ceba18fb8978f128a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 28 15:19:30 2011 +0200

    Add libmagic detection, linking and a basic API.

[33mcommit 23e01d23d314c41963d00fd04b30ef30721124b2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 22 18:38:14 2011 +0200

    Implement filestore keyword, including a way for the stateful detection engine to conclude that a file will never have to be stored.

[33mcommit 3e7baa6810755331253b1d69e5507adcadefcd28[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 8 16:43:52 2011 +0200

    Fix improper error handling in http body chunk function.

[33mcommit 403b2788d6357a05cc8e7e9cface4e7b7f3864fa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 1 13:51:19 2011 +0200

    Add support for extracting PUT files.

[33mcommit 59cda9a358b9092626469a343fcc4d5822537f7a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 17 18:13:42 2011 +0200

    Fix not using new htp callback when using the bundled htp. Add indication to --build-info. Fix valgrind warning in test and further improve test.

[33mcommit 64aee5e70c7a2720b307dc01ef72e545c867856f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 3 22:46:32 2011 +0200

    Add file log to default suricata.yaml.

[33mcommit ef0536794c99596e1f49f4ddbae73fe2e5241327[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 3 21:46:58 2011 +0200

    Adding comments, some cleanups.

[33mcommit 21acd72adf7ab6f5e544fdacf286fc7694a54eac[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 3 17:55:34 2011 +0200

    Cleanups to the Multipart parsing code. Fixes to negation in filename and fileext.

[33mcommit 70f0d3d2e79aad3d9142d6f76b438c8bd4744bf5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 3 15:25:57 2011 +0200

    Add negation to filename and fileext, use same syntax as with content.

[33mcommit 32fb9f375d1355d3dc902e972b31f8584cab6de2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 3 13:34:52 2011 +0200

    log-file log-dir option added, meta file created, fixes.

[33mcommit a6b7a560f149e3b63c248c69ac9dc75af0c4c0d3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 29 10:48:53 2011 +0200

    Fix a bug in the HTTP file closing.

[33mcommit 7e3d537338757c7284b1f05ecb9efcd15ee23a54[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 29 09:10:45 2011 +0200

    Fix setting libhtp personality.

[33mcommit 1eef36b011aae14b8c88408ea1729f88a9cc3745[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Apr 24 16:00:10 2011 +0200

    Initial checkin of a log-file module, that can write files extracted from flows to disk.

[33mcommit 3c1edf3763f8fd571aa28578a481352765e5c6ec[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Apr 24 15:58:37 2011 +0200

    Add a file descriptor to the flow file structure.

[33mcommit cd618e48dfca132a8348c441d604f64d08eba24c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Apr 24 15:57:26 2011 +0200

    Allow for 0 (unlimited) HTTP request_body_limit, fix option parsing.

[33mcommit 4723f072543a5eac20278f7ae27a4d94c9dde07a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 22 17:00:16 2011 +0200

    Improve testing and fix some bugs.

[33mcommit 9d5d46c4bb147e48d76be309864ce6d1f889da08[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 22 10:51:12 2011 +0200

    Implement flow file storage API, create HTP wrappers for it, use it in HTTP parsing.

[33mcommit a0ee6ade3ecd43a20f4d9ebb1331cfc77220b08a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 21 12:50:25 2011 +0200

    Improve HTTP multipart parsing, add streaming parsing for files.

[33mcommit 4537f889ef0f553df08ad8ab3dd45e16e31342ff[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Apr 17 17:18:09 2011 +0200

    Handle all strings as raw strings in HTTP content-type and content-disposition header parsing.

[33mcommit 222bc6e935361ef7f5eacbe9953dd4bcf24b4343[m
Author: System Administrator <root@macuto2.local>
Date:   Fri Apr 8 17:55:15 2011 +0200

    Flow files

[33mcommit 6d60b3a747940b6cc78be0dc5b0cd3b76b93ef09[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Wed Apr 6 17:23:52 2011 +0200

    filename and fileext keywords

[33mcommit 06b1d71032f3b627058e4efe02dfd85ddb359094[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 28 10:31:42 2011 +0200

    Small optimizations to IPV4 and TCP header parsing.

[33mcommit 0256ca242209edbea23948df52cef4db7fb0fc2e[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Nov 28 18:01:14 2011 +0100

    af-packet: fix compilation on new systems.
    
    Inclusion of if_packet.h was missing when the support of new options
    related to packet fanout is present in the file.

[33mcommit bf24272c282d7ebb17f2a55315cbf176658848ec[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Nov 27 22:38:13 2011 +0530

    changes to accomodate master rebase

[33mcommit 997eaf42a8d1f37720b536878d78861395835ea3[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Nov 27 19:14:24 2011 +0530

    add thread local storage support for smtp + remove pmq that was init/freed as part of smtp_state alloc to use the thread local data passed by the app layer engine

[33mcommit 9a6aef459e99cac2340109ec26bdd8a141fa824f[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Nov 27 16:13:55 2011 +0530

    modify all relevant app layer API calls to accomodate passing parser local storage argument

[33mcommit d3468d88b049857a9aa15c55abe73bb8cd18298f[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Nov 27 14:30:25 2011 +0530

    app layer udp cleanup + update dcerpc udp todo

[33mcommit 01a35bb604fa05bd38265230ebe6da1a3bdac9e9[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Nov 27 14:18:46 2011 +0530

    introduce app layer local storage api support

[33mcommit 87599bc78d2569100358a3090ba7c34dd84daf64[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Nov 21 18:28:14 2011 +0530

    minor changes in smtp parser decoder wrt direction check loop + add missing ifdef unittests

[33mcommit 3a856fed1250dbc7ea2251567e022e35d3ee5984[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Nov 21 18:09:28 2011 +0530

    update detection engine to compare flow alproto with sig_alproto, rather than sm alproto.

[33mcommit 4d38a571cc32421b44a16a4018c6a0bf6cebda05[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Nov 21 18:07:07 2011 +0530

    smtp reply code mpm phase support added

[33mcommit 4a6908d3e960b8f9b5d2c67e6135235a08b6f508[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Nov 19 18:12:21 2011 +0530

    fix smtp parser handling fragmented lines + add new unittests to check the same

[33mcommit 2b356dadff5f75b0b3553b7a0f2107d31202d6ca[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Nov 29 01:59:47 2011 +0530

    Support for tos keyword added

[33mcommit 211193b0afe34554dd1f866d6b96a19d23a1b7d2[m
Author: deltay <delta.yeh@gmail.com>
Date:   Mon Nov 28 16:24:54 2011 +0800

    Get pidfile from config file if not available in command options

[33mcommit 262a7300d701c44dba13bb2aaa2b14bed3485383[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 27 16:15:58 2011 +0100

    flow: shrink Flow datatype
    
    Introduce a separate FlowAddress structure for holding the ipv4 or ipv6 address
    that doesn't have the family in it like the Address structure. Instead, the
    family is stored in the flow as a flag: FLOW_IPV4 and FLOW_IPV6.
    
    Add macro's to check the family, copy the address, etc.
    
    Update many unittests to reflect these changes. Introduce unittest helper
    functions for creating and initializing a flow and freeing it again.
    
    On 64 bit this shrinks the flow with 8 bytes.

[33mcommit 06904c90243e33c0506fbfdc1013c802d2918d72[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 26 14:36:34 2011 +0100

    App Layer cleanup
    
    Removal of per flow 'aldata' array. It contained a ptr for each ALPROTO. Instead now we have 2 ptrs in the flow: alparser and alstate.
    Various cleanups and dead code removal from the app layer API.
    Should safe 100+ bytes memory per flow on 64 bit.
    Updated lots of unittests to reflect these changes.

[33mcommit a0b532dc45a798c71ef14510a6e4238877a973cb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 26 00:44:24 2011 +0100

    stream reassembly: simplify base_seq tracking for protocol detection. Shrinks TcpStream structure.

[33mcommit 7e3c15e54a293a66e59a22ace9ea05f513086187[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 26 00:42:41 2011 +0100

    stream: improve TCP ssn reuse cleanup.

[33mcommit 9769510ba30be11ea9b2302825ef83df3a4e76f5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 26 00:41:49 2011 +0100

    flow: support requeue of flows from closed to new list for TCP ssn reuse.

[33mcommit 4130c5e2b879a7e721277dcf1e89185901f0f390[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Nov 25 22:42:55 2011 +0530

    if flow has disabled app layer inspection, disable buffering the segments unnecessarily in inline reassembly

[33mcommit 43cbed8c92e395ea3439d5418597da03c8401a90[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Nov 25 17:55:31 2011 +0530

    enable toclient alproto detection for inline reassembly

[33mcommit f684b60127f8106f5569b0cc1a35b0b0464d095a[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Nov 23 14:13:26 2011 +0530

    if flow has disabled app layer inspection, disable buffering the segments unnecessarily

[33mcommit 08bd8ec4e249e4f7132b0393ebf5a0ef2c5290cc[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Nov 23 01:38:27 2011 +0530

    on failed alproto detection on both sides, only disable app layer inspection. No reassembly disabling for any direction

[33mcommit c9960473bbd98ac1f43e6c798efc9b4ee06dfe52[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 23 12:44:15 2011 +0100

    Fix stream reassembly engine rejecting valid packet for reassembly.

[33mcommit d9ad1b00b3ca8cef09881880532a023d0dbc9028[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 23 12:43:18 2011 +0100

    Clean up SID allocation for decoder and stream rules.

[33mcommit 55ed6c2a55d41155a56efda237b475ff6ed72d54[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Nov 22 02:56:00 2011 +0530

    disable session reassembly for either/both the directions, only when we have established failed proto detection in both the directions

[33mcommit 4650bf717080e6b170d311148951d1810b7cbcb5[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Nov 20 13:17:55 2011 +0530

    minor code cleanup. remove commented out code

[33mcommit de9ad02b59d3d14601ac30ff44e52df8775e6dc6[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Nov 8 14:41:11 2011 +0530

    Remove leftover imap and msn toclient alproto PM contents

[33mcommit caf26c26186a9c2bcfa36944747848db923d881b[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Nov 8 14:26:01 2011 +0530

    More updates to FFR code. Handle cases where we actually need to force stream reassembly and just have smsgs to be processsed by detection engine separately

[33mcommit bc216a33964815565862a231aeb67cca69e34afc[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Nov 6 00:13:25 2011 +0530

    fix/updates to app layer proto detection

[33mcommit 78e6a7f71369833e0c1fcc1492ff746e0cbd57b3[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Nov 5 14:41:46 2011 +0530

    enable toclient alproto detection. Detection all current alproto toclient PMP patterns

[33mcommit 9c8d404db1b83470217f5c763070f940fea2a0d2[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Nov 7 10:56:38 2011 +0530

    FFR update-fix. Fix check where we decide whether we need to send pseudo pkt or not

[33mcommit b08b390bcd33d47cb69398f2ed719827860ed651[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Nov 12 22:04:43 2011 +0530

    fix for bug 375 - update radix test that wrongly uses memset and sizeof

[33mcommit 3d845b6c77bf00ad08c3d0769b3e463531163aeb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 15 10:06:11 2011 +0100

    Consider Windows new line chars as well when parsing rule files. Bug #374.

[33mcommit a92d15ed37e5f18723b166ca5a31d3f46af5976e[m
Author: Eileen Donlon <emdonlo@gmail.com>
Date:   Mon Nov 14 14:06:02 2011 -0500

    Fixed duplicate signature check

[33mcommit 99baf18c8dcdb98550157784f6d3856130e6d41f[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Nov 10 12:21:18 2011 +0530

    updates to ac-gfbs search. Remove unnecessary casting of pointers

[33mcommit 11e7dda59a51ae76c7d9f568299cfdfb4e60c244[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Oct 28 17:54:58 2011 +0530

    updates to ac-gfbs search. Introduce handling cases where state_count is < 32k

[33mcommit 708c4ad0550d5cae38aff66d848bca0f8a13795f[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Oct 28 14:04:50 2011 +0530

    updates to ac-gfbs search. Combine output presence with mod goto table

[33mcommit a4ea7e61977b8844cb0b983e9946926aee1f478c[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Oct 27 20:56:05 2011 +0530

    updates to ac-gfbs search. Combine failure table along with mod goto table for better cache perf

[33mcommit b69ac9514f802693b8a209a61ff7a4c51b66d7b0[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Oct 27 20:40:58 2011 +0530

    updates to ac-gfbs search. Disable handling < 65k states separately. Now any state count would be given same treatment

[33mcommit efb4c27b1fef8df1be04b5aa0696442beeee0d9b[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Oct 27 16:41:48 2011 +0530

    updates to ac-gfbs search. Add new unittests + fix cases where we have 2 patterns that are same but one is CS and other CI + Use SCMemcmp for state < 65k instead of custom memcmp

[33mcommit 0920296aaae15f3292cd6f83a47868822a81b0e8[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Oct 27 01:26:42 2011 +0530

    updates to ac-gfbs search. Remove unnecessary casting of pointers

[33mcommit d149a5e8064bcb7b5441383ac0527d6b1cc2bdef[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Oct 26 15:20:21 2011 +0530

    updates to ac-gfbs search. Use SCMemcmp instead of the custom pattern searching used

[33mcommit 47f2d6e07bec9832963f1ae114ccd065abc1f65d[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Oct 26 14:36:56 2011 +0530

    updates to ac-gfbs search. Optimize pointer de-referencing for pid_pat_list

[33mcommit 991f6d2d834982a185a08c60d34836d9f3b8b213[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Oct 26 14:29:00 2011 +0530

    updates to ac-gfbs search. Optimize pointer de-referencing for frequently used pointers

[33mcommit ffb925e3b35ed11544983922ac12305fd1efb401[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Oct 26 14:06:40 2011 +0530

    indentation fixes for ac-gfbs

[33mcommit e9eb0e502cb0c411c5610b70ae12160ea9e02d4e[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Oct 26 14:03:19 2011 +0530

    updates to ac-gfbs search. Handle cases where we have a single entry for a state goto transition, just like how we handle for no entry for a particular state

[33mcommit 9b75de333954acff95a2cf0c39b188889f9848a2[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Nov 7 11:08:17 2011 +0100

    pfring: fix compilation when pfring is desactivated.

[33mcommit 43ffd779f80a5f0f85acef6cf107c048aff1f746[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Nov 3 11:17:38 2011 +0100

    autotools: add libpcap dependencyto pfring for checks.
    
    PF_RING seems to depend on pcap if bfp filter is activated. For this
    reason, not having the dependency during configure test causes a
    failure in feature detection.

[33mcommit 0ac1cabf2a77fe1012e53fde5ffe465ef4b48aa6[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Nov 2 16:49:18 2011 +0100

    autotools: fix problem of pfring configuration.

[33mcommit d5e254d50478da4893b77bcb05694c37af961beb[m
Author: deltay <delta.yeh@gmail.com>
Date:   Fri Oct 28 15:22:24 2011 +0800

    Add pfring bpf filter, require pfring >= 5.1

[33mcommit 9f73503daaf9ca48bfb930d4da0a647930c689c6[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Nov 3 11:46:29 2011 +0100

    capability: rework capability assignement
    
    THis patch rework the capability code to use a switch
    instead of a if. It also "reduces" PF_RING and NFQ capabilities.

[33mcommit d034b10180d2f5a17a8306286bbeeedf50feb145[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Nov 10 14:01:30 2011 +0530

    remove debug prints added to ac code

[33mcommit 781e7c776ffda8f82c3a5ce3ec89097dcdf0c050[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Nov 10 13:39:05 2011 +0530

    fix indentation in ac code

[33mcommit 5c56053a33cca4621b7b3e04400a4dc680dc67c7[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Nov 10 13:37:24 2011 +0530

    Reintroduced optimized support for < 32k states for ac

[33mcommit fb76561b096669ab974c07d27546caddcbc70f63[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 11 09:35:42 2011 +0100

    Set version to 1.2dev to reflect we're in the 1.2 branch.

[33mcommit 8cc82c7241daa78425dfacf9f8fae498c22f4020[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 8 17:54:58 2011 +0100

    Add -S commandline option that loads a rule file exclusively. Issue #338.

[33mcommit 6256d6b598bfe5caf838d14f1283cac1d6a098ed[m[33m ([m[1;33mtag: suricata-1.1[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 10 14:02:10 2011 +0100

    Add content to ChangeLog and add links to more up to date versions of various docs.

[33mcommit c484b7a59ecaa396c03e5b12ae914d2d4d86bd0f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 10 09:50:51 2011 +0100

    Bump version to 1.1 (final)

[33mcommit 62e63e3fe903bd7e0d13d553f7936ea3a3d6cc3f[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Nov 9 18:30:01 2011 +0100

    af-packet: fix reconnection on netdown error.
    
    AFPRead can fail following a NETDOWN error. This patch treat errors
    of AFPRead by forcing a reconnection (instead of exiting thread
    with error).

[33mcommit 361bf2212136ca2b4e4cb4fb36c22d8c1e6a64a9[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Nov 9 18:17:59 2011 +0100

    af-packet: suppress annoying debug message.
    
    This message was firing multiple per second when a monitored
    interface disappear.

[33mcommit 0fadd930116788b02cffb2fa175d8fd0756667c1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 9 17:32:14 2011 +0100

    Fix an invalid free in bpf code.

[33mcommit ea53f72f7d36067d9cbe0ea1448d2da86f8f90ae[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 9 12:01:44 2011 +0100

    Fix CUDA build.

[33mcommit 9f7ee03debceac664602225bb33b75dc44665bcf[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Nov 4 16:19:56 2011 +0100

    log: read output filter from config file.
    
    The output filter was not read from configuration file and thus
    not used in this case.

[33mcommit 866d681ff24e51ee9174172633fb1e633bb28380[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Nov 7 15:49:27 2011 +0100

    pfring: fix stupid enum usage.
    
    pfring code is not using standard notation for the cluster_type enum
    and this leads to a horrific code in pfring acquisition code.

[33mcommit a6a0d4eae6f876eefade2a31c3a435a7a66ebb64[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Nov 7 14:48:26 2011 +0100

    pfring: use deinit function.
    
    This fixes #368.

[33mcommit a54afe7052e37af16f518ae0d496199e6b59933c[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Nov 5 14:29:05 2011 +0100

    Fix printing of sizeof.

[33mcommit 238cad77e2af8e19fe27f4650992556e7d20e1b3[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Nov 5 12:02:19 2011 +0100

    coccinelle: test for invalid size_t printing.

[33mcommit 2d16abcf8bf379e0177d520ac89b19799ed177ef[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 7 19:03:58 2011 +0100

    Minor code cleanups fixing all GCC 4.6 compiler warnings for default, debug and unittests mode.

[33mcommit 2387c6b0e8786cb867e411500cbb407d56f61ab6[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Nov 4 15:29:15 2011 +0100

    pcap: Fix setting of buffer size from command line.

[33mcommit 1be65e7b687bac278e6aa1d714ca8180d2dbc995[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 4 15:55:00 2011 +0100

    Fixes for building in Cygwin.

[33mcommit 85033f5afe18e328784944b2960de684e8163a31[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 4 12:44:10 2011 +0100

    Fix windows adapter id being truncated for pcap mode.

[33mcommit 2bc0be6e65a490b7455443ca2f68db697875e7fc[m[33m ([m[1;33mtag: suricata-1.1rc1[m[33m)[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Nov 3 19:04:32 2011 +0100

    af-packet: fix compilation problem on windows.

[33mcommit 404868c28b6f9cdc87feced24fc243167972966d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 3 20:59:36 2011 +0100

    Get rid of strcasestr call as win32 doesn't have it.

[33mcommit 561630d864469210a1d236c1dd88667abf4fcae7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 3 20:43:00 2011 +0100

    Fix SMTP unittest.

[33mcommit 47abd0ef196c8de5d584b5e09c5f841d5ef8de9b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 3 19:04:46 2011 +0100

    Fix compiler warning.

[33mcommit 0acfcc206c257f2bb3b380ce50c93fff083d4dfc[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Nov 3 23:19:54 2011 +0530

    fix unittests. fix replace unittests that allow alproto keywords with replace

[33mcommit a0eec3d84688667037e74b10f6e96bf9f82cfed6[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Nov 3 23:07:31 2011 +0530

    fix detection code that handles cases when we use recursion(from recursive keyword)

[33mcommit 7433d92dd221c6722af52840867edf4ba115a8c4[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Nov 3 23:03:44 2011 +0530

    undo this commit -
    
    commit eff08f93d8f51a06d6bee19b739b7db44cadb116
    Author: Anoop Saldanha <poonaatsoc@gmail.com>
    Date:   Thu Nov 3 14:31:24 2011 +0530
    
        update failing unittest to reflect the mpm design update
    
    Fixed a bug in the mpm code that would make all the changes in the commit just undone wrong.

[33mcommit 1b1332fff03839268ed9c633d31692acbaa89f47[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Nov 3 22:22:05 2011 +0530

    fix mpm bug on running stream mpm for packets not added to stream mpm

[33mcommit 9f0e3f7c8543ae2217f18d508a0df5601e99fb18[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 3 14:42:10 2011 +0100

    Bump version to 1.1rc1.

[33mcommit 55da9787a48dad4177d738c1b0067df54ff31690[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 3 10:51:26 2011 +0100

    Win32 compile fixes.

[33mcommit d070869c4853e9e7b23df3c7a3acf9dbdd732712[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 3 13:06:29 2011 +0100

    Reinstate replace validation check.

[33mcommit eff08f93d8f51a06d6bee19b739b7db44cadb116[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Nov 3 14:31:24 2011 +0530

    update failing unittest to reflect the mpm design update

[33mcommit af51493da286876fe3bbb8a09cc794fcd4b11eed[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 2 16:10:49 2011 +0100

    Mpm update: Toss out signatures that mix pkt and stream/state. Update profiling code to track new mpm.

[33mcommit 539ce1369520f72877f74a06e93b655d69003b60[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Nov 1 13:48:43 2011 +0530

    fix broken unittests

[33mcommit 17f3f36d38f2f1285007489fdf86ab72cb409cbc[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Nov 1 11:40:56 2011 +0530

    packet keywords only added for packet mpm. Rest in stream mpm. Update detection engine to handle the same

[33mcommit e0c36f7affb8fc5aff057397fbd5512d1391f4ea[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Oct 31 22:06:59 2011 +0530

    fix dsize sigs handling. We can't use more than 2 dsizes in the same sig

[33mcommit c7b9d3fecb9e20b8e8e6d81122f1cb5d283bfdbe[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Oct 31 20:46:20 2011 +0530

    Remove broken dsize_sm in SigMatch used by dsize in detection engine

[33mcommit d3ca65de03fe8de73ba83aa86acc1d54253eb343[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Nov 2 19:45:12 2011 +0530

    support bdat smtp keyword - bug #347

[33mcommit 91957d70a81e7db1145eee4eabf85d75c62040cd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 2 18:31:14 2011 +0100

    Fix unittest compiler warning.

[33mcommit b5e17ec1d828e07639e9c3db5aa30a70be7ae4d4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 2 18:31:00 2011 +0100

    Rewrite SetupLogging to not leak the fd. Thanks to Steve Grubb for advice on this.

[33mcommit ba9fb534617fce1791f540d2e96d74bc5b86c3eb[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Nov 2 17:28:05 2011 +0100

    threshold: fix handling of multiple threshold.
    
    This patch fixes the unittest and may fix the real work.

[33mcommit 142fe6e4b6425e629e53275e6424d16dcecd219e[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Nov 2 17:27:36 2011 +0100

    threshold: fix recently introduced function.

[33mcommit e0d7f64a14ca075dde598a0aadb4daf325edc1db[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 2 16:38:47 2011 +0100

    Fix thresholding code suppressing an alert if no threshold/suppress rules needed to be checked.

[33mcommit a7fa081ad2d7c4c8bf639afcca58f302c1e2f2dc[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Nov 2 15:47:12 2011 +0100

    Add stream-events.rules to distribution.
    
    This should fix #360.

[33mcommit 86f9759427f5bbe320ffef1d4d025635db6af019[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Nov 2 15:18:49 2011 +0100

    threshold: fix thresholding on signature with multiple threshold.
    
    This patch uses the newly introduced SigGetThresholdTypeIter
    function to try all threshold for a signature. This should fix
    issue #366.

[33mcommit e5b638e5e8292b4532e68373a5af57ff553f20b6[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Nov 2 15:17:44 2011 +0100

    threshold: introduce SigGetThresholdTypeIter function
    
    This patch introduces a function called SigGetThresholdTypeIter
    which iterate on all Threshold for a given signature returning
    the next DetectThresholdData.

[33mcommit ab28a6253f4e6b95490ae50ad5b2c872e01c29ef[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 2 16:00:13 2011 +0100

    Fix broken fix. Shame on me for committing without testing.

[33mcommit 8528333035fb5a0e426b35bf1e1238658c256992[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 2 12:47:55 2011 +0100

    Fix broken tests.

[33mcommit 818656524003c4501401709aecffb19c28ca588c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 2 10:57:56 2011 +0100

    Fix a number of potential issues found by CLANG and cppcheck.

[33mcommit 362c25ec8ad0a0333140b2d5c48aeec5b3509a2a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 2 10:59:23 2011 +0100

    Fix potential suppression parsing issue found by CLANG.

[33mcommit 0fd71c45c54376ebe88c7a90fa855859cb932d0b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 2 09:49:06 2011 +0100

    Improve asn1 keyword handling of a malformed asn1 state.

[33mcommit 9b437caaeaa088ea43254b0ed1f3d1949e411212[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 2 09:48:06 2011 +0100

    Fix stream unittests.

[33mcommit b39acddf284e95bdd1a1de11e1f323ed7c7fae1f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 1 17:02:32 2011 +0100

    Add flow counters: memuse, pruning stats, emergency mode. Bug #348.

[33mcommit b8659daef7209ab30a55b4908b4776284a599a9a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 1 15:32:17 2011 +0100

    Add stream engine counters
    
    Added stream counters:
    - tcp.reassembly_memuse -- current memory use by reassembly in bytes
    - tcp.memuse -- current memory use by stream tracking in bytes
    - tcp.reused_ssn -- ssn reused by new session with identical tuple
    - tcp.no_flow -- TCP packets with no flow - indicating flow engine memory at its limits

[33mcommit 5395071c11c02d6ad22b85a0d6d0cae86a42fe95[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 1 15:11:42 2011 +0100

    Make http logging code more robust against cases where the htp state is incomplete (out of memory conditions).

[33mcommit 7bf1de022cee1fb047f069da614a28d6a17a5e30[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Oct 30 21:54:22 2011 +0100

    Add AF_PACKET to capability system.
    
    This patch adds the necessary code to have AF_PACKET using
    the same capability dropping mechanism as pcap. This should
    fix #361.

[33mcommit 7eb83314b47741e234aa456e53ec17609cab42d2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 1 11:38:28 2011 +0100

    Fix compiler warning and fix using GET_IPV4_DST_ADDR_PTR macro to access IPv6 header.

[33mcommit 1df183ac381b69acbba7f27059eb0635434abf15[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Oct 31 11:52:13 2011 +0100

    http log: factorize logging function.
    
    With the introduction of the PrintInet function there was almost
    no difference between IPv4 and IPv6 HTTP logging functions. This
    patch adds a wrapper that factorizes the code.

[33mcommit 2a8ffe07eabd4973fdb94425826570fc09daf432[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Oct 31 11:36:42 2011 +0100

    http log: factorize extended logging
    
    Extended logging is not dependant on IP protocol version.

[33mcommit a5b1de4f0dbb0d3cea25ffdf34262d7e377571e6[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Oct 31 11:30:02 2011 +0100

    http log: Add extended option
    
    This patch adds a extended option to log extended HTTP information
    when activated.

[33mcommit 8b81063fc26e24d75855938290d406ae08a16316[m
Author: Chris Wakelin <c.d.wakelin@reading.ac.uk>
Date:   Mon Oct 31 09:58:50 2011 +0100

    http log: Add extended information

[33mcommit 1adf4b868c573618784109003c0976da4d395133[m
Author: Eileen Donlon <emdonlo@gmail.com>
Date:   Sun Oct 30 13:58:47 2011 -0400

    set layer4 protocol when no ipv6 extension headers

[33mcommit 9549faae95c3710582240829593ab59ddee2bf06[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Oct 28 17:43:00 2011 +0200

    af-packet: add kernel statistics to exit stats.
    
    This patch should fix #325.

[33mcommit acf10525f65e814b01073d97c26d3ab76934a39d[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Oct 26 18:00:44 2011 +0200

    doc: add decode group and related documentation.

[33mcommit 6220134a483a1e57d0bae8bd3c041e018f0f3be8[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Oct 25 16:29:42 2011 +0200

    doc: describe some features and structures.

[33mcommit eefdbfb55bcc1719720f21d26ad4f46bd1ee4f3a[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Oct 25 16:13:56 2011 +0200

    doc: add mainpage.

[33mcommit 11e48b3e783b43746ec40eefa4748ae20fe6a347[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Oct 4 11:17:49 2011 +0200

    doc: Include htp documentation.
    
    Suricata and libhtp are heavily linked and this patch adds libhtp
    doxygen documentation to suricata.

[33mcommit 60a99915c1452d04da8cae100b82f4a2c8dcc3bd[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Oct 9 20:34:42 2011 +0200

    doc: create http support group
    
    This patch create an httplayer group and adds related files to
    it. It also fixes some typo in documentation string and format.

[33mcommit b5a3e737c9f4d0ebcb2f667aa34f49e694e943c1[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Oct 9 20:24:51 2011 +0200

    doc: comment link between Flow and application layer.

[33mcommit b055a21d6376bc8c9907a95a1d90b25d7558e825[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Oct 9 20:23:23 2011 +0200

    doc: create doxygen group for state detection.

[33mcommit 0468dbd575fd2221a6f9d098a17a384e4fbf0c17[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Oct 9 20:22:01 2011 +0200

    doc: doxygenise some comments.

[33mcommit a64eea9628f7bee2c81356aa772bcfaec12887ff[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Oct 5 20:59:09 2011 +0200

    Fix minor error message.

[33mcommit 92d74fd4809f33679ff9159af7391491517bba61[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Oct 4 21:11:21 2011 +0200

    doc: Add missing params in func description.

[33mcommit fdfa85de3722b65cbf3a7af54d27b24d122970c2[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Oct 3 13:32:30 2011 +0200

    Add comment to describe file content.
    
    The name of the file is not really explicit. This patch adds doxygen
    to have an easy to use description in the generated documentation.

[33mcommit 830ca7c2c8bf63fbaf589811ddb73e8718bf4829[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Oct 27 12:07:30 2011 +0200

    source-nfq: suppress insecable space.
    
    This patch supresses an insecable space and fixes an
    indentation.

[33mcommit 01beefc1c9d8520e44f2f23797e4a8b5ca04d258[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Oct 27 12:00:59 2011 +0200

    pfring: improve error handling
    
    Treat TmThreadsSlotProcessPkt return.

[33mcommit 0d7f25580da399fffe3e33a116971e2532fb81e9[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Oct 27 11:56:19 2011 +0200

    pcap: improve error handling.
    
    Treat TmThreadsSlotProcessPkt return.

[33mcommit c469824bed9d167cad91b26d9c582ed911df97eb[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Oct 27 12:15:18 2011 +0200

    af-packet: improve error handling
    
    The return of TmThreadsSlotProcessPkt function was not handled.

[33mcommit 9ac51900f686c2cb8ca8aa679b5a3be6b4355ff7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 30 12:38:43 2011 +0100

    Fix broken macro call.

[33mcommit 4071d3cf572a210b9ddb65ece2633b9a81643987[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Oct 26 16:16:34 2011 +0200

    PACKET_INITIALIZE is enough for packet init.

[33mcommit d296223ffe0abd95df5cfd611fc746ebaa669048[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Oct 26 15:59:27 2011 +0200

    cuda: Suppress sprintf usage.

[33mcommit 6bf15bac3180f7a82b5a61abb9cedb486ab0a1b3[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Oct 26 11:58:45 2011 +0200

    Fix various packet access.
    
    The coccinelle based tests have detected invalid uses of access to
    Packet data. This patch fixes the detected problems.

[33mcommit eef3e28b17ea2fbd0c6b235293dd3dcee80a75c0[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Oct 26 11:58:13 2011 +0200

    invalid use of strncat.
    
    sltrlcat must be used instead.

[33mcommit 2be09b0c864c5c9abeed33b0b59aae0699827af9[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Oct 25 17:02:33 2011 +0200

    Fix Defrag unit test.
    
    This patch fixes the unittest for IPV4 defrag. The direct usage
    of the pkt pointer in the Packet structure is not allowed. This
    is fixed by using PacketCopyData function.
    This modification was requiring some other fixes, like using
    memcmp to compare data instead of an iteration on pkt pointer.

[33mcommit 324986694a995115f8d43636d108efe5b400087c[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Oct 26 10:26:56 2011 +0200

    decode: improve and fix comments.

[33mcommit 24f15fa32110b5aedbb605a5d73ab85f4b426e69[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Oct 27 10:28:53 2011 +0200

    Don't warn about non enable non existing output module
    
    This patch modifies output module loading to only trigger alert
    message for non existing modules when they are loaded. It also
    warn about unified1 removal.

[33mcommit 39443570585e23638426414d5ea967202ad0582d[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Oct 27 09:29:55 2011 +0200

    Remove unified related enum.
    
    This patch removes the enum related to unified1 output.

[33mcommit 391d813c82a1ff68fb778ac0e1188003f20ccf11[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Oct 27 09:25:30 2011 +0200

    Remove unified1 output module.

[33mcommit 047fcd6ade88c5aa09970239589e4f48789efca7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 30 10:42:37 2011 +0100

    Add missing case sensitive to insensitive conversions for http_header, http_raw_header, http_method, http_cookie and http_raw_uri with 'nocase' set.

[33mcommit bde55578d66c90a59070f496fbc15a3476192a82[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 30 09:19:06 2011 +0100

    Override HTP IDS personality normalizing the query string to lowercase. Bug #362.

[33mcommit 7ef34b7bcc1c21d5e24353749e7790e8e4ca5b27[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 30 08:56:41 2011 +0100

    Exlcude DSIZE LT case from setting the 'need payload' mask bit as it can include 0, which means no payload.

[33mcommit 09b5dca3430ec2c2491de6184a20378d939a35c4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 28 10:30:06 2011 +0200

    Consider signatures with the flags keyword to be packet inspecting only, not stream.

[33mcommit 30d84ab20dc299777e0e4522351ca05af0be60bb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 26 15:48:26 2011 +0200

    Unlock flow in StreamTcpSegmentForEach if there is no TCP session.

[33mcommit 9aeadd5696a17954bb45a593e3788d70c3b17d9f[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Oct 25 12:27:21 2011 +0200

    prelude: suppress unused variable.

[33mcommit db17f3de6c957da663e5504ef93e2ce7acf1ceed[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Oct 25 11:38:31 2011 +0200

    prelude: add stream segment dump
    
    This patch should fix #355.

[33mcommit 2073b9db0c604f55d73e8e3dfeeed002a3529d62[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Oct 26 10:42:52 2011 +0200

    debuglog: uses state selection system.

[33mcommit 159624168791a47a2da2a867b8b3cefeff5bc41d[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Oct 26 10:31:57 2011 +0200

    debuglog: fix segment logging.
    
    StreamSegmentForEach returns the number of segments or < 0 in case
    of error. This patch synchronizes debuglog output module with this
    behaviour.

[33mcommit 3644e90a2c1b81cecfd805bb5e61bebd353eaf92[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 26 15:31:06 2011 +0200

    Don't set higher transaction id's in HTTP sessions than we have.

[33mcommit 67cea099119acb627cf8e17721f99a6e481e5241[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 26 15:30:21 2011 +0200

    Handle failing thread modules that are called by the Pcap file callback.

[33mcommit 498d1d928794d12d58128b53bd1b562f9e410191[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 25 21:42:14 2011 +0200

    Update default suricata.yaml to use more sane settings for EXTERNAL_NET and AIM_SERVERS.

[33mcommit bfff14aa784e8d9d70713e6197cc69c97e6477c7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 25 21:41:08 2011 +0200

    Improve error detection in the port and address parsing in signatures. Bug #295.

[33mcommit ba6bada155c065a25d40fa302a507d14481226fb[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Sep 25 22:23:42 2011 +0530

    change rev field in Signature to u32 and use strotoul to extract the value. Cleanup some dead code/comments

[33mcommit ed3b44b3b57b6537719d580f43e2318e4eb8da91[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Aug 26 15:33:22 2011 +0530

    fix parsing content keywords. We are more strict now. All content keywords need to be enclosed in double quotes. Better validation for sid, priority and rev keywords

[33mcommit 18da4a8b73ea2d94b7cd61c4d07f1c610cac179c[m[33m ([m[1;33mtag: suricata-1.1beta3[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 25 14:43:05 2011 +0200

    Add missing cuda header file causing 'make distcheck' to fail.

[33mcommit c0bc83458c286a4d59ad5cf1cf3863d607e04657[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 25 12:29:21 2011 +0200

    Bump version to 1.1beta3.

[33mcommit 89c38b0ced1adc34af2af305fda6a40ee95726e0[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Oct 25 11:33:39 2011 +0200

    prelude: fix compilation
    
    PrintInet was used without inclusion of 'util-print.h'. This was
    causing a compilation failure.

[33mcommit 39edb23ac4cb35f8c65d675071c5165c6fdfde33[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 25 09:57:37 2011 +0200

    Support stream.inline mode in unified2 tcp segments logging.

[33mcommit 2e2e80b8127589704ab6c5e81ffa8780b0ecbf47[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 21 19:00:16 2011 +0200

    Add packet alert flag to indicate a match happened (partly) in the app layer state. Make unified2 use this flag.

[33mcommit 128261cb9746e4af7c3a1d1671c8aee94f1ca2fd[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Oct 24 10:30:36 2011 +0200

    unified2: Fix event_id computation
    
    This patch fixes event_id computation which was not incremented
    for each alert.

[33mcommit b3023643ecc18e7a111388ab04fb29b7b54a4aeb[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Oct 24 10:04:50 2011 +0200

    unified2: fix multiple alerts case

[33mcommit 7fd1e9cacc22ff87547d837389eb3148bfe6828e[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Oct 21 14:48:55 2011 +0200

    unified2: synchronize IPv4 and IPv6 code
    
    IPv6 code was missing some points.

[33mcommit 839b0d9bfee7b2799836be86662c15a49b9d54a9[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Oct 21 13:31:59 2011 +0200

    unified2: switch to event->packet->packet mode.
    
    Attach multiple packets to an event instead of using one
    event data per packet. This is currrently unsupported by
    reporting frontend but at least we don't have multiple
    alerts.

[33mcommit 316f2d72892c6042176e191bf36f33209db887aa[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Oct 21 12:11:35 2011 +0200

    unified2: segment callback log raw packet.
    
    As we don't have any trustable information about the ethernet
    header, we can simply log RAW packet to avoid to confuse the
    analyst.

[33mcommit a03a402b831b82329ab0d8fae18fd23d0d414708[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Oct 21 12:01:49 2011 +0200

    unified2: set datalink to correct value.
    
    The value of datalink could have been modified if the logging
    of segment was attempted. This patch restore it to a correct value.

[33mcommit 50ddd2df43012624ac57f24fb4feeeb687763fcf[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Oct 21 11:34:32 2011 +0200

    Restore old barnyard2 support.
    
    Some old version of barnyard2 were needing a workaround in the
    packet header building. THis patch introduces a enable-old-barnyard2
    configure flag which can be used to restore this behaviour.

[33mcommit 2f24987f153253644f2eea842e7c242b868b6719[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Oct 20 11:51:03 2011 +0200

    unified2: improve packet logging logic.
    
    This patch improves packet logging logic and fix some place
    regarding alert generation (event_id, ethernet header).

[33mcommit 628bfcc1b9cf6ef6ac06222a83c8c0027c58f8ee[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Oct 20 17:56:53 2011 +0200

    stream: Change return of StreamSegmentForEach
    
    The function now returns the number of segment where the callback
    has ben runned successfully.

[33mcommit c672bdd863f72e73366baaf30f4b16deb9249d21[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 24 13:07:24 2011 +0200

    Improve atomic operation support detection. Fixes #342.

[33mcommit 0edf053f3143ed22d48174d43274a5ba41efed60[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Oct 21 23:58:53 2011 +0530

    if app layer inspection is disabled, immediately set the eof flag

[33mcommit fe11e02f585a4750e3df5d7365a8f5d55e17d9aa[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Oct 21 22:19:54 2011 +0530

    fix inspect id update bug. This should prevent unnecessary FPs for pipelined requests

[33mcommit 4e44073c796dda916b317685e8a155ceeae2d0cb[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Oct 21 20:14:53 2011 +0530

    http logging module should log all txs in the list and not just the last complete tx available on EOF

[33mcommit c13ad8c28a3ba0315b1e852164d20e0da3edf809[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Oct 18 14:23:27 2011 +0530

    Provide a function to set the app layer tx eof flag. Use this in FFR code instead of diretly setting the flag. This cleans up the API as well

[33mcommit b406af451bbdaeb6b06b834461bb34cf7e82db92[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Oct 16 00:15:11 2011 +0530

    updates to http tx id vars. FFR now flags the app layer session for EOF when creating a pseudo packet for a flow

[33mcommit 67be07bf153ece3897d2df9768288c5b94c3d437[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Oct 22 18:25:51 2011 +0530

    fix threading issue in debug log. locked mutex isn't freed before returning. fixed

[33mcommit d23e775ae29ef4e434d204bcb2ddb0a3cfe5e4e0[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Oct 20 21:27:43 2011 +0530

    fix threading bug. Main thread's restart TV code waiting on a failed TV. Now main thread sets the de_init flag before waiting on the failed thread. Thanks to Eric Leblond for reporting it

[33mcommit 737122663c3a8ef08d33ba1be42ba901ece20d9d[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Oct 20 03:22:24 2011 +0530

    IPProto now doesn't accept sigs, which has both < and >, with < value being less than > value. Update affected unittests to reflect the change

[33mcommit dae099893b1fc078a581659f6249ff40e85e6681[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Oct 10 18:39:10 2011 +0530

    more unittests for ipproto with multiple nots + some fixes

[33mcommit 9887084370ff13773d642c2b8b432689aa665672[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Oct 10 11:41:31 2011 +0530

    support multiple ipprotos in the same sig + unittest

[33mcommit a781fb9884896a7d61d690ccaa815e329737bb2b[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Oct 7 12:15:43 2011 +0530

    rewrite all ipproto keyword tests

[33mcommit 8033a262a7d25e25ffd12e688e4fe2173d01858f[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Oct 7 00:43:05 2011 +0530

    cleanup ipproto code

[33mcommit caf450d3255d2a774b368612a2764a48f97fad04[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Oct 7 00:08:16 2011 +0530

    fix ipproto keyword negation case - bug #340

[33mcommit 79c329f81b1afc90a10ac10a5199a9954565925c[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Oct 18 14:12:02 2011 +0200

    alert-unified2: logging of stream segments.
    
    This patch adds the logging of stream segments. Among other
    modifications, it uses a wrapper to fwrite to permit to update
    file statistics in an automated manner. Some memcpy have also
    been avoided by using pointer to the data.

[33mcommit 2fa837bcecf0ccb7e0b47b0cbfc3aeccc905f6d5[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Oct 18 14:11:03 2011 +0200

    alert-debuglog: Add logging of stream segments.
    
    This patch introduces logging of the stream segments in case of
    a signature match on application layer.

[33mcommit 4f0cdf28a3e769613741b44a7145a8b33fdb0ca8[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Oct 18 14:09:38 2011 +0200

    Introduce StreamSegmentForEach function
    
    This patch introduces a function called StreamMsgForEach which
    can be used to run a callback on all segments of a stream. This
    is currently only supported for TCP as this is the only streaming
    aware protocol.

[33mcommit d68775d47d8aa51a9c928e227f343ec7559460ae[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Oct 19 16:44:28 2011 +0530

    introduce bitmasks instead of alproto_masks for use by the probing parser. Remove all alproto_masks we had previouslys for PP

[33mcommit f5ef842752ebc7d547c69bacaf084ec72e10518b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 19 14:10:01 2011 +0200

    Implement a counter for TCP packets with invalid checksums: tcp.invalid_checksum. Bug #311.

[33mcommit d3989e7cee71d68743ba4a150d3ac6cdd271a66a[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Oct 18 22:17:19 2011 +0530

    probing parser updated to always accept u32 buflens. Update all probing parser functions to accomodate this change

[33mcommit 80d80000bb8d14c07e59d363ef5cfcf0cdbbdd50[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Sep 21 01:47:32 2011 +0530

    fix probing parser flag usage during protocol detection

[33mcommit 432c3317d296c714431f3b3e850bd92e01ddee89[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Sep 19 14:03:40 2011 +0530

    app layer probing parser updates

[33mcommit d68f182ebdbaec63212572d6e32f958e26c48480[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Oct 14 23:16:35 2011 +0530

    introduce SCPerfSyncCounters/SCPerfSyncCounters macro to synchronize counters

[33mcommit f7b197226317feaa441700abf28f9f050519d6f1[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Oct 14 19:43:10 2011 +0530

    update broken stats.log. Use pktacqloop funcs in pcap-file, pfring, pcap-live, af-pkt to sync counters - bug #343

[33mcommit a1f68bf41188e6513b0439985ccdebbcdb887c74[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 14 17:17:12 2011 +0200

    Fix detection engine informational message misrepresenting decoder only signatures.

[33mcommit abddbe1c91ca1495c8007d0cb422c29724c30eca[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Oct 7 16:26:33 2011 +0200

    unitest helper: Fix copy of packet data.
    
    The copy of packet data was causing a memory corruption causing
    weird crash.

[33mcommit 7beb5cdf585514c30034f03579f90d179d8fc931[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 6 21:12:55 2011 +0200

    Add util-optimize.h to suricata-common.h so all code can use it.

[33mcommit db42981a3ddc1a9789f86ed422e8f89eb38eb955[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Oct 6 19:24:46 2011 +0200

    Fix suricata start when no interface is given.
    
    When no interface was specified on command line, the workers and
    single mode where not able to start due to the fact there was no
    registered interfaces.

[33mcommit 9aabf94c9ff3ea0c364ebb7b0ab3ff6498058ce3[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Oct 6 19:24:45 2011 +0200

    Suppress useless parameter in function
    
    ConfigParser is called in the parent function and it is thus not
    necessary to send it to the per device function.

[33mcommit 58d7cb20ebb12a7e2afb402ebd0c4bd2244163c6[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Oct 5 23:02:46 2011 +0200

    pcap-info: fix compilation warning.

[33mcommit 27f1d88374c199da18d3acb185ad17d174e9a877[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Sep 29 14:48:27 2011 +0200

    Add pcap-info alert format.
    
    This patch adds a new alert format called pcap-info. It aims at
    providing an easy to parse one-line per-alert format containing
    the packet id in the parsed pcap for each alert. This permit to
    add information inside the pcap parser.
    
    This format is made to be used with suriwire which is a plugin for
    wireshark. Its target is to enable the display of suricata results
    inside wireshark.
    
    This format doesn't use append mode per default because a clean file
    is needed to operate with wireshark.
    
    The format is a list of values separated by ':':
      Packet number:GID of matching signature:SID of signature:REV of signature:Flow:To Server:To Client:0:0:Message of signature
    The two zero are not yet used values. Candidate for usage is the
    part of the packet that matched the signature.

[33mcommit 1d1e7667ae0d189f2b08f55a53db23519919558e[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Oct 5 20:37:33 2011 +0200

    util-runmode: rename mod_threads_conf to ModThreadsCount.

[33mcommit 625a1e070fe5d8ce974af1eed871e187ffe15992[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Oct 5 14:33:46 2011 +0200

    runmode: suppress printf
    
    This patch replaces printf by called to SCLogErroc.

[33mcommit 2596d3bcdd1360d7d1a9efa472ecfe5d89db914b[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Oct 5 14:18:11 2011 +0200

    runmode: treat SCStrdup error.

[33mcommit beaa909eb84ea801202eb5e621315e64f37570f2[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Oct 3 23:56:36 2011 +0200

    Add "workers" runmode.
    
    Previous commits have considerabily empowered the "single" mode which
    could contain multiple threads. This behaviour was not a target for
    this runmode and the following patch remedies to the situation by
    introducing the "workers" mode where each thread do all the tasks
    from acquisition to logging. This runmode is currently implemented
    for af-packet and pf-ring.

[33mcommit 788fa1e5a17e93f42eb73ba957f9f1de55afbf24[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Oct 3 23:38:35 2011 +0200

    pfring: Fix typo in help.

[33mcommit 730a86e6b84e65348bff076b8a6358baceede3f6[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Sep 30 16:25:26 2011 +0200

    pfring: fix warning
    
    When PF_RING is disable this function is unused and thus trigger a
    warning at compilation.

[33mcommit 3f75b10f7904fdb5939b18602c669c8d4aaeb06e[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Sep 30 19:16:11 2011 +0200

    Suppress useless code.
    
    This code was making a warning for some time now. This patch kills
    it.

[33mcommit 45d5c3ca59cf0d8809aecdf61340e521da54963d[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Sep 30 16:50:50 2011 +0200

    runmode: introduce configuration dereferencing.
    
    A devide configuration can be used by multiple threads. It is thus
    necessary to wait that all threads stop using the configuration before
    freeing it. This patch introduces an atomic counter and a free function
    which has to be called by each thread when it will not use anymore
    the structure. If the configuration is not used anymore, it is freed
    by the free function.

[33mcommit 3261b814dbd0b5d07db44e94e0e1cf5dbccf1025[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Sep 30 19:02:54 2011 +0200

    Make SC_ATOMIC_[SUB|ADD] return result value
    
    This patch modifies the SC_ATOMIC_[SUB|ADD] to have them return
    the value of the result. This permit to write test based on return
    of the macro.

[33mcommit d3d99ffa13c29ea210e3d7afdbdfe8be4ba851ff[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Sep 30 15:05:28 2011 +0200

    Fix coding style and use SC* function.
    
    This patch fixes the coding style and uses Suricata function instead
    of plain lic version.

[33mcommit f998fda4ddb1d7af65afc627c54328a9c25239f0[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Sep 14 21:28:57 2011 +0200

    pfring: factorize iface and parser initialisation.

[33mcommit cc7b80437ac0bb63cdff509f69c94577b52756c8[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Sep 14 21:36:08 2011 +0200

    pfring: should not call free

[33mcommit 93cf2b16907e8c81dd8715a45d314908f8521b5d[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Sep 14 18:14:27 2011 +0200

    pfring: add single mode.

[33mcommit 77869a2df8807f918f3339e0cb9f73e6eb059c0b[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Sep 14 18:08:29 2011 +0200

    single runmode: add support for multiple capture threads

[33mcommit c75fffe92d7c329de6a50cc5156af788a5e9d9ad[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Sep 14 10:42:30 2011 +0200

    Improve help message
    
    Usage of command line has evolved with the introduction of long option.
    This patch updates the description of the related options.

[33mcommit dc075a74a2cb114c1635c929cdc36be563934916[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Sep 14 10:35:21 2011 +0200

    pcap: add --pcap option
    
    This patch adds a --pcap option which can be used to select or
    an interface if an argument is provided or the interfaces defined
    in the configuration file.

[33mcommit b2c281920f254d7902cba5daf34593151c31f046[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Sep 14 21:35:50 2011 +0200

    af-packet: should not call free

[33mcommit 1aab2470dbcdf21361bd983328a78e7c4a9a9542[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Sep 14 10:00:19 2011 +0200

    af-packet: factorise single mode.

[33mcommit 63d614162ceb64612091c0fbbd7d1da5690ff0ab[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Sep 14 21:35:58 2011 +0200

    pcap: should not call free

[33mcommit 491686c33e475c7e6dd863a3b657d53cd7af07e6[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Sep 14 09:59:59 2011 +0200

    pcap: factorise single mode.

[33mcommit abe99ee5f61f86afcde6c2906466449901126352[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Sep 14 09:59:28 2011 +0200

    runmode: add factorisation function for single mode.

[33mcommit c3ba9926522ddd33ab43f24710d027cd3f9e035d[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Sep 13 19:24:25 2011 +0200

    pfring: restore precedence of command line options.

[33mcommit b2598f97e77998e463f7298432b5e8e1aeaab96a[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Sep 13 19:14:10 2011 +0200

    pcap: restore backward compatibility

[33mcommit 21663acd3b08fe6e223767ad9d4b7b0b7fe82b66[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Sep 13 19:05:45 2011 +0200

    pcap: use good var name for live-interface

[33mcommit d3d8beb337e60a39e4dcd60ef56d61a43a6e040d[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Sep 13 10:15:29 2011 +0200

    pcap: factorize runmode
    
    This patch factorizes auto and autofp runmodes for pcap.

[33mcommit c3c20dd04110df753acd02846fd9443c53e5a7dc[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Sep 13 10:16:49 2011 +0200

    pcap: add new config style

[33mcommit 78467f1846c59d1ce7d0886d34b6a0051fc1dfd7[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Sep 13 09:52:54 2011 +0200

    Update configuration file to new pfring format.

[33mcommit d9d82866719a0ca247e57d08044cf0b5bcbbfba5[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Sep 12 19:27:33 2011 +0200

    pfring: restore compatibility with v1.0 config
    
    Compatibility of pfring module with previous version was broken. This
    patch restores backward compatibility.

[33mcommit a64dcfeba21241c560c98ae842b880d36977e8bd[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Sep 9 16:40:59 2011 +0200

    pfring: use factorisation function
    
    This patch convert pfring to pktacqloop and use the new factorisation
    function. This also fixes commmand line parsing of pfring which is now
    able to work like af-packet:
     - 'suricata -c s.yaml --pfring' start suricata with all interfaces in
     conf
     - 'suricata -c s.yaml --pfring=eth2' start suricata on eth2

[33mcommit cbb36b51821064133d81fa485299d1d01435272e[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Sep 9 16:40:38 2011 +0200

    af-packet: remove unused function

[33mcommit 75c875b1aca82a517317d745aeb11b56666369c5[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Sep 9 16:38:14 2011 +0200

    af-packet: use factorisation function for Auto mode.

[33mcommit 8bf0897b3cec5941731734e91a3080f56ffffc88[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Sep 9 16:35:06 2011 +0200

    Add factorisation function for runmode.
    
    This patch adds a function which will be used to factorise the
    Auto runmode between the different IDS mode.

[33mcommit de635b58666e6c0041d3c648a1a582b3c0c0d028[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Oct 4 11:44:12 2011 +0530

    remove trailing whitespace from conf file

[33mcommit 2fc58a48a5b5c43f03a1f51ef046096482bf64f5[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Oct 3 23:35:47 2011 +0200

    Doxygen: Include documentation of define dependant code.
    
    Generated documentation for unittests and other module was not
    generated because doxygen was not assuming the define to be set.
    This patch adds the necessary define for unittests and does the
    same for NFQ, PFRING, IPFW, AF_PACKET and Prelude. This also adds
    a variable that permit parallelisation of dot file generation.

[33mcommit d4d62f30992733e00de803d9d033f594bb2187ec[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Oct 3 23:35:45 2011 +0200

    http-uri: Remove useless function declaration.

[33mcommit 3401defbbb541e67bd4a31788dee7d8df9d0dcde[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 4 00:42:14 2011 +0200

    tag: fixes and cleanups
    
    Major fixes for the tag subsystem:
    
    - Removed TimeGet call from tag packet runtime to safe a gettimeofday
    - Removed unused lock from data type
    - Fixed broken first packet skip logic
    - Fix broken reference counter logic
    - Fix memory leak on tag expiration
    - Cleaned up code

[33mcommit b7b58074de0f491b24d136ea8b66afc390dd6b2f[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Oct 4 01:41:03 2011 +0530

    fix ac unittest

[33mcommit d6f9e06bbbfbe186ec35bb10c3720fa941b4e28d[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Oct 3 12:09:47 2011 +0530

    update ac to behave the same way irrespective of the state count. Should improve performance. Also fix unittests to accomodate these changes

[33mcommit dcaef183e80c0460126781049870970f607b647f[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Oct 2 19:59:40 2011 +0530

    fix compiler warning for printf format

[33mcommit bc5c9f4a52b4924e7a816e99d928a9df0e7f7653[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 2 01:16:07 2011 +0200

    Fix too many SMTP commands causing an integer overflow in the cmds_cnt variable, in turn causing an out of bounds memory write.

[33mcommit 9baa16af6314702dc74c21431570d2dd3a063c2c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 2 00:04:22 2011 +0200

    Convert flow memcap to u64. Bug #332.

[33mcommit 8208eacd79ce0557db5a893188f49cc127d82660[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 30 00:40:56 2011 +0200

    Convert stream memcaps to u64. Bug #332.

[33mcommit 4c641f0debcb12cf36b422211a77781f0673ef42[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 29 21:35:50 2011 +0200

    Fix compilation with profiling enabled.

[33mcommit 3ec7b7519434f900a47534b3b14bbdb630992efb[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Sep 29 23:18:50 2011 +0530

    fix timestamps for pseudo packets created during FFR - bug 337

[33mcommit 9d94bb38d526a373b88a8255068934c3eee1dfa3[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Sep 29 18:45:06 2011 +0530

    refactor flow timeout code. fix ipv6 address assignment for pseudo pkt.

[33mcommit 246a4e9fffe68ff70e5769724f3b8f050310e98d[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Sep 27 13:55:12 2011 +0530

    for shutdown reassembly properly init the reassembly packet using PACKET_RECYCLE

[33mcommit 1a5931e87881b1040f71752389011b73d2bf1689[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 28 22:51:35 2011 +0200

    pcap-log: fall back to sguil_base_dir option if 'dir' isn't set. Minor cleanups.

[33mcommit 3b3f5816bf4abd106a0fac71f13e3e4cb306095a[m
Author: William Metcalf <wmetcalf@qualys.com>
Date:   Sun Sep 25 04:31:50 2011 -0500

    You spin me right round baby, right round like a rotating packet capture right round. Oh, also log file size counters are now uint64_t

[33mcommit 6bad2dbd7964a2e465ff4829022acf1e6c34062d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 26 18:53:26 2011 +0200

    Don't match on IP only rules that use ports if packet is not (proper) TCP, UDP or SCTP. Rules out frags matching as well.

[33mcommit 63ed36a8924348b213e8bf136009e9d9777a620e[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Sep 22 17:38:49 2011 +0530

    Replace all reallocs with SCReallocs

[33mcommit 4307ea23482d9971b63ebd93faa75ea9cca00ac8[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Sep 22 17:32:28 2011 +0530

    Replace all frees with SCFrees

[33mcommit 797b1a44c744b784d1b74cae23b042558606da45[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Sep 22 22:26:21 2011 +0530

    Replace all strdup with SCStrdup

[33mcommit 13ea299ee08e73dfe242f5c92196066981f3d295[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Sep 22 16:52:28 2011 +0530

    Replace all mallocs with SCMallocs

[33mcommit de59c9f4b1462a0e8ded5e9df2c1c701e778b9d9[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Sep 15 17:15:17 2011 +0200

    Add and use utility functions for checksum computing.

[33mcommit a85dc9b0e2de6379be97e469cf69d778cbd609f0[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Aug 16 19:20:56 2011 +0200

    Add support for replace keyword.
    
    This patch adds support for the replace keyword. It is used with
    content to change selected part of the payload. The major point
    with this patch is that having a replace keyword made necessary
    to avoid all stream level check because we need to access to the
    could-be-modified packet payload.
    
    One of the main difficulty is to handle complex signature. If there is
    other content check, we must do the substitution when we're sure all
    match are valid. The patch adds an attribute to the thread context
    variable to be able to deal with recursivity of the match function.
    
    Replace is only activated in IPS mode and apply only to raw match.

[33mcommit 0c34a1c5e78b14307dcf35bde5cde2bca52036d3[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Aug 17 12:02:37 2011 +0200

    rewrite constants and add flag for replace
    
    This patch make use of bit shift to rewrite some of the mask constants.
    
    It also delete an unused flag value and suppress the associated dead code.
    The numeric value of the flag is now used by the flag needed for replace
    code.

[33mcommit 77b7089f796f3ee5e984b35a780c2f1cf9f85209[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 21 23:22:39 2011 +0200

    Fix stream-events not working. Stream events won't fit our 'detection only' schema. Fixes #321.

[33mcommit f5017e0d1ab7fc0c7b35f120c94a9d59829dee06[m
Author: pilcrow <mjp@pilcrow.madison.wi.us>
Date:   Tue Sep 20 22:30:14 2011 -0500

    Always try PCRE_NO_AUTO_CAPTURE first for signature regexes.
    
    Many, many pcre: signatures specify (...) when the more efficient
    (?:...) is all that is needed.  This change attempts to force
    PCRE_NO_AUTO_CAPTURE on all unnamed capture groups, reverting to
    capturing when necessary, e.g., when \1 is referenced.

[33mcommit 60887131bea99739d977bc10410661ac0a491b9f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 20 20:38:18 2011 +0200

    Fix minor address parsing compiler warning.

[33mcommit 8028392e9a91c3ff728bdf94200ab5c90d7efee5[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Sep 20 21:10:46 2011 +0530

    fix mpm segv. Use sgh flags to check if the sgh has packet or stream mpm set or not

[33mcommit 41d71a6d705e5de7868b414111113e3f74e2bc58[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Sep 18 15:16:04 2011 +0530

    fix http http transaction id update. Update transactions as soon as we receive a callback on new request

[33mcommit ed69eeab145ddfa25433cb83fbdbc6fd19f72973[m
Author: pilcrow <mjp@pilcrow.madison.wi.us>
Date:   Sun Sep 18 21:50:39 2011 -0500

    Safer macro parenthesization and do/while use

[33mcommit bbd04fde309cb7e377726f8125d85110add26178[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Sep 13 17:13:49 2011 +0200

    NFQ: fix race condition at exit.
    
    A race condition was observed when leaving NFQ. This was caused by
    the queue handle being accessed after been nullified. This patch
    uses the handle mutex to protect the destruction and adds tests
    on nullity to avoid crashed.

[33mcommit 1ab6443e44171be05ea4fa8c7e5de72e0f665f25[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 17 11:39:14 2011 +0200

    Fix compilation when profiling is enabled.

[33mcommit b6ba944e6d6c0382f0a7aceadbc3be62c5a246d5[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Sep 16 21:00:47 2011 +0530

    Rearrange flow manager functions into flow-manager.[ch]. Some other minor changes/updates

[33mcommit 7c729d2d533b6cfc120434c852a9de6992b2d09e[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Sep 16 16:38:43 2011 +0530

    some more code cleanup + comments added

[33mcommit d14fdb1156438f802a8292ff10d05a8504029100[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Sep 15 20:42:12 2011 +0530

    Remove the unnecessary unittest runmode check to get the test working. Modify tests to get it working around this

[33mcommit 16884a0dead935e515cd199dcb1a161f1e55846d[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Sep 15 18:39:06 2011 +0530

    refix failing unittest

[33mcommit 552e72e35e7370c4727cc89cbd963af1aa40098f[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Sep 15 16:51:10 2011 +0530

    fix failing unittest

[33mcommit 0957c0f8a4b2d2421a266e62ed7f01afbd46de1c[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Sep 15 14:17:22 2011 +0530

    shutdown timeout reassembly shouldn't check timeout flag set or not on flow

[33mcommit 3f1c4efceb229f74ca83256eeb1ead4a0d833629[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Sep 15 12:51:04 2011 +0530

    Add new flags var to tm module. TMs can now set flags to identify special properties. Also use these to identify receive TMs

[33mcommit 54f6e4ff4d668b7eac23250edeee3c50fba4dbf6[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Sep 14 23:26:59 2011 +0530

    Merge thread kill functions. Merge slot's tm_id with the one used by packet profiling. Remove some junk unused code from ms sync pts. Timeout setup cleanup as well. packet q dbg_maxlen now u32 var.

[33mcommit e335bdbfbc346c03ab2a44264c3fe9c53b575a3f[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Sep 14 22:08:10 2011 +0530

    Code cleanup. All code to kill flow manager thread under one function now.

[33mcommit 99a496e852aa234efe9fb117fd7fe69d770a0ca5[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Sep 14 21:49:03 2011 +0530

    Indentation fixes

[33mcommit e68ca2f32f87150bd2452dd85a044cedb198b9af[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Sep 14 21:47:00 2011 +0530

    Rewrite forced reassembly v2 using while loop instead of goto

[33mcommit 6cc179fad825f068fb82ee06e3abb14d3781b004[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Sep 14 21:32:43 2011 +0530

    flow mgr code doesn't have to bother on immediately exiting on seeing a suricata_ctl flag set

[33mcommit b09c9751aa82ca4fa5d8c284205638f91b79ede6[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Sep 14 21:24:57 2011 +0530

    Now flow hash section can force reassemble flows as well

[33mcommit 42493ee6b7cacdb5bb317b565b219e4bb4f1197b[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Sep 14 20:40:59 2011 +0530

    rename pseudo packet creation function. Shift the check for forced reassembly necessity on a session/direction to an inline function in the stream api

[33mcommit 6c9552642393ae533624c310fc5970a02746b5c3[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Sep 14 16:56:00 2011 +0530

    Introduce a new wrapper macro that wait loops till the flag(s) in question have been set

[33mcommit a7acf9ea8fe0d3c9315713bed65c4e7059540f4f[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Sep 14 15:41:31 2011 +0530

    Remove all code introduced earlier concerned with ms sync points

[33mcommit b0a588beebbea60ab5f47e1b60e1a9f9dd966802[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Sep 14 15:33:02 2011 +0530

    Introduce another solution to solve stream timeout shutdown issue using thread flags. No more MSSyncPts

[33mcommit aef957c6eb2786fb5d8162258f57937b97b1ea8a[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Sep 13 21:12:37 2011 +0530

    cleanup flow code and pseudo packet creation function

[33mcommit f2bcf9ea2c1a211b4c18fd79a33b55a1d1a4be6b[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Sep 13 16:49:31 2011 +0530

    modify post_pq packet handling.
    
    - Lock the q just once, once we have detected the presence of packet(s)
      in the queue.  Unlock it when we consume all packets from the q.

[33mcommit b4887943fb00998c9a5c1cebce9fd05dc899400c[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Sep 12 22:56:43 2011 +0530

    packet queue len member is now 32 bit unsigned from the previous 16 bit unsigned. Should take care of the overflow for now

[33mcommit 9256c7bf0af6363146ab1f7395547eaca6db3607[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Sep 12 14:35:07 2011 +0530

    always keep queue locked till we exit flowprune. Should prevent potential threading issues

[33mcommit d4ba869a355b8c460e1f9da84184476a0933196f[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Sep 11 15:55:42 2011 +0530

    fix - we need to set direction flags for reassembly pseudo packet. Also reset local flags for every flow that is force reassembled in ForQ

[33mcommit 4ef3679b13935cafcf649d7458ea316c9193d25a[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Sep 10 23:11:09 2011 +0530

    Remove the macro for pktacqloop which is now replaced by an inline function

[33mcommit edebdee1e519a90d41bb2620c0d96e7cbee8cd67[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Sep 10 23:07:59 2011 +0530

    update flow pruning - v6

[33mcommit 99207c718d3e157da28784a9cf9654ee5bc6925c[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Sep 10 21:17:14 2011 +0530

    Avoid possiblity of potential engine idling from consumption of all packetpool packets - v1
    
    - Now forced reassembly uses only malloced packets.

[33mcommit 7d3e501f5739eb60b63870b887e834f4bf1d3142[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Sep 10 14:21:59 2011 +0530

    shutdown stream reassembly now avoids looking at flows that have already been processed by flow mgr reassembly

[33mcommit a559bfc165ffd889f13e3476cc00a7a2f50fc8a3[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Sep 10 13:24:34 2011 +0530

    signal the post pq if possible, whenever pseudo packets are injected into engine flow. Also carry out post pq processing irrespective of packet retrieval from the flow.

[33mcommit fd9bacb02d42fa995ec414ea7d3caea5d61498a2[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Sep 10 12:26:03 2011 +0530

    fix usage of htons to htonl in creation of pseudo packet

[33mcommit 56fba8e275b218a960fa2c3fbc9ccd2db37735c3[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Sep 10 10:43:57 2011 +0530

    move flow incr cnt while we actually create the pseudo packet in forced reassembly

[33mcommit 51d2b6490235a461a2d0c35c4d15acaf1120002c[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Sep 10 00:27:49 2011 +0530

    update flow pruning - v5

[33mcommit c30dbff63dde9db2a8b5fd0b24683ee63e934d22[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Sep 9 22:56:01 2011 +0530

    update flow pruning - v4

[33mcommit 3b0142fa464016de53d0bee03dcbcb10b9e27ed8[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Sep 9 21:56:10 2011 +0530

    update flow pruning - v3

[33mcommit 6dcb68abb0632348743d8da720922d637a661613[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Sep 9 21:52:52 2011 +0530

    update flow pruning - v2

[33mcommit f197b32a5514128da2554d19e560b6f1eb158f3d[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Sep 9 21:48:26 2011 +0530

    update flow pruning - v1

[33mcommit 272c2433ecabd4df65e0e1169c1402a86300ece0[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Sep 9 18:23:10 2011 +0530

    Cleanup flow.c before further changes

[33mcommit 8363533a02ac9a5bda94f25b18844895b908bb54[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Sep 9 16:42:21 2011 +0530

    support for forced stream reassembly for to be pruned flows

[33mcommit 727a950e39d51497a6de4cd02b93d28a029b81ca[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Sep 9 13:56:26 2011 +0530

    Move time elapsed right after we finish all packet processing

[33mcommit 762ac0fe31f7e17245afbc71063068792e55208b[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Sep 9 13:21:40 2011 +0530

    update conditional in shutdown forced reassembly to check for flows that required flow reassemly

[33mcommit 15359dc47edd204cb6edb20c7964b3bf24acd5af[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Sep 9 12:50:15 2011 +0530

    Slot structure now holds the TV it belongs to

[33mcommit 9552e6f69652c9dca8d4c24c4d09bbd66fdf484b[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Sep 9 12:30:29 2011 +0530

    Shutdown flow timeout reassembly now supports ipv6

[33mcommit 54f8d56f48d7c7b8f489a595fdc07859adc06c0e[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Sep 9 12:27:11 2011 +0530

    Packet inspection keywords modified to not inspect pseudo packet

[33mcommit c365bafbf673806e2fb1a0a117e05dcb072ba0aa[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Sep 9 12:26:48 2011 +0530

    We now inspect timed out streams + streams not processed as yet, at engine shutdown

[33mcommit 56432cee162a43f1fcd3d321b04069d550a637d4[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Sep 9 12:02:26 2011 +0530

    Single thread kill also checks if inq is cleared before shutting down

[33mcommit 8fa923c5ac89f139efce859954b5a71094b73eee[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Sep 9 11:56:59 2011 +0530

    - All threads also check to see if their inq is cleared before they shutdown.

[33mcommit a844eecb0e115758eb87d515d37b9fcd877d2fec[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Sep 9 11:52:09 2011 +0530

    - Updated all runmodes to use synchronization points, right before each thread(slot function) tries to de-init the thread. - Main thread now first disables receive thread(s) before it kills receive and rest of the threads.

[33mcommit e567c2d0028cc46ed071587f61b7f8a286a0002c[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Sep 9 11:20:33 2011 +0530

    Introduce master-slave synchronization support for ThreadVars

[33mcommit 94c5ecb069e34008a6fc9d238c532e6ee852035c[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Sep 8 17:25:22 2011 +0530

    introduce inline function version of TmThreadsSlotProcessPkt macro. Retain the macro as well

[33mcommit fd6faac196ab4e2eac3ab60b66c6a1fb6492f38a[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Sep 8 16:36:06 2011 +0530

    update TmThreadsSlotProcessPkt with better error handling + post pq processing

[33mcommit 3fb65f5ec206b8561fcc44457fd283f33e2f3f62[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Sep 8 16:25:00 2011 +0530

    fix local var usage for slot in tm-threads.c

[33mcommit acbcee69ff818aee790686daa0d2b3f23cac7c40[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Sep 8 15:15:44 2011 +0530

    support post pq packet processing in var slot

[33mcommit cc4e89fbe1477d47e50fd720127e7c28d0d512ba[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 16 13:25:15 2011 +0200

    Profiling: convert all packet profile counters/variables to u64. Improve output for larger numbers.

[33mcommit e8c51e09e860d051a3e3f5a1400351ff0e01e3c2[m
Author: Eileen Donlon <emdonlo@gmail.com>
Date:   Wed Sep 14 09:53:37 2011 -0400

    fixed bug 291 corrected reference to reference-config-file

[33mcommit 89599d3b9bdd5573a733361cb40abf8240386f1e[m
Author: Eileen Donlon <emdonlo@gmail.com>
Date:   Tue Sep 13 10:48:17 2011 -0400

    fixed bug 288; corrected config boolean parsing problems

[33mcommit de1d002ea67165c5c6c5fb521d7d139c7a11fc30[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Sep 8 12:31:05 2011 +0200

    Return OK when leaving cleanly.

[33mcommit 2631e5f14fe627a358d2a7af96cdfc240779dd1e[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Sep 8 11:44:07 2011 +0200

    pcap: get rid of old API.

[33mcommit 6f975d3248466a3693568f31224274acb3798488[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Aug 11 17:12:01 2011 +0200

    pcap: add "autofp" runmode
    
    This patch adds "autofp" runmode. This runmode supports multiple
    devices and uses the new CPU affinity system.

[33mcommit effa2954897e99ab83e209401bd61cee5d702e9a[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Aug 11 15:20:57 2011 +0200

    pcap: add "single" runmode
    
    This patch adds support for the "single" mode to the pcap live
    mode.

[33mcommit e13181496c435f5a6b401faf7d40298608d3314c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 12 18:27:07 2011 +0200

    ip-only: added support for matching on ports.

[33mcommit 3d396e8b1e79908e3f759ff297ebd3a939623914[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 13 11:32:48 2011 +0200

    Update PCRE JIT code to support official JIT implementation in pcre-8.20-RC1.

[33mcommit 751a77a9be81ea93ca6347119d87f045889aef07[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 9 16:28:49 2011 +0200

    Make sure stream/engine-event signatures are recognized as such.

[33mcommit c590bba4a428c78ea3a14076c138470f877345da[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 9 14:08:33 2011 +0200

    Undo tunnel reference counting using atomic operations. Revert to mutex based code.

[33mcommit 63f834d9a76e4d7a392375c92023b438a4e583e6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 9 14:27:57 2011 +0200

    Add profiling to various HTTP buffer MPM calls.

[33mcommit 2675879ff1e26fd8802d670c2f17884e00f54a7a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 9 09:29:33 2011 +0200

    Engine and stream events only rules can are deonly compat as well.

[33mcommit bd7ac3eaa6b59920f30e483fc7158c0e8e523fcb[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Sep 8 15:25:24 2011 +0200

    PrintInet: fix compilation on FreeBSD

[33mcommit 5656e344593405a8a413fc06c2e5f94ebb313c8b[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Sep 8 16:40:24 2011 +0200

    Fix compilation on FreeBSD 8.2
    
    FreeBSD has a recent version of autotools which induces some issues.
    This patch fixes it by improving headers detection code in configure.in.

[33mcommit 3801e00426b8b791dc6b0b0b28081a99ebd62983[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Sep 9 11:11:23 2011 +0530

    fix compliation warnings from runmode-af-packet.c

[33mcommit baddfcaa1ab4d38ffbd63065c5fa35abf0abd8d7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 9 10:30:40 2011 +0200

    Extend packet profiling to other thread 'slot' functions.

[33mcommit 3693a7a9ee0cfa4f11d68ee2dc9fb17e06aab6a0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 8 17:12:57 2011 +0200

    Profiling: add accounting for several detection phases.

[33mcommit e8e392fb1fe22ac2ecf29ba7397d028c2c3e3794[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 8 14:17:14 2011 +0200

    Profiling: add per packet accounting of how much ticks are spend in protocol detection.

[33mcommit 7425bf5ca6661ccfa4b5966773e48c1fa02d88a4[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Jun 25 14:53:18 2011 +0200

    Rename some decode event structure and macro.
    
    This patch renames DECODER_SET_EVENT, DECODER_ISSET_EVENT and some
    other structures to ENGINE equivalent to take into account the fact
    the event list is now related to all engines and not only to decoder.

[33mcommit 5bbd8fe910a4921218b96a29ac39f90ead0d9cd5[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Jun 25 12:07:32 2011 +0200

    Add reference to events sig files in suricata YAML config.

[33mcommit 552c6731b25417271aa6812df3cc2753e1ef91f7[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Jun 25 12:02:47 2011 +0200

    Add signature file for stream events.
    
    This patch adds a rules/stream-events.rules file which contains
    alert related to all stream events.

[33mcommit de65b11c426716479cdc873fb1f4818fe7acfb2d[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Jun 25 14:29:14 2011 +0200

    decode signature optimisation requires different treatment
    
    Decode signature are using the fact that no proto is set on packet
    to increase the matching speed. This is not the case of stream and
    other engine events. Thus a difference needs to be made.

[33mcommit 3f153fb0da62ede614264225d67f546617087d01[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jun 23 18:54:19 2011 +0200

    Add 'stream-event' keyword.
    
    This patch adds an alias to the 'engine-event' keyword. It is now
    possible to access to the stream events via the 'stream-event'
    keyword. A simple transformation is done:
        stream-event:reassembly_segment_before_base_seq
    is a shortcut for:
        engine-event:stream.reassembly_segment_before_base_seq

[33mcommit eb0d4e4d8b8e1ce4ad134ba632b92fa6935efba4[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jun 23 18:49:30 2011 +0200

    Add stream events support to 'engine-event' keyword
    
    This patch adds the list of stream events (with associated
    keywords) to the list of events that can be treated by 'engine-event'.

[33mcommit e3a6d8955e3777e30d4d207d3ac007a9402a24a2[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jun 23 18:44:56 2011 +0200

    Introduce engine-event keyword
    
    This patch renames the 'decode-event' keyword to 'engine-event' and
    keep it for backword compatibility of rulesets. All *DecodeEvent*
    references in the code are replaced by EngineEvent version.

[33mcommit 2ac8755382ff83b60edb54b464417d6149c99c63[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jun 23 18:32:44 2011 +0200

    Rename detect-decode-event to detect-engine-event
    
    This patch does a simple renaming of detect-decode-event file to
    the more global detect-engine-event name.

[33mcommit 21f387d2c75f60ddf9b084ca87e7ad4c4b0984ca[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 8 09:06:31 2011 +0200

    profiling: fix stream ticks miscalculation on stream end pseudo packets.

[33mcommit ff6365dd33616ebfd18ce318f3e34229a2512a1a[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Sep 8 09:29:19 2011 +0200

    af-packet: switch to pcktacqloop API.
    
    This patch gets rid of the old API and brings some optimisation
    by reordering structure and optimisinf an error test.

[33mcommit 834c91eece879b75c4ec2f4b9e0f2ed4d56496d9[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Sep 7 16:14:24 2011 +0200

    af-packet: add AFP to per packet performance system.

[33mcommit fb4be6199f4fc1a01405e6f102a84e4b4f163368[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Sep 2 12:06:53 2011 +0200

    af-packet: change option name
    
    This patch changes the option name. af-packet long option is
    now used instead of -a to mimic pfring behaviour.
    
    This patch improves the standard parsing of the command line.
    Running
     suricata -c suricata.yaml --af-packet
    will start a suricata running in AF_PACKET mode listening on all
    interfaces defined in the suricata.yaml configuration file. The
    traditionnal syntax:
     suricata -c suricata.yaml --af-packet=ppp0
    will start a suricata listening on ppp0 only.

[33mcommit e253da092cee2fe4d51ca96c7e35ab895cbb05e8[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Sep 2 13:32:27 2011 +0200

    device: Add function to build interface list from config
    
    This patch adds a new function which build the list of interfaces to
    use by parsing the configuration file. This is using the new format
    and thus only af-packet can benefit of this feature.

[33mcommit df7dbe36b6cb408f9b51e47584fd25a49d9155ad[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Sep 2 11:02:32 2011 +0200

    af-packet: Add option to disable promiscuous mode
    
    This patch adds an option to suricata.yaml to be able to disable
    the switch of the interface into promiscuous mode.

[33mcommit fbca1a4e6b7e8a9de9260553a0b777acffc179e9[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Sep 1 23:43:22 2011 +0200

    af-packet: multi interface support
    
    This patch adds multi interface support to AF_PACKET. A structure
    is used at thread creation to give all needed information to the
    input module. Parsing of the options is done in runmode preparation
    through a dedicated function which return the configuration in a
    structure usable by thread creation.

[33mcommit 18c6503a0821993450399ab61b1e7620cd22b002[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Aug 30 16:02:06 2011 +0200

    af-packet: change configuration format for multi interface

[33mcommit dc667af1a134e6978433579babf592e637d06128[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Sep 1 23:13:00 2011 +0200

    conf: Introduce new function to input configuration.
    
    The input modules are needing a per interface configuration. This
    implies some new operations to be able to parse easily te configuration.
    
    The syntax of the configuration file is for example:
    af-packet:
      - interface: eth0
        threads: 2
      - interface: eth1
        threads: 3
    We need a way to express get a configuration variable for interface[eth0].
    This is by using ConfNodeLookupKeyValue() to get the matching node. And
    after that value can be fetch by using ConfGetChildValue*() functions.

[33mcommit e80b30c082c1acfd8a572cd5591c5bcb1d81064e[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Aug 9 14:36:40 2011 +0200

    af-packet: finalize code
    
    This patch handles the end of AF_PACKET socket support work. It
    provides conditional compilation, autofp and single runmode.
    
    It also adds a 'defrag' option which is used to activate defrag
    support in kernel to avoid rx_hash computation in flow mode to fail
    due to fragmentation.
    
    This patch contains some fixes by Anoop Saldanha, and incorporate
    change following review by Anoop Saldanha and Victor Julien.
    
    AF_PACKET support is only build if the --enable-af-packet flag is
    given to the configure command line. Detection of code availability
    is also done: a check of the existence of AF_PACKET in standard
    header is done. It seems this variable is Linux specific and it
    should be enough to avoid compilation of AF_PACKET support on other
    OSes.
    Compilation does not depend on up-to-date headers on the system. If
    none are present, wemake our own declaration of FANOUT variables. This
    will permit compilation of the feature for system where only the kernel
    has been updated to a version superior to 3.1.

[33mcommit 871b21892a4764057aace5d343c1e06be3c919ab[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Aug 9 14:27:28 2011 +0200

    factorize pcap live device function
    
    They are not specific to pcap and could thus be used in other module.

[33mcommit c45d898572d3f82261afca17eec32f7ad9fc643e[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jul 15 18:35:30 2011 +0200

    af-packet: basic support for AF_PACKET socket
    
    This patch provides basic support for AF_PACKET socket. It is
    completed by a subsequent patches prodiding extended features
    and bugfixes.

[33mcommit 5c8feb385142a8be5dcc85d96d17f6b2bc181c44[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 8 09:07:14 2011 +0200

    profiling / qa: make plot-csv-large-all.sh much more flexible.

[33mcommit a7182353e7ec801146e25d54255a05a649453a32[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 7 13:50:28 2011 +0200

    Remove vim .swp file from repo.

[33mcommit 58b595cc21ccdcad845c86e03ddeb38fb6147a76[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Sep 6 17:02:02 2011 +0530

    fastlog print updates for ipv6. combine the io write

[33mcommit e8f95576647f8cdfaebb7a7db47b981d70d14d84[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Sep 6 12:54:04 2011 +0530

    fastlog print updates. combine the io write

[33mcommit d45e01e1294fe726708f71c2ec20916c683ff722[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 7 13:39:58 2011 +0200

    Add a few more example gnuplot scripts.

[33mcommit fca541f40ecf08b83e1ac4ed5ae198150be29618[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 7 12:02:36 2011 +0200

    Add per app layer parser profiling
    
    Per packet per app layer parser profiling. Example summary output:
    
    Per App layer parser stats:
    
    App Layer              IP ver   Proto   cnt        min      max          avg
    --------------------   ------   -----   ------     ------   ----------   -------
    ALPROTO_HTTP            IPv4       6    163394        126     38560320     42814
    ALPROTO_FTP             IPv4       6       644        117        26100      2566
    ALPROTO_TLS             IPv4       6       670        117         7137       799
    ALPROTO_SMB             IPv4       6    114794        126       225270       957
    ALPROTO_DCERPC          IPv4       6      5207        126        25596      1266
    
    Also added to the csv out.
    
    In the csv out there is a new column "stream (no app)" that removes the
    app layer parsers from the stream tracking. So raw stream engine performance
    becomes visible.

[33mcommit 0cc9f39200b71e623a322d3cb774c2a91b24d523[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 7 09:35:41 2011 +0200

    Move TlsConfig structure out of app-layer-protos.h and rename it to SslConfig.

[33mcommit 820b0ded8217141906ceb10f39ff60da02c562fb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 6 16:45:45 2011 +0200

    Add per packet profiling.
    
    Per packet profiling uses tick based accounting. It has 2 outputs, a summary
    and a csv file that contains per packet stats.
    
    Stats per packet include:
     1) total ticks spent
     2) ticks spent per individual thread module
     3) "threading overhead" which is simply calculated by subtracting (2) of (1).
    
    A number of changes were made to integrate the new code in a clean way:
    a number of generic enums are now placed in tm-threads-common.h so we can
    include them from any part of the engine.
    
    Code depends on --enable-profiling just like the rule profiling code.
    
    New yaml parameters:
    
    profiling:
      # packet profiling
      packets:
    
        # Profiling can be disabled here, but it will still have a
        # performance impact if compiled in.
        enabled: yes
        filename: packet_stats.log
        append: yes
    
        # per packet csv output
        csv:
    
          # Output can be disabled here, but it will still have a
          # performance impact if compiled in.
          enabled: no
          filename: packet_stats.csv
    
    Example output of summary stats:
    
    IP ver   Proto   cnt        min      max          avg
    ------   -----   ------     ------   ----------   -------
     IPv4       6     19436      11448      5404365     32993
     IPv4     256         4      11511        49968     30575
    
    Per Thread module stats:
    
    Thread Module              IP ver   Proto   cnt        min      max          avg
    ------------------------   ------   -----   ------     ------   ----------   -------
    TMM_DECODEPCAPFILE          IPv4       6     19434       1242        47889      1770
    TMM_DETECT                  IPv4       6     19436       1107       137241      1504
    TMM_ALERTFASTLOG            IPv4       6     19436         90         1323       155
    TMM_ALERTUNIFIED2ALERT      IPv4       6     19436        108         1359       138
    TMM_ALERTDEBUGLOG           IPv4       6     19436         90         1134       154
    TMM_LOGHTTPLOG              IPv4       6     19436        414      5392089      7944
    TMM_STREAMTCP               IPv4       6     19434        828      1299159     19438
    
    The proto 256 is a counter for handling of pseudo/tunnel packets.
    
    Example output of csv:
    
    pcap_cnt,ipver,ipproto,total,TMM_DECODENFQ,TMM_VERDICTNFQ,TMM_RECEIVENFQ,TMM_RECEIVEPCAP,TMM_RECEIVEPCAPFILE,TMM_DECODEPCAP,TMM_DECODEPCAPFILE,TMM_RECEIVEPFRING,TMM_DECODEPFRING,TMM_DETECT,TMM_ALERTFASTLOG,TMM_ALERTFASTLOG4,TMM_ALERTFASTLOG6,TMM_ALERTUNIFIEDLOG,TMM_ALERTUNIFIEDALERT,TMM_ALERTUNIFIED2ALERT,TMM_ALERTPRELUDE,TMM_ALERTDEBUGLOG,TMM_ALERTSYSLOG,TMM_LOGDROPLOG,TMM_ALERTSYSLOG4,TMM_ALERTSYSLOG6,TMM_RESPONDREJECT,TMM_LOGHTTPLOG,TMM_LOGHTTPLOG4,TMM_LOGHTTPLOG6,TMM_PCAPLOG,TMM_STREAMTCP,TMM_DECODEIPFW,TMM_VERDICTIPFW,TMM_RECEIVEIPFW,TMM_RECEIVEERFFILE,TMM_DECODEERFFILE,TMM_RECEIVEERFDAG,TMM_DECODEERFDAG,threading
    1,4,6,172008,0,0,0,0,0,0,47889,0,0,48582,1323,0,0,0,0,1359,0,1134,0,0,0,0,0,8028,0,0,0,49356,0,0,0,0,0,0,0,14337
    
    First line of the file contains labels.
    
    2 example gnuplot scripts added to plot the data.

[33mcommit 1bd1a62526ff94c932a8fa0772b536f0678e0d1e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Sep 4 13:07:28 2011 +0200

    Rename profile macro's and variables to reflect that they are for rule profiling.

[33mcommit 88559901d4fe06ce785e829ed5cf9a7736b9906b[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Aug 11 11:23:56 2011 +0200

    pcap-file: Allocated packet must be free if there's error

[33mcommit f6628f140d26a9062084227981906ed63b8577e5[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Aug 11 11:23:54 2011 +0200

    detect: fix regular expression used for check.

[33mcommit a354034cfcc1976100adbb91b3b4dc57ae22e74a[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Aug 11 11:23:53 2011 +0200

    nfq: Fix deinit phase
    
    If receive thread is failling, we need to restart it but the code was
    not restarting the queue (this was done in verdict thread).

[33mcommit eddcedba0af39d6fbe119727e215895506a05492[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Aug 11 11:23:52 2011 +0200

    nfq: make thread abort if NFQ verdict fail

[33mcommit 2ffcef0a8e3cef88c65692a94ae622580dafe63e[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Aug 11 11:23:51 2011 +0200

    nfq: Add iterator on nfq_set_verdict
    
    This patch adds retry to nfq_set_verdict in case of error.

[33mcommit a8b21066df3b4ffc52588080b2adf6d0e3206fbd[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Aug 11 11:23:48 2011 +0200

    tm-thread: fix documentation string

[33mcommit a8ae1c42c3509ee9bf77968ea4f8991fbf046f8b[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Aug 30 18:11:47 2011 +0200

    Fix macro about default packet size
    
    Being pessimistic about packet default size has side effect in
    some module. Falling back to the sane correct value.

[33mcommit 685e0e1a631cb7ba16676c9e314771d214f0ca11[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Aug 29 18:14:41 2011 +0200

    Rename rule_type_t to ThresholdRuleType.

[33mcommit 8787e6f6d081069fbfe07eec728f8bdafec2b856[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Aug 29 17:04:32 2011 +0200

    suppress: use DetectAddress instead of DetectAddressHead

[33mcommit 8ff8ec4f825a1591a5fb3a96df11d8d2fc6760ed[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Aug 29 17:04:14 2011 +0200

    Export some DetectAddress related function.

[33mcommit 7938344e1ba4428e39453e645b248d1e896fb9b1[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Aug 15 23:34:37 2011 +0200

    threshold: refactoring of parsing code
    
    This patch factorize the regular expression to be ease the parsing
    process. It also adds a missing free and factorize exit code.

[33mcommit 03c185a3adcb9b0f0d05539018f7d18d342e7f4f[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Aug 15 10:55:55 2011 +0200

    threshold: add suppress keyword
    
    This patch adds the suppress keyword to the threshold.config file.
    The alerts are suppressed but the other elements like flowbits are
    maintained.

[33mcommit 85e8d8e20074877abfba763aceb0d763042a90be[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Aug 15 22:33:25 2011 +0200

    Add sanity check to DetectAdressParse.
    
    The function is only used at parsing time, this is not costly to add
    a simple sanity check.

[33mcommit 7168e0aafc8fd5180d802610dfff91f5828d7c23[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Aug 12 17:48:16 2011 +0200

    threshold: fix trivial typo in parsing.

[33mcommit a56f8dd6b2977fbf6fbc50d91cfe2f6ccea9d855[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Aug 12 10:14:35 2011 +0200

    doc: introduce doxygen group "threshold"
    
    This patch introduces a doxygen group to put together the documentation
    relative to threshold. Group appear in a separate page and they can have
    their own documentation. This is useful when a feature is splitted into
    different files.

[33mcommit dc218388e5d9c927ecdcfdddf7d1fdce4576101a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 30 15:20:08 2011 +0200

    Fix flowint keyword pcre_get_substring issue.

[33mcommit 1740c3a7c78adb04338632797e56a0f1d47a2ec0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 30 14:31:58 2011 +0200

    Fix urilen keyword pcre_get_substring issue.

[33mcommit f52b54f63e18002190d524a8c8644b4e837c37b5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 30 13:12:41 2011 +0200

    Fix ssl keyword pcre_get_substring issue.

[33mcommit 6b9d1012ff493647da345a274eb1fedc8cbb8c7e[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Aug 29 15:52:03 2011 +0200

    Transform inet_ntop call into PrintInet one.

[33mcommit 2fa07780c240a5b89d8915bc8a1b41421aac95a7[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Aug 29 15:52:02 2011 +0200

    Introduce PrintInet function
    
    This function has the same signature than inet_ntop() and it
    will be used as substitution in the code. For IPv4 this is a simple
    wrapper. For IPv6, it display addresses with fixed length.

[33mcommit 7e1d911215d52ed7236dc5a04761722869806053[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 25 10:53:32 2011 +0200

    Small optimizations to pkt acq loop code.

[33mcommit b753ecce508340cd58cf7cdecce955c6864a4705[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jul 24 12:52:46 2011 +0200

    Implement a pkt acq loop infra with support for pcap-file.

[33mcommit 975ebf2e4fc97341f4078e84acbce0165192f333[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Aug 17 21:06:49 2011 +0530

    Minor changes to move function calls that kills threads + frees resources to the clean up phase right to the end of main thread

[33mcommit ff7284e7b7cc9dab530ef4cabd88a41f6efcec07[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Aug 17 15:22:13 2011 +0530

    Fix code that allows the engine to restart threads that have exited on failure

[33mcommit 524af82b1a035135849dd5b10f13e051dfe6fa21[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Aug 11 21:59:43 2011 +0530

    code cleanup in tm-threads.c

[33mcommit 4f7df1029da145403ea6a5494bbef22bc4a3c097[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Aug 11 20:39:39 2011 +0530

    Unify the use of slots to a single struct for threading API. Remove separate slot append functions for 1slot and varslot

[33mcommit 6730c3ace1e3422dc13ab4ad143b6660250dce51[m
Author: William <wmetcalf@qualys.com>
Date:   Mon Aug 22 12:24:20 2011 -0500

    Actually limit recursion and backtracking and stack usage by PCRE. Logic was broken, no example was provided in suricata.yaml even though it could be set from there.

[33mcommit 61fe05b2204dfe0871b2b7065dfcb3fb67db2115[m
Author: William <wmetcalf@qualys.com>
Date:   Wed Aug 10 00:12:29 2011 -0500

    Fix for silly pcap counters mistake made by me. ps_recv includes dropped packets.

[33mcommit 6408febaec7ae5c51632bade67c701c81b2ea08d[m
Author: William <wmetcalf@qualys.com>
Date:   Mon Aug 1 15:52:17 2011 -0500

    Only check for PF_RING if we enable PF_RING.

[33mcommit b3f7e6a2fcdaae0ceb1c988fc9c6c16233364cc5[m
Author: William <wmetcalf@qualys.com>
Date:   Tue Jul 26 00:22:26 2011 -0500

    Only set PF_RING cluster if we have more than one receive thread. Gives us accurate drop stats.

[33mcommit d3bc3f0fe5dd4b6bee263e44ccced03b7515d603[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Jul 25 12:35:17 2011 +0530

    coverity fix for counters api

[33mcommit be3996ac0236653cad81ed2e7ef06746539dea75[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Jul 24 16:08:52 2011 +0530

    coverity fix - 1.1beta branch - add some comments to indicate false positives by coverity for future reference - mainly comments for switch statement fall through

[33mcommit df3ca322a4fb1ad0f754d7c1e162b7e0bc1aa7d0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 22 08:42:43 2011 +0200

    Fixes for out of bounds pcre_get_substring calls no longer silently accepted by modern pcre.

[33mcommit 1099093e0f97e6f4d99bbaa2b8089f9760b77299[m
Author: William <wmetcalf@qualys.com>
Date:   Mon Jul 18 16:43:28 2011 -0500

    Support for PF_RING versions where packet passed as a reference and version 4.7.1 where pfring_enable_ring now seems to be required.

[33mcommit a0b4068041126f7b503ab3215adc40c49c383236[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jul 15 18:24:35 2011 +0200

    autotools: fix duplicate check command in Makefile.
    
    It seems that check target can not be used in Makefile.am. Using
    check-am fix a make failure.

[33mcommit 586aae0ff32f7cfcd466f6e0d1607a9c05da365e[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jul 15 18:24:36 2011 +0200

    Indentation fix on source-pcap.

[33mcommit c8701cf8d1fd2c317a3a16374bba0200e55826b5[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Jun 27 13:20:23 2011 +0530

    fix var name parsing in byte_extract

[33mcommit 7e5c52c80b1b36a076cc41e3cfca91f2e635956d[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Jul 14 09:07:14 2011 +0530

    add flowbits:set; only sigs to be treated as ip only

[33mcommit bca8fbc79e710dd5684335b6759ef3bd318d632a[m
Author: William <wmetcalf@qualys.com>
Date:   Thu Jun 30 17:15:00 2011 -0500

    Add Num, Rev, and Gid columns to rule perf output

[33mcommit 0625d54267b3025602b0556dec3347ec919cb9a5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jul 9 12:27:05 2011 +0200

    Improve HTPParserTest07 test to be more helpful if it fails.

[33mcommit 862b708a70d1091595714aab0ca79f2b7d993f2d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jul 10 19:46:29 2011 +0200

    Fix stream unittest.

[33mcommit 88115902b063294052c39ca40316964f12588c6d[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Jun 30 12:11:56 2011 +0530

    Have separate parser vars in smtp to hold dynamic buffers for parsing fragmented lines

[33mcommit 576ec7da667258a2ea463dd34cce65c27ef6d6ef[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Jun 4 19:02:56 2011 +0530

    smtp parser support

[33mcommit add02a4ef326fabee8cdce7286177e3351a415b9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 7 11:25:51 2011 +0200

    Fix handling of FIN/ACK packet on TCP state TCP_FIN_WAIT2.

[33mcommit 16b41a5eff130eef2e9e4ff81f640546970974e9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 7 11:24:07 2011 +0200

    Use p->proto in detect to determine TCP/UDP/SCTP.

[33mcommit ebe99a2597a2e6597309100f78f5a7a80bfb02a4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jul 9 13:04:16 2011 +0200

    Fix unified2 packet length not being set properly for reassembled stream packets.

[33mcommit 047b19d2715f1cba98d8c5de8174466256bc7f64[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 23 15:27:49 2011 +0200

    Fix a reassembly bug that in some cases could lead to a crash.

[33mcommit 22a97af22616d4a62b60a247fb301356e379ae7c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 23 18:05:06 2011 +0200

    Only compile byte_extract unittests if --enable-unittests is enabled.

[33mcommit 5727fac9886379bbbedd6de392adb274d593eed2[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jun 17 23:39:55 2011 +0200

    cpu affinity: detect a missed invalid case
    
    This patch improves the error handling in the definition of cpu
    set. It detect when the max value is too big and display the name
    of the invalid cpu set in error message.

[33mcommit d34e85c20390a2f8804d1b2a1a170626788fb78e[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Jun 17 23:25:05 2011 +0200

    Fix #290: avoid looping when affinity is invalid
    
    This patch adds a loop counter to detect when the cpu_set does
    not intersect the set of available CPUs.

[33mcommit e5cc68a91f1050d48ea75022e682847977b574c4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 20 12:25:31 2011 +0200

    Attempt to work around missing __WORDSIZE define on FreeBSD.

[33mcommit 4025567a5ae0334e4d312eff8591ff30dccc4d93[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 20 09:25:21 2011 +0200

    Fix a number of unittests not properly initializing a packet causing issues on some archs.

[33mcommit 43b2e63c1ed7b9bf19a4d2c85c8a38f30b572e53[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 15 14:11:39 2011 +0200

    Fix minor compiler comments in CUDA code.

[33mcommit 2f1262b4466f114bc2d3db3b59a9da5edd00f87f[m
Author: Martin Beyer <martin.beyer@marasystems.de>
Date:   Tue Mar 8 15:07:53 2011 +0100

    fixed cuda build: portability issues and nvcc version check

[33mcommit 736f09c4bcb74e7d36dc97774558bfbaa240fdd5[m
Author: Martin Beyer <martin.beyer@marasystems.de>
Date:   Thu Nov 11 19:18:24 2010 +0100

    fixed ptxdump for python3

[33mcommit 49d66430bc1bf0248f179eae464b1c8c62cbb627[m
Author: Martin Beyer <martin.beyer@marasystems.de>
Date:   Thu Jul 22 16:03:52 2010 +0200

    build cuda modules with make

[33mcommit f7f037c1d11db5c76af191154e7ee7fa913edf97[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 14 18:02:05 2011 +0200

    Make sure stateful detection engine inspecting HTTP streams works well for to_client rules as well.

[33mcommit b4427e81ec962533384114786731138e2ec53dd5[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Jun 14 13:01:39 2011 +0530

    minor fixes in endianness handling in dcerpc and dce detection engine

[33mcommit acfc9a8ab08040c2058d6c168b1d9ed984781d8f[m
Author: Kirby Kuehl <kkuehl@kkuehl-desktop.bpointsys.int>
Date:   Mon Jun 6 09:28:27 2011 -0500

    Improve DCERPC big endian support when parsing BIND CTX Items (UUID). Make default byte packing order for the slow path little endian. Byte swapping on slow path will occur if big endian. This is a readability change, not a functional change.

[33mcommit 5ccd9a83470f2cb87cb0d59e53ba0787d8e9f257[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Jun 13 20:16:53 2011 +0530

    byte_extract support for isdataat added

[33mcommit 35f3eafa5e44fa028ddc85f554aef6fb7928a13f[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Jun 12 17:49:57 2011 +0530

    byte extract added to the engine. Detection support added for packet payload, uri and dce detection engines

[33mcommit 64b069369e1f84322c54f08fabe393e12a0daf48[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Jun 11 15:26:23 2011 +0200

    Unified2: Use local variable for header copy
    
    Due to the chaining of function call, the per-thread buffer was overwritten.
    This was causing invalid data to be output.
    
    This patch restores a local variable usage for the writing of the header
    which are rather small and thus should not be a performance and security
    issue.

[33mcommit 9d24e3aacc9e582531538a5df3fa2f72a63858e0[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Jun 11 15:26:22 2011 +0200

    Fix len computation.

[33mcommit 170efc8d38c154c2c9b3c21ad4c57c2ef949e04a[m
Author: deltay <delta.yeh@gmail.com>
Date:   Fri Jun 10 16:59:19 2011 +0800

    Register http parser callbacks in the right place.

[33mcommit 1174df97129ff344ca5a84bf9484a3c2e0bf68c7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 10 14:27:04 2011 +0200

    Fix passing a uint8_t as an int. Breaks on some args.

[33mcommit ad175c8aec772927554fd2243b856157385819af[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 8 14:35:17 2011 +0200

    Fix complition on OS/archs that don't support atomic variables.

[33mcommit 0ea883edf3a1e760ac16809634aafd3c312c8180[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 8 13:57:19 2011 +0200

    Fix broken stateful detection unittest.

[33mcommit 75957855475e55512c115490eb27770e89190661[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 8 13:40:27 2011 +0200

    libhtp/m4 dir won't be created on CentOS 5.3 by autogen.sh, so work around that by having it in git

[33mcommit 3f409db48619aa45858f615b16deb7db8c6495a3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 7 18:22:30 2011 +0200

    Use pmmintrin.h as older gcc's don't have immintrin.h it seems.

[33mcommit 73efb4c70f48eed4b4eb1e62c673e75a321c52f2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 7 18:15:03 2011 +0200

    Add a app layer state and stateful detection engine counter that makes sure the stateful inspection is only done when the state changes.

[33mcommit 50aceb11ebcca39e753c4c10883d01989ddc819b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 7 13:36:45 2011 +0200

    Clean up stateful detection code.

[33mcommit 0768ca98065c258f38751bc160b6a811ffb0b7ee[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 6 21:16:28 2011 +0200

    Fix SIMD mask checking on 64 bit systems.

[33mcommit 350215966bcb92b807f72c32b9f3d3a6f449e2f5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 6 15:23:44 2011 +0200

    Fix signature mask bitorder.

[33mcommit aa822c0ac189680282fadc0802bfc978711849d4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 3 16:49:39 2011 +0200

    Always reset alert cnt and always increment det_ctx->pkts.

[33mcommit 1e0b050a547bc52da3d6a174283c6a2a220b41c3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 3 16:33:16 2011 +0200

    Add more mask flags.

[33mcommit 4b52823ab6fab1d6469a43d05af6e8cd8a3e2929[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 3 15:21:11 2011 +0200

    Use 64 bit mask on 64-bit systems.

[33mcommit e5b6c0f518495904057929bbef2fc5dae4fd75f9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 2 23:21:07 2011 +0200

    Check 32 masks per run instead of 16 in the SIMD code.

[33mcommit 2dbfdd40af5db3a105fccad7233a48e26b4e2ab0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 2 21:30:23 2011 +0200

    Clean up new SIMD mask checking code, improve non-SIMD checks.

[33mcommit b421019cefeab7a0e40184e41aeeb22b4550a592[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 2 20:36:09 2011 +0200

    Match packet mask against 16 signature masks at once using SIMD instructions for SSE3 and up.

[33mcommit 8f43670b1633b6dfe6f1f1e636cfaa5b97d9a8af[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 2 13:59:40 2011 +0200

    Add wrappers for aligned memory allocation.

[33mcommit 7e128176d27833848bf64636003e97acad636e5b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 2 13:53:06 2011 +0200

    Add Vector datatype for SSE operations.

[33mcommit bc5738d57df83e28de6364f6ec87ea6e842e14d5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 19 15:48:13 2011 +0100

    Add compiler and hardware barrier macro's.

[33mcommit 90ebb6f01f1e28ec6d5fb44bec1a9c9291b4dd5c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 6 21:11:31 2011 +0200

    Fix broken fix.

[33mcommit a3e0325075d43e560e779b7a9de327ab6d5cf7fd[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Fri Jun 3 00:18:53 2011 -0500

    Don't loose memory if PoolInit fails

[33mcommit 363285d485225f4f34f7ba73c9dd50d4d2940fe7[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Thu Jun 2 22:52:27 2011 -0500

    No need to check array pointer

[33mcommit a2b7b77434302ad8880db696699d3e4aff5d04e0[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Tue May 31 21:00:45 2011 -0500

    Make sure we always check the result of TmThreadCreatePacketHandler

[33mcommit f545df3ea7027314e84e4fad355cc66148008191[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Tue May 31 20:45:08 2011 -0500

    Fix potential issue in TmThreadsSlot1NoIn

[33mcommit a9509eea2ea37998e387d890ce93d392a5a358dc[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Tue May 31 20:40:22 2011 -0500

    Fix very minor mem leak when setting bpf filter

[33mcommit 4c4c2a558374535197f67c4f70690673ee2f90fd[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Tue May 31 20:37:11 2011 -0500

    Remove dead code from the BoyerMoore implementation

[33mcommit b1e7c0b1236e8517b6ba2b75273da9b11155ce29[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Tue May 31 20:30:53 2011 -0500

    Properly free data in tag match function

[33mcommit 570e0ec9e4d218e25ae0bc3b9729ea3cb68dbe13[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Tue May 31 20:28:08 2011 -0500

    Fix potential memory leak in ASN1 parsing code in low memory conditions

[33mcommit 313067f47f27f949bfc74c1367144adbdd8f376d[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Tue May 31 20:23:36 2011 -0500

    Check return code of DetectEngineCtxInit at startup

[33mcommit c968ca0f8528b86bc7c5526246dc7f1f0caf7523[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Tue May 31 20:22:22 2011 -0500

    Fix potential small issue with ftell and fseek

[33mcommit dd5e438d6f96410a8d66bdaa2cd4497edcc962b0[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Tue May 31 20:19:37 2011 -0500

    Make all access to memory tracking counters in stream engine lock protected

[33mcommit 36290297dc696ad0d410939b1c9e4eb3ce13c83d[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Tue May 31 20:12:01 2011 -0500

    Remove dead code from reference handling

[33mcommit 44692c83aa087b7a3bcbcaa7c8b93581354a1713[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Tue May 31 20:10:05 2011 -0500

    Properly check retval for config and conversion function calls

[33mcommit 5ac8ab9a61ee96d4f5c4ef149bf16b97c57123a3[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Tue May 31 19:56:44 2011 -0500

    Check inet_pton retval and properly cleanup on error in unittest helper

[33mcommit 58f713254e504780d845f2a4c97e152cbe379846[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Tue May 31 19:11:30 2011 -0500

    Make sure return value of fgetc isn't truncated

[33mcommit bd6d1bfac4bea5bb93e51c81984112913b287d1c[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Tue May 31 19:03:38 2011 -0500

    Fix potential crash in classtype parsing code

[33mcommit 73dd5562c32efc2448d4d6709d75f4ac42d35d55[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Tue May 31 18:45:36 2011 -0500

    Fix potential crash in signature parsing code

[33mcommit 91c001f93b0ad0aba0d3fdee12e6891a1851e2aa[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Tue May 31 18:37:33 2011 -0500

    Fix potential crash in initialization cleanup code

[33mcommit 5d85b0f7b7ec517232ca060c045ec652a4c6573a[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Tue May 31 18:35:16 2011 -0500

    Fix potential crash in ip-only address parsing code

[33mcommit a56592e556f6cc81c0fb03b46ba29b2b7a9c4493[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Tue May 31 18:15:51 2011 -0500

    Make sure we do all after the null check in HTPStateFree

[33mcommit c4832814b440145c907c52fda02993739cb002a2[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Tue May 31 18:12:51 2011 -0500

    Prevent a memory leak on low memory conditions in http client body handling

[33mcommit 2836e0de4e51c7c4ecc4fc46308709e017727c06[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Tue May 31 17:52:20 2011 -0500

    Fix potential alert-unified-log recourse leak during initialization

[33mcommit 0f458495c7d37c9e26130a8867b8015a623279d3[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Tue May 31 17:49:20 2011 -0500

    Fix potential prelude recourse leak during initialization

[33mcommit db94f01831acdb60ae278f50dd6b659bc5922dba[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Tue May 31 17:38:56 2011 -0500

    Fix declaration hiding len parameter in IPv6 decoder

[33mcommit 305140d081547bae571cd7679c0e847e51c1daaa[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Tue May 31 16:55:25 2011 -0500

    Silence coverity warning

[33mcommit bc68c108a75f6b014d242d4ea4804a4b1274f5cf[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Jun 1 23:28:53 2011 +0200

    NFQ: use per thread allocated data for recv buffer.

[33mcommit fb6494abc15a178bfb0c23af233db3dd696a7c93[m
Author: Eric Leblond <eric@regit.org>
Date:   Sat Jun 4 17:33:52 2011 +0200

    config file: add missing variable example
    
    The variable threads was not shown in the default configuration file
    and this is really needed to optimize the system easily.

[33mcommit a2b37e7487dca0aa5b8061f99c3a7b519ec2e4f2[m
Author: Pierre Chifflier <chifflier@wzdftpd.net>
Date:   Sat Jun 4 08:52:49 2011 +0200

    Prelude: fix test always returning true
    
    Fix wrong logic in test for error handling code.
    
    Signed-off-by: Pierre Chifflier <chifflier@wzdftpd.net>

[33mcommit 2856cf0de5a15480cb7621ee495aab5581e05e00[m
Author: deltay <delta.yeh@gmail.com>
Date:   Mon May 30 22:27:33 2011 +0800

    #277 ignore bpf filter if fread failed.

[33mcommit 4b0c8f6567572f11cd579c331d25ecb6bc17f948[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon May 30 20:47:00 2011 +0200

    Use local thread variable buffer in alert unified2.

[33mcommit c8a811e69d388b0019045f2c3b5c99a7d0678b43[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon May 30 20:46:59 2011 +0200

    Make use of per function/thread data in alert unified.
    
    This patch replaces a local variable buffer by the usage of the data
    contained in the local thread variable.

[33mcommit 63f6de58cb8e77d439de17982201a0911efab571[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 31 12:19:48 2011 +0200

    Fix HTP unittests that test pre 0.2.6 libhtp issue. HTP config wasn't restored properly.

[33mcommit 326047eec1ca8c00b137d1a151f78210ae19314e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 24 10:25:19 2011 +0200

    Add unittests for debugging a libhtp issue.

[33mcommit 4ed0ca14bc8c81afbc4b94dfab3aa76465c68ef4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 31 10:01:03 2011 +0200

    Change libhtp configure to not enable debug when suricata does.

[33mcommit 505c5d5cf55ab23a4a22815da9a41475f631a5f7[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Tue May 31 01:27:17 2011 -0500

    Update libhtp to 0.2.6

[33mcommit 7257fed0f39aa903e489646fdf8fc96a73853636[m
Author: Jason Ish <ish@unx.ca>
Date:   Thu May 26 23:03:48 2011 -0600

    Fix bug 288, accept true in output configuration.
    
    Refactor a bit to run checks for truth through a common function
    that takes yes, true, on and 1 as true values.

[33mcommit b819643635b54d3c1f64023e7bbf8b510953cd94[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat May 28 11:44:06 2011 +0530

    coverity - logging system buffer overrun fix

[33mcommit 6dba98f277e01ce5176e7e3314792af64fb57e13[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 27 10:08:54 2011 +0200

    Remove dead code from flowbits parsing.

[33mcommit e866aa3e15d7aa9d6a1c6aeac3a4425f8e06d0a5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 27 09:58:01 2011 +0200

    Fix TAG removal in certain conditions.

[33mcommit f4aad76bb4ada4686ed23a11e04fe74a157071f7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 27 09:15:54 2011 +0200

    Make sure we don't process TAG records from the flow multiple times and outside the flow lock.

[33mcommit 6384b39f1873fc6c90c12e27edbeff0752559ce9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 25 22:07:58 2011 +0200

    Remove unused and broken htp code.

[33mcommit e1d4e16645ed0d2bb3b407457924778353153906[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 26 14:41:15 2011 +0200

    Simplify packet decoding macro's.

[33mcommit c3bb04f609eb836824f8e8435b1d5e4f7149e107[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 26 13:20:44 2011 +0200

    Update libhtp/INSTALL doc based on autogen.sh.

[33mcommit e3270f20b27304bf8d981fc7a153777a91e79cb5[m
Author: deltay <delta.yeh@gmail.com>
Date:   Wed May 25 16:13:05 2011 +0800

    #277 Add -F option to load bpf filter from file

[33mcommit b73939bcef2d24c5e9af80392bead696bd38de92[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun May 1 09:54:51 2011 +0200

    Clean up & better check includes to allow Windows to build.

[33mcommit be5ad4402d1c50672f54ea4226c6e3806e7cd44d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 30 22:48:37 2011 +0200

    Fix stream reassembly engine compilation on Windows.

[33mcommit 40bf4224530c2703ad4eea7bfa5a9ee501af6265[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 30 20:09:26 2011 +0200

    Fix log-pcap compilation on Windows.

[33mcommit 5d9c093d657cd97cdfa58af2354721420f610b15[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 30 19:17:33 2011 +0200

    Don't compile alert-syslog module on Windows, it doesn't work anyway.

[33mcommit da086894e513ae500c211779a9a3ed0207c5a148[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 30 17:55:42 2011 +0200

    Remove unnecessary include that breaks windows builds.

[33mcommit 95387b2297be2cff13a198af36b60cf8a2e68426[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 29 16:31:05 2011 +0200

    Include <windows.h> to get access to THREAD_PRIORITY_* defines.

[33mcommit dd97d136a9cd19950c8dfa7e91cf792f586bc6fb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 19 15:09:02 2011 +0200

    Rearrange syslog.h including so we won't fail to build on win32.

[33mcommit e16a566a96542decdf5a77b3a6c6797e0d3c03c2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 24 17:11:18 2011 +0200

    Account for distance when checking within. Bug #285.

[33mcommit 7f88158fb3a7e6912387bf3b060fc2350443da81[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 18 12:14:42 2011 +0200

    Remove a debug statement from single pcap file runmode.

[33mcommit 52eb8d2be01d8842178a0d8a4c0225d0e88c528c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 23 11:13:23 2011 +0200

    Convert mutex protected tunnel counters to lockless atomic counters.

[33mcommit 54cd3552e150f28c607e556bffa0853b2593a906[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat May 21 10:22:24 2011 +0200

    Remove tunnel_proto field from Packet structure.

[33mcommit 3d22713b09f850b7be97dc0f24aa325b297819e7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat May 21 10:06:18 2011 +0200

    Convert Packet tunnel variables to bit flag checks.

[33mcommit 75439863ed864fe73f1fb4d0a1aa20bb4da059c6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 20 17:24:17 2011 +0200

    Shrink PacketAlerts structure so that Packet structure is a lot smaller. Reduce max events per packet from 256 to 15.

[33mcommit d3f19a3851aabbde80ac27111b3de056a9974012[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 20 17:23:35 2011 +0200

    Fix memcmp checks that prevent reading past buffer boundary.

[33mcommit 4a2d4eef5a544a393ad186eff8ec25ce575b8390[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 20 16:35:51 2011 +0200

    Properly reset IPv6 extension headers structure.

[33mcommit 962462e470b12587a27b0b3cbf75f4c84fc74742[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 20 15:46:08 2011 +0200

    Fix SSE memcmp functions reading beyond the buffer. Add tests to bench them.

[33mcommit 6be38123f03cb4bd6e8938123ca87effd7218744[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 19 10:27:05 2011 +0200

    Cleanup configures pcre sljit test.

[33mcommit ece8e5444bd4ba3d3293df79da415cf0f9d77259[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 19 10:15:03 2011 +0200

    Minor profiling fix: don't close stdout.

[33mcommit d74fe520e5422d46e6e8204fd3bbee96de4846a9[m
Author: William <william.metcalf@gmail.com>
Date:   Sat May 14 11:56:11 2011 -0500

    Experimental support for PCRE-sljit enable via --enable-pcre-sljit

[33mcommit 85643fe7803fe303ba6ce66817fb4bf724e7ae88[m
Author: William <william.metcalf@gmail.com>
Date:   Sun May 8 21:42:12 2011 -0500

    Convert to logging perf stats to file by default. Add a few columns to output avg ticks per match, avg ticks non match, allow sorting on based on them.

[33mcommit 36917c7d66509f3a33ac7fd0cbeca515282d155f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 17 18:13:42 2011 +0200

    Fix not using new htp callback when using the bundled htp. Add indication to --build-info. Fix valgrind warning in test and further improve test.

[33mcommit a3e2b355369849aaff54d1273a8b7839b20e58af[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 17 13:54:10 2011 +0200

    Add configure check for new htp 0.2.5 uri normalize hook.

[33mcommit 15ce8503877c3139d22092d530ae82dc5139ffb0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 13 22:03:14 2011 +0200

    Add support for new libhtp htp_config_register_request_uri_normalize callback.

[33mcommit 3dfed0891f97ecd61251f9936fa7a42a540d4a9e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 13 17:07:41 2011 +0200

    Update bundled libhtp to libhtp svn tag 0.2.5.

[33mcommit 6e0d98d9c4e33ca5e61447518d7e686419fc1858[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri May 13 10:44:22 2011 +0530

    fix valgrind issue for SMB test. Small restructuring. probing_parsers global variable now part of AlpProtoDetectCtx

[33mcommit 7f8fb0f00d6b104b272b8b26d643a07e5e77533f[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri May 6 16:40:32 2011 +0530

    fix bounds checking in smb probing parser

[33mcommit 149ee6b648bdfe5069926c4ff0d3bfaeb90b4e0f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 13 06:05:03 2011 +0200

    Disable to_client http detection. Libhtp expects to_server data first.

[33mcommit 8999de2f93ba4cf80ab91f78407316a9d4c6ce81[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 13 06:03:55 2011 +0200

    Add proper RST handling to all TCP states.

[33mcommit 9a58a02559a2014d937504207307c1f04d60dd7f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 6 13:17:08 2011 +0200

    Wrap HTP code that is only used in debug mode in debug ifdefs.

[33mcommit a5d9c86dd3b3d4b0794afa65181d0a675041bf91[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 6 13:12:30 2011 +0200

    Shrink Flow structure with 20 bytes (on 32 bit) and reorder it. Clean up init, recycle, destroy macro's.

[33mcommit 61635f302c48edcd62455e4a6467d7ce6ae3d215[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun May 1 15:51:50 2011 +0530

    indentation changes in app-layer-smb.c

[33mcommit a40fdc794ea1b1d7003492ed4e38fe5f941b1e60[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun May 1 15:49:32 2011 +0530

    Added probing parser for nbss/smb on port 139

[33mcommit b7b7bbec376989af40a0c156acb344e12562a63c[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Apr 30 15:13:31 2011 +0530

    code indentation changes in app-layer-smb.c

[33mcommit 7c31a2327eecf494c871a0ba266ea202a5e69668[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Apr 29 17:18:06 2011 +0530

    Add support for port based probing parsers for alproto detection

[33mcommit fe6e41e3efd3c97f4fbf947bb37a484bf84e668a[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Apr 28 10:38:34 2011 +0530

    Removed FLOW_AL_NO_APPLAYER_INSPECTION. Moved it as FLOW_NO_APPLAYER_INSPECTION in Flow->flags. Turned Flow->flags into uint32_t and removed Flow->alflags

[33mcommit 0c94d910e45a3b8d6b603bf3daae60ee4c444f93[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Apr 28 00:58:46 2011 +0530

    Removed FLOW_AL_STREAM_TOSERVER and FLOW_AL_STREAM_TOCLIENT. Use STREAM_TOSERVER and STREAM_TOCLIENT instead

[33mcommit ac5584a863498ad5834bc41f295eda6cc210d8ec[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Apr 27 23:40:11 2011 +0530

    Removed FLOW_AL_PROTO_DETECT_DONE. Replaced it with FLOW_ALPROTO_DETECT_DONE, stored it in Flow->flags

[33mcommit 49e2b580cb2ae3846c0c17434fd0d0ccefa679a1[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Apr 27 17:10:11 2011 +0530

    Removed FLOW_AL_PROTO_UNKNOWN. We don't need this flag

[33mcommit 38fe2b9070e4d23e4ea19eb6441cd40fecda388e[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Apr 27 16:22:02 2011 +0530

    Removed FLOW_AL_STREAM_START, EOF and GAP flags. We don't need these. Just use STREAM_* flags

[33mcommit 000ce98cd176e0e6f6619d9c702648e719cbb9e6[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Apr 17 19:29:18 2011 +0530

    push all proto detection code into their respective app parser register functions for every alproto

[33mcommit aab4a43145e29c5138376ff954b09855dfd62120[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun May 1 19:26:01 2011 +0530

    Add C and E flags to flags keyword. We still support 1 and 2 for backward compatibility

[33mcommit 78bf2579aa812a021b6679280d5fd3e31015b76a[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Apr 13 16:08:52 2011 +0530

    move pseudo packet creation outside defragreassemble loop

[33mcommit f303f3f52370e6f5b7010b805531022de5144b39[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 3 18:13:42 2011 +0200

    Fix a logic error in the SACK list cleanup causing a memleak and invalid memory access at the same time.

[33mcommit 1578ef1e3e8a24d0cc615430c4e6bec1fefdad28[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 2 14:18:34 2011 +0200

    Make sure that the stream engine fully reassembles both sides of the session upon receiving a valid RST.

[33mcommit 83c3f158126ccfcce33b89ab3ebb7cd6f4da2cb7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 30 22:45:30 2011 +0200

    Minor fixes in defrag engine, shrink DefragTracker_ structure.

[33mcommit 0385f72669c868239dde4603e98abbf8e6319189[m
Author: Jason Ish <ish@unx.ca>
Date:   Fri Apr 29 15:41:37 2011 -0600

    Use separate frag decoder events for IPv4 and IPv6.

[33mcommit de1c40c44fdf621701717a5790ea10aaef126773[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Apr 26 14:21:28 2011 -0600

    Set decoder event on fragment overlaps.

[33mcommit 7f5e120d6020d76bd7eabd7f66cc985279b9c060[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Apr 26 13:54:58 2011 -0600

    Cleanup assignment of the default defrag policy.

[33mcommit 6da9c64a288f3c6d1305899d9100c57d48d47b39[m
Author: Jason Ish <ish@unx.ca>
Date:   Tue Apr 12 16:51:12 2011 -0600

    Set decoder event when re-assembled fragments would exceed max IP packet size.

[33mcommit 96c2f2c8774bde2c055aa8afcaac1a9deaa2068e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 29 13:56:12 2011 +0200

    Fix 2 stream reassembly unittests

[33mcommit 14ad853b94a866587fea321da392a316f67709d1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 29 13:30:36 2011 +0200

    Process a stream end pseudo packet when going from TIME_WAIT to CLOSED.

[33mcommit 3b40b02a1ba9edbc591422723b6caaddc63bbc39[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 29 09:14:21 2011 +0200

    Stream reassembly fixes.

[33mcommit c88630639ee76f3ff83495c9d50f9ab9046f453c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 29 09:10:45 2011 +0200

    Fix setting libhtp personality.

[33mcommit 6aa551c558e4c00ee259f29b1e264c4ea1cd3d37[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 28 10:31:42 2011 +0200

    Small optimizations to IPV4 and TCP header parsing.

[33mcommit d0374ced385797ab0fe7b56dd0cbab8c4e346a3a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 28 10:09:47 2011 +0200

    Implement SACK in the stream engine.

[33mcommit 6fc075d4ae243cb4b36350fe67e1e4b3115be9b0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 26 08:53:56 2011 +0200

    Add TCP packet SACK option decoding.

[33mcommit dbe291bc508d62f35c54e7453414ac2ac1485396[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Apr 24 15:57:26 2011 +0200

    Allow for 0 (unlimited) HTTP request_body_limit, fix option parsing.

[33mcommit 136f55efc7595b800a41bb81757f3aee28f8f1ec[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Apr 17 22:38:36 2011 +0200

    Fix a memory leak in flow recycle code causing the detection engine state not to be fully freed (recycled) but reference to memory removed anyway.

[33mcommit d9e541337a25e11264510f906119d1506e23c2c5[m[33m ([m[1;33mtag: suricata-1.1beta2[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 13 13:36:53 2011 +0200

    Add decoder-events to Makefile.am as well.

[33mcommit 6a048f2d69dc122b4e97847269bd597243573730[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 13 13:31:13 2011 +0200

    Include initial version of decoder-event rules.

[33mcommit 38a7d1777fbed3b9120c7721c790f98b12b76d36[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 13 13:03:17 2011 +0200

    Bump version to 1.1beta2

[33mcommit c3c03b5d7767f52d431bfdd7a807abed66696093[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 13 12:44:43 2011 +0200

    Add qa/wirefuzz.pl to release tarball.

[33mcommit 7227f9303252ecf8dad2320a6940d086054864ab[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Apr 13 12:26:14 2011 +0200

    Add coccinelle files
    
    This patch adds coccinelle related files to EXTRA_DIST. This fixes
    make distcheck.

[33mcommit a0799f0ff9dedfe283f6a358de8fc1df1662d33c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 13 11:51:37 2011 +0200

    Wait longer at shutdown before concluding it's taking too long. Hopefully enables our slow QA boxes to complete in time.

[33mcommit d245f15f145bef26a34d8a3ccb8915a359fbb209[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Apr 13 11:17:38 2011 +0530

    disable mpm pattern's retest skipping in detection engine for uri, hcbd, hmd, hrhd, hhd, hmd, hcd

[33mcommit 681f8329a6cda8c37de47e5f362a227521b31a8a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 13 09:50:47 2011 +0200

    Make error on <- direction operation use more explicit.

[33mcommit cd75201dc7903ed14252c748172470e34efb6b1e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 12 13:22:12 2011 +0200

    Fix pfring commandline handling.

[33mcommit 778b92ef40b31a65b3071fbe1a8eb206f2a44a33[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 12 23:15:47 2011 +0200

    Make sure to only alloc a new pseudo packet once during ip defrag.

[33mcommit 5f2a0653b4a55be29ab36b95f50762177a447d5a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 12 19:27:31 2011 +0200

    If engine shutdown (processing in-engine packets) times out, exit Suricata with EXIT_FAILURE.

[33mcommit 9ca0658a6ee585afaa8d33df18372c18d8810f85[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 12 19:26:38 2011 +0200

    Clear pcap_cnt variable on packet recycle.

[33mcommit 03ea563e93ebf727ba4872861ffffe0b60eb4e4a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 12 19:25:55 2011 +0200

    Don't set ip{4,6} header on reassembled ip packet until we know for sure what buffer the packet is stored in.

[33mcommit f5674eff740128fd60b9ebbb2debc778e6fb9393[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 12 19:12:05 2011 +0200

    Fix a copy issue in PacketCopyDataOffset.

[33mcommit 8978266a91b2aac3b78f54bb5debb5ac064930df[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 12 11:28:49 2011 +0200

    If shutdown doesn't complete processing all packets that are already in the engine within 30 seconds, force quit.

[33mcommit 5d2f633c48971d3bd9e83d9065b02ff15c109636[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 11 22:01:57 2011 +0200

    Properly initialize pfring runmode before using it. Fix malformed conf api calls.

[33mcommit 966119b6aa9dc645eceafbe765592c9c43acfafd[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Apr 11 17:39:50 2011 +0530

    support for http_raw_uri keyword + mpm engine

[33mcommit 663d03c0e91867055a7f3099b414034f0e4c6781[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Thu Apr 7 17:41:25 2011 +0000

    Add -z option for excluding pcaps from fuzzing.. What you don't want to fuzz a 750G pcap?

[33mcommit 169104a803fbd9104d5f14b7f7f6779fea3f35f1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 8 14:03:01 2011 +0200

    Slightly clean up --list-runmodes output.

[33mcommit e4d890e1869fc3c7073eeef2ce8699ff2c8a5fa2[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Mar 30 15:13:21 2011 +0530

    modify runmode api to accept conf runmode paramter as a char string, instead of an interger id

[33mcommit fb4ffc9aef008a37fc18b9a5dee07b168b4cc2d6[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Mar 28 14:50:47 2011 +0530

    fixed runmode name changes that was missed in the previous changes to the runmode api

[33mcommit 229f7281ead68871882da2d4d74b82c90f2d646f[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Mar 28 13:43:34 2011 +0530

    list runmodes. Allow specification of runmode id from cof file. Also allow for command line override

[33mcommit 05686e70a5bd3de6ab4626ff2f2e0d533fc9fdde[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Mar 27 20:42:05 2011 +0530

    fix coding indentation + neaten runmode code

[33mcommit d7c707e656dc50b696aa673abccde3916e3d5b93[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Mar 27 19:56:53 2011 +0530

    modify runmodes to take all arguments from the conf API

[33mcommit a165d45da96930b4a3881ea5b97cbf629e1d6e7e[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Mar 26 19:11:59 2011 +0530

    naming changes for runmodes

[33mcommit 6fceeda8c5d978aa5cad695ef37c2d1b1c93cfc7[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Mar 25 00:01:35 2011 +0530

    move erf dag runmode into its own file runmode-erf-dag.[ch]

[33mcommit f51cf342104ef800d86278288b051b9b27fa1225[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Mar 24 23:27:52 2011 +0530

    move erf file runmode into its own file runmode-erf-file.[ch]

[33mcommit 86eabbc2f52727c6907720b93ab4de9eba5919c2[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Mar 24 21:08:15 2011 +0530

    move ipfw runmode into its own file runmode-ipfw.[ch]

[33mcommit 036015d6b996faa571539c319af91b3e20a40789[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Mar 24 20:03:41 2011 +0530

    move nfq runmode into its own file runmode-nfq.[ch]

[33mcommit 9affa39b29800bce98d750dc0ee6c75b14da95d9[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Mar 24 19:28:52 2011 +0530

    move pfring runmode into its own file runmode-pfring.[ch]

[33mcommit e7ac1d7c4cac0fed44f5713b7f1ea5ec5a0b7352[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Mar 24 17:55:14 2011 +0530

    move pcap file runmode into its own file runmode-pcap-file.[ch]

[33mcommit f6af567ce0097068d2d2664380abce2b97eda724[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Mar 24 17:10:30 2011 +0530

    move pcap live runmode into its own file runmode-pcap.[ch]

[33mcommit a96eae01facb79d114c0d4b993f459e84e696958[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 5 15:20:09 2011 +0200

    Disable alert-debuglog that was accidently enabled in a previous commit.

[33mcommit 892a8a498539a88275d77b5281bd7395aad2641b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 5 15:13:26 2011 +0200

    Make stream inline use the chunk size settings.

[33mcommit 2dc057d1b1d072eb28cb30bc1c4e14376ea04ea5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 5 11:39:50 2011 +0200

    Set datalink on stream pseudo packets to prevent unified2 from writing a malformed record.

[33mcommit 5dcaaebf2132a58bd438d8ca3af5aa47a54489a7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 4 15:54:47 2011 +0200

    Enable logging of stream chunk in IPV6/TCP. Make sure IPV6 events have a ethernet header to work around Barnyard2 not liking DLT_RAW+IPV6.

[33mcommit 93815a158564499eb3eba38d583ad17ca3a39cdc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 4 12:39:18 2011 +0200

    Support logging of reassembled stream data in IPv4 unified2.

[33mcommit 6cb9bbd1e3646a34a4691346534208abc209f0b8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 4 12:38:15 2011 +0200

    Make sure TAG alerts don't work with an uninitialized alert_msg pointer.

[33mcommit 4f5aad14764b440b4c8001837461b8e0ee3d307a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 1 16:18:37 2011 +0200

    Enforce configurable minimum chunk size in raw stream reassembly. Minor stream cleanups, unittest updates.

[33mcommit 5d2a34109696df1d50bbae7b4a0e6cf026b6d6c8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 30 11:19:13 2011 +0200

    Disable unused code, fix compiler warning.

[33mcommit 936b34ddf60b383f2adf1a21ebce9d53da904bee[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 3 13:34:29 2011 +0100

    Remove minimum init chunk length code, set a default limit of 2560 to the minimum chunk size, allow toclient raw reassembly to start even if toserver hasn't started yet.

[33mcommit 864c8718e1099fe595723b503cb9677d39f806f9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 24 10:16:05 2011 +0100

    Store matching stream msg (ptr) in packets alert structure so it's available to the output plugins.

[33mcommit 8faacb727dcbaf22f6b954f2fc33c444e1d92298[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 23 14:41:01 2011 +0100

    Account for seg list not always being empty when stream closes.

[33mcommit ecfa2d0176379d99d28bc987e7d752597fb35a02[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 23 11:31:26 2011 +0100

    Only remove segments from segment list if they are completely before ra_base_seq.

[33mcommit 5bdf16380da2f6164218e1ca1574caf6db7e5aa0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 21 15:54:45 2011 +0100

    Make sure we actually remove no longer required segments.

[33mcommit 7f45a4fd583c8c7d4d710efa460088f3597693d3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 21 14:22:18 2011 +0100

    Fix missing segment flag, fix 2 unittests broken after previous stream changes.

[33mcommit 4a7f6079d569fa2d44a807f2fc2f40f657e3be9a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 21 13:33:45 2011 +0100

    Change segment removal in stream engine to not discard segments right away. Now they are only removed if they are fully before ra_base_seq.

[33mcommit 6d766f91ef1fb59dd1948d321f0c5fda42e2ed50[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 5 11:52:25 2011 +0200

    Fix compiler warnings in defrag unittests.

[33mcommit 5c880b04c9cb506f871c361649300ee111f83f62[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Apr 1 16:01:02 2011 +0530

    fix ipv4 defrag + fix recursion level in defrag pseudo packet

[33mcommit 865446913321d30eb4b171471aac4328f0649ae9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 30 10:04:11 2011 +0200

    Fixing libpcap 0.x.x specific code, take 2.

[33mcommit 140eb4fde8388fbe2099898ce6eaf6717c3898c1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 29 20:56:29 2011 +0200

    Fix decode-event keyword parsing. Fix code that indicates a signature is decode-event only. Add 'pkthdr' protocol as an alias for any/ip to be used by decode-event signatures.

[33mcommit c72e5f0ebb70b20f97c87fc227609e560eedece6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 29 16:12:29 2011 +0200

    Fix compilation of pcap reopen code for older libpcap code.

[33mcommit 076d77cd802f2a97926fe7bcc069d5e3e3414481[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 29 16:11:25 2011 +0200

    Add strncpy and strncat to banned function list as we have better replacements: strlcpy and strlcat.

[33mcommit 0814e41e50d6f2dd09d25ca94b77a6b35f38911f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 29 12:33:43 2011 +0200

    Ignore tunnel/defrag packets in log-pcap module.

[33mcommit 7ef00aaf19d07312e2871ebd308160b7f01f8df9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 29 12:33:13 2011 +0200

    Fix defrag4 setting the packet length on the wrong packet.

[33mcommit acda69865a7d01ba0b85c11eb28229a718048694[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 29 09:47:03 2011 +0200

    Fix potential segv in pcap logging deinit code.

[33mcommit bc7e21aee6eebeadf5aa3e69cdb0a38a0e3207f9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 28 17:54:27 2011 +0200

    Add special sguil mode to log-pcap to support logging into date based directory structure and rotate when the day passes. Also do not log packets beyond stream reassembly depth and encrypted traffic.

[33mcommit 77505f88735fb4e2006e815abf30c9a86960be7e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 28 12:09:07 2011 +0200

    Allow pcap-log to log outside of default-log-dir by passing a absolute path as filename.

[33mcommit 92ea1f68d4150d26083b3fcf883ad9bb7b19817c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 28 11:59:24 2011 +0200

    Exit on thread restart limit reached.

[33mcommit 8f4229b429e7873308f52127de4ec60f9b75d222[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Mar 25 20:44:30 2011 +0100

    Use snprintf instead of sprintf.

[33mcommit 9be1f1a31c5d5910cd0fb29722ef580903fd3aeb[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Mar 25 20:44:29 2011 +0100

    Use GET_PKT macros.

[33mcommit fb36c0af126883f91f7bd45ad162323a9efaf031[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Mar 25 20:44:28 2011 +0100

    pcap: do not leave if interface goes down
    
    This patch changes suricata behaviour to support interface like
    ppp. Prior to this patch, a suricata listening to an interface
    was leaving when the interface goes down. This patch modifies
    the behaviour to automatically reconnect. Suricata retries to
    open the interface every 0,5s until it succeeds.

[33mcommit 56bf931959e0605a4754f867e7b23476fef51891[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Mar 25 20:44:27 2011 +0100

    pfring: use macro for direct access
    
    Existing code was correct but it was using a direct access to
    pkt field. This patch uses the newly defined macro to have a
    clean access on the pkt data.

[33mcommit 4495efcb62fe1dd2ed1edadc7b83cabc86e45027[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Mar 25 20:44:26 2011 +0100

    Add macro for direct access
    
    In some case, this is needed to have a direct access to the pkt
    field. This patch adds macro for this usage.

[33mcommit 5da8bd7c1e69b34a3fccfe0d6a9f2fb61f7311cc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 25 17:24:52 2011 +0100

    Fix unified2 overwriting tag alerts.

[33mcommit cee615315fe25edf0f147b2702ccd7ccb5fe3883[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 25 17:18:27 2011 +0100

    Fix [drop] not being printed for IPv6 fast.log alerts.

[33mcommit e19f6ebaf40c0222e52994e6f92dadc7f2e48436[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 25 17:09:26 2011 +0100

    Various fixes for issues reported by clang.

[33mcommit 38e7d944c58e0498460aaa8d06084da5298d0831[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 25 18:15:56 2011 +0100

    Fix icmpv4 unittest on big endian, extract embedded sport and dport even if a full tcph doesn't fit.

[33mcommit 92536c4952c8ca5290f2135aca8116e9b835ef1d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 25 15:06:09 2011 +0100

    Fix address test on big-endian.

[33mcommit e0afe96920547ae318ca2cfe863665d50cba9c18[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 4 14:23:07 2011 +0100

    Fix broken ICMPv4 unittests on big endian, fix broken ID macro on ICMPv6.

[33mcommit f5a2017f3ca5b33e23a83874599d92039c99a53c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 4 13:16:28 2011 +0100

    Fix counter unittest on big endian.

[33mcommit 6817824c92872f99e69ed21e89f7f7a562491108[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 3 18:35:04 2011 +0100

    Fix bloomfilter issue on big endian.

[33mcommit e197f5072709958ab24b7f159f64e476012769f1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 3 15:27:21 2011 +0100

    Fix IP-Only unittests failing on Big Endian.

[33mcommit b8cf50678fc3bdc932bff13886bbfd1b8ebb0643[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 3 14:06:36 2011 +0100

    Fix many address unittests using explicit byte order and thus failing on big-endian systems.

[33mcommit c865ee221799279eb6d8af8b4638d64a250206ee[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 24 12:53:03 2011 +0100

    Fix compilation for nfq_set_mark code when NFQ is not enabled.

[33mcommit ee6552f25e1a95dffa4cd85c71087e0d42b37747[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Mar 21 11:03:53 2011 +0100

    nfq_set_mark: handle feature in NFQ.
    
    This patch implements the nfq_set_mark related modification of verdict
    handling.

[33mcommit 7f1a0d1ed1d530bf6c2e1cded5d96f060e454b28[m
Author: Eric Leblond <eric@regit.org>
Date:   Sun Mar 20 21:19:47 2011 +0100

    coccinelle: add test for banned function
    
    The added semantic patch will trigger an error if banned functions
    are used.

[33mcommit 9beebf621a0e69340b98f7ad2b8f355494b58fb8[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Mar 21 11:03:52 2011 +0100

    Add support for 'nfq_set_mark' keyword
    
    This patch introduces 'nfq_set_mark' which is new rules option. If a packet
    matches a rule using nfq_set_mark in NFQ mode, it is marked with the mark/mask
    specified in the option during the verdict.
    It is thus possible to trigger different behaviour on the packet inside
    Linux/Netfilter.

[33mcommit f1e3d636d912a79b72ea0492b0f66834c04f452f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 24 12:33:06 2011 +0100

    Add limit option to pcap-log logging config.

[33mcommit f90a5cfffd3e6a8ff9c7edc8a2ab4d3c3862d246[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 8 11:13:25 2011 +0100

    Misc pcap logging cleanups.

[33mcommit 023a0f94a2a31f140fe151979cae598c7446c0e9[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Mon Jul 19 21:35:18 2010 -0500

    first stab at pcap logging no rotating buff etc

[33mcommit 1f7e4bada16c81fc64d9a26f9360b8da16fad830[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Mar 19 10:13:12 2011 +0530

    add tls.no_reassemble use for sslv2 which we missed previously. Also some cleanup

[33mcommit 71d0eabdeccccfd540ae9f12fe1cb8bffc6c7f4b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 16 21:11:20 2011 +0100

    Add a few extra safety checks in new SSL code.

[33mcommit c105a739e94eca121e95af9484c54384bb6f25b1[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Feb 24 12:41:42 2011 +0530

    support for ssl_state keyword added

[33mcommit 013d3aea1c2aaaabf7971d1e9d2f391d59b463fa[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Feb 24 11:11:36 2011 +0530

    update ssl parser test. Some minor indentation changes

[33mcommit 7a2046328cdcb411bb2151c1581eba448bf48966[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Feb 24 10:23:40 2011 +0530

    some naming changes in ssl parser and ssl related keywords

[33mcommit 4c570777c43dcd586ecc0cf32c0278dfed4d42cb[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Feb 24 01:01:33 2011 +0530

    delete files app-layer-tls.[ch]

[33mcommit b63971878710a5876919b395085144968509a54e[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Feb 24 01:00:57 2011 +0530

    replace the contents of app-layer-ssl.[ch] with the contents from app-layer-tls.[ch]

[33mcommit cacf0a90179f24872c217e8962bcdc9b100b0715[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Feb 24 00:55:12 2011 +0530

    disabled sslv23 proto detection which we enabled previously. Although this is right, need to test a couple of things

[33mcommit 4e8de99dcde1cb31281e4a56f9a763d442e34549[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Feb 24 00:44:36 2011 +0530

    tls/ssl parser modifications/fixes. We now have just one file doing all the ssl parsing stuff, i.e. app-layer-tls.[ch], instead of app-layer-ssl.[ch] and app-layer-tls.[ch]

[33mcommit 8b172754517c368c5d4b18b7bcafb3a7853e5a24[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Feb 14 21:33:39 2011 +0530

    dcerpc parser todo update

[33mcommit 8c6d4531ee91ea2cd2e142c3df72e8802003e741[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Feb 8 10:49:09 2011 +0530

    sslv23 support with ssl2 record format with version set to 3.0

[33mcommit 07a85427ddd6fbc7d93e43f6fedce5ecb6015e9a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 24 11:20:27 2011 +0100

    Add --build-info command line option to output some basic build settings.

[33mcommit 174db0856723bae7cbe38cf60986c7211cf004b8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 15 22:03:23 2011 +0100

    Force reassembly of unack'd data on receiving a valid RST packet.

[33mcommit b9429ecec1d921640ba4cddc65eefd88fbd04479[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 14 21:20:51 2011 +0100

    Fix invalid RST considered valid due to wrong returns codes. Only validate ACK from a RST packet if an ACK value was set.

[33mcommit cb67d61ab5bab175701cdef2535e2d1bf4f25697[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 18 23:34:24 2011 +0100

    Fix broken setup of end of stream pseudo packet.

[33mcommit 99fca03810a5aacbbc3ba70b9d94385c4e5691d0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 22 12:24:26 2011 +0100

    Move unittest code into UNITTESTS ifdefs in the HTP parser. Fixes a compiler warning.

[33mcommit 0dc6333d229f8b829a7b1ba455ec4f273d427dd9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 22 12:08:48 2011 +0100

    Fix compiler warnings about unused IPv6 Address code.

[33mcommit b9fd978253bd98c100fc6f602eff6532ba873040[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 22 12:06:31 2011 +0100

    Fix compiler warnings in two unittests.

[33mcommit a3be22cd5a743b778b20ba57988e77edfd377e24[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 22 11:59:59 2011 +0100

    Fix compiler warning in isdataat keyword setup code.

[33mcommit bbe071252bd90f6520a91afb36ea61e1cb0d69fd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 10 18:32:54 2011 +0100

    Make sure PID is logged as well in alert-syslog output.

[33mcommit da423a59d59716b39858970c87a695a860464519[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 10 18:13:32 2011 +0100

    Allow users of the alert-syslog to set the identity.

[33mcommit 07776c113bcc4d068ecf03844562c98032fd9084[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 16 18:02:00 2011 +0100

    Fix valgrind error on pfring_recv, rename threads from RecvPfring to RxPfring so the name still looks right for 100+ threads. Add --pfring commandline option that just enables pfring, then takes interface from config.

[33mcommit 3aeb86d836ee8231d1f175210306f10e3e912647[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 10 17:56:05 2011 +0100

    Fix header_len in GRE decoder getting out of control in some cases.

[33mcommit 1c9e48ae98df7a6a20999458e8173b1e590a5235[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 7 23:58:14 2011 +0100

    Fix compilation error on non-pfring systems.

[33mcommit 399e56209f707a490d01d2df05c2b7bb1536972d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 7 22:36:04 2011 +0100

    Small pfring doc update by Joshua White from Everis.

[33mcommit 91f28afef41b07b712136b5c07ec8c48b92b6da8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 28 21:18:28 2011 +0100

    Add option to PF_RING to have multiple reader threads. Improve general performance of the PF_RING module.

[33mcommit edeec290f667d9d30fd8371366d686728bbfc96f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 7 22:03:09 2011 +0100

    Fix missing rename for request-body-limit to request_body_limit.

[33mcommit 3b3a8ffb949cf8fa05d30b3a06f4c67cfce7d787[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Mar 7 12:07:38 2011 +0100

    detect-gid: suppress unused type
    
    The DetectGidData type is not used in the code. This patch removes
    the type definition from code.

[33mcommit ad44f1cfc1614b65cc18c52b2a05c52effb37af5[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Mar 7 12:07:37 2011 +0100

    fix possible typo in strtoul error handling.

[33mcommit 04f2afa81b591b6b5c8dfdcf6892d35660125bc1[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Mar 7 12:07:36 2011 +0100

    nfq: fix exit function
    
    Exit function was trying to close the nfq handler even if it was
    null. This was causing a crash.

[33mcommit 277a384af7178052f97acf89e60a230a27594b1e[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Mar 7 12:07:35 2011 +0100

    Use already defined macro instead of integer
    
    Code was using a integer instead of the already defined macro.

[33mcommit ce3b76a1026f131fd23e5e8dede1ea474390c159[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Mon Mar 7 14:17:52 2011 +0100

    Fix compilation on Mac OS X (it was missing IPPROTO_SCTP definition)

[33mcommit 153f9298e770b7ee843cdfc7ea07c63047904252[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Mar 6 09:56:09 2011 +0100

    Fix priority handling during the signature parsing stage. Fixes #275.

[33mcommit 27f67c97dea620e5dae5bd8999592af55e987256[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sat Dec 25 14:40:42 2010 +0100

    log error on duplicate sig and also for dup sig with newer revision

[33mcommit 8a390971e7d4af95ef6ecda23872358ed7e801c2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 2 14:08:44 2011 +0100

    Print [drop] as well for syslog output.

[33mcommit 0377ae08172191b6772b439ef47d1e141e9c6418[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 4 15:40:29 2011 +0100

    Reduce SCTP_HEADER_LEN to reflect actual pkt header size.

[33mcommit 005dc599a6d814bdbcf2eeb40a15c96fbdc4519e[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Mar 2 22:30:51 2011 +0100

    detect.c: Fix usage of integer standing for protocol
    
    This patch fixes direct usage of integer to code protocol value.

[33mcommit 2c80f18dc9feeee5716aa71be82b4ce0da9f7639[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Feb 28 17:44:35 2011 +0100

    detect: Add sctp detection and parsing.
    
    This patch adds the support of SCTP in signature subsystem.

[33mcommit 674b0bfae788ed4db007116834534c8effd9e586[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Feb 28 17:44:34 2011 +0100

    flow: Add basic SCTP support
    
    This patch adds a basic flow support to SCTP. SCTP specificities
    like the verification tag are not taken into account.

[33mcommit 01e955bc2774c089051fcd39860eee4662c96497[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Feb 28 17:44:33 2011 +0100

    Add SCTP to packet validation
    
    Validation util was missing a test on sctph which can not be null
    for SCTP packets.

[33mcommit a823160384bbc005450dc934f8924260b11516d3[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Feb 28 17:44:32 2011 +0100

    detect: Add support for sctp option in rule
    
    'sctp' can now be used as a keyword in signature. It is at the same
    level as the 'tcp' or 'udp' keywords.

[33mcommit 482991ad6db12d369c71fa5a25d7e49e37989fd2[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Feb 28 17:44:31 2011 +0100

    decode: add support for SCTP protocol
    
    This patch adds a new counter for SCTP and defines some
    macros needed for SCTP support.

[33mcommit 8be92fdd999d9388cd42fced6b287bb5e81337eb[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Feb 28 17:44:30 2011 +0100

    SCTP support: add parsing of sctp
    
    This patch adds support of SCTP in all part of the code in charge
    of decoding packets.

[33mcommit e1d966eaf6fd4ae5d0c2d1e99edeaec41a23b02b[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Feb 28 17:44:29 2011 +0100

    Makefile: add sctp files to build
    
    This patch simply adds decode-sctp files to the compilation.

[33mcommit b69fd02284ae42d9dd303773c3bd0ae3663f2a81[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Feb 28 17:44:28 2011 +0100

    decode sctp: basic SCTP decoding.
    
    This files are basically a dummy conversion of UDP one. It
    provides basic decoding (source port and destination port).
    There is no chunk hanldling which means that suricata regexp
    will match on all packet content except initial header and not
    only on userspace data.

[33mcommit 17af1ca123dd94e536652393d4f3ad725e9e07b6[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Feb 28 17:44:27 2011 +0100

    decode-event: Add SCTP event
    
    Almost empty now, because the only definition is packet
    too small.

[33mcommit 987ce57a02a6272805d4e83b9161660d0776f43e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 4 15:27:28 2011 +0100

    Wrap a number of BUG_ON's in the detection engine in DEBUG ifdefs as the conditions they check for are not serious enough to abort the engine.

[33mcommit a3303fcf9d735256306f0c289aca74612ad53ff2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 3 18:00:01 2011 +0100

    Rename request-body-limit to request_body_limit to remain consistant with other options. Keep old notation around for compatibility.

[33mcommit 0d6d0ae37113a42384f87725b6afa74d669cc77b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 28 15:24:16 2011 +0100

    Increase logline max length.

[33mcommit c617d7cbfd381189cc5cf235c39fe006e3146f7f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 28 15:14:47 2011 +0100

    Update pfring doc.

[33mcommit 6047a9b56208038584d6da2bc2bdc0ec9d965160[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 26 10:03:03 2011 +0100

    Improve byte to numeric value error reporting and testing.

[33mcommit b233105cc251cfafe59262d1bc0adca75bca8387[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 26 08:51:08 2011 +0100

    Fix a issue in stream reassembly causing the segment list getting into a inconsistent state.

[33mcommit 4e9231266a4be08737ab95b95e6e719df0762d25[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Feb 16 02:22:55 2011 +0100

    Compilation fix for OpenBSD and win32.
    
    This patch fixes compilation on OpenBSD platform. It is running
    fine on a pcap file. The patch should also fix compilation on
    WIN32 platform but this is not tested.

[33mcommit a8db8b334baab3cb0993c9ad0352acf26778d49b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Feb 13 10:10:14 2011 -0500

    Remove debug stream testing code from non-debug builds.

[33mcommit 477bc1d050925d4ca66498fb9705746a2e7be62c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 12 16:52:17 2011 -0500

    Set DROP flag on a packet in addition to the REJECT flags. This makes sure we not only send a reject, but also drop the offending packet. Closes #248.

[33mcommit fb5fb3ab3f6e5771b3b5ef193a906ff7635b70e8[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Fri Feb 11 23:03:06 2011 +0100

    IPOnly module fix for building stage. Radix Tree fix inserting diferent netmask user datas

[33mcommit 35c168ab030f92fec8b2b6a3b458f827f9d3afb0[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Tue Feb 8 03:34:31 2011 +0100

    Fix CPU_* macros for Mac OS X

[33mcommit 91213d5ec8889409a6e3de6a365c478140801eec[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Feb 3 20:05:41 2011 +0100

    Add option to run_check script
    
    If given an argument run_check.sh will test this file against
    the cocci patches.

[33mcommit 0cf05856d096a019fd035b63a28ba7ff3c581ff7[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Feb 3 20:05:40 2011 +0100

    Fix Packet usage.
    
    This patch suppresses remaining direct access to pkt and pktlen in the
    Packet structure.

[33mcommit 12369b43931e0b7c593adc8e1684d6d82b97de76[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Feb 3 20:05:39 2011 +0100

    Coccinelle: test invalid Packet usage
    
    This coccinelle patches is checking that there is no direct
    use of p->pkt or p->pktlen in the code. This variable must be
    acceded via GET_PKT_* macros.

[33mcommit cec7ece697e95e2e389abab601fcedc82b321cd9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 3 19:25:05 2011 +0100

    Don't print drop log on pseudo packet.

[33mcommit 1ace091bd4279dacaf01c5bc6e4c8321f126f3ec[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 3 18:11:56 2011 +0100

    Minor drop log cleanups.

[33mcommit 7d0781b3499d8d87ad8b057ea4ef46dc87a36cd6[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Mon Jan 31 19:52:12 2011 +0100

    added support to log dropped packet as netfilter logs while in inline mode

[33mcommit 1681705e62de4e8cccc9ec2909ee6753b93ee9e2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 3 17:55:38 2011 +0100

    Don't print errors/warnings based on malformed traffic.

[33mcommit 984571813889ccc6aa58151a2301e32ce4e3de2a[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Feb 3 12:32:52 2011 +0530

    fix detect-ssl-version.c unittests to accomodate new changes

[33mcommit 95f9f2c28debe2351c775c01a62ba1e95e8e478a[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Feb 3 12:29:47 2011 +0530

    minor indentation changes

[33mcommit 8f8b1212afc714ce2737c842eaf633005b7bbcb0[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sun Jan 2 18:04:12 2011 +0100

    support for ssl_version keyword

[33mcommit a8417377e700ed69c719d2c1c31acdac656bfa4f[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Feb 2 22:50:53 2011 +0100

    Don't use direct pkt access
    
    pkt field in Packet needs to be accessed via macro. This
    patch supress some direct access.

[33mcommit addab7b5ee62f555e8743031ca8bb4178f893638[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 3 15:22:40 2011 +0100

    Don't test the several packet detection checks against pseudo packets as the matches would not be meaningful anyway. Prevents a segv in the csum detection.

[33mcommit a2465ffc1c0085b654a519da1fa4c12b18e64c64[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 2 20:26:05 2011 +0100

    Fix FreeBSD's compilation of the new affinity code.

[33mcommit b963890de16f4f27604e9b59d5a842349df89fc4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 2 10:57:03 2011 +0100

    Reenable SSE3 memcmp and switch AC memcmp to use the SCMemcmp wrapper.

[33mcommit 6f58ef13c44fe9a7e580acd3bd28f92f4208ac59[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 2 09:38:19 2011 +0100

    Improve error cleanup in output function. Thanks to iswalker.

[33mcommit 183af9ada515e38289416ce145cc37ba8ac56519[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 31 23:45:40 2011 +0100

    Replace malloc by SCMalloc in util-mpm-ac

[33mcommit c732351077dc274ac3bc3c89d86bbf9ce4c72fcf[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 31 23:45:39 2011 +0100

    Replace free and malloc by SC functions.

[33mcommit 35b938a8dbd25f44353b6cfa487eab23d63c2b60[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 2 08:37:56 2011 +0100

    Don't pass config to unittests run in make check.

[33mcommit 0044bb221b54552c5a2a0ec83388f3e196cecc22[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 31 23:45:38 2011 +0100

    Add suricata unittests to 'make check'
    
    This patch adds a run of suricata's unittests to 'make check'

[33mcommit 7c841e1d7c63e118b7c1ac2fb2e1706544a40b49[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 31 23:45:37 2011 +0100

    Add coccinelle check to 'make check'
    
    This patch adds coccinelle checking to the autotools
    'make check'.

[33mcommit d151314b4d84d6b2c209437c20d392d28110a022[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 31 23:45:36 2011 +0100

    Import coccinelle test
    
    This is a import of two coccinelle patches that detect problem
    on Packet handling. They are run on all commited C files in src
    by the script run_check.sh.

[33mcommit 66a15e2d6d3d98c876c4a32b7d2a6467c74aab70[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 31 23:45:35 2011 +0100

    Fix some Packet initialisation.
    
    This patch fixes Packet initialisation. In some place the pkt field
    was not set after a memset used to zero the structure and this could
    lead to some problems.

[33mcommit 8e95884333206da7f27ca8194dbf5292dd0be392[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Jan 28 15:06:46 2011 +0530

    Use normal memcmp in ac. Improves perf

[33mcommit 66d496c25560a175a39eab1ea379348568541563[m
Author: Martin Beyer <martin.beyer@marasystems.de>
Date:   Mon Jan 24 12:19:08 2011 +0100

    Added case sensitive unit test to util-mpm-ac

[33mcommit 79b9eba0f0c50f5b1cec9a798d2398cee64724d1[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Jan 24 18:48:47 2011 +0530

    fix case sensitive bug in ac

[33mcommit 1c7b7a01a69664c17a112cc52d6ea700003fceb2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 31 15:52:12 2011 +0100

    Add option to set the syslog level for the alerts. Minor cleanups.

[33mcommit e5edc6e8e30794c0284806d86f5880205d9a989c[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sat Jan 1 06:38:22 2011 +0100

    add the support to log the fast.log alerts type to syslog

[33mcommit d424ac7c6140b67862f76d9104b2697a18c8c10c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 31 09:05:44 2011 +0100

    Fix nfq lockup due to improper handling of PKT_PSEUDO_STREAM_END packets.

[33mcommit c9f9e3f9a4825f63f76a9bcf952b73b55476df93[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 28 13:14:25 2011 +0100

    Add configure check for signed or unsigned nfq_get_payload, adapt code.

[33mcommit aedb61b7d22d48d45c76666d667a18d5683c164c[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Jan 25 00:32:31 2011 +0100

    affinity: lock get next cpu function
    
    The function getting next CPU to use need to be locked as init of
    the threads are done concurrently.

[33mcommit 0b5e5b8772771becacff3ef5128ec3331d2b1fe0[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 24 23:35:33 2011 +0100

    affinity: change config format and misc fixes
    
    This patch fixes some problem with affinity work and modify the
    configuration file format.
    
    For example, the detect cup set can be formatted as follow:
         - detect_cpu_set:
            cpu: [ "all" ]
            mode: "exclusive" # run detect threads in these cpus
            prio:
              low: [ 0 ] # threads on CPU 0 have low prio
              medium: [ "1-2" ] # threads on CPU 1 and 2 have medium prio
              high: [ 3 ] # threads on CPU 3 have high prio
              default: "medium" #default priority is "medium"

[33mcommit 2600d203cc5f01d0754d182e662da03799f2bde4[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 24 13:27:10 2011 +0100

    Fix typo in configure.in
    
    Signed-off-by: Eric Leblond <eric@regit.org>

[33mcommit c74116949cb9b7f8963172af71770824925d1efd[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 24 13:27:09 2011 +0100

    source-nfq: improve nfq option system
    
    This patch modifies the NFQ option system to avoid implicit
    choice. 'nfq.mode' is now a string which can take a value
    in the 'accept', 'repeat' and 'route' set.
    
    Signed-off-by: Eric Leblond <eric@regit.org>

[33mcommit 94596ff282ba736d9f0833051ac808964ae33547[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 24 13:27:08 2011 +0100

    source-nfq: add queue redirect support
    
    This patch adds the support of queue redirect. If 'next_queue'
    variable is set, the verdict sent to kernel is modified to contain
    the indication of a queue number (equal to 'next_queue') which will
    receive the packet after the verdict. This feature can be used to
    chain easily tools using NFQUEUE.
    
    Signed-off-by: Eric Leblond <eric@regit.org>

[33mcommit aded7b4fae05ec4709c5f5fb6335b0d2a753a845[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 24 13:27:07 2011 +0100

    source-nfq: add detection of already treated packet.
    
    This patch adds detection of already treated packet. If a packet is
    coming with an already set mark, it will be accepted and the processing
    of the packet is aborted.
    The patch display a message when the problem occurs but the number of
    message is limited to a fix counter in a way to avoid flooding the log.
    
    Signed-off-by: Eric Leblond <eric@regit.org>

[33mcommit e399e74fc1cfb46907a064aa3086f52af6ce7af1[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 24 13:27:06 2011 +0100

    source-nfq: Factorize buffer usage
    
    A big sized buffer was allocated at each packet parsing. This patch
    uses a per-thread variable to have a persistent memory usage.
    
    Signed-off-by: Eric Leblond <eric@regit.org>

[33mcommit 1e600c1054a775b7b811da8c5e914a97f39a11c4[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 24 13:27:05 2011 +0100

    source-nfq: add simulated non-terminal NFQUEUE verdict
    
    This patch adds a new mode for NFQ inline mode. The idea is to
    simulate a non final NFQUEUE rules.
    This permit to do send all needed packets to suricata via a simple
    FORWARD rule:
        iptables -I FORWARD -m mark ! --mark $MARK/$MASK -j NFQUEUE
    And below, we have a standard filtering ruleset.
    
    To do so, suricata issues a NF_REPEAT instead of a NF_ACCEPT verdict and
    put a mark ($MARK) with respect to a mask ($MASK) on the handled packet.
    
    NF_REPEAT verdict has for effect to have the packet reinjected at start
    of the hook after the verdict. As it has been marked by suricata during
    the verdict it will not rematch the initial rules and make his way to
    the following classical ruleset.
    
    Mode, mark and mask can be configured via suricata.yaml file with the
    following syntax:
       nfq:
         repeat_mode: (false|true)
         mark: $MARK
         mask: $MASK
    Default is false to preserve backward compatibility.
    
    Signed-off-by: Eric Leblond <eric@regit.org>

[33mcommit 72ec56ab236519769a3c3350c1b14df44f1e97d0[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 24 13:27:04 2011 +0100

    source-nfq: autodetection of queue max length function
    
    Signed-off-by: Eric Leblond <eric@regit.org>

[33mcommit 3825ca2ed8a62396d46706b023330afd756709ee[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 24 13:27:03 2011 +0100

    config.h.in is an autogenerated file
    
    It thus should not be put into the repository.
    
    Signed-off-by: Eric Leblond <eric@regit.org>

[33mcommit 83307472342536859fc8bdc1c2f5ea166434074c[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 24 13:27:01 2011 +0100

    Add multi queue support to NFQ run mode
    
    This patch adds support for multiple Netfilter queue
    in the NFQ run mode. Suricata can now be started on
    multiple queue by using a comma separated list of
    queue identifier on the command line. The following syntax:
            suricata -q 0 -q 1 -c /opt/suricata/etc/suricata.yaml
    will start a suricata listening to Netfilter queue 0 and 1.
    
    Signed-off-by: Eric Leblond <eric@regit.org>

[33mcommit 1375e90030781d668f641089740390254a0501fb[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 24 13:27:00 2011 +0100

    Prepare multi queue support in NFQ
    
    This patch prepare support for multiqueue in the
    source file. The NFQ vars contained in Packet structure
    has a new member. It is a reference to the NFQ thread var
    it comes from. The behaviour is modified as a single verdict
    thread treat packet for all Netfilter queues.
    
    Locking is done in the verdict function to ensure that
    simultaneous modifications of counters can not occur.
    
    Signed-off-by: Eric Leblond <eric@regit.org>

[33mcommit d0faa6c96ed243c5d6f3908948b65ad056fedc17[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 24 13:26:59 2011 +0100

    Fix some spacing.
    
    This trivial patch fixes some indentation problems.
    
    Signed-off-by: Eric Leblond <eric@regit.org>

[33mcommit 88fb3a641e57baa9717790f2523b5663ab059568[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 24 13:26:58 2011 +0100

    Delete some commented code in runmodes
    
    This patch simply suppress some commented code in runmodes.c.
    
    Signed-off-by: Eric Leblond <eric@regit.org>

[33mcommit f9e453e14cbf66883d684d72914a16abfba7c86a[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 24 13:26:57 2011 +0100

    affinity: Use configured 'threads' value if set
    
    This patch modifies runmodes to make them use the new 'threads'
    variable.
    
    Signed-off-by: Eric Leblond <eric@regit.org>

[33mcommit fb3641982f714c69f1028c8d1d7922c3ab5533c3[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 24 13:26:56 2011 +0100

    affinity: 'threads' param to configure threads number
    
    This patch adds a new parameter the affinity. The 'threads' keyword
    is used to set the number of threads to start for a family. It can
    only be used on family where multiple thread are laucnh in the running
    mode. This is mainly the case of the detect threads.
    
    Signed-off-by: Eric Leblond <eric@regit.org>

[33mcommit 789d46cc3c4e4a670e203760df911f06da15649a[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 24 13:26:55 2011 +0100

    Add per-cpu prio handling
    
    This patch updates affinity setting to add a support for per cpu
    priority setting. In exclusive mode a thread is dedicated to a CPU.
    This patch adds the ability to set the thread prio for all threads
    of a family running on a given CPU.
    
    With this patch we can write
        - detect_cpu_set:
            cpu: [ "all" ]
            mode: "exclusive" # run detect threads in these cpus
            low_prio: [ 0 ]
            medium_prio: [ "1-2" ]
            high_prio: [ 3 ]
    With this configuration, detect threads assigned to cpu 0 will
    have a low priority. Detect threads on cpus 1 and 2 will have
    prio medium...
    
    The previous configuration is equivalent to:
        - detect_cpu_set:
            cpu: [ "all" ]
            mode: "exclusive" # run detect threads in these cpus
            low_prio: [ 0 ]
            high_prio: [ 3 ]
            prio: "medium"
    because the prio value is used a default.
    
    Signed-off-by: Eric Leblond <eric@regit.org>

[33mcommit a11e40dedf8c2e8827435bf4e45fe0bd12f43513[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 24 13:26:54 2011 +0100

    Pcapfile mode: support for cpu affinity settings
    
    This patch adds support for cpu affinity setting in the pcapfile
    runmode.
    
    Signed-off-by: Eric Leblond <eric@regit.org>

[33mcommit 9d5f08e0d99db541cdf1528905424ebd579f14cd[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 24 13:26:53 2011 +0100

    Pcap mode: use CPU affinity setting
    
    This patch adds support for CPU affinity settings
    in pcap mode.
    
    Signed-off-by: Eric Leblond <eric@regit.org>

[33mcommit 51df6beb26c5f04012f02139d89b978deed8f7fb[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 24 13:26:52 2011 +0100

    Convert RunModeIpsNFQAuto to new affinity mode.
    
    The default NFQ run mode is now using the new affinity system. It
    thus can be configured via suricata.yaml.
    
    Signed-off-by: Eric Leblond <eric@regit.org>

[33mcommit ea566d6601bee780b240f718874c31d06b2be5e1[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 24 13:26:51 2011 +0100

    Handle management thread with corresponding affinity
    
    This patch implement the setting of each management threads in
    the corresponding thread affinity. This is done by modifiying
    thread creation function.
    
    Signed-off-by: Eric Leblond <eric@regit.org>

[33mcommit 0809deafc496598cba4ad061010f9186756c4d56[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 24 13:26:50 2011 +0100

    Implement function needed for affinity in tm-threads
    
    This patch features the implementation of affinity related
    changes in tm-threads. In place code has been used but some
    refactoring has been done to avoid code duplication.
    
    Signed-off-by: Eric Leblond <eric@regit.org>

[33mcommit 77f2b6a7a967d1c29f883e70169da289f13e234e[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 24 13:26:49 2011 +0100

    Make runmode parse affinity settings.
    
    This patch modifies runmode to parse configuration file related
    to affinity settings. It also prepare the export of the
    set_cpu_affinity which was previously local. It is now used
    in the affinity and tm-threads files.
    
    Signed-off-by: Eric Leblond <eric@regit.org>

[33mcommit 2011366429e78f7832b1ceebad6fa6c6dc485bd6[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 24 13:26:48 2011 +0100

    Include affinity in runmodes and threadvars.
    
    This small patch add inclusion of util-affinity.h in the
    files that will have to use affinity related features.
    
    Signed-off-by: Eric Leblond <eric@regit.org>

[33mcommit 37ee483b7551368b6df7b85c9b41b4876eb49f20[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 24 13:26:47 2011 +0100

    Add affinity util function and related files
    
    This patch adds two new files which implement advanced affinity
    settings.
    
    Signed-off-by: Eric Leblond <eric@regit.org>

[33mcommit 559b5db7df275e32d62a67aa9fde1eca93940c69[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Jan 24 13:26:46 2011 +0100

    yaml: add config for cpu_affinity
    
    This patch introduces the configuration part of cpu_affinity
    evolution. The idea is to have thread families (receive, stream, ...)
    and to be able to specify for each of them:
     - The cpus to use
     - The mode of balancing between the cpus
     - The thread priority to use (value of nice)
    
    Signed-off-by: Eric Leblond <eric@regit.org>

[33mcommit 96e38521910760343d5e2d7b917bd8d8345f1e1c[m
Author: Eric Leblond <eric@regit.org>
Date:   Thu Jan 13 21:37:10 2011 +0100

    source-nfq: add define of SOL_NETLINK
    
    Signed-off-by: Eric Leblond <eric@regit.org>

[33mcommit 396b750414590e66325b46dd59429483a80042c0[m
Author: Martin Beyer <martin.beyer@marasystems.de>
Date:   Mon Jan 10 12:06:02 2011 +0100

    Fixed optional args in SCCudaModuleGetGlobal

[33mcommit 5dc5d73a66529f03d917ea7e263810cbd1d2f6a0[m
Author: Martin Beyer <martin.beyer@marasystems.de>
Date:   Thu Dec 16 15:11:48 2010 +0100

    fixed NULL checks in util-cuda

[33mcommit 0d4ac48aa04534d4283c3e1f8148144cc86f18f7[m
Author: Martin Beyer <martin.beyer@marasystems.de>
Date:   Thu Dec 9 16:08:58 2010 +0100

    added texture reference api to util-cuda

[33mcommit d10cf5b4e3f57575eb6005f40aafe76f161a5d48[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 28 10:45:04 2011 +0100

    Increase stream msg size.

[33mcommit ec5b62255387a7c8c344063d863bdca913c3cf23[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 28 10:44:46 2011 +0100

    Inspect all stream msgs at any time when running in stream-inline mode. Skip detection for packets flagged for dropping before detect.

[33mcommit 48c7f18453f5801942166ee994e98c2f44e64967[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 28 10:34:43 2011 +0100

    Fix bug in the segment insert code causing an inconsistent segment list in some overlap conditions.

[33mcommit 929ce0bb9b37afa38453247261d804e120fb45e2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 28 10:33:28 2011 +0100

    Add a counter to NFQ for modified packets.

[33mcommit 05539d7357feb1833420364986af10f680626e64[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 25 18:16:57 2011 +0100

    Fix a reassembly overlap issue. Fix a inline reassembly gap handling issue.

[33mcommit 00e4dde6a6ed77c64b0653f04bec9136ded9226d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 25 12:42:54 2011 +0100

    Fix PKT_STREAM_EOF never being set, resulting in some raw stream chunks never being inspected. Improve debug output.

[33mcommit e92ab40d398ee4cc89a570713d788bd596a36bca[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 25 09:01:33 2011 +0100

    Fix compilation for non-DEBUG case.

[33mcommit 1dca88fe690df9febafa9f3ef9b2e2ae4958a32f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 25 08:16:48 2011 +0100

    Do the actual checksum recalculation and packet replacement on modifing a packet in the stream engine.

[33mcommit 2db06cc79ecef4ab631f9f156a105ee3e5f0316f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 24 14:38:19 2011 +0100

    Improve Inline reassembly wrt to GAP handling. Add more tests.

[33mcommit 29e02abc94eaf1bad8f50e0714d95df0c6cee528[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 24 14:19:11 2011 +0100

    Expand and fix stream unittest helpers.

[33mcommit 121e9c72aa2edafdd7db170d924fc7fc111cb543[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 24 14:16:14 2011 +0100

    Add more debug printing of reassembled data into the app layer api.

[33mcommit 4c82c0e75068292fafd9c94096afc24ab0680341[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 19 09:40:00 2011 +0100

    Improve RawInline reassembly: remove unnecessary segments from the stream in an earlier stage. Test this properly.

[33mcommit d00c6172c94e622e3661ff875bfb0dbe07e9b83b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 19 09:38:44 2011 +0100

    Update stream section of example configuration.

[33mcommit 668bd46c1ce55b200ec75bb39eab46f3e306991f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 18 12:05:44 2011 +0100

    Add flow prune debug counters (disabled by default).

[33mcommit 4bf43823549f0848604be688d401d2fd2e7798bb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 17 18:43:28 2011 +0100

    Make sure tunnel packets (and pseudo packets) properly decrement the flow use counter in all cases.

[33mcommit 37587c0b7d17b01ad5a10075a7cc697be7dcc09f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 17 13:59:40 2011 +0100

    Add missing stream inline files.

[33mcommit 3a774165fa08cc8d6acb880d60e9d795154796f7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 17 13:59:16 2011 +0100

    Initial version of a inline raw reassembly function that reassembles in a sliding window. Introduce new unittest helpers for stream reassembly.

[33mcommit abdffadc1c8d09e810609dcd55c0b95640deaf94[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 12 16:48:18 2011 +0100

    Add a new app layer reassembly function that is for inline use, and use it when the stream engine is in inline mode.

[33mcommit 8cacd5fe506ddbdd8f733e40f5c72a9693c9485f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 12 16:45:18 2011 +0100

    Fix the stream.inline config option. Set PKT_STREAM_EST flag also for packets that are part of a session in a state beyond TCP_ESTABLISHED.

[33mcommit a8bb98836ba8fa8c9ac3e07ded0d7fb45e243b3c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 12 11:34:11 2011 +0100

    Don't handle and validate the TCP timestamp at the same time. Instead validate first, then later when all other validation has been done as well, handle.

[33mcommit 8d3f9c53a936fc2552c0d6316d4f2a876885e2e6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 11 17:49:37 2011 +0100

    Minor cleanups.

[33mcommit bff70eed6d9820767daa31260106428479565637[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 11 17:26:37 2011 +0100

    Update to depth code. Get segment from the correct pool when a payload is truncated.

[33mcommit 66c40f782c9166d608cc2c7731fd4b32b62ab4fa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 11 17:04:26 2011 +0100

    Have reassembly errors also set a stream event.

[33mcommit 0f072648e600d4bd2cc5666d9792bccee587e672[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 11 13:25:04 2011 +0100

    Another iteration of the reassembly depth enforcement, now considering retransmissions.

[33mcommit 935958219d7c516686ab809a13a52dadc73fdaab[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 10 22:15:23 2011 +0100

    Rename RST validation function to match convention

[33mcommit 94fe0d5fa2f693b533801b43c81c2705352708d7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 10 22:07:36 2011 +0100

    Add ACK validation to Reset/RST validation code.

[33mcommit 16cd31a4089ed62e4cfdca077431f5151d7cd527[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 10 21:50:28 2011 +0100

    Remove unused pseudo packet reassembly code.

[33mcommit bf88a6de0912aa0ee5dc421c2a7691086a6e02cc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 10 18:29:57 2011 +0100

    Add depth comment.

[33mcommit a26768ce7a139426fffa22f9051d63f740dade5b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 10 18:28:42 2011 +0100

    Change the way the reassembly depth is enforced. Ignore retransmissions, get rid of per session counter.

[33mcommit 7af9c58af77a8c7495b65091687273e71142c11e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 10 17:37:06 2011 +0100

    Improve ACK value validation, timestamp checking code. Overall layout.

[33mcommit 0f5b6a8bd7efa6f3fd70234987ebbd4584906470[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 10 10:11:52 2011 +0100

    Fix minor comment typo.

[33mcommit aa04d9eefb2c64cd9d3e460e8a283b165f1f2883[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jan 9 22:18:42 2011 +0100

    Improve stream gap handling. Instead of giving up as soon as we see a gap we now wait much longer before we decide it's a gap.

[33mcommit 6ffb9da9be94b0999b1b7c59e861ab3b5b7af8ad[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jan 9 21:20:40 2011 +0100

    Better support ack/psh data packets on several states. Updates to ack validation code.

[33mcommit 6fca55e06878d911a126bfa52e2d24feb275f70e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jan 9 20:53:44 2011 +0100

    Add some debug output to app-layer-htp.

[33mcommit 25f5589078bb60d4d06331446834937da0cffea2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 7 10:18:04 2011 +0100

    First round of adding 'stream events'. Basic stream tracking events added.

[33mcommit 2849d2b1d37f0ff5fc6943492b02a0717d57ea03[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 4 20:30:46 2011 +0100

    Initial code for stream 'inline' mode: packets that are (partly) overlapping with already accepted packets (meaning in the streams seg list) are rewritten to make sure they contain the exact same data.

[33mcommit 3857154f4b9342d031cb0e3ddec605c26d0a6266[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 9 17:10:34 2010 +0100

    Fix the pseudo packet having the wrong proto set, causing massive fp's. Flag packets to be part of the established phase of a tcp session, so we won't prematurely inspect the app layer state.

[33mcommit 8b5f553a35e0a0689bdf53336565e266f5ae4cc4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 28 16:49:58 2010 +0200

    Inspect a pseudo packet upon receiving a RST so that we are sure both sides of the TCP session are inspected.

[33mcommit 55a863359cc81415be649501f6fa4de716d6eaa7[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Mon Oct 11 00:37:10 2010 +0200

    support for pseudo packet creation from reassembled stream segments

[33mcommit cc116d71efc5114e42fd377fbfc6975aca8afd4c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 6 14:12:32 2011 +0100

    Fix unittests after merge.

[33mcommit 2beb7af7f8c568e033375570010a155013004d0d[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sat Jun 5 11:54:24 2010 +0200

    support for validating the ACK before updating the last_ack field and also update next_seq if we missed the last packet

[33mcommit acc38c9ebfb5e1b665db8362c7776e83360d95a9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 5 15:34:54 2011 +0100

    Make sure we don't try to 'verdict' the fake PKT_PSEUDO_STREAM_END packets.

[33mcommit c955254b4e94170696ba4c257a539431ffff9e75[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jan 2 17:37:01 2011 +0100

    Adapt stream code to packet memory allocation changes.

[33mcommit 44e678b86bdd390f632f78eb1df942c91c701675[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 28 08:26:53 2010 +0100

    Comment out disabled unittests.

[33mcommit a622ad5047da57f80599fcaa2b0705a6b16757ae[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 11 20:53:40 2010 +0100

    Fix new unittests introduced by rebase with next branch.

[33mcommit 1d971b53a6ed0ca8048578131e8f71b75a3212fc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 7 17:19:37 2010 +0100

    Update all unittests

[33mcommit fadd6d63619d1512a69bf0720aeb530235a99a0f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 1 10:36:45 2010 +0100

    Add pseudo packet counter.

[33mcommit f606621e8c9dcef6ab739b015ff2768c0dab751b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 9 17:10:34 2010 +0100

    Fix the pseudo packet having the wrong proto set, causing massive fp's. Flag packets to be part of the established phase of a tcp session, so we won't prematurely inspect the app layer state.

[33mcommit b0901ab30d5833c939f393d2eec1a26954d0a1fa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 1 11:19:12 2010 +0100

    Fix compilation with --enable-debug

[33mcommit 6482c349097447014648d1a48f45ec9cc2dd81ec[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 29 12:37:56 2010 +0200

    Increment flow use cnt for pseudo packets as the flow is not supposed to disappear while dealing with those packets.

[33mcommit 2072ad80af9f1ff20ceb8926b3bf26b7f91eaec5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 29 11:12:39 2010 +0200

    Never create a pseudo packet based on a pseudo packet.

[33mcommit 61a9936d55b51b1b3091abdc133ba2654b9fd127[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 28 16:49:58 2010 +0200

    Inspect a pseudo packet upon receiving a RST so that we are sure both sides of the TCP session are inspected.

[33mcommit 00f21f34e8ec6e9ba1330cbadcd12f316652348e[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Mon Oct 11 00:37:10 2010 +0200

    support for pseudo packet creation from reassembled stream segments

[33mcommit 8fa5a2c0251c7b81c73e75b3cfcd81857102ce72[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 29 17:59:04 2010 +0100

    Split applayer and raw stream reassembly
    
    Split stream reassembly in 2 parts: a part that sends ack'd data to the app
    layer parsers as soon as it's available, and another part that queues up
    data into larger chunks for raw inspection.

[33mcommit dda6d3e07ba9094212d3791a0406cfddbff25f3f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 24 18:22:15 2010 +0100

    Add error counters.

[33mcommit 3b239b3e4837a81b6cd2ddb66cfe20e5ea4378ef[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 15 15:54:06 2010 +0100

    Cleanup and document AppLayerHandleTCPData

[33mcommit fe6bf728d3b698a8c7f3ec69e78c95d345f90bb2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 15 13:29:42 2010 +0100

    Create a AppLayerHandleTCPData function to directly feed data from the reassembly engine to the app layer parsing.

[33mcommit b5a5ef14b91858baaf8986a832bdd3f0c226b32e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 10 11:42:42 2010 +0100

    Make sure we reuse a TCP session if we receive a valid 3WHS on a closed TCP session, can happen if a new session has the same tuple.

[33mcommit 24f071cabbc2b62102b7a7a186a69eb457379c77[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 5 20:53:51 2011 +0100

    Make sure http_cookie inspects all HTTP transactions. Clean up error messages. Get rid of unused code and dead comments.

[33mcommit c9897a44a47a5d82a5fed8233660090944e68a6c[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Dec 30 17:55:38 2010 +0530

    fast pattern support for http_cookie. Also support relative modifiers

[33mcommit bbbedaf96321609070107ad8ee837f2005555b46[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Dec 29 18:51:19 2010 +0530

    fast pattern support for http_method. Also support relative modifiers

[33mcommit 2321a4dd581519495dde07ea92fb8f0c070d3271[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Dec 31 18:22:38 2010 +0530

    support isdataat negation. Also fix addiing isdataat to appropriate lists

[33mcommit 4ae7144876e7535fbecf039db37a21b0e5c8a60c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 4 15:54:02 2011 +0100

    Fix 2 cases where overlapping data in the stream engine wouldn't be properly handled potentially causing the wrong data being used in stream reassembly.

[33mcommit 9c2bdc6d0c53cfc488dada13862c7878c5f66175[m
Author: Eric Leblond <eric@regit.org>
Date:   Fri Dec 31 13:15:30 2010 +0100

    Main loop: increase timer.
    
    Timer in the main loop was of 100 usec. This patch increases it
    to 10 ms which should be a reasonnable delay to declare some threads
    dead.
    
    Signed-off-by: Eric Leblond <eric@regit.org>

[33mcommit 89558ab9a4ebd640c0b5dda0f5e672c095d37d5c[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Dec 28 09:02:26 2010 +0100

    RFC: modify error treatment in PacketCopyData
    
    Hello Victor
    This patch modifies error treatment following our discussion on IRC.
    It tries to follow the error treatment guideline I've been able to
    read in the different files.
    I will merge this patch in the original commit if the error treatment
    seems ok for you.
    
    BR,
    Eric

[33mcommit 49adc264bc1e8d5a30cc0619d016f42205d5e1bf[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Dec 28 09:02:25 2010 +0100

    Don't print message after SCMalloc failure.
    
    This patch generated via coccinelle is getting rid of logging
    message after a SCMalloc failure. They were useless as SCMalloc
    already displays a message.

[33mcommit 67b95c8c4d387531c35dec18ddfcf14cd480a4e2[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Dec 28 09:02:24 2010 +0100

    Auto discovery of default packet size
    
    If default-packet-size is not set, it is possible in some case to
    guess a correct value.
    
    If PCAP or PF_RING are used we are linked to a "physical" interface.
    Thus, it is possible to get information about the link MTU and
    hardware header size. This give us the ability to auto discover a
    decent default-packet-size.
    If suricata is running under a different running-mode, it will
    default to 1514.

[33mcommit 3eada85ff8a8a7ce2cba0ce16503069ba93e3374[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Dec 28 09:02:23 2010 +0100

    Add interface setting discovery via ioctl
    
    This patch adds support for MTU discovery of link following idea
    of go.ph1g. It also adds some function to give a approximation of
    link header length.

[33mcommit 1db4aadd16097f1d4bc03b19019e83aa01835b83[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Dec 28 09:02:22 2010 +0100

    Supress usage of Packet declaration in tests.
    
    For convenience, a massive usage of 'Packet p;' declaration has
    been done in the tests function. Although this was completely
    legal, this is not possible anymore because of the new Packet
    allocation structure. This massive patch modifies all suricata
    files to use a SCMalloc allocated pointer to Packet instead.
    
    This patch has been done using coccinelle (http://coccinelle.lip6.fr)
    which is a semantic patching tool. This ensures that things like call
    to SCFree() should have not been forget because the semantic patch
    explicitly forces the call to SCFree(p) before each return. With this
    patch all unittests are running fine with a small and a big default
    packet size.

[33mcommit 156b2025975ca940dfa6f749944e96df93c7a901[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Dec 28 09:02:21 2010 +0100

    Fix decode part of source-nfq

[33mcommit dd038c19063f6c92b824a92d53a0d5cdb3229e83[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Dec 28 09:02:13 2010 +0100

    Modify files to avoid direct pckt payload access
    
    This patch implements the needed modification of payload access
    in a Packet structure to support the abstraction introduced by
    the extended data system.

[33mcommit e802e1ed1663615b9c4daef63e2844805a263cec[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Dec 28 09:02:12 2010 +0100

    Modify Packet structure and prepare accessor.
    
    This patch modifies decode.c and decode.h to avoid the usage
    by default of a bigger than 65535 bytes array in Packet structure.
    The idea is that the packet are mainly under 1514 bytes size and
    a bigger size must be supported but should not be the default.
    
    If the packet length is bigger than DFLT_PACKET_SIZE then the
    data are stored in a dynamically allocated part of the memory.
    
    To ease the modification of the rest of the code, functions to
    access and set the payload/length in a Packet have been introduced.
    
    The default packet size can be set at runtime via the default-packet-size
    configuration variable.

[33mcommit 8471626916746ac4a063aba4dd3aae721cb7699d[m
Author: Eric Leblond <eric@regit.org>
Date:   Mon Dec 27 15:47:29 2010 +0100

    Fix error message and adds information to config
    
    This patch fixes a typo in an error message and add some
    information to the checksum verification option.

[33mcommit 6fc5dae2f9f682672c0ce9db9773dcac63cf3fa4[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Dec 28 00:22:16 2010 +0530

    fix leak for accepted uuid list in dcerpc state

[33mcommit 3409513a44efe4b703b238f87d7cc57fd0e587ca[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 30 19:45:53 2010 +0100

    Fix FlowTest* unittests to fail sometimes.

[33mcommit a69bb94335a4b28c0fb872f19e90b992fc9fd1c3[m
Author: Eric Leblond <eric@regit.org>
Date:   Wed Dec 29 22:42:46 2010 +0100

    Checksum match: fix logic problem
    
    This patch fixes a logic error in the checksum matches. In
    case the protocol is not the one tested, the test must return
    0 and not 1 (test matched).
    
    Signed-off-by: Eric Leblond <eric@regit.org>

[33mcommit 627c02e3006697d38880a50e21b33b665fb9da08[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 29 16:57:10 2010 +0100

    Use a different way of getting a short git rev that is compatible to older git versions.

[33mcommit 878d3d87db95cdc487de35159c92b98758f89d37[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 21 09:23:37 2010 +0100

    Add (experimental) support for using multiple pcap devices to acquire packets from. Just passing multiple -i <dev> options on the commandline will activate this. Windows not yet supported.

[33mcommit 18b4e3380f4efc55a69cbd95d20b582d05ca4980[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 24 13:22:33 2010 +0100

    Make mpm-algo use the mpm_table that has the actual mpm's registered. Clean up dead code.

[33mcommit 6131dec8a128e4460506ed34df9d7d3770e5a66d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 24 09:48:31 2010 +0100

    Fix a compiler warning due to a broken prototype declaration.

[33mcommit e3bde3e95daf555c7afbcb5faf9d315a61451841[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 23 21:21:17 2010 +0100

    Add a simple revision based on the git rev to the version number, like a build number.

[33mcommit 56c95bf622c660abf51694486533a67cc55f4f40[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Dec 21 21:44:32 2010 +0100

    Convert thread PRIO to a enum
    
    This patch converts thread prio value to an enum. This
    can add some useful check by gcc in switch.
    
    Signed-off-by: Eric Leblond <eric@regit.org>

[33mcommit 9216b4d13c76b1dad1e88a44a2668c32bc4ccb8c[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Dec 21 21:44:31 2010 +0100

    Import .gitignore file.
    
    This fix the status returned by 'git status' by removing files that
    have not to be added to repository.
    
    Signed-off-by: Eric Leblond <eric@regit.org>

[33mcommit 62cf7eea4ced186df91c7523bc79257cdeceeac5[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Dec 21 21:44:33 2010 +0100

    util-cpu: fix trivial typo in documentation
    
    This patch fixes a trivial typo in a documentation message.
    
    Signed-off-by: Eric Leblond <eric@regit.org>

[33mcommit ffcd51216751792f832c0ee37cf5191f79be573a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 23 15:24:44 2010 +0100

    Clean up packet pool handler on shutdown.

[33mcommit b24ccf8c804d1460d9fa9587c59d08769777bd9d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 23 14:57:53 2010 +0100

    Clean up stream pmqs in the detect thread ctx.

[33mcommit 371029605754ce87dfce5740c7f1f19ec95e4cd2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 23 14:57:13 2010 +0100

    Cleanup defrag engine on shutdown.

[33mcommit 9c9f3ec9634442daf244e7a5c9a788990d84c6b0[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Dec 23 17:23:14 2010 +0530

    fix mem leak in http_ engines

[33mcommit 0057a7c15ec0f2bced94c8ec5eaf9cc34bd765fa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 22 11:31:25 2010 +0100

    Suppress a AC debug message.

[33mcommit d48ff8f6aa5c6e128c83daddb8aa56e761b251f0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 22 09:52:57 2010 +0100

    Extend 'append' option to stats.log as well. Small cleanups.

[33mcommit f4392e1dcc3f5686ed4538494ecf5a03547601e4[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sun Dec 12 16:16:27 2010 +0100

    added support for appending the log files

[33mcommit de41612ea107c95926ae1bf663fe47c9dd0ad354[m
Author: Pierre Chifflier <chifflier@edenwall.com>
Date:   Sat Dec 18 17:03:38 2010 +0100

    Add options to choose if we log header and content in Prelude alert module.
    
    Signed-off-by: Pierre Chifflier <chifflier@edenwall.com>

[33mcommit 9a53a09c58946a4d02572546e3f08724a18774a1[m
Author: Pierre Chifflier <chifflier@edenwall.com>
Date:   Sat Dec 18 17:03:37 2010 +0100

    Log verdict in Prelude alert module
    
    Signed-off-by: Pierre Chifflier <chifflier@edenwall.com>

[33mcommit f73c60b4ffefda41228f180815c568d0606dcaad[m
Author: Eric Leblond <eric@regit.org>
Date:   Tue Dec 21 23:08:17 2010 +0100

    nfq: set some options on netlink socket
    
    This patch modify nfq system to set some options on the netlink socket.
    This should improve performances by handling more correctly capacity
    overrun.

[33mcommit 0e8b041151be8af3c9ed36ff6c10094e1b7e4197[m[33m ([m[1;33mtag: suricata-1.1beta1[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 21 15:43:53 2010 +0100

    Add missing 'reference' to reference.config to Makefile.am.

[33mcommit e66b3e3ee7e10110774cbfa693b42bec2a4aea1f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 21 15:40:25 2010 +0100

    Switch mpm-algo in example suricata.yaml to ac

[33mcommit 96ec2a76c685495276f5220f617245a3ccecba8a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 21 15:12:32 2010 +0100

    Update version to 1.1beta1

[33mcommit 014f62247a66594f3c129b11ca5fbb3503c069c1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 21 13:08:36 2010 +0100

    Another batch of clang fixes. Nothing really serious. Includes a couple of fixes for broken fixes from yesterday.

[33mcommit cac95010f37d5bdfd34ffd899e9c01134c8646bd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 20 13:13:11 2010 +0100

    Minor unified1-log changes to work around a clang issue, but also to clean up the logic slightly.

[33mcommit 3f47eade6b17b20dde2739e37ee7eeb17c22038b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 20 12:26:15 2010 +0100

    Fix couple of cases where incorrect handling of keyword parsing errors would lead to access of uninitialized memory. Found by clang.

[33mcommit 7dc4b164a8d0c9bbb88c5cc81f4b7dd5c8db9c13[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 20 11:43:36 2010 +0100

    Fix a clang warning in unittest DetectUriSigTest12.

[33mcommit 2c6f9abaff4e7cf0e8e398ed69cd0d5ee61cc8d0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 20 11:28:44 2010 +0100

    Work around a suspected fp in clang.

[33mcommit ac97bb77990200a1f569c75299cf7a609081dc75[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 20 11:06:56 2010 +0100

    Fix a number of small clang issues. Clang doesn't know we exit on malloc errors during init.

[33mcommit b600c9ac0928c46c62b10df14e988b7f2d23115a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 20 09:37:17 2010 +0100

    Fix a clang issue 'Assigned value is garbage or undefined' in the threshold code in case a packet was neither ipv4 or ipv6.

[33mcommit 1112e103a89deae24f1a680bc2ebc744cfbae9f2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 20 09:20:10 2010 +0100

    Disable DBG_PERF by default except for when DEBUG is enabled.

[33mcommit 6af30e5b2ed0bd1709d84f870eaee0b5b7396080[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 20 08:57:17 2010 +0100

    Handle a clang warning that says dstq can be null referenced. In no call of FlowRequeue dstq can be null so not a real issue. Added a BUG_ON just in case, but only in DEBUG mode to prevent the extra overhead. If the code changes we will run it in DEBUG mode and catch the error.

[33mcommit 743ed7626c182e30a9ed0b9cad467c20418cd473[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 20 08:23:35 2010 +0100

    Fix potential null deref (introduced a few commits ago) found by clang.

[33mcommit 3d60e9bfeb16e608a405a49ea45664d24bbf87b0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 17 14:43:24 2010 +0100

    Clean up output.

[33mcommit 3fcfaef9f79ada1cc93550b3b831df81fc52c427[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 17 12:54:23 2010 +0100

    Fix compiler warning in log-httplog.c & change stats.log to log as mm/dd/yyyy as well.

[33mcommit 791d177c7f6007d79d1418b30091d07d2de2c297[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Mon Dec 13 17:27:46 2010 +0100

    fixed the timestamp issue in http.log

[33mcommit 355f237bfdd5c272911507fa6ba821d463735c99[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 17 12:02:20 2010 +0100

    Fix compiler warnings, cleanup counters config code.

[33mcommit ba18110abd40d9a35cf276bb722c6c6fbb2a7cd5[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Tue Dec 14 09:45:54 2010 +0100

    support for stats.log configurable and fixed timezone issue in faslog and debuglog

[33mcommit 58c228a56b3e2d9d16dfacc73b8c4bd001d5fe5d[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Dec 16 13:59:16 2010 +0530

    fix sig ordering bugs. Flowvars and pktvars user type retrieval should be from pmatch list, as well as from match list. Also fix lousy unit tests

[33mcommit c64b9362cf68d43769ef8c7a5cb943481ac74c13[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 17 09:15:25 2010 +0100

    Remove unused stream flag.

[33mcommit 4cacb1e970d1296f60455195c5096ec255682e53[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 17 09:03:29 2010 +0100

    Disable adding to unregistered mbit/s counter.

[33mcommit dc2c8be5831ad05d93b2fcf90c4852e4b537763a[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Dec 14 23:59:01 2010 +0530

    always read config.h header file first

[33mcommit 40de0b027050049809a993635180db4b78b3ebe0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 14 18:25:11 2010 +0100

    Have each output use the global log format if none is specified for that specific output.

[33mcommit d241e51b323d6b9bf14e211aac1b969c66301476[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Dec 11 18:26:02 2010 +0530

    adapt fast pattern engine analysis to reflect the new changes made to your mpm design

[33mcommit 54854d74c1faa5ee79e4b45e8f0b3000ac806e83[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Dec 13 16:51:30 2010 +0530

    add some header files that we missed while rebasing

[33mcommit 05adf2de41f2b0f3726fdac55b2a125ed2cab8eb[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Oct 1 19:43:21 2010 +0530

    fix live runmode decode TM for cuda

[33mcommit 42c12870284ba6f16a3688ca17ee7a3a52fccd27[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Oct 1 17:33:54 2010 +0530

    renintroduce g_u8_lowercase_table for b2g cuda

[33mcommit 1fb121d0ba2904b44d4b63a16335216d721f3bdc[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Oct 1 14:09:24 2010 +0530

    wrap cuda based util-mpm.c tests in __SC_CUDA_SUPPORT__ ifdef

[33mcommit b1c577f829f8f1f96463ab2e1b8fde131521d241[m
Author: Martin Beyer <martin.beyer@marasystems.de>
Date:   Mon Sep 13 15:45:45 2010 +0200

    cuda streams support in b2g-cuda MPM

[33mcommit 0ce86efe4057aa93066ec473f00fe0e9ba7e7480[m
Author: Martin Beyer <martin.beyer@marasystems.de>
Date:   Sat Sep 11 17:47:52 2010 +0200

    cuda handlers support multiple CUmodules per context

[33mcommit 621815ded0b0da67b162d6a5cee196fbea3a9281[m
Author: Martin Beyer <martin.beyer@marasystems.de>
Date:   Fri Aug 20 14:06:39 2010 +0200

    cuda-packet-batcher timeout supports float values

[33mcommit 7dd2392dead0038dce1aa119dbe1c6807aded573[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Aug 17 23:29:39 2010 +0530

    updated cuda todos. Please look at cuda-packet-batcher.c to have a look at the new todos

[33mcommit c734cd1bddc10d1678597e284e51d8565ba7f5c1[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Aug 12 17:35:03 2010 +0530

    make cuda mpm parameters configurable

[33mcommit 2c08aebec184bac1e51a3dfe4640e4d290aeca1c[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Aug 8 23:09:19 2010 +0530

    enable write combined memory for cuda mpm. Some other minor cleanup

[33mcommit 8adff3c63cbfc67420461aa29c23a4d0f348c12e[m
Author: Martin Beyer <martin.beyer@marasystems.de>
Date:   Thu Aug 5 19:12:53 2010 +0200

    use of pagelocked memory for CUDA

[33mcommit 0e8e8e37287835a73f983f508a1026ed12b5ff00[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 14 15:57:30 2010 +0100

    Don't stop stream reassembly if protocol detection failed, only stop/prevent app layer parsing.

[33mcommit b7a5f16b694fe035af3b50fe13b8765e3477d980[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 14 15:56:56 2010 +0100

    Fix FlowBitsTestSig06 test no longer working properly.

[33mcommit 39dea56a84ebb73f512fd709983b2f943e682c8b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 14 13:04:01 2010 +0100

    Remove flowbits as a mask prefilter as they are dynamic. Add a dynamic check.

[33mcommit 6943a7eb8ce5cb0f92e2d762eeeb27e7d3d3d125[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 13 17:03:46 2010 +0100

    Move updating the time from the pcap callback to the decoding stage in file mode.

[33mcommit 0dd07df60dbef05b06e757b4f71629e7e86f6ccd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 10 18:37:20 2010 +0100

    Add reference to suricata.yaml documentation in our redmine wiki.

[33mcommit ceb7fd748ec875216e2aa8f4f3c25ec30b34e4a4[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Dec 10 19:23:16 2010 +0530

    support /D option for pcre - http raw header. Also support relative pcre for http raw header. All pcre processing for http header moved to hrhd engine

[33mcommit 16e4e3fe50efd98445beb032877b32b5e512905c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 10 18:17:36 2010 +0100

    Fix request-body-limit option for libhtp config.

[33mcommit 39a5348d2bb94556702e6225545e9cdff884caf3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 10 17:05:23 2010 +0100

    Remove dead pcre code.

[33mcommit 6ebe7b7cd3c28982a15dc4651e88e2e5d37f8f55[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 10 17:00:18 2010 +0100

    Change the way the request body limit is enforced.

[33mcommit 0cd2bce7da97b4ee3f6643e24f2f9637fec78c42[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 9 15:59:13 2010 +0100

    Manually add unittest by Pablo Rincon from bug #210.

[33mcommit 8bd6a38318838632b019171b9710b217771e4133[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Dec 9 17:37:34 2010 +0530

    support relative pcre for http header. All pcre processing for http header moved to hhd engine

[33mcommit 2b781f00d7ec118690b0e94405d80f0ff918c871[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Dec 9 12:33:40 2010 +0530

    support relative pcre for client body. All pcre processing for client body moved to hcbd engine

[33mcommit 0a58f0728a5ad5dcf80aeb52bd008902452b6f60[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 9 11:07:45 2010 +0100

    Remove redundant checks in http header and http client body code.

[33mcommit f1c90c29a62ccfd5414cebde3fd37d58258e0c18[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Wed Dec 8 06:08:25 2010 -0600

    Add the ET reference.config file as a default

[33mcommit 8c21511c9999f3cb5d5785bd7f0d6ba7eb0de3ff[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Dec 8 20:14:53 2010 +0530

    don't buffer raw headers. Retrieve them individually from htp_state during mpm stage and content valiadation stage

[33mcommit 2422c7471acc95b878c2ed80b8ced99e870aba7f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 8 16:36:08 2010 +0100

    Reduce number of locks required for http_header and http_client_body inspection.

[33mcommit 55ca9882226b6e8929f839d0d121403f95de34c8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 8 12:56:51 2010 +0100

    Change locking of http_header, http_raw_header and http_client_body so that flow isn't accessed without lock anywhere.

[33mcommit 435d0fb327a46e0586733dd7a8beb7bb93439483[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 8 12:22:22 2010 +0100

    Clean up signature flags creating room for merging flags and mpm_flags. Merge flags and mpm_flags. Move new mpm id's into signature header. Get rid of full signature access in signature prefiltering.

[33mcommit 169aa5581a4cb8ea2b96f15281f7a67f37a9c7c8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 8 11:40:45 2010 +0100

    Rename SIG_FLAG_AMATCH flag to SIG_FLAG_STATE_MATCH to better reflects its purpose.

[33mcommit d7b92d9bfe61a86b9b94fb6d70e66ffcaf073d31[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 6 18:28:52 2010 +0100

    Consolidate several signature flags into one.

[33mcommit 2102a54c2662824095dabee9dbe98242c21745ff[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 8 11:37:04 2010 +0100

    Cleanup and rearrange detection code slightly.

[33mcommit 25588b69102c19f519eab7404e0d922c1a32583e[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Dec 8 00:09:31 2010 +0530

    comment out hrhd flags that we were using previously. Also remove the de_mpm_ based flags inside detect.h used by uri|hcbd|hhd|hrhd mpms. indentation fix as well

[33mcommit e50503e82012f4eccf0df87a662223a7f577a349[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Dec 7 22:06:21 2010 +0530

    cleanup/remove dead code

[33mcommit 93fa7ea8288a2c03e903006fd0b6f3d5a7920744[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Dec 7 21:56:57 2010 +0530

    modify detection engine to run hrhd mpm before building the match array

[33mcommit ea3fd3829108f057c2c12ce6dc5540cf73d660f7[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Dec 7 21:02:34 2010 +0530

    fix lock issue with mpms inspecting http state for body, header

[33mcommit b140ed1c9c395d7014564ce077e4dd3b4ae5304e[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Dec 7 19:22:06 2010 +0530

    modify detection engine to run hhd mpm before building the match array

[33mcommit 4e273f2c8bcf7a7c82e151d2ff9e84421641a211[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Dec 7 17:44:42 2010 +0530

    modify detection engine to carry out hcbd mpm run before build match array if alproto is http and if sgh has atleast one sig with hcbd mpm set

[33mcommit 72b0fcf4197761292342254e07a8284ba04169f0[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Dec 7 16:22:59 2010 +0530

    modify detection engine to carry out uri mpm run before build match array if alproto is http and if sgh has atleast one sig with uri mpm set

[33mcommit 6648d1faf012d95ce13788f99f3d6e848b2ae1e1[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Dec 7 11:49:28 2010 +0530

    allow sigs for http uri of the form content:one; content:two; distance:0; http_[raw_]header;

[33mcommit 8f1d17846fcd16552ca285b3bba8ba36f5859a7c[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Dec 7 11:14:01 2010 +0530

    allow sigs for http uri of the form content:one; content:two; distance:0; http_uri;

[33mcommit 07f20674ac11a8f855e5b603c24c01b91fb3681a[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Dec 5 13:39:43 2010 +0530

    allow sigs for http client body of the form content:one; content:two; distance:0; http_client_body;

[33mcommit 6a5d2cb40d1446da5dc26ed83bf1d959c510bf98[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 6 15:53:38 2010 +0100

    Fix potential locking issue in out of memory conditions in the http_header, http_raw_header code. Fix other potential small issues in http_ code.

[33mcommit eecf2d7e13a36b86053572ae1a5a986dba11cfe0[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Dec 3 15:11:34 2010 +0530

    Add the makefile.am addition that I forgot to add in the previous commit for http_raw_header

[33mcommit 7ec03827742ee663c3c48f0e76255f9e000f4fa4[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Dec 2 00:23:17 2010 +0530

    support fast pattern for http raw header. Also support relative modifiers for http raw header

[33mcommit 0c806f70bb8e4bc34ca8eeaa3faff9815fd04b9b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 27 11:26:14 2010 +0100

    Fix --enable-debug compilation, just unittest with --enable-debug-validation enabled.

[33mcommit 1a32d9b5ec00e3c6ef36e9097df5f588218a3e47[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 26 14:25:28 2010 +0100

    Fix printing unprintable characters in the engine-analysis fast_pattern mode.

[33mcommit 075719ea8c78f5324294df54eba4577304e087d6[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Dec 1 15:05:46 2010 +0530

    fix fast pattern unittests

[33mcommit 18d3c87947316ec27d455e0e2edaad9a0a09fbc6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 1 08:07:58 2010 +0100

    Add check to fast pattern keyword to make sure that the offset and length don't exceed the actual pattern length.

[33mcommit c61c68fd365bf2274325bb77c8092dfd20f6ca87[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Dec 1 13:50:34 2010 +0530

    mpm and fast pattern support for http_header. Also support relative modifiers for http_header

[33mcommit 778ec0939c26116d3d77a460a556ce2f923b57e9[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Nov 30 16:57:32 2010 +0530

    make client body buffer limit configurable. Also some minor changes

[33mcommit fc46f216ca42722b980bb787e189b953d2bd9b7d[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Nov 27 11:13:47 2010 +0530

    detect-http-header.c cleanup before we start working on it

[33mcommit 302011dbcacc0de028d2789350c585b6b7fffe43[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Nov 26 21:57:21 2010 +0530

    fix compilation issues with debug enabled.

[33mcommit 0aa5cffb1204a8dfcb8a6b7c8ac792667d3dc0d1[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Nov 26 16:52:02 2010 +0530

    fast pattern support for http_client_body keyword added. Also mpm support for http_client_body added

[33mcommit c227aeeacb5e8952f8b87c8ff7f4000eb6ce0752[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Nov 24 21:22:23 2010 +0530

    remove support for skipping reinspecting fast pattern contents once again during packet payload inspection. Also make some changes to our detection engine

[33mcommit bbd0c5056bae29aa253b1558a40e5160a202cb29[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Nov 24 00:24:26 2010 +0530

    store the content added for mpm inside Signature. also carry out an unconditional cleanup of packet pattern matcher pmq det_ctx->pmq

[33mcommit 68b78664faf167fd53ec17f8782801578215f09b[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Nov 22 21:24:09 2010 +0530

    Add unittests for checking content flags. Fix indentation in PopulateMpmAddPatternToMpm(). Also fix DETECT_CONTENT_IS_SINGLE

[33mcommit b15ada81028a2df41bee6ef1101095e1cca3d95d[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Nov 22 12:56:38 2010 +0530

    set content_packet_mpm and content_stream_mpm flag for content to prevent double check inside inspection code

[33mcommit 67aecc73c24980cd81ce087b812352a3c9bff506[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Nov 22 12:55:31 2010 +0530

    set content_uri_mpm flag for uri content to prevent double check inside inspection code

[33mcommit 1cd8bd3d3cc1fc63fbd7c5dca3c1aced58d2cfc2[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Nov 22 12:53:36 2010 +0530

    make changes for uri mpm, when uricontent is negated and also is the fp and we ignore checking it once again in engine-uri.c

[33mcommit 6df051321f741d974854bbec339582887eb9abc7[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Nov 21 23:32:02 2010 +0530

    fix fp when content is negated and also added to mpm

[33mcommit 5c6a65dc588c6f990260c0eacefa49f59ac6430d[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Nov 21 19:19:38 2010 +0530

    support relative modifiers for http_client_body. Introduce body processing engine in detect-engine-hcbd.[ch]

[33mcommit 234656e5f67d89ad1fdc7877e4d2074cbd021ed3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 19 12:01:07 2010 +0100

    Fix compilation in --enable-debug mode.

[33mcommit eade60f0fd7a2be31092dc19cbb6383e458fbae6[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Nov 18 11:27:13 2010 +0530

    make some name changes. break PopulateMpm(). Set the avoid mpm double check flags

[33mcommit 96bf15bd747d6da17f5e903a0eb0d1a1ed0f0995[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Nov 17 23:21:23 2010 +0530

    unifying content structure - http_stat_msg now uses DetectContentData

[33mcommit 4c53a9d606ea8e21b24a1f0695fe9fb72761217d[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Nov 17 23:09:15 2010 +0530

    unifying content structure - http_header now uses DetectContentData

[33mcommit 1957eee389ce92f02e9efb27aa5145616045e2c8[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Nov 17 23:05:06 2010 +0530

    unifying content structure - http_method now uses DetectContentData

[33mcommit 041f5b1a4f34942242b5cf3944af4324d126685e[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Nov 17 22:59:56 2010 +0530

    unifying content structure - http_cookie now uses DetectContentData

[33mcommit f05b0f4e1e1dae9476e03d945a08fe4208d2e276[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Nov 17 22:56:02 2010 +0530

    unifying content structure - http_client_body now uses DetectContentData

[33mcommit 4883efd0f66fc9431ea6b876431eabdf215ab5d3[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Nov 17 22:47:58 2010 +0530

    unifying content structure - uricontent now uses DetectContentData

[33mcommit 3b0a9ca97e47080997dbf5fd20e126bef89b0073[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Nov 16 22:43:28 2010 +0530

    add support for http_uri; content fast_patterns

[33mcommit 3c73854d2d7fba501e1d781d9b40d511b11c65fb[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Nov 16 21:17:47 2010 +0530

    completely remove populate_mpm_flags. Some indentation changes. Also disable support to avoid double checks inside payload inspection for patterns added to mpm. Also add support to MpmFactory to reclaim a mpm_ctx

[33mcommit fde2c64ea7827d83bfe555a31da21c0fe390a2e3[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Nov 16 20:07:14 2010 +0530

    fix code after fresh rebase. change some pmatch and amatch lists to sm_lists[] format

[33mcommit a6899218fc3ee2d73db2ac86347aa39d363a8971[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Nov 16 19:01:56 2010 +0530

    remove populate_mpm_flags from inside PatternMatchPreparePopulateMpm()

[33mcommit 6eaba8941c9c7d127fae089fd129c2eaf5b3d688[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Nov 16 18:50:24 2010 +0530

    Use new flags to indicate uricontent has a mpm set

[33mcommit 46b4806d8ed38dc8e67d5b8561182ad84b7e8fb8[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Nov 15 19:41:23 2010 +0530

    use a single populatempm() function to add the right content for mpm

[33mcommit 4a038511ffe0fb0f07d53c6ddc5d15269892b74e[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Nov 12 12:54:28 2010 +0530

    Change the struct members uricontent and uricontent_len in DetectUricontentData to content and content_len. Make replacements everywhere else in the codebase to accomodate these changes

[33mcommit ede7be34b53a8fbd3abf527128dcaf3d1f75f99d[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Nov 12 11:50:50 2010 +0530

    replace all Signature->tmatch instances in the engine with Signature->sm_lists[DETECT_SM_LIST_TMATCH]

[33mcommit 3d2f81d97884defd961906843daf11a0d2f10035[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Nov 12 11:38:14 2010 +0530

    replace all Signature->dmatch instances in the engine with Signature->sm_lists[DETECT_SM_LIST_DMATCH]

[33mcommit a7353be20d0121d4dedb14ad5f999e887a1ef23c[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Nov 12 11:11:11 2010 +0530

    replace all Signature->amatch instances in the engine with Signature->sm_lists[DETECT_SM_LIST_AMATCH]

[33mcommit e0476242c6799cb48f3525114e0662cf39d163df[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Nov 12 09:04:24 2010 +0530

    replace all Signature->umatch instances in the engine with Signature->sm_lists[DETECT_SM_LIST_UMATCH]

[33mcommit e54358a9e180a054ede6d06f781ba6127b84b810[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Nov 12 00:33:45 2010 +0530

    replace all Signature->pmatch instances in the engine with Signature->sm_lists[DETECT_SM_LIST_PMATCH]

[33mcommit 82fd581b64d84eaf12474dddd94bf38a9fa7169e[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Nov 11 18:46:07 2010 +0530

    replace all sm lists (match, pmatch, dmatch, umatch, amatch, tmatch) with an array Signature->sm_lists[]. Replace all Signature->match instances in the engine with Signature->sm_lists[DETECT_SM_LIST_MATCH]

[33mcommit 3656879aa0fa2fb90aeaa813f019bae0906cf959[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Nov 11 13:57:46 2010 +0530

    fix some dce opnum/stub tests that would have shown success always irrespective of test results

[33mcommit 4b77f132df499de9f7c81def0fb0a0affff3c8f9[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Nov 10 18:10:52 2010 +0530

    add support for sigs with uricontent fast_pattern

[33mcommit ea8eaf31aa5c0910d8fa0352c80d83f172bb70a8[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Nov 10 11:43:31 2010 +0530

    Fix fast_pattern tests that always showed success, irrespective of test results

[33mcommit 966c7349d3aa6a42f49cc8c5de6f0acfdbe1496e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 18 12:02:02 2010 +0100

    Make sure we have a response message before inspecting it in http_stat_msg.

[33mcommit 07ec1ee10e595155528131153e8922b7d8a15b16[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 17 13:24:07 2010 +0100

    Slightly cleanup detect-engine.sgh-mpm-context option parsing.

[33mcommit c89507836b29a9559e7b3b282591f5ebc6c3e8f2[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Nov 16 19:19:45 2010 +0530

    if sgh-mpm-context is not available in conf, alias the auto case inside the engine

[33mcommit bac621760e0e2f931f7c2ab4de47bca663a2af94[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 17 11:50:36 2010 +0100

    Fix a potential invalid memory read in the protocol name code used by alert-fastlog.

[33mcommit f92ba23331cb975494734be7442f58182a0dcd52[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Tue Nov 16 03:05:48 2010 +0100

    add the support for >= and <= operator for byte_test

[33mcommit 412498f4e4baf83bd0095b06844acd351f4b73c1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 17 10:32:10 2010 +0100

    Converts port vars in http logger from uint32_t to Port and update output.

[33mcommit b7ff6537d24bb47e0fccb94b2653301f2e36064e[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Tue Nov 16 18:48:39 2010 +0100

    fixed the incorrect port issue in http.log

[33mcommit 275bd3b7d7143cecc6892922e4a89dbe744fda0c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 16 14:21:25 2010 +0100

    Switch back to defaulting to full for detect-engine.sgh-mpm-context as it broke many tests.

[33mcommit dec4218d62e7a20c58345e7b9fbd828e5e7a8b06[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 12 08:44:53 2010 +0100

    Layout updates to NFQ runmode.

[33mcommit 7e49aa7f76956c7d01837f62bf05ef1dbb52c324[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 11 14:32:48 2010 +0100

    Simplify NFQ runmode reducing the number of threads and thus queues.

[33mcommit 7e6f01765f1b17853da67b77cbd4972b36ae0120[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 11 12:55:37 2010 +0100

    Change default of detect-engine.sgh-mpm-context to auto.

[33mcommit 001f91056e6a10cfdac0e30c716ba3f76ba6cc09[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 11 11:35:21 2010 +0100

    Add http_raw_header as an alias to the http_header keyword as that actually inspects the raw headers (see issue #243). Closes issue #242.

[33mcommit 4598274d07d8b70c8dbbcee06f0a965c99d3b145[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 11 10:59:02 2010 +0100

    Fix depth error messages referring to distance instead of depth, fix their layout.

[33mcommit afdb39e5f6f38c179ce5ddc6ee54238ac5ba7852[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 11 08:59:37 2010 +0100

    Print an error if the protocol field of a signature contains a unknown/invalid value.

[33mcommit 8d0bc27fc4136f4f6a3be0dc9306c5fb362409db[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 10 16:58:58 2010 +0100

    Fix a case where alerting in inline mode would lead dropping on alert sigs.

[33mcommit 5a10eac5bd96cffd85dbf1f6889f5715c5b007ce[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 10 09:15:29 2010 +0100

    Cleanup http_stat_code unittests, shrink data structure.

[33mcommit 1636152e328ebdee1fa4326697328ad4e4ef8b92[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 10 08:52:21 2010 +0100

    Fix negated http_method not working properly, causing false positives.

[33mcommit b7da115e6da07bf8e21481841c54d66ab348bbb7[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Thu Oct 21 03:15:08 2010 +0200

    support for http_stat_code keyword has been added to detection module

[33mcommit 1deae70cf7d8dbd5607e3db95407101ed75c46c2[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sun Oct 17 10:10:43 2010 +0200

    added http_stat_msg keyword support for detection module

[33mcommit a4d19e41307c60a727b1064026524e4f995a0f87[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Mon Nov 8 12:00:01 2010 -0600

    Add new profiling sort option, maxticks.

[33mcommit 59923316bc2afd6a01c12f5c76d1f2c17c5f1977[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Jul 29 16:30:05 2010 +0530

    change the default recursion limit in the code to 3000, the value which we currently have in the conf file. Also change print modifier for printing timeval

[33mcommit 5d9a453e0d42ac4bbdd04fe3e42c541e76d1a6ee[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Jul 28 19:23:23 2010 +0530

    find an optimal value for detect-engine:inspection-recursion_limit + unittest

[33mcommit bc99328ec8f2ee0057d6c7ac17d41e1539f88dad[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Jul 27 16:43:46 2010 +0530

    define a new conf paramter detect-engine:inspection-recursion-limit; Defines a recursion limit for content inspection code

[33mcommit efeab331ea386b0e7499928aa5d764cbb67c8dc8[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Thu Nov 4 20:02:56 2010 -0500

    compilation fix missing UT ifdef wrapper in reference code

[33mcommit 746ef0d2f8abf603f9cf8f817bc197ce1ccdc1ce[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 4 15:31:36 2010 +0100

    Remove stray newline char from profiling output.

[33mcommit 3062b19068eb4ae89417ff9c897c768f1983d070[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 4 14:52:44 2010 +0100

    Clean up output of signature ordering module.

[33mcommit 001dcaae84273350a17c76414f865af36c62ad40[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 4 14:38:42 2010 +0100

    Minor reference.config support changes: improve error handling, reduce hash table size.

[33mcommit 88d94b136da482b538c6b38f8b224dbdfc383f3e[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Nov 3 00:06:03 2010 +0530

    Support for reference.config file

[33mcommit f5a02833dd3277c3e7161f980a8cd5af7c86d6e2[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Nov 2 00:04:56 2010 +0530

    code cleanup in detect-reference.c

[33mcommit 5f4d681a4229035265582f322e9b1fd7a0782f67[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 4 11:40:46 2010 +0100

    Apply revision 233 and 234 from libhtp to improve memory handling when Suricata runs out of memory.

[33mcommit 344ea14695a7fcd8726e7deb01873837d05b9e2d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 2 17:15:15 2010 +0100

    Change mpm hash_size config setting highest to higher as highest wasn't the... highest. Max was higher. Leaving highest as an alias to higher for backwards compatibility.

[33mcommit 41fd7e51c689605580d6bc442697c0534be9ee12[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 1 20:51:34 2010 +0100

    Really add secunia reference support.

[33mcommit 33170fd181834724155bafe30711024032867c6b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 1 20:48:31 2010 +0100

    Add secunia reference pending our reference.config support.

[33mcommit 067e53403c3318ca79aa54f76856ea222316f187[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Oct 23 19:56:59 2010 +0530

    add missing sig_app_layer flags for dce sigs

[33mcommit 26fd2a0afd823db57107b49a160fb256e3f385a1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 1 16:46:53 2010 +0100

    Add telus and bid references for etpro.

[33mcommit 2b187a2721a93a13a89b84f06858c94b4555a31f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 1 18:55:52 2010 +0100

    Remove a BUG_ON statement from the payload inspection code.

[33mcommit f2e6ec737436429e0b4dca5b4649d88cb8a85dc3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 1 17:56:59 2010 +0100

    Fix http_method not inspecting all http transactions all the time. Fix proper nocase setting. Switch to pattern scanning only, no more numeric compares as it turned to be incompatible with how the keyword is used (nocase, etc).

[33mcommit 2cdb5be39192c54980be1e691090875eee9d6373[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Nov 1 16:27:39 2010 +0530

    Print out file name for fast_pattern engine_analysis. Also add some info logs

[33mcommit 0c5b82d891e24a828ff5bbd2435f47b5c9efe82f[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Oct 31 17:14:59 2010 +0530

    provide separate ids for content, uricontent, http_(client_body_data|cookie|header|method|uri), when they share the same pattern

[33mcommit 3bd7441ea589a3a1ee1b07d9f7ac69c963432918[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 30 16:48:09 2010 +0200

    Default to 'single' ctx for ac-gfbs as well.

[33mcommit e072841e93a55a3b45194374eb305c5996035f9f[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Oct 22 18:19:29 2010 +0530

    hash fix in staging to differentiate nocase duplicate patterns from case-senstive ones

[33mcommit de5db1a730ebba9301e69cab00404d70ec31df9f[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Oct 22 13:14:19 2010 +0530

    support cases for ac, where we have a single pattern in 2 different sigs, but one that is case-senstive and the other not. Also remove duplicate pids from the output_table

[33mcommit 62f814a4c3fe4fd19297951ef6ca82b20b06b266[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Oct 21 22:40:39 2010 +0530

    change default value for detect-engine.sgh_mpm_context to auto

[33mcommit 8628c572df3c58ae3fe0d6ea73d8cc1bc499e94c[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Oct 21 22:33:32 2010 +0530

    update todos for ac. Cleanup some memory as well.

[33mcommit a2d04a94b5e0b9a7e2745f08aa076ad5af964f47[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Oct 21 22:24:34 2010 +0530

    selecting auto for detect-engine.sgh_mpm_context now uses single if the mpm is ac, full otherwise

[33mcommit 5cc7f90f454e187e1ba4e5701bad376513936121[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Oct 21 22:16:15 2010 +0530

    fix hash bug in ac-gfbs. Should reduce the no of patterns added for single context ac-gfbs from a million to a couple of thousands. Also support no case handling. \todo support insertion of final state presence into goto_table and failure table state transitions

[33mcommit ded1f63323abac30f7b109f9ecb0bef3974de871[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Oct 20 14:05:59 2010 +0530

    fix ac nocase handling

[33mcommit 174048544d23ba4d0d6ae8e3ed127fc6e4fed1ed[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Oct 20 14:05:27 2010 +0530

    fix hash generation in b2g and ac addpattern. Brings down the no of patterns added from close to a million to a couple of thousands

[33mcommit 29b5cb9abd8eb201a8b8e8e0f5af186042f78052[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Oct 19 11:32:17 2010 +0530

    respect content flags in hash compare function during staging. For example, we would end up ignoring a nocase version of a duplicate content from another sig in the same sgh

[33mcommit 0ef684705c21e5beb51e1318723a0fb8040d93e3[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Oct 17 17:15:35 2010 +0530

    support single mpm context distribution across sghs in staging. Also see to it that ac works fine with this setup

[33mcommit b367c37ae617743965ca0741e3d6714d9f60a868[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Oct 9 14:36:53 2010 +0530

    suricata.yaml conf update to support single mpm context distribution over multiple sghs + code to parse this conf

[33mcommit 4b2cf7e125045b0768dbf6e4665280eef4467d89[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Oct 9 14:04:59 2010 +0530

    fix ac, ac-gfbs to support new changes to util-mpm.h + remove some junk code

[33mcommit b9a770740a18b3236a3f6a69c3a231b0d689f5f0[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Sep 12 13:57:57 2010 +0530

    add comments and todos for ac and ac-gfbs

[33mcommit 658ff5753d373da45986f3a5f7bad95e32032e84[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Aug 25 17:12:24 2010 +0530

    aho-corasick for the cpu. We have 2 versions of ac. The first MPM_AC uses the delta table and the secone one MPM_AC_GFBS uses the goto-failure table

[33mcommit bfb6aac495968713d74c6fc6f3f611769de0cd8f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 9 17:01:02 2010 +0200

    Sleep after checking for a thread flag in TmThreadWaitOnThreadInit now that the check is so much cheaper.

[33mcommit 9634389b9ea84d88caa4310e3ca09e3df02af070[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 9 10:00:21 2010 +0200

    Fix TmThreadsUnsetFlag not unsetting flag if __sync_fetch_and_nand was used.

[33mcommit fcff1ce7f401f7a0215d54ececd64ac84237cf71[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Fri Oct 8 14:45:31 2010 +0200

    Converting threadvar flags to atomic vars to avoid using the old spinlock

[33mcommit b8f5a6a4fc5ba8b21b4dc0388a75754d471525c6[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Sep 2 16:09:29 2010 +0530

    throw out contents/uricnotents with invalid hex assembly

[33mcommit 850f44022f100e384e4f14ad4e2ad9c08aa63545[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Jul 28 21:02:14 2010 +0530

    invalidate sigs with content/uricontent strings ", "boo, boo" + fix parsing content strings of the format content: !\"boom\";"

[33mcommit 5a7efe5f97b934ce807bf7ad910bcd5b725d890f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 30 12:44:52 2010 +0200

    Add comment and layout update to new fast_pattern code.

[33mcommit a85fa6b79215ab2a5ea749575003cc8573418734[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Oct 26 17:57:06 2010 +0530

    support for fast_pattern only and fast_pattern:offset,length. Also support the new option for engine-analysis

[33mcommit 0d741b9a559abed3bcfb99ac586548fd91c8bca0[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Oct 28 11:56:54 2010 +0530

    fix for bug 227. For negated contents that have been added to mpm we might have pmq.pattern_id_array_cnt as 0. We can't ignore inspecting sigs if this is 0, in case the content added is negated

[33mcommit 9ad1924dbaff156341d05908880dd7ee9a3588e0[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Fri Oct 8 14:25:39 2010 -0600

    Track the max ticks for each rule.
    
    This is the highest tick count this rule used to evaluate in a single sample.

[33mcommit b3a8f0a90f1622657cde2bb2e20fba54de934bde[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Tue Sep 28 00:53:53 2010 +0200

    Fix asn1 decoder frame oob mem. Adding max stack frames to suricata.yaml

[33mcommit 25d1b6fec1906b5d7f2e2b75e254dee51638126d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 7 16:36:17 2010 +0200

    Adapt malloc macro's to only display errors during init, not during runtime. At runtime it could make us crawl if the system runs out of memory.

[33mcommit 22f770f3bfc713eeb20229115ac0bf8e2f4fc677[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 6 11:58:05 2010 +0200

    Better handle low memory conditions.

[33mcommit 57f5327d565531c48bb3abeb0e5cb3b472fd9194[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Thu Oct 7 05:03:20 2010 -0500

    Doc update for EPEL install link

[33mcommit 21c8d27300f77fdac88314661b33f70ed7b44f41[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 6 15:57:59 2010 +0200

    Disable expensive unittests that don't really test anything.

[33mcommit 7abf3a212310f72fbe6bc05a2ecc5a98b86a5329[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Oct 6 11:54:59 2010 +0530

    fix csum handling for tcp/dup

[33mcommit f1ea68e316ce9fdeb7ffed5ac5074a4196da8b3f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 7 10:15:32 2010 +0200

    Store the first frag flag in the uuid as the pfc_flags field is overwritten. Part of fixing #206.

[33mcommit 14a12f5fb733855c24a68b31ba34934e4395bc6b[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Sun Sep 5 23:46:39 2010 +0200

    Adding atomic bitwise operations api and rwlocks support

[33mcommit b8a709cbe7b95d7921c6690a456e08034c6da350[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 27 14:57:33 2010 +0200

    Fix setting hash size in the config for b3g. Part of fix for bug #222.

[33mcommit e47a9b59e953ffdf5bf66518f3f8bdfc9b1c4a32[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Sep 27 00:02:07 2010 +0530

    accept tcp packets with syn+urg+push

[33mcommit f2f0b54d2598a08a1a88bbd86446cd8a21642299[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Fri Sep 24 21:05:25 2010 +0200

    removed xref from the alert-fastlog

[33mcommit aa2c3118e3f5972b8b0cfe11139e0ba9f0db1b76[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 27 09:59:08 2010 +0200

    Remove unused code from b2gm.

[33mcommit 3eab71515382175be985fe53fe0262f7f661b1b3[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Fri Sep 24 18:28:23 2010 +0200

    support for printing protocol names for known protocol

[33mcommit b81280524cabcbaa40fba28f5d5563f2303f9b47[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 25 09:07:36 2010 +0200

    change dcerpc warnings into debugs.

[33mcommit 4208bdf0f957b0f1fea48b88119f50a4ff5cdef8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 25 08:43:51 2010 +0200

    Fix unittest.

[33mcommit cbd4c298ed44473a4a3b211afd05c3bd3b0affd3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 25 08:22:18 2010 +0200

    Initial version of a new bitmask based signature pre-filtering method.

[33mcommit 926e0035231ea3956a3e1f023d11f99d64abfc9e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 24 17:25:40 2010 +0200

    Updated install doc after automake run.

[33mcommit 7e47d87e1a021915f42e58530f842b0b191d5939[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 24 15:04:42 2010 +0200

    Small layout update

[33mcommit 66340be0729d18f722cc3b18f926f6fe7ee90bbf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 24 14:57:10 2010 +0200

    Fix pcre compilation with debug enabled.

[33mcommit 091f53ce4efdad44d09e73fedd89965925d7e4bb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 24 14:08:57 2010 +0200

    Fix retval of SCMemcmp for non-SIMD implementation.

[33mcommit a75556dfe5b773b2a3a6317ddeb9198ae19d9b95[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 20 12:38:37 2010 +0200

    Add memcmp functions for SSE4.1 and SSE4.2.

[33mcommit 1859ed54c7d9b7011a58162f39727bbf51383a95[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 9 14:45:49 2010 +0200

    Add memcmp api with a plain memcmp function and a SSE3 accelerated memcmp.

[33mcommit 94898a91cc52f7e1af24397909559eab6d2025c7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 17 14:26:28 2010 +0200

    Reorganize SigMatchSignatures.

[33mcommit fc248ca7a11c75f471d25f5dad157e16820b4843[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 16 11:55:35 2010 +0200

    Many small performance updates.

[33mcommit b4454b6846725859892c5e9392d9e4fe0ae6dfa5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 14 14:55:53 2010 +0200

    Switch to b2gc as default pattern matcher as it uses less memory and is a little faster.

[33mcommit 57b098e98c5fc9e3b98dcf30f04cca5699376592[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 14 14:15:26 2010 +0200

    Add padding to commonly used data structures.

[33mcommit 87f88867f4ee5f855a92bcfefa4bdffcbc79a23f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 14 14:01:58 2010 +0200

    Further improve B2gc. Add B2gm. Improve memory layout.

[33mcommit 4329261faa3bd29bd193cf0287fe0ec091b84af2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 9 15:54:08 2010 +0200

    Fix setting hash size in the config for b2g pattern matcher.

[33mcommit 697167319e9e8101d27cad3a103a178c12e13798[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 9 15:27:39 2010 +0200

    Change BloomFilter structure layout to reflect order of access.

[33mcommit 3971bcc83ab23fd99e7d74e972ad672890b2d866[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 9 15:25:31 2010 +0200

    Switch to faster tolower function for u8_tolower.

[33mcommit 9dfbab42f8235f8138bfcf5083fee9a913592fc0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 27 14:21:00 2010 +0200

    WIP B2gc

[33mcommit fc1687d875f201996c714d86056cfd45c07067a5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 23 15:39:14 2010 +0200

    Make sure the DetectHttpMethodData structure is properly initialized before using it.

[33mcommit 7b13ba9f9e9e991b805e1cf7688241d0888d9a83[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Sat Sep 18 15:22:23 2010 -0500

    Fixed broken nocase for http_method and http_header

[33mcommit ea902cc7d736ddacd0375e9b8d968d34a726e0a5[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Sep 10 12:23:55 2010 +0530

    fix bytejump segv from bug 237

[33mcommit 38898d9b30369d8eab6d62c3516c657e3b4df37b[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Sep 9 10:54:55 2010 +0530

    fix bytetest segv from bug 237

[33mcommit 6e5a48c92c9b7f7d45e4ed3876b80fd3b4ea953f[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Sep 21 01:37:27 2010 +0530

    temporary fix, in case we still have any corner cases remaining in dce parser

[33mcommit 24a88a689a0b72ca17dc2cccc894b0f5335f9587[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Sep 21 01:23:09 2010 +0530

    fix opnum parsing for fragmented request dce pdus

[33mcommit 1097de0d9d5f0489374cc13b1e0f932ebf79a736[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Sep 14 21:52:18 2010 +0530

    changed the endianness comparison to & for dcerpc pdus

[33mcommit a3280c1a20950b2ef079043cabc9287826d601c6[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Sep 14 21:26:56 2010 +0530

    throw out malformed pdus, that result the parser having parsed the required data, but we still havne't thit the frag length limit for the parser

[33mcommit 1aea3e56be52c5ad9f85227d3bae3b192116b04d[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Sep 12 00:33:32 2010 +0530

    for now ignore pdus with auth verifier. We will get back to this in the coming iteration

[33mcommit fc37e9d6eed5661c5ee95bd505a7554af42c5b05[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Sep 11 23:17:41 2010 +0530

    add internal ids to uuids. Use these internal ids to match uuids from bind and bind_ack. Create a new uuid list to hold all accepted uuids. Modifications to dce-iface to accomodate these changes as well + unittests

[33mcommit 816d2ef0c038dbae228881d57031053821664b83[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Sep 10 19:03:58 2010 +0530

    if malformed pdus push the bytesprocessed beyond frag_length, that's a sure endless loop. Avoid it, by reseting the dce state on seeing this

[33mcommit 5c5d8f8a5dde6b8af59bb62e8a6cff53fc24d2c7[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Sep 9 12:09:09 2010 +0530

    indentation fix in DCERPCParseBINDCTXItem, following changes from the previous patch

[33mcommit 38e26e5186e9f2b1b1cc3782aef1f340b4f5b01e[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Sep 8 11:55:37 2010 +0530

    modify the dce parser to accept context ids that start with a non-zero value

[33mcommit d57428471c3e9ef5562475eab07df2b2f004281d[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Sep 7 23:11:25 2010 +0530

    fix endianness handling for bindacksecondaryaddrlen

[33mcommit ba9355d68848946b1f68f6f57990cfbc53c74e71[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Sep 4 15:01:03 2010 +0530

    Flag if we see a fragged pdu. Do not reset dce stub buffer, if we are dealing with fragmented pdus(holds good only for first frag request pdus). Also reset the dce state vars on seeing an invalid PDU. Some minor fixes with respect to endianess as well.

[33mcommit 00f21252fabf2ee6bbccc5e7a13024000f7cf270[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Sep 3 10:47:46 2010 +0530

    support fragmented pdus in dce + unittest

[33mcommit ebc1f62050da01c497dabc574f028e5fcfc4e3fb[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Sep 3 10:07:04 2010 +0530

    some additional indentation changes in DCERPCParser

[33mcommit c2bc8ca252866cbdf535e757613e16090736d4da[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Sep 2 21:47:16 2010 +0530

    fix mem leak in tailq that holds dce uuids

[33mcommit 1c443677b2bd75bb3ecee29bfb2780cb0b67ea05[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Sep 2 17:16:02 2010 +0530

    fix indentation in DCERPCParser

[33mcommit fe700737a3edf88d936f1a3d4beb008e2775a359[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Sep 1 23:19:44 2010 +0530

    fix null dereference in detect parse test - clang fix

[33mcommit 892dea31e4936cf0ff6482d06b4815d46ee65849[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Tue Sep 7 22:18:18 2010 +0200

    added the counter for tcp.segment_memcap_drop to show the dropped segments count due to memory limit

[33mcommit 1c1c8cef89be0e373258127ccb95e533e3fe0b7b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 8 18:05:25 2010 +0200

    Print engine uptime on the same line as date and time.

[33mcommit 1d0492e2e73b939b81936aeead4c7d68b089767e[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sun Sep 5 19:19:04 2010 +0200

    added support to print the engine uptime in stats.log

[33mcommit e7cb7c6b9744562a06f2aba8a68cfbb3a12937f2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 8 17:56:17 2010 +0200

    Make outputs part of the flowpinned threads in the AutoFp runmode.

[33mcommit 99ad338e910b18ce499074444308651ee754d121[m[33m ([m[1;33mtag: suricata-1.0.2[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 2 15:49:40 2010 +0200

    Bump version to 1.0.2

[33mcommit 0eb0d48f35eba1b5c0a2aed1e43edcbe721f8703[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 1 23:18:09 2010 +0200

    Disable broken unittests and fix one.

[33mcommit f1e6e80a1e6edfd9a229f6fb3187fd99de954a26[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 1 14:46:13 2010 +0200

    Properly set tmp_ra_base_seq in streams. By Gurvinder.

[33mcommit 6a5bc52461f275943ca395d165754098a2c9938c[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sun Aug 29 10:11:12 2010 +0200

    support for several tcp evasion attacks. Thanks to Judy Novak and G2 Inc for reporting them

[33mcommit bc55fb27dca172fc78601a70b6991e745b6d3360[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 1 12:04:07 2010 +0200

    Compiler warning fix for memory macro's. Small layout changes.

[33mcommit 06a65cb46061f0873daaeb136efb28ef913d4ec3[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Tue Aug 31 17:11:49 2010 +0200

    moving http_client_body logic to use it per transactions. Adding unittests

[33mcommit ee34c70ad84b1e32b491bbcaa5756930ce3757e5[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Mon Aug 30 17:22:19 2010 +0200

    Reference atomic vars with SC_ATOMIC_EXTERN properly (considering if we support atomic operations or not)

[33mcommit 5c43db85cee0c74ef13863d022214729d50a0f09[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Mon Aug 30 16:46:33 2010 +0200

    Drop streams on inline mode when a drop rule match from a reassembled stream and/or app layer inspection

[33mcommit 76af1b049b5d475295668f61def4747780ed8d99[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Fri Aug 27 15:59:37 2010 +0200

    Make malloc errors on initialization stage a fatal error, resulting on a exit() call

[33mcommit eb9adf8129f57a5a4722f04f41dcd28e77a4ed65[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Jul 29 22:25:04 2010 +0530

    fix NULL indirection while parsing dce sigs - clang fix

[33mcommit f094523eb1d7996e52bc25099c38b4068f225858[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Jul 30 12:32:50 2010 +0530

    clang fix - some minor fixes for unittests

[33mcommit bbab0f99872a58dff98fd0c8eb300a72b5833030[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Fri Jul 30 14:30:16 2010 +0200

    Set default gid to 1 on Sig init

[33mcommit 8f3322ef73f291f284bdf3e143ea2a7640cb8066[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Fri Aug 27 18:35:17 2010 +0200

    Fix segv condition on DetectHttpMethodMatch (if the applayer unset the connp)

[33mcommit f225bd1428e04538610cbc5032cc76fc7114bdea[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Fri Aug 13 04:06:58 2010 +0200

    Adding modifiers /C /H and /M to pcre (http cookie, header and method)

[33mcommit 1d73e1fb7e846da01e67d01b0ddaf6a9df7dbab5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 30 10:24:34 2010 +0200

    Small update to the ssh module: fix a valgrind warning and a couple of compiler warnings. Do a few small style updates.

[33mcommit 9d7baa7a9f4743e12ffd86a9d2f3be30ec5caf9e[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Wed Aug 11 22:19:07 2010 +0200

    Adding ssh app layer module with two new keywords: ssh.protoversion and ssh.softwareversion

[33mcommit 0dab0e3935d98c756cceb45052453c42dbf20ef2[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Thu Jul 29 09:46:51 2010 +0200

    fix the reassembly depth test (bug 216)

[33mcommit 610b7702bace296b13105c3cd5a8c56f2a4ed459[m[33m ([m[1;33mtag: suricata-1.0.1[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 29 14:55:43 2010 +0200

    Bump version to 1.0.1

[33mcommit 04d3832d8f50ad9ee353e8fbb9b5b5db438c1e85[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 29 11:28:18 2010 +0200

    Remove ports check and fix small typo.

[33mcommit a492518e7a47d1a1b3b8c3b670bab4b831d8ef21[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 29 11:19:00 2010 +0200

    Properly detect detect-event-only sigs.

[33mcommit 21d79b05ad71cbddc2b40beffdea0a70adc19ac7[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Wed Jul 28 15:06:15 2010 +0200

    Fix for bug221 (avoid considering sig as "decoder event only" if ports are specified). Now the sig gets grouped to get a sgh at SigMatchSignatures

[33mcommit f081577fe4acc9b169392dc7b71bc08261496473[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 29 10:04:34 2010 +0200

    Revert yesterday's dcerpc commits as there were to many corner cases for it to go into 1.0.1.

[33mcommit 6299fbfb0fc082f4905db7ad4b07e2583aaa41ac[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 28 21:59:28 2010 +0200

    Fix stream msg content inspection not inspecting the correct id.

[33mcommit 526a782002ad82f7d6e6dcc2766fce1124fdbdf1[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Jul 28 22:28:14 2010 +0530

    temporary fix for dcerpc so that we don't loop endlessly, till we cover all cases with fragged pdus

[33mcommit 361cf14f50c51d61eb08d9664a6158bd24b00879[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Jul 28 22:19:40 2010 +0530

    fix endless loop. Change dce parser to accept ctx ids that always start with a ctx with a 0 ctx id

[33mcommit 8c774a1e2a5d2fed1dcfa96c160c7dcffbc6c8b8[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Jul 28 16:23:02 2010 +0530

    fix 206. Keep a count of uuids that don't belong to the first frag. Change dce_iface to match against uuids based on any_frag setting

[33mcommit 52bb4c067063def23846ee912ff31b76fb3a76a8[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Jul 28 14:21:40 2010 +0530

    fix endless loop in dce parser. fix parsing error of secondaryaddrlen for bindack

[33mcommit cda1efff29b982f5ccd38e9ad8bffa183fcc1d3a[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Jul 28 00:05:03 2010 +0530

    fix mem leak in tailq that holds dce uuids

[33mcommit 154a48fada85aeccd016007a0b725b59b2ed4655[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Jul 27 20:18:57 2010 +0530

    parse fragmented dce rpc headers correctly. Also some other minor fixes

[33mcommit c7fdc5ebda1f45553da1f6b5206ed4ae151fcc15[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Jul 27 20:13:04 2010 +0530

    do not reset dce stub buffer, if we are dealing with fragmented pdus(holds good only for first frag request pdus)

[33mcommit 73241fc86ca4529635166d5a885c202f71265451[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Jul 27 10:00:11 2010 +0530

    support fragmented puds in dce + unittest

[33mcommit 3ae45e5bbcaf4b21ee76991faf59a7253721b1cd[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Jul 27 09:48:32 2010 +0530

    fix indentation in DCERPCParser

[33mcommit c62a3d995edeff2d9283601f70d2847f9259f56a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 27 10:20:40 2010 +0200

    Fix signatures with trailing spaces being rejected by the regex. Add test.

[33mcommit 60c770c43473fe689aba5a5dcbd46cac6fc31246[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Jul 26 20:40:10 2010 +0530

    make pcre respect discontinue_matching flag in content matching functions

[33mcommit e8ecc94d6ad56c7aef1068ef996fc5b882799601[m
Author: Kirby Kuehl <kkuehl@gmail.com>
Date:   Sun Jul 25 17:37:40 2010 -0500

    fix multiple dcerpc fragments in one packet

[33mcommit ce4bc5a63b96e7e20e4aa6db3ad3eff3b873547d[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Jul 25 20:46:12 2010 +0530

    some minor modifications to the b2g cuda tests

[33mcommit c25921edf01c9f2d2e3c639037528ef5440c566e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jul 25 15:01:47 2010 +0200

    Add config output for new stream settings.

[33mcommit 3a0dadc0f3b3527ce657884385100b5f59f5734a[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Jul 20 21:38:47 2010 +0530

    Fix seg fault while running cuda tests. Don't set the alarm while running unittests, inside cuda-packet-batcher.c. Will result in a seg while the sig handler for ALRM in invoked

[33mcommit 3536ba73483f748a60dca34242aef905995ea2b9[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Jul 25 16:06:54 2010 +0530

    fix seg fault due to premature cleanup/double cleanup for byte(jump|test), isdataat, on seeing no previous relative keywords

[33mcommit c1486d7f2e1be0177e18a61fd2552b218f2401e0[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Sat Jul 24 14:03:38 2010 +0200

    Fix bug 217 (segv on profiling summary if no rule was specified

[33mcommit d1ce1c502b9bc4687b57b59e224670645d49f8b2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jul 25 14:29:27 2010 +0200

    Fix -Wall -Werror compilation after unittests update.

[33mcommit 0c3906a99b02fe86faa4f3af72562321945180b2[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Sat Jul 24 22:03:16 2010 +0200

    Fix for bug 204 (signature ordering with flowbit priority)

[33mcommit 1071a532106be29372970c4ece0731f60ac10a04[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jul 25 14:12:36 2010 +0200

    Fix unittests after ip_proto keyword change.

[33mcommit 70bda6506db84ff33e51520f09b956c3cd648cc1[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Fri Jul 23 18:43:00 2010 +0200

    Fix for bug 180 (check proto specified at the IP hdr)

[33mcommit f7ab84ca8331987d0cf861fc0ef2292be1cce2da[m
Author: William <william.metcalf@gmail.com>
Date:   Thu Jul 22 15:42:32 2010 -0500

    PF_RING hang at exit fix

[33mcommit 1bd2d592532008a1e1579a08cc8f7b18cf26c3a0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jul 24 10:40:52 2010 +0200

    Merge decode and stream threads in RunModeIdsPcapAuto like in the file runmode. Fix these runmodes not adhering to the cpu affinity setting if CUDA is compiled in.

[33mcommit ead29dc6918f4524f1fae7e892d3f86dac117c0a[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Jul 24 00:53:18 2010 +0530

    make detection engine use dce alstate(if present), on seeing smb traffic

[33mcommit 7acb97da9d82b9b511ab90377bc647886b525691[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 23 18:11:32 2010 +0200

    Use same mpm prepare procedure for uricontent as for normal content. More cleanups.

[33mcommit 9ba11dbfbd5ceb967159d4f978f6213bbc8c6907[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 23 16:54:19 2010 +0200

    Clean up detection engine mpm initialization phase.

[33mcommit 37ca07b68761bc7118454526bcdb35335dd994a7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 22 18:17:19 2010 +0200

    Fix segv on loading signatures with unsupported combinations of pcre and the relative flag.

[33mcommit 0d008c8135a76f0d22cf0fc6f9276ef93385c89a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 22 15:33:34 2010 +0200

    Change stateful detection engine to be able to start the stateful detection separate from other sigs. Fixes bugs #213, #214, #215.

[33mcommit 05ae4f99d8ac81b13badca4427486f2d19adbf0d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 22 11:02:31 2010 +0200

    Kick out invalid signature with uricontent and flow:to_client or flow:from_server.

[33mcommit a9e78871fe4b54733e974bc5262d8115e000236b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 22 01:17:36 2010 +0200

    Really fix bug 205 this time, repair a broken unittest.

[33mcommit 34bb107f2c450c1a5d48ed76235ba98a344de72b[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Wed Jul 21 19:57:49 2010 +0200

    Fix for bug 207 (depth/offset not correctly updated on certain cases)

[33mcommit ef2723495911e105074267e147bf08cd34da9668[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 21 23:08:57 2010 +0200

    Comment out broken SSLParserTest03 test.

[33mcommit 196e572daa4bf898f0970e2a0abf4180996b0338[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 21 22:41:44 2010 +0200

    Make sure holding up to_client reassembly stops after the proto is detected or we're sure we'll never detect it. Fixes issues related to bug 205.

[33mcommit 689d05b10bd92cbb5a7a4277c2592b95e48dd302[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 21 16:36:39 2010 +0200

    Add missing protocol check in the sig matching process. This prevents FP's such as the one reported in bug #209.

[33mcommit 4c94a27b71e1aeefa1dc8b017d96f9082e4cd550[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Wed Jul 21 15:32:47 2010 +0200

    Fix bug 205 (at stream-tcp-reassemble)

[33mcommit b7a57c5210ac49e25735bc7358a23fe4944d7379[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Jul 19 20:43:06 2010 +0530

    fix setting the right value for parsed bytes in case of fragmented BIND dce PDUs

[33mcommit b94eaec7c24cd3151332f14c0218bc1e08fdcbc7[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Jul 19 11:33:43 2010 +0530

    implement relative pcre matching in detect-engine-(payload|uri|dcepayload).c. Also fix within/distance handling of RELATIVE_NEXT flag for uricontent

[33mcommit 3a375aa43ae1bb7a7005465df60958e0e006ae34[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Jul 16 21:21:20 2010 +0530

    fix relative contents with a negated content for detect-engine-(uri|dcepayload).c like how we did for detect-engine-payload.c

[33mcommit ae3148aded660869e8789670226dc73538bafdc6[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Jul 16 20:42:35 2010 +0530

    fix false positives for a negated content case

[33mcommit 0219b767b81dbf73d658c38deebc9d752b6714dc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jul 17 18:38:58 2010 -0700

    Fix a content pattern matching bug related to signature grouping and mpm_ctx sharing. In certain conditions (signature combinations) the mpm_stream_ctx (the ctx that handles stream pattern scanning) wasn't properly setup.

[33mcommit 18840bd96efc536fa489615ff97b391737c2af6f[m
Author: Kirby Kuehl <kkuehl@gmail.com>
Date:   Fri Jul 9 11:06:07 2010 -0500

    properly handle bytecount of 0

[33mcommit 875184a4bac768875b008cb9da0f20ad51d941df[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 15 08:18:53 2010 -0700

    Cleanup suricata.yaml.

[33mcommit 7577823cdf256ff23f3a862e6246a9fc9ffbcfcd[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sun Jul 11 06:54:53 2010 +0200

    support for stopping the evasion, which is caused by the use of TCP RST packets for linux based systems

[33mcommit f0928a4555700001589e4b072f00d974bd9fe8f9[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Wed Jul 7 22:40:40 2010 +0200

    support for enforcing the depth until when the reassembly will be performed

[33mcommit 13045683ff551a5cfae13eb6e6bceee4b3d1a881[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 7 19:13:11 2010 +0200

    Reenable and fix AlpDetectTestSig5

[33mcommit c6e090f72c2f9fb5e11869936e4cfed5a3bcaa3f[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Tue Jul 6 20:09:58 2010 +0200

    App layer proto specific sigs (use the app layer to match proto)

[33mcommit 102092a89c8c48080853e9402325b4ee0e114697[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 7 17:13:18 2010 +0200

    Make signature address matching more cache efficient.

[33mcommit 1eec149f5edd189ff0cbe0833e969eb8a09356f8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 6 20:21:39 2010 +0200

    Use Address structure in DetectAddress struct.

[33mcommit 66dee577d71b6f5ee4c8e970ece745a0efe5a832[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 7 16:03:31 2010 +0200

    Force stream reassembly on streams where we didn't yet detect the protocol if the stream is closing.

[33mcommit cbebc44fb288aab0c666faae66550937666af347[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 7 15:02:38 2010 +0200

    Fix config file typo.

[33mcommit 07491f88877863d2bd6594e6e9c8a8d1514c7eae[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Jul 7 00:03:57 2010 +0530

    add --list-cuda-cards option to list the cuda cards on the system. Add conf parameter to select the cuda device to use. Also change the threshhold limit to 2.4k packets to buffer

[33mcommit 89e3d92cdb3952e93e8c8429abb99fc7bf1a985c[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Jul 7 13:19:07 2010 +0530

    fix creating a static array of length 0 in SigMatchGetLastSMFromLists - clang fix

[33mcommit 8b0ca4f62850d0a1f4afc887080dabb17a36aea4[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Tue Jul 6 07:23:18 2010 +0200

    support for seperate memcaps for reassembly and stream engine

[33mcommit c6ddcda7f8a67f40eb56aea72204520443bc3222[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 6 12:26:40 2010 +0200

    Improve out of memory handling during initialization.

[33mcommit 718fecb6fc149e54caf7443b16637df3ad6b898a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 6 11:58:05 2010 +0200

    Better handle low memory conditions.

[33mcommit f07997fd4acc4466aaa8d3c3f44e524714455943[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 5 15:32:40 2010 +0200

    Don't set negated uricontent signature flag twice.

[33mcommit b7076a8ea033a8c8f0a48c2842509bd70066121e[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Fri Jul 2 19:21:11 2010 +0200

    Don't avoid inspecting uricontents if we get no match. It can be negated uricontents (and urilens/pcre..). But at least skip the search if we get no match

[33mcommit 016af3605177dca24e55fb6550e9f80122c14f14[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Jul 1 20:38:29 2010 +0530

    todo list for cuda-packet-batcher

[33mcommit 42830d1c5b9bcc8bf4b0176bd208a55850e309bd[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Jul 1 17:16:57 2010 +0530

    fixes for dce_stub_data and content data sig parsing + more unittests

[33mcommit 1832ce30d779932e4733fd21e9904e795eb5c0ba[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Thu Jul 1 13:08:36 2010 +0200

    Updating pkconfig install on macosx

[33mcommit 9f1d779a28f1d71c6cc9623030785bdc9c517e1f[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Wed Jun 30 17:33:29 2010 -0500

    pkg-config detection added to configure.in added to install doc except for OSX

[33mcommit 169cb22dc6b4fdbbb0d65dbca38bd9d3d814b291[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Thu Jul 1 13:22:25 2010 +0200

    Updating other http modifiers for sigs with fast_pattern option

[33mcommit e7b537cec3d93a880ed92a483865a565d3b196ab[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Thu Jul 1 12:47:02 2010 +0200

    Fixing unittests for fast_pattern options compatibility

[33mcommit bfd167521e4d357b7ff47f975706597b5ff666d7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 1 13:25:29 2010 +0200

    Fix DCERPC over SMB/SMB2 detection issues. Fix not updating transaction id in a stream direction if there was no sgh.

[33mcommit 2c5c0d54f3aedf3005eb92f712cba8b1dde10c82[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 1 10:39:14 2010 +0200

    Add comments on CUDA usage in suricata.yaml.

[33mcommit a4951286e9ea015fa53621a82688325a55a286bf[m[33m ([m[1;33mtag: suricata-1.0.0[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 1 10:26:16 2010 +0200

    Bump version to 1.0.0

[33mcommit cc8068be0a93b9c717fc80dd7cf290872e756012[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Wed Jun 30 17:41:22 2010 +0200

    Print also the Signature raw string

[33mcommit 742f066fa25f3be4b9ef3d4fd0d9c0d0bc747899[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Wed Jun 30 15:43:26 2010 +0200

    Updating the http modifers that cannot be loaded with fast_pattern

[33mcommit 693d4f54eb0fc0084051615e2b5f7c8e71a1b8da[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Wed Jun 30 14:46:02 2010 +0200

    Load signatures with incompatible fast_pattern option (due to design differences for optimization)

[33mcommit 50eb3cba6a2ea8edce379c33d7ee4ea9a48ff0cb[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Mon Jun 28 15:49:58 2010 -0500

    seems to be a race between FlowTestPrune and FLOW_DESTROY in FlowTest0* comment out the later for now

[33mcommit b4db93fa94792b3ac8613d5b130d6abd979e1a6c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 1 02:55:33 2010 +0200

    Remove leftover printf.

[33mcommit 673322f01ffe18cdb4669b4bfe1c9296ea532a50[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Jul 1 04:33:20 2010 +0530

    unittests for dce_stub_data content based singature parsing + fixes

[33mcommit ce8d27425df0d8297d6d86fc73d366cfb4902f1c[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Jul 1 02:25:48 2010 +0530

    fix signature parsing to how snort does it for content based keywords along with dce_stub_data

[33mcommit 1fb11e939a7f4137aad4ffabcddd63c211dbce72[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 1 02:35:17 2010 +0200

    Improve configure messages. Make sure CUDA doesn't try to process packets that are too big.

[33mcommit e14331cbb2732fe3e6376aa45892b513d3d255b5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 1 01:31:30 2010 +0200

    Fix PACKET_RECYCLE not cleaning all of the packet.

[33mcommit 8d737310aa37c1ced01c39f89805441769754fa7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 1 00:18:19 2010 +0200

    Use 'simple' queue for cuda too. Fix hanging in cuda mode.

[33mcommit 3c1ae607cf963ac8ccea29247f8f6d089a611dad[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 23 16:10:59 2010 +0200

    Fix cuda compilation.

[33mcommit 33f4beb0bcd838aa11ce8cbbda484e2008d69612[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri May 28 16:22:07 2010 +0530

    batching of packets support for cuda b2g mpm. Supported for both 32 and 64 bit platforms

[33mcommit b3c22cd5128fbb95133061562712a23ebbe72a11[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 30 22:48:22 2010 +0200

    Improve app layer proto check.

[33mcommit 39cb1bdbdaa6e80811259cc1d5d634bcad2881b4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 30 22:05:37 2010 +0200

    Fix app layer sigs being recognized as decoder event only or ip only.

[33mcommit 587a53b904f2365c49f7718d6392cd65bf891e66[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 30 21:00:48 2010 +0200

    Disable per second counters as they are unreliable.

[33mcommit 8f9bcef0e221d5a3ac8c08323c31f9222a91510b[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Wed Jun 30 18:10:58 2010 +0200

    This patch for app-layer-ssl fix the bug #198 (SSLParserTest01). It seems that with -O2 and -O3, the compiler doesn't handle the initialization correctly (weird..)

[33mcommit 7003dc5c0d0bb3be466c95f3a819f4a187fe700f[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Wed Jun 30 11:44:19 2010 +0200

    Fix valgrind ctx error on asn1 test 06

[33mcommit d41b5645efb283e112421db8422438c1806547da[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 30 19:59:57 2010 +0200

    Make sure decoder event rules are inspected even if the packet is invalid and has no addesses or proto. Update fast log and alert debug log to display the alerts. Fixes #179.

[33mcommit 92858a211d56f73dc8a94aaa638e8668e254ac75[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 30 00:33:51 2010 +0200

    Fix STREAM_EOF flag overwriting STREAM_START flag on short streams. This made us miss short HTTP sessions.

[33mcommit 634b328d383f3cdb3348592db2ca34146a4301f8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 29 20:12:37 2010 +0200

    In case of error in pcap file reading mode, we shut the engine down hard instead of gracefully.

[33mcommit 426a7de5f2c49b8b7a2cda2d04f43437d67fb178[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 29 19:32:36 2010 +0200

    Fix compiler warning about incomplete prototype (2).

[33mcommit 18c923318a1c4fa30e74dd802748cf94246e77c6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 29 19:21:12 2010 +0200

    Fix bug where valid FIN packets would be rejected.

[33mcommit 67429e523f63cb72a444cab8a5c3dad87ed82690[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 29 19:05:16 2010 +0200

    Fix compiler warning about incomplete prototype.

[33mcommit fa373516c5e6b589652e50d9e933d33899122f50[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Jun 29 17:49:47 2010 +0530

    fixes the offset case for content matches + a case not handled by the prevous fix for multiple relative content matches. fix for payload.c dcepayload.c and uri.c

[33mcommit 92eb38059407b83c9448a1e35136a860f2f0ec77[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Jun 29 15:23:46 2010 +0530

    multiple relative content matches changes for detect-engine-dcepayload.c and detect-engine-uri.c like how we did for detect-engine-payload.c

[33mcommit 5fb6981e9e78ab0d623f78590736540ddb5a2878[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Jun 28 00:05:54 2010 +0530

    content handling changes in detect-engine-payload.c for multiple relative matches

[33mcommit a059ff276edae8389fc1401d2be8edf4d03d0466[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Jun 25 10:55:31 2010 +0530

    byte test and byte jump update dce matching option

[33mcommit 05d382f5334e77fbc48ef2259943fa19fd88a212[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 29 11:27:15 2010 +0200

    Fix broken stream engine config initialization: due wrong casts settings could be overwritten in memory.

[33mcommit ec277b292c773f7d0349fd8c9672a24107fdd7d8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 29 00:08:03 2010 +0200

    Fall back to the old mutex based queue's to see if that fixes an obscure lockup at higher optimization levels in gcc in file pcap mode.

[33mcommit ecb5fd329828d626223170d814f0bf21427b4cab[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 28 20:34:38 2010 +0200

    Add missing util-validate.h

[33mcommit b8b511a54e91fd95e547e883a897521912d692ca[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Mon Jun 28 18:44:49 2010 +0200

    Avoid mem allocations while searching on radix trees (temporal prefix)

[33mcommit 1d74797b1757b55965e5c89248b4ff20fae8a4dc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 28 19:55:33 2010 +0200

    Attempt to work around NULL packets we're seeing ending up in queues when the compiler has optimized our code.

[33mcommit 868d4614b97586a455297487a3e5feb2f6d3f1be[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Mon Jun 28 15:33:41 2010 +0200

    Tag engine improvements. Output tags only on unified format. Added atomic counter for tagged hosts/sessions

[33mcommit 8cdd02877feaa61587366f8cd42403a9c23e4771[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 27 10:41:37 2010 +0200

    Add unittests for ringbuffer.

[33mcommit e685579231245b80d207c9e129f9c6351d67937a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 28 15:10:34 2010 +0200

    Add optional structure validation code.

[33mcommit b67fb5229bc1fbf1912945ab68b1746cb2dcd01d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 27 20:30:00 2010 +0200

    Fix pcap file auto flow pinned runmode (disabled by default).

[33mcommit 393acd77d2351e87fe4db9a49800b84edcbce924[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 27 20:22:51 2010 +0200

    Detection improvements: uricontent escaping now working, better negated pattern (content) handling.

[33mcommit 154a8b1ed99a8ecae937ec8b3b7d063661a915a9[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sun Jun 27 09:15:22 2010 +0200

    fixed the build failure with profiling enabled

[33mcommit 37eb2290b0ad224bf0a529e4cc7426c989bc321e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 27 13:11:45 2010 +0200

    Add some checks for 'impossible' conditions that become possible after enabling optimizations :-/

[33mcommit 1dbbdce0be78c12e3f29b622da3e69137290048c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 27 13:00:39 2010 +0200

    Add a -fno-tree-pre to our CFLAGS as it breaks the ringbuffers on Ubuntu 9.10/64 bit.

[33mcommit 017b95f9efc38405f5c3aa8ba16d1a1acea18dbc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 27 12:56:50 2010 +0200

    More thoroughly cleanup a Packet when we recycle it. Fixes a corner case where we'd have a invalid tcp packet but p->proto would still say IPPROTO_TCP because of a previous run. Fixes bug #187.

[33mcommit 5580f3d9c25ff9a38ca405d28c622d02d2b184fa[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Wed Jun 23 17:10:02 2010 -0500

    PacketQueue postp added to TmEcodes for ipfw and pf_ring to silence compiler warnings

[33mcommit 876057a4dae26c15b96b2688b3535f715ca90212[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Wed Jun 23 10:02:12 2010 -0500

    missing flow init in DetectTagTestPacket04 fix ut lockup on older os's

[33mcommit 7454336ef536c8af75d1ca2495ae6723b0d801b7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jun 26 14:28:25 2010 +0200

    Make SigWrapper private to detect-parse.c and rename to SigDuplWrapper to reflect it's use and purpose.

[33mcommit 9ecade76b92c29a96ab80ef71d9f99af98ff53f8[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Jun 25 18:05:39 2010 +0530

    in case of duplicate signatures used the one with the latest revision

[33mcommit eedafa3a17a7a56a3221ad44ff54ff139aded3c2[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Thu Jun 24 15:15:37 2010 +0200

    Adding unittests for anchored pcres for anchored

[33mcommit bcb0b9ef9bd595ef226da8095cea15b624c10401[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Thu Jun 24 02:19:29 2010 +0200

    Moving urilen inspection to detect-engine-uri. Adding unittests for pcre /U and urilen, in combination with uricontent

[33mcommit 36e4b1830e378fdc8cbe4891d3a7a0d9973ab2ac[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Jun 23 01:00:35 2010 +0530

    add pcre with U modifiers to the umatch sigmatch list. fix for bug 155

[33mcommit 8852b83fa7b8413531bdffc3fd1bc3bddf4873de[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sat Jun 26 10:56:28 2010 +0200

    flowbits, flowvars, pktvars, flow flags and app layer info added to alert-debug.log

[33mcommit 95fef55507d1388a4e1e5cac6f2ab4a2262463b0[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Thu Jun 24 18:31:31 2010 +0200

    Fix threshold handling ip addr

[33mcommit c67cf593c23f245f13da07d0677012738e6105f8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jun 26 13:12:10 2010 +0200

    Disable alert-debuglog and unified1 in the default config. Add comments to the default config about pending packets, alert log types.

[33mcommit 580b09c2b89d0923c8d1eea8b9704c5a190095bd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 25 14:32:37 2010 +0200

    Make sure we inspect all outstanding reassembled stream chunks (smsg) if the stream is shutting down. Make sure to do inspect signatures that use dsize against the tcp packet payload, even if that payload was already added to the stream. Likewise, the dsize signatures are not inspected against the reassembled stream.

[33mcommit a3ff0e721000ef4609f69143bb29b023eaab8505[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 24 18:15:34 2010 +0200

    Don't scan TCP packet payload if it was added to the stream. Inspect the tcp stream with the correct packet. Should fix #184 and #185.

[33mcommit d500a52b58beff5e8377e0f1d7b06ee53715d62b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jun 26 12:26:18 2010 +0200

    Fix valgrind error in tls unittest.

[33mcommit cff0a0bda20b1f0aabaf5466095ee9fe2dbd7808[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jun 26 12:20:36 2010 +0200

    Fix segv conditions caused by broken flow cleanup code.

[33mcommit a8cb8d830bbfb444dc7fa40395ceaf0db224e9dd[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Fri Jun 25 20:05:22 2010 +0200

    Fix for bug 186 and thresholding issue handling ip versions

[33mcommit 6eb7eea705a82daa2fb4d368538d88392b1816e9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 22 17:44:49 2010 +0200

    Fix a data race for packet pool packets when defrag/tunnel code needs a packet.

[33mcommit a4cb7fced025feede1c188ebe38f1f3b7cb503dd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 22 18:40:54 2010 +0200

    Fix thresholding code for packets that are neither (valid) ipv4 and ipv6.

[33mcommit ae095e585b4cdf74fae0e3748e2c77b3750889f8[m
Author: Jason MacLulich <jason.maclulich@endace.com>
Date:   Tue Jun 22 07:04:20 2010 -0400

    o Changed SCMalloc to DecodeThreadVarsAlloc in Decode thread initialization. (Ish) o Changed htons to noths. (Ish) o Added support for handling DAG cards running DSM modules and other non-standard ETH ERF types. o Added support for allowing gracefull restarts of the fetch thread if it fails to read an ERF properly.

[33mcommit d5590962ff8d1cdaefec86868aea8849f173324b[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Tue Jun 22 07:22:21 2010 -0500

    change LogInfo to LogDebug for icmp seq matches

[33mcommit 38c9d843fda8d3b6d752a01f62c839af1764e671[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 22 10:20:27 2010 +0200

    Compiler warning fix for tag, make sure we do timeout checks under lock protection as well.

[33mcommit b931895901dea0ec338a0afc33d2eecc959fbd3c[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Mon Jun 21 18:56:37 2010 +0200

    Fixing flow cleanup and ctx initialization

[33mcommit eed0ef6e6980a70a5de1a9dbaa2f290f67746e14[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Fri Jun 18 23:22:37 2010 +0200

    Adding tag keyword support

[33mcommit 9222386377e02bea5b2d18259ff2a45464776fda[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Tue Jun 22 00:42:26 2010 -0600

    On Mac, don't use -march=native by default unless using gcc >= 4.3.

[33mcommit 83c2cdabcd2ba908fa6626aac4329cc350ce458a[m
Author: Kirby Kuehl <kkuehl@gmail.com>
Date:   Mon Jun 21 12:17:21 2010 -0500

    remove printf

[33mcommit f49c743d4447e8921fb26fe986f385f750da8c8b[m
Author: Kirby Kuehl <kkuehl@gmail.com>
Date:   Mon Jun 21 12:14:44 2010 -0500

    dont alloc 0 length fragment

[33mcommit 6d68d7a450d6b6fe8a85b9b4a164638b9e1776d6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 21 18:41:42 2010 +0200

    Disable condition based waiting in ringbuffers until we fix lockup issues.

[33mcommit 0231ec612dae9a3f1380070c42a4232848c368f1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 21 18:05:00 2010 +0200

    Atomic macro's typo fix.

[33mcommit 8615e87623754af6b5abdb735d4da53ab6b84a4f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 21 12:03:05 2010 +0200

    Fix dcerpc unittest, add comments.

[33mcommit 3a985a9f5f2ceddc35d915e0d83064e9da2962b0[m
Author: Kirby Kuehl <kkuehl@gmail.com>
Date:   Sat Jun 19 18:54:15 2010 -0500

    fix smb leak

[33mcommit 4545d755dd0b8ddcfe62db732df5fef7c9081893[m
Author: Kirby Kuehl <kkuehl@gmail.com>
Date:   Sat Jun 19 18:13:11 2010 -0500

    add uuid to uuid_list for udp

[33mcommit c3b93052591ea358641d832bb8cf131d066f2b05[m
Author: Kirby Kuehl <kkuehl@gmail.com>
Date:   Sat Jun 19 17:51:26 2010 -0500

    dcerpc udp support

[33mcommit 22d44b06774e69786e16d02abc752200a894a9ed[m
Author: Kirby Kuehl <kkuehl@gmail.com>
Date:   Sat Jun 19 17:48:03 2010 -0500

    dcerpc udp support

[33mcommit 6519a86ec7358a105cbf59c3fba47f873244c696[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 21 11:16:32 2010 +0200

    Move packet pool to ringbuffer, update packet pool api and ringbuffer api. Remove memset usage from PACKET_RECYCLE, add proper cleanup macros.

[33mcommit cb2fef8680d8105d97de24def441656021256570[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jun 19 21:25:01 2010 +0200

    In the ringbuffers spin before the wait

[33mcommit c7a744c93785d93648e99ca7239049cb7d903947[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jun 19 19:18:12 2010 +0200

    Split ringbuffer queue handler into multiple, for mrsw, srsw, srmw modes.

[33mcommit 1ad289dfffe339df59c3f63571dcd698c18895b2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jun 19 16:43:59 2010 +0200

    Add thread cond_t based waiting in the ringbuffer.

[33mcommit dce323b1f4fcecd0dac87c60160b180d319a833c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jun 19 13:00:24 2010 +0200

    Fix SCondWait -> SCCondWait typo.

[33mcommit 167c0295afcfcc4626a567edde6f23752f5f23cb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jun 19 12:35:34 2010 +0200

    Merge different ringbuffer structures.

[33mcommit 012e602c3f29a8deb88235ebeb5721bf56368e88[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jun 19 12:06:58 2010 +0200

    Add a (disabled by default) flow pinned runmode for file pcap.

[33mcommit 9d114eaffbb6fb88c8aa40c18d5594d29a56364e[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Fri Jun 18 11:06:34 2010 +0200

    Adding threshold.config example at suricata.yaml

[33mcommit 6950537a76b32c544cc16c8f4aaade74c7073788[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Fri Jun 18 10:51:19 2010 +0200

    Move rate_filter rule tracking data from Signature to Threshold context

[33mcommit 1ae36b9a6a161f3bca80150c9397ea741f6c02b0[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Thu Jun 10 23:49:27 2010 +0200

    Adding rate_filter support for threshold.config, multiline support and unittests

[33mcommit ca7f54de2596f24663f18d079681d8cfa25fe81f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 18 11:06:53 2010 +0200

    Make sure ICMP unreach packets are not inspected against the flow sgh as it's for the original protocol, not for the ICMP packet. Fixes #174.

[33mcommit b8fec77f37a05c412f22a7f88b92edff8a106208[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 18 02:33:42 2010 +0200

    Fix tcp connections that are reset (RST packet) not always inspecting the reassembled stream. Update transaction id code to make sure both directions of a transaction are inspected before incrementing the inspect_id.

[33mcommit 26f69aa3a63896a453c0583a9bcd2f9e6cbb6499[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 17 21:21:32 2010 +0200

    Bump version to 0.9.2.

[33mcommit e46b72758a5e7e42b5850c55d43af57e7746892e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 17 21:01:28 2010 +0200

    Small decode-event code cleanup.

[33mcommit cdc9570f0eba8dcabdf98f2f8946d1f20a696b78[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 17 18:08:43 2010 +0200

    Have the detect.alerts counter count actual alerts.

[33mcommit bbb5bf5c514a88f4d12863e5a549f6df6f7ac82a[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Jun 16 19:22:39 2010 +0530

    allow counters clubbing for detect TM

[33mcommit cb94748dab2347ff7d4e236cf358a300c490cef1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 17 17:44:31 2010 +0200

    Add missing include resulting in a compiler warning.

[33mcommit 0e4235cc94a260b99c426479c8171bbdc8e56b92[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Wed Jun 16 15:36:32 2010 -0500

    FLOW_DESTROY added to clean-up UT's that init flow

[33mcommit 9f0bf35cfdcf1c852922f31a0fd1df936afc0fb8[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Wed Jun 16 15:33:29 2010 -0500

    Set -std=gnu99 CFLAG always and Use -march=native by default if supported by installed version of gcc

[33mcommit 2f29b8a7245ab38883156da8350c2ef43d29667d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 17 17:37:38 2010 +0200

    Improve detection of app layer, making sure we only handle app layer on 'established' packets. Should really fix #166.

[33mcommit 37442a8a840d91163cc03f67483f4e93907cc6a4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 17 14:04:59 2010 +0200

    Prefilter signatures before fully scanning them.

[33mcommit 60668fd01dfe3b334e0b8dc215ad47437f2308ee[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Jun 17 17:04:15 2010 +0530

    Reset the flags used during stateful detection in ContinueDetection(). Made the tests more descriptive as well

[33mcommit bb8937477d467c0a54bb47440ef1d1997c1a9b4b[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Jun 17 14:24:15 2010 +0530

    dce tests to check SigMatchSignatures()'s working against new dce transactions

[33mcommit d6709b0961ee972c0402edf0f080ebed590d9581[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 16 21:46:08 2010 +0200

    Fix a segv caused by invalidly accessing the smsg_pmq array.

[33mcommit 8cea3779fade6e19101760923a55294f400317ae[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 16 20:53:11 2010 +0200

    Move dce payload inspection to stateful detection engine.

[33mcommit 015385c6bd9eac29b8de72a29f04dc5c4d15b794[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Jun 14 19:15:16 2010 +0530

    changes to the dce parser stub data processed var. changed to stub data fresh var to indicate if the stub is fresh or not

[33mcommit 45ea0d914ec3a677b7d469a74afcc9c405e58ff9[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Jun 14 17:10:27 2010 +0530

    dce stub content keywords support using dcepayload.c support for all dce related content keywords

[33mcommit 98433f407c3b9bb6f898aa1f196ca197f8bbc532[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Jun 8 01:51:25 2010 +0530

    dce rpc stub data held in separate buffers for request and response pdus

[33mcommit 31261e75830df8652f2dfb14a00057d2466407f0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 16 14:30:14 2010 +0200

    Improve B2g performance by merging pattern array and hash.

[33mcommit 83b2c8abdb4ce5c25254151da1c40b37e278a8ec[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 13 20:07:23 2010 +0200

    Improve stateful uri detection code.

[33mcommit 9dd753b5f3a4013a48542d654b6241e18397c43f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 13 13:02:19 2010 +0200

    Scan uricontent mpm on demand.

[33mcommit dd88e46f0cd8c2c16393148289d698a4f4323f9b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 13 10:23:59 2010 +0200

    Fix detect engine state unittest, add another.

[33mcommit e8fce5f7fae561cfbb9d3aef523b66178f6aa2f3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 13 10:06:53 2010 +0200

    Convert uricontent scanning to use the detect engine state.

[33mcommit 835630efbd86b29b78f6d2be4682021a82871d8f[m
Author: Jason MacLulich <jason.maclulich@endace.com>
Date:   Wed Jun 16 03:36:02 2010 -0400

    Add initial support for reading packets from a DAG card, we only support reading from a single stream at this time.
    
    Use the --dag <dagname> cmd line option to specify from which DAG card to read pkts
    from.
    
    Issue at the moment with pkts being ejected during shutdown -- at the moment we
    ignore any packets that are not of link type Ethernet.

[33mcommit 49d68169ea8b0a5501a7176af84075ddd185df5c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 16 11:35:32 2010 +0200

    Allow the user to disable setting cpu affinity and allow configuring the number of detect threads relative to the number of CPU's/CPU cores.

[33mcommit cb0bb668eb948fe3348ffe8437d8b48f2d84b1f8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 16 11:05:10 2010 +0200

    Add support for retrieving float and double variables from the configuration.

[33mcommit b60d2c43453e526b13c407819fdba395c43ec720[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jun 12 12:57:50 2010 +0200

    Fix flags mixup issue in the app layer.

[33mcommit ba12f3c109a23a36a4887e8121f825c24f20f037[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 11 19:21:24 2010 +0200

    Applayer to flow fixes and cleanups.

[33mcommit 8cc525c939c0f1acd8678422ad4492cac9e17e6e[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Tue Jun 8 18:07:48 2010 +0200

    UDP support at AppLayer message handling

[33mcommit e07e9e16ae1c62d0eb4c401aff5cd059d56ba4bf[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Wed Jun 9 17:04:59 2010 -0500

    Updates to allow for disabling options based on Pierre Chifflier's patch

[33mcommit 4e84ffe2ea1bb2de15707a03918de0cdd3357dd6[m
Author: Pierre Chifflier <chifflier@edenwall.com>
Date:   Mon Jun 7 23:28:34 2010 +0200

    Fix autoconf code for Prelude option (Fix: #175)
    
    Third and forth arguments of AC_ARG_ENABLE are the actions to be done
    if option was specified (respect. not given), NOT if option
    is true (false).
    
    Signed-off-by: Pierre Chifflier <chifflier@edenwall.com>

[33mcommit 6bf7d76005e8c50d41ce5dfa6c194d08a66af771[m
Author: Ondrej Slanina <oslanina@gmail.com>
Date:   Thu Jun 10 15:27:16 2010 +0200

    added possibility to run suricata as WIN32 service

[33mcommit cc76aa4bc6877ee35611b5e04f0a2832eddb1da4[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Thu Jun 10 19:07:21 2010 -0500

    properly init flows inside of unit-tests caused lock-up when falling back to using mutex locks

[33mcommit a24f2880745083394228232cfc4370df36ee855a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 11 13:42:25 2010 +0200

    Moving the stream content scanning to have it's own mpm ctx.

[33mcommit 9a08d6c11c2c13606ff04e367ff39bffeba5e82c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 9 16:12:08 2010 +0200

    Fixes to stream pattern matching.

[33mcommit a0c1209a44aae0e113cdaf27e244376c57b92f08[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 9 11:18:40 2010 +0200

    Inspect the reassembled stream together with the packet payload in the same direction.

[33mcommit 9f95ab74415237ce672e93f86625d054ea41638d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 8 10:10:58 2010 +0200

    Make sure a stream that has a failing app layer inspection module no longer stops reassembly, but only app layer inspection. This way we can continue to inspect the reassembled stream.

[33mcommit 81f2499834790ab74e4b49ad49a686bbc8ce0a6d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 7 20:55:12 2010 +0200

    Store stream msgs processed by the app layer in the tcp session so they can be inspected by the detection module as well. The detection module returns them to the pool.

[33mcommit 3005297af2e1b4a8355e3f27e43541f6a70aa314[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 7 13:20:38 2010 +0200

    Check for being properly setup before activating a thread. Fixes a potential although unlikely null-dereference.

[33mcommit 6c6e6321fcba84725a5237178e81b450b2bf1a82[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 7 12:19:29 2010 +0200

    Fix HTTP HEAD detection code.

[33mcommit fdd0f3939e8cf6853832dd7ea11ce66448633320[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jun 7 11:04:13 2010 +0200

    Reduce size of event bit array in the packet structure.

[33mcommit c26434fef12b6850762e35d0155ed90a56472ebb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 6 17:38:26 2010 +0200

    Move flow use cnt to atomic and outside of the flow mutex protection.

[33mcommit 87345e5c60c5fcb90f8694f912049035b933eff1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 6 15:40:31 2010 +0200

    Switch flow memuse counter to the atomic api.

[33mcommit 749fc2613de92d4b3e70f09d8188b6b3251a3a44[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 6 15:17:58 2010 +0200

    Add subtracktion wrapper to the atomic api.

[33mcommit 3484e2abde58e7a70a570da64158a2c56729dfb2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jun 6 15:14:05 2010 +0200

    Fix flow engine memory handling.

[33mcommit 4dd01694999f15219718ecd972af1973e740a945[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jun 5 22:30:45 2010 +0200

    Fix detection_filter issue.

[33mcommit 4c3e17d4abcc7d07dd3ff8f77bf06d6740adcc39[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jun 5 20:01:15 2010 +0200

    Fix thresholding issues.

[33mcommit 79443b1991840930ded4b8f09ba6de7b000912d9[m
Author: Ondrej Slanina <oslanina@gmail.com>
Date:   Fri Jun 4 15:12:35 2010 +0200

    added INT and TERM signals on WIN32

[33mcommit b491ef2be02cd5405d701ecee30b2238b727e628[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Fri Jun 4 17:23:11 2010 +0200

    Removing FlowAllocDirect since it's not needed anymore

[33mcommit 2fd31a1a114ed2641f7eaba5362689ede7805222[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jun 5 14:20:35 2010 +0200

    Remove dsize grouping from detection engine grouping reducing memory usage. Store sgh in flow to reduce lookups. Reduce locking in alert handling. Increase default grouping values as we use less memory.

[33mcommit b657705d8c38b35e2872e4a2c45d0d3858240de4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jun 5 00:57:07 2010 +0200

    Fix pcap file mode not shutting down on ctrl-c

[33mcommit dff6795df5dbf21f5fd9d3aab40d742d16bf31ff[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jun 5 01:50:40 2010 +0200

    Detect cleanups.

[33mcommit 8e7b147a23976f1ef889c1e1061e66139abdcb9c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 4 23:53:10 2010 +0200

    Fix a endless loop condition introduced by the threshold cleanup.

[33mcommit d470e1135216078a746c856e86f002e7bc23381d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 4 23:21:20 2010 +0200

    Disable flowbits stats.

[33mcommit d8ad975d09db5096fedd5db6d5dec16710e35c13[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 4 23:20:59 2010 +0200

    Clean up flags keyword.

[33mcommit 3a8c0d2cfe795069647234960faaac550d15d042[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 4 21:40:25 2010 +0200

    Fix ringbuffer number wrap around issue causing buffer items getting overwritten and thus lost.

[33mcommit 8514132851f4951c747325c455f603ceb35e9c93[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 4 21:41:43 2010 +0200

    Cleanup thresholding code.

[33mcommit 6e8f57272426e8eedcfae7b785dd093aa6808c0c[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Fri Jun 4 07:24:11 2010 -0500

    small operator fixes to qa script

[33mcommit f80016530cc6b742c0b78c23be7ec5ca878e25b8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 4 14:43:01 2010 +0200

    Remove unnecessary locking for thread-local packet-queues breaking on Win32.

[33mcommit f4120ff5d509124030094b64d0960c3692005a30[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Jun 4 17:27:46 2010 +0530

    wrap multi line macros in do while

[33mcommit 1357914d23c62f99810ffbb355cbef5f8c6c6d98[m
Author: Ondrej Slanina <oslanina@gmail.com>
Date:   Fri Jun 4 09:39:43 2010 +0200

    added support for synchronous log output on WIN32

[33mcommit 32e3fea9e65165c5831f4d25d5def88f25127700[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jun 4 14:05:42 2010 +0200

    Exclude parts of a flow that are not changing after init from the flow mutex. Cleanup flow-hash function.

[33mcommit 4775f67ba13bb297934e21e81e4bf32f86f6fcbf[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Thu Jun 3 14:54:20 2010 +0200

    Adding emergency mode recovery options on config

[33mcommit 29a6fc2f036e3a761cc61c9d93a83c42efa77b4a[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Thu Jun 3 01:37:09 2010 +0200

    Adding some flow improvements and recovery on emergency mode

[33mcommit 329742c10e0e0f151f9cacddc0ece981d6ba15bd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 3 23:09:11 2010 +0200

    Small ip to pcap dev cleanup.

[33mcommit 1e707803c05c8895104d25e8cce90133d2937a53[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 3 22:48:27 2010 +0200

    Enable perf counter updates in the ringbuffer queue handler.

[33mcommit a42fff541f3a527657eeb05a6a579e68b547b4df[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Wed Jun 2 15:06:52 2010 -0500

    fix for potential NULL deref on error in detect-http-method.c

[33mcommit fe0c98153ee893e27aa8436aadf5ac3e2aa2421c[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Thu May 27 16:37:09 2010 -0500

    Updated windows install doc to add pkg-config to msys

[33mcommit 0140a14a1572117b7e8ddec19b665ef6e3ff37c5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jun 3 17:45:05 2010 +0200

    Introduce atomic operations API that supports GCC's atomic operations and a fallback using (spin)locks. Convert ringbuffer api to use the new atomic api.

[33mcommit daea85e49115f35ecdb87be8f56c1b476cf3f72d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 2 18:42:54 2010 +0200

    Lock detection state reset function properly.

[33mcommit 0a0b33ef79d5d2165c586b87547aa68b1f4dd82a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 2 17:58:08 2010 +0200

    Fix adding the http_uri sigmatch to the uri list twice.

[33mcommit e3fc53ecb90e5dc0dfed86878c846f67d725f31e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 2 17:55:01 2010 +0200

    Fix a corner case where the pcap receive modules could alloc packets at line rate until memory was depleted.

[33mcommit 0a607fce3d30aecea3498933fac5fce9f489386c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 2 17:12:24 2010 +0200

    Finish http_uri keyword, fix invalid read issue in one of the tests.

[33mcommit 55dfa36963a9ff1a97433e62b47963c3f3885475[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Tue Jun 1 00:02:53 2010 +0200

    Add support for http_uri keyword

[33mcommit 2fe77bf65eb2456d6ccc247ca87bc9b7f473e9d0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 2 13:32:12 2010 +0200

    Use ringbuffers in the pcap live auto runmode as well.

[33mcommit 3b0c4133fc158f7d63f78898a4c91e5fd7613326[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Wed Jun 2 00:20:13 2010 +0200

    Fixing asn1 relative offset, negative values

[33mcommit cda664a8c45e3b96243a91511fe2a4f39c096057[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sun May 30 14:35:24 2010 +0200

    memroy leaks fixes in detection module, app layer and counters

[33mcommit 18954a2c4c53f9f93e9f749dc2a9bff721edbaaa[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Tue Jun 1 23:33:22 2010 +0200

    app layer ftp fix (mem leak)

[33mcommit a098e39bed91ef5a34a0fb0288cbc2beca775157[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Tue Jun 1 14:06:24 2010 -0600

    Display configuration summary at the end of ./configure.

[33mcommit 62dd11c0a222f150127d2fe1bd4cc6a3c134b4af[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Tue Jun 1 22:04:42 2010 -0500

    add missing docs to Makefile.am

[33mcommit f2cc5a7c9902de1f4c1197013b49d323228a8312[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Thu May 27 14:10:47 2010 -0500

    updates to the INSTALL doc

[33mcommit 9ce1399db876331ae4660f3d06db015f9b81ee87[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Wed May 26 23:52:28 2010 -0500

    Add option for setting pcap buffer size if it is available

[33mcommit a0fa924c1507bbdd578a71bee43d97cce9b02c57[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Thu May 27 06:20:39 2010 +0200

    fixed the memory leaks in htp and radix tree

[33mcommit 7a6d4b57f0d74f5d83bae0da11083c87fe834e6e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 1 15:59:08 2010 +0200

    Add support for class id in classification code. Submitted by firnsy@securixlive.com, thanks.

[33mcommit fcac4d2896dc7c5ba24d2f066458e79071a50ad1[m
Author: Eric Leblond <eleblond@edenwall.com>
Date:   Wed May 26 23:56:01 2010 +0200

    autotools: add automatic files generation
    
    This patch modifies autogen.sh so that it is able to generate
    config.sub, config.guess and ltmain.sh files which are not
    anymore part of the git tree.

[33mcommit c8f00c1b7d3ef185792b1304036658afbe59481a[m
Author: Eric Leblond <eleblond@edenwall.com>
Date:   Wed May 26 23:56:00 2010 +0200

    Suppress generated files from git tree.
    
    config.guess, config.sub and ltmain.sh are generated files and should
    not be maintained in the git tree.

[33mcommit a8ca5719f65dd6658dbc5628e61110ea2f9bc47e[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Wed May 26 07:42:49 2010 +0200

    fixed the typo in byte_jump and host.c, Thanks to rmkml for pointing out

[33mcommit 0881be3b179804924f171b15a4aa2bca7cab8f3c[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Wed May 26 21:01:55 2010 +0200

    added the support for setting up distance sig when previous keyword is byte_jump (bug 163)

[33mcommit ea4b7cc33b1897da121cc29399e4493973feec3a[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Sat May 29 00:35:38 2010 -0600

    add profiling to stateful detection engine + other fixups.

[33mcommit a9ed9a819633160be01a53cd82822fa479c7889f[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Tue May 25 15:18:04 2010 -0600

    In profiling output, include a % for each rule.

[33mcommit 53acf0899669eab3197a3ddbf14244f08e9eced2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jun 1 12:43:33 2010 +0200

    Add multi packet reading for pcap live mode. Add a partly lock free multi writer, multi reader ringbuffer.

[33mcommit 4e7df60b2fb1e5f66aad3175600a85039761a0b0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 28 16:59:12 2010 +0200

    Make pcap file mode read multiple packets per 'read'. Update threading model to deal with this.

[33mcommit 6f502f0da5e74a2e52e2f1701d46bb7916dda0b0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 27 17:37:03 2010 +0200

    lockfree ringbuffer wip2, including proper shutdown.

[33mcommit a48a767efcf77656b8dfd174ed849f63bc161974[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 27 00:31:49 2010 +0200

    Lockfree ringbuffer wip.

[33mcommit 7f29166aa8f619c7afac4edc5534afd14a3813a0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 26 18:35:02 2010 +0200

    Improve memory handling in error conditions in the radix implementation.

[33mcommit c73e9318b002f91bf5656ed45a6a62dd32ab3cea[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 26 13:35:52 2010 +0200

    Bump version 0.9.1.

[33mcommit 10a3d7343d9f3e6b31e0723bf576f5e7f6237878[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 26 13:31:09 2010 +0200

    Remove unnecessary header inclusion in app layer ssl.

[33mcommit bc7c9d928fe9b039e841a6b64eacb0a79d7d5dce[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 26 13:30:05 2010 +0200

    Fix radix and stateful detect engine memory leaks.

[33mcommit 747daf4bcef590a4c628dbcb73c2d37810a4d994[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 25 22:40:29 2010 +0200

    Fix typo in depth changes.

[33mcommit dab679889cf3a915edc382e97f0a6c13fa277eca[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 25 21:52:26 2010 +0200

    Properly update depth if offset+content_len < depth. Fixes #164.

[33mcommit e704d90aaae2aba6d66d79c25cbc5446b60f7585[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Tue May 11 12:32:23 2010 -0500

    set proper caps based run_mode

[33mcommit a93b2e6b8424aff50dc4e499a6864c8e5e431bbd[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Fri May 21 15:26:12 2010 -0600

    Support for reading ERF files.

[33mcommit 2eef905c07647b25f2791ae814850065dbc26609[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Tue May 25 11:33:16 2010 -0500

    GPL and Copyright header updates.

[33mcommit 0fc8f6cc379c10176f571712fcd3257ee5a5c362[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Tue May 25 12:12:54 2010 -0500

    More null deref fixes for util-radix-tree.c

[33mcommit 54da99fe53ea38effb2ba58ed52dc59292d23bec[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Tue May 25 10:54:36 2010 -0500

    compilation fixes for PF_RING and IPFW after removal of mutex_pending

[33mcommit c2fb90c74553a1440d9a3c877b1db6eeff3fba9e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 25 19:22:02 2010 +0200

    Fix thresholding 'both'. Fixes bug #160.

[33mcommit 2c8282a70b811d9b9508e4cabcef7931758903b6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 25 17:11:44 2010 +0200

    Fix small memleak in ip only parsing code.

[33mcommit d0b23100d796d7ac7d74d3e0987e7832d7f0296d[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Wed May 12 11:35:01 2010 -0500

    patch to configure.in for libhtp minimum version detection via PKG_CHECK_MODULES

[33mcommit 54c2804ce477a42b57920619079983955c271251[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 25 16:45:13 2010 +0200

    Fix malformed ipv6 packet causing an endless loop in exthdr decoding.

[33mcommit 2910759943484cd7e3401bebcc286f06b17b6045[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 25 15:07:49 2010 +0200

    Rename TranslateIPToPcapDev to PcapTranslateIPToDevice and make the length argument size_t.

[33mcommit 55d0d1e7a1405313e76d44650f7d50c59d212175[m
Author: Ondrej Slanina <oslanina@kerio.com>
Date:   Thu May 20 11:29:43 2010 +0200

    added support for finding pcap device via it's IP.

[33mcommit 179372978f80bef7118cdefff50127e6fb350018[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Thu May 20 13:19:23 2010 -0500

    Null deref fix for detect-id.c

[33mcommit 9728e49773fbc024d52834225f34310226bdd3de[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Thu May 20 13:16:02 2010 -0500

    Null deref fix for detect-tls-version.c

[33mcommit 32a2da147b652bd12f25fd568ed1ead5775b1b5b[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Thu May 20 13:12:11 2010 -0500

    Null deref fix for detect-engine-iponly.c

[33mcommit 73d2349149e03c780226a8c404c8b913aab77553[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Thu May 20 13:09:20 2010 -0500

    Null deref fix for detect-engine-port.c

[33mcommit afa8a2b8ba08940b849c44fb48e0aa6fa45f282f[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Thu May 20 13:04:23 2010 -0500

    Null deref fixe for detect-engine-address.c

[33mcommit b856e607c9df04db51faea2e9e57b63e94d8d6ce[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Thu May 20 12:55:35 2010 -0500

    Null deref fixes for util-radix-tree.c

[33mcommit 98c3f0149c89051aea6ff06e54db900161a82859[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 25 14:46:28 2010 +0200

    Improve SSL input validation.

[33mcommit 5fe1dc1d2449109e34d1f3ef1dddb26ec3faefa9[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Mon May 24 19:59:21 2010 +0200

    support for sslv2/sslv3 their unit tests and better stream no reassembly flag handling

[33mcommit b8641f300d2790dd833629932194f671b8460527[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 25 14:10:37 2010 +0200

    Rename asn1 files, fix an invalid free, fix improper init of vars in one unittest.

[33mcommit 3fa3229e0104ed0553dcc6ba4b3579665a349660[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Thu May 20 12:34:22 2010 +0200

    ASN1 decoder and keyword implementation

[33mcommit 6b49a903534e27d7c76693f670c2c4070ff30da7[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Tue May 25 07:21:00 2010 +0200

    added support for setting up bytejump relative when previous keyword is byte_jump (bug 165)

[33mcommit 70b32f73800868508ebb703d98a52ca6eb4e2b2b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 25 13:31:03 2010 +0200

    First stab at creating a stateful detection engine.
    
    Stateful detection for app layer detection keywords, except uricontent. Stores it's partial results in the flow structure. Other modifications:
    
    - Generalize transaction tracking, logging and inspection.
    - Adapt http and dcerpc to use the new transaction handling.
    - Stream engine now always notifies app layer of a stream eof.
    
    This commit fixes bug #124.

[33mcommit 18e5ac8cde2ad4829ed1e464a19f0d91f153c1a5[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Wed May 19 15:33:44 2010 -0600

    Basic rule profiling even though the results may be skewed by a bad rule in a grouping of rules.

[33mcommit b629b7c5c1e2ad6c91b97b6708ad9ddc6a674502[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Thu May 13 15:18:56 2010 -0500

    only show cli opts via help that we have support for

[33mcommit 42eeb84c9a6227a248af6fa8da7e6104ed42b78c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 19 17:40:53 2010 +0200

    Properly lock flow before setting IP only action flags. Small alert api cleanups.

[33mcommit 9bae6a8628a9249f56e01345ccae6f3efac105a8[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Thu May 13 11:37:01 2010 +0200

    Moving alert logic to detect-engine-alert.c

[33mcommit 692eb935ea02c32a596cd420fc1cbe99bbe8f6b4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 19 17:14:00 2010 +0200

    Fix updated memory api using debug mode by default. Small cleanups.

[33mcommit 9f4fae5b1ab104f0bd7d1e12e9596a21496c18c4[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Thu Apr 22 08:19:42 2010 +0200

    Fix inconsistent use of dynamic memory allocation

[33mcommit c6bf08eec8bcb3df47fcddf255f1ed38fd5cc8d2[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Mon May 17 15:59:02 2010 -0500

    Updates to the fuzzer script. Some clean up but you can now also: 1. Keep log files. 2. Exclude files based on user supplied regex.

[33mcommit c69c9c3f86c9433a1a2464fb6a9aadc920c9fbb7[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Mon May 17 21:44:26 2010 -0500

    Added an install doc for PF_RING to doc/INSTALL.PF_RING

[33mcommit a8dd484abaf9caaea38bf061827a515dcd1f9734[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 19 16:03:29 2010 +0200

    Fix small potential bug in debug mode found by clang.

[33mcommit 8d66323f62ba2a906f1fb5ef14bce792e858028b[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Tue May 18 16:31:22 2010 -0500

    clang fixes for null derefrences

[33mcommit 32a26582337f6dcf4b68d14f4403043323e8fc09[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sat May 15 21:14:20 2010 +0200

    support setting up byte_test/relative when byte_jumo is previous keyword

[33mcommit 9378bdbad477814e0b03bc44af7c8fd64f241d61[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Fri May 14 19:14:32 2010 +0200

    set the byte_jum/byte_test with relative keyword when pcre is previous keyword (bug 142)

[33mcommit ea3165b198a795e240316d65e8e81888debd9a62[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Fri May 14 14:46:08 2010 +0200

    support setting up within keyword when previous keyword is pcre (bug 145) and added unit test for the same

[33mcommit 07e10681d6c1ec516c618a9bb7b78fd70a32ec45[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Fri May 14 14:47:39 2010 +0200

    fixed a typo in the detect-content.h

[33mcommit 2ea820506346add71c064870772e702d0127cd3e[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Fri May 14 09:50:27 2010 +0200

    fixed the flags checking and make it more strict in default case (bug 153)

[33mcommit bb685751d9eec317ff95ad894913d00560d82680[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 19 13:30:37 2010 +0200

    Fix NFQ receive/verdict race condition in cases where the packetpool is empty.

[33mcommit 647b1c0ebaa926d7f3415c54a0119fd4a76d353a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 18 15:52:39 2010 +0200

    Fix NFQ compilation.

[33mcommit f4812586deb0b3e477c2ad9e01658b924b245138[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 18 15:32:02 2010 +0200

    Fix broken ICMPv4 unittests. Fixes #161.

[33mcommit ecf5a8fbcc4fa1d0cc3988b27614c51d73e15173[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 18 15:28:52 2010 +0200

    Fix broken stream unittest.

[33mcommit 76d62778c35d71df582ed03d747251d1a0b3958e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 18 14:35:37 2010 +0200

    Use bigger stream msg.

[33mcommit 61099cd725d399e5a55c85a134d0bb7b5e6554c2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 18 14:35:23 2010 +0200

    Fix compilation if debug is disabled.

[33mcommit e741bd02025aaa59c48c76260db8ac128d095d54[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue May 18 12:50:07 2010 +0200

    Cleanup packet recycling code. Fix issues in the packet tunnel/pseudo code.

[33mcommit e1a8c8f76c622b0c31e72b6d457908289a2e47ee[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun May 16 20:47:33 2010 +0200

    Switch time api from mutex to spinlock.

[33mcommit 19584d041684991ca9067eaa2d5efc894b3589c4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun May 16 20:46:28 2010 +0200

    Fix tunneled and defrag reassembled packets with the new pending limits.

[33mcommit ccf22cf563114e723aff72ab3fc30053bfbd9e3c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun May 16 18:41:18 2010 +0200

    Move to different way of enforcing max_pending. Should require less locks.

[33mcommit 42c4b5d53cb9893d4a11aa2b596824e66b599948[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun May 16 18:43:10 2010 +0200

    Use one less thread in pcap file mode. Reduces locking overhead.

[33mcommit 53b388b669df265fd4621fb863e0d2119e9a18c7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun May 16 17:52:05 2010 +0200

    Improve flow hash debugging, switch to csv output.

[33mcommit 548a3b2c93aed79e39a34ee9dd4c68f43a27f363[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun May 16 15:20:24 2010 +0200

    Improve flow hash debugging functions. Make sure ICMP errors don't create flows. Handle ICMP DEST UNREACH errors in the flow they are sending the error about.

[33mcommit 2dc5405d3ae01e3b4f111121a63717bd7b29bdb8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat May 15 22:31:45 2010 +0200

    Add debug code for tracking flow hash distribution. Only add ICMP DEST_UNREACH packets to the flow engine.

[33mcommit a4625bd333efe72c88baeaab867211204f91acca[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sat May 15 06:59:56 2010 +0200

    fixed setting up byte_test relative when byte_jump is previous keyword (bug 146)

[33mcommit b05762a575d64b56e83bc6168e1b3a8314bea6a9[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Fri May 14 13:21:51 2010 +0200

    added unit test for the bug 144 to test isdataat setup

[33mcommit fdc3f728afd8996115af08655b945f6f6ec1397f[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Fri May 14 12:04:21 2010 +0200

    set the isdataat keyword when previous sigmatch is either content or pcre (bug 144)

[33mcommit 8dceb2784e213da4f27209dc20864429258513ad[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 14 23:56:54 2010 +0200

    Small ICMPV6PayloadTest01 unittest cleanup.

[33mcommit 9a2bcb6a3c769d448f6bf9da2af842e7fb232ec0[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Fri May 14 17:22:58 2010 +0200

    added unittest to check the payload setup, which causes the segv in detection module

[33mcommit 21a89e22de34fe116f519460f871ca9813087bba[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Fri May 14 16:18:45 2010 +0200

    fixed the segv caused by null payload due to incorrect icmpv6 decoding

[33mcommit 0ebf7cbc5ed16c1480cc4b32dc7de188c60115b5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 14 21:46:25 2010 +0200

    Convert flow bucket lock from mutex to spinlock. Locks should be very short, so spinlocks should be faster.

[33mcommit e27cefa6f79570df98d32a70e1736b050f0eb1cf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 14 21:28:33 2010 +0200

    Complete conversion of pattern id mpm storage vs sig id storage.

[33mcommit 46831e0f8fda5f099a31c57914f75fe381a69d6f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 14 14:46:36 2010 +0200

    Fix signature grouping bug for protocols without ports. Add debugging code.

[33mcommit 7a427ec7f4dc178fd4b924fef2f734c607f6cb11[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 13 17:11:24 2010 +0200

    Switch to pattern id based results checking in the mpm. Move app layer proto detection towards a more signature based approach.

[33mcommit 41172f0024a002eda4b440016e1289fdfeaaf04a[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Mon May 10 15:24:27 2010 -0500

    increment packet count before assigning value, tshark/wireshark starts with pkt no 1 so should we

[33mcommit 46187bfe731590c284ffb991c9017a14266185e1[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Tue May 11 14:04:31 2010 +0200

    Fix action logic after last pass changes

[33mcommit 2db6756048f198a38b682d413299f550863ff4c9[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Tue May 11 04:23:27 2010 +0200

    added unit test for the icmp dsize (bug 151)

[33mcommit ad9ec4dbe95fb10d01aa6f82381404c0fc773b7f[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sun May 9 20:30:55 2010 +0200

    fixed the payload_len for icmpv6 (bug 151)

[33mcommit 3721037de5581d5b6fe9255c40d63e38e3b0da62[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Fri May 7 07:18:02 2010 +0200

    unittests for bug 134&139 and some typo correction

[33mcommit 52cdfb332e615542571c2e730166223628200ef3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri May 7 12:32:39 2010 +0200

    Fix a compiler warning, add some comments, cleanup layout of smb parser.

[33mcommit 73c6fb16ba59945d529d262324d1129bd8429d39[m
Author: root <kkuehl@gmail.com>
Date:   Thu May 6 12:32:51 2010 -0500

    Return 0 instead of -1 when SMB and DCERPC encounter non fatal errors to clean up errors emitted in AppLayerParse.

[33mcommit 7d63fbdaea7fb293ad2f0d04e87139b383b90705[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Thu May 6 10:19:33 2010 -0500

    small CentOS 4 workarounds

[33mcommit 5fb405335eb126f839f77d11757ca6a876a256a3[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Thu May 6 15:06:23 2010 -0500

    Small wrapper fixes to allow for windows compilation

[33mcommit a372c1d14ef77667ec5062200d3bb408ec1ba330[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 6 21:14:13 2010 +0200

    Fix/workaround a strange detection issue.

[33mcommit bca75f625506b9b8988b0e9fd6b9bfad46c3cce2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 6 16:08:30 2010 +0200

    Bump version to 0.9.0.

[33mcommit ce90e87304e04ca7e9ce8678700a50973d54ab81[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 6 15:53:55 2010 +0200

    Fix failing thresholding unittests

[33mcommit e18e2ec998d3cfad079de5d79345217b23501aca[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Thu May 6 15:02:32 2010 +0200

    Changing threshold logic

[33mcommit 8bcdf29ab7c5e47be7b05a87d04fa23421b27fb3[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Wed May 5 20:27:41 2010 +0200

    Small fix on pass action handling and added more unittests

[33mcommit 12386689619964e9bf9a1fdf3b37c13b33cc0626[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Wed May 5 20:15:57 2010 +0200

    Adding actions order and suport for rule action "pass"

[33mcommit 6dd544689386c146b4d0ec55185408767cac38f9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 6 14:00:35 2010 +0200

    Use proper tcp/udp macro's in alert-debuglog

[33mcommit 26ef58342dcb56291d0b6157e79ccbfba9e73ccc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 6 13:40:03 2010 +0200

    Fix typo in uricontent within handling causing within to be wrong.

[33mcommit cc5c78dae9e9443c425308695d853e32eb4f48d9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 6 13:17:28 2010 +0200

    Add tcp seq info and pcap file packet number to the alert-debuglog.

[33mcommit 543abf145c5ebc8f07db57e9708d777beea2f80c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu May 6 10:15:42 2010 +0200

    Fix a within calculation bug for cases where distance + pattern length > within setting. Fixes #148.

[33mcommit 9ccfda22ec1cec5b72527cc02710e0f26b7b6dc9[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Wed May 5 17:36:13 2010 +0200

    Radix tree issue fix (from Steve Grubs report)

[33mcommit 2576f4a149420f3c6333ed38312fd7cf2a122c92[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 5 22:27:47 2010 +0200

    Fix a bug in the signature grouping code that didn't properly setup the mpm ctx's in some cases.

[33mcommit b90ebc1ce58150afb32d8b6305b7b3e2fd2029c4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 5 15:29:13 2010 +0200

    Add a packet count var for pcap file mode to the Packet structure to ease debugging.

[33mcommit ce019275153a1d13e9571b2ee37c350926840853[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Tue May 4 10:45:08 2010 -0500

    Import of GPLv2 Header 050410

[33mcommit c3392b7c226daf6dd8713a6a6529a92492f910ff[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 5 15:12:50 2010 +0200

    Fix checking for the stream GAP after the ssn ptr was initialized.

[33mcommit b6a45fd1a4f136b67708e9dac0ab866089e21be0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 5 15:12:19 2010 +0200

    Hack around cornercase in debug code in stream engine. Works around #140.

[33mcommit 9676273e6d5e62971eade039f08b39b35768d163[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed May 5 12:13:03 2010 +0200

    Kick out streams with gaps in them in the app layer parser until we add proper support.

[33mcommit 6abcb0d1fd4f329c350f5e78f8bca96182cae967[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Mon May 3 21:21:15 2010 +0200

    http_heade fix, check first that we have a connp before checking transactions

[33mcommit 070ed778b8ea7cc13f1407d0d66fefc51c910ac2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 3 19:14:55 2010 +0200

    Libcap-ng support by Gurvinder Singh and myself. Basic support for per thread caps is added, but not activated as it doesn't seem to work yet. Work around for incompatibility between libnet 1.1 and libcap-ng added.

[33mcommit e0c2c8634238f44083e4b29e7430f86385ffb657[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon May 3 14:25:49 2010 +0200

    Make HTTP proto detection more reliable. Add HEAD keyword. Thanks rmkml for the report/request.

[33mcommit 07ff24301fdfc7df1c7d3354b25b9fa147b5b7c1[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Mon May 3 07:10:44 2010 +0200

    fixed the depth updation when content_len is small (bug 139)

[33mcommit 1891c2a60ded6dcf54de82ac3f35370133e5844f[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Sun May 2 14:11:52 2010 +0200

    Adding missing error msgs at some http_header unittests

[33mcommit e0b4838471308ad0f7921b554eef9a89c271a651[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Thu Apr 29 08:19:00 2010 +0200

    fix bug 133, error caused by seq mismatch in fin_wait_2 state, whis was dicarding the packet which should be accepted

[33mcommit 83f5be11e7a90f2420c588a22babe9df344aa1fc[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Sun May 2 13:57:30 2010 +0200

    Fixing http_header unittest printf errors format

[33mcommit ab02ab9eadd91993e00ccc4913abe230918c8531[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Tue Apr 27 16:02:40 2010 +0200

    adding http_header keyword support

[33mcommit 57a679be4928e598084bfb1f5637dbbe056cd110[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Thu Apr 29 23:21:05 2010 -0500

    Small fix where a space was added before \n in fast-log if a xref wasn't used

[33mcommit d0541aa5711babcc9463fcaec849aab61244a50d[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Sat May 1 14:52:05 2010 -0500

    Integration of libhtp-0.2.3 rev 199

[33mcommit 074b89687931c79efa8ede5eda2a54857ac713e1[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sun May 2 08:07:06 2010 +0200

    fixed typo in dcerpc (bug 137)

[33mcommit 5b802f60998fd281f5cf2ccee4b7fcddf5653736[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sun May 2 08:24:08 2010 +0200

    fixed type in htp (bug 138)

[33mcommit 7330bcd12cedf38e1680a1bd704a3ee6b55e5bdc[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sat May 1 14:28:50 2010 +0200

    fixed the regex in bug 136

[33mcommit 0c4687f768cf168510290434b2326713b35b4b67[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sat May 1 14:11:38 2010 +0200

    correct the typos (but 135)

[33mcommit 294b39bb3ae56b970172e1ea19ee69b311b07a9a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun May 2 10:34:14 2010 +0200

    Properly set content and uricontent depth. Fixes #134.

[33mcommit 719fa5f5e188adc3c601ba7c0a96cbe3b3b012ee[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sun May 2 08:00:48 2010 +0200

    fixed the incorrect depth update incase of offset is 0 (bug 134)

[33mcommit fc2029ef58f97079bcd91204ad30b61a53a05fda[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 27 22:42:55 2010 +0200

    Fix small memuse counter issue in flow subsys, remove emergency printfs

[33mcommit 00974d157baa005a8f8a4056402a9c2120825e3d[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Tue Apr 27 12:32:18 2010 -0600

    Fix issue 131.
    
    Flow-timeouts likely don't need to be a sequence, but rather mappings.  We'd only need a sequence if you wanted to list something like "tcp" twice which I don't think makes sense for configuration section.
    
    Also fixup flow.c to not attempt to use the sequence, and put the timeouts into their correct place.

[33mcommit a152623e11dc15ac0d486e1c17819d2b47294562[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Tue Apr 27 19:44:16 2010 +0200

    Bug 130: detect-nocase was not recreating the BmCtx with nocase chars, so it was not working with patterns of capital letters as expected

[33mcommit 285c561559578de3964d6b25ea06086cb6a860be[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 27 17:19:04 2010 +0200

    Remove inline from counters to make gnu99 happy.

[33mcommit 0eabde4a9b67d0a7be5bf293b4e07ef58c532b3c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 27 16:03:16 2010 +0200

    Gnu99 inline fixes for stream engine.

[33mcommit 23cb020493a4f93c3edf9395b71754855c3c1d22[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 27 15:32:50 2010 +0200

    Fix thread flag code to compile with gnu99

[33mcommit c942b98f44c6cc5a786269ad247429bf5c28be41[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 27 15:01:57 2010 +0200

    Fix radix inline error on gnu99

[33mcommit 951be71f92cd57a560e6195b6e6e5392da98e3fa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 27 14:53:09 2010 +0200

    Fix pm algo's inline errors in gnu99

[33mcommit 0fa1936923ee81e36051c395f7829c1578c83625[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 27 14:48:18 2010 +0200

    Fix stream_size detection inline errors in gnu99

[33mcommit 09b48d2697bb74483e67ad216a173d471c5f3d3c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 27 14:45:53 2010 +0200

    Fix payload and uri detection inline errors in gnu99

[33mcommit 1789e78f294c94242bc0117943d8ed7252092899[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 27 11:47:18 2010 +0200

    Fix compilation of pm algo's with gnu99

[33mcommit 591e5e7da7d98aa9f4996c303bf3fb0db2424bd0[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Sat Apr 24 03:19:40 2010 +0200

    Moving inline functions to the .h files, so gcc can inline them correctly

[33mcommit b1d1ea87ff6111243bf4ef569d034682efd23894[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Sat Apr 24 03:19:40 2010 +0200

    Moving inline functions to the .h files, so gcc can inline them correctly

[33mcommit 53656f0d5d92f6d554bbf3143a08114149ef18be[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 26 19:03:05 2010 +0200

    Remove inline's from spm to satisfy gnu99

[33mcommit be5b547803ff397c694403fbe7deeff44a4364b6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 26 18:05:01 2010 +0200

    Convert DecodeSetNoPayloadInspectionFlag and DecodeSetNoPacketInspectionFlag to macro's.

[33mcommit 63cb1818edc86796348e68dfe808e5837ab0a028[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 26 17:59:00 2010 +0200

    Move TmThread*Flag functions to the header so they can be inline with gnu99 as well.

[33mcommit bd8111f868d9a56a3b263ca9a28df58acb3a0df5[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Sat Apr 24 03:19:40 2010 +0200

    Moving inline functions to the .h files, so gcc can inline them correctly

[33mcommit 3212a75c63cffdee4393ce1dae7cb38834d14f31[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Sat Apr 24 03:19:40 2010 +0200

    Moving inline functions to the .h files, so gcc can inline them correctly

[33mcommit 3047135817678e57ba6e5079a9997a03b412ce57[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Sat Apr 24 03:19:40 2010 +0200

    Moving inline functions to the .h files, so gcc can inline them correctly

[33mcommit d94d929b04db71dbfbd18729d5b7dc37c03117fa[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Sat Apr 24 03:19:40 2010 +0200

    Moving inline functions to the .h files, so gcc can inline them correctly

[33mcommit a429192507227445591d0f2dca69f0248796484e[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Sat Apr 24 03:19:40 2010 +0200

    Moving inline functions to the .h files, so gcc can inline them correctly

[33mcommit 224a33f19e753812262ae8bb4023ad4097669fc5[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Sat Apr 24 03:19:40 2010 +0200

    Moving inline functions to the .h files, so gcc can inline them correctly

[33mcommit d85176bb8b47e91c875c19b8fe138cece85377b3[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Sat Apr 24 03:19:40 2010 +0200

    Moving inline functions to the .h files, so gcc can inline them correctly

[33mcommit b334036d7514d798bd25b5a10d166cc7edaa69d0[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Sat Apr 24 03:19:40 2010 +0200

    Moving inline functions to the .h files, so gcc can inline them correctly

[33mcommit 943b4742a89803ae1c74e2822689ad27311aad94[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Sat Apr 24 03:19:40 2010 +0200

    Moving inline functions to the .h files, so gcc can inline them correctly

[33mcommit 98e35ee1a9a02f739c374577158124413be9a174[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Sat Apr 24 03:19:40 2010 +0200

    Moving inline functions to the .h files, so gcc can inline them correctly

[33mcommit 779f154fc633f0cb874c65b3d8db91526415a6d7[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Sat Apr 24 03:19:40 2010 +0200

    Moving inline functions to the .h files, so gcc can inline them correctly

[33mcommit b823fc0b6610a11691d6f884a4e1be3495c009f5[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Sat Apr 24 03:19:40 2010 +0200

    Moving inline functions to the .h files, so gcc can inline them correctly

[33mcommit 9209eaeaf671638d3d340cfb5c7768a40e81d1a7[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Wed Apr 21 10:53:48 2010 +0200

    Fix some error messages and coding style at uri/content modifiers

[33mcommit 0b6dc3e8d5f9398caca79c377efb808b930714e1[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Apr 26 09:07:29 2010 +0530

    Fix globalinit memset for trans_q

[33mcommit accd19ba03d86ed95c734a92745aef6dd0bcf17a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 26 09:18:58 2010 +0200

    Fix a typo in detect-decode-event.h causing a compilation error.

[33mcommit 13e6c8035d9d147dbd560aa3c98511ba16cd9cb4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 26 09:17:56 2010 +0200

    Make sure we don't leak memory on app layer protocols we detect, but don't parse. Fixed #132. Thanks to Gurvinder Singh for pointing out where the issue was.

[33mcommit 7c314e8d215dae66d1c440184aaee15c012beb4f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 24 11:46:10 2010 +0200

    Switch decode-event comments to doxygen format

[33mcommit 2128310ebeb553ea8dd0155b32851b95044c0cfe[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Fri Apr 2 11:42:00 2010 +0200

    Add decode events and comments

[33mcommit 79a780ffe44eb6cde2cf0d09d2f53f1480c241ef[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 20 17:13:54 2010 +0200

    Improve a number of error and info messages.

[33mcommit 591c898f6aef4a2c090645aa5104991b90f8a087[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 24 10:51:33 2010 +0200

    NFQ inline changes
    
    - split NFQRecvPkt into a Linux and Windows version for readability
    - Add many function header comments
    - convert tabs to spaces in Windows code.

[33mcommit 366671a8ce74704c75d05c8be9aecf243617eba6[m
Author: Jan Jezek <jjezek@kerio.com>
Date:   Fri Apr 23 10:44:09 2010 +0200

    Added inline mode support on Windows

[33mcommit 6d39ffc2beed50cdafea647dd6833e89e931574e[m[33m ([m[1;33mtag: suricata-0.8.2[m[33m)[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 19 18:09:15 2010 +0200

    Add classification.config to Makefile.am as well.

[33mcommit bfcadbc0f2ba1815ac793a440bb0ed1179382b43[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Mon Apr 19 10:59:02 2010 -0500

    Import of classification.config

[33mcommit 54aa1790f3acd5f4c3f51bd340782ed29d7a8071[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 19 17:40:56 2010 +0200

    Remove Makefile.am reference to non-existing file.

[33mcommit 2dd28ea7fd41fbeef5a3e692b08afee175b3e671[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 19 16:49:30 2010 +0200

    Use threadsafe time functions.

[33mcommit 8ec51fce577a582fd48effe37c26b5f295131ee0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 19 16:29:27 2010 +0200

    Remove leftover debug print.

[33mcommit 2797e67a798aef94ee6c16be593f9f9c20e18a51[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 19 16:29:10 2010 +0200

    Print Suricata version after initializing logging subsys.

[33mcommit 27bff56cd71c0901a7cdcfcb7dda4b89549a104f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 19 16:03:03 2010 +0200

    Bump version to 0.8.2

[33mcommit 655b6acad9e93abe2cd551d0d2d73a0cba80802a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 19 15:32:02 2010 +0200

    Flush fp to be sure before closing.

[33mcommit d3b573348ecb50fb7c37a47f02d726d1f05e3dcf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 19 15:31:35 2010 +0200

    Make sure that the SC_LOG_OP_FILTER env var overrides config as well.

[33mcommit 958b61ab851d51b906a4a52feddf2fbae5f39af4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 19 13:56:18 2010 +0200

    Fix errors in the unittests reported by valgrind's drd tool. Add explanation of a FP.

[33mcommit 4875c2daf49d3cc0f31217f5dd234bc4c0ed2edd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 19 13:10:08 2010 +0200

    Console logging settings are now overridden by env vars.

[33mcommit 9527aa26a29eedca13ee1ff30bb2cb88dc211e33[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Sun Apr 18 23:06:18 2010 -0500

    Small windows fixes ifdef wrapper for netinet/in.h O_NOFOLLOW def missing so added ifndef define install doc updated.

[33mcommit cec124df106488cc162f46e9fe86c9b65417ad74[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 19 11:03:55 2010 +0200

    Fix icmp_id keyword and improve icmp_seq keyword logic.

[33mcommit 18e00dc6d00a580538593c85709c80dea61e254a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Apr 18 23:38:08 2010 +0200

    Add warning about needing a patch for Barnyard 0.2.0 on 64-bit. Rename sc_timeval32 to SCTimeval32.

[33mcommit 0febe449e6aa29be28adcdc7a825d44be09ef853[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Apr 18 22:14:56 2010 +0200

    In unified1-alert the ip addresses are in host order.

[33mcommit 12962c5969846c96c60da1177e352d2e782ac4a5[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Tue Mar 30 14:33:47 2010 -0700

    ./configure option, --enable-unified-native-timeval to have unified outputs use a native timeval to be compatible with unpatched barnyard 1 on 64 bit systems.

[33mcommit 2c6dd6b8fa277ed1ca831699d99f0f0ce429a72b[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Tue Mar 30 14:14:59 2010 -0700

    Be compatible with Snort. Stick with a 32 bit style of timeval for the unified outputs.

[33mcommit b7c089df4291ad84c5ecabf3746406e7ce9d2775[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Apr 18 17:05:56 2010 +0200

    Fix a couple of harmless compiler warnings.

[33mcommit 046c813fba3e89b75d19611f04a79931a1283149[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Apr 18 17:04:48 2010 +0200

    Small error checking rewrite.

[33mcommit 3ffbb4c3f40285534c949cf2d986aa5898d91a4d[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sun Apr 18 07:22:06 2010 +0200

    fixed more api and logic erros in recent master

[33mcommit eeb98c6900ccbf564397ba18eed94b0ac6543496[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Apr 18 16:28:04 2010 +0200

    Move SCSetThreadName to proper functions.

[33mcommit 9f35a24a1fdced013760f0f579b425b72c3aa63c[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Sun Apr 18 02:35:41 2010 +0200

    Set threads name. Fix bug #83

[33mcommit 59c5e819b1b69e8d50c8404f86c65b41fcd9f8bc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 17 23:37:29 2010 +0200

    Fix compilation if debugging is disabled.

[33mcommit d07ded6e52ad8154e72966f3e77e32db1426f938[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 17 23:31:38 2010 +0200

    Use strlcpy instead of strncpy.

[33mcommit cf2d254cc6f6ba84a696e474f6b9d9fb588d219b[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sat Apr 17 22:37:58 2010 +0200

    fixed the memory leaks and buffer overflows reported by parfait

[33mcommit 27d1dbc3425865ab8f5b9d220d85fd019fd4c785[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 17 23:09:31 2010 +0200

    Add comment explaining how I feel a CLANG related change is unnecessary, but that I might be wrong :-)

[33mcommit 9e6b897ebcbc09fb85177fede8797bbae58d7958[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 17 23:00:09 2010 +0200

    Improve detect-threshold parser error handling.

[33mcommit 565b44a7e5eadd141a8d041c68c40805b664ef45[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 17 22:58:21 2010 +0200

    Improve sig parsing unittest error handling.

[33mcommit cd7e5cebec0dc3b690abc11f7f1169d04e1212dc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 17 22:54:04 2010 +0200

    Improve http-cookie keyword unittests error handling. Fix memory errors in the tests too.

[33mcommit d9d53fab5de9f375f6c6642f18951911fd5435b4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 17 22:44:54 2010 +0200

    Improve detection-filter parsing code error handling.

[33mcommit 91ed463314c86334a32372b4ed2886e28baf3de2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 17 22:40:24 2010 +0200

    Improve dce-iface keyword unittests.

[33mcommit f81fccd66b10d08f3f71b455bee9ffb3815ee030[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 17 22:39:59 2010 +0200

    Reintroduce usage of the SC_RADIX_NODE_USERDATA marco into the htp code. Rewrite the macro slightly, add unittests for the macro.

[33mcommit 69a4fee75700d25ed31c661916efcb896feb7002[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sat Apr 17 20:39:52 2010 +0200

    fixed the API and logic error reported by clang tool

[33mcommit 3c7027687f8b64f424be085d0f238c2acf60e20a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 17 21:39:31 2010 +0200

    Fix logging api not cleaning up LogFileCtx mutex.

[33mcommit 78e15ea7fa29e89b2fcd5b4bce5f7ff672c2c39b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 17 20:47:15 2010 +0200

    Explicitly test for ipv6 in the htp personalities code. Update all affected unittests to set addr family to the flow.

[33mcommit ae2698c9cc9a9abaeb3f24eacf1d71e39acad07f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 17 20:43:21 2010 +0200

    Properly cleanup used mutexes and condition vars in the flow subsys.

[33mcommit 38f7479af251a8e2dc572883b18cf2501e01e339[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 17 17:58:19 2010 +0200

    Make sure we set the address family (AF_INET & AF_INET6) in the flow's address structures. Needed by HTP personalities code.

[33mcommit fe55d996c1279c9e54639c2debe00e1e4c87b3ab[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 17 17:34:47 2010 +0200

    Improve yaml loaded debug output formatting.

[33mcommit ad02732907c78b2afb3bfc12a89a04c883eda7e7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Apr 17 16:39:41 2010 +0200

    Properly cleanup stream engine spinlocks and mutexes at shutdown. Fixes drd errors in unittests.

[33mcommit 531594a35f241fc70a262adeb06610cee93b7314[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 16 15:40:10 2010 +0200

    Small error message and comment update to the nocase keyword.

[33mcommit a9d3a85b56149ef7a985bb792ed65a4dcfa47503[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Apr 16 17:54:19 2010 +0530

    support nocase and negation for http_cookie

[33mcommit 71b327bd23fdce2e2e76ec4ab72268ab0096d479[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 16 15:06:46 2010 +0200

    Improve error detection in the pidfile api.

[33mcommit 9803def006837be44eb33939ea2527b82c0126c1[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Fri Apr 16 14:25:40 2010 +0200

    Adding pidfile support (thanks to Steve Grubb for the patch)

[33mcommit 9e94768385ec16e95a138b77b896b9a476de268d[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Apr 16 14:38:34 2010 +0530

    fix for bug 108

[33mcommit 098af1f734de98c1cdcec9a48c0627eb43c7d20a[m
Merge: 47a47e8ad 47037ef9e
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 16 12:13:23 2010 +0200

    Merge branch 'b115' into next

[33mcommit 47037ef9ecd2a8709929b099c1610762ebca5720[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Apr 16 12:13:15 2010 +0530

    fix for bug 115

[33mcommit 2d45a5994a2166679ac7c99757bf6963b192e96b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 16 11:43:49 2010 +0200

    Fix invalid free in HTP config deinit.

[33mcommit 47a47e8ad42028cd6ea39170a52ec80c19fab0e0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 16 11:43:49 2010 +0200

    Fix invalid free in HTP config deinit.

[33mcommit fe7ece997ae5138f32f5480438188fd835006d89[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 16 11:35:16 2010 +0200

    Different approach to the reference keyword. Lots of cleanups, bug fixes in reference keyword code and tests.

[33mcommit 89baf93a40f10c6cec5714836b13437d9bf686d4[m
Author: Breno Silva <breno.silva@gmail.com>
Date:   Thu Apr 15 19:00:57 2010 -0300

    Reference Support

[33mcommit 65c9d0073066a9f41ba902e037b4a3fe1e83bb01[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 15 23:50:16 2010 +0200

    Remove duplicate cuda kernel file.

[33mcommit 44b6380a7006bd495220b6a536e739ab15351f2a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 15 23:43:22 2010 +0200

    Improve http body chunk memory handling robustness.

[33mcommit fe7948a7ae258822613d8eb441f1d60979ee1848[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Thu Apr 15 18:54:04 2010 +0200

    Modifications on http body request handling

[33mcommit 2ce728d01999bc0025da39b47940db8bed363337[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Wed Apr 14 12:57:19 2010 +0200

    Adding support for ecn flags after the handshake

[33mcommit 01c0e316b9cf9fe0cc082c17e77f6e42d3d45db2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 15 21:30:47 2010 +0200

    Cleanup of libnet patch.

[33mcommit 3678dda185656930037cd13f1eaaaa076c507b64[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Thu Apr 15 13:15:44 2010 -0500

    libnet now optional

[33mcommit 35bd0c6b393f991ca3f7dff92ad5fe7136183333[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Apr 15 20:41:19 2010 +0530

    compiled and added a 64 bit version of the cuda b2g kernel

[33mcommit 606516911b4cc951d8c0dfe04c729be0d48876a8[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Apr 15 18:50:09 2010 +0530

    added x86_64 for the b2g cuda code

[33mcommit f862de2ee612b571a57895eb7652eea4de221b6e[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Thu Apr 15 18:36:08 2010 +0200

    Fixing some code reviews (Thanks to Steve Grubb)

[33mcommit 86185ecd970e666ce041cce64cd2fc952b92f994[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Thu Apr 15 11:06:23 2010 +0200

    Enable spm inspection with precooked pattern contexts on content, uricontent and http_client_body (we will also add this to http_header when it gets commited)

[33mcommit 227fe516a0260026b5551e1e90988cefc02e149b[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Thu Mar 25 19:00:29 2010 +0100

    Adding Boyer Moore context to content patterns, should speed up the search

[33mcommit 720f46642f4b217a57ca375dd183e0170509ae21[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Thu Apr 15 18:13:01 2010 +0200

    Fix redmine issue 49 (allow pcre to end a pattern with an escaped slash, '\')

[33mcommit 8f0fe76346578a2529769c291fb5ba937a8e41c9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 15 17:59:41 2010 +0200

    Minor dbg output formatting fix.

[33mcommit 15bfa7aa4e7e54c156da00cbeb7e2f9a9997cef5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 15 14:29:57 2010 +0200

    Rename CUDA kernel

[33mcommit a91a760fffdc3a68180f3fc9f6e1faebdfff5dd8[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Apr 15 13:01:04 2010 +0530

    Add the mpm b2g cuda kernel file into the codebase

[33mcommit 7dcc1daa89ed9d202742294c51b4ac44ae9caf96[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 15 13:52:53 2010 +0200

    Pcap eof msg can be informational

[33mcommit c5e15213f70b92625360d6bbcf7a8b9de23d810e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 15 13:41:30 2010 +0200

    Improve pcap file mode EOF message. Fixes #123. Small cleanups to pcap file code.

[33mcommit e6af69e10e5ea59f1594a8c24c541db3f335ac72[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Mar 3 13:05:51 2010 +0530

    fix for bug 114

[33mcommit 156b844ccb4d0bf13905596091c37217a31f1706[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 14 22:44:18 2010 +0200

    Fix tcp segment list corruption bug

[33mcommit e6ba571c0b0c04b9d5371649f7f7dfbf11795914[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Apr 14 14:27:59 2010 +0200

    Rename structures that don't adhere to our naming conventions.

[33mcommit 4129146a71667b094362515f69c8c4e0f6bef76c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 13 23:22:59 2010 +0200

    Because the HTP personalities code changes how the htp state's connp is initialized, we need to check for it in more places.

[33mcommit ead13bda4aa7a94e265cd632db809fb0a44837cf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 13 13:40:09 2010 +0200

    Small cleanup and comment update to htp code.

[33mcommit a9cdd2bbae1d63b78cdbb0ab8c01c37fe1a041e3[m
Author: Brian Rectanus <brectanu@gmail.com>
Date:   Fri Apr 9 14:32:37 2010 -0700

    Add htp personality configuration.

[33mcommit 4b94babf5d16c4cce969eb90f4494d9261816058[m
Author: Brian Rectanus <brectanu@gmail.com>
Date:   Fri Feb 12 21:39:51 2010 -0800

    Add functions to radix to add ip/netblocks as string. Add macro to get node user data. Cleanup radix code, docs and printing info. Export all printing functions.

[33mcommit ffd85ac4a65564df410d2c743325e32f94e82692[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 13 13:24:20 2010 +0200

    Use correct datatype in HTPCallbackResponse fixing possible endless looping issues.

[33mcommit 2c722c9374f32f4006179aa88838c3fe62f638be[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Tue Apr 13 00:04:27 2010 +0200

    Adding radix tree unittests. Fixing a ipv6 issue with netmasks of 32 (was being handled as if it were ipv4)

[33mcommit 6a188f1e6b9cb5660f44dd8056369b6beb166aa3[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Mon Apr 12 18:09:53 2010 +0200

    Fixing memleak also for SCRadixRemoveKey (SCRadixAddKey creates a prefix, but it's the one that the node will hold)

[33mcommit 2b3479577bfcf1e4fc9ee73a34120c80519b45f0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 13 12:17:47 2010 +0200

    Fix ecn/cwr unittests

[33mcommit 5eb4095b9a1ada363f4c2696c3c2173946535d8a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Apr 13 10:30:27 2010 +0200

    Comment ECN/CWR changes more.

[33mcommit 83ddc5813a78adbd0f956361f3fe11f476ec7474[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Mon Mar 29 18:56:14 2010 +0200

    Support for ecn/cwr TCP sessions

[33mcommit 047238351ae8015b93bea721c84612c4a412f535[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 12 17:49:53 2010 +0200

    Remove loop from radix unittest. We can detect memleaks with valgrind.

[33mcommit a5218664c9aa0a8c32bc75bf4e6819957fe97ec5[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Mon Apr 12 15:21:53 2010 +0200

    Register the free function for nodes of the radix trees at unittests

[33mcommit 7cc6edbb09d3b9d2d2b09d8d0b4f132e66625db0[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Mon Apr 12 15:18:16 2010 +0200

    Unittest used to check the radix memleak located at searching

[33mcommit ef3ac7f12632e73603e768d185075e922f937c59[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Mon Apr 12 13:20:33 2010 +0200

    Release the tmp prefix used for searching on the radix tree

[33mcommit 53e8120c9da1b7dc2ad4b7b6e1333a761be0767e[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Apr 10 18:05:33 2010 +0530

    adapt b2g cuda code for the mpm architecture change

[33mcommit 15c67bfbd2b7f67012de790aa9dcc24e825aa435[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Apr 9 14:17:08 2010 +0200

    Fix locking issue in the uri scanning code.

[33mcommit 2c9366b83ce2be0a44791771f31a2f12b2a4befc[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Apr 9 17:04:57 2010 +0530

    Enable flag in http_client_body for http request body callback

[33mcommit 6817d41555b02d88ee06f6d19de7e54862e03a5c[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Wed Apr 7 13:04:58 2010 -0500

    Import of fuzzer script qa/wirefuzz.pl

[33mcommit 07680c954e6f94f3961af446685b519994261f87[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Thu Apr 8 18:46:18 2010 +0200

    Small fix handling netmasks belonging to the same octect on BestMatch search

[33mcommit b8b569c8f445ff6902e4e205cc75532b7cd1d446[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Wed Mar 31 11:52:03 2010 +0200

    Compare uint8_t's with one byte

[33mcommit e7a989e305d8e2bd317c5ed2447e05e924c8b392[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Tue Mar 30 11:39:28 2010 +0200

    IP Only Engine using radix trees

[33mcommit ced401b554ae539dfe0575acd21400c682d65ef6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 8 21:41:18 2010 +0200

    Update http_client_body code to recent changes.

[33mcommit 97d49d8f5ea1ff516ff95b64593dd20197529ea9[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Apr 6 23:40:52 2010 +0530

    support for http_client_body keyword

[33mcommit 74dfbc0c492c3dc687d7d4a45833fb4ba5fda342[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 8 15:05:00 2010 +0200

    Move flow flags to flow.h

[33mcommit 81abe635c8026eb04beca228e4d431260fb43609[m
Author: Breno Silva <breno.silva@gmail.com>
Date:   Mon Apr 5 17:44:55 2010 -0300

    Global Threshold config

[33mcommit 26e8a0a06abf28cd5f4f2ce567223072820402a2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 5 22:04:52 2010 +0100

    Cleanup global threshold code.

[33mcommit 67f20262791c51cd30f6a78d2215ca44d82c84aa[m
Author: Breno Silva <breno.silva@gmail.com>
Date:   Sun Apr 4 16:35:26 2010 -0300

    Global Threshold config

[33mcommit 08600df6b1f900c25aa7da5cc9d66939ecf71e10[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 8 14:47:11 2010 +0200

    Small uri cleanups.

[33mcommit c7350a8ac60ec868c9c4e801e890d8e4bdee096e[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Wed Apr 7 19:45:20 2010 +0200

    Fixing some naming convention issues and incorrect error messages

[33mcommit b708d7f65d5c985b7879f1979444596a57a376b2[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Tue Apr 6 21:49:27 2010 +0200

    Adding Uricontent inspection with spm. Modifiers for uricontent are now supported

[33mcommit e3552a8e3fa19c9e00ec1bce4f56aeaf6551c700[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Apr 5 10:28:14 2010 +0100

    Add more comments to detect and flow structures.

[33mcommit 8e444f177207c34ab3ed1a367ac548f01b9470be[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sat Apr 3 11:54:20 2010 +0200

    stream and application layer improvements

[33mcommit 3d7b882bde373565b71ffc9dc4e6693175c19875[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 1 15:37:06 2010 +0200

    Make sure all smsgs are handled every time, even in case or error. The fuzzer found an issue where unhandled messages remained in the queue leading to threading issues.

[33mcommit cb8aaa5968453f06c85846c5a6ab72d13b62716a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 1 15:08:36 2010 +0200

    Make sure we only run the app layer proto detection (successfully) once per flow. Solves an issue found by the fuzzer where both flow directions were detected as different protos, messing up the app layer parser.

[33mcommit 68576947e298c50f26f54f91ce5b97c55df8b1b4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 1 15:01:48 2010 +0200

    Small SMB cleanups.

[33mcommit f4ee4f5670f57459ed391fdb5398bb504f641f37[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Apr 1 14:58:46 2010 +0200

    Properly clear list tail ptr in segment list.

[33mcommit b0faeb91d78403b0ec04cc5cf9d6e80eba6d76fe[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Tue Mar 30 19:19:03 2010 -0500

    small PF_RING update cmd line opts changed

[33mcommit 4879045c6f743cf7fd80b5d808c832ebe8876945[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sat Mar 27 23:47:26 2010 +0100

    bug 102 patch

[33mcommit 4fd4c1331ef81c957d422ddc88fc5996609c6a87[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 27 15:27:03 2010 +0100

    Fix broken unittest, improve within error messaging.

[33mcommit c54b91ed94652014b9825ac2142526f078ba55b6[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Mar 3 17:28:55 2010 +0530

    fix for bug 113

[33mcommit 6be0778532d0abf59927ddc39c59998d33fa22ff[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 27 13:02:44 2010 +0100

    Comment SigMatchSignatures a bit.

[33mcommit f08d3e76eeda026c2ed267a48b5d9d0802267698[m
Author: Kirby Kuehl <kkuehl@gmail.com>
Date:   Wed Mar 10 13:57:24 2010 -0600

    add maximum andx chain depth

[33mcommit acaee78b1c913b12631204327f65c631eb497d25[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Fri Mar 26 14:09:45 2010 -0700

    Fix bug 125. - Always bail on parse errors. - Exit if loading the config file fails. - Display the line number where the parsing failed.

[33mcommit 449205cfeb5301cc25553ef83a0f329a53d525ed[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 26 13:09:43 2010 +0100

    Remove wrong copyright info, cleanup headers.

[33mcommit afb08d388d96cb76db9c12d869d3881c7eeef78d[m
Author: Kirby Kuehl <kkuehl@gmail.com>
Date:   Tue Mar 2 11:19:51 2010 -0600

    make sure we have input_len

[33mcommit 4a351c07a6f27e5470318be73a8a9624ea8229b7[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Tue Mar 2 17:03:15 2010 +0100

    Bug 103, bound checks at pppoe, added macros for 4bit fields

[33mcommit ddf995da3b7e96d70f9138f14e1910c4523ce843[m
Author: root <root@coz-desktop.(none)>
Date:   Thu Feb 25 04:18:04 2010 -0600

    pfring support lb type, and now uses logging subsys

[33mcommit 057031acce9a4b646dc87e351346b54614cf3da1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 26 12:07:22 2010 +0100

    Don't inspect more methods than necessary.

[33mcommit 5535e083a0bb8454e5c168516d9f7ae35f4c2d03[m
Author: Pierre Chifflier <chifflier@edenwall.com>
Date:   Tue Mar 2 22:43:49 2010 +0100

    Fix prelude init and cleanup sequence using OutputCtx
    
    Signed-off-by: Pierre Chifflier <chifflier@edenwall.com>

[33mcommit 37bb733929c1323a568f2eb9e02f5bef31cd70f1[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Thu Mar 25 10:24:25 2010 -0700

    Looks like something happened in a previous merge: - Don't set the limit here, its already set. - Don't write the log file header here, its also been written.

[33mcommit 40f9653c06b67397c36bb2cc50bb2625f8fbf4e0[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Thu Mar 25 10:18:58 2010 -0700

    Have output plugs use an OutputCtx which is a little more generic than LogFileCtx. The OutputCtx provides a place for module private data to avoi overriding the LogFileCtx.

[33mcommit 99d5dc3d2af14478e3dcb538847de2f2d9dfa1bc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 26 11:25:50 2010 +0100

    Don't scan more cookie headers than necessary.

[33mcommit c1a19bcd6b254a6b48af9ba5de252f32b1ee0797[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 25 17:16:40 2010 +0100

    Fix compilation of new detect-filter code, fix ip-only compatibility of detect-filter code.

[33mcommit ef2ae76c42f0f411b7f63697ed0177fedb5e42bd[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Fri Mar 12 02:40:21 2010 +0100

    Add support for detection_filter keyword

[33mcommit eab93e766ac7e51f4a9bc43a1ba58004cf167b27[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Tue Mar 16 16:35:23 2010 -0700

    Do policy lookup for defrag. Add unit test for a default host os policy. Update example config to use a default. Add 2 new policies to the stream to cover all the policies for stream and defrag.

[33mcommit 7438f981dae92e3e29f00abb5e0fdb80e08c39e2[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sun Mar 21 18:09:27 2010 +0100

    stream memory leaks fixed and unit tests added

[33mcommit 90006d94a6c5496a7c56755f908b92f0d3f2922c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 25 11:29:34 2010 +0100

    Fix compilation

[33mcommit 5c3ab2b73fed34c577ed470b0f282cd8061adcd8[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Wed Feb 24 16:03:14 2010 +0200

    Load host OS info from the configuration.

[33mcommit 297001c6d9f49ae49953ffdd3649b15c87a64165[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 22 19:27:48 2010 +0200

    Only process a app layer sig if it has the proper state. Make sure a sig can't have conflicting sigmatches, such as ftpbouce and uricontent.

[33mcommit ec47f840f3ee40343453e4269c1fa2b68e87e1b1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 24 16:36:49 2010 +0100

    Remove more scan references.

[33mcommit bee4e04664fb62bf5ce149e1a1cc7ed15ca44ccc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 23 20:30:59 2010 +0100

    More scan/search related cleanups.

[33mcommit 7a8cd61fdfb74dd3d693432950c7028b73be3e80[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 23 20:05:38 2010 +0100

    Cleanups.

[33mcommit 153d1425febb6e6596a73eed1526e92a61cc0d46[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 23 18:36:02 2010 +0100

    Fix nocase searching in payload search phase.

[33mcommit 80dc4f1dbe0ff6bf97a6ff63cb37ac5ac8396e4a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Mar 23 10:05:26 2010 +0100

    Further simplify content api: merge flags that indicate a next relative match, remove chunks as they are unnecessary now, make negated a bitflag.

[33mcommit f0d68b633e5e119ea110e2d6792df350ded3def4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Mar 21 22:13:11 2010 +0100

    Remove nosearch flag from pattern api and add a generic bitwise flags field.

[33mcommit 1e01fd613c7e0ed92203bc8fda7b0c654a9da5ba[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 20 11:59:42 2010 +0100

    Remove all references to the scan phase from the pattern matchers and it's api.

[33mcommit dd846c9b0e2db9cea2f255425113f92a84e0c85d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 19 17:04:52 2010 +0100

    Remove all search code from the pattern matchers, cleanup mpm api, remove unused http code, more cleanups.

[33mcommit 6990d9c91be517395632006ef59965abfae32981[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 19 09:10:39 2010 +0100

    Fix thresholding signature unittests. Because of the bug fix that made thresholding compatible to ip-only sigs the test sigs needed to be made non-ip-only.

[33mcommit f298fec872f8ec23f0c698ac1f00ae03c92c03d4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 19 08:47:16 2010 +0100

    Make sure nocase applies to the last pattern, content or uricontent.

[33mcommit 24b5149adf858ccf9bf98fab1c5ab190921d31de[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 18 22:08:55 2010 +0100

    Remove search phase from b2g pattern matcher.

[33mcommit 0e7cb90212e9c673cc02c7d5b7c35fba2ac6bc5c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 18 22:08:37 2010 +0100

    Fix broken pmatch list handling.

[33mcommit 27f338206670d6d6a699c310033a33ddc19207a4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 18 22:07:26 2010 +0100

    Fix rules with thresholding set not being able to be ip-only.

[33mcommit 8b30226914ab68a271e9a82de73806b0f8bd164e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 18 17:59:05 2010 +0100

    Detection keyword cleanup

[33mcommit 6637873348982190b677553848b444b12bb9589c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 18 15:02:50 2010 +0100

    Update prev ptrs in SigMatchReplaceContent

[33mcommit b259e362cd80065d4a78f482732e00c0c2ae93cb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 18 14:42:13 2010 +0100

    Convert uricontent to use new scanning methods as well. Move http_method and http_cookie keywords out of pmatch list for now.

[33mcommit bef70a04ce506b834ebd34f4ff411532f1c91a48[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 5 21:27:21 2010 +0100

    First stage of detect engine redesign: equal patterns share id's, search phase no longer used, new match verification phase.

[33mcommit 50e41817a777069cb2af1bc7161ef31e0b98df8a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 25 02:20:43 2010 +0200

    Share content id's between identical patterns.

[33mcommit 4494545d3a1257add4173af58c59fcaa1bf64b85[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 20 12:40:15 2010 +0100

    Fix bogus error message.

[33mcommit 5e3f072fa6111d766e38ec743648206481876ad6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 20 12:27:07 2010 +0100

    Clean up flow mutexes after use.

[33mcommit 166a6639418f1b2bc323968ab4757806969ff3ff[m
Merge: 25a3a5c6d 0693dc1a5
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 20 11:59:57 2010 +0100

    Merge branch 'cnftypo' into next

[33mcommit 25a3a5c6d8ad5a343e724d5202962802a3d984f9[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Fri Feb 19 14:56:06 2010 +0100

    Adding mem wrapper to debug runtime alloc()/free() functions. Fixing some memory leaks.

[33mcommit 0693dc1a505692da039fbb9d930c92eb4f78707b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 20 11:28:55 2010 +0100

    Fix typo in example config.

[33mcommit ff664c9f6d1a2253855ddf65a6a81344cec23a80[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 19 18:47:30 2010 +0100

    Reenable --enable-htp-debug option for libhtp so Suricata's --enable-debug won't automatically enable libhtp's debug as well.

[33mcommit ebcbc859e3caba36c0937c4908b5eb810769a9ac[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Fri Feb 19 18:31:09 2010 +0100

    Fix on IPOnly match at flows, for inline mode

[33mcommit 505088e7bc6196007cb4622507392700d2544d99[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Feb 19 02:08:35 2010 +0530

    Fix for bug 50. Make timebased counters more accurate

[33mcommit f442c1f5ec8003dbcaac366030ab166b0a85a685[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 19 10:42:53 2010 +0100

    Make sure log-http checks for a valid p->flow ptr before using it.

[33mcommit 51f2bc1d810409b94003015a3d916eded5f3dc8e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 19 10:50:10 2010 +0100

    Fix compilation on Linux, add error checking to Win32 SCFmemopen and properly indent.

[33mcommit 4e72ccf987caa70bc9b1fe5a93e40dc21c23d130[m
Author: Jan Jezek <jjezek@kerio.com>
Date:   Fri Feb 19 10:03:34 2010 +0100

    Fixed Win32 compilation, unit tests now compile.

[33mcommit d6c53b68bfbc76fbab16538747f811f7446c5be1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 18 23:39:03 2010 +0100

    Fix two separate segv's in the http logging code.

[33mcommit e462364e6816ad56185c4511aff7d88c5a0c071a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 18 21:16:11 2010 +0100

    Use snprintf instead sprintf

[33mcommit 8ff242beff9dc7e3f811287e0ef58a6ccc0ce86e[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Thu Feb 18 17:28:25 2010 +0200

    bug 98 patch

[33mcommit 045eaec95b708cf457f96ace9aeefde1b87b9aa8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 18 21:20:21 2010 +0100

    Fix file permissions.

[33mcommit 62d307621ac76863ca477108a725e00c754b9406[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Thu Feb 18 13:14:26 2010 -0600

    switch from autojunk.sh to more standard autogen.sh

[33mcommit 260d0d7673a65209ebee25c43c6891735ae6116d[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Thu Feb 18 11:39:11 2010 -0600

    Steve Grub fixes... Thanx Steve!

[33mcommit 0fe4373b67186f007a640deaa60175629ea534c8[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Thu Feb 18 11:12:43 2010 -0600

    Rolled back to 0.2.x branch renamed htp to libhtp

[33mcommit dc112475119a431b08e501e075e9fdc6504cdcb1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 18 20:37:06 2010 +0100

    Change the way we replace contents by http_method and http_cookie, fixing #90.

[33mcommit 45b85c063afa1b70bb3a5dd42f6e31e4377f7e32[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 18 16:51:29 2010 +0100

    Fix segv in http log module.

[33mcommit 60685f8b3ce11eab912a321c9699e11bb1b12c5a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 18 15:36:40 2010 +0100

    Make unittests run more quiet.

[33mcommit 5d42e7c25f85a84b7b3c1797043220c707cc64f2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 18 15:22:27 2010 +0100

    Move windows install file to doc

[33mcommit 7537013e1649e19a17bc6952a6ab5b5e76258626[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Wed Feb 17 23:18:24 2010 -0800

    Fix bug 99.
    
    - Handle the case where the parent node already exists in ConfSet.
    - Deal with allow_override properly when a node has already been
      set with ConfSet.

[33mcommit c1cbdf6ae9bd8d362f00f046874206503dd1c21a[m
Author: Jan Jezek <jjezek@kerio.com>
Date:   Thu Feb 18 14:19:34 2010 +0100

    Win32 build fixed.

[33mcommit cdec7957b0dcc10d5b164c1c6c4eaf37237b4445[m
Author: Jan Jezek <jjezek@kerio.com>
Date:   Thu Feb 18 06:50:38 2010 +0100

    Added WIN32 compile instructions

[33mcommit 77192165756cfb1cf8b4e45e2addae81a5d5e1f1[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Thu Feb 18 02:52:23 2010 +0100

    Setting thread priorities with nice

[33mcommit 73700af92b986bb10671651f4f13b81dd52e658c[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Wed Feb 17 16:15:55 2010 -0800

    afaik integer increments are not atomic, so put inside the lock

[33mcommit 50f7d0a8873fc27c0a792f7988f5a1b6a1d02b2e[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Thu Feb 18 15:13:49 2010 +0200

    app layer htp logging and better htp request handling. removed recent_in_tx.

[33mcommit aa1564791d904234baaca77dbb4688e096e48069[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 17 22:20:22 2010 +0100

    Disable thread priority code until we understand it better.

[33mcommit 2651f807f175c6ad815567420f8387957d47ce0d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 17 14:48:11 2010 +0100

    Update autojunk.sh + build update.

[33mcommit f7111f3847ed1e6da33af37243e7d07f3bc4eaa6[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Tue Feb 16 16:37:15 2010 -0600

    import of integrated htp lib and small libnet fixes

[33mcommit 4768e4215907b20b4c43e28072ad887e01fc2a86[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Wed Feb 17 15:42:52 2010 +0200

    bug 95 patch

[33mcommit ea277a0b36720754dea85f45a7d3e82a18309d26[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Tue Feb 16 17:05:02 2010 -0800

    Cleanup of configuration internals. Use an n-ary type tree for everything instead of a first level hash branching off into n-ary type trees.
    
    Reduces the code and uses a uniform internal data structure.

[33mcommit 38dc7ffebcc138023b66c1feffa7568623e8073d[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Wed Feb 17 16:53:04 2010 +0100

    Adding settings for detect engine group config

[33mcommit fbdf1baf1c2c9caebd88b6c5cb9d7b41bf6a02d2[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Tue Feb 16 15:56:27 2010 -0800

    - rebase
    
    Provide limits to the unified outputs.

[33mcommit 16b6f536a0185ab45531c67e03ac4f46cadbdffb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 17 19:35:19 2010 +0100

    Fixup Linux compilation after applying win32 patches.

[33mcommit bff652d2f351f78635a58e8840037ea21b3247d2[m
Author: Jan Jezek <jjezek@kerio.com>
Date:   Wed Feb 17 17:54:06 2010 +0100

    Added missing win32 files.

[33mcommit fe6a72befc6d608b92e900aa23534d33f48aae13[m
Author: Jan Jezek <jjezek@kerio.com>
Date:   Wed Feb 17 16:48:37 2010 +0100

    Code is now compilable on the Win32 platform

[33mcommit f0b9ad3f1f9afe019603d2b861f29a578aec2888[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 17 22:27:54 2010 +0100

    Update version to 0.8.1

[33mcommit b28488508b9c91ebb1e77174b1e0e0533391d588[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 16 22:34:32 2010 +0100

    Cleanup threading cpu affinity and prio output.

[33mcommit c1e2e538098ebdd67c4e0db038bcf45ca6cc23c9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 16 19:58:07 2010 +0100

    Mhz->MHz

[33mcommit 903b24667b8deacfdf72e4a2aa4a823870f1e4cf[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Feb 17 00:22:02 2010 +0530

    Some more formating changes for cuda startup device info logs

[33mcommit 07034d0d852fc32b56d33cbfeda0b19bc8bd9d99[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Feb 16 23:56:35 2010 +0530

    Updated cuda device information logs with some minor formatting changes

[33mcommit 1a5ee37bd3211ad82369d9ef416190999dff93ec[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Feb 16 22:47:30 2010 +0530

    Added cuda logs for the engine, which shows device info and memory usage

[33mcommit 30940c9a946911bcaece6632bcbf9b8a2b916531[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Feb 16 19:45:27 2010 +0530

    pack all the packet pattern scan and search packet setup for cuda into a function inside util-cuda-handlers.[ch]

[33mcommit 963691387aee675e1f1a140a494e412d8d08630c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 16 11:12:37 2010 +0100

    Disable unused uri scanning code.

[33mcommit 8cf60d6645e385c21343c48900801e37223d1497[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Feb 16 12:37:06 2010 +0530

    Changed the way cuda dispatcher passes back results. Now each detection thread has it's own queue to which the dispatcher can pump packets back to the detect thread. Also, with cuda enabled and a non-cuda mpm being used, we won't create a dispatcher and instead call the b2g scan/search funtions directly instead of using the dispatcher.

[33mcommit c26e92733d50d1230f3ed430da7ca7b6ca37f861[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Feb 12 19:45:18 2010 +0530

    handle the cuda cleanup at shutdown. should get rid of any errors from the call to SigGroupCleanup

[33mcommit d281a6b8ac2eb18ecbdcdf949d55c0d9ad5042ad[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 10 11:27:14 2010 +0100

    CUDA build system support & compile fixes
    
    - add configure support for CUDA
    - make sure all code compiles if CUDA is disabled
    - fix compiler warnings

[33mcommit a2948fc25ceda011ade14ae9b7e8df2cc6b55947[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Feb 10 15:07:27 2010 +0530

    valgrind fixes for b2g cuda mpm

[33mcommit 41e6735b923df793e4660142b7d1a87384b7f98d[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Feb 8 20:33:13 2010 +0530

    mpm b2g cuda support added

[33mcommit 84df26d3fdd2d9076a0022fe55f6832af1205be1[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Jan 21 12:27:16 2010 +0530

    cuda interface

[33mcommit 985d565cfdef80d44e511290cab83a1d83524344[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Mon Feb 15 22:55:52 2010 +0100

    Change priorities only if we are EUID == 0

[33mcommit 80f500872804978fc922e62e0854ff285d16bbfe[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Mon Feb 15 15:26:44 2010 +0100

    Adding default priority for all the threads

[33mcommit b482471a7df5336e29a0ead80c349fcef90e2620[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Mon Feb 15 15:09:07 2010 +0100

    Adding auto runmodes based on available core/cpu's. Setting thread priorities

[33mcommit 34216fd3e272e7cab862da1a3e6c1d4a19d91f7a[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Mon Feb 15 16:07:48 2010 +0100

    bug87 Fix IPOnly veredicts on flows

[33mcommit d3244e51eb0f67a4771fc881e81a47a0dc6c89a4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 16 20:09:44 2010 +0100

    Fix big endian iponly handling.

[33mcommit 59ccef9a110c0e5c3f6a67a7803b52c707bb0677[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 10 10:34:36 2010 +0100

    Handle ip only matching correctly on big endian systems. Thanks to Yao-Min Chen for figuring this out.

[33mcommit cef12d30b508bfd551cacdc1ad4b4a64f4ef1668[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Tue Feb 16 14:26:58 2010 +0100

    Unified output fixes: alert count per module (not per thread), fix timestamps on pcap mode, write *all* the alerts of a packet, write the log header once also on unified alert

[33mcommit b02bb6b6b495a61be08fba43ab0dc9e083c81c6f[m
Author: Breno Silva <breno.silva@gmail.com>
Date:   Sun Feb 14 14:21:16 2010 -0200

    VLAN Support

[33mcommit 29d51a618242d5f26cdec319c8028d6b06c2837f[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Tue Feb 9 13:45:34 2010 +0100

    Using the loggin API in source-pcap and source-pcap-file

[33mcommit 52936818604e0e3b322fadb1dc4620f5f202c3fd[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Tue Feb 9 17:43:29 2010 +0100

    b86

[33mcommit 4f3a04a410dd33d640d7b9cc026fd987b1b97d96[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 13 17:08:26 2010 +0100

    Disable htp cleanup code as I'm not yet convinced it does what it should.

[33mcommit bf236e4567ac05de3021567e56ef1fb39e9429ea[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Tue Feb 9 22:09:10 2010 +0100

    better htp memory handling & flow valgrind error fixed

[33mcommit 763fb4a583ba8d7315872e8cbb7276ec3e95364c[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Thu Feb 11 10:04:14 2010 -0800

    Fix threading issues with unified-log. - Only write the header once, on opening, not per thread init. - Track the size in the log file ctx, not per thread.

[33mcommit defc6595c60b9c207294c34be0c5c39f8601b165[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 11 10:41:22 2010 +0100

    Make pcre P have it's own sm type.

[33mcommit 0165b3f0d8cb6a54abeae8bceaf3e43f0fbc284d[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Mon Feb 8 17:52:40 2010 +0100

    pcre P modifier support (pcre match over http body requests)

[33mcommit ba6d807a6efc23a2229926d97aed5498f3b1a06c[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Mon Feb 1 17:01:05 2010 +0100

    Improve information about errors on signature failure

[33mcommit cc28284598cea084112d19529cd271b3ce5d5916[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Thu Feb 11 00:50:24 2010 -0800

    Set the ethernet header pointer. Without this, alert-unified-log will add an extra ethernet header to every alert logged.

[33mcommit 565eab1f5408ed44f579edd22a45b71a605b1f1a[m
Author: Kirby Kuehl <kkuehl@gmail.com>
Date:   Thu Feb 11 16:15:47 2010 -0600

    fix bug88

[33mcommit a334a87109d5e57485eba60020ac3af801f48822[m
Author: Kirby Kuehl <kkuehl@gmail.com>
Date:   Thu Feb 11 14:27:21 2010 -0600

    smb safety checks

[33mcommit bea30a6db6957d3e59e078f84e9045534b72fdcf[m
Author: Kirby Kuehl <kkuehl@gmail.com>
Date:   Thu Feb 11 10:32:09 2010 -0600

    bug 88 validate dcerpc header

[33mcommit 9e4da4f8e7d3827e94d9caa2b72585647ed8963c[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Fri Feb 12 14:32:11 2010 -0800

    supply pcre_get_substring with the proper start of the string.

[33mcommit a8c3718b567acdaa73dc1d1458732a39b085ecb2[m
Author: Kirby Kuehl <kkuehl@gmail.com>
Date:   Tue Feb 9 09:53:18 2010 -0600

    signed unsigned comparision fix for 64 bit

[33mcommit 7099da431b53812f9bd75fba44114256bd053db6[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Tue Feb 9 09:01:12 2010 -0600

    small fix for source-pfring.c after stat err rename

[33mcommit e87d4f8a2894410541abb58eee4a6382b900dbc9[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Tue Feb 9 13:56:06 2010 -0800

    Split the defrag counters into ipv4 and ipv6.

[33mcommit 2cb2989ad8b6f0ee81c321011d931eb230c461cc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 9 12:15:15 2010 +0100

    Apply configurable max pending packets to nfq and ipfw

[33mcommit 7142fdb78035f406122303ae9a0e1b4b39ba3eed[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Tue Feb 9 00:04:38 2010 -0800

    quick way to make max_pending configurable.

[33mcommit 187949b9ad1184eb73f052db3cfdf196ee6e9d2c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 9 16:24:35 2010 +0100

    Make urilen inspect the normalized uri, cleanup uri (error) handling.

[33mcommit 6b562f7aa6e5a52ae2062b3c7cb7ead06bf04568[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Mon Feb 8 23:23:12 2010 -0800

    Issue 82 - fragment counters. - number of fragments - number reassembled - number of timeouts

[33mcommit 3d0355bae8852c572cb5646e2f6b40a41244d06a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 8 23:35:11 2010 +0100

    Compile fix.

[33mcommit c3e70accd219a96fceb787d2e02d26dd830f543c[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Mon Feb 8 13:11:39 2010 -0600

    pcap and pfring exit stats

[33mcommit b99e10236cad2c6490649596bea0469379ad1112[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 8 18:08:45 2010 +0100

    Fix a endless loop condition in the smb parser and make dcerpc parser more quiet.

[33mcommit 16aebe5add1a16aa97fdbfa8362b0d2f98141d78[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 8 17:49:47 2010 +0100

    Fixup smb tests.

[33mcommit 957b43b3d61f65178e13442b3b622d87405bbe7c[m
Author: Kirby Kuehl <kkuehl@gmail.com>
Date:   Mon Feb 8 09:59:54 2010 -0600

    signed unsigned comparision cleanup

[33mcommit 40a0fd5e971101e0bcd8a708c8492208c894f0de[m
Author: Kirby Kuehl <kkuehl@gmail.com>
Date:   Sun Feb 7 20:58:15 2010 -0600

    fix warning

[33mcommit 4b05bc281d0043ddbac7cc9698b2d4d97b7bf545[m
Author: Kirby Kuehl <kkuehl@gmail.com>
Date:   Sun Feb 7 12:55:58 2010 -0600

    fix padding bug

[33mcommit 6aac8d55a6a4b527116360784c35fb64ae31391a[m
Author: Kirby Kuehl <kkuehl@gmail.com>
Date:   Sat Feb 6 10:44:18 2010 -0600

    reset smb bytesprocessed when complete

[33mcommit 4dd2f621ac3be6af516d97d25ba01ac996cdd51f[m
Author: Kirby Kuehl <kkuehl@gmail.com>
Date:   Sat Feb 6 10:26:15 2010 -0600

    smb writeandx dcerpc over smb

[33mcommit 583c6861706a29b3d87d844ddbc79dd631d477e1[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Mon Feb 8 14:20:07 2010 +0100

    Allowing no case options for flow keyword. Adding unittests for this

[33mcommit 194015c6cff5f161c012abeffb40e23757b1cfd5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Feb 8 15:32:26 2010 +0100

    Fix reject code to not send resets for all alerts.

[33mcommit f925ac93518db29c29883e910c3d38b31ddc289a[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Thu Feb 4 11:19:06 2010 -0600

    printf to logging subsys conversion for src/detect-bytejump.c

[33mcommit 999a200bc9f5262bd74b4b432f0e68c6b54bad45[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Thu Feb 4 11:12:31 2010 +0100

    pattern matcher options support

[33mcommit d0404d8447763706b23bcf466e72402ddab90bc7[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Sat Feb 6 20:04:25 2010 +0100

    Renaming errors with naming conventions

[33mcommit ad2c136e8ff4bf223e8c454cb46bb563ebf58f1c[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Sat Feb 6 01:02:54 2010 +0100

    Renaming errors (naming conventions)

[33mcommit 8f618b2121083f9850a955f38076882bb08ac571[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Fri Feb 5 10:31:37 2010 -0800

    - actually re-inject ipv6 re-assembled packets. - set the next header.

[33mcommit 8570976ee0c251ca804edaccf275245a3b269f1a[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Sun Feb 7 08:51:45 2010 -0800

    Fix for lists that are children of another list. Fix memory leak by only setting the sequence index value to the first item found.

[33mcommit 501c8814b6370c68348bebc736693bdeef48a87a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Feb 7 22:46:26 2010 +0100

    fix crash in urilen

[33mcommit ed7762e84303038e987bb1fd89e16f0d4d284f69[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 6 13:47:33 2010 +0100

    Disable unused jabber proto detection as it made the proto detection code look way more into the stream than without it.

[33mcommit 6f73aca1e817ecf4c8e2b043c5753e08613e50b9[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Mon Feb 1 12:02:59 2010 -0800

    I know Snort defaults to syslog in daemon mode, but should we?
    
    Stick to the logging configuration defined in the config file
    in daemon mode.

[33mcommit c72d6be58b739ef688ea73bb267f41cf139c7891[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Thu Jan 21 10:22:02 2010 -0800

    Making logging configurable. If no logging outputs are defined the default will be used. - Currently per output log formatting is not available.

[33mcommit a857fa71700391e0a72a9f8e10023e99ccd04cad[m
Author: Breno Silva <breno.silva@gmail.com>
Date:   Tue Feb 2 19:02:22 2010 -0200

    FragOffset Rule Keyword

[33mcommit 7e299834d24b9d84654001cb508954bc0e059eb0[m
Author: Breno Silva <breno.silva@gmail.com>
Date:   Mon Feb 1 19:47:15 2010 -0200

    FragOffset Rule Keyword

[33mcommit f96511a8b14469e11d743bf909b2e8b7d8b7acd9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 6 13:46:47 2010 +0100

    Check reassembly limits against correct stream direction. Set proper direction flag in stream msgs.

[33mcommit ed99e7362273f5ff6071b6807f59026292271590[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Fri Feb 5 11:19:08 2010 +0100

    bug 78

[33mcommit 58c8103a4b663804f12a3988c9351e45ee36f8f5[m
Author: Kirby Kuehl <kkuehl@gmail.com>
Date:   Tue Feb 2 17:31:18 2010 -0600

    fix unittest

[33mcommit 53c9276d510bdf4fb9161e399ce81e0720b28385[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 4 14:23:53 2010 +0100

    Cleanup pcap output.

[33mcommit e0aacac4c640de444222f2863622fe6975a2a400[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 4 13:31:26 2010 +0100

    Move bpf string retrieval to it's own function. Clean up pcap sourcres a bit.

[33mcommit ba46c16aacb6a3394054eb4a4fef058eb4509876[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Mon Feb 1 11:39:58 2010 -0600

    bpf support for pcap modes

[33mcommit 424ff432ec5aac5bc2b705d2999c3e23dd8ade55[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 6 16:11:34 2010 +0100

    Build update

[33mcommit faf6e82aa4884fa139ed7861e1ac90b8a8fd678e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 5 12:34:46 2010 +0100

    Build sys update after applying prelude patches.

[33mcommit 4515ae13e431a4dd2eade89878bd01492dcf403d[m
Author: Pierre Chifflier <chifflier@edenwall.com>
Date:   Fri Feb 5 09:37:08 2010 +0100

    Add Prelude output plugin
    
    Add support for reporting alerts to the Prelude SIEM system, using
    libprelude to send IDMEF (RFC4765) messages.
    
    Each message contains the alert description and reference (using
    the SID/GID), and a normalized description (assessment, impact,
    sources etc.)
    
    libprelude handles the connection with the manager (collecting component),
    spooling and sending the event asynchronously. It also offers transport
    security (using TLS and trusted certificates) and reliability (events
    are retransmitted if not sent successfully).
    
    This modules requires a Prelude profile to work (see man prelude-admin
    and the Prelude Handbook for help).
    
    Signed-off-by: Pierre Chifflier <chifflier@edenwall.com>

[33mcommit eb33dc163fba9a07d45edd1ab8cb62211903cb2a[m
Author: Pierre Chifflier <chifflier@inl.fr>
Date:   Sun Jan 24 21:00:14 2010 +0100

    Prelude plugin: add detection in configure script
    
    Add the --enable-plugin option to configure script (disabled by default).
    
    Signed-off-by: Pierre Chifflier <chifflier@inl.fr>

[33mcommit cf5266094d9dc110d55c64a65d4d575d96d0241d[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Fri Feb 5 13:22:07 2010 +0100

    bug 66 patch

[33mcommit 148883cedfb0d902462aafc6e958b5172e3b76c5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 6 11:22:47 2010 +0100

    Work around for unsupported CONNECT support handling.

[33mcommit 7deb4e9f0978ced3664b7b409b4601611d5e1d3a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 4 12:27:49 2010 +0100

    Cleanup AppLayerDetectGetProto a bit.

[33mcommit fd409049cb935309460280466d1998fd5ed1085f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 3 16:38:43 2010 +0100

    First step for proper HTTP CONNECT handling.

[33mcommit 9f3f9e9ba1d8db5e57a684ed8b4b732619620d24[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 6 15:51:55 2010 +0100

    Fix ipfw verdict.

[33mcommit 3cad20946d4df66f699d6e5027fed6f761591333[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Thu Feb 4 22:04:40 2010 +0100

    bug 64 patch

[33mcommit 53977fded6efe1a1d1013899baf607343c339bf1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 3 09:35:33 2010 +0100

    Small compilation fixes when debugging is disabled.

[33mcommit 6a53ab9c5ad6bb05762170f84360b4947adcaccd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Feb 3 00:00:16 2010 +0100

    Stream engine memory handling update
    
    The stream engine memory handling needed updating as it didn't scale. Changes:
    
    - pools can now be initialized to size 0, meaning unlimited
    - stream engine uses a memcap setting. Sessions, segments and aldata is part
      of this, app layer state isn't.
    - memory is accounted using a global int that is spinlocked.
    - a counter for sessions that have not been picked up because of memcap was
      added.
    - all reassembly errors are converted to debug msgs.

[33mcommit df4c642c708321aa15ef1dfacf1b1763a9d19c9c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 6 14:54:17 2010 +0100

    Fix weird compile error

[33mcommit b1531f7244249077e9f9b98d293671721ffa2b6b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Feb 6 14:30:19 2010 +0100

    Manually merge Pablo's IPFW action patch.

[33mcommit 51dc773eec8212e2541158a236ad401aeccaee36[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Fri Feb 5 21:26:00 2010 +0100

    Changing the veredict actions to flags to allow simultaneous veredict

[33mcommit 2b7b78f1bfca56eebc206c206e20f0f419fc05cd[m
Author: Nick Rogness <nick@rogness.net>
Date:   Wed Feb 3 17:21:10 2010 -0600

    Intial IPFW support FreeBSD and OSX

[33mcommit fbf03a927d9ae50a9e312e565feda73457582674[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Mon Feb 1 11:39:59 2010 -0800

    Fix issue 71. The insert and re-assemble need to be done under the same tracker lock.

[33mcommit f7f33ec8890f885437e17f2f72e69221e7326781[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Feb 2 00:31:06 2010 +0100

    Fix the flow manager sleeping for way too long in some situations.

[33mcommit 298bf4cc88a48da51406d3fc85c42efd1217df5e[m
Author: Kirby Kuehl <kkuehl@gmail.com>
Date:   Sun Jan 31 15:22:22 2010 -0600

    dcerpc over smb for transact

[33mcommit bbfe1d293ea0daa90557a8af2b9d604349d42464[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jan 31 22:50:19 2010 +0100

    Fix merge artifact.

[33mcommit f08d01a8e8fa80529d23e97ddab2553540dddda6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jan 31 22:40:02 2010 +0100

    Set sensible tcp timeout defaults and no longer set the timeouts from the stream engine.

[33mcommit 7f250a814a8ded8c4e7b87dce3ca54e53dc4b3d6[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Sun Jan 31 19:47:36 2010 +0100

    Fixing redeclaration of run_mode

[33mcommit 5592189c04b9ebca4095d4a31d590486c1a10321[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Sun Jan 31 17:29:29 2010 +0100

    Loading flow settings from config

[33mcommit 8efbe491a142f8a521393dd67db1a5703e140846[m
Author: Kirby Kuehl <kkuehl@gmail.com>
Date:   Sun Jan 31 11:44:10 2010 -0600

    dcerpc refactoring

[33mcommit 008de4321b06dc95b2c0216730961479b0828fe1[m
Author: Kirby Kuehl <kkuehl@gmail.com>
Date:   Sun Jan 31 10:59:29 2010 -0600

    refactor dcerpc in prep for dcerpc over smb

[33mcommit 546e9b5f2857df6efa693e2ca5c1130be6efe60a[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Jan 27 12:54:52 2010 +0530

    AddressCutNot fix for address engine ipv6

[33mcommit e25696afce0b7abee81c240a9f18f128007a23f4[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Jan 27 12:38:26 2010 +0530

    engine address ipv6 refactored

[33mcommit d9677c7e2a794e3a96f700b86416259801ee2b8f[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Thu Jan 28 18:16:29 2010 +0100

    bug 76 patch

[33mcommit 0a5bc2d600cc3710ffdfbb7361a1940ef9602afd[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Sun Jan 31 00:19:16 2010 -0800

    Fix issue 74. separate initialization of run modes from adding them to a thread. - fixes issues with multiple output threads.

[33mcommit 260e581929c91319a61121266fbd6af1788da1d0[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Tue Jan 19 20:32:53 2010 +0100

    First version of the reputation API

[33mcommit f15ca04889a59ea118fece0f45e5622fdfa10216[m
Author: Kirby Kuehl <kkuehl@gmail.com>
Date:   Tue Jan 26 14:18:52 2010 -0600

    fix padding calculation and stubdata parser for dcerpc

[33mcommit 811f2f605d2763c3bfaca8bfaa3f5e4a9f3d7b2b[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Mon Jan 25 10:46:18 2010 -0600

    small fix for ! inside of content match

[33mcommit 9ec2057a21ec93b87d25c63aa53c4f9b86e013a2[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Mon Jan 25 16:59:40 2010 +0100

    Small fix, renaming

[33mcommit 22f3e3d8185ed6919f3f1581827bf284e333b716[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Mon Jan 25 11:23:58 2010 -0600

    added configure option for enabling march=native gcc 4.2 and later

[33mcommit 2481f2102b4b1e1d41890e91172c16f458eac93a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 26 10:31:36 2010 +0100

    Add missing return value evaluation in port parsing and fix broken unittest.

[33mcommit b3bcba077ffed70a3c501d44a0c1b291c568a385[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 28 11:32:20 2010 +0100

    Only inspect http flows against uri sigs, clean up uri scanning code.

[33mcommit 0cb43d27e9a196e709930e4b586c7c15c83542b2[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Tue Jan 26 19:17:39 2010 +0100

    uricontent new design

[33mcommit 356a8bf38571cf8da8996025569e8a1cf5855593[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Mon Jan 25 21:22:10 2010 +0100

    applayer uri match and modified http handling

[33mcommit fcb03099a39757f9a9e0a5e87fd71ff18fef73a8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jan 31 13:13:09 2010 +0100

    Fix reassembly updating the wrong stream on ACK
    
    The stream reassembly updated the wrong stream on received ACK packets. Instead
    of the opposing stream it updated the stream in packet direction. This caused
    issues in the app layer handling.
    
    Updated the unittests as well.

[33mcommit 256d745b393ead8809801b84fe002392ac4bd006[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Tue Jan 26 16:41:39 2010 +0100

    Including header file for cpu detection

[33mcommit 17cd010b0c6629587845d0f19e8a04f04597a204[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Tue Jan 26 16:38:20 2010 +0100

    Detect the number of CPUs configured and online. Printing a small summary at the startup

[33mcommit 0d3da34f6404332ce811a8e31ef3ccc92dcb656b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 25 15:39:47 2010 +0100

    remove unused variables

[33mcommit c352bff6fb08231f722de0a19d68cf9de71d347c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 25 14:36:52 2010 +0100

    Remove unused conditional locking code from the app layer parsing code.

[33mcommit 5461c60ada921b378fc20d619131931f50bf7b2c[m
Author: Breno Silva <breno.silva@gmail.com>
Date:   Sun Jan 24 21:22:59 2010 -0200

    Allow threshold options in any order

[33mcommit d446b85237a7dbcac7ad53983017931b674bb7de[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jan 24 13:29:41 2010 +0100

    Remove obsolete files.

[33mcommit f853da79401f051097683fe67e20bfd8ea47d55b[m
Author: Steve Grubb <sgrubb@redhat.com>
Date:   Sat Jan 23 11:08:48 2010 -0500

    Get make distcheck working
    
    Hello,
    
    Below is a patch that gets "make distcheck" working. Its against the
    current code in git. The project version was set to 0.1 in configure,
    I changed that to 0.8.1 just so its actually relevant. You might want
    to set that to something else.
    
    After checking this patch, I find that there are several source code
    files in src/ that are not getting compiled:
    
    -app-layer-detect.c
    -app-layer-detect.h
    -app-layer-http.c
    -reputation.h
    
    Are these new or abandoned? Anyways...here's the patch.
    
    -Steve

[33mcommit b5529f7131a279a08bb8fed528c3968fe4bc40db[m
Author: root <root@kirby-laptop.securitytestsystems.com>
Date:   Sun Jan 24 14:28:53 2010 -0600

    add stubdata pointer

[33mcommit 08915649f33d19b15bdd365eb702fd5d1ff0b02d[m
Author: Kirby Kuehl <kkuehl@kirby-laptop.securitytestsystems.com>
Date:   Sun Jan 24 14:25:00 2010 -0600

    fix double free

[33mcommit f4a23f232514b8228460e44cf6848ceb28bdfe3b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jan 24 23:29:45 2010 +0100

    Fixup noisy debug statement.

[33mcommit 0d34990d7ff68016f269a30bfc9bb40ed182acf4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jan 24 12:52:56 2010 +0100

    Add OpenBSD's strlcpy and strlcat and replace all strcat/strcpy/strncat/strncpy by those calls.

[33mcommit 7d920a125404dff676420c78a58b4186c590cc82[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Fri Jan 22 00:29:43 2010 -0800

    Fix issue 65.
    
    - Update unit test to trigger the failure found in the issue 65 pcap.
    - Increase pkt buffer to account for the IPv6 header, as a maximum
      size IPv6 datagram is 40 + 0xffff.
    - Account for IPv4 header when checking where end of fragment lies.
    - Second sanity check during re-assembly to check for writing past
      the end of the pkt buffer.

[33mcommit 1b8f3916073e255377e7defa29adaef9fe5003a4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jan 24 21:03:44 2010 +0100

    Fixup flowbits signature keyword parsing memory handling.

[33mcommit c95cd2e80af53da892c0e3ec5e0a16200de2707c[m
Author: Steve Grubb <sgrubb@redhat.com>
Date:   Sun Jan 24 14:35:16 2010 -0500

    memory leak cleanups in misc places
    
    Hello,
    
    This is all the rest of the memory leaks I found.
    
    *In src/source-pcap-file.c at line 152, ptv is not being freed.
    *In src/util-unittest-helper.c at line 152, p was not being freed.
    *In src/log-httplog.c at line 195, aft was not being freed
    *In src/counters.c at line 51, log_filename was not being freed. At line 1188
    pctx is being tested to see if its NULL. However, at 1173 it exits the
    function if it were NULL. This test is not needed and should be deleted.
    *In src/defrag.c at line 351, tracker was not being freed. At line 390, dc is
    being checked for NULL but this was already done at line 384. Probably what
    was meant was checking the value of dc->frag_table which was just assigned.
    
    The patch below makes the above described changes.
    
    -Steve

[33mcommit 60ad9d29c5e9ce77836da4893829b5e73c42a698[m
Author: Steve Grubb <sgrubb@redhat.com>
Date:   Sun Jan 24 14:30:36 2010 -0500

    Memory leak cleanup in detectors
    
    Hello,
    
    I ran the code through an analysis program and found several leaks that
    should be cleaned up.
    
    *In src/detect-engine-address-ipv4.c at line 472, the test for ag == NULL
    will never be true since that is the loop entry test.
    *In src/detect-engine-port.c at line 1133, the test for p == NULL will
    never be true since that is the loop entry test.
    *In src/detect-engine-mpm.c at line 263 is a return without freeing
    fast_pattern
    *In src/detect-ack.c at line 80 and 85, data catches the return from malloc.
    One of them should be deleted.
    *In src/detect-seq.c at line 81 and 86, data catches the return from malloc.
    One of them should be deleted.
    *In src/detect-content.c at line 749, many of the paths that lead to the error
    exit still has temp pointing to allocated memory. To clean this up, temp
    should be set to NULL if not immediately assigning and new value.
    *In src/detect-uricontent.c at line 319, both cd and str needto be freed. At
    lines 344, str needs to be freed. And at line 347 str and temp need to be
    freed.
    *In src/detect-flowbits.c at line 231 and 235, str was not being freed. cd was
    not being freed at line 235.
    *In src/detect-flowvar.c at line 127, str was not being freed. At line 194, cd
    and str were not being freed.
    *In src/detect-flowint.c at line 277, sfd was not being freed. At line 315, str
    was not being freed.
    *In src/detect-pktvar.c at line 121, str was not being freed. At line 188, str
    and cd was not being freed.
    *In src/detect-pcre.c at line 389, there is an extra free of "re" that should
    be deleted.
    *In src/detect-depth.c at line 42 & 48, str has not been freed.
    *In src/detect-distance.c at line 49 and 55, str has not been freed
    *In src/detect-offset.c at line 45, str has not been freed.
    
    The patch below fixes these issues.
    
    -Steve

[33mcommit f6653752c5a37dec5fc84488166da6b72ff04a2f[m
Author: Steve Grubb <sgrubb@redhat.com>
Date:   Sun Jan 24 14:24:12 2010 -0500

    memory leak cleanup in alerts
    
    Hello,
    
    I ran the code through an analysis program and found several memory leaks
    in the alert code.
    
    *In src/alert-fastlog.c at line 178, aft was not being freed
    *In src/alert-debuglog.c at line 205, aftwas not being freed
    *In src/alert-unified-log.c at lines 234 and 243, aun was not being freed
    *In src/alert-unified-alert.c at lines 219 and 230, aun was not being freed
    *In src/alert-unified2-alert.c at line 505, aun was not being freed
    
    The patch below fixes this.
    
    -Steve

[33mcommit 5f5a44b365b0cefc94a2f089e6e3c0115e27bac2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jan 23 19:09:51 2010 +0100

    PPPoE fixes.

[33mcommit 82978f9f27dcd4bec9a4d57625d5ed08e99d2a43[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Thu Jan 21 13:39:41 2010 -0600

    new pfring runmode for quad core, other small pfring fixes

[33mcommit 434da6b965c74cb8e590bcbb9b6347fb3a3b0b99[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jan 23 17:29:44 2010 +0100

    Set no reassembly flags on sessions we don't recognize the protocol for.

[33mcommit f6b0c481b07f0f15af651e7cbcb9181d8340e6d8[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sat Jan 23 17:57:08 2010 +0100

    urilen support for engine

[33mcommit 9b4f3f918b85a2bc9e67fcaea57fa8760680735d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 25 00:01:04 2010 +0100

    Fix broken debug code in stream reassembly

[33mcommit c1e6aabb0a4b49a2ef412fe5a81fcf0cf48fb3b6[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Fri Jan 22 17:31:02 2010 +0100

    Small fix

[33mcommit 705471e4ee77c3c4f56f2c00c943c3afa294d50b[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Fri Jan 22 16:07:03 2010 +0100

    Adding single pattern matcher algorithms. If you cannot store a context for the patterns, use SpmSearch() macro. Adding unittests and stats

[33mcommit cae8e06cb964eb9bbf6b5c3d6ab6ba9f1999bb0c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jan 24 20:31:18 2010 +0100

    Properly lock app layer result pool and add some debugging code for memory tracking.

[33mcommit 4284276b11c71fe13312edbc925b3b85e3e50da5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 21 14:43:26 2010 +0100

    Merge applayer detect function into normal match function. Should speed up detection.

[33mcommit bcd06821507952489d0f7e556c717e12795643d6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 21 09:56:31 2010 +0100

    Make engine startup a little less verbose.

[33mcommit 5076452707cfa904b6e6b106307a10a69018b981[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Wed Jan 20 15:33:19 2010 -0800

    Potential fix for issue 60.
    
    - Increase the packet buffer so it can hold the link header when we
      have maximum size IP datagrams.
    - Fix ip header length and pkt length calculation for re-assembled
      packets.

[33mcommit 9d3a9273dd6805f6b9258da395841698a1b6af77[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 20 21:06:16 2010 +0100

    Rename fmem_t to SCFmem and make sure it's not exported.

[33mcommit 673afeb4d3733b14811910699dddd1a8985f3a7f[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Wed Jan 20 18:25:03 2010 +0100

    fmemopen wrapper added (fix compilation problems on macosx and freebsd)

[33mcommit 42e8a01221c7f9ababedf2c1affd18f64d353920[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 14 11:33:08 2010 +0100

    Make sure pcre PCRE_EXTRA_MATCH_LIMIT_RECURSION check works with strict compiler settings.

[33mcommit 5bde121754b0cb575ae588dc4fbc56152555d917[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Wed Jan 13 07:59:34 2010 -0600

    --enable-gccprofile sets -pg flag detect presence of pcre recursion

[33mcommit db2d483d11cd762a6dd9e71800e98c7e86ceee6b[m
Author: Eric Leblond <eleblond@edenwall.com>
Date:   Wed Jan 13 21:28:21 2010 +0100

    convert action_type to enum
    
    This patch converts packet action type to an enum. This will
    provide some facilities and ease bad value detection by gcc.

[33mcommit f5743afed518e8323844e23bcf2550667539feef[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Thu Jan 14 13:58:12 2010 +0100

    Fix logging messages related to icmp_id parsing

[33mcommit 4b39ddaf958045f94aabd43786095c0143b1c84e[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Thu Jan 14 09:22:22 2010 +0100

    Fix logging messages related to icmp_id parsing

[33mcommit 1d055b0e099d8d03c45246c98a8be2b88e5f98ec[m
Author: Breno Silva <breno.silva@gmail.com>
Date:   Thu Jan 14 21:17:09 2010 -0200

    ICMP Seq Rule Keyword

[33mcommit 34e11e4784b9c91ab2f25dcb7c640f4576988ff1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 18 12:23:00 2010 +0100

    Fixup unused variable compiler warning in the dce code.

[33mcommit ddf5995049b0a067a07fe30f33e1611e08f2f1a4[m
Author: root <root@kirby-laptop.securitytestsystems.com>
Date:   Fri Jan 15 10:23:32 2010 -0600

    endianness handling update

[33mcommit 3d59f40640b0d366deb18218883a90ed91ce79e8[m
Author: Kirby Kuehl <kkuehl@kirby-laptop.securitytestsystems.com>
Date:   Wed Jan 13 14:42:02 2010 -0600

    style patch

[33mcommit 706bb952093f07e1b24894550f8d1541235af651[m
Author: root <root@kirby-laptop.securitytestsystems.com>
Date:   Mon Jan 18 14:05:16 2010 -0600

    fix bug 61

[33mcommit 7aac64f2622fd87c1e8589ffd58d6eeb35d2f28b[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Mon Jan 18 23:53:59 2010 -0800

    unit test for issue 59.

[33mcommit a7b37afc4e4a21cb6d0e1dc3ff39b13b4b6e3eb5[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Fri Jan 15 14:34:13 2010 -0800

    Fix issue 59. Drop a fragment that extends past the maximum IP packet size.

[33mcommit fea277b2aaec2d8a061617003d7e603da2092d09[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Mon Jan 18 13:21:00 2010 +0100

    memory leak fixes

[33mcommit 5c8d90afc8d5484aa26d7657eb5c046cb0dbcb25[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Fri Jan 15 15:23:26 2010 +0100

    memory leak fixes

[33mcommit 66cc392177c6215bf2adc954ebea35ed3d125f7e[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Thu Jan 14 16:09:54 2010 +0100

    init b46

[33mcommit 90b42232fafb33f2e761bef15577bd6b42b59ce5[m
Author: Kirby Kuehl <kkuehl@kirby-laptop.securitytestsystems.com>
Date:   Sun Jan 10 10:32:42 2010 -0600

    dcerpc request smb transact and fix for dcerpc bindack

[33mcommit 8f00718b0d2eb79c746de1ebbb50ac79aae7f70c[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Wed Jan 13 15:25:44 2010 +0100

    bug 57

[33mcommit 51be576a303a485d707f132fe7d1a44c8bfd2e7b[m
Author: Eric Leblond <eleblond@edenwall.com>
Date:   Mon Jan 11 22:25:22 2010 +0100

    nfq: modify queue length computation logic
    
    This patch modifies  max queue length computation logic. The max queue
    length was set to MAX_PENDING which is the total number of packet
    processed simultaneously in suricata.
    
    This value is correct but this will not permit to take all burst
    effects into account (read sudden quantity of packet that arrives
    faster than suricata is enable to parse). Furthermore there is a
    delaying system when suricata gets overloaded which make necessary
    to have packet storable into kernel for some time.
    
    To improve this situation the patch increases the maximum queue
    length to NFQ_BURST_FACTOR (4) time the MAX_PENDING packet and
    it also increase the nfnetlink buffer size to be able to store
    all packets waiting for suricata in the netlink receive buffer.

[33mcommit 775ac9ad9de313f8eba3c58ae1790a7e51fb5c6b[m
Author: Eric Leblond <eleblond@edenwall.com>
Date:   Mon Jan 11 11:11:38 2010 +0100

    fix code file permission
    
    detect-http-method.c was executable.

[33mcommit 84dfc0172a5ff2e1990bc332487c75971f6bec41[m
Author: Eric Leblond <eleblond@edenwall.com>
Date:   Mon Jan 11 11:11:37 2010 +0100

    gcc warning fixes.
    
    This patch fixes gcc warning:
        warning: suggest braces around empty body in an ‘if’ statement
    This was the case in  when the macro SCLogDebug was used:
        if (ssn != NULL)
            SCLogDebug("ssn->alproto %"PRIu16"", ssn->alproto);
    
    It also fixes a signed-unsigned comparison.

[33mcommit bda87024747d242cfa80c504e67bd5a6e31e2b6f[m
Author: Eric Leblond <eleblond@edenwall.com>
Date:   Mon Jan 11 11:11:35 2010 +0100

    configure: compile with -Wextra
    
    This patch modify CFLAGS to use -Wextra flag. To avoid problem
    with "unused param" it disable this warning.

[33mcommit 72d48f6658fcfa8d76af15fb6d94837e0b402d4a[m
Author: Eric Leblond <eleblond@edenwall.com>
Date:   Mon Jan 11 11:11:34 2010 +0100

    nfq: add sanity checking
    
    This patch adds sanity checking to payload handling. It set length
    of packet to zero if an error occurs.

[33mcommit 56cccdfa6265eca04a5832c894c9a3993de61d35[m
Author: Eric Leblond <eleblond@edenwall.com>
Date:   Mon Jan 11 11:11:33 2010 +0100

    nfq: use switch instead of 'else if'
    
    This patch convert a 'else if' serie to a switch to increase
    the readability of the decision related code.
    
     Please enter the commit message for your changes. Lines starting

[33mcommit c96586446bae9a0ec1574317f22ef055fba89ec3[m
Author: Eric Leblond <eleblond@edenwall.com>
Date:   Mon Jan 11 11:11:32 2010 +0100

    ethernet: use switch instead of 'else if'
    
    This patch uses a switch instead of a 'else if' series. It also
    adds a debug message for unsupported ethernet type.

[33mcommit 6cf00d6204f4356b771767d77f6787d9b1102c77[m
Author: Eric Leblond <eleblond@edenwall.com>
Date:   Mon Jan 11 11:11:31 2010 +0100

    Fix typo in Makefile.am
    
    This patch fixes a typo in Makefile.am which was preventing
    'make tags' from working.

[33mcommit 9295193968a844e05cc8baaa5b6a48c9eba52676[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jan 13 19:34:59 2010 +0100

    Fixup unittest error output for RAW decoder.

[33mcommit c5d0b492d3fe4abc45e64c124a48533581c50544[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Wed Jan 13 11:18:09 2010 -0600

    small unittest fixes to decode-raw.c

[33mcommit 8a643213401e8474dd23c99bc7b2fcc58b666191[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Wed Jan 13 09:24:00 2010 -0600

    raw pcap support additionl ipv4/6 validation

[33mcommit 0c9f51498a56bc7368f7207baf74462ab02933a9[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Tue Dec 22 15:37:53 2009 +0100

    Small fixes at unittest helper functions and TestBidirec03

[33mcommit c80160b96d429c9d3816dcf7476bc3f33129fdd5[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Mon Dec 21 11:48:19 2009 +0100

    More examples of unittest helper functions usage reference

[33mcommit b6a3395c083cffe154afb8ab41bfd0c3e8bcbbc5[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Sat Dec 19 03:42:21 2009 +0100

    Adding unittest helper functions for building generic packets, checking arrays of expected match results, perform generic tests, etc. Look at util-unittest-helper.c and detect-ipproto.c for references

[33mcommit 095f2cf6ef404e97756c302890a3a4edfcbf0989[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Mon Jan 11 10:53:28 2010 -0800

    Consistency fix.. Xxxlog -> XxxLog.

[33mcommit e204d07717125b1be4884b3a1860e87f009713ce[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Mon Jan 11 10:52:30 2010 -0800

    Have output modules register themselves so run mode configurator becomes aware of them for purposes of being configured from the config file.

[33mcommit 9b90c553b53f6f4769de26e9a9c5cfc988264b6e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 12 19:45:13 2010 +0100

    Clean ip fields from packet as well when the packet is reused. Prevents issues with malformed packets that are rejected by the decoders before ipaddresses are set.

[33mcommit 27a138d8620ada0372c1bf27861fc38e54f08fb0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 12 18:14:20 2010 +0100

    Suppress some flow messages.

[33mcommit b0dcd02c1b0ad9764dca66708a7b6515d65c23ee[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Tue Jan 12 10:13:00 2010 +0100

    bug 56 patch

[33mcommit eb67bb442ee60be9295eed1faeb8268f8b049adc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 12 22:27:54 2010 +0100

    Fixup unittests that use buffers that simulate configuration files. They now include the YAML header.

[33mcommit 4e1acf5fd2219b14eca7b771c8f93b1839c5ffb8[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Tue Jan 12 10:03:33 2010 -0800

    Require that the configuration file begins with a valid YAML version. At this time this means the configuration file must begin with
    
    %YAML 1.1

[33mcommit 5e318aa342f01a7a5e8a98a408122c48e359a2ca[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Tue Jan 12 09:24:39 2010 -0800

    Fix issue 55.
    
    Don't process any key/value pairs until we've hitting a mapping.

[33mcommit c4f178f3d7cc599d32513a73aef9a02ce3390071[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Mon Jan 11 08:01:38 2010 -0800

    Do not seen_last unless the packet with more_frags=0 was actually inserted into the frag tracker. Fixes issue 53.
    
    Add unit test for this failure case.

[33mcommit fc5df7d0649acb601a9f5e0795ef8301962968a6[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Sun Jan 10 00:15:20 2010 -0800

    don't create a new tracker when frags are received in reverse order.

[33mcommit 40c514f2958b4a0ef66d783bdabf5b55f550d964[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Fri Jan 8 16:02:46 2010 +0100

    Fix bug in logging msg when using --init-errors-fatal

[33mcommit 5eb819b0f4e068583a4b7273277d43e644664814[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Fri Jan 8 11:01:16 2010 +0100

    Add signature line no. to error message when parsing fails

[33mcommit fae92f8d7bb6b2cc24c9a90e8a8117545f7e3294[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Thu Jan 7 18:07:56 2010 +0100

    Fix bug#30. Fix logging call from prev patch

[33mcommit 988dc5520bc244f10ba6512ca21656175ba4f032[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Tue Jan 5 18:21:00 2010 +0100

    Improve output when loading rules

[33mcommit 56556eb5507738d6215fe68fb33c9c1a35aa8f39[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 8 19:06:51 2010 +0100

    Set payload no inspect flag for packets with encapsulated packets as these are inspected separately

[33mcommit 9ececacda3d3a83692c3ef876e24671bbd084e4d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jan 8 12:35:10 2010 +0100

    Fix packet timestamp handling for encapsulated packets.

[33mcommit 4c83652ad3aaa8c09a97c15f2b968e728ae8ee65[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Thu Jan 7 12:42:44 2010 -0800

    initialize vars

[33mcommit c1283a66286619fd9ab92b819af5cf2aecedcd6b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 7 21:59:51 2010 +0100

    Fix app layer proto detection code not being thread safe.

[33mcommit fde948f488013f4a8911b10eb924f71848ae3f9a[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Wed Jan 6 09:32:04 2010 +0530

    bug 41 patch

[33mcommit fcabd1b2ba7c69458366d1a35567ae7cb190d0c6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 7 13:31:16 2010 +0100

    Fix typo.

[33mcommit cf95fa7c748394ba9687bba0e4160e7f911ad434[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Wed Jan 6 14:37:35 2010 -0800

    configurable outputs for nfq and pcap file.

[33mcommit a05436af8cc487ec52648d0e68c77401d7dc4dfc[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Wed Jan 6 14:20:34 2010 -0800

    Configurable alert outputs for PF_RING modes.

[33mcommit 844c444af1bd5792f483757bdfec77e70dcdcd3a[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Wed Jan 6 13:32:53 2010 -0800

    Use the configuration file to setup alert logging (and http logging).
    
    Only setup for the live pcap modes at the moment.

[33mcommit 13e10ccd8621d2726f5dc98c36a503dea00dbc75[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 7 20:27:44 2010 +0100

    Enable bytes per sec and mbit per sec for nfq as well

[33mcommit e45b626b24d007af1fa11e5d8e18f10c22a8f38e[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Jan 5 21:19:12 2010 +0530

    refactoring, tests for address engine ipv4

[33mcommit 1aabe6f7c15e9d101243ce394fad1b899f9ea28c[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Wed Jan 6 23:44:21 2010 -0800

    in the unit tests make sure memory allocated from the pool was returned.

[33mcommit 6547725b39b1d76b01fa23b68ff06ccce40ca8d3[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Wed Jan 6 23:35:26 2010 -0800

    consolidate more common code between ipv4 and ipv6.

[33mcommit 176c6e5668c75dc4fb0b482e65c095cf4455b31a[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Wed Jan 6 23:06:33 2010 -0800

    use a common insert method for ipv4 and ipv6

[33mcommit ccbf8bcae5083982d1e9d8b8058398721a8d914e[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Wed Jan 6 17:06:47 2010 -0800

    Use the V6 insert and re-assembly logic for IPv4 as well. Its a little simpler to track and update.

[33mcommit 9b74a2765e75c6beeb83c32f8c964c3cf74f4970[m
Author: root <root@kirby-laptop.securitytestsystems.com>
Date:   Tue Jan 5 09:23:41 2010 -0600

    64 bit portability

[33mcommit d7958f7983937f48f9f5a5ade0c6f2960ec2f993[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 7 00:35:13 2010 +0100

    fix wrong keyword name

[33mcommit 9ee6d6906f67edc6bff071c0e996a774a90ff7f6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 5 17:42:52 2010 +0100

    Add some safety checks.

[33mcommit 06a640e79435497139d6b8f1e4f8a862d37b71ed[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Jan 7 00:19:43 2010 +0530

    fix for bug #47

[33mcommit a83f7abcc10bac9fbb3303a87e7123b2e9d6c71d[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Jan 6 18:28:05 2010 +0530

    logging module bug 6 fix

[33mcommit 6b36e23e457375c9408036d85c62701a30556c6e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 5 11:41:30 2010 +0100

    Fix not decreasing the flow use_cnt reference counter in some cases from the app layer detection code. This caused some streams to never fully time out and thus clutter up the flow table and session pool.

[33mcommit c3269dbcb49ed52f734f24c16eb84e472c711761[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jan 5 09:44:59 2010 +0100

    Fix compiler warning in http method code

[33mcommit c22d42693afae6935f807d9c5ec576c6a4e3b78b[m
Author: Brian Rectanus <brectanu@gmail.com>
Date:   Mon Jan 4 23:26:57 2010 -0800

    Added http_method rule keyword.

[33mcommit 6814ea1a0f3498c1f3bf490722f2518a3b2dc87f[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Mon Jan 4 23:45:00 2010 +0530

    some more stream fixes

[33mcommit 94ae001dec05208d16d7337928d9bf0b229bb501[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 4 17:43:56 2010 +0100

    Fixup month displaying for the stats log.

[33mcommit 5e8413aeea77dda5c14126d4be90ee6cddc2c301[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 4 21:40:02 2010 +0100

    Don't scan more of a stream for proto detection than necessary.

[33mcommit a66c6752d522f80c8fab24440209c21ee9ece134[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Fri Dec 11 07:59:41 2009 +0530

    stream os_policy support

[33mcommit eea0e2a807c5098f980a5e5c7a8caadb735e76cf[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Dec 20 23:42:47 2009 +0530

    Radix Tree fixes/updates

[33mcommit 8f7cff1d539a4b361bf88aff1ea7a14943d710c8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 4 13:35:07 2010 +0100

    Fix compilation with -Wextra

[33mcommit b7bac140408d8342c5f010e3044567cb81db5466[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jan 3 22:44:27 2010 +0100

    Fixup code to compile with -Wall -Werror -Wextra -Wno-unused-parameter compiler options.

[33mcommit 4e1dc0bd8382d56e83c22cdcff3381530719cbc6[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Mon Jan 4 07:31:38 2010 +0530

    bug 41 patch

[33mcommit 567bbf604b43a5af20626e2c9a2911f547962316[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sun Jan 3 01:56:33 2010 +0530

    stream reassembling fixes

[33mcommit bea22d91ed7932fa3e35396bee72b90f212a1fc4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jan 2 13:36:00 2010 +0100

    Set default-rule-path in example config to /etc/suricata/rules/

[33mcommit 6520d42b4c253bda619aa1ffbf00f6b69260b2f5[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Fri Jan 1 01:22:30 2010 -0800

    Allow nested sequences.

[33mcommit d86282af9c7510e42ab5a3971a5b7c9636d0ca93[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Fri Jan 1 01:17:40 2010 -0800

    pretty up ConfDump output for when there is no valid prefix

[33mcommit 668b86cba412aa7f320ecb0d68b254250e051223[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Thu Dec 31 23:19:22 2009 -0800

    Fix issue 36. Give each unit test a fresh configuration context - helps tests pass when a config file is passed in, which can
    
    mess up the "expected" output, as this is testing loading
    values into the configuration system.

[33mcommit 749647a69da8a1bf9178d42ba1c4ce1cb5fa0197[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Mon Dec 28 10:51:39 2009 -0800

    use const

[33mcommit 5113636744386bd89e5d8f302527bc5a106e9533[m
Author: root <root@kirby-laptop.securitytestsystems.com>
Date:   Sun Jan 3 19:24:13 2010 -0600

    bind and bind_ack tracking

[33mcommit c7fb7fa26a1f7f69e141f6f3733759c833153106[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jan 2 15:25:23 2010 +0100

    Mention that libpfring 4.0 is required for our pfring support.

[33mcommit 1f09a88c93d4bab4c319530bb1366c0547afba69[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 4 11:01:54 2010 +0100

    Improve default-log-dir error checking and reporting.

[33mcommit 750600ab17549cb4eb90f130277dd76a33ac9462[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Jan 4 11:33:44 2010 +0530

    check for the existance of default logging directory

[33mcommit 8189f4d88e77710caa17767c86c72b2260711bfa[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Jan 4 10:29:16 2010 +0530

    Change error log messags to debug ones in the log modules

[33mcommit f5ef0cc3b84fc188d2e622862e80e48c134ae91e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 31 20:35:22 2009 +0100

    Exit if no classification.config has been found.

[33mcommit 9e5f7459c284523396f0f2e7020623decb1f01ea[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 31 19:53:30 2009 +0100

    Actually use classification msg

[33mcommit 447db74be8b7c55826b333d64a35c81ded3a21c8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 31 19:15:43 2009 +0100

    Update install doc

[33mcommit 2b66667a767015986698daaec180d002b5aeae38[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 31 19:10:18 2009 +0100

    Make sure we can't overflow our packet alert storage

[33mcommit 527d735500095a3d2eb48e76bef8aa34d2b82c8b[m
Author: Jason Ish <jason@desktop.unx.ca>
Date:   Thu Dec 31 09:42:52 2009 -0800

    Suppress these debug lines.

[33mcommit 9b422c443e8575b94719a8735354e910b52ff91d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 31 19:02:19 2009 +0100

    Fix up initialization and hopefully make the SEQ macro's fix up an 64bit issue we're seeing...

[33mcommit 18aa59b391cba863065aad5b3c8447b00ff07cd5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 31 16:07:54 2009 +0100

    Fix compilation and a small memory error.

[33mcommit f684989f981a43e00c98af80d58b437273b518dd[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Dec 30 14:53:47 2009 +0530

    dce_iface, dce_opnum, dce_stub_data keyword support

[33mcommit d284f0d3330da6e670bcd35530cd9eed87cf53d1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 31 17:32:25 2009 +0100

    Set default classification file location in the config file.

[33mcommit ecab1fae369476cd7adf04037ffc31d44200d20b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 31 17:10:14 2009 +0100

    Remove contents of VRT classification.config.

[33mcommit 011b74df63aad0b2e78ff18b3f988a13147476f8[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Dec 14 18:28:37 2009 +0530

    Modify the classification config tests to use the buffer than a temp file and also fix an invalid free

[33mcommit bc4df59414195b4cabe40024f91cb98f4f128fdd[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Oct 16 16:34:53 2009 +0530

    Support for Classtype keyword and Classification Config file

[33mcommit f0be69dcd0b4f510aa75647c0e43e2db44c34ff8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 31 15:48:19 2009 +0100

    Fixup smb/smb2/dcerpc wrt loops, debug printing, style.

[33mcommit 4c2782e9716e0e088ff2b8c40a5500962d87d7a8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 31 15:24:57 2009 +0100

    Improve depth and offset setup error reporting

[33mcommit f6f0ad94cec32590f2c5e3ca9099dc000d5d0672[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 31 15:16:12 2009 +0100

    silence a debug statement in the msg handling

[33mcommit d5c732f1f978dcb5454f6081d077192bd91627fc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 31 15:13:36 2009 +0100

    Add tag keyword stub

[33mcommit b2adf3159514721f1aceb40e6c97aa1a66a120a0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 31 15:05:58 2009 +0100

    online abort() in stream reassembly if were in debug mode

[33mcommit ef6ab4efa0d980c521550a53ece2f169d1fb48cf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 31 14:55:50 2009 +0100

    Add pcre negate support.

[33mcommit 1d553c940beb7e553c140e2eaf8da605da7a9ba6[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Tue Nov 24 21:00:57 2009 -0600

    failing unit test showing negated pcre treated as nonnegated match

[33mcommit 040e62f3ec77fc710eebb3f772f74bb1269f4eed[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 31 14:13:13 2009 +0100

    Fixup noisy debug statement

[33mcommit 7b2610ba1ff69a8dadcc56f6ac54bdf547473799[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 31 14:10:28 2009 +0100

    Fix extra spaces confusing content and uricontent.

[33mcommit a19fbf22e25b443b26f7216eb0abbae8477aecfb[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Thu Dec 31 08:37:22 2009 +0530

    bug 29 patch

[33mcommit ae94b102cbb61cc9e821a5cc9ba795daf43943b9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 31 13:03:37 2009 +0100

    Improve distance/within/nocase handling, sig parsing error reporting.

[33mcommit 4862488dacac8bfca478ef9fb4790d74f2496649[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 31 11:47:02 2009 +0100

    add version output, -V option

[33mcommit 6beee776ca0317b2945751cd3b1578515cf70d36[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 31 11:05:53 2009 +0100

    Move rand seed code into util-random

[33mcommit 6224c305486080f18518d8c463fb2fe5178b9d89[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Thu Dec 31 02:22:06 2009 +0100

    Adding preseending to rands

[33mcommit b2ee78078845334cc050fa58ddd07fdab4794662[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Thu Dec 31 00:40:52 2009 -0800

    "last" policy for ipv6

[33mcommit ecc50b8b2f2fc0782d0431adc45eb044d96ae685[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Wed Dec 30 16:23:14 2009 -0800

    add first policy for ipv6 frag re-assembly

[33mcommit d9380a8cb5d865617b90a43ba74fef1923472459[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Wed Dec 30 16:08:41 2009 -0800

    solaris policy for ipv6

[33mcommit ce20c336341ba15dd3dba8c6305bd176bb24c8e3[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Thu Dec 31 01:29:55 2009 -0800

    multiline rule support.

[33mcommit 23aa6cf6425661e678da882e46bfed19bc04b764[m
Author: Will Metcalf <coz@coz-desktop.(none)>
Date:   Wed Dec 30 22:27:40 2009 -0600

    more fixes for exit on sig init failure

[33mcommit f2b1e66a6a4105c182f3f46f89d0faefa971d653[m
Author: Will Metcalf <coz@coz-desktop.(none)>
Date:   Wed Dec 30 22:09:28 2009 -0600

    fixes for init failure stuff

[33mcommit 87a435cd0d431a60b6c842d7adae05c44784dd13[m
Author: Will Metcalf <coz@coz-desktop.(none)>
Date:   Wed Dec 30 21:55:01 2009 -0600

    updated to include more rulesets more sane vars

[33mcommit 778228d1c559dcb502f769190a95d1233d57d677[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 31 10:32:40 2009 +0100

    Flags keyword fix. Fatal init fix.

[33mcommit ac03873f5da56b149fb6974d7da5dfe297d683b4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 31 01:56:27 2009 +0100

    build update

[33mcommit c49785fbd09d4ea158e711b95a892ac56b3f131d[m
Author: Will Metcalf <coz@coz-desktop.(none)>
Date:   Wed Dec 30 17:09:23 2009 -0600

    configure.in update

[33mcommit fcc6b4263c6b08dc1dbb71f20421d8fd40619cca[m
Author: Will Metcalf <coz@coz-desktop.(none)>
Date:   Wed Dec 30 17:16:00 2009 -0600

    import of gplv2 LICENSE

[33mcommit 35e884f30353097895765bb59be23ca564764fb2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 31 01:43:34 2009 +0100

    Make sure offset modifies depth.

[33mcommit c63b1e0f6784cdc7b299f5a635f0ac4e4b6521b9[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Tue Nov 24 21:58:03 2009 -0600

    failing unit test depth doesn't take into account offset

[33mcommit cc3c1779cd835758e2d8dc5ee7d90ca839d5598d[m
Author: Will Metcalf <coz@coz-desktop.(none)>
Date:   Wed Dec 30 15:59:56 2009 -0600

    more project name updates

[33mcommit 9bbe43c01922e2fffe36c6051c9bec5a8336f384[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 30 22:47:54 2009 +0100

    Fixup calculation of the minimum scan pattern lenght in some cases.

[33mcommit aa736b01d661878b8a5af1ce178a5a0625064593[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 30 21:49:18 2009 +0100

    Fix thresholding coding changing unlocked and supposed to be static memory areas.

[33mcommit c969294fef84d49e31c42c0c11eadb436e17fc6a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 30 16:28:44 2009 +0100

    Make sure icmp rules also apply to icmpv6

[33mcommit 8cfdf6c666c409629d096345a3682c11373f075b[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Wed Dec 30 20:21:25 2009 +0530

    bug 18 patch update

[33mcommit b92886a79ab394d11a29216718f9766cd3cf96a2[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Wed Dec 30 16:51:20 2009 +0530

    bug#18 and some minor changes

[33mcommit 542a43437ee445aeba905268e622a875f5dbf60d[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Wed Dec 30 19:30:06 2009 +0530

    bug19 patch

[33mcommit 0e83759ed42bcdb6c70c4125a50474980e06eb84[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Wed Dec 30 14:53:13 2009 +0100

    Small fix

[33mcommit 1d12de9500fe0ab59b405a7a6d5020ac8a283872[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 30 14:47:27 2009 +0100

    DetectContentChunkMatchTest11 is no longer expected to fail.

[33mcommit 18441c2be70cc63218773ba14c6135b5193f6dba[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 30 14:21:38 2009 +0100

    Fix broken pattern len compilation causing certain patterns to no match when they should.

[33mcommit 0ab9adabd41bead92f5c593b14c550700493e85c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 30 14:46:29 2009 +0100

    Test PortTestMatchDoubleNegation is no longer expected to fail.

[33mcommit 0a699857d6c70c72a9ffe39fc392198edb1bb0ba[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 30 14:42:48 2009 +0100

    Fix negation for addresses as well.

[33mcommit 50c07f99019801962320c91582cf6d99c1489733[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 30 14:37:17 2009 +0100

    Fix wrong negation of ports.

[33mcommit 10cc9d5b6adc7da7d32d0293b6a9ef77f1b4f0e6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 30 13:10:58 2009 +0100

    Add icmp flow handling.

[33mcommit 71ed2d38f5fe6062b3a2ca63343548c069914da5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 30 00:28:19 2009 +0100

    Fix scan patterns sometimes not being added to the scan ctx. Should fix bug #9.

[33mcommit c40e81d42be6f9febe538daec8d978fc937c7888[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Wed Nov 18 21:41:14 2009 -0600

    failing unittest rules with same content match fail

[33mcommit a8116f65c82b95128e1e829668468f56158262ae[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 29 16:35:58 2009 +0100

    Fix packet flags field not being cleared properly when the packet is being reused. Add some debug statements and cleanup some.

[33mcommit e2376948ddb83c73a65875273c3bb30df27ee844[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 29 13:31:51 2009 +0100

    Clean up smb/dcerpc code

[33mcommit 48cdc8e0fd700789a885dad1b8287308fda53f97[m
Author: root <root@kirby-laptop.securitytestsystems.com>
Date:   Tue Dec 29 00:36:55 2009 -0600

    DCERPC BIND work

[33mcommit 9d55a41e49a2d15a8deeadc7bf715e46bda97af0[m
Author: Jason Ish <jason@desktop.unx.ca>
Date:   Mon Dec 28 16:06:31 2009 -0800

    Windows and Linux policies for IPV6 frag reassembly.

[33mcommit 4824868766ce16c44656c56ae8f34563acda3fdf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 29 12:10:44 2009 +0100

    Application layer detection improvements
    
    - improve locking of application layer handling, making sure that the flow cannot be freed/cleared when the detection engine is still working with it.
    - add a check to the app layer detection to make sure that a match function will only inspect an app layer state if it's of the right type.

[33mcommit 310a1822175b0b6b0f049b724aac215ebe213c31[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 28 16:48:18 2009 +0100

    Fix signatures not being initialized properly

[33mcommit 6fe5509617d21cfe43dd17900f601d85959af630[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 28 16:13:17 2009 +0100

    Fix compiler warning when using HTP rev 68.

[33mcommit 79b15bd1ccc714ed8908a5eb0560b733285ad840[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 28 14:38:59 2009 +0100

    fix typo

[33mcommit 53041eeb67404a4fb722e8fdc9f4d8b441c46a6c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 28 14:36:48 2009 +0100

    Small cleanups.

[33mcommit 8cc792a3c70b5f3ec723c52b43a1cd1b908cc79b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 28 14:34:06 2009 +0100

    Fix potential deadlock in http cookie match.

[33mcommit f729d6f7b330e7a03fc228bc15d5d79c19b81a0e[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Fri Dec 11 11:42:41 2009 +0100

    Changing some more printfs with logging api

[33mcommit f2f9b8328053b5e0cb22cdec39ac017a7ac3e2d3[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Fri Dec 11 11:25:39 2009 +0100

    Adding FTP app layer parser and ftpbounce detection at L7

[33mcommit d35dd1c4ea7f102e7b70b40017a0e1e250dff0cd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 28 13:58:19 2009 +0100

    Improve http cookie htp state checking before using it.

[33mcommit 6f76ed680409381fc1f770c18440fa7a5d8fd493[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Mon Dec 28 02:52:41 2009 +0100

    Match content fail when two contents are specified in the same rule and the last of them has length = 1

[33mcommit f8edb74439c0b536fe6bbc3a92e86670b414de37[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Dec 28 11:04:07 2009 +0530

    double port/address negation is parsed incorrectly

[33mcommit 6ab64706b0c939fcb9efceb6cc646e99bb963bdf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 28 14:19:50 2009 +0100

    Improve threshold hash table handling.

[33mcommit 8c8b8596c81cc762630d5472158ad8eb7191d244[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sun Dec 27 19:38:31 2009 +0530

    fixed bug 18

[33mcommit 8287ebe12c880480cfed88e47ea1bee3db45aa42[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Fri Dec 25 07:45:21 2009 +0530

    bug 21 fixing patch

[33mcommit 4d430060d284d412268c57daf814c51fb9f09190[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Dec 27 17:53:14 2009 +0530

    fix for unclear error messages bug 15

[33mcommit 47ad1e5b2e1527a37114e722105bea43f2d83386[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Dec 25 18:30:02 2009 +0530

    detect-engine-address.[ch] refactoring

[33mcommit 2c0345f55ebac84d9ce4b1938f177eb4d1720c98[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Dec 27 10:10:49 2009 +0530

    Fix for Unified Alert Test Bug #14

[33mcommit 7e87f373b98eff2380c20c8f32cbd2e8137d399d[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Tue Dec 22 16:44:15 2009 +0100

    Add icmp_id keyword support

[33mcommit 01976a0b74ee3c6db50804493e1baf3fd0ac6766[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 23 17:00:26 2009 +0100

    Support for sigs with both pkt and applayer detect
    
    Sets a flowbit with the sig id if the packet matches match. Checks
    on that if the app layer matches match. Currently misuses the
    flowbits api for this in a way that needs fixing.

[33mcommit 493715c0d22fd5445d03d48688ce10f9171d757b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 25 17:27:48 2009 +0100

    Implement alert sid storage in the flow so we can check previous alerts in the flow.

[33mcommit 9fd46e9425454cae409819712a7cc49a53ed9b93[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 23 17:00:26 2009 +0100

    Support for sigs with both pkt and applayer detect
    
    Sets a flowbit with the sig id if the packet matches match. Checks
    on that if the app layer matches match. Currently misuses the
    flowbits api for this in a way that needs fixing.

[33mcommit 0419ad7c9a3be36ce4c1ee03c0112e0758052b4b[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sun Dec 27 17:41:15 2009 +0530

    fixed 23 bug

[33mcommit 4f843ff8e9e8dc34cbb797115437164c8c5bbe39[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 23 23:12:06 2009 +0100

    Improve matching of packet and app layer sigs.

[33mcommit 992aaa3d79465168c286263981973c2b5360bfb5[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Tue Dec 22 19:25:37 2009 +0100

    Small fix on SigMatchSignaturesAppLayer() and SigMatchSignatures()

[33mcommit 459a823a09389af2737ff58c72eb8f4dbf33e497[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Wed Dec 23 21:02:15 2009 +0100

    Reutilize the filename buffer and avoid malloc's

[33mcommit 5f59def86a8d122c9895760f36709396efd566e0[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Wed Dec 23 20:36:39 2009 +0100

    Force reset size_current to 0 after rotate

[33mcommit fdb1c9c4f2c7bf734153f71bd90e6d3e0230d4b5[m
Author: Jason Ish <jason@desktop.unx.ca>
Date:   Wed Dec 23 12:58:46 2009 -0800

    cleanup warnings.

[33mcommit 6cc0771d6f11c62a2e8086858042ff3cbb794240[m
Author: Jason Ish <jason@desktop.unx.ca>
Date:   Wed Dec 23 12:49:10 2009 -0800

    - Fix memory leak error when freeing node.
    
    - Cleanup ConfDump output a little.

[33mcommit 4c79e6d5b6ceece2e4763267fe8711cfa1d69adc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 23 21:48:59 2009 +0100

    compile fixes

[33mcommit 28cad3429c3a1b53745757c58ff5deb3f38a4bfa[m
Author: Jason Ish <jason@desktop.unx.ca>
Date:   Wed Dec 23 00:55:22 2009 -0800

    An example of how logging could be configured from the log file.

[33mcommit 90c46ee2c96db7c056e3b9719dd5e98437c0aaed[m
Author: Jason Ish <jason@desktop.unx.ca>
Date:   Wed Dec 23 00:53:09 2009 -0800

    Add the ability to lookup a child ConfNode, or just the value of a child ConfNode.

[33mcommit 59ec05645fa186c4f91150ba464997a37868318e[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Tue Dec 22 00:40:55 2009 -0800

    Index sequence items - allows us to store sequences of mappings in the configuration database.

[33mcommit 0a85fd6787d748ee8aa17304684f1de8588c6fe1[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Wed Dec 23 13:23:24 2009 +0530

    htp error fixed

[33mcommit d8433c72558ce7772da4e18a9bc9b4cc016b4eb7[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Wed Dec 23 04:27:31 2009 +0530

    fixed-pool-error-and-tcp-state-transition

[33mcommit 53e3e6dee848c37277005e93a2a3d923eee65ae8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 22 10:11:09 2009 +0100

    Fix compilation after suricata rename.

[33mcommit 7473f716bda277dc44bba53030ab8920db9dbc89[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Mon Dec 21 13:38:00 2009 +0100

    Improving error report on runmodes and daemon compatibility

[33mcommit 5471baf8f4ca0e286059e3334468233c94de5f40[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Fri Dec 18 14:51:35 2009 +0100

    Change case values to their corresponding enum values

[33mcommit e917065e269b377a0f501fa775bd63f4bd1b6033[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Thu Dec 17 12:42:52 2009 +0100

    Add support for daemon, checking for valid combination of modes

[33mcommit 8490208ba108fac00727d5537bff33438e1484da[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 23 20:55:09 2009 +0100

    Fix bug fix

[33mcommit fa5dbaeb1da46029ad432636b5095d30bc4b0b90[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 23 17:59:09 2009 +0100

    Fix segv when testing for sid 2002181

[33mcommit 69eb869cc9027282e8faa7eca2ce55d4c557b0ff[m
Author: Breno Silva <breno.silva@gmail.com>
Date:   Tue Dec 22 22:40:04 2009 -0200

    Threshold Rule

[33mcommit ecf86f9c23017bc1f7b30f3762a1042266a33de0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 21 13:25:58 2009 +0100

    Rename to Suricata.

[33mcommit 71a77bf8d671add9a33c7fb385e4a33e93fd6fe9[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Thu Dec 17 21:49:41 2009 +0530

    removeh http_cookie flag

[33mcommit 85f054cac205d2101ad96eef94824ff033b0dfe7[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Thu Dec 17 15:31:44 2009 +0530

    changed to DetectHttpCookieData

[33mcommit a0f184866cc3e4df6bc8b4ae1afd12b2231283f9[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Thu Dec 17 12:56:46 2009 +0530

    http_cookie keywork support

[33mcommit 18fe3818dc29fd92828af45d93a17a2e479acc16[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 21 11:40:51 2009 +0100

    Remove need_lock from app layer parsers.

[33mcommit 7e2408d27380be6031cb6c45ab4b62a378668f3a[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Sun Dec 20 21:29:54 2009 -0600

    FreeBSD correct arch specific gettid defs

[33mcommit 7ce586bc778c951e0b3c1e6343e236c18d5cc526[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sat Dec 19 18:07:39 2009 +0530

    updated htp error info

[33mcommit e6a8c5f713149034f793d1c20aaa143592c59b79[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Dec 20 16:17:03 2009 +0100

    updated config.h.in

[33mcommit ed856de9ef3fc200e09e78c540045eb62e0f6221[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Sat Dec 19 22:24:17 2009 -0600

    small fixes to htp detection in configure.in

[33mcommit ba7e8012af25dd35b33477a94c8e0edce8249c69[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Dec 20 15:36:53 2009 +0100

    Add some debugging and simplify locking for app layer slightly.

[33mcommit fc2f7f29fa32753dca29bc93c6f312aa6264fc59[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sat Dec 19 15:28:03 2009 +0530

    app layer htp error handling and fixes for memory leaks and segv

[33mcommit aa653157bf34b9ecfa3d4456f8e93179e3833732[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 18 10:53:52 2009 +0100

    Convert stats printing in nfq to logging api.

[33mcommit e5301effe6548070f83098772f269a6f1bc12f4a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 17 13:16:42 2009 +0100

    Make nfq module use logging api.

[33mcommit a67bd2457b2c4aab060cdf15d988d91bb90f19ed[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Thu Dec 17 21:56:19 2009 +0100

    Loading rules from config support

[33mcommit 3233888c65d5834784db6fab7a929dc8fdda1176[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 17 10:13:56 2009 +0100

    Disable noisy debugging statements

[33mcommit 73bdc8a5c348da3ebb8f331d43b15950ace66b59[m
Author: Kirby Kuehl <kkuehl@kirby-laptop.securitytestsystems.com>
Date:   Wed Dec 16 12:08:23 2009 -0600

    fix unittests

[33mcommit c20bc683677fb027cd2e43d6f8322666e860ef18[m
Author: Kirby Kuehl <kkuehl@kirby-laptop.securitytestsystems.com>
Date:   Wed Dec 16 10:02:46 2009 -0600

    readandx and writeandx parsing for smb

[33mcommit 57331ea2a2bb3bdedb84d28e33857ff612cd87b2[m
Author: Kirby Kuehl <kkuehl@kirby-laptop.securitytestsystems.com>
Date:   Wed Dec 16 09:45:54 2009 -0600

    add smb2 proto and smb, smb2, dcerpc unit tests

[33mcommit 0d92f0018bd510e2120eef0550b1601462d98453[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Tue Dec 15 23:45:15 2009 -0800

    First cut at IPv6 re-assembly. Only BSD policy for now, packets don't actually get passed to it yet though.

[33mcommit c816af822e8e7e149a026d501b9678be8e571722[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Wed Dec 16 01:29:40 2009 +0100

    Adding support to load rule files from config

[33mcommit 7642e53f0690ad677b4c6749ea231d0b5e3f3db8[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Tue Dec 15 17:33:25 2009 +0100

    Fix warnings from previous patch. Add info to usage output.

[33mcommit b254719ffcce64c81acfd423cf582875b0595b11[m
Author: Gerardo Iglesias Galvan <iglesiasg@gmail.com>
Date:   Tue Dec 15 16:53:42 2009 +0100

    Add fatal failures on unittest and siginit failure (using Conf API)

[33mcommit 658eac28254fd7ecea9a9afbdfa71a98e934fa12[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Tue Dec 8 18:44:20 2009 +0100

    Adding max pattern length for bidirectional operator. Please, use DetectEngineAppendSig() at the unittests. Look at the bidirectional operator unittests for a usage reference.

[33mcommit 1ad6d75dfe04c9ea8ecc87939cf19b0ebbeda4cc[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Thu Dec 10 13:05:01 2009 +0100

    Added rpc keyword support at packet level

[33mcommit d388444ac33c09c1ecf23d651ac2ec45568169bb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 8 15:15:20 2009 +0100

    Use updated mutex calls.

[33mcommit ad3e463974c60ef58520563f3df2996b50a683ec[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sun Dec 6 08:45:35 2009 +0530

    updated error info ouput

[33mcommit cd0de89bd46355ed8f890a5d574d5569ff3127a9[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Dec 2 11:51:53 2009 +0530

    Fix for handling negated content "\!CONTENT"

[33mcommit 16d2bf6b8e64709356343642f289614ac61bfd55[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Thu Nov 19 14:57:01 2009 -0600

    unit test showing flags:0 alerting when it shouldn't

[33mcommit 0acf472392930b90888a00b251a275b83fcc932d[m
Author: Breno Silva <breno.silva@gmail.com>
Date:   Fri Nov 20 17:56:02 2009 -0200

    Flags Issue

[33mcommit ec1cb9c0db4884fb745cf200ea25d5c8e29d0e77[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Sat Nov 14 17:08:11 2009 -0600

    more invalid netmask fixes and unittest

[33mcommit d5c11f7abdd2fb15331179b17128c88703e91f1f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Dec 5 13:52:49 2009 +0100

    Make engine initialization a bit more quiet.

[33mcommit eaaf0bd61c955a7d073862001d589c4d4af8bed4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 4 15:41:58 2009 +0100

    Use correct mutex call in flow-vars code.

[33mcommit 43a1ae9a4b58b17f43c06bbfdfcfe417c76bdfc7[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Mon Nov 23 13:07:48 2009 +0100

    Changing some printf to SCLogDebug at flow vars

[33mcommit c6c7742464c25efe6e03f539f39a743b78b2ea6e[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Mon Nov 23 13:04:18 2009 +0100

    Added support at Flowints for keywords isset and notset

[33mcommit a8d7b71490977a8fcfdd906aac754a9eb7ed2a31[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Mon Nov 23 11:20:56 2009 +0100

    First version of flowints

[33mcommit 1b39e602d0d703a60f75841fa290dfd58b2654a4[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Fri Dec 4 08:15:51 2009 +0530

    fixed port info

[33mcommit 991d42139432848cc1a710d136627098edfaadf9[m
Author: Gerardo Iglesias <iglesiasg@gmail.com>
Date:   Thu Dec 3 16:18:29 2009 +0100

    Changed printf's to logging API functions

[33mcommit e26833be3fa8ea03eee04eaefcbddf8d787f67bc[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Fri Dec 4 12:41:11 2009 +0100

    Changing mutex/spinlocks/conditions naming types

[33mcommit 406ee2ce70d44447d56bc0dfb81cdc3c5c69d3d6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Dec 4 10:58:49 2009 +0100

    Use new threading calls in htp code.

[33mcommit 769022f4be34ee1f89a3d8daf13e9dce0109bc95[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Sun Nov 29 22:12:11 2009 +0100

    Adding support for Mac OS X, FreeBSD, centrailizing mutex/spins/conditions in a macro API, and some unittests

[33mcommit 4cae27522dd8f1c2deb11325a588ae8340e9224b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 26 16:39:38 2009 +0100

    Fix http module warnings.

[33mcommit 2d6cf71d3735588104aa22384f8110ab1f12acb9[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Tue Nov 24 13:06:06 2009 +0530

    added htp unit test

[33mcommit 08328f9dfb9dc6fd748bddbdb881cb2dea0a2701[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Mon Nov 23 17:10:49 2009 +0530

    changed to LDFLAGS

[33mcommit 07f7ba55b88a78a3a53f32e6f8769747e1aa2abf[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sat Nov 21 15:59:59 2009 +0530

    initial support for HTP module init

[33mcommit 6e9b582be6056ecbee6658061c2ca40242c717c4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 3 15:30:26 2009 +0100

    Fixup rebase typo.

[33mcommit 9b67ae45c1caed75d7fc114e9834081025bad311[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 3 15:03:55 2009 +0100

    config.h.in autoreconf update.

[33mcommit c1e485cc444c29aa8edfc5a0b9a646f8e32d5a94[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Thu Dec 3 15:38:17 2009 +0530

    app layer error handling

[33mcommit 43fb771268d5ebe61f0781befcef60af76ffe703[m
Author: root <root@kirby-laptop.securitytestsystems.com>
Date:   Wed Nov 18 09:49:44 2009 -0600

    smb2 work

[33mcommit 0f5f82efeeced12d730d0dfe3e26154c4473ecde[m
Author: root <root@kirby-laptop.securitytestsystems.com>
Date:   Fri Nov 13 16:17:27 2009 -0600

    smb2 work

[33mcommit 74667e697ad3f72a4064dbce44eabda4035127f8[m
Author: root <root@kirby-laptop.securitytestsystems.com>
Date:   Tue Nov 10 12:50:41 2009 -0600

    better smb parsing

[33mcommit 2213ff933f47ee52e3737ff927580596e7adf92b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 26 17:28:45 2009 +0100

    Compile fix.

[33mcommit 44083b650519afe4650d15783a2ceefd64972bf0[m
Author: Brian Rectanus <brectanu@gmail.com>
Date:   Mon Nov 16 20:36:13 2009 -0800

    Fixed warning in detect-content.

[33mcommit 6134243cc6d02044cef394fe22567bc586487ab9[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Tue Nov 24 22:04:47 2009 -0600

    shellcode ports var should be negated

[33mcommit 91407e0938f29574acdcf70ea924ada739819d11[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Tue Nov 24 19:28:52 2009 +0530

    fixed DetectByteTest bug

[33mcommit 6206ffb5308d70e5b529ea93e9cc93ff75853052[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Thu Nov 12 12:05:41 2009 +0100

    Adding bidirectional operator support and unittests

[33mcommit c552ccbd93ece809b7d8e19829f44efdc0a348ab[m
Author: Breno Silva <breno.silva@gmail.com>
Date:   Fri Nov 20 14:47:11 2009 -0200

    PCRE O Modifier

[33mcommit 574bcea09d47bb57a899791b6b1c85d2fed41d7c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 23 16:35:33 2009 +0100

    initial version of better error checking/handling in the app layer code

[33mcommit 09dd7889a1eb3b5366379be6b9be78fda2c81323[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Nov 15 13:38:56 2009 +0100

    TLS: small updates to the tls parser
    
    - small updates to the TLS parser after merging Gurvinders TLS work with my work.

[33mcommit 2cfa284999ce89617f0878f2942587a8616b2259[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 11 20:28:36 2009 +0100

    Fix app layer detect to actually work.

[33mcommit a1d33e2d0b818f4218e1cd87540471e86d2181ac[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 2 17:05:25 2009 +0100

    Compilation fixes after merge.

[33mcommit 7cda445c494f2debae1d2f6a404122d1f6e49864[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 26 10:41:19 2009 +0100

    Add unitttest.

[33mcommit f1f7df076680f520d0cbbdead820b9b3486c5cc8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 25 09:00:37 2009 +0100

    First iteration of doing app layer detection.

[33mcommit f31d8e044479eeb9ad69c0547ca81ba9f2158e4b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 12 17:32:53 2009 +0100

    TLS no inspect: fixes and cleanups
    
     - use byte extraction functions for getting the msg length
     - cleanup the parsing routines for multiple msgs
     - add unittests for multimsg payloads

[33mcommit a16e7b745513176eea6ca2bea8a55425c5a2c415[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Thu Nov 12 15:57:20 2009 +0200

    tls no reassembly support

[33mcommit 54b9663cd19683363345795850d2146119d9bec3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 12 14:26:43 2009 +0100

    TCP streams: support falling back to 3WHS when we were led to believe we were in 4WHS mode. Add unittests.

[33mcommit 2af6ed0c8c52e0e265a532974611d8daacb9db4d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 11 22:35:13 2009 +0100

    Support newly reported 4WHS TCP setup.

[33mcommit af136656847cd09e52503a53a270fa2df3cd2872[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Thu Nov 12 11:12:57 2009 -0600

    failing unit test where fast_pattern rule and non-fast_pattern rule inspect same payload

[33mcommit 45acb64a614c5c60e6fef1f214475f3d923baf6b[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Nov 13 16:01:53 2009 +0530

    Bug fix for fast_pattern - bug #8

[33mcommit 5c3bbb8d6127f1d51981d64b50109ee6eb84c9f3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 13 18:09:29 2009 +0100

    Time handling: improve time handling in unittests
    
    - make sure before each unittest is run the time is reset
    - add functions to set the time to current time and increment the time
    - convert alert-unified* Rotate tests to use them
    - convert time based counters to use them
    - use GetTime instead of gettimeofday for creating the unified* filenames

[33mcommit a64af4adca9d3ac34f2507e768357ce5a6af6060[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Fri Nov 13 01:10:26 2009 +0100

    Forgot to add this file

[33mcommit 15855e11f35fcec2d963a647f6c2187f767b4f64[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Thu Nov 12 22:55:56 2009 +0100

    Fixing alert unified log file rotation. Adding unittests

[33mcommit 98b9009b24588639bd6416fa2545e4ad0dbbfff3[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Wed Nov 11 15:22:49 2009 -0600

    added --enable-gccprotect to optionally detect and enable compile time protections

[33mcommit 746d12071e68dd0bbd2f5f4e0823b9f401e61e16[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 10 17:31:34 2009 +0100

    Fix merge artifacts.

[33mcommit 0db1d01b0cc61af61f6d46b9728f1b5f1aa9797e[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Fri Oct 30 10:00:50 2009 -0500

    port space negation notification

[33mcommit 3f23f52c5237255c90e889af950e9a62fcbf206a[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Fri Nov 6 12:22:37 2009 +0200

    Fixed FlowTest01 and StreamReassemblyTest30

[33mcommit d2765511ce8f66256fa044b1aab6ddd363a57c54[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Thu Nov 5 20:13:13 2009 +0200

    async stream handling support

[33mcommit 88497ec539e4f1885733be1de7787ca355478188[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Sat Nov 7 01:03:00 2009 -0600

    detect-dsize regex doxygen logging subsys changes

[33mcommit bb8a84d9674280a265fd30d1c05c41304b5657eb[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Nov 7 11:20:57 2009 +0530

    todo comment update for address and port parsing

[33mcommit 621c8dd921bf22a0be5dcd63491cddc08cb99c03[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 10 16:22:37 2009 +0100

    Make sure we don't sleep to test time lapses, we can modify the engine's time internally for that.

[33mcommit 30a7ea2141b70b806fb91554b9fab22ea99ab8c6[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Nov 7 13:09:47 2009 +0530

    adapted counters to use util-time.[ch]

[33mcommit c8b423578a18e434b6230dd8dd3a44bea5dd9ae0[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Oct 13 10:12:41 2009 +0530

    Updates for counters time based patch

[33mcommit 8beef4a9fcc62fa1544d77bbf36240b80e145d67[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Oct 5 18:53:43 2009 +0530

    stats upgrade. Added interval counters to the decoder module

[33mcommit ceb7e495ae68bf8f8ef640a015ec66318f604d18[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sun Oct 4 18:54:51 2009 +0530

    refactoring perf stats code

[33mcommit fdf8943dfb9c66c5472d0856ecbb19cfa2661375[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 10 14:20:04 2009 +0100

    Remove a few commented out code lines.

[33mcommit 8c9df4cd6b4d2891484b21b3269d2626c9c3c19e[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Nov 6 15:40:30 2009 +0530

    modifications to PatternMatchPreprarePopulateMpm to fasten fast_pattern processing

[33mcommit bb5bd910452f3e3efbbdaa444ffcd523fe30c319[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Nov 3 20:59:37 2009 +0530

    Support to get the last sigmatch of a particular type. To be used for content and its modifiers

[33mcommit 7a10ddc07b46bc2a14f0d21213cb33e6dbab1091[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Oct 16 18:09:52 2009 +0530

    Fixes for the fast-pattern tests and a couple of other minor changes

[33mcommit 6ca5dbc9e93d5af306a48ca86ee7bd67b8fbfade[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Oct 12 21:05:28 2009 +0530

    Support fast_pattern modifier keyword for content

[33mcommit 07bcc8cc9a3486659a8806b56e8770af0e3e8d59[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 10 13:50:59 2009 +0100

    Fix signatures with ports and/or addresses but without sigmatches.

[33mcommit 50b2e381e08b164f026fb61a0ad1586e376e497a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 10 12:59:00 2009 +0100

    Set the DETECT_CONTENT_WITHIN_NEXT and DETECT_CONTENT_DISTANCE_NEXT flags on content chunks if appropriate.

[33mcommit a004724aea69d867a57be4185f4903c03100dd97[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 10 11:37:25 2009 +0100

    Add some debugging code

[33mcommit dd232fcd6e1485d1686783cec6f875cf9b59c290[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 10 10:49:46 2009 +0100

    Fix debug compilation

[33mcommit 1c7ac13c2500b7f948d92f276b0fa825f622bd74[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Nov 10 10:05:47 2009 +0530

    Support for negated content

[33mcommit 6346d1ddcfba76608556d85634ae11725dce8219[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 9 18:57:52 2009 +0100

    Add function name printing to the default output while we're still in development.

[33mcommit 0aaf60331716dd9bc65585c43a83ad43b2c7459b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 9 18:54:52 2009 +0100

    Fix another case where distance/within checks didn't fully work as expected.

[33mcommit ce3abca399fc1c6ba99ae816f60cd8a5a0791fbf[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Sat Nov 7 23:39:00 2009 +0100

    Adding some unittests (one of them dodoesn't work but should)

[33mcommit 84411f73c397d2fa0cf59bed3a4a96da161d6ed4[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Sat Nov 7 23:20:27 2009 +0100

    Commeting out a unittest.

[33mcommit 9a3c21fbf3ba34f2357e4b25735978694d929527[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Sat Nov 7 23:19:22 2009 +0100

    Updating real unittests. Small fix on TestWithinDistanceOffsetDepth to skip to the next DETECT_CONTENT SigMatch. Adding some checks on within/distance setups.

[33mcommit 241db64dd768255ee9fc99a969b05220f1af3a32[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 7 20:00:32 2009 +0100

    Fix a few memory issues.

[33mcommit 7e4377224ad0baed25207cc2c69d3a3c6781abcb[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Fri Nov 6 19:52:19 2009 +0100

    Small fix at detect-parse.c, need to continue with MatchTest05

[33mcommit f233f9fa31053332289f8fa68573e52f10cb3c54[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Fri Nov 6 17:51:05 2009 +0100

    Adding detect_content chunks handling for max_pattern_length and unittests. Updating modifiers to use it.

[33mcommit 981ca859cb686a84ea3aea7deabb13b351c83ee0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Nov 7 14:23:15 2009 +0100

    Fixes for distance and within content modifiers.

[33mcommit 884b1034b4ffd1376057297eaee85c246aaee5fb[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Fri Nov 6 20:47:32 2009 -0600

    failed unittest for within distance

[33mcommit 171edda02acd1a20a1053073657b98a083b86074[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 6 16:51:26 2009 +0100

    Fix compilation of address and port error messages in debug mode.

[33mcommit dc44700ce59554e2c7e385e5bacfd506a94131a4[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Oct 26 09:39:22 2009 +0530

    Support vars lookup from conf file. Current patch support address and port group vars lookup

[33mcommit 951b4d5cf40ca14f7ed5e713aad691edd8775cc9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 6 15:31:47 2009 +0100

    Fix within in some corner cases and add some more tests.

[33mcommit 204aca443103d50f332117af528df46c1374bedc[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Nov 6 16:18:41 2009 +0530

    Support host os flavour retrieval functions with raw network addresses

[33mcommit 96614c60f2e82834105420a7b68e1ad3437b136e[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Nov 3 13:17:05 2009 +0530

    change the netmask to uint8_t for the ip handling part of the radix tree and also use 255 instead of -1 to indicate the absence of a netblock

[33mcommit 3f91af89a244a4aa97b07e886e776bbc4c952581[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Oct 16 19:15:43 2009 +0530

    Added comments to the the Host OS API test

[33mcommit 22771d5f52d0ce96612d76ab841adcbe15697dfc[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Oct 12 22:26:54 2009 +0530

    Updated doxygen comment for host os function

[33mcommit 7dbc117b37d1b150c9b8c4cae1e6e1e43eaa528f[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Oct 7 18:50:55 2009 +0530

    Host OS Table API. Modifications also make to the radix tree to handle netblocks

[33mcommit 4f2164677a99c9eb0620d430c9be7e02a4a65acd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 6 12:54:30 2009 +0100

    - Fix pattern matchers b2g and b3g not being able to deal with a single pattern of the max pattern length (32 bytes by default).
    - Fix the setting of the correct pattern matcher when it was set in the detection ctx.
    - Add tests for the fixes.

[33mcommit 2ba203cd19312f2a1b54d9ab5a501583211beaa8[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Tue Nov 3 10:51:25 2009 -0600

    upated INSTALL moved other doc files to doc/ deleted Welcome

[33mcommit f2a388ac8d559b4006e088951756a5205290de08[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 5 11:21:05 2009 +0100

    Cleanup comments.

[33mcommit 34d44266fd6343d11a2409e120026c541e0435fb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 3 17:27:39 2009 +0100

    Create reputation.h

[33mcommit 258cac889aba78f1a07a3332b8033197073f968d[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Mon Nov 2 13:19:36 2009 -0600

    silence pfring compiler warning

[33mcommit d6be6ceb19ba6df81843882c58824db926fbf0d5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 2 16:21:14 2009 +0100

    Fixup artifact from automatic renames: rename DetectAddresssHead to DetectAddressHead.

[33mcommit e5b990a8abf02150d000affbfb366c546be4af8e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 2 15:45:50 2009 +0100

    Fixup siggroup merge artifacts.

[33mcommit 78db80ea15ec5a355fdbb7fba0291ad8b6ae594d[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Oct 20 11:04:22 2009 +0530

    Unittests and style fix for detect-engine-siggroup.[ch]

[33mcommit 83d1e283bb42cf301298abe74369f3e429533b6c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 2 15:05:22 2009 +0100

    Improve message on test expected to fail at this point.

[33mcommit 0df58406eeec5f397e5bd9b29d0b894a30bbbf5f[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Sun Nov 1 00:19:36 2009 +0100

    Adding Unittests, doxygen comments, coding style, logging support

[33mcommit cc442f17726088a7fe2459575c96204c7fe5709c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 2 14:49:44 2009 +0100

    Fixup flow bits sig tests to work with the changes to the pattern matchers.

[33mcommit 6d1eb3e7289376914457a3ffcd98a5c298e3b60f[m
Author: Breno Silva <breno.silva@gmail.com>
Date:   Thu Oct 29 13:14:29 2009 -0200

    FlowBits Unit Tests

[33mcommit 2dee4cec1356c4f1bfa749d772b2f0c4151994b2[m
Author: Breno Silva <breno.silva@gmail.com>
Date:   Mon Oct 26 23:54:02 2009 -0200

    FlowBits Unit Tests

[33mcommit c5dd31868d8558bacf3bbd30af51273fba588e9f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 2 13:23:44 2009 +0100

    Small detect engine proto cleanups.

[33mcommit 34e526d8530ae76a3c122600c73548643d83357b[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Mon Nov 2 12:55:28 2009 +0200

    TTL macros suppport

[33mcommit 90fea03af5b9830f657b96eda07edf7507b4f794[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Tue Oct 20 07:33:02 2009 +0300

    added comments and some minor changes

[33mcommit cacbf31aad71eecf02f92ac07e32f250f83dd192[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sun Oct 18 20:28:57 2009 +0300

    support for ttl keyword

[33mcommit deb511f51a58813fc81898a613ef89507447833a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Nov 2 12:50:51 2009 +0100

    Fix a compiler warning on Ubuntu 9.10 gcc 4.4.1 in the pattern matchers where the size of the thread ctx can be optimized to 0.

[33mcommit 8b8e2fef2d77a7409d78b2f3d4b2b9d7eef6a856[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 31 17:53:08 2009 +0100

    Fix msg parsing.

[33mcommit e458b2a26e294db480176d573e8cd7f1f6851a2a[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Thu Oct 29 12:57:00 2009 -0500

    detct-msg changes and unittests

[33mcommit f217370ac76c7e3a0930bbf1f12707b36268694a[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Thu Oct 29 17:17:30 2009 -0500

    fixed for invalid netmask being set to 0

[33mcommit de8caa796462193e49be9a49137b4987efc47ec5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 31 13:50:15 2009 +0100

    Rename DetectAddressGroup* to DetectAddress*

[33mcommit 13dca5e8ce0dcebf89f083907e0c471a64cfb78c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 31 13:41:02 2009 +0100

    Cleanup of address functions.

[33mcommit 3c7a038477da9b28a18bc1e872f218fa818a3344[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Oct 31 10:28:35 2009 +0100

    Further memory cleanups. Split out init only vars out of the sig group head.

[33mcommit 32e51e5e5afe407ed732e63a8230606db05657be[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 30 06:27:16 2009 +0100

    Replace sgh refcnt by a flag.

[33mcommit 91d14964b6856a8676d14a699186010f00f288e9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 29 15:44:49 2009 +0100

    Fixup formatting on the smb code.

[33mcommit 5fc30051036714516eabb9038eb7163fa1d8428d[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Mon Oct 26 19:32:16 2009 -0500

    added check for full al_parser_table

[33mcommit f3e3d3873fb67cf3ab5c4c7137fd1b94e209252c[m
Author: root <root@kirby-laptop.securitytestsystems.com>
Date:   Mon Oct 26 15:29:10 2009 -0500

    fix smb and dcerpc unit tests

[33mcommit ecaa701bdf8a7f5a7f75aa5a01aea712d7ccb2e8[m
Author: Kirby Kuehl <kkuehl@kirby-laptop.securitytestsystems.com>
Date:   Mon Oct 26 11:50:02 2009 -0500

    smb and dcerpc work

[33mcommit bf7233184986001b8140f641494f4ea0e4a40128[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 29 15:19:01 2009 +0100

    Fix compilation warning in conf test.

[33mcommit ec9fa7b0a7ee262c2ece9df7d562536c13bde157[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Mon Oct 26 22:51:38 2009 -0700

    Files missed in last commit.
    
    Update Conf API to allow direct access to nodes.
    
        A configuration node is now a tailq head and a tailq entry.  This allows us to build
        n-ary type trees to build something DOM like.
    
        Properly process lists so a list of rule files (for example) can be loaded.

[33mcommit d39a291427f38563cb33217cf8db9dcabda3cdb1[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Sun Oct 25 23:21:19 2009 -0700

    Refactor yaml loader so we can load strings or files.

[33mcommit 41752064171b6c97ac56a5698eb43b22831fffa0[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Wed Oct 28 18:07:36 2009 -0500

    unittest regex changes and fixes

[33mcommit 2d0e9658f87988d301b28d4a218b5f78cb5cf0e8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 29 14:24:04 2009 +0100

    Speed up per sgh content maxlen calc. Remove mpm ptrs from mpm ctx. Add unittests testing the detection engine internals.

[33mcommit e4c98c562c31366ea08c847a4a32a726035b2e2b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 28 15:23:25 2009 +0100

    Merge DetectAddressData and DetectAddressGroup

[33mcommit 15ab5d70036249a0d251a9c936ba894ae140dfaf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 28 01:24:50 2009 +0100

    More engine init memleaks fixed. HashListTable remove function fixed.

[33mcommit 7a7bb7a390e8559069a3b8512eef7d4f2ff8ae96[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 27 11:48:02 2009 +0100

    Get rid of global mpm_ctx.

[33mcommit fbe87a3ad5f2ad96d10ea9eb1ff326645e20336f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 27 09:40:44 2009 +0100

    Bunch of mostly unittest related memleak fixes.

[33mcommit 227cc082a1c709ff8cade2ff0f9397ed99d4f7d5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 26 17:09:35 2009 +0100

    Fix small memleak at engine init.

[33mcommit 02fb39b9135d7da1a4b9d3ee7d6883d630b49c6a[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Fri Oct 23 17:22:29 2009 +0300

    detect-engine-proto unit tests and comments

[33mcommit f2213b066fd8c4ce60cc2720cc930b5101592afc[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Fri Oct 23 15:04:51 2009 +0300

    fast track stream handling and its unitests

[33mcommit b796541e57b71c9b318f7404e7df62932c6a4756[m
Author: Brian Rectanus <brectanu@gmail.com>
Date:   Mon Oct 26 00:15:09 2009 -0700

    Ack/Seq Keywords part 2

[33mcommit ed30067bd7cb3da15a3e26f9d249da9c584a13f2[m
Author: Brian Rectanus <brectanu@gmail.com>
Date:   Fri Oct 23 22:41:33 2009 -0700

    Ack/Seq Keywords

[33mcommit 56e45e0c16215e79c72c6e2d97ca2244dd61c9aa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 26 13:55:59 2009 +0100

    Fix warning free compilation of defrag. Fix a missing variable initialization that cause a segv in the unittests.

[33mcommit e0b9e8523000ff08e41a7bf1273781a94469577b[m
Author: Jason Ish <jason@desktop.unx.ca>
Date:   Fri Oct 23 10:41:18 2009 -0700

    Break out checksum fixup code to make the license separation more clear.

[33mcommit 97c991f75bde1616481cdfc7a5a260d704b8359e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 25 09:26:22 2009 +0100

    Remove unused var and fix compilation with DEBUG enabled.

[33mcommit 0dc471db9c0cde097d76eea9c63aac8f214329dd[m
Author: Jamie <jamie.riden@gmail.com>
Date:   Sat Oct 24 18:39:57 2009 +0100

    looking inside ICMP packets

[33mcommit ec6c5258b6b5188ae5c25238e75c20dc268514e4[m
Author: Brian Rectanus <brectanu@gmail.com>
Date:   Fri Oct 23 12:46:27 2009 -0700

    Sameip Keyword

[33mcommit f9b422bba74383d84eca905469865a7538394b43[m
Author: Breno Silva <breno.silva@gmail.com>
Date:   Wed Oct 21 22:52:01 2009 -0200

    FlagBits fix
    
    Signed-off-by: Brian Rectanus <brectanu@gmail.com>

[33mcommit 4fb4dd59e4dc258fc647c884a0d5b136c15c42b5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 23 15:55:12 2009 +0200

    Detect errors in the spin locks which somehow seems to fix some deadlocking withing valgrind.

[33mcommit 32830ff43d10ccf4b59ddd7c3b709b6c7847181b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 22 19:50:43 2009 +0200

    Small layout fix.

[33mcommit 06c382a44d32f22d2dfb9168690c91f43792cd40[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Tue Oct 13 18:00:31 2009 +0200

    Addapting to SCLogDebug

[33mcommit 292a7e47ef1312f27cc5ef3e66acfe560a0652dc[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Tue Oct 13 17:48:07 2009 +0200

    ICMPv6 Decoder and unittests

[33mcommit 7fb28ce5b6277bbaab73d80e18c2b9697cb153f0[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Mon Oct 12 23:35:49 2009 -0500

    fixes to mimic snort escape behavior in msg

[33mcommit a48ddc46b7dbdaf58041d33423c0dd8c6709f397[m
Author: Breno Silva <breno.silva@gmail.com>
Date:   Thu Oct 15 19:59:26 2009 -0300

    Flags janitor

[33mcommit 8f8de0e56f0beeef8371a266dfd0cf8a93bac400[m
Author: Breno Silva <breno.silva@gmail.com>
Date:   Thu Oct 15 19:41:07 2009 -0300

    Unit test 60c fix

[33mcommit bfc82007684175f3756448c00e72c07b4040aaae[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Oct 16 18:27:29 2009 +0530

    Fix for the broken test from logging module

[33mcommit 24b27136cc787a8e31a93bcd450bf5221e374c1c[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Fri Oct 16 11:01:15 2009 -0500

    various unittest fixes for detect-engine-sigorder

[33mcommit 097a77e9fd087b884bf91325a89d63b6f7470278[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Thu Oct 22 00:10:05 2009 -0700

    Bug 6
    
    Add a new command line option, --list-unittests to list all registered unit tests then exit.  If -U is supplied, the regex will be respected.

[33mcommit f76a740fe2b12e3e4772238dc7829a5f61fd72ae[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 22 13:17:47 2009 +0200

    Small layout fix.

[33mcommit b470e7b40fb38fb88d428d13cfd96847c965384e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 22 13:15:43 2009 +0200

    Fixup merge artifact.

[33mcommit 15a8f34d3635aa20caa5e7150fe8d79496d879af[m
Author: Breno Silva <breno.silva@gmail.com>
Date:   Wed Oct 21 07:15:19 2009 -0200

    Gid Keyword
    
    Signed-off-by: Brian Rectanus <brectanu@gmail.com>

[33mcommit 6100a7f610cd4415cd94847dd455823a9a569355[m
Author: Breno Silva <breno.silva@gmail.com>
Date:   Wed Oct 21 22:19:07 2009 -0200

    FragBits Keyword
    
    Signed-off-by: Brian Rectanus <brectanu@gmail.com>

[33mcommit 6858192660b87d2c5f0b2f99c040f3ab5925c23a[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Sat Oct 10 00:03:57 2009 +0530

    Added a NULL check inside ConfGet()

[33mcommit a767a28c70224184e267f44b8aa2c6a03bd6b4d1[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Oct 9 22:53:34 2009 +0530

    fix for the test bug in the logging module

[33mcommit 0d13505f0ef0e139008c324e5b46d366ac4ff846[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Thu Oct 1 21:34:10 2009 -0500

    change debug code around to use global log dir

[33mcommit 43a50c538b06a1ba42f7187f9846377536557d56[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 9 19:55:44 2009 +0200

    Change default log settings to be more development friendly. Breaks one test.

[33mcommit d4733e3a76b3e834f53a0d66f40cf33186a0b813[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 9 19:34:07 2009 +0200

    Move pcre test out of detect.c

[33mcommit 86380b9d45e662f7a701121ac2400656fdc95430[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Thu Oct 8 21:02:10 2009 -0500

    split out pcre parsing fixed some errors

[33mcommit 4dbcf5fbace9b04677a545413bfec714a36a496e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 9 17:06:30 2009 +0200

    Add support for moving detection tests outside of detect.c and move the 'id' tests to it's own file.

[33mcommit 1a983fd316b3f32972335e8a5e2b153bf5d61177[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Thu Oct 8 17:46:37 2009 +0200

    Adding id keyword and unittests

[33mcommit 085b7a3c0e7d40881b8cf3ab0865f9953bf9e80a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 9 18:58:42 2009 +0200

    Move unittests away from detect.c

[33mcommit 97a8778aa42c11beaf06b3570e8b902761d54e72[m
Author: Breno Silva <breno.silva@gmail.com>
Date:   Thu Oct 8 10:22:01 2009 -0300

    Signature Flags Keyword
    
    Signed-off-by: Brian Rectanus <brectanu@gmail.com>

[33mcommit 7dc985aa4ec3c61b2fa81f1e1b5c9c9a26308ccb[m
Author: Breno Silva <breno.silva@gmail.com>
Date:   Thu Oct 8 10:20:11 2009 -0300

    Signature Flags Keyword
    
    Signed-off-by: Brian Rectanus <brectanu@gmail.com>

[33mcommit 4e848796d881ebffec72d8128901fb42633ecfad[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 9 09:25:07 2009 +0200

    Use correct free function in DetectPortParseInsertString.

[33mcommit 0815ed7c9ec8e410bf9e8e099de6a03181014e8d[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Oct 9 10:52:38 2009 +0530

    Some refactoring of the code, error handling done

[33mcommit e2fc2545f2b2bf2e717ef587ba11063884fd603c[m
Author: Brian Rectanus <brectanu@gmail.com>
Date:   Thu Oct 8 08:57:41 2009 -0700

    ip_proto cleanup and fix mem leak.

[33mcommit 8c747380aeae01c1fcedd99f6400078b1ff6a2b0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 8 16:42:10 2009 +0200

    Fixup ip_proto keyword.

[33mcommit f58f43799795fb91de08db6099184026eaed8fc4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 8 15:37:44 2009 +0200

    re-add unittests that were removed to prevent a git merge mess.

[33mcommit e28647032d2abf4bea58609611446e45068429ea[m
Author: Brian Rectanus <brectanu@gmail.com>
Date:   Sun Oct 4 21:56:05 2009 -0700

    Add ip_proto support.

[33mcommit f70c0263403ec73785fc7d7b8cd96ef269468b67[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 8 15:32:52 2009 +0200

    Prepare for merging ipproto patch.

[33mcommit fbc4d11ed4bdfeb14cc45a768c1a8fc64955f16e[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Oct 8 13:15:16 2009 +0530

    Some code refactoring

[33mcommit 4edcc530ec8b1469ee10e82bdead39f31e5943c6[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Fri Oct 2 18:20:58 2009 +0300

    fixed unified alert2 ecode and removed printfs

[33mcommit e7952b133180aab05876b8dd40f77f718359397e[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Thu Oct 1 22:16:30 2009 +0300

    some changes in threading constants

[33mcommit ec75946e218297b3905482a8629eaf8810c1b535[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Wed Sep 30 23:09:46 2009 +0300

    one more change

[33mcommit 7ff38a70811122d75fadd38aadcd07562851a086[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Wed Sep 30 23:08:06 2009 +0300

    fixed thread issue

[33mcommit 40b8afdd56915c540808f5d9802c935869504f9d[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Wed Sep 30 20:16:03 2009 +0300

    support for thread exit constants

[33mcommit 48c94bbf03a12d4ae8371784c74e67f0d1410ca5[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Wed Sep 30 10:13:49 2009 +0300

    initial thread code support

[33mcommit 47eb1687134b61d6fe8d17050ad0fc4a88e90128[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Mon Oct 5 20:29:27 2009 +0300

    added a small comment

[33mcommit 7b56b4314b0e64320c148714293ba9105f978a9b[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Mon Oct 5 20:23:54 2009 +0300

    unittest packet payload inspection

[33mcommit 70b53a0293ab585e46183eb4f103df920e5763ea[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Mon Oct 5 17:54:57 2009 +0300

    fixed the ispayload inspecting func

[33mcommit 78697ce502921e6dfcc1b6a2db1189c03f1e7c5b[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sun Oct 4 20:45:33 2009 +0300

    avoid pm invocation

[33mcommit a991ab0a19bcb202d30ce5f2f64b701e2e0a42b8[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sun Oct 4 20:41:50 2009 +0300

    added sigmatch payload flag

[33mcommit 88fbfb3e655a18f71461f12bfcbc498ecdeed734[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Wed Sep 30 22:01:00 2009 +0300

    fix an issue

[33mcommit 892ace6b37ee7b897ff78a0a00fc60964f032945[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Wed Sep 30 10:16:20 2009 +0300

    stream flag function made public

[33mcommit 7895748606000fb3fadc88e4c4a0d1497a8432c1[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Tue Sep 29 23:17:37 2009 +0300

    add unit test for no stream reassembly

[33mcommit 71da019734e270f6219ae40717e7fdf9e3b8cb2e[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Tue Sep 29 15:17:58 2009 +0300

    some minor changes

[33mcommit 94674c58f3c787d1561db19cb3dc66ee093acd83[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sun Sep 27 19:20:49 2009 +0300

    unit tests for no packet & payload inspection

[33mcommit bbb385422d4723c59352656e52fcc673bfaa79d2[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sat Sep 26 15:54:53 2009 +0300

    function to set packet flags

[33mcommit cc0b4f71811de4cdfd5e01842a03d7ef80854e21[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Thu Sep 24 12:14:56 2009 +0300

    initial version to support detection byepass

[33mcommit a914c4e2bff5ea1beed143bf49a69d5968fac80f[m
Author: Jamie <jamie.riden@gmail.com>
Date:   Thu Oct 1 19:36:51 2009 +0100

    check that the encapsulated packet is correctly parsed

[33mcommit 804da19a3680e9d234e7a9983a5ad671f94b5f58[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 5 15:18:34 2009 +0200

    Fix flowbits match being unable to deal with a packet without a flow.

[33mcommit 67e6cf21aec34f88d5534c0e4cc80a0146def919[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Thu Oct 1 08:58:53 2009 -0500

    verify valid port range

[33mcommit 5ffb7a7bd7885b0fc5d04d4b451f7540ee03a123[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 5 14:26:37 2009 +0200

    Add a few more tests for portrange validation.

[33mcommit 927685928cb06add18b547a5b1826924ecf9993c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 2 08:55:40 2009 +0200

    Fix segv in unified2 unittests.

[33mcommit fce06d28006357746b5f1b70ea6fd3231da055d1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 30 07:57:40 2009 +0200

    Fix unified2 tests relying on each other.

[33mcommit c43319c3379f1754be63fa5c9586383287b1981c[m
Author: Breno Silva <breno.silva@gmail.com>
Date:   Tue Sep 29 23:52:47 2009 -0300

    Regular expression for UnitTests
    
    Signed-off-by: Brian Rectanus <brectanu@gmail.com>

[33mcommit 590adbb3e8723d2a4be46d592e5b4a622a457fef[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Sep 30 02:35:24 2009 +0530

    Radix Tree modifications

[33mcommit 3c21df69d227f8631f01be8215d85d8dbe700b76[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Sep 29 12:46:26 2009 +0530

    Radix Tree structure for the engine

[33mcommit bc42aebdd59ddb9488b729a8a1d526ba20de7beb[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Sep 29 15:05:54 2009 +0530

    Logging module optimization changes

[33mcommit ff018d4b43d1179ecedf5cd2a498a97a16ef22a9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 28 18:38:07 2009 +0200

    Strange fix for issue where signals seemed to be ignored in some cases.

[33mcommit 4914d8d9031472abfd03fda8abc736e6a147e5c5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 25 08:42:09 2009 +0200

    Small stream fixes.

[33mcommit 970db6fdd85924375112999b42936b5386ec2198[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 28 17:15:35 2009 +0200

    Fix merge artifact and add new logging init code to pfring runmodes as well.

[33mcommit 93077a0feee7eba760185c0eeb78db8ae46af53e[m
Author: Pablo Rincon Crespo <pablo.rincon.crespo@gmail.com>
Date:   Mon Sep 28 16:22:20 2009 +0200

    Updating tests fo unified2 with LogFileCtx

[33mcommit a84cc38bc9be5d344acc557e918831c201cecb4c[m
Author: Pablo Rincon Crespo <pablo.rincon.crespo@gmail.com>
Date:   Fri Sep 25 15:19:21 2009 +0200

    Preparing multithreading support for alert modules and logfilectx

[33mcommit 69e57e5e234e2cc43563a71601e761ca0b90604c[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Fri Sep 25 16:55:47 2009 -0500

    remove invalid dir from pcre + unit test

[33mcommit 968d8df12b66ec8f81c6157be9bca4557a1e1c86[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 28 13:15:45 2009 +0200

    More logging API usage. Changed logging macro's slightly so the vars inside them won't conflict with vars used by the calling function.

[33mcommit bcc5bbef93649914255ff3124255f5cdb0fe8fe4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Sep 27 15:31:41 2009 +0200

    Yet more logging api usage changes.

[33mcommit 91bc83e5c6c083792c0043b244128fe7281baa4b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Sep 27 14:08:00 2009 +0200

    More logging API usage changes.

[33mcommit b3a7f4c015d824364b01ed0a5ac6a786ef085723[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Sep 25 21:53:58 2009 +0530

    Update for the logging module and symbol renaming

[33mcommit 3a28171fbdcfcee2b90c27b1c538dd48e77a8714[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Sep 26 00:18:37 2009 +0200

    Another round of logging api usage updates.

[33mcommit f4acd5a27e4d03124d8a6923e3d016863a38cbf6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 25 16:44:31 2009 +0200

    First batch of fixes for new debug and logging API usage.

[33mcommit 8069fc759bdae6c0e5b6f180d2612780f5701805[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Fri Sep 25 08:17:36 2009 -0500

    added --enable-debug config option to set -DDEBUG

[33mcommit 157d5e811304434a7dfdea0b854259e4af44372a[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Wed Sep 9 11:28:31 2009 +0530

    Implementation of the logging module

[33mcommit f658ffbc9c21fea6268867df77e081561d4f4d23[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Sep 21 10:15:49 2009 +0530

    Order the signatures based on certain rule parameters like actions, flowbits, flowvar, pktvar, priority etc

[33mcommit 4cc24fe46399be5a68be7324d4a30257b2406924[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 25 13:42:10 2009 +0200

    Improve the handling of addresses and ports. Properly detect !any, other full negation. Fix [80:!80] syntax errors being undetected.

[33mcommit ea1fe0cf6185f399de6ad507c0bb4aa3ed4ca50c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 25 13:42:03 2009 +0200

    Set signal handlers after the unittests so we can kill the test runs with ctrl-c.

[33mcommit 3cf1be871063754bc72d19b667e7901a41f82667[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Thu Sep 24 15:23:31 2009 -0500

    invalid negation unittests added

[33mcommit be3bbe0a85b828566ff1aaa544c90b4c6af62b76[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 24 13:14:45 2009 +0200

    Fix segv in reassembly. Fix sequence gap handling tests.

[33mcommit db9e693054321837660936c5e0cbb374cc744a25[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 23 17:48:53 2009 +0200

    Small fixes to pfring patch.

[33mcommit 04b0f177fcda947aaefd71cf071ec55e79b1ca9e[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Wed Sep 23 09:50:04 2009 -0500

    native PF_RING support with fixes

[33mcommit 7f1b0efab3cb30b916867a58bf2f85edca587d9d[m
Author: Brian Rectanus <brectanu@gmail.com>
Date:   Tue Sep 22 12:17:04 2009 -0700

    IpOpts Rule Keyword
    
    Signed-off-by: Brian Rectanus <brectanu@gmail.com>

[33mcommit 27c61ac1480cc99e81a5690a133734cdfe1859a6[m
Author: Breno Silva <breno.silva@gmail.com>
Date:   Sun Sep 20 20:15:43 2009 -0300

    IpOpts Rule Keyword
    
    Signed-off-by: Brian Rectanus <brectanu@gmail.com>

[33mcommit b3cb29b75869d4da18c44aa37dad8531033ad9f9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 23 08:59:39 2009 +0200

    Fix engine lockup due to mutex locking error.

[33mcommit cf473bf0cee3b3284e82114714ff8a55d02c87f2[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Tue Sep 22 09:06:04 2009 -0500

    added support for escapes inside of msg keyword

[33mcommit 97a2f4e74756dd31ceee721d94e3052864c09b98[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 22 11:54:21 2009 +0200

    Improve error checking in detect, add comments.

[33mcommit ae3d4b6d7f1c837def3369723fadf97eb20dc10e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 22 08:53:54 2009 +0200

    Silence clang warn.

[33mcommit 8a68520f55a9c649858e151e67e774ec41759778[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 22 08:50:45 2009 +0200

    Fix clang warnings.

[33mcommit ace371665d267d423a62064ba00d26bfbc6bf13c[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Mon Sep 21 16:01:31 2009 -0500

    changed sigs for http logging to use established keyword

[33mcommit 4170ec89553034c92541ae5704922b0690c4a1e9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 21 17:22:30 2009 +0200

    Make locking of the flow optional in the app layer subsys so we can also pass locked flows to it.

[33mcommit 5ecd187b6f06ad2a6307d7911860a785f9c13270[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 21 14:40:58 2009 +0200

    Tie app layer parsing to the stream engine.

[33mcommit f0d556b9e3352f85b8ff52515840b25368eb84c4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 21 13:49:35 2009 +0200

    Suppress nfq debug output.

[33mcommit 6e8c75ff795939c1b928b3077a9eee85161b1f16[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Thu Sep 17 14:33:32 2009 -0500

    fix for duplicate lib linking, remove call to libnet-config

[33mcommit c06b2849fb9d11a1f691fda02e28d3229f50fed3[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Mon Sep 21 00:02:04 2009 +0300

    fixed unit tests and add the comments

[33mcommit e88249ee248043944947779ceb2455e09a0954c1[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sat Sep 19 14:26:02 2009 +0300

    small performance enhancement

[33mcommit 37b46824074d4355dc3b5b3daec9b213ed2f5bfa[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sat Sep 19 14:10:14 2009 +0300

    target based paws handling

[33mcommit 573027a1ecd040503e473fe6562f9320a88730e7[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Thu Sep 17 17:35:15 2009 +0300

    PAWS support and one unittest

[33mcommit 45cb8f5f0cac32ff2d241f1a7cf362f24ed3ec38[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Tue Sep 15 20:01:31 2009 +0300

    changed flag name

[33mcommit 3350245f7576b7d54e0f36a6583ee54a452b4f18[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Mon Sep 14 19:43:10 2009 +0300

    timestamp support

[33mcommit 7aaad91f39d9d3a2e1944a50b03e2bd7ac1781e7[m
Author: Breno Silva <breno.silva@gmail.com>
Date:   Sun Sep 20 19:45:52 2009 -0300

    Comments fix

[33mcommit 3e9223c22c09f6899761387c393e38e46182a070[m
Author: Brian Rectanus <brectanu@gmail.com>
Date:   Sat Sep 19 23:13:29 2009 -0700

    Cleanup bytetest and bytejump.

[33mcommit a4fe97189784d74926e9956a9423d727a6f6d737[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 18 13:53:53 2009 +0200

    Fix datalink retrieval for pcap file mode and nfq mode for use in unified2.

[33mcommit c8308222c14513c28704ad34e9c73b5058205fd0[m
Author: Breno Silva <breno.silva@gmail.com>
Date:   Thu Sep 17 14:44:57 2009 -0300

    Unified2rev2
    
    Signed-off-by: Breno Silva <breno.silva@gmail.com>

[33mcommit bff8ae299fce6844483a6fa5de161dbc68835d58[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 18 09:23:01 2009 +0200

    Fix pcap file mode

[33mcommit 597d0e9a2093a0139c0abed9a7fedb6cef8bede0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 16 15:36:26 2009 +0200

    Fix detection of failed thread startup. Cleanup startup output a bit.

[33mcommit ab09e80205275d3bf9fe2f9ac38e76c59091f4ea[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 17 10:46:08 2009 +0200

    Remove unnecessary header.

[33mcommit 0d0ffb9963f73f6cd21065b4c633a26e9a72d152[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 17 10:43:45 2009 +0200

    Reorganize header inclusions.

[33mcommit 1727d191a4e6a88491674f8ae59d25881f0b7c30[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 17 09:48:33 2009 +0200

    Add pktvar and flowvar tests to ip only unittest. Make output cleaner.

[33mcommit 3458c07f462658660ac909f6da994380d49d9457[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Wed Sep 16 19:44:17 2009 +0200

    Changed SignatureIsIPOnly and added some unittests

[33mcommit f508d1e0fd3daa1b3e93823d89579d5d1b161cde[m
Author: Jason Ish <jason@desktop.unx.ca>
Date:   Wed Sep 16 16:13:38 2009 -0700

    Add getters for integer and boolean values.

[33mcommit 2c796339f701b03303e3583a83415071974eb8fc[m
Author: root <root@ganga.helpyme>
Date:   Tue Sep 15 19:35:15 2009 +0200

    Small fixes

[33mcommit bdf119ade35e940c5f27d27197ed6bb9eb5d5ad6[m
Author: Pablo Rincon <pablo.rincon.crespo@gmail.com>
Date:   Tue Sep 15 19:26:30 2009 +0200

    Adding window and isdataat keyword and some unittests

[33mcommit 0941c152fdb6a1290fbb22f76887120bbfc48723[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 16 12:05:35 2009 +0200

    Minor layout fixes.

[33mcommit f6b36b7241c0db0b5d4787bf87efce05aa5b0099[m
Author: Breno Silva <breno.silva@gmail.com>
Date:   Tue Sep 15 22:16:47 2009 -0300

    Unified2rev2
    
    Signed-off-by: Breno Silva <breno.silva@gmail.com>

[33mcommit ee8fef2e682441315385a24f3551fdf89cc547c4[m
Author: Breno Silva <breno.silva@gmail.com>
Date:   Mon Sep 14 22:22:01 2009 -0300

    Unified2rev2
    
    Signed-off-by: Breno Silva <breno.silva@gmail.com>

[33mcommit 8c797927cd4147c6f706ca35cec606d1dc4cc7ca[m
Author: Breno Silva <breno.silva@gmail.com>
Date:   Sat Sep 12 10:07:22 2009 -0300

    Unified2rev2
    
    Signed-off-by: Breno Silva <breno.silva@gmail.com>

[33mcommit 145d89ba0150df8ac0a131c2d166802b8716cdb8[m
Author: Breno Silva <breno.silva@gmail.com>
Date:   Fri Sep 11 00:23:23 2009 -0300

    Unified2rev1
    
    Signed-off-by: Breno Silva <breno.silva@gmail.com>

[33mcommit a5e386ce52a6483fb58f70d34fbc0d8336b21dcf[m
Author: Breno Silva <breno.silva@gmail.com>
Date:   Fri Sep 11 00:13:40 2009 -0300

    Unified2
    
    Signed-off-by: Breno Silva <breno.silva@gmail.com>

[33mcommit c313444991cfac35e6d6c00fd59cd23bb0da639d[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Tue Sep 15 12:22:19 2009 -0500

    comment out printf for unittest format

[33mcommit beef3c6c24adcfd2c86afbc89aad0f631737cf90[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Tue Sep 15 20:16:22 2009 -0700

    Fix access to ttl.

[33mcommit daf3078279d0c8848f6abbb6683f2f03874587eb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 16 11:40:25 2009 +0200

    Fix compilation on 32bit

[33mcommit ed3fee2bac68186c58c569a88e510c7999639d37[m
Author: Brian Rectanus <brectanu@gmail.com>
Date:   Tue Sep 15 23:10:41 2009 -0700

    Fixed detect-byte src to use new util-byte return codes.

[33mcommit ba4c2e599db4acf7460bcfe772212505cf9b60b8[m
Author: Brian Rectanus <brectanu@gmail.com>
Date:   Tue Sep 15 23:09:33 2009 -0700

    Add byte test to detection engine.

[33mcommit 11d068740a196928f3e4e4ae599855ca42fcbba7[m
Author: Brian Rectanus <brectanu@gmail.com>
Date:   Tue Sep 15 21:28:32 2009 -0700

    Byte utils return num bytes extracted on success instead of zero.

[33mcommit 02a8b583c96540a7343323749383095a7a6f7333[m
Author: Brian Rectanus <brectanu@gmail.com>
Date:   Tue Sep 8 15:54:54 2009 -0700

    Added byte_test and byte_jump support.

[33mcommit af06e6a288789c2fdb673b2448bc9f11a7d8bb4b[m
Author: Brian Rectanus <brectanu@gmail.com>
Date:   Tue Sep 8 14:52:09 2009 -0700

    Added byte extraction util.

[33mcommit cfb605aa8a8328a29abef91a69b466a4fe4ad3a1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 16 11:23:53 2009 +0200

    Put the precooked runmodes in a separate file.

[33mcommit e95e5cb36a6e0b6b7072e8bc0a64ffcee2b0d6bb[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Tue Sep 15 09:38:58 2009 -0500

    missing memsets in pppoe unit tests

[33mcommit 301522f316ad8083bb39c8fa766d739b23646ea1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 15 17:00:33 2009 +0200

    Add TCP_GET_WSCALE macro for easy access to wscale. Update StreamTcp to use it. Default to wscale 14 (max) in case of midstream as there seems to be no reliable way to predict wscale if we missed it.

[33mcommit f92ac1fbdb3addaf4789d441af086f3d4feafc23[m
Merge: a29722515 a6fe5a733
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 15 09:23:07 2009 +0200

    Merge branch 'tcpopt' into next

[33mcommit a6fe5a73314ef067f26b5402ad65ccdbc32a08f2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 15 09:22:55 2009 +0200

    Add TCP_GET_TS1 and TCP_GET_TS2 marco's to efficiently retrieve the TCP timestamps in host order.

[33mcommit a29722515701a243b1d5c43b884da7a59e3222c5[m
Author: Jamie <jamie.riden@gmail.com>
Date:   Mon Sep 14 20:40:10 2009 +0100

    victor must be getting sick of PPPoE and ICMP

[33mcommit b6deadd2b48d645f4bfb9eaf6f2c9cc727a63439[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 14 19:58:06 2009 +0200

    Fixed a few missing places for tv->flags access. Changed mutex init for packets slightly.

[33mcommit 968dc45d27ea52847da0ea05f86211d3ca2faf76[m
Merge: 1858be7a2 edfddcb28
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 14 18:02:28 2009 +0200

    Merge branch 'threading' into t

[33mcommit 1858be7a2fd8e716bfa2f6c4740343f1fe08a04b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 14 18:01:51 2009 +0200

    Lock threadvars flags using spinlocks.

[33mcommit edfddcb282d9e7e208b3bb62c88bb3c57f2932a8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 14 18:00:31 2009 +0200

    Clean up stream tests memory handling. Remove counters in the address handling that were thread unsafe.

[33mcommit 6095b8f2a11bdf0220d7c4e955dee5a497360520[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Fri Sep 11 14:49:55 2009 -0500

    fix for older libc's missing def for IPPROTO_DCCP

[33mcommit f03d540d2f4ab0ba39bcbfeb415482dffc7de5b8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 14 10:39:22 2009 +0200

    Suppress debug output in yaml loader.

[33mcommit c91a4baad5acac48e4ef0b496fa8bd6745d08fa7[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Tue Sep 8 10:12:30 2009 -0700

    - Autoconf goo for libyaml.
    
    - Mock YAML configuration file.
    
    - YAML loader for basic YAML files - not all YAML elements support yet..
      todo.
    
    - Add --dump-config command line parameter to dump the state of the
      configuration db after loading the config file.

[33mcommit 733c3bcb8ccee35e2918e604e5698bafc3fa983f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 14 09:11:36 2009 +0200

    Fix "ip" rules not ending up in the tcp and udp sig group heads correctly.

[33mcommit d883a993f7ab535674d8ff383c13050ccb0221ad[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 11 17:48:49 2009 +0200

    Make sure stream_size works on IPv6 as well, only checks TCP packets, validates input better.

[33mcommit 0675b7d7cf5714cda7de23de0f87545410c14e55[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Fri Sep 11 16:45:30 2009 +0300

    fixed unittests against protoctx

[33mcommit d82d83eba2a09d3c914c875b7f9a3b0854632252[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Thu Sep 10 22:02:15 2009 +0300

    fixed regex to handle space

[33mcommit df74597a1f2ae7f38be4435d0a8b16060cef6c07[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Thu Sep 10 19:36:35 2009 +0300

    use next_seq for stream size and comments

[33mcommit 7e5f5e68e8fb5b81f016a7d9348665ed56a48078[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Wed Sep 9 22:43:18 2009 +0300

    regex intial version

[33mcommit aa87f7047038c54f1c062c85f7a1d903c0c8b005[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Wed Sep 9 22:28:06 2009 +0300

    stream size match function and unittests

[33mcommit ac53ca5b279653d6f9e13bdef958b5e6b973e7a5[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Mon Sep 7 22:46:03 2009 +0300

    Stream Size rule option

[33mcommit 3a45b2711cf02cc0d7cc83d45954d441332a5cea[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Sep 11 12:25:44 2009 +0530

    Fixed the Perf API startup issue

[33mcommit 07bb501acaf9210eaeb456122bee44888bc279fc[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Thu Sep 10 19:38:36 2009 -0500

    compile fix for source-nfq.c

[33mcommit 15b75d727ac4ddfc8d2e068153bde94f2fbe2984[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 11 01:21:51 2009 +0200

    Fix reassembly unittests.

[33mcommit a39108843e2261632f7197924cd42aa851c7d6a3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 4 16:04:19 2009 +0200

    Small tm module API rename to reflect that Init/Deinit/ExitPrintStats are per thread calls.

[33mcommit b102ea2123291efba6ccf226600ead0e4fed58b3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 10 23:54:04 2009 +0200

    Big update:
    
    - Implement "closing" state in flow.
    - Add protocol specific timeouts.
    - Lots of stream tracking updates, fixing a lot of out of window issues.
    - Stream reassembly fixes.
    - Implement a new IDS runmode with 4 stream and detect threads.
    - Added a BUG_ON macro that aborts the engine if the expression is true.
    - Better balance the flow queue handler for traffic that doesn't have flow (like icmp currently).
    - Simplify application level protocol in the Tcp Session.
    - Add some debugging memory counters.

[33mcommit b4f0e82463930aafcebdcf11fe141bc06a3dfe52[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Sep 4 17:42:34 2009 +0200

    Small flow updates.

[33mcommit 2e3d7fcb9d3b6c0bf192d5608983ba2836323f71[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Fri Sep 4 16:43:01 2009 +0300

    Fixed seg fault

[33mcommit 9dcf6e2de29ec580b2965b46d33afc3efeda354f[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Thu Sep 3 21:50:14 2009 +0300

    handle the FLOW_STATE_CLOSED

[33mcommit ced5157dc9f7b76e2a253dca9998fca4e42278ed[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Wed Sep 2 20:43:59 2009 +0300

    Flow get state protocol specific

[33mcommit ec4fee215c4fd3d74df9aff112c30aa5d43d8062[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Tue Sep 1 23:36:19 2009 +0300

    registering unit tests

[33mcommit ab76253ec6756c6c41a21c10aa2912b789992bac[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Tue Sep 1 23:24:09 2009 +0300

    registering stream timeouts and flow prunning unit tests

[33mcommit a4ad7939d2aa6f2cec8d85859024f9f64d3d4866[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Tue Sep 1 18:49:18 2009 +0300

    proto specific free function

[33mcommit 55cdf8947eeb382b86987e52da19259e0032bb86[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Tue Sep 1 00:55:32 2009 +0300

    some modification in protocol specifc timeouts and free funtion

[33mcommit efcde9f52e331740a5f46bcbff7f6b026758822f[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Mon Aug 31 18:13:40 2009 +0300

    Some fixes for timeouts

[33mcommit e3b76dcaad9dad492bf344aac89fa4f8e0cf76d8[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sun Aug 30 00:40:31 2009 +0300

    efficient protocol specific timeouts

[33mcommit b46d9dc2b4a6181e8b1d97f260548cbb9710535d[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sat Aug 29 01:16:50 2009 +0300

    part2 and part3.1 of timout task

[33mcommit 59e2232211c481d3c141483868e6c1bcb327ed79[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Fri Aug 28 23:41:29 2009 +0300

    setting timeout on first packet in the flow

[33mcommit a31a261737fda7552475c191d0ec98bd3be99f0d[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Fri Aug 28 23:23:28 2009 +0300

    Another and right way i guess for timeouts

[33mcommit 0e64fa78b44cd330b9976e56d24226315e8811a2[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Fri Aug 28 21:47:39 2009 +0300

    Protocol Specific Timeouts

[33mcommit a65d558d2fee9e29182908f2549273bdf50c23bd[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Mon Aug 24 23:41:49 2009 +0300

    Changed the debug message

[33mcommit 7c5f95db015921f3353f7c0bd36eb53bba267956[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 3 23:11:09 2009 +0200

    Small threading update.

[33mcommit f35d9f0437c4137b0d21fa5baaacd08d4965c0f6[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Sep 3 08:38:03 2009 +0530

    threading improvements. Replaced the use of slot(2/3) with varslot. Improve error handling in slot functions. Additional helper functions for thread creation

[33mcommit 03d084858c4a71de3daa6218717027f77e919a6c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 3 08:41:40 2009 +0200

    Add macro's for access to ICMPv(4|6) type & code.

[33mcommit 00821489d761bd70a189fc204578ab7885249bb5[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Tue Sep 1 22:59:39 2009 -0700

    Unit test will now fail if allow_override bug is reintroduced.

[33mcommit 3f51fc2ce7a8bc2538c0a7ab7aafcaf399e749e2[m
Author: Jason Ish <jason@desktop.unx.ca>
Date:   Tue Sep 1 16:45:01 2009 -0700

    - Add a configuration dumper.
    
    - Fix a bug where you could override a configuration value that did not
      set allow_override to true.

[33mcommit aad8aaf3cb563e57786fb3c4d2c2f9f8f1db24bf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 1 19:59:45 2009 +0200

    Actually add the new queue handler.

[33mcommit 3636ca9703b717feec2b24b228eaae81835580c2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 1 19:47:58 2009 +0200

    Adding a "flow" queue handler. This queue handler passes packets of the same flow to the same queue. Changed the default IDS mode to use this.
    
    Some output cleanups, shutdown should be cleaner now.

[33mcommit e7206623bb4d1900ebc823fb2070f49844affd8b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 28 20:00:06 2009 +0200

    GRE struct naming fix, comment adds.

[33mcommit 22c0ec2bc5f3ce488339c1e7c1c9dda08ed0ff44[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Aug 31 09:36:22 2009 +0530

    Added support for the csum-<protocol> rules keyword to the detection engine. Keywords added are ipv4-csum, tcpv4-csum, tcpv6-csum, udpv4-csum, udpv6-csum, icmpv4-csum and icmpv6-csum

[33mcommit 39724df664aa250f092add0e935de1b1befefd59[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 28 18:19:36 2009 +0200

    2nd try of fixing some bugs reported by static code analysis tool.

[33mcommit 5041e7e4518403f9bf87eabf771eb3534f37e9ac[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 28 16:51:18 2009 +0200

    updated config.h.in

[33mcommit 073d04210cb90ef760247aadb5f6b45230c28dcd[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Thu Aug 27 14:25:24 2009 -0500

    added detection of PF_RING for -lpfring enabled pcap

[33mcommit 6eaff4be1200893caf2b0530dcd5112b6e4d7515[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 28 16:43:51 2009 +0200

    Fixes for issues found by static code analyzer.

[33mcommit 85b1fd7dfc40f07581e674f729e319a2736d28a7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 28 09:04:17 2009 +0200

    Add TLS 1.1 and 1.2 detection.

[33mcommit 401a0313d423365efacb9cedbe4988074504d4e7[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Aug 27 11:09:49 2009 +0530

    checksum calculation functions for icmpv6, udp over ipv6 and tcp over ipv6

[33mcommit 1f782bb912f2d277cd0ac6185d99381a78319a6f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 26 23:38:35 2009 +0200

    Fix pointer issue in sig loading.

[33mcommit 086ba5f49bda2bc403a684c778d79419a157f0a8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 26 13:24:53 2009 +0200

    Add 'BySize' field parser. Add stub tls parser.

[33mcommit b26b5aa4622acc0e2e850ee33f0e02c602e9f1de[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 26 09:49:43 2009 +0200

    More cleanups.

[33mcommit 9adfe546206ea031b001dc201c18ad305d494f69[m
Author: Jamie <jamie.riden@gmail.com>
Date:   Tue Aug 25 20:14:01 2009 +0100

    more unit tests for pppoe - part I

[33mcommit 44b6042cf946284b41968a588408d97835303e98[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 25 14:34:16 2009 +0200

    Fix wrong data type used in a reassembly error checking.

[33mcommit 41dd0f8e6242b347acf0496d90f2a81743b79e7c[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Aug 25 12:23:21 2009 +0530

    checksum calculation functions for ipv4, tcp, udpv4, icmpv4

[33mcommit 18f556ade1a9dd90c1e7bceb82201fa591caaf8f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 25 13:24:24 2009 +0200

    Fix a number of broken overlap calculations. Add comments exmplaining them all.

[33mcommit 85abc3ef62d41bb21ac0c3226795e37c5064d632[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 25 12:02:18 2009 +0200

    Complete removal of global de_ctx. UtRuntests now returns the number of failed tests or 0 on none. Program exits with code 1 on failed tests, code 0 otherwise. Removal of broken http uri test.

[33mcommit 1132ab635ac6c6b9b3fee1853e310ebfc564cc11[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 25 09:04:14 2009 +0200

    Rename all pmt->det_ctx.

[33mcommit 3e4d503e9fb556f6fffb2e67467110a365053ed9[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Mon Aug 24 11:55:27 2009 -0500

    Added C99 defs/macros to acsite.m4 for CentOS

[33mcommit b9972a9d2cef46fdd1c1d33aef47a60a2bf0eda0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 24 21:30:29 2009 +0200

    Cleanups

[33mcommit 855dc62e3074485f54fca56b7c4fa36dabc769f1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Aug 23 22:24:09 2009 +0200

    Git merge artifact.

[33mcommit 63d970eb0bed7a2e7e29d2b75a484d13de50b250[m
Author: Brian Rectanus <brectanu@gmail.com>
Date:   Sun Aug 23 10:32:58 2009 -0700

    Fix compiler warning and add better ipv4 options debugging output.

[33mcommit 84da1e9dc49369eb7ec919796de73fcdc094eeda[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Aug 23 22:17:22 2009 +0200

    Add seg_list integrity testing to reassemly. Remove all debug output but some. Better deal with packets before the point that we already reassembled.

[33mcommit 65ebb5611d5250ea09fb27f152085015b2141053[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sun Aug 23 14:54:29 2009 +0300

    Task 4 handling of missed packets by IDS only and both IDs and end host

[33mcommit feecb7406a1473e6dba7eaf98fa56b7a42f9e6d4[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sun Aug 23 08:08:39 2009 +0300

    Fixed some issues in gap handling

[33mcommit 0a32b6491f01ba59909ebf5be42b81ee2f0d0671[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sun Aug 23 00:39:02 2009 +0300

    Handling of IDS missed packets and its unitests

[33mcommit b267d4072ad13dccc08fd307c719c85146d275a3[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sat Aug 22 09:59:53 2009 +0300

    test the bug in freeing memory

[33mcommit bcebbebdfda6ecc7ac08aca6ac6e01cd4e039836[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Fri Aug 21 01:24:33 2009 +0300

    Handling IDS missed packets

[33mcommit 7715e8f0fc23b8a6b25753b13d119a21b66c2bab[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Aug 23 14:56:34 2009 +0200

    Work around some Tcp session free issues in the app layer parsers.

[33mcommit 391e69e69932826b2e4c93fac6779708415cad22[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Aug 23 14:55:57 2009 +0200

    Fix tunnel packet handling.

[33mcommit e7f8a02484cc6867947fc326320567ca1fa4e193[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Aug 23 14:54:59 2009 +0200

    Improve GRE counting. Actually use the GRE decoder. Register the GRE counter.

[33mcommit 9528e02e46d365803762ad2b4bdd296402c701c9[m
Author: Breno Silva <breno.silva@gmail.com>
Date:   Sun Aug 23 00:24:13 2009 -0300

    GRE support

[33mcommit f5fe190b455556f2b5716cea013d4419dd072a1a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Aug 23 10:45:57 2009 +0200

    Fix a ipv4 compiler warning. Improve TCP opt decoding error handling logic.

[33mcommit 74cb73fc1d3e651954e722fcc0d7514da8d94332[m
Author: Brian Rectanus <brectanu@gmail.com>
Date:   Sat Aug 22 22:04:32 2009 -0700

    Decode IPv4 options.

[33mcommit ff6a2a018c88eefa44c56aa3028b3ed8fe06bac6[m
Author: Brian Rectanus <brectanu@gmail.com>
Date:   Sun Aug 16 10:51:18 2009 -0700

    Cleanup autoconf

[33mcommit d7de22d0f0385f82fd9cbed6862dc8b859ae5b46[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Aug 22 18:40:50 2009 +0200

    Removing GPLv2 license info as our bylaws aren't final yet and we will redist code non-GPL as well. Rename struct conf_node to ConfNode to comply with engine coding style.

[33mcommit efdd952eb531b654f4b6f098b4da4a91d636f638[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Aug 22 18:36:10 2009 +0200

    Remove noisy debugging output.

[33mcommit 6a1acba1abe1194228cc67be73518297d35dcf9f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Aug 22 18:34:10 2009 +0200

    Fix missing conf include.

[33mcommit e3b538c7d70ac864ff8038b0e6fc4895069489c0[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Fri Aug 21 00:15:46 2009 -0700

    Simple configuration API.
    
    Allow the log directory to be changed.

[33mcommit c73f4334d0c1cc2c2b945141d1a4df5ef0a2aa84[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Aug 22 18:33:41 2009 +0200

    Fix compiler warning.

[33mcommit 4369816cdd4d7e7beecddb60b1ab9e7282d3d109[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Aug 22 18:23:03 2009 +0200

    Improvements to content keyword memory handling.
    
    First version of a simple pattern based L7 proto detection engine. Currently just works by matching a single pattern in the initial data. Implemented HTTP, SSL, MSN, JABBER, SMTP and a few more.
    
    Couple of pattern matcher cleanups.

[33mcommit 0242fad7703c7297b5d365464bf655d579230c98[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 21 10:37:56 2009 +0200

    Fix error in freeing the ctx of a SigMatch.

[33mcommit 97854cf4bb4661b01d6c1ff1b42000b4601da0cd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 21 00:04:56 2009 +0200

    Fixup some rule parser memleaks

[33mcommit 25aa05fdb2dbd5ce2392c12ba683d75f55c69f97[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 20 15:47:36 2009 +0200

    use C99 int's.

[33mcommit 6393b6778cad8cab92d4e82cb35c1c4083537f6a[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Thu Aug 20 01:18:45 2009 +0300

    unittests for gap handling

[33mcommit 57f71f7e4bea071ad7810eda6e4458ccef660368[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 20 15:25:12 2009 +0200

    Pass the DecodeThreadVars to all Decoder functions properly. Improve the error handling.

[33mcommit 63bc68ee904b311849daacad16889a9aa6758f28[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 20 15:21:28 2009 +0200

    Unify all counter registration code on uint16_t counter id's.

[33mcommit 244f5d547aa4bd0e810ab606cdfd28950560a4d5[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Thu Aug 20 05:28:35 2009 +0530

    new registration functions for the stats api, with local thread storage for counter ids

[33mcommit d67eec918fc700df9ab3bf08689e5c8c11ea9d13[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 18 23:53:37 2009 +0200

    Adapted flow comments to doxygen style.

[33mcommit 0a9fca7e57f6899d919dc6a47e101a370109f480[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 18 23:50:30 2009 +0200

    Fix compilation without unittests enabled.

[33mcommit 451adaff34b069b90b8f180c561bcab555ee34b5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 18 11:41:57 2009 +0200

    Small name support code update for flowbits, flowvars and pktvars.

[33mcommit 98fab9dab3a2c18341005b24faaecd28eb7798cb[m
Merge: 522efdcf0 58396a9a4
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 17 20:54:47 2009 +0200

    Merge branch 'will'

[33mcommit 522efdcf03c774d06482e4a5d85201e2124b1ade[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 17 20:43:09 2009 +0200

    Small reshuffle of the free funcs in the Stream code.

[33mcommit 6824eddb0fdf5675dc1264064ad790c31e0338c4[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Mon Aug 10 15:14:59 2009 +0300

    New function for task3

[33mcommit 58396a9a49e6a01ec8fdef145efb76168758cfdf[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Mon Aug 17 09:13:15 2009 -0500

    Added acsite.m4 for missing CentOS defs/macros

[33mcommit 5b946443d891c8519882bdb109413fa4900ebc79[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 17 17:39:29 2009 +0200

    Use finer grained locking for app layer parsing.

[33mcommit 2d406555a882294b1ce3bbbad0cd0194f80d3295[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 17 11:36:52 2009 +0200

    Fix compiler warning about 'mode'.

[33mcommit 698e9c0699c9db5620b716f094ca47c5d69dddb9[m
Author: Jamie <jamie.riden@gmail.com>
Date:   Sun Aug 16 18:43:16 2009 +0100

    fix incorrect offset in decode-ethernet for PPPoE, more debug statements

[33mcommit 4ec31e04459394e03a8b68623c8ae465f9d720fc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Aug 16 23:31:32 2009 +0200

    Fix short IPv4 packets not getting detected in the decoder. Set decode event on short ipv6 packets.

[33mcommit 265038a75a11ee1290715a9889c58384c6930510[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Aug 16 20:50:09 2009 +0200

    Fix a memory read error in the BDNM search algorithms. Also (hopefully) fix a 64bit error.

[33mcommit f6a8454232db43c0d4a31b3fc306319fb5dc55b1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Aug 16 18:23:48 2009 +0200

    Layout fixes.

[33mcommit fdbd09db6cbfc457eba3b2dd8c2a5d84f9f8877c[m
Author: Jamie <jamie.riden@gmail.com>
Date:   Sat Aug 15 14:55:01 2009 +0100

    add perfcounter to pppoe

[33mcommit afa8a6766eab6781bd19e13613818801dba032f2[m
Author: Jamie <jamie.riden@gmail.com>
Date:   Sat Aug 15 14:38:26 2009 +0100

    test cases for PPPoE, ICMPv4

[33mcommit e31563f61c4602ef2ee99ba75e5cbe84446d7b70[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Aug 16 18:01:36 2009 +0200

    Fix nfq compilation.

[33mcommit 720ac9efe8acdf4cce422f75567ab77a516a36cb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Aug 16 18:01:12 2009 +0200

    Improve unittest error message if unittests are not compiled in.

[33mcommit 5501212e621165e739b0815ef83f6657a393acab[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Aug 16 11:11:19 2009 +0200

    Fix sizeof printf related compiler warnings.

[33mcommit fa5939ca912a0ffff2e9c6fac560f707b733ba86[m
Author: Brian Rectanus <brectanu@gmail.com>
Date:   Sat Aug 15 21:44:07 2009 -0700

    64 bit cleanup part2

[33mcommit 9a9b506c340fda363c0075a4e17e7ab893371c41[m
Author: Brian Rectanus <brectanu@gmail.com>
Date:   Sat Aug 15 21:40:39 2009 -0700

    64 bit cleanup

[33mcommit 2a6aa00cd84462d10889c686c02b558f414786b6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Aug 15 13:13:12 2009 +0200

    Use double for the avg counter.

[33mcommit 2e4cc2ad3de23822f1c39130efff2549199c3127[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Aug 15 13:06:18 2009 +0200

    Convert tabs to spaces in PPPoE code.

[33mcommit 8817364ef6fa503425aae13aa5880a0e0ab127b9[m
Author: Jamie <jamie.riden@gmail.com>
Date:   Sat Aug 15 11:22:19 2009 +0100

    initial PPPoE decoder commit

[33mcommit 3cf7e2e94eb5f070946888926a2a17ffd76295c9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Aug 15 12:48:18 2009 +0200

    Add two counters: avg_pkt_size and max_pkt_size.

[33mcommit 1c3c13c7eb16f0e0f5e2b598f8f006b13babf7f3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Aug 15 12:05:23 2009 +0200

    Fix missing limits.h include.

[33mcommit 8af9f902e8cbedc3c0bd5714705da8a1191e8b26[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Fri Aug 14 14:29:08 2009 +0530

    additional support for type qualifier for the stats api

[33mcommit 630a58b719a518215e23ca685ce0ce3acb071dbd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Aug 15 12:06:53 2009 +0200

    Fix unittests -u commandline option.

[33mcommit dd86b51dbc29a737f8ed3911509b476e6a0143b5[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Wed Aug 12 18:07:00 2009 -0500

    added optional option to specify signature file to load

[33mcommit 73217d60b9a8b209c3bc68fcf82bfabdd117b996[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Aug 15 10:48:43 2009 +0200

    Fix compiler warning in binsearch fix.

[33mcommit 9f78d47c2aaec42aa63d6314c8c96457dea1b251[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Aug 15 10:07:34 2009 +0200

    Further work on the stream L7 parser, it's api and the http stub implementation.

[33mcommit 08ae4482a2af2235e7465ceb1599555785356b74[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 13 18:12:58 2009 +0200

    Fix 1 byte searching in BinSearch function.

[33mcommit 9b7ee312e3ab5669fbe21e735eb8d0fbb0facca4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 5 00:04:35 2009 +0200

    Small update.

[33mcommit 5a9a23f9bb50313f03cbe4a9521d10622d339525[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 4 15:23:18 2009 +0200

    Update to the parsers.

[33mcommit 8e10844f95cc5133a7d2b8ed9cc9825a3f382153[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 3 10:28:16 2009 +0200

    Initial code of Application Layer parsing framework. Rename of L7* to AppLayer*.

[33mcommit 95f4706549d5350cba8b6f825c8b795748b1db69[m
Merge: 413efe866 4f358c5a0
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Aug 15 10:45:20 2009 +0200

    Merge branch 'victor_local'

[33mcommit 4f358c5a07c8384f78e68c9157b0e4e7c3b0aca5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Aug 15 10:45:11 2009 +0200

    Fix list handling in reassembly

[33mcommit 413efe8668f19e076aa4c88e41c36d2ec4dbd6ff[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Wed Aug 12 16:09:43 2009 -0500

    fix regression in detect-parse.c

[33mcommit fed12be6c0ed0ab832f2909dc1a699fd0600c1fb[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Wed Aug 12 00:43:58 2009 -0700

    Add some usage.

[33mcommit f28ffebf0e8e97c0d0631dd949d93159b1b66dd4[m
Author: Jason Ish <jason.ish@endace.com>
Date:   Tue Aug 11 00:47:50 2009 -0700

    Basic command line support for pcap (file, network), nfq and unit test modes.
    
    Just some basic command line support I had in my tree for setting the
    run-mode, including unit tests.  Seems fine for simple setups, but I
    think we'll want to make things setup in the config file.  Anyways, I
    like to switch from file to real device without a recompile :)
    
    Also want to check with you if the patch is formatted correctly.. I
    use git format-patch then used it as a template into mutt, which seems
    easier than the git send-email command.
    
    Thanks
    -- Jason

[33mcommit e147b87d5fc585032033f035d82b0a8cebe87fef[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 12 08:53:11 2009 +0200

    Fix small error in thread creation.

[33mcommit 8c0a5269c099096049bce57196402e81077e976c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 12 08:39:54 2009 +0200

    Fix pcap returning out of it's loop every time.

[33mcommit 53c21410b674a57e0abb1817af37acb0d08aa02e[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Aug 10 19:11:55 2009 +0530

    improve the threading api for the ids

[33mcommit d0e70309c0179fae0aacc1a2b45cf01aefbfebbd[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Aug 11 17:07:10 2009 +0530

    Implements counters for the decode module

[33mcommit fb68d1c658da50a230c04a13023513b3fda19e82[m
Merge: b7ad199c9 63d32f723
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 11 08:15:06 2009 +0200

    Merge branch 'de'

[33mcommit 63d32f723f5bcc4603035cbb5b439399e2b53291[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 11 08:10:56 2009 +0200

    Fix decode event compiler warning.

[33mcommit b7ad199c97f4bda0d8237cafd1a9c1b7eac5b479[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 11 07:49:29 2009 +0200

    Fix broken test. Fix content keyword parsing not escaping properly.

[33mcommit ebd569ca4a67bc3a8551db3137f146ee7d051227[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Mon Aug 10 17:38:33 2009 -0500

    Added unit tests to detect-content.c to show problems with escaped chars ; " \ : in snort rule lang

[33mcommit b6d55f84acf85ee9bc5582e7dc2cad754c2e7ee5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 11 07:04:05 2009 +0200

    Revert default runmode change. Fix running decode event unittests twice.

[33mcommit c90b4e6fcd3d5123c588640436b811e9a95d345c[m
Author: Breno Silva <breno.silva@gmail.com>
Date:   Mon Aug 10 21:34:37 2009 -0300

    Decode event rule

[33mcommit 54ae12b1f931567d821f4219c3bc6cbf2935e3f6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 10 10:36:30 2009 +0200

    Fixes for the stream reassembly. It turned out that using both a prev_seg pointer and a list_seg->prev pointer at the same time was not the best of ideas. So removed the prev_seg ptr. Cleaned up some copy functions too. Added some more debug statements. Made sure the L7 stuff doesn't kick in when running the unittests for reassembly.

[33mcommit e40495e31db2149be506c74158e0f996aec76051[m
Author: Victor Julien <victor@t60.(none)>
Date:   Sat Aug 8 22:08:20 2009 +0200

    Fix git merge artifact.

[33mcommit 387472185dc851067824ef58110ce95db3bd9b1b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 7 21:02:03 2009 +0200

    Small reshuffling of the unittests, fix of a buffer overflow, hide some dbg output in the stream reassembly.

[33mcommit 1f995361dde3d5703257be255f0be19b745e4b1b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 7 21:01:01 2009 +0200

    Switch to pthread_cond_timedwait in streammsg queue.

[33mcommit b7c42d55f56f4fa2392b2661f624bcbe9666bdde[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 7 21:00:18 2009 +0200

    Fix setting l7 thread name.

[33mcommit 4dc8ebac0c8671b3756a6ac3dd609e51f15b3113[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 7 20:59:56 2009 +0200

    Fix locking error causing deadlocks.

[33mcommit 994473cea087e1aa70f10476664ce0b25ef12784[m
Author: Gurvinder Singh <gurvindersinghdahiya@gmail.com>
Date:   Sat Aug 1 22:44:48 2009 +0300

    Target Based Stream Reassembly with comments

[33mcommit 25f696106c136140baaef2811f4a49fb2e39ca50[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Aug 8 10:34:04 2009 +0200

    valgrind memcheck: fix a b3g mem leak at shutdown.

[33mcommit c5b2b8c0829c0dbb493b341f29be1c906ea23195[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Aug 8 09:16:38 2009 +0200

    valgrind memcheck: fix small pool memory leaks in the unittests.

[33mcommit dbe2a86ffec7c230b77a779a4be9ad18cb908fb7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Aug 8 09:06:22 2009 +0200

    valgrind drd: fix flow mutex reinitialization in the flow subsystem when called by unittests.

[33mcommit f5eeea5b0b59aaeeea2977cf2b28480a7ef67481[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 6 08:15:20 2009 +0200

    Make sure flow isn't freed while stream msgs are still in use.

[33mcommit ad093e3021cb72c540c580630a7b45c77ccfbc3a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 6 07:34:48 2009 +0200

    Add doxygen syntaxed comments to the threadvars structure.

[33mcommit f9227969b0bce9f4125684cc7d2eae7756e2a31f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 5 13:50:29 2009 +0200

    Add some dbg output to the counters.

[33mcommit 28ad13c7f4e56c46c5c5b7fc5bdc6426e0c668c4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 5 00:37:26 2009 +0200

    Small output fix for counters.

[33mcommit 7dcd0252cae245fc94d2cbfacbab1573d49d7481[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Aug 4 22:52:30 2009 +0530

    perf task bugs fixed v3

[33mcommit ae2535c960c7c467ee42f722f37316566246588f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 4 16:26:24 2009 +0200

    Small counter output fixes.

[33mcommit ed820e22cf01e9c172491ec045a2d9fd9ce4f8ef[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Aug 4 13:45:19 2009 +0530

    perf task bugs fixed v2

[33mcommit fc8bb6c934ebbf8e92896b51db2e75ec48051e6c[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Tue Aug 4 02:41:40 2009 +0530

    perf_task_bugs_fixex_v1

[33mcommit a5fb240a4a3e12c0bebe36dc7f2d2cfa75709c67[m
Author: Anoop Saldanha <poonaatsoc@gmail.com>
Date:   Mon Aug 3 13:01:48 2009 +0530

    Changes added for the Performance Counter API

[33mcommit 175eaeca93ed307dc3d2a2701a22c11d98295cc5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 7 00:48:36 2009 +0200

    Slightly moved around the NFQ define a bit.

[33mcommit e6400bf456ffa180ea2a5838af254b1ad4ed0899[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 7 00:48:09 2009 +0200

    --enable-unittests now controls compilation of unittest code. Added crude commandline support for running unittests: ./eidps runtests

[33mcommit 462a346bf66e2b1d24ce4bc4799a8a728823f465[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 7 00:46:09 2009 +0200

    Fix printf formatting error in a pool unittest.

[33mcommit a3510f2025043086154cf0fd306659e461760181[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Thu Aug 6 17:10:19 2009 -0500

    Made NFQ optional via --enable-nfqueue, --enable-logsigs will now load local.rules in the path other fixes

[33mcommit 588b49be092bc23251a3475526e0930314c8649b[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Mon Aug 3 07:50:05 2009 -0500

    Update to libtoolize command in autojunk.sh for build on CentOS

[33mcommit 6899b3da0bc5947dd9f9622736f809defdd505b5[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Mon Aug 3 07:34:51 2009 -0500

    Updated configure.in for libpcre libpthread libpcap checking

[33mcommit 646262a755317178c76c0f47efb51db9eb5a11e1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 3 12:22:33 2009 +0200

    Small cleanups.

[33mcommit 3046cf391d303a2d0b8926e7f2e4b5b3a48e14fa[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Sun Aug 2 09:10:58 2009 -0500

    Small printf fixes to detect-flow

[33mcommit 9b4c0d057f0c89351ed08ce4f8c3e91be0eb0474[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Sat Aug 1 12:55:02 2009 -0500

    Updated flow parsing code for validation, added unit tests, fixed statless check

[33mcommit 618203089bd9d12267fb33dd63b4aaa5fc5071f8[m
Merge: 9022454a7 1dc2916c3
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Aug 1 17:40:35 2009 +0200

    Merge branch 'victor_local'

[33mcommit 1dc2916c3ae26ca11240e862d50e10b76ba22dac[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Aug 1 17:37:56 2009 +0200

    Add debug output to SetupPkt.

[33mcommit 9022454a78b7e9f22ba3bd276a4e5ee00eb48ac9[m
Merge: c35dfe1bd 7c36b315f
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 31 18:20:08 2009 +0200

    Merge branch 'victor_local'

[33mcommit 7c36b315fd266c9f4048c2d42863708c1a57b8c2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 31 18:18:21 2009 +0200

    Kill the engine if one of the threads fails to initialize.

[33mcommit 051f21e797dda4919906040502e2f503a43326eb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 31 18:16:27 2009 +0200

    Output more info about sequence gaps.

[33mcommit c35dfe1bdbca2e6d2da01c2141db87da72c04c5f[m
Merge: 8e985f3cb 9854c19a8
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 31 11:42:20 2009 +0200

    Merge branch 'victor_local'

[33mcommit 9854c19a883c6af14afbfdf3c076426dc422e797[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 31 11:39:08 2009 +0200

    Adapt Flow subsys init function to be able to initialize quietly for us in unit tests. Add flow to PPP unit tests. Fixes a floating point exception error.

[33mcommit 416bdd543a157543b98a75b473f69bf83f88fd4c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 31 11:18:16 2009 +0200

    Add unit test to pool for the bug from yesterday.

[33mcommit 8e985f3cba07e9760ffbc16fa330af01973f378c[m
Merge: 1e46d97b1 c42fa7828
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 31 10:41:11 2009 +0200

    Merge branch 'victor_local'

[33mcommit c42fa782876f5497dfbe77783d8e695fcd6f393c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 31 10:41:01 2009 +0200

    Fix wrong segment ordering, fix stream messages not being queue'd right.

[33mcommit 1e46d97b1bae2f9dd5eb0cc65bb438dd4208284a[m
Merge: 77b19f6d8 e32e5782e
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 30 16:12:36 2009 +0200

    Merge branch 'master' of oisfgit@phalanx.openinfosecfoundation.org:oisf

[33mcommit 77b19f6d82f792258b1abcd3d5a24723d0088daa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 30 16:12:10 2009 +0200

    Fix pool bug.

[33mcommit e32e5782ef32b5ee90d2cd686ed1b339a082d4c8[m
Author: famousjs <famousjs@youbantoo.localhost>
Date:   Thu Jul 30 09:39:24 2009 -0400

    Email test

[33mcommit 5322105303f27006f96e621de90c9f10d0382c3c[m
Merge: 82abed73d 3ba4d44e2
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 30 11:58:05 2009 +0200

    Merge branch 'master' of oisfgit@phalanx.openinfosecfoundation.org:oisf

[33mcommit 82abed73d3629453a5ffb6e253b78c192edbd808[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Wed Jul 29 11:49:40 2009 -0500

    Moved GITGUIDE to doc/

[33mcommit ae530c6d2f19245de2a3087cf5a9369a2e818770[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Wed Jul 29 11:30:30 2009 -0500

    Added doxygen.cfg file and doc directory

[33mcommit c53dfea379575821afb6264171e9d4c789900c5b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jul 30 11:49:26 2009 +0200

    Improve the threading code to enable a single pcap file processing thread.

[33mcommit 3ba4d44e2562d2962cdd4409a547fdab5971bb43[m
Author: famousjs <famousjs@youbantoo.localhost>
Date:   Tue Jul 28 19:37:03 2009 -0400

    Email welcome

[33mcommit cec229effae30224ead821dbf5043d0a967703c0[m
Author: famousjs <famousjs@youbantoo.localhost>
Date:   Tue Jul 28 19:32:52 2009 -0400

    Email test

[33mcommit d79b85d25131a99f8831a55dc7f9fbe0c6795d67[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Tue Jul 28 16:59:11 2009 -0500

    Small regex fix for portlists in detect-parse.c

[33mcommit d4e9ca84173e764c4d1be997f8ca5796163fdeb2[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Tue Jul 28 16:16:08 2009 -0500

    source-pcap.c comments modified for doxygen formatting

[33mcommit 689bbfdc45f6f85be4008efa0ea58fa781b178f0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 28 10:15:09 2009 +0200

    Rename all structure definitions in the "typedef struct _SomeStruct" format to "typedef struct SomeStruct_" to make the Doxygen output more useful.
    
    Remove the Trie multi pattern matcher code. It wasn't used anymore.

[33mcommit ffa013b2d83d50a1120c7a30d950458cac61e214[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 28 00:35:58 2009 +0200

    Implement flow:established and flow:stateless

[33mcommit 1ae490e6c8e84d3c7da354581bc4a392302c7ed6[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Mon Jul 27 11:07:30 2009 -0500

    Small debug fix in decode-udp.c

[33mcommit 516ca7ead5606d76ed457d5421ba676377ebbbb2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jul 26 21:19:27 2009 +0200

    Fix IPv4 and IPv6 decoders not being able to deal with ethernet packets with trailing bytes.

[33mcommit 72b430d0bb4fe927e1d01a1d98068fab68ed531d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 24 23:35:16 2009 +0200

    Small pcap cleanups.

[33mcommit 1d1f080733753e29ae9c7cb3a2c2da4620fc913b[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Fri Jul 24 16:12:16 2009 -0500

    Remove Libpcap GlobalVars from source-pcap.c

[33mcommit 2ab8291ea8da92b998ef3d24ac04fa99982c81d3[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Fri Jul 24 15:52:05 2009 -0500

    Multi-Threading capable libpcap

[33mcommit 8c3d0c054b5a24014fc163db5d27ebeeba9981a2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 24 21:22:14 2009 +0200

    Pcap fixes.

[33mcommit b5c19be29cecae3184c15513ada8f2fbecc02042[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Fri Jul 24 10:08:31 2009 -0500

    libpcap fixes for error handling and defines

[33mcommit 4715c2f5968776076ed024f1c6fdd26d9ef21703[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 24 09:31:30 2009 +0200

    Small pcap layout fixes, also made it a little bit more quiet.

[33mcommit af992242a83241220565c2fd3217e7e7dc26da9c[m
Author: Will Metcalf <william.metcalf@gmail.com>
Date:   Fri Jul 24 00:05:26 2009 -0500

    libpcap stuff v2

[33mcommit c957dc7775045d57b521a81d24648e3baada66e3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Jul 24 09:17:01 2009 +0200

    Updates & cleanups to stream & l7 stuff

[33mcommit 76581ef967aacf5eaf1aebb7122de7a6406cc4d5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 21 16:55:00 2009 +0200

    Small layout fixes to the ppp code.

[33mcommit dec11038c6dff74900c728d2ccd3e23958f965ee[m
Author: Breno Silva <breno.silva@gmail.com>
Date:   Sun Jul 19 14:02:54 2009 -0300

    PPP Support

[33mcommit 1c2240cfeb9b8eacb786d195b43200829a01e943[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 21 16:28:08 2009 +0200

    Stream reassembly update and WIP code for L7 modules.

[33mcommit 2c8df73d24a143606565db12f3ab9bffb19b26ec[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 21 13:18:29 2009 +0200

    Add decoder events to ethernet and sll decoding.

[33mcommit eb0a5d87624382258de97667e71d54855cb4fe26[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 21 13:16:17 2009 +0200

    Add Address copy macro.

[33mcommit de1639e263757cbecafc98873cf9f23b5085cf2a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Jul 21 13:15:17 2009 +0200

    Enforce max pool size.

[33mcommit 51a9e36e10664ebe3f2fff0266c38771c5a761b5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jul 1 16:51:01 2009 +0200

    Remove vips references. Rename to eidps.

[33mcommit 8bc0a2e465eddd46c991018051d71c22d5b04e1e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jun 27 10:09:56 2009 +0200

    Add tests for pool.

[33mcommit 668e9514d7fb0dd67ea1505e5bafb75a8da6684e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jun 27 10:06:10 2009 +0200

    Pool update. Stream reassembly start.

[33mcommit 8397413942eed806ef8389b8a3d4ef576e851611[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 24 19:01:34 2009 +0200

    Comment updates.

[33mcommit 9c7f5afa793e2a5cc69acdc3c0192588264bba9a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Jun 24 12:41:45 2009 +0200

    Large update: pcap support, threading fixes, initial stream tracking, time handling, pool support, runmodes, decoders added, autojunk update.

[33mcommit a0b390c54131a47a552a28d982d701a3b890cb49[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Mar 23 15:22:47 2009 +0100

    Fix pktvar and http uri memory leaks.

[33mcommit 930aa4e038e9ba39342398ec9fa4ded93ddc35da[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Mar 14 08:52:00 2009 +0100

    Fix ip-only again: flowbit sigs were not handled correctly and tcp/udp sigs with ports set also were not.

[33mcommit a93d51fcde19937c5348ef9618054ba27c294779[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Mar 13 17:44:20 2009 +0100

    IP only rule loading optimization and counting fix.

[33mcommit 84aa365a3be0c972e0bb498496af55e6e6bcedd9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 5 19:54:04 2009 +0100

    Fix iponly matching.

[33mcommit 766ebed4d43bd712ee6f3ca885b906b248805c1b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 5 14:37:14 2009 +0100

    Fix Flowvar idx retrieval.

[33mcommit 2ecc7f2b4bfcba94a045f8dc911d7a2ac95ed652[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Mar 5 14:21:23 2009 +0100

    Use different rule grouping settings for toclient and toserver. Fix flowbits accounting.

[33mcommit ff4b5a5db7f8a92399d2dff4569ecaadc1f1dd66[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Mar 4 19:21:30 2009 +0100

    Add support for flowbits.

[33mcommit 657be002d188723de1f00a71f1d5949064ebe181[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Feb 27 18:21:07 2009 +0100

    Big detection engine update: scan improvements, b2g/b3g updates, bloom fixes, iponly detection implementation, dsize/flow grouping.

[33mcommit e877d69a2ddf34b3157076a008576f70ea4f4a89[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 5 21:03:58 2009 +0100

    Add compare func to hash table, fix remove in hashlist table.

[33mcommit 5df5b35e9023956e860be697182ab92f8a187374[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Feb 5 20:41:04 2009 +0100

    Put all globals in the detection engine ctx. Add HashList type, a hash that also stores the items ina list to it can be traversed. Many cleanups.

[33mcommit b2eb954099859fd89f7465692ed97d111bb1c8af[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Jan 29 19:39:43 2009 +0100

    Add b3g 3gram BNDM pattern matcher. Fix multi queue nfq initialization. Improve speed of b2g and wumanber.

[33mcommit ec39f5446cf31c450dd373113c39d0ac98f38fdc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jan 25 19:44:17 2009 +0100

    Fix rule tree update. Fix bloomfilter error in b2g.

[33mcommit 1c0ad1d4152c5a27a520c6f46fb9d698399a984e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Jan 25 12:54:51 2009 +0100

    Add implementation of the Simple BNDM 2gram pattern matcher algorithm.

[33mcommit efb10fc0d60399408fcb7d167e547d505757971d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jan 19 15:31:58 2009 +0100

    big update

[33mcommit 21364b34dcff38ff583bbd268c64e4a167df85a2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 23 07:32:31 2008 +0100

    Fix uricontent scan for copied siggroupheads.

[33mcommit 69e056e33fd403cbf07c6dd31b576780ddb17790[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Dec 22 17:12:58 2008 +0100

    Add the scanning to uricontent as well.

[33mcommit 85675ba066cbecad4c1a69b07e78c36133c86d7e[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Thu Dec 11 09:30:52 2008 -0600

    added fix for compiler warning in reject code

[33mcommit fedcc397de8aa4ca478c1387b735b601eb444ed9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Dec 11 13:29:51 2008 +0100

    Detection engine improvement: don't run pattern matcher on packets with payload sizes less that the biggest content we need to match. Add some extra stats.

[33mcommit 0250642cc01a8acd37a9c79f782686b62787b94a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 10 16:34:23 2008 +0100

    Fix negated variables, add tests.

[33mcommit dce2c12915f9884722c9cc71b6538e0caae5710f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 10 11:01:12 2008 +0100

    Add Scan before Search to the detection engine.

[33mcommit 4c4862d83805680dbb3dd437326439bdb92b8582[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Dec 3 11:51:30 2008 +0100

    Improve logging, add alert-output module, at module exit stats, add HTTP POST uri capture.

[33mcommit 724d942688e25e48ff667bcd79800e5fe4f08582[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Dec 2 09:08:38 2008 +0100

    Fix port check.

[33mcommit 43571f21a44533e897fb00ca3c1c9d62258aafb4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Nov 25 16:07:11 2008 +0100

    default to all.rules

[33mcommit e0ed51d0493eba78c517fb718a141dbfe57baee4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Nov 21 13:44:45 2008 +0100

    Small fixes and dbg additions.

[33mcommit b064d0f43599caf6bf079eecb6d9430545b36328[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 20 14:05:53 2008 +0100

    Fix sig unittests

[33mcommit 9b077103892cdf888168e3b135957537121143fc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 20 14:05:26 2008 +0100

    Add hashing and bloomfilter api's: now include buildsys update

[33mcommit 49117f5e645ce09ed67d4812497bf74862681b1f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Nov 20 14:05:03 2008 +0100

    Add hashing and bloomfilter api's

[33mcommit 27f236778a93e824517b84076d39d0463778d477[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Nov 19 15:21:28 2008 +0100

    make output more quiet

[33mcommit 298d4be7bbe107d8504f0a95077295aa55f434af[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 31 10:23:45 2008 +0100

    Threading update for tunneling and high load

[33mcommit 4b6a8715fd5293d1ecd1660bc408fc77dd1cb235[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 31 10:21:56 2008 +0100

    Fix packets getting stuck in NFQ under high load.

[33mcommit c4f2fe4bd775152ed275d4383279c0487b7fb4f2[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 31 09:54:29 2008 +0100

    Implement per packet variables and switch the http stuff to it.

[33mcommit edf8650a7e3114d1b9279ead99065a01471fbba6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Oct 27 14:46:54 2008 +0100

    Tunnel update.

[33mcommit 835d609fc519de7971358f05a49b6271145add82[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 24 10:18:35 2008 +0200

    Small format fix.

[33mcommit 8cda70668c714437ec3aad976c8be16cbbb65462[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Oct 24 10:00:36 2008 +0200

    Tunnel fixes.

[33mcommit 28d9415e375b96a102b0cd07fc14b48b8e38555d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Oct 23 17:31:08 2008 +0200

    New approach to tunnel decoding.

[33mcommit 982542cde6b037cea35f7bc788837b03164d9581[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 22 18:29:34 2008 +0200

    New approach for the empty packet queue issue. Now we just wait until it's no longer empty.

[33mcommit 2f6a1860780771c428eb85eec622cb855b96263f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 22 13:22:00 2008 +0200

    Alloc a new packet if the queue is empty. Fix this.

[33mcommit a454fe4fb7559ad337338a68f6de353681ea58ca[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 22 11:10:46 2008 +0200

    Small fixes

[33mcommit 274d92478e2564e8fe468b09c92974269a1735f4[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Oct 22 11:10:36 2008 +0200

    Alloc a new packet if the queue is empty.

[33mcommit da3125e88828c0385b68b898c29ad68af4cdfb96[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Oct 21 11:11:49 2008 +0200

    Fix a Floating point exception error.

[33mcommit 817d0e085505ad12c1e8d07fa6eba0cf0f90caa4[m
Author: William Metcalf <wmetcalf@localhost.localdomain>
Date:   Sun Sep 28 12:45:02 2008 -0500

    added macros for ICMP defines

[33mcommit 70060851950fd00f87ed9a3031767aef24fc432c[m
Author: William Metcalf <wmetcalf@localhost.localdomain>
Date:   Sun Sep 14 18:13:25 2008 -0500

    udp decoding added icmp unreachables added to reject

[33mcommit 3f7195454b05e5fb07cbb13dea115b3d0e5e63cb[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Oct 19 11:26:51 2008 +0200

    Big detection engine update.

[33mcommit ea5bb1c8d57041182da3b62ea678bb4772bfb887[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 16 11:26:16 2008 +0200

    Small update and new tests for wu-manber.

[33mcommit ebf41c3b1e19a06a534814bb13e4de1a644c06dc[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 16 09:28:21 2008 +0200

    Remove obsolete decode-http files.

[33mcommit 3c1cd0729623d81057f67b4a3baebb3840859db6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 16 00:14:25 2008 +0200

    todo file update

[33mcommit 1cb274a39ad2bcc47f8138ea922d6342c1499e63[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 15 18:12:21 2008 +0200

    Update build sys

[33mcommit aecda426bf03b67a58e7bd35729e870c416ba3c9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 15 18:11:23 2008 +0200

    Update the wu-manber pattern matcher: it supports dynamic hash sizes and improves init times.

[33mcommit 54ffe2053eb463164350167a8b4ca9f362d9d0a6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 15 18:09:01 2008 +0200

    Large detection engine update.

[33mcommit 8b3d06fd9202719efc0527e13d2bc68bc68eb987[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Sep 15 18:08:17 2008 +0200

    Rename some detection engine related files.

[33mcommit f3a94413db22ec1c8140d27eaf4da51ff9066a19[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Sep 4 14:06:00 2008 +0200

    Properly support 'alert ip' rules. Add support for handling ip only rules differently.

[33mcommit dee5ab1aa3080f50fc12cdec5584a273d48adae9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 3 20:28:48 2008 +0200

    Fix uricontent mpm ctx comparison.

[33mcommit fed6926809a4c90b61bd94a1e225ef29af5eb40d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 3 17:59:36 2008 +0200

    Small cleanups

[33mcommit dc48c58473b9c5435867e1b0674220f4952cf74b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Sep 3 17:55:19 2008 +0200

    Switch to using a detection engine ctx.

[33mcommit 171c8c777df856a32f29d8c96b475320e3ab9ea3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 2 14:18:20 2008 +0200

    Group signatures by protocol.

[33mcommit 2c8e6a7c5aaf3b26fa640dd2213e70e114976257[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 2 14:17:21 2008 +0200

    Allow CFLAGS to be overridden by ./configure.

[33mcommit e16e3336010048c713742322da1a0efcc8506b68[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 2 12:07:02 2008 +0200

    Add GIT guide.

[33mcommit 3446566e449815f180ba31b610d45f9f37aba624[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 2 12:01:11 2008 +0200

    Style cleanups for resets.

[33mcommit 45f83f7636c7af04c1c490ffaec91239d77acf04[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 2 11:35:37 2008 +0200

    branching test

[33mcommit 0ffa1c246563ce0fc1d23a3ee0f2a59a77c20892[m
Author: William Metcalf <wmetcalf@localhost.localdomain>
Date:   Mon Sep 1 22:34:20 2008 -0500

    updates for configure.in, added reject code, some decode stuff for tcp

[33mcommit cdce794124a6df1b96e926cba3641e77ea26ef26[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 2 00:31:00 2008 +0200

    Update todo

[33mcommit 9e5049cddc159045a926d6187223fa6ee653b95d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 2 00:30:36 2008 +0200

    Improve memory handling and parsing of the msg rule keyword.

[33mcommit eb1c4e4987bb3f4147cf75f0788d7792f2e325e6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 2 00:29:54 2008 +0200

    Large update to the detection engine. Greatly improve initialization speed and memory usage.

[33mcommit b1a13c89bd20263452f47434558e8df6c1f41d0f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 2 00:28:03 2008 +0200

    Improve memory handling of the pcre rule keyword.

[33mcommit a603577132f8081e955755839aeaaf1df646a3db[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Sep 2 00:26:40 2008 +0200

    Small update to the pcre used for signature parsing.

[33mcommit 4484837aa89f5feb0d645eacc43be90977710c6c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 25 01:17:24 2008 +0200

    Update todo.

[33mcommit 0489370f5bdeacaa4bd2fea6c35087f4d095073d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 25 01:17:09 2008 +0200

    Big speedup of the initialization code for signatures. Contains WIP code as well.

[33mcommit ac60f32197bb09fca134d771d75e2403e33c096c[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 25 00:53:53 2008 +0200

    Make nocase keyword initilization failure fatal and slightly improve the error message it prints.

[33mcommit 84087e70776ac0dae795f0c5ca9c16d10a74c233[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 25 00:52:25 2008 +0200

    Fix a memory error in the addresslist parsing code. Add a functions aimed at speeding up the signature initialization code.

[33mcommit b50fc8aecdedee3054f027ea5bb0b919c3829da0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 25 00:50:57 2008 +0200

    Speed up appending of sigs to a sig group head by using a tail ptr.

[33mcommit 0726efead944dbff375612680fd39e2a154830ec[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Aug 23 23:22:28 2008 +0200

    Support address lists.

[33mcommit f2fbf395b802be7f4239e9018318e5b9074362df[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Aug 23 22:38:04 2008 +0200

    Fix mixed up CI and CS searching in WuManber. Add better tests.

[33mcommit 69162f9cd02a9ffcdce167ab293687645bf4470e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 22 09:26:23 2008 +0200

    Fix issue with log-httplog where it logged uri's of previous packets because of a broken uri check.

[33mcommit 05fd319f6c00df2e5a91c955de1ecb4de1815784[m
Author: Victor Julien <victor@inliniac.net>
Date:   Fri Aug 22 00:29:15 2008 +0200

    Add log-httplog module that logs http request uri's, hosts and useragents to a per line text format.

[33mcommit eaaeb30cd611e05ad24dbb79e1eb00482096aa8e[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 21 22:50:52 2008 +0200

    Add noalert keyword for use with sigs that are used for capturing only.

[33mcommit 63bb7771007789916a118bdb6a447c2911c768b3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 21 21:55:28 2008 +0200

    Use a default prio of 3.

[33mcommit f0ed41fb0a1788fc588d4b83ce1a55a69e59fa2b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 21 21:41:42 2008 +0200

    Support priority keyword, add priority to alert-fastlog.

[33mcommit 867d493d7f84b9cee25a2ef55ce717c5473d5237[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 21 19:48:26 2008 +0200

    Source NFQ update... less hackish, but still needs work as soon as we know how to do configuration.

[33mcommit dc224cb2d260e03adb8219d828cd7ef7acdb06e9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 21 15:05:12 2008 +0200

    Large update containing the first step to making the detection engine use rule groups. Address based rule groups are now implemented.

[33mcommit 9afa171d7101e261d79ca81a7dfb23e4f22c5d17[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Aug 16 22:36:58 2008 +0200

    cosmetic update of alert-fastlog Will

[33mcommit a7ee4c5b1b1df2eb8b0fa7194945f1a1485cd4af[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Aug 16 22:17:34 2008 +0200

    Update todo of alert-fastlog

[33mcommit 3df4b7da2b4ed7dc9356cde161777195b767c0b1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Aug 16 21:32:57 2008 +0200

    Set p->proto and add TCP, UDP, etc macros.

[33mcommit b7bc35e8b2a53320cd907c129fdeab70e3bfa001[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Aug 16 15:55:41 2008 +0200

    support for 'negation' in addresses and the 'any' special case.

[33mcommit 876f0c95c7483a8ba84437ac11297290af3e1144[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Aug 9 12:52:30 2008 +0200

    Signature rule keywords are case insensitive. Support that.

[33mcommit d036264f8089aaf2dfe9d875f5ba0edfc3c386e7[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Aug 9 11:09:36 2008 +0200

    Cleanup signature parsing and other detect.c parts.

[33mcommit f1db87276cfa5565524b60a9a13f41a8fd94f4fa[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 7 21:31:43 2008 +0200

    Start on addr and proto parsing in rules.

[33mcommit 6c1f2071be791c5119dc2dfd278253cfdf5ad5c8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Thu Aug 7 19:58:06 2008 +0200

    Add unittest registration to the threading modules api.

[33mcommit cd19ee8bf232ab3c559e8b612c4b4bf44d1fbc69[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 6 22:27:49 2008 +0200

    Fix crash when to_client traffic was scanned for uricontent when there was no uri available...

[33mcommit f77c654d13f71fd4b8de8abc1ad5153fd5dce47d[m
Author: Victor Julien <victor@inliniac.net>
Date:   Wed Aug 6 11:09:06 2008 +0200

    Further develop the address api. Added dynamic group head support.

[33mcommit 3ec5f6672986d520d37300d9b5d382c7a6bff815[m
Author: Victor Julien <victor@inliniac.net>
Date:   Tue Aug 5 00:09:36 2008 +0200

    Fix some address code related compiler warnings.

[33mcommit d2b089f359208feefb5e772110b52ba589b6806a[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 4 22:30:02 2008 +0200

    Fix including the header for htonl breaking the code.

[33mcommit bbbb644dea34c0719c012ddd2efda92ca6e834e6[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 4 22:22:27 2008 +0200

    Add error checking to CIDRGet and make it quiet.

[33mcommit a798f84bf505557c3cc6648ff91cdfe086473678[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 4 22:15:43 2008 +0200

    Add simple test report to unittesting.

[33mcommit 151512a45c8ea27a05c3d61198dd74d29abab3a3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Aug 4 22:00:36 2008 +0200

    Split up address code in ipv4 and ipv6 specific files. Cleanups.

[33mcommit 41647a54309f5e3528d92eecc2ea9c1090543db0[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Aug 3 23:36:09 2008 +0200

    small fixes for Wills patch

[33mcommit 559edc01e38c9bfd72d22a90b7c056373385b4db[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Sun Aug 3 16:26:44 2008 -0500

    NFQUE drop support added with ident of 4 :-(

[33mcommit 37e31e024088b4e686554e728feb44353f4325c8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Aug 3 23:28:46 2008 +0200

    Implement the address code for IPv6 as well.

[33mcommit b8ad4adf81899965ae7b3383d92f73eb602efe02[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Aug 3 14:10:26 2008 +0200

    complete rename of address2 to address

[33mcommit 9c321af65e763b91f993b8f3e8bdb4b16c099fe5[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Aug 3 14:09:54 2008 +0200

    Rename address2 to address

[33mcommit e746a40d2e34b7d921b403424a3557c0362f88cf[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Aug 3 14:06:40 2008 +0200

    No longer track Makefile.in files in Git.

[33mcommit 28b0d82169cfef500a855db5de7cff56a154c3e1[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Aug 3 14:04:32 2008 +0200

    Remove partial and broken address handling implementation now address2 is working.

[33mcommit fad31a43c22c364ea53b44f4bdd24f212583240b[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sun Aug 3 14:00:54 2008 +0200

    WIP addressing handling. Big progress. Address groups for ipv4 more or less getting shape.

[33mcommit 3488cf1a938dba1f022ca1d2ad2fb8ea1f614c82[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Sat Aug 2 15:44:16 2008 -0500

    fixed sig written with ?<http_uri

[33mcommit 87411594e2bffe4b349f2a7454b2a35dd6f881e5[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Sat Aug 2 14:43:27 2008 -0500

    groups fixed for pcre < 7

[33mcommit be5e5ffa5aae130002dd3f8b49af5cb0faa7c929[m
Author: William Metcalf <william.metcalf@gmail.com>
Date:   Sat Aug 2 14:57:37 2008 -0500

    adding autojunk.sh

[33mcommit 7aada782a482a3f918b69ee938bcd88d456dfca8[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Aug 2 22:21:30 2008 +0200

    WIP address matching stuff

[33mcommit 84588f4216398af64f6441a72bbc8d3b179550dd[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 28 18:56:47 2008 +0200

    update authors

[33mcommit da1c715e282ddea74eb5a638ac22c771b6af4a4f[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 28 15:34:59 2008 +0200

    test commit

[33mcommit ec37171d367c7b36e967bdff15db46fb6e246177[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 28 00:44:18 2008 +0200

    Add copyright msg (test commit).

[33mcommit bab4b623762b5eb562fcda2abaa5ffa9f946f0c3[m
Author: Victor Julien <victor@inliniac.net>
Date:   Mon Jul 28 00:02:53 2008 +0200

    Initial add of the files.

[33mcommit 1cfa8dd2e5f6661fa75729eb73076f097bd6e3a9[m
Author: Victor Julien <victor@inliniac.net>
Date:   Sat Jul 4 00:45:10 2009 +0200

    test

[33mcommit 8966243aac56017dd8c7e00972e62a47b7a62697[m
Author: famousjs <famousjs@youbantoo.(none)>
Date:   Fri Jul 3 18:40:48 2009 -0400

    Added welcome file
